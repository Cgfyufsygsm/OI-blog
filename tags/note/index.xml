<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>笔记 on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/note/</link>
        <description>Recent content in 笔记 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Wed, 27 Jul 2022 20:28:51 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/note/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>生成函数胡扯</title>
        <link>https://oi.imyangty.com/note-gf/</link>
        <pubDate>Wed, 29 Jun 2022 17:20:09 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-gf/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg28.webp" alt="Featured image of post 生成函数胡扯" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;准备退役了还不会生成函数打算来胡扯一点东西。&lt;/p&gt;
&lt;p&gt;应该 safe for beginners.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《具体数学》退役后还是想抽空后慢慢看看。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/command-block/sheng-cheng-han-shuo-za-tan&#34;&gt;command_block：多项式计数杂谈&lt;/a&gt; yyc 您真的强 &lt;img src=&#34;https://啧.tk/ll&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/RabbitHu/p/9178645.html&#34;&gt;胡小兔：趣谈生成函数 =v=&lt;/a&gt; 讲的非常生动！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/zyxxs/x-yi-x-jiang-tan-sheng-cheng-han-shuo-ru-men&#34;&gt;x义x：【x义x讲坛】生成函数入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/EntropyIncreaser/jiu-wen-bu-dang-2018731-post&#34;&gt;Elegia：旧文补档 2018.7.31——浅谈生成函数 (Generating Function)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/zyxxs/x-yi-x-jiang-tan-sheng-cheng-han-shuo-zai-ru-men&#34;&gt;x义x：【x义x讲坛】生成函数再入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xyix.github.io/posts/?postname=combinatorics&#34;&gt;x义x：组合结构符号化学习笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/433578651&#34;&gt;silverxz：生成函数exp的组合意义&amp;amp;小球放盒子的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢他们&lt;img src=&#34;https://啧.tk/qq&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;记号约定&#34;&gt;记号约定&lt;/h2&gt;
&lt;p&gt;考虑到这篇文章的受众可能既包含 OIer 也包含一些文化课同学，故在此处列出一部分前置记号说明。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;span class=&#34;math inline&#34;&gt;\(\langle a_0, a_1, a_2,\cdots\rangle\)&lt;/span&gt; 表示数列，用 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 表示其的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 项（注意我们从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 开始标号）。&lt;/li&gt;
&lt;li&gt;定义正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的阶乘 &lt;span class=&#34;math inline&#34;&gt;\(n! = n\times(n-1)\times(n-2)\times\cdots \times 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;定义正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的双阶乘 &lt;span class=&#34;math inline&#34;&gt;\(n!! = n\times (n-2)\times (n-4)\times\cdots = \prod\limits_{n-2i\ge 1}(n-2i)\)&lt;/span&gt;，即不超过这个正整数且与它有&lt;strong&gt;相同奇偶性&lt;/strong&gt;的所有正整数乘积。&lt;/li&gt;
&lt;li&gt;定义下降阶乘幂 &lt;span class=&#34;math inline&#34;&gt;\(x^{\underline{k}} = x\times (x-1)\times (x-2)\times\cdots\times (x-k+1)\)&lt;/span&gt;，读作“&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次下降幂”，定义上升阶乘幂 &lt;span class=&#34;math inline&#34;&gt;\(x^{\overline k}= x\times (x+1)\times (x+2)\times\cdots(x+k + 1)\)&lt;/span&gt;，读法类似。&lt;/li&gt;
&lt;li&gt;定义组合数（二项式系数） &lt;span class=&#34;math inline&#34;&gt;\(\dbinom n m\)&lt;/span&gt;（或记作 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm C_n^m\)&lt;/span&gt;）为从包含 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个互异元素的集合中选出大小为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的子集的方案数，其中 &lt;span class=&#34;math inline&#34;&gt;\(n,m\in\mathbb N\)&lt;/span&gt;（后文会给出广义二项式系数的定义），计算方式为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom n m = \dfrac{n!}{m!(n-m)!} = \dfrac{n^{\underline m}}{m^{\underline m}}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;对于形式幂级数（可以暂时理解为多项式函数）&lt;span class=&#34;math inline&#34;&gt;\(F(x) = c_0 + c_1x + c_2x^2 + \cdots\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 项系数 &lt;span class=&#34;math inline&#34;&gt;\(c_n\)&lt;/span&gt; 下文记作 &lt;span class=&#34;math inline&#34;&gt;\([x^n]F(x)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;求和符号 &lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{x=1}^nf(x) = f(1) + f(2) + \cdots + f(n)\)&lt;/span&gt;，求积符号 &lt;span class=&#34;math inline&#34;&gt;\(\prod\limits_{x=1}^nf(x) = f(1)\times f(2)\times\cdots f(n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;记指数函数 &lt;span class=&#34;math inline&#34;&gt;\(\exp(x)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(e^x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\([P]\)&lt;/span&gt;（艾弗森括号）指：若命题 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为真，则 &lt;span class=&#34;math inline&#34;&gt;\([P] = 1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\([P] = \begin{cases}1&amp;amp;P\\0&amp;amp;\neg P\end{cases}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;为了方便，&lt;span class=&#34;math inline&#34;&gt;\(0^0= 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\{x:P(x)\}\)&lt;/span&gt; 表示所有 &lt;span class=&#34;math inline&#34;&gt;\(P(x)\)&lt;/span&gt; 为真的元素 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 构成的集合，&lt;del&gt;好像在文化课数学里面我们一般写作 &lt;span class=&#34;math inline&#34;&gt;\(\{x\mid P(x)\}\)&lt;/span&gt;&lt;/del&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时读懂本文需要一定的分析基础（可能高中知识差不多了）和（约等于没有的）抽代基础，以及一些必要的组合数学常识。&lt;/p&gt;
&lt;p&gt;笔者的分析和抽代约等于没学，所以可能不是特别的严谨，如有谬误请指出，不胜感谢！&lt;/p&gt;
&lt;h2 id=&#34;生成函数的引入&#34;&gt;生成函数的引入&lt;/h2&gt;
&lt;h3 id=&#34;lead-in&#34;&gt;Lead-in&lt;/h3&gt;
&lt;p&gt;本段内容如果看不懂，可以先读完后面的两个小问题后再回来读，&lt;del&gt;应该就能看懂了&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;首先大家在文化课课堂上（或者在小学奥数课堂上）学过这个东西（二项式定理）： &lt;span class=&#34;math display&#34;&gt;\[
(1+x)^n = \sum_{i=0}^n\binom n i x^i
\]&lt;/span&gt; 现在当我们需要求 &lt;span class=&#34;math display&#34;&gt;\[
\binom n 0 + \binom n 1 + \binom n  2+ \cdots +\binom n n
\]&lt;/span&gt; 时，我们知道可以代入 &lt;span class=&#34;math inline&#34;&gt;\(x=1\)&lt;/span&gt; 然后直接得到答案为 &lt;span class=&#34;math inline&#34;&gt;\(2^n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;相当于我们可以拿一个“函数”来描述一个数列，然后将对于这个数列的操作变成对这个函数的代数运算（积分，求导，加，乘，etc.）。于是可以将定义在&lt;strong&gt;代数对象&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 上的一批&lt;strong&gt;核函数&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(k_n(x)\)&lt;/span&gt; 附在数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle a_0,a_1,a_2,\cdots\rangle\)&lt;/span&gt;（可以无穷）的每一项上。对于 &lt;span class=&#34;math inline&#34;&gt;\(a_0,a_1,\cdots\)&lt;/span&gt; 定义其&lt;strong&gt;生成函数&lt;/strong&gt;为形式幂级数 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(x) &amp;amp;= a_0k_0(x) + a_1k_1(x) + \cdots \\
&amp;amp;= \sum_{i\ge 0}a_ik_i(x)
\end{aligned}
\]&lt;/span&gt; 若我们将 &lt;span class=&#34;math inline&#34;&gt;\(k_n(x)\)&lt;/span&gt; 定义为 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt;，则定义数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle a_0,a_1,\cdots\rangle\)&lt;/span&gt; 的&lt;strong&gt;普通生成函数（OGF, ordinary generating function）&lt;/strong&gt;为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(x) &amp;amp;= a_0 + a_1x + a_2x^2 + a_3x^3 + \cdots \\
&amp;amp;= \sum_{i\ge 0}a_ix^i
\end{aligned}
\]&lt;/span&gt; 所以我们将数列的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 项附上代数对象 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 次幂，得到了这样一个幂级数（可暂时理解为多项式）。&lt;/p&gt;
&lt;p&gt;注意到，这里的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 我没有使用“未知数”这一词汇，而这个像多项式一样的东西我是使用的“形式幂级数”。&lt;/p&gt;
&lt;p&gt;是因为幂级数实际上为一个很宽泛的概念，只要 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 有定义乘法运算，我们就可以拿 &lt;span class=&#34;math inline&#34;&gt;\(x^k\)&lt;/span&gt; 来表示“幂次”，得到一个幂级数。&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 不一定需要是数字，阿猫阿狗也可以，在生成函数里面我们可以把它只当作一个“占坑”的，所以其具体的“值”没有意义，“函数 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 的函数值”也没有意义。所以在分析生成函数的时候不需要纠结其收敛性。&lt;/p&gt;
&lt;p&gt;上面的东西可能有点抽象，但是问题不大，可以接着先往下看。&lt;/p&gt;
&lt;h3 id=&#34;几何级数定理&#34;&gt;几何级数定理&lt;/h3&gt;
&lt;p&gt;考虑一个最简单的数列：&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,1,1,\cdots\rangle\)&lt;/span&gt;，这个数列的生成函数显然为 &lt;span class=&#34;math inline&#34;&gt;\(F(x) = 1 + x + x^2 + x^3 + \cdots\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;做一下平移变形：&lt;span class=&#34;math inline&#34;&gt;\(xF(x) = x + x^2 + x^3 + \cdots\)&lt;/span&gt;，然后上下两式相减，发现 &lt;span class=&#34;math inline&#34;&gt;\(x+x^2+x^3+\cdots\)&lt;/span&gt; 都消去了，只剩下 &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \frac{1}{1-x}
\]&lt;/span&gt; 这个东西看着比较的逆天（？）因为你会发现 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x\notin(-1,1)\)&lt;/span&gt; 的时候根本不是收敛的，但是由于我们只是在分析生成函数，&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 只是一个代数对象，我们没有必要在乎其收敛性。（另，上面的式子也同时可以使用等比数列求和公式来思考）&lt;/p&gt;
&lt;p&gt;所以有&lt;strong&gt;几何级数定理&lt;/strong&gt;成立： &lt;span class=&#34;math display&#34;&gt;\[
1+x+x^2+x^3+\cdots = \sum_{i\ge 0}x^i = \frac{1}{1-x}
\]&lt;/span&gt; 同时你注意到，&lt;span class=&#34;math inline&#34;&gt;\(F(x) = 1 + x + x^2 + x^3 + \cdots\)&lt;/span&gt; 是一个含有无穷求和的表达式，有些时候是不易于分析的，而 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-x}\)&lt;/span&gt; 这种有限的形式非常的简洁优美，下文我们称其为&lt;strong&gt;封闭形式&lt;/strong&gt;。下文中我们会进行更深的阐述。&lt;/p&gt;
&lt;h3 id=&#34;多米诺骨牌问题&#34;&gt;多米诺骨牌问题&lt;/h3&gt;
&lt;p&gt;《具体数学》上利用这道例题较自然地引入了生成函数。我们再次强调：&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 只是一个代数对象，而不是“未知数”，这里我们将使用一些更具象的符号来表达。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：使用 &lt;span class=&#34;math inline&#34;&gt;\(1\times 2\)&lt;/span&gt; 的骨牌覆盖 &lt;span class=&#34;math inline&#34;&gt;\(2\times n\)&lt;/span&gt; 的棋盘，有多少种方案？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨先设方案数为 &lt;span class=&#34;math inline&#34;&gt;\(F_n\)&lt;/span&gt;，然后约定 &lt;span class=&#34;math inline&#34;&gt;\(F_0 = 1\)&lt;/span&gt;（什么都不放）。&lt;/p&gt;
&lt;p&gt;如果你熟悉基本的组合数学，那么不难发现这东西就是斐波那契数列（平移一位的结果），那么接下来我们看看这个东西能用生成函数以什么方式解决。&lt;/p&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(\tiny\begin{array}{|c|}\hline ~~\\\\\hline\end{array}\)&lt;/span&gt; 为一个竖骨牌，&lt;span class=&#34;math inline&#34;&gt;\(\tiny\begin{array}{|c c|}\hline&amp;amp;&amp;amp;\hline\end{array}\)&lt;/span&gt; 为一个横骨牌，则我们显然知道 &lt;span class=&#34;math inline&#34;&gt;\(2\times 3\)&lt;/span&gt; 可以这样来摆： &lt;span class=&#34;math display&#34;&gt;\[
\def\boxA{\tiny\begin{array}{|c|}\hline ~~\\\\\hline\end{array}\normalsize}
\def\boxB{\tiny\begin{array}{|c c|}\hline\\&amp;amp;&amp;amp;\hline\\\hline\end{array}\normalsize}
\def\boxb{\tiny\begin{array}{|c c|}\hline&amp;amp;&amp;amp;\hline\end{array}\normalsize}
\boxA\boxA\boxA, \boxA\boxB, \boxB\boxA
\]&lt;/span&gt; 一共三种方案。&lt;/p&gt;
&lt;p&gt;对摆放方案定义“加法”，表示摆放方案的&lt;strong&gt;并列&lt;/strong&gt;，则用&lt;strong&gt;无穷求和&lt;/strong&gt;罗列出所有的摆放方案如下： &lt;span class=&#34;math display&#34;&gt;\[
\def\boxA{\tiny\begin{array}{|c|}\hline ~~\\\\\hline\end{array}\normalsize}
\def\boxB{\tiny\begin{array}{|c c|}\hline\\&amp;amp;&amp;amp;\hline\\\hline\end{array}\normalsize}
T = \vline + \boxA + \boxB + \boxA\boxA +\boxA\boxA\boxA + \boxA\boxB + \boxB\boxA + \cdots
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(\vline\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(2\times 0\)&lt;/span&gt; 的空摆放。&lt;/p&gt;
&lt;p&gt;若我们再对摆放方案定义“乘法”，表示顺次拼接，如 &lt;span class=&#34;math inline&#34;&gt;\(\def\boxA{\tiny\begin{array}{|c|}\hline ~~\\\\\hline\end{array}\normalsize}\def\boxB{\tiny\begin{array}{|c c|}\hline\\&amp;amp;&amp;amp;\hline\\\hline\end{array}\normalsize}\boxA\boxB = \boxA\times\boxB\)&lt;/span&gt;。&lt;em&gt;注意其没有交换律&lt;/em&gt;，但是满足对加法的分配律：&lt;span class=&#34;math inline&#34;&gt;\(S_1\times (S_2+S_3) = S_1\times S_2 + S_1\times S_3\)&lt;/span&gt;。意义即为先摆 &lt;span class=&#34;math inline&#34;&gt;\(S_1\)&lt;/span&gt; 然后再摆 &lt;span class=&#34;math inline&#34;&gt;\(S_2\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(S_3\)&lt;/span&gt; 和先摆 &lt;span class=&#34;math inline&#34;&gt;\(S_2\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(S_3\)&lt;/span&gt; 再在左边加 &lt;span class=&#34;math inline&#34;&gt;\(S_1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到此时乘法有&lt;strong&gt;单位元&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(\vline\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(S\times\vline= S\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\vline\times S = S\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;下面我们就可以将 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 进行强力化简——注意到除了 &lt;span class=&#34;math inline&#34;&gt;\(\vline\)&lt;/span&gt; 之外所有的方案都可以表述为 &lt;span class=&#34;math inline&#34;&gt;\(\tiny\begin{array}{|c|}\hline ~~\\\\\hline\end{array}\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(\tiny\begin{array}{|c c|}\hline&amp;amp;&amp;amp;\hline\end{array}\)&lt;/span&gt; 乘上个什么，因为他们的开头要么是 &lt;span class=&#34;math inline&#34;&gt;\(\tiny\begin{array}{|c|}\hline ~~\\\\\hline\end{array}\)&lt;/span&gt; 要么是 &lt;span class=&#34;math inline&#34;&gt;\(\tiny\begin{array}{|c c|}\hline&amp;amp;&amp;amp;\hline\end{array}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;于是 &lt;span class=&#34;math display&#34;&gt;\[
\def\boxA{\tiny\begin{array}{|c|}\hline ~~\\\\\hline\end{array}\normalsize}
\def\boxB{\tiny\begin{array}{|c c|}\hline\\&amp;amp;&amp;amp;\hline\\\hline\end{array}\normalsize}
\begin{aligned}
T =&amp;amp; \vline + \boxA + \boxB + \boxA\boxA +\boxA\boxA\boxA + \boxA\boxB + \boxB\boxA + \cdots\\
=&amp;amp; \vline + \boxA(\vline + \boxA + \boxB + \boxA\boxA +\boxA\boxA\boxA + \boxA\boxB + \boxB\boxA + \cdots)\\
&amp;amp;+\boxB(\vline + \boxA + \boxB + \boxA\boxA +\boxA\boxA\boxA + \boxA\boxB + \boxB\boxA + \cdots)\\
=&amp;amp;\vline + \boxA T+\boxB T\\
(\vline-\boxA-\boxB)T=&amp;amp;\vline
\end{aligned}
\]&lt;/span&gt; 注意到 &lt;span class=&#34;math inline&#34;&gt;\(\vline\)&lt;/span&gt; 为单位元，与任何元素都满足乘法的交换律，所以此处无需在意左除法/右除法（严格的来说，我们这里的乘法是不具有交换律的），最终我们有 &lt;span class=&#34;math display&#34;&gt;\[
T = \frac{\vline}{\vline - \boxA - \boxB}
\]&lt;/span&gt; 利用几何级数定理，将 &lt;span class=&#34;math inline&#34;&gt;\(\vline\)&lt;/span&gt; 视作 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;（注意到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 就是实数乘法幺半群的单位元，所以我们拿此处的单位元 &lt;span class=&#34;math inline&#34;&gt;\(\vline\)&lt;/span&gt; 带进去是良定义的），将 &lt;span class=&#34;math inline&#34;&gt;\(\boxA + \boxB\)&lt;/span&gt; 视作整体，故 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
T &amp;amp;= \vline + \left(\boxA + \boxB\right) + \left(\boxA + \boxB\right)^2 + \cdots\\
&amp;amp;= \vline + \boxA + \boxB + \boxA\boxA + \boxA\boxB + \boxB\boxA + \cdots
\end{aligned}
\]&lt;/span&gt; 将其展开不难发现其就是原来的 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在我们不妨略去更多无效的信息——我们不关心骨牌具体是怎么摆的，只记录横和竖的多米诺骨牌分别用了多少种，则我们可以这样简写：将形如 &lt;span class=&#34;math inline&#34;&gt;\(\boxA\boxB\)&lt;/span&gt; 这样的记为 &lt;span class=&#34;math inline&#34;&gt;\(\boxA\boxb^2\)&lt;/span&gt;，而形如 &lt;span class=&#34;math inline&#34;&gt;\(\boxA\boxB + \boxB\boxA\)&lt;/span&gt; 就记为 &lt;span class=&#34;math inline&#34;&gt;\(2\boxA\boxb^2\)&lt;/span&gt;，即用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(\boxA\)&lt;/span&gt; 和两个 &lt;span class=&#34;math inline&#34;&gt;\(\boxb\)&lt;/span&gt; 是存在两种摆法的。&lt;/p&gt;
&lt;p&gt;那么实际上， &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
T &amp;amp;= \vline + \left(\boxA + \boxb^2\right) + \left(\boxA + \boxb^2\right)^2 + \left(\boxA + \boxb^2\right)^3 + \cdots\\
&amp;amp;= \sum_{i\ge 0}\left(\boxA + \boxb^2\right)^i\\
&amp;amp;= \sum_{i\ge 0}\sum_{j\ge 0}\binom ij\boxA^j\boxb^{2(i - j)}\\
&amp;amp;= \sum_{j, k\ge 0}\binom{j + k}{j}\boxA^j\boxb^{2k}&amp;amp;k=i-j
\end{aligned}
\]&lt;/span&gt; 第三步是使用二项式定理将 &lt;span class=&#34;math inline&#34;&gt;\(\left(\boxA + \boxb^2\right)^i\)&lt;/span&gt; 展开（注意到 &lt;span class=&#34;math inline&#34;&gt;\(\forall j &amp;gt; i\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom i j = 0\)&lt;/span&gt; 所以 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的上界无关紧要），第四步就是使用 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 替换掉 &lt;span class=&#34;math inline&#34;&gt;\(i - j\)&lt;/span&gt;，合法性不言而喻。&lt;/p&gt;
&lt;p&gt;这告诉了我们什么呢？根据我们缩写的意义，用 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(\boxA\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(2k\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(\boxb\)&lt;/span&gt; 来拼凑出 &lt;span class=&#34;math inline&#34;&gt;\(2\times (j + 2k)\)&lt;/span&gt; 矩形的方案有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{j+k}{j}\)&lt;/span&gt; 种。&lt;/p&gt;
&lt;p&gt;进一步略去水平和竖直的区别，用 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 代替之（注意 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 只是个符号！），同时用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 代替单位元 &lt;span class=&#34;math inline&#34;&gt;\(\vline\)&lt;/span&gt;，可以得到 &lt;span class=&#34;math display&#34;&gt;\[
T(z) = \frac{1}{1 - z-z^2}
\]&lt;/span&gt; 而这个东西和斐波那契的 OGF &lt;span class=&#34;math inline&#34;&gt;\(F(z) = \dfrac{z}{1 - z - z^2}\)&lt;/span&gt;（后文会提到）只在分母上相差一个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，所以在这里，我们的答案是斐波那契的第 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 项。&lt;/p&gt;
&lt;p&gt;这就是所谓“生成函数”，我们发现我们把多米诺骨牌本身当作了某种&lt;strong&gt;代数对象&lt;/strong&gt;进行处理，这是一种极其强力且通用的方法，接下来可以看一下另一道例题加深一下理解。&lt;/p&gt;
&lt;h3 id=&#34;找零问题&#34;&gt;找零问题&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 元，&lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 元和 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 元的硬币，每种面值都有无限枚，问支付 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 元有多少方案？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一样，设答案为 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt;，注意 &lt;span class=&#34;math inline&#34;&gt;\(f_0 = 1\)&lt;/span&gt;（啥都不选）。&lt;/p&gt;
&lt;p&gt;这里我们使用代数对象 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 分别表示这三种面值的硬币。然后考虑定义一种支付方案为一组硬币，设分别有 &lt;span class=&#34;math inline&#34;&gt;\(x,y,z\)&lt;/span&gt; 枚，则记作 &lt;span class=&#34;math inline&#34;&gt;\(S = a^xb^yc^z\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;定义面值函数 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{val}(S) = x + 2y + 5z\)&lt;/span&gt;。定义两种支付方案的“乘法”为将两种支付方案的硬币合并在一起，即 &lt;span class=&#34;math display&#34;&gt;\[
a^{x_1}b^{y_1}c^{z_1}\times a^{x_2}b^{y_2}c^{z_2} = a^{x_1 + x_2}b^{y_1+y_2}c^{z_1+z_2}
\]&lt;/span&gt; 这很符合我们熟知的“幂”的定义，而不难发现面值函数满足如下性质：&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{val}(S_1\times S_2) = \operatorname{val}(S_1) + \operatorname{val}(S_2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意：我们使用加法表示方案的并列，所以“拼接”使用乘法。&lt;/p&gt;
&lt;p&gt;乘法分配律显然，注意到有单位元 &lt;span class=&#34;math inline&#34;&gt;\(\varnothing\)&lt;/span&gt;，所以我们考虑用无穷求和罗列出用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 元硬币的支付方案： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
P_{1} &amp;amp;= \varnothing + a + aa + aaa + aaaa + \cdots\\
&amp;amp;= \varnothing + a + a^2 + a^3 + a^4 + \cdots
\end{aligned}
\]&lt;/span&gt; 第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 项（&lt;span class=&#34;math inline&#34;&gt;\(a^i\)&lt;/span&gt;）表示用 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 元硬币。那么如果我们将 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 元硬币考虑进去，会发现所有的方案都可以被表示为 &lt;span class=&#34;math display&#34;&gt;\[
P_{1,2} = P_1 + bP_1 + b^2P_1 + b^3P_1 + \cdots
\]&lt;/span&gt; 因为每种支付方式都要选择若干 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 元硬币和若干 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 元硬币。&lt;/p&gt;
&lt;p&gt;再考虑 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 元硬币，发现就是 &lt;span class=&#34;math display&#34;&gt;\[
P_{1,2,5} = P_{1,2} + cP_{1,2} + c^2P_{1,2} + \cdots
\]&lt;/span&gt; 所以我们拆开来看，可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
P_{1,2,5} &amp;amp;= (\varnothing + a + a^2 + \cdots)\\
&amp;amp;\times(\varnothing + b + b^2  + \cdots)\\
&amp;amp;\times(\varnothing + c + c^2 + \cdots)
\end{aligned}
\]&lt;/span&gt; 根据几何级数定理， &lt;span class=&#34;math display&#34;&gt;\[
P_{1,2,5} = \frac{1}{1-a}\frac{1}{1-b}\frac{1}{1-c}
\]&lt;/span&gt; 而我们只关心总价值，根据上面幂的形式，我们可以用 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt;、&lt;span class=&#34;math inline&#34;&gt;\(z^2\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(z^5\)&lt;/span&gt; 来分别表示那三种面值（这样既能满足上面的定义，又能去掉面值之间的区别），所以答案的生成函数为 &lt;span class=&#34;math display&#34;&gt;\[
F(z) = \frac{1}{1-z}\frac{1}{1-z^2}\frac{1}{1-z^5}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\([z^n]F(z)\)&lt;/span&gt; 就是我们想要的答案，虽然我们现在而言不能很好地把展开式的系数提取出来。&lt;/p&gt;
&lt;p&gt;注意到此时 &lt;span class=&#34;math inline&#34;&gt;\(P_{1,2,5}\)&lt;/span&gt; 不为 &lt;span class=&#34;math inline&#34;&gt;\(\varnothing + \sum\limits_{k&amp;gt;0} (a + b + c)^k\)&lt;/span&gt;，因为 &lt;span class=&#34;math inline&#34;&gt;\((a+b+c)^k\)&lt;/span&gt; 展开后，用不同顺序支付的硬币会被重复计数（注意到这里我们只关心硬币集合）。&lt;/p&gt;
&lt;p&gt;OGF 可以拿来很好地刻画&lt;strong&gt;组合类计数问题&lt;/strong&gt;，并且表示两个组合类的 OGF 乘起来表示了他们的&lt;strong&gt;笛卡尔积&lt;/strong&gt;，下文会进行更详细的阐述。&lt;/p&gt;
&lt;p&gt;同时你如果对基本 dp 比较熟悉，则会发现将若干个 OGF 乘起来的过程和做背包的本质是相同的。&lt;/p&gt;
&lt;h2 id=&#34;常用数列推导&#34;&gt;常用数列推导&lt;/h2&gt;
&lt;p&gt;通过对数列的生成函数进行一些代数变形，可以得到一些意想不到的结果。&lt;/p&gt;
&lt;h3 id=&#34;基本运算&#34;&gt;基本运算&lt;/h3&gt;
&lt;p&gt;下面若未经说明，则假设 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(G(z)\)&lt;/span&gt; 分别为数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle f_n\rangle\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\langle g_n\rangle\)&lt;/span&gt; 的生成函数，并且假设对于 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;lt;0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_n = g_n = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么加减法的运算是简单的： &lt;span class=&#34;math display&#34;&gt;\[
F(z)\pm G(z) = \sum_nf_nz^n\pm \sum_ng_nz^n = \sum_n(f_n \pm g_n)z^n
\]&lt;/span&gt; 所以我们得到了数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle f_n\pm g_n \rangle\)&lt;/span&gt; 的生成函数。&lt;/p&gt;
&lt;p&gt;而对生成函数乘上一个常数 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 也是简单的： &lt;span class=&#34;math display&#34;&gt;\[
cF(z) = c\sum_nf_nz^n = \sum_ncf_nz^n
\]&lt;/span&gt; 其为数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle cf_n\rangle\)&lt;/span&gt; 的生成函数。&lt;/p&gt;
&lt;p&gt;对于平移运算，假设我们需要将 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 向右平移 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 位（假设 &lt;span class=&#34;math inline&#34;&gt;\(m\ge 0\)&lt;/span&gt;），即在数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle f_1, f_2,\cdots\rangle\)&lt;/span&gt; 前面添 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(\langle 0,\cdots,0,f_1,f_2,\cdots\rangle = \langle f_{n-m}\rangle\)&lt;/span&gt;，那么就直接乘上 &lt;span class=&#34;math inline&#34;&gt;\(z^m\)&lt;/span&gt; 就好了： &lt;span class=&#34;math display&#34;&gt;\[
z^mF(z) = z^m\sum_n f_nz^n = \sum_n f_nz^{n+m} = \sum_{n}f_{n-m}z^n
\]&lt;/span&gt; 而左平移也是类似的——&lt;strong&gt;减去最左边的 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 项&lt;/strong&gt;再除以 &lt;span class=&#34;math inline&#34;&gt;\(z^m\)&lt;/span&gt; 即可： &lt;span class=&#34;math display&#34;&gt;\[
\frac{F(z) - f_0 - f_1z- \cdots f_{m-1}z^{m-1}}{z^m} = \sum_{n\ge m}f_nz^{n-m}=\sum_{n\ge 0}g_{n+m}z^n
\]&lt;/span&gt; （注意这里的下界不可忽略）&lt;/p&gt;
&lt;p&gt;在括号里面乘上常数也是常见技巧： &lt;span class=&#34;math display&#34;&gt;\[
F(cz) = \sum_nf_n(cz)^n = \sum_nf_nc^nz^n
\]&lt;/span&gt; 其对应 &lt;span class=&#34;math inline&#34;&gt;\(\langle c^nf_n\rangle\)&lt;/span&gt; 的生成函数，&lt;span class=&#34;math inline&#34;&gt;\(c=-1\)&lt;/span&gt; 时会很好用。&lt;/p&gt;
&lt;p&gt;参考分析中对多项式的导数的定义，对形式幂级数定义形式导数： &lt;span class=&#34;math display&#34;&gt;\[
F&amp;#39;(z) = f_1 + 2f_2z + 3f_3z^2 + \cdots = \sum_n(n+1)f_{n+1}z^n
\]&lt;/span&gt; 不妨右移一位使得下标对齐： &lt;span class=&#34;math display&#34;&gt;\[
zF&amp;#39;(z) = \sum_nnf_nz^n
\]&lt;/span&gt; 于是我们得到了数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle nf_n\rangle\)&lt;/span&gt; 的生成函数，这可以把指数下放到系数，继续求导可以让 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的更多次下放到系数来。&lt;/p&gt;
&lt;p&gt;类似地定义形式积分： &lt;span class=&#34;math display&#34;&gt;\[
\int F(z) = f_0z + \frac12f_1z^2 + \frac13f_2z^3 + \cdots = \sum_{n\ge 1}\frac1nf_{n-1}z^n
\]&lt;/span&gt; 需要注意常数项是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，可得到 &lt;span class=&#34;math inline&#34;&gt;\(\langle f_{n-1}/n\rangle\)&lt;/span&gt; 的生成函数。&lt;/p&gt;
&lt;p&gt;两个生成函数的乘积可以表示两个数列的&lt;strong&gt;卷积（convolution，这里特指加法卷积）&lt;/strong&gt;，即 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(z)G(z) &amp;amp;= (f_0+f_1z+f_2z^2+\cdots)(g_0 +g_1z+g_2z^2+\cdots)\\
&amp;amp;= (f_0g_0) + (f_0g_1 + f_1g_0)z + (f_0g_2 + f_1g_1 + f_2g_0)z^2 + \cdots\\
&amp;amp;= \sum_{n}\left(\sum_kf_kg_{n-k}\right)z^n
\end{aligned}
\]&lt;/span&gt; 这是数列 &lt;span class=&#34;math inline&#34;&gt;\(\left\langle \sum\limits_{k}f_kg_{n-k}\right\rangle\)&lt;/span&gt; 的生成函数。卷积相对而言，比较复杂，但他非常的重要，下文会进一步详细阐述。&lt;/p&gt;
&lt;p&gt;另外，根据 &lt;span class=&#34;math inline&#34;&gt;\(\exp(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\ln(1 + x)\)&lt;/span&gt; 的麦克劳林级数 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\exp(x) &amp;amp;= e^x = \sum_{n\ge 0}\frac{x^n}{n!}\\
\ln(1 + x) &amp;amp;= \sum_{n\ge 0}\frac{(-1)^{n+1}}{n}x^n\\
\ln(1 - x) &amp;amp;= -\sum_{n\ge 0}\frac{x^n}{n}
\end{aligned}
\]&lt;/span&gt; 我们对生成函数定义其 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\exp(F(z)) &amp;amp;= \sum_{n\ge 0}\frac{F(z)^n}{n!}\\
\ln(1 - F(z)) &amp;amp;= -\sum_{n\ge 0}\frac{F(z)^n}{n}
\end{aligned}
\]&lt;/span&gt; 类似地根据 &lt;span class=&#34;math inline&#34;&gt;\(\sin\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\cos\)&lt;/span&gt; 的展开我们也可以对形式幂级数定义其三角函数，OI 中考察较少，在此略过。&lt;/p&gt;
&lt;p&gt;以上运算的合法性可参见开头引用资料部分（orz _rqy）由于不是本文重点所以不进行展开证明。&lt;/p&gt;
&lt;h3 id=&#34;简单数列的生成函数&#34;&gt;简单数列的生成函数&lt;/h3&gt;
&lt;p&gt;先来看几个最简单的，用几何级数定理与整体代入法可以很方便的得到：&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 46%&#34; /&gt;
&lt;col style=&#34;width: 33%&#34; /&gt;
&lt;col style=&#34;width: 19%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;数列&lt;/th&gt;
&lt;th&gt;OGF&lt;/th&gt;
&lt;th&gt;封闭形式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,0,0,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}[n=0]z^n\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 0,\cdots,0, 1,0,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}[n=m]z^n\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(z^m\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,1,1,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}z^n\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-x}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,-1,1,-1,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}(-1)^nz^n\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1+z}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle1,0,1,0,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}z^{2n}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-z^2}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle1,0,0,0,\cdots,1,0,0,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}z^{mn}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-z^m}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle1,2,4,8,16,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}2^nz^n\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-2z}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在封闭形式中我们能更好洞察系数的奥秘，而且也方便进行代数运算，这是生成函数的一大作用。&lt;/p&gt;
&lt;p&gt;而关于二项式系数，我们也有一些生成函数（可以用二项式定理说明）：&lt;/p&gt;
&lt;table style=&#34;width:100%;&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 50%&#34; /&gt;
&lt;col style=&#34;width: 33%&#34; /&gt;
&lt;col style=&#34;width: 16%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;数列&lt;/th&gt;
&lt;th&gt;OGF&lt;/th&gt;
&lt;th&gt;封闭形式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,c,\binom c2,\binom c3,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}\binom cnz^n\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\((1+z)^c\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,-c,\binom c2,-\binom c3,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}(-1)^n\binom cnz^n\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\((1-z)^c\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle \binom c0,\binom{c+1}{1},\binom{c+2}{2},\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}\binom{n+c}{n}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{(1-z)^c}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;并且注意到，若我们需要提取一个生成函数的标号为偶数的项，那么就可以将 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 加上 &lt;span class=&#34;math inline&#34;&gt;\(F(-z)\)&lt;/span&gt;，所以 &lt;span class=&#34;math display&#34;&gt;\[
\frac{F(z) + F(-z)}{2} = \sum_nf_{2n}z^{2n}
\]&lt;/span&gt; 类似地，提取奇数项： &lt;span class=&#34;math display&#34;&gt;\[
\frac{F(z) - F(-z)}{2}= \sum_nf_{2n+1}z^{2n+1}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;如果要提取 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的倍数次的项则可以使用单位根反演，在此不表&lt;/del&gt;。&lt;/p&gt;
&lt;h3 id=&#34;斐波那契数列&#34;&gt;斐波那契数列&lt;/h3&gt;
&lt;p&gt;这可能是很多人的生成函数入门题，但我将其放在了一个相对靠中间的位置，因为它其实也并没有那么的人畜无害。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：求斐波那契数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle\mathrm{fib}_n\rangle\)&lt;/span&gt; 的通项公式。 &lt;span class=&#34;math display&#34;&gt;\[
\mathrm{fib}_n = \begin{cases}
0&amp;amp;n=0\\
1&amp;amp;n=1\\
\mathrm{fib}_{n-1}+\mathrm{fib}_{n-2}&amp;amp;n\ge 2
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将其写成生成函数的形式 &lt;span class=&#34;math display&#34;&gt;\[
F(z) = \mathrm{fib}_1z + \mathrm{fib}_2z^2 + \mathrm{fib}_3z^3 + \mathrm{fib}_4z^4+\cdots
\]&lt;/span&gt; 注意到 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{fib}_n = \mathrm{fib}_{n-1} + \mathrm{fib}_{n-2}\)&lt;/span&gt;，考虑将 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 进行一些平移操作以让 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; &lt;strong&gt;自己表示自己&lt;/strong&gt;（很像文化课的错位相减）： &lt;span class=&#34;math display&#34;&gt;\[
\begin{alignedat}{2}
F(z) &amp;amp;= \mathrm{fib}_0 &amp;amp;+ \mathrm{fib}_1z &amp;amp;+ \mathrm{fib}_2z^2 + \mathrm{fib}_3z^3 + \cdots\\
zF(z) &amp;amp;= &amp;amp;\mathrm{fib}_0z &amp;amp;+ \mathrm{fib}_1z^2 + \mathrm{fib}_2z^3+\cdots\\
z^2F(z) &amp;amp;= &amp;amp;&amp;amp;+\mathrm{fib}_0z^2 + \mathrm{fib}_1z^3 +\cdots
\end{alignedat}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;于是不考虑第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 项和第 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 项的话，后面都构成了美好的递推形式，考虑将后面两个式子相加： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(z+z^2)F(z) &amp;amp;=\mathrm{fib}_0 + \mathrm{fib}_2z^2 + \mathrm{fib}_3z^3+ \cdots\\
&amp;amp;= F(z) - \mathrm{fib}_1z\\
&amp;amp;= F(z) - z\\
F(z) &amp;amp;= \frac{z}{1-z-z^2}
\end{aligned}
\]&lt;/span&gt; 最后一步是解一个关于 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 的方程，所以 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 的封闭形式得解，现在考虑将其展开。&lt;/p&gt;
&lt;p&gt;根据骨牌密铺的方法，我们可以进行如下的展开： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(z) &amp;amp;= z\sum_{n\ge 0}(z + z^2)^n\\
&amp;amp;= z\sum_{n\ge 0}\sum_{i\ge 0}\binom niz^iz^{2(n-i)}\\
&amp;amp;= z\sum_{n\ge 0}\sum_{j}\binom{i+j}{j}z^iz^{2j}\\
&amp;amp;= \sum_{n\ge 0}z^{n+1}\sum_{0\le i\le n}\binom{n-i}{i}
\end{aligned}
\]&lt;/span&gt; 所以我们得到了一个关于斐波那契数列与二项式系数的恒等式： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm{fib}_{n+1} = \sum_{i=0}^{n}\binom{n-i}{i}
\]&lt;/span&gt; 但这并不是一个我们想要的简单结果，或者说跟我们熟知的“黄金分割”的形式不太一样。&lt;/p&gt;
&lt;p&gt;回顾一下，我们注意到形如 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{A}{1-az}\)&lt;/span&gt; 这样的式子是比较好展开来提取每一项的系数的——展开来就是 &lt;span class=&#34;math inline&#34;&gt;\(A + A(az) + A(az)^2 + \cdots = A\sum\limits_{n\ge 0}a^nz^n\)&lt;/span&gt;。而 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{z}{1-z-z^2}\)&lt;/span&gt; 下面是二次的，似乎可以表示为两个这样的一次分式之和，即 &lt;span class=&#34;math display&#34;&gt;\[
\dfrac{z}{1-z-z^2} = \frac{A}{1-az} + \frac{B}{1-bz}
\]&lt;/span&gt; 于是 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
A(1-bz) + B(1-az) = z\\
1-z-z^2 = (1-az)(1-bz)
\end{cases}
\]&lt;/span&gt; 先把下面那个式子处理一下得到 &lt;span class=&#34;math inline&#34;&gt;\(\left(z-\dfrac 1a\right)\left(z - \dfrac1b\right) = 1-z-z^2\)&lt;/span&gt;，明显为两个根的形式，解等号右边的二次方程得到 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{-1\pm \sqrt 5}{2}\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(a = \dfrac{1+\sqrt 5}{2}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b = \dfrac{1-\sqrt 5}{2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这两个数有非常美妙的性质，在此不再加以说明，下文中令 &lt;span class=&#34;math inline&#34;&gt;\(\phi = \dfrac{1+\sqrt 5}{2}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\hat\phi = \dfrac{1-\sqrt 5}{2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;把上面的方程拆开来，得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
A + B = 0\\
-A\hat\phi-B\phi = 1
\end{cases}
\]&lt;/span&gt; 解得 &lt;span class=&#34;math inline&#34;&gt;\(A = \dfrac{1}{\sqrt 5}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B = -\dfrac{1}{\sqrt 5}\)&lt;/span&gt;。于是我们将 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 展开： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(z) &amp;amp;= \frac{A}{1-\phi z} + \frac{B}{1-\hat\phi z}\\
&amp;amp;= A\left(1+\sum_{n\ge 0}\phi^n z^n\right) + B\left(1+\sum_{n\ge 0}\hat\phi^n z^n\right)\\
&amp;amp;= \frac{1}{\sqrt 5}\sum_{n\ge 0}z^n(\phi^n - \hat\phi^n)
\end{aligned}
\]&lt;/span&gt; 所以我们得到了其通项公式： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm{fib}_n = \frac{1}{\sqrt 5}\left(\left(\frac{1 +\sqrt 5}{2}\right)^n - \left(\frac{1 -\sqrt 5}{2}\right)^n\right)
\]&lt;/span&gt; （虽然有很多 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt 5\)&lt;/span&gt;，但神奇的是其在最后一定会得到一个整数）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;番外：特征根法解递推数列&lt;/p&gt;
&lt;p&gt;隔壁数竞生最喜欢了（大雾）。&lt;/p&gt;
&lt;p&gt;文化课课堂上，老师教过我们如何解一阶齐次线性递推数列（形如 &lt;span class=&#34;math inline&#34;&gt;\(f_n = pf_{n-1} + q\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_1\)&lt;/span&gt; 给定）的通项公式——将 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 拆成两半移到左边来构造等比数列 &lt;span class=&#34;math inline&#34;&gt;\(\langle f_n - af_{n-1}\rangle\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对于二阶的线性递推数列，我们可以采用类似的方法。对于 &lt;span class=&#34;math inline&#34;&gt;\(f_{n+1} = pf_{n} + qf_{n-1}\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(f_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_2\)&lt;/span&gt; 给定），不妨尝试构造等比数列，即假设存在 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(f_{n+1} - af_n = b(f_{n}-af_{n-1})\)&lt;/span&gt;。展开可以得到 &lt;span class=&#34;math inline&#34;&gt;\(\begin{cases}a+b = p\\ab=-q\end{cases}\)&lt;/span&gt;。根据韦达定理，&lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 是方程 &lt;span class=&#34;math inline&#34;&gt;\(x^2-px-q=0\)&lt;/span&gt; 的两根，所以 &lt;span class=&#34;math inline&#34;&gt;\(\langle f_n - af_{n-1}\rangle\)&lt;/span&gt; 是以 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 为公比的等比数列，同理 &lt;span class=&#34;math inline&#34;&gt;\(\langle f_n - bf_{n-1}\rangle\)&lt;/span&gt; 是以 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为公比的等比数列，那么。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_n - af_{n-1} = b^{n-1}(f_2 - af_1)\\
f_n - bf_{n-1} = a^{n-1}(f_2 - bf_1)
\end{cases}
\]&lt;/span&gt; 若 &lt;span class=&#34;math inline&#34;&gt;\(a\ne b\)&lt;/span&gt;，上减下可以得到 &lt;span class=&#34;math display&#34;&gt;\[
f_n = \frac{1}{a-b}\left(a^{n-1}(f_2 - bf_1) - b^{n-1}(f_2 - af_1)\right)
\]&lt;/span&gt; 发现其为两个等比数列相加的形式，而对于 &lt;span class=&#34;math inline&#34;&gt;\(a=b\)&lt;/span&gt;， &lt;span class=&#34;math display&#34;&gt;\[
f_n = f_1b^{n-1}+(f_2 - bf_1)(n-1)b^{n-2}
\]&lt;/span&gt; 本质上来看，我们称 &lt;span class=&#34;math inline&#34;&gt;\(x^2 = px + q\)&lt;/span&gt; 为上面那个数列的特征方程，两个根称为其特征根。若无重根，则数列的通项可以表示为特征根的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次方的线性组合。更多内容涉及到线性代数相关知识，这里略过不提。&lt;/p&gt;
&lt;p&gt;对于斐波那契数列，其特征方程即为 &lt;span class=&#34;math inline&#34;&gt;\(z^2 = z + 1\)&lt;/span&gt;，两根分别为 &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\hat\phi\)&lt;/span&gt;，发现能和上面的式子对应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;广义二项式定理&#34;&gt;广义二项式定理&lt;/h3&gt;
&lt;p&gt;事实表明，若我们将二项式系数 $n m $ 的定义扩展如下，则将是非常有用的！ &lt;span class=&#34;math display&#34;&gt;\[
\binom rk = \begin{cases}
\dfrac{r(r-1)\cdots (r-k+1)}{k(k-1)\cdots 1} = \dfrac{r^{\underline k}}{k!}&amp;amp;k\ge 0,k\in\mathbb Z\\
0&amp;amp;k&amp;lt;0,k\in\mathbb Z
\end{cases}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(r\in\mathbb C\)&lt;/span&gt;，注意到上面我使用了 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 这个字母，意在强调 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 不一定非要是非负整数了。然而 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 还是最好要是整数——虽然也能给出一个合理的定义但是我们这里不加以阐释。&lt;/p&gt;
&lt;p&gt;那么有广义二项式定理 &lt;span class=&#34;math display&#34;&gt;\[
(x+y)^{\alpha} = \sum_{n}\binom{\alpha}{n}x^ny^{\alpha - n}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(x,y,\alpha\in \mathbb R\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\left|\dfrac{x}{y}\right|&amp;lt;1\)&lt;/span&gt;（以让其收敛）。证明需要一定的分析基础，在此不加以说明（实际上是我不会）。&lt;/p&gt;
&lt;p&gt;所以我们可以将形如 &lt;span class=&#34;math inline&#34;&gt;\((1-x)^{1/2}\)&lt;/span&gt; 的形式幂级数加以展开，下文会具体说明。&lt;/p&gt;
&lt;p&gt;另外，需要注意的是 &lt;span class=&#34;math display&#34;&gt;\[
\binom{r}{k} = (-1)^k\binom{k-r-1}{k}
\]&lt;/span&gt; 这个技巧叫做上指标反转，可以通过观察杨辉三角在 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;lt;0\)&lt;/span&gt; 时的形态得到。可以用于化简一些 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为负数的情况，非常好用。&lt;/p&gt;
&lt;h3 id=&#34;卡特兰数&#34;&gt;卡特兰数&lt;/h3&gt;
&lt;p&gt;卡特兰数的组合意义比较精彩有趣，但我们这里只研究如何使用生成函数得到其通项公式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;：求卡特兰数 &lt;span class=&#34;math inline&#34;&gt;\(\langle C_n\rangle\)&lt;/span&gt; 的通项公式，其定义为 &lt;span class=&#34;math display&#34;&gt;\[
C_n = 
\begin{cases}
1&amp;amp;n=0\\
\displaystyle\sum_{i=0}^{n-1}C_iC_{n-1-i} &amp;amp;n\ge 1
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{i=0}^{n-1}C_iC_{n-1-i}\)&lt;/span&gt; 非常像一个卷积的形式，我们试一下弄出其生成函数 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 然后乘上自己试试： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(z)^2 &amp;amp;= (C_0 + C_1z + C_2z^2 + \cdots)(C_0 + C_1z + C_2z^2 + \cdots)\\
&amp;amp;= C_0^2 + (C_0C_1 + C_1C_0)z + (C_0C_2 + C_1C_1 + C_2C_0)z^2 + \cdots\\
&amp;amp;= \sum_{n\ge 0}z^n\sum_{i=0}^nC_iC_{n-i}
\end{aligned}
\]&lt;/span&gt; 发现其为 &lt;span class=&#34;math inline&#34;&gt;\(\langle C_{n+1}\rangle\)&lt;/span&gt; 的生成函数，根据上文的平移运算法则我们得到 &lt;span class=&#34;math display&#34;&gt;\[
F(z)^2 = \frac{F(z)-C_0}{z}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
zF(z)^2 = F(z) - 1
\]&lt;/span&gt; 解之， &lt;span class=&#34;math display&#34;&gt;\[
F(z) = \frac{1\pm\sqrt{1-4z}}{2z}
\]&lt;/span&gt; 两个根取哪一个呢？按理来说 &lt;span class=&#34;math inline&#34;&gt;\(z\to 0\)&lt;/span&gt; 时应该得到 &lt;span class=&#34;math inline&#34;&gt;\(F(z)\)&lt;/span&gt; 的常数项，先将其分子有理化： &lt;span class=&#34;math display&#34;&gt;\[
F(z) = \frac{2}{1\mp\sqrt{1-4z}}
\]&lt;/span&gt; 发现负号不太行，不收敛，所以 &lt;span class=&#34;math display&#34;&gt;\[
F(z) = \frac{1-\sqrt{1-4z}}{2z}
\]&lt;/span&gt; 这就是卡特兰数的生成函数的封闭形式，现在考虑如何将其展开。发现分母不是像斐波那契数列那样的多项式形式，不方便分解分式后使用几何级数定理展开，但分子中有一个 &lt;span class=&#34;math inline&#34;&gt;\((1-4z)^{1/2}\)&lt;/span&gt;，考虑使用广义二项式定理： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(1-4z)^{1/2} &amp;amp;= \sum_{n\ge 0}\binom{1/2}{n}(-4z)^n\\
&amp;amp;= 1 + \sum_{n\ge 1}\frac{\left(\frac12\right)^{\underline n}}{n!}(-4z)^n
\end{aligned}
\]&lt;/span&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(\left(\dfrac{1}{2}\right)^{\underline n}\)&lt;/span&gt; 化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\left(\dfrac{1}{2}\right)^{\underline n} &amp;amp;= \frac{1}{2}\frac{-1}{2}\frac{-3}{2}\cdots\frac{-(2n-3)}{2}\\
&amp;amp;= \frac{(-1)^{n+1}(2n-3)!!}{2^n}\\
&amp;amp;= \frac{(-1)^{n+1}(2n-2)!}{2^n(2n-2)!!}\\
&amp;amp;= \frac{(-1)^{n+1}(2n-2)!}{2^{2n-1}(n-1)!}
\end{aligned}
\]&lt;/span&gt; 上面用到了双阶乘的化简技巧，即考虑将 &lt;span class=&#34;math inline&#34;&gt;\((2n-3)!!\)&lt;/span&gt; 化成 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{(2n-2)!}{(2n-2)!!}\)&lt;/span&gt;，下面可以变成 &lt;span class=&#34;math inline&#34;&gt;\(2^{n-1}(2n-2)!\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么回代一下，就 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(1-4z)^{1/2} &amp;amp;= 1 + \sum_{n\ge 1}\frac{(-1)^{n+1}(2n-2)!}{2^{2n-1}(n-1)!n!}(-4)^nz^n\\
&amp;amp;= 1 - \sum_{n\ge 1}\frac{(2n-1)!}{(n-1)!n!(2n-1)}2z^n\\
&amp;amp;= 1 - \sum_{n\ge 1}\binom{2n-1}{n}\frac{2}{(2n-1)}z^n
\end{aligned}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(z) &amp;amp;= \frac{1-\sqrt{1-4z}}{2z}\\
&amp;amp;= \frac{1}{2z}\sum_{n\ge 1}\binom{2n-1}{n}\frac{2}{(2n-1)}z^n\\
&amp;amp;= \sum_{n\ge 1}\binom{2n-1}{n}\frac{1}{2n-1}z^{n-1}\\
&amp;amp;= \sum_{n\ge 0}\binom{2n+1}{n+1}\frac{1}{2n+1}z^{n}\\
&amp;amp;= \sum_{n\ge 0}\binom{2n}{n}\frac{1}{n+1}z^n
\end{aligned}
\]&lt;/span&gt; 所以我们得到了卡特兰数的通项公式 &lt;span class=&#34;math display&#34;&gt;\[
C_n = \frac{1}{n+1}\binom{2n}{n}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;无标号计数初步&#34;&gt;无标号计数初步&lt;/h2&gt;
&lt;p&gt;东拼西凑拉扯一点东西，orz 解析组合。&lt;/p&gt;
&lt;p&gt;下文中的 OI 题目有些时候需要一些科技来处理生成函数的运算（如使用 NTT 进行卷积，牛顿迭代来做 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 啥的，还有拉格朗日反演之类的），&lt;del&gt;其实道理就是你不会处理生成函数的话你写出来生成函数也屌用没有&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;但本文并不会讲具体的处理形式幂级数的科技&lt;del&gt;（不然就太他妈多了）&lt;/del&gt;，可以去别的博客学习。&lt;/p&gt;
&lt;h3 id=&#34;组合对象与笛卡尔积&#34;&gt;组合对象与笛卡尔积&lt;/h3&gt;
&lt;p&gt;我们定义&lt;strong&gt;组合对象&lt;/strong&gt;指满足某一性质的数，图，串等等可数对象（可以理解为同一类元素）。组合对象构成的集合称为&lt;strong&gt;组合类&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对于组合类 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A\)&lt;/span&gt;，定义&lt;strong&gt;大小函数&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(f:\mathcal A\to\mathbb N\)&lt;/span&gt;，例如串长，图的节点数啥的就是大小函数，一般可以记作 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = |x|\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对于自然数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，定义&lt;strong&gt;计数序列&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(A_n = |\{x\in\mathcal A: |x| = n\}|\)&lt;/span&gt;，即大小为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的元素有多少个，一般我们要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(A_n\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(\{(a_1,a_2,\cdots a_n):\forall 1\le i\le n,a_i\in\mathcal A_i\}\)&lt;/span&gt; 为集合 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A_1,\mathcal A_2,\cdots \mathcal A_n\)&lt;/span&gt; 的&lt;strong&gt;笛卡尔积&lt;/strong&gt;，记作 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A_1\times\mathcal A_2\times\cdots\times\mathcal A_n\)&lt;/span&gt;。也就是从每个组合类中取一个元素构成&lt;strong&gt;有序&lt;/strong&gt;多元组的集合。相当于我们拿若干个组合类&lt;strong&gt;构造&lt;/strong&gt;出了一个新的组合类。&lt;/p&gt;
&lt;p&gt;例如对于 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A = \{a,b,c\},\mathcal B = \{1,2\}\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A\times\mathcal B = \{(a,1),(a,2),(b,1),(b,2),(c,1),(c,2) \}\)&lt;/span&gt;。不难发现 &lt;span class=&#34;math inline&#34;&gt;\(|\mathcal A\times\mathcal B| = |\mathcal A|\times |\mathcal B|\)&lt;/span&gt;（这不就是乘法原理吗）。然后我们不妨为新的组合对象定义大小函数 &lt;span class=&#34;math inline&#34;&gt;\(|(a,b)| = |a| + |b|\)&lt;/span&gt;，这是非常自然的，考虑一张 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 个节点的图和一张 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 个节点的图拼一起得到一张 &lt;span class=&#34;math inline&#34;&gt;\(a+b\)&lt;/span&gt; 个节点的图。&lt;/p&gt;
&lt;p&gt;更多关于组合结构符号化的东西可以参见&lt;del&gt;可能会有的后文&lt;/del&gt;和别的博客，这里只是为了方便下文讲解才引入如上方法。&lt;/p&gt;
&lt;h3 id=&#34;ogf-是什么&#34;&gt;OGF 是什么&lt;/h3&gt;
&lt;p&gt;Ordinary generating function，普通生成函数，上文已给出其定义，可以发现其就是给数列的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 项附上 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 次幂。&lt;/p&gt;
&lt;p&gt;一个集合的普通生成函数可以理解为定义在其计数序列上的 OGF。&lt;/p&gt;
&lt;p&gt;下面阐述其组合意义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;加法代表&lt;strong&gt;不交集合的并&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设有组合类 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A,\mathcal B\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A\cap \mathcal B = \varnothing\)&lt;/span&gt;，则我们令 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal C = \mathcal A + \mathcal B\)&lt;/span&gt;，即不交集合的并。&lt;/p&gt;
&lt;p&gt;那么根据加法原理，&lt;span class=&#34;math inline&#34;&gt;\(C_n = A_n + B_n\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(C(z) = A(z) + B(z)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;乘法代表&lt;strong&gt;笛卡尔积&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实上文在找零问题的时候有提到。&lt;/p&gt;
&lt;p&gt;令组合类 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal D = \mathcal A\times\mathcal B\)&lt;/span&gt;。对于其计数序列 &lt;span class=&#34;math inline&#34;&gt;\(D_n\)&lt;/span&gt;，我们可以这样考虑。实际上就是大小为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A\)&lt;/span&gt; 中元素与大小为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal B\)&lt;/span&gt; 中元素打包形成了大小为 &lt;span class=&#34;math inline&#34;&gt;\(i + j\)&lt;/span&gt; 的元素，我们枚举这个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 能很容易得到 &lt;span class=&#34;math display&#34;&gt;\[
D_n = \sum_{i+j = n}A_iB_j
\]&lt;/span&gt; 这正是加法卷积的定义，所以我们有 &lt;span class=&#34;math display&#34;&gt;\[
\mathcal D = \mathcal A\times\mathcal B \iff D(z) = A(z)B(z)
\]&lt;/span&gt; 注意到其本质就是背包。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;坐稳，我们要加速了！&lt;/p&gt;
&lt;h3 id=&#34;ogf-的简单应用&#34;&gt;OGF 的简单应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;：有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 种不同物品，每种物品只有一个，问取 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 件物品有多少种方法？&lt;/p&gt;
&lt;p&gt;请从生成函数的角度来思考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每种物品都可以看作一个组合类，而本题相当于是将这 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 件物品组合起来后，大小为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的元素有多少种，不难发现其就是笛卡尔积。而注意到一件物品可以选/不选，即可以在 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 元组中产生 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的大小贡献。&lt;/p&gt;
&lt;p&gt;所以对于单个物品，其生成函数为 &lt;span class=&#34;math inline&#34;&gt;\(1+z\)&lt;/span&gt;，意味着第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个组合类中，有“空”和“选一个”的两个元素，答案的生成函数即为这 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(1+z\)&lt;/span&gt; 的乘积。&lt;/p&gt;
&lt;p&gt;所以最终的答案为 &lt;span class=&#34;math inline&#34;&gt;\([z^n](1+z)^m\)&lt;/span&gt;，由二项式定理得答案为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom m n\)&lt;/span&gt;。你可能看到这里会说，为什么不直接考虑组合数的定义就得到 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{m}{n}\)&lt;/span&gt; 呢？我们拿着上面的思想来看看下面的题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;：有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 种不同物品，每种物品只有一个，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品的体积为 &lt;span class=&#34;math inline&#34;&gt;\(V_i\)&lt;/span&gt;，问恰好装满体积为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的背包的方案数。（0-1 背包）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直接组合数？肯定没戏。&lt;/p&gt;
&lt;p&gt;发现我们这里最好定义大小函数为物品的体积，那么第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品的生成函数即为 &lt;span class=&#34;math inline&#34;&gt;\(1 + z^{V_i}\)&lt;/span&gt;，所以答案为 &lt;span class=&#34;math inline&#34;&gt;\([z^n]\prod\limits_{i=1}^m(1+z^{V_i})\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt;：有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 种不同物品，每种物品都有无限个，问取 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 件物品有多少种方法？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个时候你会发现，每个组合类内都有无限个组合对象——“取 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 个”、“取 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个”、……那么一个物品的生成函数则为 &lt;span class=&#34;math inline&#34;&gt;\(1+z+z^2+\cdots = \dfrac{1}{1-z}\)&lt;/span&gt;（再次强调，计数序列的第 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 项表示大小为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的组合对象有多少个，生成函数在其之上定义）。&lt;/p&gt;
&lt;p&gt;所以答案为 &lt;span class=&#34;math inline&#34;&gt;\([z^n]\dfrac{1}{(1-z)^m}\)&lt;/span&gt;，这个东西可以使用广义二项式定理展开，这里就不展开了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt;（砝码称重）：给定 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 克，&lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 克，&lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 克和 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 克砝码各一枚，问称出 &lt;span class=&#34;math inline&#34;&gt;\(1\sim 10\)&lt;/span&gt; 克的方案分别有多少种？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照上面的分析方法，每个克数的砝码都是一个组合类，里面的对象只有两个（选和不选），所以其生成函数分别是 &lt;span class=&#34;math inline&#34;&gt;\(1+z\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1+z^2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1+z^3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1+z^4\)&lt;/span&gt;。“选砝码称重”实际上也是笛卡尔积，其对应的生成函数为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;(1+z)(1+z^2)(1+z^3)(1+z^4)\\
=&amp;amp;1+z+z^2+2z^3+2z^4+2z^5+2z^6+2z^7+z^8+z^9+z^{10}
\end{aligned}
\]&lt;/span&gt; 系数对应答案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P2000&#34;&gt;P2000 拯救世界&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为了拯救世界，小 a 和 uim 决定召唤出 kkksc03 大神和 lzn 大神。根据古籍记载，召唤出任何一位大神，都需要使用金木水火土五种五行神石来摆一个特定的大阵。而在古籍中，记载是这样的：&lt;/p&gt;
&lt;p&gt;kkksc03 大神召唤方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;金神石的块数必须是 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;木神石最多用 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt; 块。&lt;/li&gt;
&lt;li&gt;水神石最多用 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 块。&lt;/li&gt;
&lt;li&gt;火神石的块数必须是 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;土神石最多用 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt; 块。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;lzn 大神召唤方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;金神石的块数必须是 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;木神石最多用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 块。&lt;/li&gt;
&lt;li&gt;水神石的块数必须是 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;火神石的块数必须是 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;土神石最多用 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 块。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在是公元 1999 年 12 月 31 日，小 a 和 uim 从 00:00:00 开始找，一直找到 23:00:00，终于，还是没找到神石。不过，他们在回到家后在自家地窖里发现了一些奇怪的东西，一查古籍，哎呦妈呀，怎么不早点来呢？这里有一些混沌之石，可以通过敲击而衰变成五行神石。于是，他们拼命地敲，终于敲出了 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 块神石，在 23:59:59 完成了两座大阵。然而，kkksc03 大神和 lzn 大神确实出现了，但是由于能量不够，无法发挥神力。只有把所有用 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 块神石可能摆出的大阵都摆出来，才能给他们充满能量。这下小 a 和 uim 傻了眼了，赶快联系上了你，让你帮忙算一下，一共有多少种大阵。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(10^{99999}\leq n\lt 10^{100000}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0.5\)&lt;/span&gt; 秒。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意本题的题意似乎是用 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 块混沌之石摆两个大阵，所以将拿来召唤 3k 和 lzn 的五行石分成 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个组合类，大小函数定义为选的个数，于是这十种生成函数即为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
1 + z^6 + z^{12} + \cdots &amp;amp;= \frac{1}{1-z^6}\\
1+z^1 + \cdots + z^9 &amp;amp;= \frac{1 - z^{10}}{1-z}\\
1 + z + \cdots + z^5 &amp;amp;= \frac{1 - z^6}{1-z}\\
1 + z^4 + z^8 + \cdots &amp;amp;= \frac{1}{1-z^4}\\
1 + z^1 + \cdots + z^7 &amp;amp;= \frac{1-z^8}{1-z}\\
1+z^2+z^4 + \cdots &amp;amp;= \frac{1}{1-z^2}\\
1+z&amp;amp;=\frac{1-z^2}{1-z}\\
1 + z^8 + z^{16} + \cdots &amp;amp;= \frac{1}{1-z^8}\\
1 + z^{10} + z^{20} + \cdots &amp;amp;= \frac{1}{1-z^{10}}\\
1 + z + z^2 + z^3 &amp;amp;= \frac{1-z^4}{1-z}
\end{aligned}
\]&lt;/span&gt; 全部乘起来发现可以消消乐，最后得到 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{(1-z)^5}\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\((1-z)^{-5}\)&lt;/span&gt;，上广义二项式定理得 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{n\ge 0}z^n(-1)^n\binom{-5}{n} =\sum_{n\ge 0}z^n\binom{n+4}{n} = \sum_{n\ge 0}z^n\frac{(n+1)(n+2)(n+3)(n+4)}{24}
\]&lt;/span&gt; 需要 NTT 来高精乘法，好麻烦。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF438E&#34;&gt;CF438E The Child and Binary Tree&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;现有一长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的互异正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(\{c_1, c_2, \cdots, c_n\}\)&lt;/span&gt;。令二叉树的权值都从该序列中产生。对任意 &lt;span class=&#34;math inline&#34;&gt;\(1\le s\le m\)&lt;/span&gt;，求出权值和恰好为 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 的不同二叉树的个数，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;明示我们要将权值放在指数位上。设 &lt;span class=&#34;math inline&#34;&gt;\(f_x\)&lt;/span&gt; 为权值为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的二叉树个数，为了方便令 &lt;span class=&#34;math inline&#34;&gt;\(f_0 = 1\)&lt;/span&gt;，则我们能设计出如下 dp： &lt;span class=&#34;math display&#34;&gt;\[
f_n = \begin{cases}
1&amp;amp;n=0\\
\displaystyle\sum_{i=1}^{n-1}[i\in C]\sum_{j=1}^{n-i}f_jf_{n-i-j}&amp;amp;n\ge 1
\end{cases}
\]&lt;/span&gt; 意义：考虑枚举根的权值 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后枚举分配给左右子树的权值。&lt;/p&gt;
&lt;p&gt;发现这很像卷积的形式，我们不妨令 &lt;span class=&#34;math inline&#34;&gt;\(g_i = [i\in C]\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
f_n = \sum_{i+j+k=n}g_if_jf_k
\]&lt;/span&gt; 写成生成函数的形式就是 &lt;span class=&#34;math display&#34;&gt;\[
F(x) = 1 + G(x)F^2(x)
\]&lt;/span&gt; （那个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 是为了修正 &lt;span class=&#34;math inline&#34;&gt;\(n=0\)&lt;/span&gt; 的情况）。&lt;/p&gt;
&lt;p&gt;所以 &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \frac{1\pm\sqrt{1 - 4G(x)}}{2G(x)}
\]&lt;/span&gt; 按上面卡特兰数的处理方法（分子有理化）舍去一根后，得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(x) &amp;amp;= \frac{1 - \sqrt{1 - 4G(x)}}{2G(x)}\\
&amp;amp;= \frac{2}{1 + \sqrt{1 - 4G(x)}}
\end{aligned}
\]&lt;/span&gt; 套一个开根和求逆的板子就做完了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;： &lt;a href=&#34;https://www.luogu.com.cn/problem/P4451&#34;&gt;P4451 [国家集训队]整数的lqp拆分&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设斐波那契数列为 &lt;span class=&#34;math inline&#34;&gt;\(\langle \mathrm{fib}_n\rangle\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
g(n) = \sum_{m&amp;gt;0,a_i &amp;gt; 0,\sum a_i = n}\prod_{i = 1}^m\mathrm{fib}_{a_i}
\]&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模的结果，&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{10000}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;式子的形式让我们考虑将斐波那契数列的下标放在指数位上，枚举一下 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 不难发现其应该为 &lt;span class=&#34;math display&#34;&gt;\[
G(z) = \sum_m(\mathrm{fib}_1z + \mathrm{fib}_2z^2 + \cdots)^m
\]&lt;/span&gt; 展开式中 &lt;span class=&#34;math inline&#34;&gt;\(z^n\)&lt;/span&gt; 的系数。&lt;/p&gt;
&lt;p&gt;所以这东西的生成函数就是 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-F(z)}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(F(z) = \dfrac{z}{1-z-z^2}\)&lt;/span&gt;。虽然已经可以用多项式科技了，但是你发现 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{10000}\)&lt;/span&gt;，而且模数也不能 NTT，有点难绷。&lt;/p&gt;
&lt;p&gt;考虑进行化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
G(z) &amp;amp;= \frac{1}{1-\dfrac{z}{1-z-z^2}}\\
&amp;amp;= \frac{1-z-z^2}{1-2z-z^2}\\
&amp;amp;= 1 + \frac{z}{1-2z-z^2}
\end{aligned}
\]&lt;/span&gt; 像展开斐波那契的那样对右边那坨施以展开。&lt;span class=&#34;math inline&#34;&gt;\(1-2z-z^2\)&lt;/span&gt; 的两根 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 分别为 &lt;span class=&#34;math inline&#34;&gt;\(-1\pm\sqrt 2\)&lt;/span&gt;，代入一下就发现 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\frac{z}{1-2z-z^2} &amp;amp;= \frac{z}{(a-z)(b-z)}\\
&amp;amp;= \frac{z}{b - a}\left(\frac{1}{a - z} - \frac{1}{b - z}\right)\\
&amp;amp;= \frac{z}{b - a}\left(\frac{1}{a}\frac{1}{1 - \frac 1az} - \frac{1}{b}\frac{1}{1-\frac1bz}\right)\\
&amp;amp;= \frac{z}{b - a}\left(\frac1a\sum_{k\ge 0}\frac{z^k}{a^k}- \frac1b\sum_{k\ge 0}\frac{z^k}{b^k}\right)\\
&amp;amp;= \frac{1}{b-a}\left(\sum_{k\ge 1}\frac{z^k}{a^k} - \sum_{k\ge 1}\frac{z^k}{b^k}\right)
\end{aligned}
\]&lt;/span&gt; 所以代入 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的值， &lt;span class=&#34;math display&#34;&gt;\[
g(n) = \begin{cases}
1&amp;amp;n=0\\
\displaystyle \frac{\sqrt2}{4}\left[(1 + \sqrt2)^n - (1 - \sqrt2)^n\right] &amp;amp;n\ge 1
\end{cases}
\]&lt;/span&gt; 取 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt2\equiv 59713600\pmod{10^9+7}\)&lt;/span&gt; 直接计算即可，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 很大用欧拉定理降幂。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF917D&#34;&gt;CF917D Stranger Trees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的无根树 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;。对 &lt;span class=&#34;math inline&#34;&gt;\(0\le i\le n\)&lt;/span&gt; 询问 &lt;span class=&#34;math inline&#34;&gt;\(K_n\)&lt;/span&gt; 的生成树中有多少棵与 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 恰有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 条边相同，&lt;span class=&#34;math inline&#34;&gt;\(n\le 100\)&lt;/span&gt;，答案模 &lt;span class=&#34;math inline&#34;&gt;\(10^9 = 7\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发现“相同的边”这个满足背包计数，而矩阵树定理处理的是所有生成树的边权乘积之和，那么若我们将 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 中边赋权 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，其他边赋权 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，那么矩阵树就可以跑出一个多项式来，这个多项式的每项系数就是答案。&lt;/p&gt;
&lt;p&gt;虽然但是我们不是很好直接求出这个多项式，但是由于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 比较小所以我们可以代 &lt;span class=&#34;math inline&#34;&gt;\(0\sim n\)&lt;/span&gt; 进去然后搞出 &lt;span class=&#34;math inline&#34;&gt;\(n+1\)&lt;/span&gt; 个点值，高斯消元插值回来即可。&lt;/p&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^4)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/discuss/304884&#34;&gt;正确性保证 by Itst&lt;/a&gt;：最后的系数矩阵为范德蒙矩阵，行列式在点值不同时一定不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，故其总是满秩的。所以消元能将全部的系数插出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4389&#34;&gt;P4389 付公主的背包&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 种物品，每种物品有无限个，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 种物品体积 &lt;span class=&#34;math inline&#34;&gt;\(v_i\)&lt;/span&gt;，求对于所有 &lt;span class=&#34;math inline&#34;&gt;\(s\in[1,m]\)&lt;/span&gt;，恰好装 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 体积的方案数，&lt;span class=&#34;math inline&#34;&gt;\(m\le 10^5\)&lt;/span&gt;，模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;完全背包问题，但是 &lt;span class=&#34;math inline&#34;&gt;\(10^5\)&lt;/span&gt; 必然背不动。不难发现答案的生成函数为 &lt;span class=&#34;math display&#34;&gt;\[
\prod_{i=1}^n\frac{1}{1-x^{v_i}}
\]&lt;/span&gt; 直接乘就暴毙了，遇到这种乘积式考虑取 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，加起来再 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 回去： &lt;span class=&#34;math display&#34;&gt;\[
\exp\left(\sum_{i=1}^n\ln\frac{1}{1-x^{v_i}}\right)
\]&lt;/span&gt; 考虑如何求出 &lt;span class=&#34;math inline&#34;&gt;\(\ln\dfrac{1}{1-x}\)&lt;/span&gt;。首先我们知道 &lt;span class=&#34;math inline&#34;&gt;\(\ln F(x) = \displaystyle\int \frac{F&amp;#39;(x)}{F(x)}\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(\left(\dfrac{1}{1-x}\right)&amp;#39; = \dfrac{1}{(1-x)^2}\)&lt;/span&gt;，除以 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-x}\)&lt;/span&gt; 又变回来了 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{1-x}\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(1+x+x^2+\cdots\)&lt;/span&gt;，积分后变成 &lt;span class=&#34;math inline&#34;&gt;\(x+\dfrac12x^2+\dfrac13x^3 + \cdots\)&lt;/span&gt;。所以 &lt;span class=&#34;math display&#34;&gt;\[
\ln\frac{1}{1-x} = \sum_{n\ge 1}\frac1nx^n
\]&lt;/span&gt; 用 &lt;span class=&#34;math inline&#34;&gt;\(x^{v_i}\)&lt;/span&gt; 替换 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 得到 &lt;span class=&#34;math display&#34;&gt;\[
\ln\frac{1}{1-x^{v_i}} = \sum_{n\ge 1}\frac{1}{n}x^{nv_i}
\]&lt;/span&gt; 只考虑 &lt;span class=&#34;math inline&#34;&gt;\(\bmod x^m\)&lt;/span&gt; 意义下的话也就 &lt;span class=&#34;math inline&#34;&gt;\(m / v_i\)&lt;/span&gt; 个有效项，所以处理出 &lt;span class=&#34;math inline&#34;&gt;\(\sum\ln\dfrac{1}{1-x^{v_i}}\)&lt;/span&gt; 是调和 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log m)\)&lt;/span&gt; 的，最后 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 回去即可。&lt;/p&gt;
&lt;h2 id=&#34;有标号计数初步&#34;&gt;有标号计数初步&lt;/h2&gt;
&lt;h3 id=&#34;egf-的引入&#34;&gt;EGF 的引入&lt;/h3&gt;
&lt;p&gt;注意到，前面我们使用 OGF 解决的一般都为&lt;strong&gt;组合&lt;/strong&gt;问题。&lt;/p&gt;
&lt;p&gt;即我们在考虑两个拼接起来的组合对象的时候，我们没有考虑其&lt;strong&gt;标号&lt;/strong&gt;问题。&lt;/p&gt;
&lt;p&gt;而相应的，有组合问题就有&lt;strong&gt;排列&lt;/strong&gt;问题，这意味着我们需要将元素的标号纳入考虑范畴。现在来看一道简单例题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(13\)&lt;/span&gt;：有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 种物品，每件物品有 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 个，问取出 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个物品排成一排的方案数，注意形如 &lt;span class=&#34;math inline&#34;&gt;\(\langle 1,1,2,3\rangle\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\langle 2,3,1,1\rangle\)&lt;/span&gt; 是算作两种方案的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨按照我们刚开始学生成函数时的思路——考虑用 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 来表示第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品。&lt;/p&gt;
&lt;p&gt;那么此处不妨假设 &lt;span class=&#34;math inline&#34;&gt;\(n = 3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\langle c_1,c_2,c_3\rangle = \langle3,2,3\rangle\)&lt;/span&gt;。为了方便我们考虑 &lt;span class=&#34;math inline&#34;&gt;\(m=4\)&lt;/span&gt; 的情况。根据上面的思路，我们选不同的物品就是将其用乘法的形式表示，然后个数附到幂上面—— &lt;span class=&#34;math display&#34;&gt;\[
x_1^3x_2 + x_1^3x_3 + x_1^2x_2^2 + x_1^2x_3^2 + x_1x_3^3\\ + x_1^2x_2x_3 + x_1x_2^2x_3 + x_1x_2x_3^2 + x_2x_3^3+x_2^2x_3^2
\]&lt;/span&gt; 如果我们不考虑排列方案，那么 &lt;span class=&#34;math inline&#34;&gt;\(x_1,x_2\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x_3\)&lt;/span&gt; 是没有必要进行区分的，直接合并成若干倍的 &lt;span class=&#34;math inline&#34;&gt;\(z^4\)&lt;/span&gt; 即可。但是这里要区分的原因就是不同的组合方案对应的排列数是不一样的。&lt;/p&gt;
&lt;p&gt;回顾多重组合数 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n}{n_1,n_2,\cdots}\)&lt;/span&gt;，不难发现此处 &lt;span class=&#34;math inline&#34;&gt;\(x_1^3x_2\)&lt;/span&gt; 对应的排列数即为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{4}{3,1}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x_1^2x_2x_3\)&lt;/span&gt; 对应的排列数为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{4}{2,1,1}\)&lt;/span&gt;，等等……&lt;/p&gt;
&lt;p&gt;而多重组合数的计算就是用 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 除以每一个 &lt;span class=&#34;math inline&#34;&gt;\(n_i!\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么上面的式子中，每一项对应的排列数，分子都是 &lt;span class=&#34;math inline&#34;&gt;\(4!\)&lt;/span&gt;，分母都是对应数量的阶乘之积。那么若我们将 &lt;span class=&#34;math inline&#34;&gt;\(4!\)&lt;/span&gt; 除到左边来，则会发现这个东西似乎是一个很好的形式……&lt;/p&gt;
&lt;p&gt;那么对组合类 &lt;span class=&#34;math inline&#34;&gt;\(\mathcal A\)&lt;/span&gt; 和其计数序列 &lt;span class=&#34;math inline&#34;&gt;\(\langle A_n\rangle\)&lt;/span&gt;，定义其&lt;strong&gt;指数生成函数（EGF，exponential GF）&lt;/strong&gt;为 &lt;span class=&#34;math display&#34;&gt;\[
\hat F(z) = \sum_{n\ge 0}A_n\frac{z^n}{n!}
\]&lt;/span&gt; 此时其核函数为 &lt;span class=&#34;math inline&#34;&gt;\(k_n(z) = \dfrac{z^n}{n!}\)&lt;/span&gt;。这个时候我们考虑上面那个问题的三个 EGF： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\hat F_1(z) &amp;amp;= 1 + z + \frac{z^2}{2!} + \frac{z^3}{3!}\\
\hat F_2(z) &amp;amp;= 1 + z + \frac{z^2}{2!}\\
\hat F_3(z) &amp;amp;= 1 + z + \frac{z^2}{2!} + \frac{z^3}{3!}\\
\end{aligned}
\]&lt;/span&gt; 乘在一起，不难发现选的个数对应的阶乘会出现在分母上，刚好能与上面我们的多重集组合数良好定义，下面我们扯一点 EGF 的性质。&lt;/p&gt;
&lt;h3 id=&#34;egf-的简单性质&#34;&gt;EGF 的简单性质&lt;/h3&gt;
&lt;p&gt;先解释一下这玩意为什么叫“指数”生成函数，我们考虑 &lt;span class=&#34;math inline&#34;&gt;\(\langle 1,1,\cdots\rangle\)&lt;/span&gt; 的 EGF： &lt;span class=&#34;math display&#34;&gt;\[
\hat F(z) = 1 + z + \frac{z^2}{2!} + \frac{z^3}{3!} + \cdots = \sum_{n\ge0}\frac{z^n}{n!} = e^z
\]&lt;/span&gt; （考虑 &lt;span class=&#34;math inline&#34;&gt;\(e^z\)&lt;/span&gt; 的麦克劳林展开），所以这就是其名字来源。&lt;/p&gt;
&lt;p&gt;对于 EGF 的组合意义，其加法依然是不相交集合的并，但是乘法对应的就是&lt;strong&gt;有标号对象的笛卡尔积&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;给定两个组合对象 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt;，各自内有着 &lt;span class=&#34;math inline&#34;&gt;\(1,2,\cdots,|a|\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(1,2,\cdots,|b|\)&lt;/span&gt; 的标号（可以理解为里面的 &lt;span class=&#34;math inline&#34;&gt;\(|a|\)&lt;/span&gt; 个元素都是互异而需要加以区分的）。而拼接后得到的 &lt;span class=&#34;math inline&#34;&gt;\(c = (a,b)\)&lt;/span&gt; 需要分配 &lt;span class=&#34;math inline&#34;&gt;\(1\sim c\)&lt;/span&gt; 的标号，约定标号分配的时候 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 内部顺序不变（以构成双射），那么给 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 标号的方案数显然为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{|a| + |b|}{|a|}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;组合意义可以理解为，从里面选出 &lt;span class=&#34;math inline&#34;&gt;\(|a|\)&lt;/span&gt; 个标号分配给 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，或者考虑将两个部分进行归并。&lt;/p&gt;
&lt;p&gt;所以你注意到，EGF 的乘法实际上是对应数列的&lt;strong&gt;二项加法卷积&lt;/strong&gt;，即 &lt;span class=&#34;math display&#34;&gt;\[
\left[\frac{z^n}{n!}\right]\left(\hat F(z)\hat G(z)\right) = \sum_{x+y = n}\binom n x\left[\frac{z^x}{x!}\right]\hat F(z)\left[\frac{z^y}{y!}\right]\hat G(z)
\]&lt;/span&gt; 设 &lt;span class=&#34;math inline&#34;&gt;\(\hat F(z)\hat G(z) = \hat H(z)\)&lt;/span&gt; 的话，写清楚些就是 &lt;span class=&#34;math display&#34;&gt;\[
h_n = \sum_{x+y =n}\binom nx f_xg_y
\]&lt;/span&gt; 即加法卷积的时候带了个二项式系数，证明则考虑把 EGF 里面的 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 提取出来然后当作普通 OGF 的乘法： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\frac{h_n}{n!} &amp;amp;= \sum_{x+y=n}\frac{f_x}{x!}\frac{g_y}{y!}\\
h_n &amp;amp;= \sum_{x+y=n}\frac{n!}{x!y!}f_xg_y\\
&amp;amp;= \sum_{x+y = n}\binom n xf_xg_y
\end{aligned}
\]&lt;/span&gt; 事实上这个所谓的二项式系数就是我们对于标号归并的一个方案数，如上文所述。&lt;/p&gt;
&lt;p&gt;此外，我们有常见的若干 EGF：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;数列&lt;/th&gt;
&lt;th&gt;EGF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,1,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(e^z\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle1,-1,1,-1,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(e^{-z}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,c,c^2,c^3,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(e^{cz}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,0,1,0,\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{e^x + e^{-x}}{2}\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle 1,a,a^{\underline 2},a^{\underline 3},\cdots\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\((1+x)^a\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;第四个是和之前差不多的方法——将 &lt;span class=&#34;math inline&#34;&gt;\(e^x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(e^{-x}\)&lt;/span&gt; 相加再除以二以只保留偶数次项，奇数次项其实是类似的。最后一个可以考虑组合数的定义：&lt;span class=&#34;math inline&#34;&gt;\(\dbinom r k = \dfrac{r^{\underline k}}{k!}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k!\)&lt;/span&gt; 提进 EGF 的核函数里面即可。&lt;/p&gt;
&lt;p&gt;在使用 EGF 时，将其看作 OGF 来操作是完全没有问题的（事实上我们也是这么做的），但是&lt;strong&gt;一定要在算完之后乘上 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 以还原系数&lt;/strong&gt;，很容易漏掉。&lt;/p&gt;
&lt;h3 id=&#34;egf-的简单应用&#34;&gt;EGF 的简单应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(14\)&lt;/span&gt;：&lt;a href=&#34;http://poj.org/problem?id=3734&#34;&gt;POJ3734 Blocks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;红黄蓝绿四种颜色填 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个有标号格子，要求红色和绿色的格子数为偶数，问有多少种涂色的方案。&lt;span class=&#34;math inline&#34;&gt;\(T\le 100\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^9\)&lt;/span&gt;。模 &lt;span class=&#34;math inline&#34;&gt;\(10007\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先这是一个有标号问题，考虑将四种颜色的 EGF 乘起来然后找 &lt;span class=&#34;math inline&#34;&gt;\(\left[\dfrac{z^n}{n!}\right]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对于偶数个的限制，发现其就是 &lt;span class=&#34;math inline&#34;&gt;\(1 + \dfrac{z^2}{2!}+\dfrac{z^4}{4!} + \cdots = \dfrac{e^x + e^{-x}}{2}\)&lt;/span&gt;。那么答案就是 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
=&amp;amp;\left[\dfrac{z^n}{n!}\right]\left(\frac{e^z + e^{-z}}{2}\right)^2(e^z)^2\\
=&amp;amp;\left[\dfrac{z^n}{n!}\right]\dfrac{e^{4z} + 2e^{2z} + 1}{4}\\
=&amp;amp;\frac{1}{4}(4^n + 2^{n+1})
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(15\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5219&#34;&gt;P5219 无聊的水题 I&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的且度数最大为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的有标号无根树的个数，&lt;span class=&#34;math inline&#34;&gt;\(2\le n,m\le 5\times 10^4\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;计树类问题可以考虑 Prufer 序列，其将所有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的有标号无根树与长度为 &lt;span class=&#34;math inline&#34;&gt;\(n-2\)&lt;/span&gt; 的序列建立了双射。&lt;/p&gt;
&lt;p&gt;注意到 Prufer 序列中，度数为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的点恰好出现了 &lt;span class=&#34;math inline&#34;&gt;\(m - 1\)&lt;/span&gt; 次。所以我们要求的就是出现次数最多的数恰好出现了 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次的序列个数。&lt;/p&gt;
&lt;p&gt;恰好出现不是很好处理，考虑用 &lt;span class=&#34;math inline&#34;&gt;\(\le m - 1\)&lt;/span&gt; 的减去 &lt;span class=&#34;math inline&#34;&gt;\(\le m - 2\)&lt;/span&gt; 的以得到答案。此时相当于变成上面的填颜色问题，注意我们这里有了限制，每种颜色的 EGF 是 &lt;span class=&#34;math inline&#34;&gt;\(\hat F(z) = \displaystyle\sum_{i=0}^m\dfrac{z^i}{i!}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 种颜色的乘起来取 &lt;span class=&#34;math inline&#34;&gt;\(\left[\dfrac{z^{n-2}}{(n-2)!}\right]\hat F(z)^n\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;多项式快速幂一下就行，&lt;del&gt;虽然我不知道为啥我的 exp 快速幂寄了&lt;/del&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(16\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5339&#34;&gt;P5339 [TJOI2019]唱、跳、rap和篮球&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;四种颜色染排列，&lt;span class=&#34;math inline&#34;&gt;\(1,2,3,4\)&lt;/span&gt; 颜色分别有 &lt;span class=&#34;math inline&#34;&gt;\(a,b,c,d\)&lt;/span&gt; 种，问有多少种染色方案，使得不存在位置 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(k,k+1,k+2,k+3\)&lt;/span&gt; 上的颜色分别为 &lt;span class=&#34;math inline&#34;&gt;\(1,2,3,4\)&lt;/span&gt;。（实在不想让鸡你太美污染文章）&lt;span class=&#34;math inline&#34;&gt;\(n\le1000;a,b,c,d\le 500\)&lt;/span&gt;，一般通过 NTT 模数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不存在就很容斥。&lt;/p&gt;
&lt;p&gt;考虑设至少有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个鸡你太美的方案为 &lt;span class=&#34;math inline&#34;&gt;\(f_k\)&lt;/span&gt;，恰好有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个的为 &lt;span class=&#34;math inline&#34;&gt;\(g_k\)&lt;/span&gt;，那么我们要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(g_0\)&lt;/span&gt;，进行二项式反的一个演得到 &lt;span class=&#34;math display&#34;&gt;\[
g_0 = \sum_{i\ge 0}(-1)^if_i
\]&lt;/span&gt; 压力给到 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 这边。发现设 &lt;span class=&#34;math inline&#34;&gt;\(S(a,b,c,d,n)\)&lt;/span&gt; 表示四种颜色分别有 &lt;span class=&#34;math inline&#34;&gt;\(a,b,c,d\)&lt;/span&gt; 个，随便摆 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个的方案数的话， &lt;span class=&#34;math display&#34;&gt;\[
f_k = \binom{n - 3k}{k}S(a - k, b - k, c - k, d - k, n - 4k)
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n-3k}{k}\)&lt;/span&gt; 的意思是将 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个鸡你太美视作一个点，然后选 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个点来放鸡你太美。&lt;/p&gt;
&lt;p&gt;后面那个东西，考虑设 &lt;span class=&#34;math inline&#34;&gt;\(\hat F_{n}(z) = \displaystyle\sum_{i=0}^n\dfrac{z^i}{i!}\)&lt;/span&gt;，则根据 EGF 的排列计数得到 &lt;span class=&#34;math display&#34;&gt;\[
S(a,b,c,d,n) = \left[\frac{z^n}{n!}\right]\hat F_a(z)\hat F_b(z)\hat F_c(z)\hat F_d(z)
\]&lt;/span&gt; 直接算复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2\log n)\)&lt;/span&gt;，可以通过某些手段做到 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(17\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5296&#34;&gt;P5296 [北京省选集训2019]生成树计数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的带权无向完全图，求所有生成树的权值的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次方之和，生成树的权值定义为边权之和。&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 30\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le k\le 30\)&lt;/span&gt;，模 NTT。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意到矩阵树定理只能处理生成树权值定义为边权之积的情况，这里我们考虑进行一些转化。&lt;/p&gt;
&lt;p&gt;而这里若 &lt;span class=&#34;math inline&#34;&gt;\(k = 0\)&lt;/span&gt; 我们是可以简单矩阵树定理的，考虑 &lt;span class=&#34;math inline&#34;&gt;\(k = 1\)&lt;/span&gt; 的情况：类似联合省选 20 AD2T3 的做法可以将边权变为若干一次函数相乘之积。&lt;/p&gt;
&lt;p&gt;考虑寻找一个矩阵树里面能用乘积来进行的转移：假设当前这棵生成树权值为 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt;，现要加 &lt;span class=&#34;math inline&#34;&gt;\(w_e\)&lt;/span&gt; 的边： &lt;span class=&#34;math display&#34;&gt;\[
(w+w_e)^k = \sum_{j=0}^k\binom kjw^jw_e^{k-j}
\]&lt;/span&gt; 二项卷积！弄成 EGF 的形式 &lt;span class=&#34;math display&#34;&gt;\[
e^{(w+w_e)z} = e^{wz}e^{w_ez}
\]&lt;/span&gt; 于是将权值为 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt; 的边重定义权值为 &lt;span class=&#34;math inline&#34;&gt;\(e^{w_ix}\)&lt;/span&gt;，那么一棵生成树的权值就是所有 EGF 乘积中的 &lt;span class=&#34;math inline&#34;&gt;\([z^k/k!]\)&lt;/span&gt;，然后就上矩阵树即可。也许在这里 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 暴力乘法和求逆会更快些。&lt;/p&gt;
&lt;h3 id=&#34;exp-的组合意义&#34;&gt;exp 的组合意义&lt;/h3&gt;
&lt;p&gt;考虑运算 &lt;span class=&#34;math inline&#34;&gt;\(\exp(F(z)) = \displaystyle\sum\limits_{n\ge 0}\dfrac{F(z)^n}{n!}\)&lt;/span&gt;。乍一看平平无奇，实际上其有着非常妙的组合意义：生成集合。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(18\)&lt;/span&gt;：考虑若干有标号的小球，可以选若干放进盒子里。&lt;strong&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个小球放进某个盒子里的方案数为 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;，特别地不能空放，即 &lt;span class=&#34;math inline&#34;&gt;\(f_0 = 0\)&lt;/span&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个小球放入 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个无标号盒子的方案数？&lt;/li&gt;
&lt;li&gt;问将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个小球放入任意个无标号盒子的方案数？&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑第一个问题，我们考虑其生成函数 &lt;span class=&#34;math inline&#34;&gt;\(G_k(z)\)&lt;/span&gt;，很明显地 &lt;span class=&#34;math display&#34;&gt;\[
[z^n]G_k(z) = \frac{n!}{k!}\sum_{a_1 + a_2 + \cdots + a_k = n}\frac{f_{a_1}f_{a_2}\cdots f_{a_k}}{a_1!a_2!\cdots a_k!}
\]&lt;/span&gt; 所以不妨令 EGF &lt;span class=&#34;math inline&#34;&gt;\(F(z) = \displaystyle\sum_{n\ge 0}\frac{f_nz^n}{n!}\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
G_k(z) = \frac{1}{k!}F^k(z)
\]&lt;/span&gt; 所以第二问的生成函数就是 &lt;span class=&#34;math display&#34;&gt;\[
G(z) = \sum_{k\ge 0}G_k(z) = \exp(F(z))
\]&lt;/span&gt; 即我们拿有标号元素构成的集合来生成集族。有标号小球 -&amp;gt; 包含小球的盒子 -&amp;gt; 若干个盒子 就是一个很好的例子；有标号的点 -&amp;gt; 有标号无向连通图 -&amp;gt; 有标号无向一般图，有标号点 -&amp;gt; 有标号无根树 -&amp;gt; 有标号森林 也是类似的思路。&lt;/p&gt;
&lt;p&gt;展开式的意义直观理解就是枚举有多少个元素，然后多次拼接（卷积），除以 &lt;span class=&#34;math inline&#34;&gt;\(k!\)&lt;/span&gt; 是因为元素间无序。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(19\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4841&#34;&gt;P4841 [集训队作业2013]城市规划&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的有标号无向连通图的个数，一般 NTT 范围。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据上文的思路，一般图的个数的生成函数 为 连通图的生成函数 的 exp，而一般图个数的 EGF 又是很好求的：&lt;span class=&#34;math inline&#34;&gt;\(g_n = 2^{\binom n 2}\)&lt;/span&gt;，所以取个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 即可。（不要忘记乘 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt;，他是 EGF）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(20\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5162&#34;&gt;P5162 WD与积木&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(1\sim n\)&lt;/span&gt; 划分为若干&lt;strong&gt;有序&lt;/strong&gt;集合，问所有不同分割方法中，集合个数的期望。&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^5\)&lt;/span&gt;，模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果先考虑分割方案的总数，则对于一个集合，EGF 应该为 &lt;span class=&#34;math inline&#34;&gt;\(F(z) = e^z - 1\)&lt;/span&gt;。但是是若干个有序集合，所以下面就不除掉阶乘了，于是根据几何级数定理得到 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{1}{2 - e^z}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而我们要求的是集合个数的期望，所以需要求出每种方案中集合个数的总和，发现是 &lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}nF^n(z)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{n\ge 0}nz^n\)&lt;/span&gt;，可以对其施扰动法：&lt;span class=&#34;math inline&#34;&gt;\((1-z)\sum\limits_{n\ge 0} nz^n = \sum\limits_{n\ge 0} nz^n - \sum\limits_{n\ge 1} (n-1)z^n = \dfrac{z}{1-z}\)&lt;/span&gt;。所以答案是 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{F(z)}{(1-F(z))^2} = \dfrac{e^z - 1}{(2-e^z)^2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当然伟大的 Asd_Okuu 队长提出了可以使用求导证明： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\left(\frac{1}{1-z}\right)&amp;#39;&amp;amp;=\sum_{n\ge 0}(n+1)z^n\\
\frac{1}{(1-z)^2}&amp;amp;=\sum_{n\ge 0}nz^n + \frac{1}{1-z}\\
\sum_{n\ge 0}nz^n &amp;amp;= \frac{z}{(1-z)^2}
\end{aligned}
\]&lt;/span&gt; 所以直接写个求逆就完事了。&lt;/p&gt;
&lt;p&gt;对于无标号的情况即 Euler 变换，下文可能会讲吧。&lt;/p&gt;
&lt;h2 id=&#34;二项式系数的补充&#34;&gt;二项式系数的补充&lt;/h2&gt;
&lt;h2 id=&#34;特殊数列&#34;&gt;特殊数列&lt;/h2&gt;
</description>
        </item>
        <item>
        <title>集合幂级数胡扯</title>
        <link>https://oi.imyangty.com/note-set-power-series/</link>
        <pubDate>Wed, 22 Jun 2022 20:20:14 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-set-power-series/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg39.webp" alt="Featured image of post 集合幂级数胡扯" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;好难啊。NOI 前随缘来胡扯点东西。&lt;/p&gt;
&lt;p&gt;由于是写给自己看的所以可能写的很暴躁简略，如果看不懂可以去 Ref 部分看一下大佬们的博客（&lt;/p&gt;
&lt;h2 id=&#34;定义&#34;&gt;定义&lt;/h2&gt;
&lt;p&gt;一种定义在集合上的形式幂级数。&lt;/p&gt;
&lt;p&gt;为了方便，定义记号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(2^U\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt; 的幂集，即 &lt;span class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt; 的所有子集构成的集合。&lt;/li&gt;
&lt;li&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt; 为全集 &lt;span class=&#34;math inline&#34;&gt;\(\{1,2,\cdots, n\}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(n=|U|\)&lt;/span&gt;，注意到我们这里只是为了区分集合的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素。&lt;/li&gt;
&lt;li&gt;下文若无特殊说明，都有 &lt;span class=&#34;math inline&#34;&gt;\(S\in 2^{U}\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; 上的集合幂级数为映射 &lt;span class=&#34;math inline&#34;&gt;\(f:2^U\to F\)&lt;/span&gt;，其中对于每个 &lt;span class=&#34;math inline&#34;&gt;\(S\subseteq U\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 都有对应取值 &lt;span class=&#34;math inline&#34;&gt;\(f_S\in F\)&lt;/span&gt;。即我们相当于把全集的幂集到 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; 建立了一个映射。&lt;/p&gt;
&lt;p&gt;类比形式幂级数，我们在每个 &lt;span class=&#34;math inline&#34;&gt;\(f_S\)&lt;/span&gt; 后面添加占位符 &lt;span class=&#34;math inline&#34;&gt;\(x^S\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(cx^S\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 会将 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 映射到 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;。因此，我们一般如是表示： &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{S\subseteq U} f_Sx^S
\]&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;加法乘法&#34;&gt;加法/乘法&lt;/h2&gt;
&lt;p&gt;形式幂级数的加减法（对应系数相加减）和乘法（加法卷积，FFT/NTT）大家都已熟知，而集合幂级数同样可以定义加减法和乘法。&lt;/p&gt;
&lt;p&gt;加减法与形式幂级数类似，都为对应系数相加减，&lt;strong&gt;两幂级数对应的全集需要相同&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而乘法的定义就略微复杂。我们希望乘法有关于加法的分配律，此时就需要定义一下指数的运算 &lt;span class=&#34;math inline&#34;&gt;\(\oplus\)&lt;/span&gt;，要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交换律：&lt;span class=&#34;math inline&#34;&gt;\(S\oplus T = T\oplus S\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;结合律：&lt;span class=&#34;math inline&#34;&gt;\((A\oplus B)\oplus C = A\oplus (B\oplus C)\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;单位元：&lt;span class=&#34;math inline&#34;&gt;\(A\oplus \varnothing = A\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则 &lt;span class=&#34;math display&#34;&gt;\[
H(x) = F(x)G(x) = \sum_{S\in 2^U}\sum_{T\in 2^U}(f_Sg_T)x^{S\oplus T}
\]&lt;/span&gt; 而常见的运算符包括交，并和对称差，下文将逐个阐述。&lt;/p&gt;
&lt;h2 id=&#34;集合并卷积&#34;&gt;集合并卷积&lt;/h2&gt;
&lt;h3 id=&#34;定义-1&#34;&gt;定义&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
h_S = \sum_{L\in 2^U}\sum_{R\in 2^U}[L\cup R = S]f_Lg_R
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从位运算的角度来讲，这就是按位或卷积： &lt;span class=&#34;math display&#34;&gt;\[
h_i = \sum_{j\mid k = i}f_jg_k
\]&lt;/span&gt; 暴力求解 &lt;span class=&#34;math inline&#34;&gt;\(O(4^n)\)&lt;/span&gt;，劣。&lt;/p&gt;
&lt;h3 id=&#34;莫比乌斯变换&#34;&gt;莫比乌斯变换&lt;/h3&gt;
&lt;p&gt;我们可以使用将 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 分别进行莫比乌斯变换后求解。具体地我们定义集合幂级数 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 的莫比乌斯变换 &lt;span class=&#34;math inline&#34;&gt;\(\hat{F}(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math display&#34;&gt;\[
\hat f_S = \sum_{T\subseteq S}f_T
\]&lt;/span&gt; 然后将 &lt;span class=&#34;math inline&#34;&gt;\(\hat F(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\hat G(x)\)&lt;/span&gt; 按位相乘即可，考虑证明： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\hat h_S &amp;amp;= \hat f_S\hat g_S\\
&amp;amp;= \sum_{L\subseteq S}f_L\sum_{R\subseteq S} g_R\\
&amp;amp;= \sum_{L\subseteq S}\sum_{R\subseteq S}f_Lg_R\\
&amp;amp;= \sum_{L\subseteq S}\sum_{R\subseteq S}[(L\cup R)\subseteq S] f_Lg_R
\end{aligned}
\]&lt;/span&gt; 最后需要把 &lt;span class=&#34;math inline&#34;&gt;\(\hat H(x)\)&lt;/span&gt; 变换回 &lt;span class=&#34;math inline&#34;&gt;\(H(x)\)&lt;/span&gt;，关于 FMT 是如何完成的见下文。&lt;/p&gt;
&lt;p&gt;这个过程和 FFT 啥的很像，都是将其点值化然后直接将对应点值相乘，再逆变换回去。&lt;/p&gt;
&lt;h3 id=&#34;高维前缀和&#34;&gt;高维前缀和&lt;/h3&gt;
&lt;p&gt;发现如果我们用二进制数的思想理解集合，则莫比乌斯变换就相当于一个高维前缀和，其中每个二进制位都是一维。&lt;/p&gt;
&lt;p&gt;具体地，枚举二进制位，然后对于下标 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 进行加减操作之类的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; FMT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[], &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n); i &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n); ++j)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;amp; j) f[j] += c * f[j ^ i];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;; &lt;span class=&#34;co&#34;&gt;// 此处没有考虑取模之类的问题，只是示意代码。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;传进去的 &lt;span class=&#34;math inline&#34;&gt;\(c = 1\)&lt;/span&gt; 表示是莫比乌斯变换，&lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; 表示其逆变换。&lt;/p&gt;
&lt;p&gt;枚举二进制位这一个过程相当于就是在枚举做高维前缀和的维度。&lt;/p&gt;
&lt;h3 id=&#34;fmt-的性质&#34;&gt;FMT 的性质&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;FMT 是线性变换，下文讲 FWT_OR 的时候详细说明。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\prod F_i(x) = \operatorname{IFMT}(\prod\operatorname{FMT}(F_i(x))\)&lt;/span&gt;。其中左边的 $$ 是&lt;strong&gt;集合并卷积&lt;/strong&gt;，右边的是&lt;strong&gt;对应点值相乘&lt;/strong&gt;。所以求若干集合幂级数的并卷积的时候可以直接先 FMT 好然后一波带走，不需要像形式幂级数那样 DFT，两个乘起来之后就得 IDFT。因为两个长 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的多项式卷起来后长 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt;，而两个定义在相同全集上的集合幂级数乘起来后还是定义在同一全集上。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;集合对称差卷积&#34;&gt;集合对称差卷积&lt;/h2&gt;
&lt;h3 id=&#34;定义-2&#34;&gt;定义&lt;/h3&gt;
&lt;p&gt;定义两个集合 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 的&lt;strong&gt;对称差&lt;/strong&gt;为 &lt;span class=&#34;math inline&#34;&gt;\(A\Delta B = \complement_{A\cup B}(A\cap B)\)&lt;/span&gt;，相当于&lt;strong&gt;异或运算&lt;/strong&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
h_S = \sum_{L\in 2^U}\sum_{R\in 2^U}[L\Delta R = S]f_Lg_R
\]&lt;/span&gt; 从位运算卷积的角度理解其就是异或卷积。 &lt;span class=&#34;math display&#34;&gt;\[
h_k = \sum_{i\oplus j = k}f_ig_j
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(\oplus\)&lt;/span&gt; 为异或运算。&lt;/p&gt;
&lt;h3 id=&#34;快速沃尔什变换fwt&#34;&gt;快速沃尔什变换/FWT&lt;/h3&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 分别进行沃尔什变换之后对应位置相乘，再沃尔什逆变换回去即可。&lt;/p&gt;
&lt;p&gt;下文具体阐述，有点抽象。&lt;/p&gt;
&lt;h2 id=&#34;fwt&#34;&gt;FWT&lt;/h2&gt;
&lt;h3 id=&#34;构造&#34;&gt;构造&lt;/h3&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)\)&lt;/span&gt; 为幂级数 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 变换之后得到的幂级数。令 &lt;span class=&#34;math inline&#34;&gt;\(C = A * B\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 位运算卷积后的结果。则需要满足： &lt;span class=&#34;math display&#34;&gt;\[
A*B = C\iff \operatorname{FWT}(A)\cdot\operatorname{FWT}(B) = \operatorname{FWT}(C)
\]&lt;/span&gt; FFT 是一个线性变换，相当于乘上一个范德蒙矩阵。考虑对 FWT 构造一个类似的转移矩阵。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt; 为变换系数，即 &lt;span class=&#34;math inline&#34;&gt;\(A_j\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\)&lt;/span&gt; 产生的贡献，则 &lt;span class=&#34;math display&#34;&gt;\[
\operatorname{FWT}(A)_i = \sum_{j = 0}^{n - 1}c(i, j)A_j
\]&lt;/span&gt; 根据 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\cdot\operatorname{FWT}(B)_i=\operatorname{FWT}(C)_i\)&lt;/span&gt;，发现 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\left(\sum_{j = 0}^{n - 1}c(i, j)A_j\right)\left(\sum_{j = 0}^{n - 1}c(i, j)B_j\right) &amp;amp;= \sum_{j = 0}^{n - 1}c(i, j)C_j\\
\sum_{j = 0}^{n - 1}\sum_{k = 0}^{n - 1}c(i,j)c(i, k)A_jB_k &amp;amp;= \sum_{j = 0}^{n -1}c(i, j)C_j
\end{aligned}
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(A*B = C\)&lt;/span&gt;， &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{j = 0}^{n - 1}c(i, j)C_j &amp;amp;= \sum_{j = 0}^{n - 1}c(i,j)\sum_{t_1\oplus t_2 = j}A_{t_1}B_{t_2}\\
\sum_{j = 0}^{n - 1}\sum_{k = 0}^{n - 1}c(i,j)c(i, k)A_jB_k &amp;amp;= \sum_{j = 0}^{n - 1}c(i,j)\sum_{t_1\oplus t_2 = j}A_{t_1}B_{t_2}\\
&amp;amp;= \sum_{j = 0}^{n - 1}\sum_{t_1\oplus t_2 = j}A_{t_1}B_{t_2}c(i, j)\\
&amp;amp;= \sum_{t_1 = 0}^{n - 1}\sum_{t_2 = 0}^{n - 1}A_{t_1}B_{t_2}c(i, t_1\oplus t_2)
\end{aligned}
\]&lt;/span&gt; 对比以下左右两边，发现 &lt;span class=&#34;math display&#34;&gt;\[
c(i, j)c(i, k) = c(i, j\oplus k)
\]&lt;/span&gt; 同时，位运算是具有按位独立性的，所以知道了所有的 &lt;span class=&#34;math inline&#34;&gt;\(c(x, y)\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(x, y\in \{0, 1\}\)&lt;/span&gt;）之后就可以求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt;，具体地，把 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位称为 &lt;span class=&#34;math inline&#34;&gt;\(i_k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j_k\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j) = \prod c(i_k, j_k)\)&lt;/span&gt;，证明显然。&lt;/p&gt;
&lt;p&gt;现在考虑 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\)&lt;/span&gt; 的计算。前面说过，其等于 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 0}^{n - 1}c(i, j)A_j
\]&lt;/span&gt; 然后计算就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，貌似没什么卵用。&lt;/p&gt;
&lt;p&gt;接下来假定 &lt;span class=&#34;math inline&#34;&gt;\(n = 2^m\)&lt;/span&gt;，然后按位折半： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;= \sum_{j = 0}^{n - 1}c(i, j)A_j\\
&amp;amp;= \sum_{j = 0}^{n / 2 - 1}c(i, j)A_j + \sum_{j = n/2}^{n - 1}c(i, j)A_j\\
&amp;amp;= c(i_0, 0)\sum_{j = 0}^{n / 2 - 1}c(i&amp;#39;, j&amp;#39;)A_j + c(i_0, 1)\sum_{j = n / 2}^{n - 1}c(i&amp;#39;, j&amp;#39;)A_j\\
\end{aligned}
\]&lt;/span&gt; 然后就会惊奇的发现：问题的规模得到了减半。设 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的前一半为 &lt;span class=&#34;math inline&#34;&gt;\(A_0\)&lt;/span&gt;，后一半为 &lt;span class=&#34;math inline&#34;&gt;\(A_1\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=c(0, 0)\operatorname{FWT}(A_0)_i + c(0, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= c(1, 0)\operatorname{FWT}(A_0)_i + c(1, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt; 分析一下时间复杂度：&lt;span class=&#34;math inline&#34;&gt;\(T(n) = T(n / 2) + O(n) = O(n\log n)\)&lt;/span&gt;。逆变换也就是 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 矩阵的逆，具体下文。&lt;/p&gt;
&lt;h3 id=&#34;具体卷积&#34;&gt;具体卷积&lt;/h3&gt;
&lt;p&gt;对于不同的位运算 &lt;span class=&#34;math inline&#34;&gt;\(\oplus\)&lt;/span&gt;，构造相应的 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 矩阵。将 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
c(0, 0)&amp;amp;c(0, 1)\\
c(1, 0)&amp;amp;c(1, 1)
\end{bmatrix}
\]&lt;/span&gt; 称为位矩阵。&lt;/p&gt;
&lt;h4 id=&#34;or-卷积&#34;&gt;OR 卷积&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, k) = c(i, j\lor k)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, j) = c(i, j)\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\in\{0, 1\}\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
c(1, 0)c(1, 1) = c(1, 1)\\
c(0, 1)c(0, 0) = c(0, 1)
\end{cases}
\]&lt;/span&gt; 合法的矩阵有 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1 \\ 1 &amp;amp; 0\end{bmatrix}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 0\\1 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;第二个的意义为 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j) = [i\land j = j]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i = \displaystyle\sum_{j = 0}^{n - 1}c(i, j) A_j = \sum_{j\in i}A_j\)&lt;/span&gt;。相当于就是子集求和，并且其逆阵的形式很对称，所以使用第二个矩阵。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=\operatorname{FWT}(A_0)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= \operatorname{FWT}(A_0)_i + \operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; OR(modint *f) {&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] += f[i + j];&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 0\\
1 &amp;amp; 1
\end{bmatrix}^{-1} = 
\begin{bmatrix}
1 &amp;amp; 0\\
-1 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{IFWT}(A)_i &amp;amp;=\operatorname{IFWT}(A_0)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{IFWT}(A)_{i + n/2}&amp;amp;= \operatorname{IFWT}(A_0)_i - \operatorname{IFWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以就可以写出如下的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; OR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] += f[i + j] * x;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;and-卷积&#34;&gt;AND 卷积&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(j, k) = c(i,j\land k)\)&lt;/span&gt;，类似地，&lt;span class=&#34;math inline&#34;&gt;\(c(i,j)\in\{0,1\}\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
c(0, 0)c(0, 1) = c(0, 0)\\
c(1, 0)c(1, 1) = c(1, 0)\\
\end{cases}
\]&lt;/span&gt; 合法的矩阵有 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1\\ 0 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}0 &amp;amp; 1\\1 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt;。第一种的意义为 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j) = [i\land j = i]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i = \displaystyle\sum_{j=0}^{n - 1}c(i,j)A_j = \sum_{i\in j}A_j\)&lt;/span&gt;，相当于超集求和，且求逆完的形式比较对偶，所以使用第一种： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=\operatorname{FWT}(A_0)_i + \operatorname{FWT}(A_1)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;=\operatorname{FWT}(A_1)_i  &amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 1\\0 &amp;amp; 1
\end{bmatrix}^{-1} = \begin{bmatrix}
1 &amp;amp; -1\\
0 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{IFWT}(A)_i &amp;amp;=\operatorname{IFWT}(A_0)_i - \operatorname{IFWT}(A_1)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{IFWT}(A)_{i + n/2}&amp;amp;=\operatorname{IFWT}(A_1)_i  &amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; AND(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k] * x;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;xor-卷积&#34;&gt;XOR 卷积&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, k) = c(i, j\operatorname{xor} k)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;合法的有 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1\\ 1 &amp;amp; -1\end{bmatrix}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1 \\ -1 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt;。第二种求完逆形式不太好，选用第一种。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=\operatorname{FWT}(A_0)_i + \operatorname{FWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= \operatorname{FWT}(A_0)_i -\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 1 \\ 1 &amp;amp; -1
\end{bmatrix}^{-1} =
\begin{bmatrix}
1/ 2 &amp;amp; 1/  2\\
1/2 &amp;amp; -1/2
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{IFWT}(A)_i &amp;amp;=\frac 1 2\operatorname{IFWT}(A_0)_i + \frac 1 2\operatorname{IFWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{IFWT}(A)_{i + n/2}&amp;amp;= \frac 1 2\operatorname{IFWT}(A_0)_i -\frac 1 2\operatorname{IFWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; XOR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] = f[i + j] - f[i + j + k] - f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] *= x, f[i + j + k] *= x;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;代码实现&#34;&gt;代码实现&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4717&#34;&gt;洛谷 P4717&lt;/a&gt; 的代码实现。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint A[maxn], B[maxn], a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; OR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] += f[i + j] * x;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; AND(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k] * x;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; XOR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] = f[i + j] - f[i + j + k] - f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] *= x, f[i + j + k] *= x;&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; mul(modint *f, modint *g) {&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) f[i] *= g[i];&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n;&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(A[i]);&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(B[i]);&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(A, a), cpy(B, b), OR(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), OR(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), mul(a, b), OR(a, MOD - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(a[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;); putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(A, a), cpy(B, b), AND(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), AND(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), mul(a, b), AND(a, MOD - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(a[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;); putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(A, a), cpy(B, b), XOR(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), XOR(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), mul(a, b), XOR(a, (MOD + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(a[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;); putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;整体的思路：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;回顾 FFT，现在要求构造一种线性变换满足 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)\cdot\operatorname{FWT}(B) = \operatorname{FWT}(C)\iff A*B = C\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;考虑构造系数矩阵 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i = \sum c(i, j)A_j\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, k) = c(i, j\oplus k)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现所有的 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt; 可以由 &lt;span class=&#34;math inline&#34;&gt;\(c(x, y)(x,y\in\{0, 1\})\)&lt;/span&gt; 得到。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\)&lt;/span&gt; 的式子折半拆开，发现变为两个子问题。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=c(0, 0)\operatorname{FWT}(A_0)_i + c(0, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= c(1, 0)\operatorname{FWT}(A_0)_i + c(1, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于具体的位运算，构造出 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}c(0, 0)&amp;amp; c(0, 1)\\ c(1, 0) &amp;amp; c(1, 1) \end{bmatrix}\)&lt;/span&gt; 及其逆阵，尽量使得两种形式统一。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;敲出迭代版代码。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;性质&#34;&gt;性质&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;由于 (i)FWT 的本质是使用一个矩阵来进行变换，所以其具有&lt;strong&gt;线性性&lt;/strong&gt;，即。 &lt;span class=&#34;math display&#34;&gt;\[
\operatorname{FWT}(A) + \operatorname{FWT}(B) = \operatorname{FWT}(A + B)\\
\operatorname{FWT}(cA) = c\operatorname{FWT}(A)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现 FMT 和 FWT_OR 是等价的，这也解释了上文为啥 FMT 具有线性性。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FWT_OR 等价于子集求和（高维前缀和），FWT_AND 等价于超集求和（高维后缀和）。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;子集卷积&#34;&gt;子集卷积&lt;/h2&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;p&gt;会综合 SOSdp 的应用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://atcoder.jp/contests/abc212/tasks/abc212_h&#34;&gt;ABC212H - Nim Counting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((A_1, \cdots, A_k)\)&lt;/span&gt;。可以如下安排石子：每堆石子数量必须是 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 之一，且石子堆数量小等于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。问安排石子使得先手 Nim 必胜的方案数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k, A_i\le 2^{17}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 两两不同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不难发现问题转化为求 &lt;span class=&#34;math inline&#34;&gt;\(\bigoplus_{i = 1}^m B_i\not=0\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt; 的方案数，其中 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为石子个数。&lt;/p&gt;
&lt;p&gt;先考虑固定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。则构造序列 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(C_i = [\exist j, A_j = i]\)&lt;/span&gt;，定义卷积 &lt;span class=&#34;math inline&#34;&gt;\(*\)&lt;/span&gt; 为异或卷积，则 &lt;span class=&#34;math inline&#34;&gt;\(C * C * \cdots * C\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;）的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 项系数即为异或和为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的方案数。这个过程是可以 FWT 做的，具体地，给 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(C)_i\)&lt;/span&gt; 的每一项做一下快速幂再 IFWT 回去，把除了第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 项之外的求个和，就得到了石子堆数为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的答案。&lt;/p&gt;
&lt;p&gt;然后，不固定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 怎么做呢？因为 FWT 是线性变换，而我们需要求的是 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{IFWT}(\operatorname{FWT}(C)_i + \operatorname{FWT}(C)_i^2 + \operatorname{FWT}(C)_i^3 + \cdots \operatorname{FWT}(C)_i^n)\)&lt;/span&gt;，所以定义 &lt;span class=&#34;math inline&#34;&gt;\(C&amp;#39;_i = \operatorname{FWT}(C)_i\)&lt;/span&gt;，然后求出 &lt;span class=&#34;math inline&#34;&gt;\(D_i = C_i&amp;#39; + C_i&amp;#39;^2 + \cdots + C_i&amp;#39;^n\)&lt;/span&gt; 再求 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{IFWT}(D)\)&lt;/span&gt; 把除了第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 项外的系数累加即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://codeforces.com/problemset/problem/449/D&#34;&gt;CF449D Jzzhu and Numbers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定多重集 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，问从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中选子集使得子集内的数按位与结果为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的方案数对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模的结果。&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le a_i\le 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨考虑二进制下数位的集合，令全集为 &lt;span class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt;，则可以对每个数 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 定义其集合幂级数 &lt;span class=&#34;math inline&#34;&gt;\(F_i(x) = x^{U} + x^{S_i}\)&lt;/span&gt;，然后 &lt;span class=&#34;math inline&#34;&gt;\([x^{\varnothing}]\prod F_i(x)\)&lt;/span&gt; 即为答案，其中 &lt;span class=&#34;math inline&#34;&gt;\(\prod\)&lt;/span&gt; 表示所有 &lt;span class=&#34;math inline&#34;&gt;\(F_i(x)\)&lt;/span&gt; 的&lt;strong&gt;集合与卷积&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;朴素的 FWT_AND 可以做到 &lt;span class=&#34;math inline&#34;&gt;\(O(na\log a)\)&lt;/span&gt;，跑不过去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是每个 &lt;span class=&#34;math inline&#34;&gt;\(F_i(x)\)&lt;/span&gt; 只有 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 项不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(F(x))_i = c(i, U) + c(i, a_i)\)&lt;/span&gt;，故其只能为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在需要求的就是对于每个 &lt;span class=&#34;math inline&#34;&gt;\(k\in[0, U]\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i = 0}^{n}(1 + c(k, a_i))\)&lt;/span&gt;。所以只要有 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 贡献的到的子集 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，其产生的贡献就是 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;，知道了有多少个 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 能贡献到这个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 之后一个快速幂就可以了。这个东西其实就是超集求和，可以使用 FWT_AND。具体地，设出一个序列 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(C_i\)&lt;/span&gt; 表示有多少个 &lt;span class=&#34;math inline&#34;&gt;\(a_k = i\)&lt;/span&gt;，然后对 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 做 FWT_AND 的结果为 &lt;span class=&#34;math inline&#34;&gt;\(C&amp;#39;\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(C&amp;#39;_k\)&lt;/span&gt; 就是能贡献到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的数量，再 &lt;span class=&#34;math inline&#34;&gt;\(C&amp;#39;_k = 2^{C&amp;#39;_k}\)&lt;/span&gt;，求出 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{IFWT}(C&amp;#39;)\)&lt;/span&gt; 取出 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{IFWT}(C&amp;#39;)_0\)&lt;/span&gt; 就是答案。&lt;/p&gt;
&lt;p&gt;注意一下全 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的情况，若把 &lt;span class=&#34;math inline&#34;&gt;\(lim\)&lt;/span&gt; 设为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 则会多算一个空集，要特判。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f[maxn], pow[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; AND(modint *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= lim; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; lim; i += o)&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k] * x;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp; read(tmp);&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++f[tmp];&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pow[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) pow[i] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pow[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    AND(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = pow[f[i].val];&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    AND(f, lim, mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P8292&#34;&gt;P8292 [省选联考 2022] 卡牌&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个整数 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次询问。每次询问给出 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 个质数，问有多少种选法使得 &lt;span class=&#34;math inline&#34;&gt;\(\prod s_i\)&lt;/span&gt; 被这每个质数整除，答案模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le s_i\le 2000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le 1500\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le \sum c_i\le 18000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\le p_{i,j}\le 2000\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先转化一下题意，给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个质因子集合 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次询问，每次询问给定一个质因子集合 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，问有多少种从这 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个集合中选若干集合出来使得他们的并可以包含 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的方案数。&lt;/p&gt;
&lt;p&gt;然后发现对于 &lt;span class=&#34;math inline&#34;&gt;\(s_i\le 30\)&lt;/span&gt; 的部分分可以随便状压 dp，然后状态非常的像或卷积啥的，然后发现他就是一车集合幂级数的或卷积，具体地令 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 中 有 &lt;span class=&#34;math inline&#34;&gt;\(c_x\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(F_x(z) = z^{\varnothing} + (2^{c_x} - 1)z^{S_x}\)&lt;/span&gt;（加上个 &lt;span class=&#34;math inline&#34;&gt;\(z^{\varnothing}\)&lt;/span&gt; 是可以表示不选）。&lt;/p&gt;
&lt;p&gt;那么对于 &lt;span class=&#34;math inline&#34;&gt;\(s_i\le 2000\)&lt;/span&gt;，回忆起有一道题叫做寿司晚宴，所以令 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; \sqrt{2000}\)&lt;/span&gt; 的质数为大质数，而我们会注意到 &lt;span class=&#34;math inline&#34;&gt;\(\le \sqrt{2000}\)&lt;/span&gt; 的质数只有 $14 $ 个（下文令其集合为 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;），非常的可以状压，并且大质数只会出现一次。这就是说，对于大质数 &lt;span class=&#34;math inline&#34;&gt;\(x,y\in T\)&lt;/span&gt;，我们是可以分开考虑的，反正&lt;strong&gt;不存在一个 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt; 能同时包含 &lt;span class=&#34;math inline&#34;&gt;\(x,y\)&lt;/span&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那先不考虑大质数，考虑 &lt;span class=&#34;math inline&#34;&gt;\(\in P\)&lt;/span&gt; 的所有质数的话，对所有的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 预处理出 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(F_x(z))\)&lt;/span&gt;，具体地我们发现原来的幂级数只有两项系数不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，所以包含了 &lt;span class=&#34;math inline&#34;&gt;\(S_x\)&lt;/span&gt; 的项的系数都为 &lt;span class=&#34;math inline&#34;&gt;\(2^{c_x}\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，&lt;strong&gt;都是 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的次幂&lt;/strong&gt;，所以可以只存次幂，预处理啥的很方便。&lt;/p&gt;
&lt;p&gt;然后在每次询问的时候，考虑到 &lt;span class=&#34;math inline&#34;&gt;\(2^{|P|}\sum c_i\)&lt;/span&gt; 的复杂度可以接受，对每一个 &lt;span class=&#34;math inline&#34;&gt;\(\in T\)&lt;/span&gt; 但 &lt;span class=&#34;math inline&#34;&gt;\(\notin P\)&lt;/span&gt; 的质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进行处理（&lt;span class=&#34;math inline&#34;&gt;\(\notin T,P\)&lt;/span&gt; 的质数不需要管）。不难注意到我们要去掉没有出现 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的所有方案，那么对应地，我们得先除以满足 &lt;span class=&#34;math inline&#34;&gt;\(p\mid k\)&lt;/span&gt; 的所有 &lt;span class=&#34;math inline&#34;&gt;\(F_k(z)\)&lt;/span&gt;，然后再乘上 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle \prod_{p\mid k}F_k(z) - z^{\varnothing}\)&lt;/span&gt;（去掉不选的方案），最后的答案就是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{S\subseteq(T\cap P)}[x^S]M(z)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(M(z)\)&lt;/span&gt; 是最后得到的集合幂级数。&lt;/p&gt;
&lt;p&gt;所以时间复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O((s_i + \sum c_i + m|P|)2^{|P|})\)&lt;/span&gt;，具体实现的时候，除法就考虑在 FWT 过后的点值 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的次幂指数相减（都是 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的次幂，逆元必然存在），注意提前预处理好所有的 &lt;span class=&#34;math inline&#34;&gt;\(F_x(z)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(G_{p}(z) = \displaystyle\prod_{p\mid k} F_k(z)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有一个细节就是大质数是只出现一种，不是一个，所以 &lt;span class=&#34;math inline&#34;&gt;\(43\)&lt;/span&gt; 可以是大质数（&lt;span class=&#34;math inline&#34;&gt;\(43\times 47&amp;gt;2000\)&lt;/span&gt;），但是要特判 &lt;span class=&#34;math inline&#34;&gt;\(43^2&amp;lt;2000\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/command-block/wei-yun-suan-juan-ji-yu-ji-kuo-zhan&#34;&gt;位运算卷积(FWT) &amp;amp; 集合幂级数 by cmdblock&lt;/a&gt; yyc，yyds！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/alex-wei/p/set_power_series.html&#34;&gt;集合幂级数相关 by Alex Wei&lt;/a&gt; 很细致的讲解！&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>线性基学习笔记</title>
        <link>https://oi.imyangty.com/note-linear-basis/</link>
        <pubDate>Sun, 10 Apr 2022 19:29:14 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-linear-basis/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg19.webp" alt="Featured image of post 线性基学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;由于快要省选了但还是不会线性基所以来紧急营业了（悲）&lt;/p&gt;
&lt;p&gt;OI 中线性基用来处理一类和异或有关的问题。&lt;/p&gt;
&lt;h2 id=&#34;线代基础&#34;&gt;线代基础&lt;/h2&gt;
&lt;p&gt;向量空间：给定域 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; 上的向量空间 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 是一个集合，上定义了数乘和加法运算：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(+:V+V\to V\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中的一个元素 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf u\)&lt;/span&gt; 和一个元素 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf v\)&lt;/span&gt; 映射到 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中另一个元素，记作 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf u + \mathbf v\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdot: F\times V\to V\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; 中一个元素 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中一个元素 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf v\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中另一个元素，记作 &lt;span class=&#34;math inline&#34;&gt;\(a\cdot \mathbf v\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; 的元素称为标量，&lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中的元素称为向量。且 &lt;span class=&#34;math inline&#34;&gt;\(+\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\cdot\)&lt;/span&gt; 运算需满足八条公理。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;对于向量空间 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 上的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素的向量组 &lt;span class=&#34;math inline&#34;&gt;\(S=(\mathbf v_1, \cdots, \mathbf v_n)\)&lt;/span&gt;，其线性组合是如下形式的向量： &lt;span class=&#34;math display&#34;&gt;\[
a_1\mathbf v_1 + \cdots + a_n\mathbf v_n
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(a_i\in F\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若存在不全为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a_1\mathbf v_1 + \cdots + a_n\mathbf v_n = 0\)&lt;/span&gt;，则称该向量组&lt;strong&gt;线性相关&lt;/strong&gt;，否则&lt;strong&gt;线性无关&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最直观的理解就是线性相关即为各个向量不“独立”，&lt;span class=&#34;math inline&#34;&gt;\(\mathbf v_i\)&lt;/span&gt; 可以通过 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 去掉 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf v_i\)&lt;/span&gt; 后剩余的向量线性组合得到。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于向量组 &lt;span class=&#34;math inline&#34;&gt;\((\mathbf v_1,\cdots,\mathbf v_n)\)&lt;/span&gt;，其所有线性组合构成的集合被称为 &lt;span class=&#34;math inline&#34;&gt;\((\mathbf v_1,\cdots, \mathbf v_n)\)&lt;/span&gt; 的&lt;strong&gt;张成&lt;/strong&gt;，记作 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{span}(\mathbf v_1,\cdots \mathbf v_n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意到一组线性相关的向量，去掉一个后张成空间不变。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中的向量组 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 既线性无关又能张成 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;，则称其为 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 的一组&lt;strong&gt;基底&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;基有如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 的极小生成集，就是说只有 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 能生成 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; ，而它的任何真子集都不能生成全部的向量空间。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中线性无关向量的极大集合，就是说 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中是线性无关集合，而且 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中没有其他线性无关集合包含它作为真子集。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中所有的向量都可以按唯一的方式表达为 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 中向量的线性组合。如果基是有序的，则在这个线性组合中的系数提供了这个向量关于这个基的坐标。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;线性相关性引理：若 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 中的向量组 &lt;span class=&#34;math inline&#34;&gt;\((\mathbf v_1,\cdots,\mathbf v_n)\)&lt;/span&gt; 线性相关，且 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf v_1\ne \mathbf 0\)&lt;/span&gt;，则至少有一个 &lt;span class=&#34;math inline&#34;&gt;\(j\in\{2,\cdots, n\}\)&lt;/span&gt; 使得下列成立：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mathbf v_j\in \mathrm{span}(\mathbf v_1,\cdots, \mathbf v_{j - 1})\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;若去掉 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf v_j\)&lt;/span&gt;，则剩余向量的张成仍为 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简证：考虑到其线性相关且 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf v_1\ne \mathbf 0\)&lt;/span&gt;，故存在 &lt;span class=&#34;math inline&#34;&gt;\(a_i\in F\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\sum \mathbf a_iv_i = \mathbf 0\)&lt;/span&gt;，并且 &lt;span class=&#34;math inline&#34;&gt;\(a_2,\cdots a_n\)&lt;/span&gt; 不全为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，设 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(\{2,\cdots, n\}\)&lt;/span&gt; 中最大的满足 &lt;span class=&#34;math inline&#34;&gt;\(a_j\ne 0\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，则一定有 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf v_j = -\displaystyle\sum_{k=0}^{j - 1}\frac{a_k}{a_j}\mathbf v_k\)&lt;/span&gt;，第一条得证。设 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf u\in \mathrm{span}(\mathbf v_1,\cdots v_n)\)&lt;/span&gt;，那么一定有 &lt;span class=&#34;math inline&#34;&gt;\(a_i\in F\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf u = \sum a_i\mathbf v_i\)&lt;/span&gt;，将该式中的 &lt;span class=&#34;math inline&#34;&gt;\(v_j\)&lt;/span&gt; 替换掉即证明了第二条。&lt;/p&gt;
&lt;h2 id=&#34;oi-中的线性基&#34;&gt;OI 中的线性基&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;对于一个数 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，我们将其二进制表示 &lt;span class=&#34;math inline&#34;&gt;\(\left(\overline{b_m\cdots b_1b_0}\right)_2\)&lt;/span&gt; 看作一个向量 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a_i = (b_m,\cdots, b_0)\)&lt;/span&gt;。而若此处我们定义的“加法”运算为异或运算，则这些 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a_i\)&lt;/span&gt; 可以张成一个向量空间 &lt;span class=&#34;math inline&#34;&gt;\(V = (\{0, 1\}, \mathrm{span}\mathbf a_1,\cdots \mathbf a_n), \oplus, \cdot)\)&lt;/span&gt;。OI 中的线性基一般就指 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 的基。&lt;/p&gt;
&lt;h3 id=&#34;求法&#34;&gt;求法&lt;/h3&gt;
&lt;p&gt;我们考虑从 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B = (\mathbf a_1,\cdots, \mathbf a_n)\)&lt;/span&gt; 开始。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先去掉 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 中所有的 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf 0\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;然后依次枚举 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a_j\in \mathrm{span}(\mathbf a_1,\cdots \mathbf a_{j - 1})\)&lt;/span&gt; 则删去 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a_j\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于每次去掉的都是包含于前面向量的张成，所以最后的 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 仍然可以张成 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;，并且其确保了 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 中任意向量不包含于前面诸向量的张成，故根据线性相关性引理，&lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 线性无关。所以 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 的一组基。&lt;/p&gt;
&lt;p&gt;判断一个向量能不能被前面诸向量张成的过程可以使用高斯消元。来看下人类智慧程序：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve() {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(j, LG, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((a[i] &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b[j]) a[i] ^= b[j]; &lt;span class=&#34;co&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    b[j] = a[i];&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    DEC(k, j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b[k] &amp;amp;&amp;amp; ((b[j] &amp;gt;&amp;gt; k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) b[j] ^= b[k];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    FOR(k, j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, LG) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((b[k] &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) b[k] ^= b[j];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;他是非常巧妙的。我们相当于维护对角矩阵。执行到第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 步的时候：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先从高到低枚举 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的二进制位 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，当这一位为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时考虑这一行：&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 这行的对角线处元素已经为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 了，相当于我们不能在这里加入，同时为了维护三角性质，需要将第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 行的向量异或给 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a_i\)&lt;/span&gt;，见代码的第 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 处注释。&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 这行的对角线处为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么就可以将 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a_i\)&lt;/span&gt; 添加到这一行，为了维护对角矩阵，需要拿下面的行消自己，然后拿自己消上面的行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a_i\)&lt;/span&gt; 能被某些已有向量张成，则其最后一定会被消成 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，反之其一定找得到一行加进去。&lt;/p&gt;
&lt;p&gt;我们举个例子：设 &lt;span class=&#34;math inline&#34;&gt;\(n = 5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(A = (7, 1, 6, 2, 3)\)&lt;/span&gt;，一开始的矩阵是这样的： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
0 &amp;amp; 0 &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 0
\end{bmatrix}
\]&lt;/span&gt; 加入 &lt;span class=&#34;math inline&#34;&gt;\(7 = (111)_2\)&lt;/span&gt;，发现第 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 位为最高的有值的位： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
0 &amp;amp; 0 &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 0\\
1 &amp;amp; 1 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt; 加入 &lt;span class=&#34;math inline&#34;&gt;\(1 = (001)_2\)&lt;/span&gt;，发现第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 位为最高的有值的位，同时要将 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 异或给 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 0\\
0 &amp;amp; 1 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt; 尝试加入 &lt;span class=&#34;math inline&#34;&gt;\(6 = (110)_2\)&lt;/span&gt;，发现在第二行就被消成 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 了，加不进去。&lt;/p&gt;
&lt;p&gt;加入 &lt;span class=&#34;math inline&#34;&gt;\(2 = (010)_2\)&lt;/span&gt;，发现第 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 位为最高位，加进去并消元： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 0\\
0 &amp;amp; 1 &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt; 剩下的数字都加不上了。&lt;/p&gt;
&lt;p&gt;这就是 OI 中的“线性基”，即上述过程高斯消元消出的对角阵的非 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 行构成的向量组，下面讨论其性质和应用。&lt;/p&gt;
&lt;h3 id=&#34;性质&#34;&gt;性质&lt;/h3&gt;
&lt;p&gt;如果第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位对应的行的对角线元素为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，则称第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位存在于线性基中。对于存在于线性基中的每个位，有如下性质：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;至多只有一个 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf b_j\)&lt;/span&gt; 满足第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：高消的过程中 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf b_j\)&lt;/span&gt; 一定将其他行的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位消去。&lt;/p&gt;
&lt;p&gt;所以对于不在线性基中的位 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，那么第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 行主对角上方一定全为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，而下方有可能有若干 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;（参见上例）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;线性基&lt;strong&gt;不支持删除&lt;/strong&gt;操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;仔细想想构造过程就知道这个东西很不好删除元素。但是可以利用&lt;strong&gt;线段树分治&lt;/strong&gt;之类的离线方法来处理带删除的情况。&lt;/p&gt;
&lt;h3 id=&#34;市面上常见的另一种构造方法&#34;&gt;市面上常见的另一种构造方法&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(ll x) {&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, LG, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!(x &amp;gt;&amp;gt; (ll)i)) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a[i]) a[i] = x;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x ^= a[i];&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;啊，注意到这样消出来的矩阵会是个三角矩阵而不是对角矩阵。所以某些对角矩阵的性质其是不满足的，下面遇到例题的时候讲解。&lt;/p&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;h3 id=&#34;p3265-jloi2015装备购买&#34;&gt;P3265 [JLOI2015]装备购买&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3265&#34;&gt;传送门&lt;/a&gt;，本题不是异或线性基而是普通的实数线性基。给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个实数向量和其价格，求一个总价最小的基。&lt;/p&gt;
&lt;p&gt;先将所有向量按照价格排序，然后依次插入即可。用高斯消元判断当前向量能否被之前的张成。&lt;/p&gt;
&lt;h3 id=&#34;p3857-tjoi2008彩灯&#34;&gt;P3857 [TJOI2008]彩灯&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3857&#34;&gt;传送门&lt;/a&gt;，题意转化后发现灯的状态可以看作一个二进制整数，而一个开关相当于是将状态异或上另一个二进制数，问最后能达到多少种状态。&lt;/p&gt;
&lt;p&gt;板的不能再板，注意到包含 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个元素的线性基能异或出来 &lt;span class=&#34;math inline&#34;&gt;\(2^m - 1\)&lt;/span&gt; 个数，&lt;strong&gt;但是不包括 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/strong&gt;，算上 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 就是 &lt;span class=&#34;math inline&#34;&gt;\(2^m -1\)&lt;/span&gt;，注意取模即可。&lt;/p&gt;
&lt;h3 id=&#34;p4301-cqoi2013-新nim游戏&#34;&gt;P4301 [CQOI2013] 新Nim游戏&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4301&#34;&gt;传送门&lt;/a&gt;，Nim 游戏，但是正式开始前先手先取走任意堆，后手再取走任意堆（注意不能取完），求一个先手必胜的策略并满足开始前先手取的石子总个数尽量小。&lt;/p&gt;
&lt;p&gt;Nim 游戏要求的必胜策略是 &lt;span class=&#34;math inline&#34;&gt;\(\bigoplus a_i\ne 0\)&lt;/span&gt;，而先手要干的实际就是构造出一个局面使得剩下的 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 异或不出 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。这个过程可以用线性基来做，即插入元素的时候若插入不成功（最后变成 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;），则这个数就是要被选走的。&lt;/p&gt;
&lt;p&gt;具体地，从大到小贪心插入元素，因为可以尽可能让小的元素被选。贪心的正确性证明可以使用拟阵（我不会，咕）。&lt;/p&gt;
&lt;h3 id=&#34;洛谷-p3812-模板线性基&#34;&gt;洛谷 P3812 【模板】线性基&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3812&#34;&gt;传送门&lt;/a&gt;，题意是给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; 2^{50}\)&lt;/span&gt; 的整数，求其能异或出来的最大值。&lt;/p&gt;
&lt;p&gt;若我们是消出的对角矩阵，则直接将线性基内每个元素异或起来即可。简证：最高的二进制位只存在于最大的基向量上，然后归纳证明：假设前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 大的都要选，考虑第 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 大的选不选。首先显然根据对角阵的性质，第 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 大的一定能贡献其最高的二进制位 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，而若不选的话之后的数肯定都不能给第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 位贡献，所以一定要选。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; LG = &lt;span class=&#34;dv&#34;&gt;53&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[LG + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(ll x) {&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(j, LG, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((x &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[j]) x ^= a[j];&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] = x;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                DEC(k, j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[k] &amp;amp;&amp;amp; ((a[j] &amp;gt;&amp;gt; k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) a[j] ^= a[k];&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                FOR(k, j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, LG) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((a[k] &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) a[k] ^= a[j];&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(x);&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, LG) ans ^= a[i];&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但若是用另一种消成三角阵的写法的话就不能简单将全部元素异或起来了。因为不能保证第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 大的向量一定能对其最高位贡献（最高位可能在前面 &lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt; 大的向量中被贡献到），但是仍然可以通过一个简单的贪心来实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, a[maxk];&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(ll x) {&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;53&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!(x &amp;gt;&amp;gt; (ll)i)) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a[i]) a[i] = x;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x ^= a[i];&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read();&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) insert(read());&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;53&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((ans ^ a[i]) &amp;gt; ans) ans ^= a[i]; &lt;span class=&#34;co&#34;&gt;// 简单小贪心&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;hdu3949-xor&#34;&gt;HDU3949 XOR&lt;/h3&gt;
&lt;p&gt;多测 &lt;span class=&#34;math inline&#34;&gt;\(T\le 30\)&lt;/span&gt;。给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10000\)&lt;/span&gt; 个数 &lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le 10^{18}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次查询 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小异或和。&lt;/p&gt;
&lt;p&gt;首先是特判 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，由于我们线性基定义的“能异或出的数中”&lt;strong&gt;不包含 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/strong&gt;，所以需要在插入的时候特判一下能否异或出 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;（实际上若最后基的元素个数 &lt;span class=&#34;math inline&#34;&gt;\(\ne n\)&lt;/span&gt; 也相当于是能异或出 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;）。然后若线性基内含 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个元素，根据 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 任意一个向量都能用基底唯一线性组合出来的性质，能异或出来的数一共有 &lt;span class=&#34;math inline&#34;&gt;\(2^{|m|} - 1\)&lt;/span&gt; 种，依据此判断无解。&lt;/p&gt;
&lt;p&gt;那么实际上，若将基向量从小到大记为 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B = (\mathbf v_0,\cdots \mathbf v_{m - 1})\)&lt;/span&gt;，则第 &lt;span class=&#34;math inline&#34;&gt;\(k = \left(\overline{b_x\cdots b_0}\right)_2\)&lt;/span&gt; 小的异或和（假定存在）即为 &lt;span class=&#34;math display&#34;&gt;\[
\bigoplus_{i=0}^xb_i\cdot \mathbf v_i
\]&lt;/span&gt; 用二进制思想不难证明。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; LG = &lt;span class=&#34;dv&#34;&gt;62&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[LG + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(ll x) {&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(j, LG, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((x &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[j]) x ^= a[j];&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] = x;&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                DEC(k, j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[k] &amp;amp;&amp;amp; ((a[j] &amp;gt;&amp;gt; k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) a[j] ^= a[k];&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                FOR(k, j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, LG) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((a[k] &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) a[k] ^= a[j];&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll kth(ll k) {&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt;= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; &amp;lt;&amp;lt; cnt)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, LG) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;amp; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; &amp;lt;&amp;lt; i)) ans ^= a[i];&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(kase, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, T) {&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Case #&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; kase &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;:&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, memset(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; a);&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x);&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, LG) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i]) a[cnt++] = a[i];&lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q; cin &amp;gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--) {&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll k; cin &amp;gt;&amp;gt; k;&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; kth(k - (cnt != n)) &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;洛谷-p4151-wc2011最大xor和路径&#34;&gt;洛谷 P4151 [WC2011]最大XOR和路径&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4151&#34;&gt;传送门&lt;/a&gt;，给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 50000\)&lt;/span&gt; 点 &lt;span class=&#34;math inline&#34;&gt;\(m\le 10^5\)&lt;/span&gt; 边无向边带 &lt;span class=&#34;math inline&#34;&gt;\(\le 10^{18}\)&lt;/span&gt; 权图，求一条从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的最大 xor 和路径，一条边可以经过多次，相应地，也要多次被异或起来。&lt;/p&gt;
&lt;p&gt;比较牛逼的思路。首先我们可以考虑到，每个环的贡献是可以单独累加的，因为可以从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 出发，走到环上，绕一圈，再原路返回，所以我们可以看作先绕若干环再从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 走一条链到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而实际上随便找一条 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的路径就行了，因为若其不是最优的，那么最优路径和他一定形成有环，这部分贡献一样能被统计。&lt;/p&gt;
&lt;p&gt;处理环，然后将环的异或和插入线性基，相当于是拿 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 然后问异或 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 出来的最大异或和，直接按位贪心。&lt;/p&gt;
&lt;p&gt;但是需要注意我们肯定不是暴力找所有的环，而是利用 dfs 树，注意到若干树边和一条返祖边构成的环可以形成“环的基底”，一个复杂环可以通过这些简单环的“异或”（即取边集并再去掉边集交）得到。&lt;/p&gt;
&lt;h3 id=&#34;洛谷-p3292-scoi2016幸运数字&#34;&gt;洛谷 P3292 [SCOI2016]幸运数字&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3292&#34;&gt;传送门&lt;/a&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^4\)&lt;/span&gt; 个点的树，点带权 &lt;span class=&#34;math inline&#34;&gt;\(\le 2^{60}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(q\le 2\times 10^5\)&lt;/span&gt; 次询问 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 路径上点权的最大异或和。&lt;/p&gt;
&lt;p&gt;首先我们需要知道，单次线性基的合并是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log^2V)\)&lt;/span&gt; 的&lt;/p&gt;
&lt;p&gt;第一眼可以树剖，&lt;span class=&#34;math inline&#34;&gt;\(O((n+q)\log^2n\log^2V)\)&lt;/span&gt;，有点紧而且没必要。&lt;/p&gt;
&lt;p&gt;然后可以倍增，&lt;span class=&#34;math inline&#34;&gt;\(O((n+q)\log n\log^2V)\)&lt;/span&gt;，但是仍然不是最优秀的做法。&lt;/p&gt;
&lt;p&gt;路径问题考虑点分治，在每个根节点处合并 LCA 为根的答案，这样就只会将两个线性基合并。在这之前需要 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log V)\)&lt;/span&gt; 将根到子树中每一个点的线性基求出来，所以时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n\log V + q\log^2V)\)&lt;/span&gt;，应该是最优秀的复杂度。&lt;/p&gt;
&lt;h3 id=&#34;洛谷-p4869-albus就是要第一个出场&#34;&gt;洛谷 P4869 albus就是要第一个出场&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4869&#34;&gt;传送门&lt;/a&gt;，给定正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(S = \{x\mid 1\le x\le n\}\)&lt;/span&gt;，定义 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的幂集 &lt;span class=&#34;math inline&#34;&gt;\(2^S\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的所有子集的集合。定义映射 &lt;span class=&#34;math inline&#34;&gt;\(f:2^S\to \mathbb Z\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(f(\varnothing) = 0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(T) = \bigoplus_{t\in T}A_t\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(2^S\)&lt;/span&gt; 中每个集合的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 值计算起来并从小到大排序，记为序列 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;，问整数 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt; 第一次在 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 中出现的下标。&lt;/p&gt;
&lt;p&gt;首先把所有数字塞进线性基是可以得到 &lt;span class=&#34;math inline&#34;&gt;\(2^{|\mathfrak B|}\)&lt;/span&gt; 个不同数字的，现在压力给到如何求出每个数的出现次数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结论：每个数字会出现 &lt;span class=&#34;math inline&#34;&gt;\(2^{n - |\mathfrak B|}\)&lt;/span&gt; 次&lt;/strong&gt;。简证：考虑每个能被异或出来的数 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;，对于不在线性基内的 &lt;span class=&#34;math inline&#34;&gt;\(n - |\mathfrak B|\)&lt;/span&gt; 个元素，有 &lt;span class=&#34;math inline&#34;&gt;\(2^{n - |\mathfrak B|}\)&lt;/span&gt; 种选法，而我们总可以通过在 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt; 中选数来摆平他，得证。&lt;/p&gt;
&lt;p&gt;所以这题就解决啦：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; LG = &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;, mod = &lt;span class=&#34;dv&#34;&gt;10086&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p[LG + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], n, cnt, rnk, q;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(j, LG, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((x &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!p[j]) {&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[j] = x, ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; x ^= p[j];&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qPow(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exp) {&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; base = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * base * base % mod, exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(x);&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; vec;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, LG) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[i]) vec.push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)vec.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((q &amp;gt;&amp;gt; vec[i]) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) rnk += (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; (rnk % mod * qPow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n - cnt) % mod + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;OI 中的线性基一般指向量空间 &lt;span class=&#34;math inline&#34;&gt;\(V = (\{0, 1\}, \mathrm{span}\mathbf a_1,\cdots \mathbf a_n), \oplus, \cdot)\)&lt;/span&gt; 的基，我们可以通过模拟高斯消元得到对角矩阵或三角矩阵。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性基的元素个数为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log V)\)&lt;/span&gt; 级别。&lt;/li&gt;
&lt;li&gt;若线性基中有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个元素，则其能异或出来 &lt;span class=&#34;math inline&#34;&gt;\(2^{|m|} - 1\)&lt;/span&gt; 个数，&lt;strong&gt;注意 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 不算能异或出来的数&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;可以在线性基上按位贪心。&lt;/li&gt;
&lt;li&gt;线性基&lt;strong&gt;不支持删除&lt;/strong&gt;，但可以 &lt;span class=&#34;math inline&#34;&gt;\(O(\log^2V)\)&lt;/span&gt; 合并。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来说，看到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大异或和&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大异或和&lt;/li&gt;
&lt;li&gt;异或和之和&lt;/li&gt;
&lt;li&gt;异或和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;的问题都可以往线性基的方向想。&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.sengxian.com/algorithms/linear-basis&#34;&gt;线性基学习笔记 by Sengxian&lt;/a&gt; 纯正的线代味道开始讲起。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/scx2015noip-as-php/p/linear_basic.html&#34;&gt;【基础操作】线性基详解 by Kaori&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>wqs 二分学习笔记</title>
        <link>https://oi.imyangty.com/note-wqs/</link>
        <pubDate>Mon, 28 Mar 2022 15:27:49 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-wqs/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg28.webp" alt="Featured image of post wqs 二分学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;wqs 二分，又称带权二分，DP 凸优化，是一种求解带凸性且钦定选择个数的问题的二分方法，由王钦石大佬于 2012 年于其集训队论文中提出。&lt;/p&gt;
&lt;p&gt;若遇到一类形如“钦定选择物品个数，而不钦定的话很好做，并且&lt;del&gt;感性理解&lt;/del&gt;答案关于物品个数有凸性”的问题，则可以考虑使用 wqs 二分进行求解。&lt;/p&gt;
&lt;h2 id=&#34;算法流程&#34;&gt;算法流程&lt;/h2&gt;
&lt;p&gt;考虑一道经典例题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;典例：&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个数，要求分成 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 段，求每段平方之和的最小值。&lt;span class=&#34;math inline&#34;&gt;\(m\le n\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发现可以设计一个很裸的 dp：&lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt; 划分成 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 段的答案。直接做是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2m)\)&lt;/span&gt; 的，套上斜率优化还是 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt; 的，没有办法丢掉 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。但是如果不要求分成 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 段的话会发现直接斜率优化可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。即，&lt;strong&gt;钦定不好做，不钦定很好做&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;复杂度/维数和选的个数有关的可以考虑其凸性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而&lt;del&gt;注意到&lt;/del&gt; &lt;del&gt;打表知&lt;/del&gt; &lt;del&gt;猜测&lt;/del&gt; &lt;span class=&#34;math inline&#34;&gt;\(f_{n, i}\)&lt;/span&gt; 是关于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的凸函数，故考虑 wqs 二分把这一维丢掉。&lt;/p&gt;
&lt;p&gt;具体地，&lt;em&gt;感性理解&lt;/em&gt;一下，发现我们若是去掉钦定段数的限制，则 dp 一定会尽可能让他分成 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 段。&lt;/p&gt;
&lt;p&gt;那么我们考虑&lt;strong&gt;给每一段加上附加权值 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;&lt;/strong&gt;，这样 dp 算法就能从“分的段数多权值小”和“分的段数少权值小”中间进行取舍，&lt;strong&gt;找到一个“平衡点”&lt;/strong&gt;。继续感性理解一下发现 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 越大分段越少，&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 越小分段越多。&lt;/p&gt;
&lt;p&gt;那么通过&lt;strong&gt;二分这个权值&lt;/strong&gt;，我们就能让分的段数恰好 &lt;span class=&#34;math inline&#34;&gt;\(\le m\)&lt;/span&gt;，这样的解减去加上的附加权值就是最优解。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;上面是感性理解，下面我们来理性思考一下。上面的说明有两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有可能我们无法通过“改变权值”来使得分段数恰好 &lt;span class=&#34;math inline&#34;&gt;\(= k\)&lt;/span&gt;，即函数可能“不连续”。&lt;/li&gt;
&lt;li&gt;没有说明这样的解一定是最优解。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么首先建立 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, i}\)&lt;/span&gt; 关于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的函数 &lt;span class=&#34;math inline&#34;&gt;\(y = f(x)\)&lt;/span&gt;，&lt;strong&gt;打表&lt;/strong&gt;发现其下凸。&lt;em&gt;具有凸性才能二分权值&lt;/em&gt;，原因下面会说明。&lt;/p&gt;
&lt;p&gt;然后加上附加权值之后变为 &lt;span class=&#34;math inline&#34;&gt;\(y = f(x) + cx\)&lt;/span&gt;，根据简单的导数知识发现其仍然下凸，然后我们带上附加权后求的 dp 最值对应的分段数（&lt;em&gt;注意 dp 是需要同时求出这个分段数的&lt;/em&gt;）即为 &lt;span class=&#34;math inline&#34;&gt;\(f(x) + cs\)&lt;/span&gt; 的最小值点的横坐标，&lt;strong&gt;并且同时为 &lt;span class=&#34;math inline&#34;&gt;\(y = cx + b\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(y = f(x)\)&lt;/span&gt; 的切点横坐标&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;可以参考这个 geogebra 实例辅助理解（先点击一下“代数区”按钮以收起）其中 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 滑杆控制附加权值 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b&amp;#39;\)&lt;/span&gt; 滑杆控制 &lt;span class=&#34;math inline&#34;&gt;\(y = cx + b\)&lt;/span&gt; 以观察其相切。&lt;/p&gt;
&lt;iframe src=&#34;https://www.geogebra.org/calculator/quy745sm?embed&#34; width=&#34;780&#34; height=&#34;500&#34; allowfullscreen style=&#34;border: 1px solid #e4e4e4;border-radius: 4px;&#34; frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;那么我们来解决上面两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事实证明，若 &lt;span class=&#34;math inline&#34;&gt;\(y = f(x)\)&lt;/span&gt; 存在三点共线的情况而且中间的点为我们要钦定的段数，那么根据相切的性质，那个点&lt;strong&gt;永远取不到&lt;/strong&gt;，不过我们若是能找到两边的点那也能根据两边的点推出中间的答案。&lt;strong&gt;关于三点共线的特殊情况后文还会进一步说明。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;由于函数具有凸性，所以&lt;strong&gt;斜率单调&lt;/strong&gt;，我们二分的这个附加权值 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 实际上就是斜率。那么找到的点减去附加权必然就能对应到原来的函数上面去了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他细节&#34;&gt;其他细节&lt;/h2&gt;
&lt;p&gt;一般来说，dp 值是整数，所以 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle c = \frac{f(i + 1) - f(i)}{i + 1 - i}\)&lt;/span&gt; 也是整数，因此不需要实数二分，但若是 dp 值为小数，则需要进行小数二分。&lt;/p&gt;
&lt;p&gt;并且，有一部分费用流问题可以使用 wqs 二分求解：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多次增广的费用流模型中，费用一定是关于流量的凸函数。&lt;/p&gt;
&lt;p&gt;因为增广肯定是沿着最短路增广，后面增广的费用肯定会更大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说白了就是“限制卡的越来越死”，这种类型的问题都可以考虑 wqs 二分。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;三点共线的情况较为不好处理，&lt;strong&gt;在保证解最优的情况下使得选择物品的数量最多/最少会很大程度上影响三点共线的判断&lt;/strong&gt;我们不妨考虑如下情况，假设最后要求的物品个数对应的为 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/wqs_3pin1line.png&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若 dp 在值最优的情况下求出的是物品数量 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的&lt;em&gt;最大值&lt;/em&gt;，则相当于我们最后二分斜率到 &lt;span class=&#34;math inline&#34;&gt;\(k_2\)&lt;/span&gt; 的时候碰到的是 &lt;span class=&#34;math inline&#34;&gt;\(D\)&lt;/span&gt; 点。&lt;/p&gt;
&lt;p&gt;则若是二分到 &lt;span class=&#34;math inline&#34;&gt;\(k_1\)&lt;/span&gt;，截到了 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\(x_B &amp;lt; x_C\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(k_1\)&lt;/span&gt; &lt;strong&gt;一定不会&lt;/strong&gt;是我们要的斜率。&lt;/p&gt;
&lt;p&gt;若是二分到 &lt;span class=&#34;math inline&#34;&gt;\(k_2\)&lt;/span&gt;，截到了 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\(x_C &amp;lt; x_D\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k_2\)&lt;/span&gt; &lt;strong&gt;可能是&lt;/strong&gt;我们要的斜率。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于 dp 出来的是 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的最小值的情况，&lt;span class=&#34;math inline&#34;&gt;\(x &amp;gt; x_C\)&lt;/span&gt; 则&lt;strong&gt;一定不是&lt;/strong&gt;要的斜率，&lt;span class=&#34;math inline&#34;&gt;\(x &amp;lt; x_C\)&lt;/span&gt; &lt;strong&gt;可能是&lt;/strong&gt;我们要的斜率。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实战的时候，如果想避免 不等号 带不带等号的问题，&lt;strong&gt;可以在找到解的时候直接退出&lt;/strong&gt;，剩下的情况按照上面&lt;strong&gt;画图处理&lt;/strong&gt;，具体问题具体分析，详见下文代码部分。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，&lt;strong&gt;整数二分中，写左闭右开的形式可以有效避免 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 要不要加一，&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 要不要减一的问题&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而且注意不要搞形如 &lt;code&gt;chkmax(ans, ...)&lt;/code&gt; 的代码，在还没二分到底前之前的都可能不是答案，要覆盖掉。&lt;/p&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P2619&#34;&gt;P2619 [国家集训队]Tree I&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你一个无向带权连通图，每条边是黑色或白色。让你求一棵最小权的恰好有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 条白色边的生成树，保证有解。&lt;span class=&#34;math inline&#34;&gt;\(n\le 5\times 10^4\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\le 10^5\)&lt;/span&gt;，边权 &lt;span class=&#34;math inline&#34;&gt;\(\in[-100, 100]\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;wqs 论文里面的例题，虽然和 dp 没有什么关系。&lt;/p&gt;
&lt;p&gt;注意到这种问题是典型的&lt;strong&gt;钦定个数不好解&lt;/strong&gt;，但&lt;strong&gt;不钦定个数非常好解&lt;/strong&gt;（直接 Kruskal）的问题，所以可以思考其凸性。&lt;/p&gt;
&lt;p&gt;分黑白考虑，先假设生成树全由黑边构成（没边连的强行连 &lt;span class=&#34;math inline&#34;&gt;\(+\infty\)&lt;/span&gt; 的黑边），然后每次加白边都是加入最小白边，去掉能去掉的最大黑边，可以感受到&lt;strong&gt;限制在慢慢卡死&lt;/strong&gt;，所以最小生成树权值关于选的白边个数的函数是凸的，可以使用 wqs 二分。&lt;/p&gt;
&lt;p&gt;由于斜率在 &lt;span class=&#34;math inline&#34;&gt;\([-100, 100]\)&lt;/span&gt; 中间，所以在这个区间内二分附加权值 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;，分开存储黑白边然后类似归并地使用 Kruskal，在这里，&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 越大则选的白边会越少。我的写法是优先选白边，那么二分的时候就需要注意，&lt;span class=&#34;math inline&#34;&gt;\(p &amp;gt; k\)&lt;/span&gt; 的时候&lt;strong&gt;可能是答案&lt;/strong&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p&amp;lt;k\)&lt;/span&gt; 的时候&lt;strong&gt;绝对不会&lt;/strong&gt;是答案。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; fastIO::is;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; fastIO::os;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxm = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Edge {&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v, w, c;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;lt;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Edge &amp;amp;rhs) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; w &amp;lt; rhs.w;}&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxm];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, need, cntw = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fa[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fa[u] == u ? u : fa[u] = find(fa[u]);}&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = find(e[i].u), v = find(e[i].v);&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u == v) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fa[u] = v, &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    is &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m &amp;gt;&amp;gt; need;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        is &amp;gt;&amp;gt; e[i].u &amp;gt;&amp;gt; e[i].v &amp;gt;&amp;gt; e[i].w &amp;gt;&amp;gt; e[i].c;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++e[i].u, ++e[i].v; &lt;span class=&#34;co&#34;&gt;// 注意原题点从 0 开始标号&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!e[i].c) swap(e[cntw++], e[i]); &lt;span class=&#34;co&#34;&gt;// 将白点集中在数组前部&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(e + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, e + cntw), sort(e + cntw, e + m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = -&lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;101&lt;/span&gt;, ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt; r) {&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) fa[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; chosen = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, val = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j = cntw;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (i &amp;lt; cntw &amp;amp;&amp;amp; j &amp;lt;= m) {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (e[i].w + mid &amp;lt;= e[j].w) { &lt;span class=&#34;co&#34;&gt;// 同权优先选白点，相当于保证最优解同时物品数最大&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (add(i)) val += e[i].w + mid, ++chosen;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++i;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; val += e[j].w * add(j), ++j;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; i &amp;lt; cntw; ++i) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (add(i)) val += (e[i].w + mid), ++chosen;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; j &amp;lt;= m; ++j) val += add(j) * e[j].w;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (chosen &amp;gt;= need) ans = val - mid * need, l = mid; &lt;span class=&#34;co&#34;&gt;// 可能搜到解&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid; &lt;span class=&#34;co&#34;&gt;// 不可能是解&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    os &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF739E&#34;&gt;CF739E Gosha is hunting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要抓 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 只宝可梦，有 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 个 Poke Ball 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 个 Ultra Ball。Poke Ball 抓到第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 只宝可梦的概率为 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt;，Ultra Ball 抓到第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 只宝可梦的概率为 &lt;span class=&#34;math inline&#34;&gt;\(q_i\)&lt;/span&gt;，不能重复用一种球抓一个宝可梦，但是可以用两种球抓一个宝可梦（都抓到算一个）。求最优策略下期望抓到的宝可梦个数。&lt;span class=&#34;math inline&#34;&gt;\(a,b\le n\le 2000\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;费用流可以解本题，但不在本文讨论范围内。&lt;/p&gt;
&lt;p&gt;考虑一个 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的 naive dp：&lt;span class=&#34;math inline&#34;&gt;\(f_{i,j,k}\)&lt;/span&gt; 表示前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个宝可梦，用 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个 Poke Ball 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个 Ultra Ball，期望抓到的宝可梦个数。则有转移： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{i,j,k} \leftarrow \max\{f_{i,j,k}, f_{i - 1, j - 1, k} + p_i\}\\
f_{i,j,k} \leftarrow \max\{f_{i,j,k}, f_{i - 1, j, k - 1} + q_i\}\\
f_{i,j,k} \leftarrow \max\{f_{i,j,k}, f_{i - 1, j - 1, k - 1} + p_i + q_i - p_iq_i\}
\end{cases}
\]&lt;/span&gt; 考虑优化。第一，发现最优策略一定会用完所有的球，即我们现在钦定要用 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 个 Poke Ball 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 个 Ultra Ball。&lt;/p&gt;
&lt;p&gt;第二，发现若不考虑 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的限制，我们的 dp 就是比较简单的二维 dp 了，所以思考是不是可以用 wqs 二分干掉这一维。&lt;/p&gt;
&lt;p&gt;第三，考虑 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, a, j}\)&lt;/span&gt; 关于 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的函数 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;，发现（打表，猜测）其为凸函数（事实上感性理解一下，多加一个 Ultra Ball 能带来的期望增加值肯定越少），所以可以 wqs 二分，直接上就行了。&lt;/p&gt;
&lt;p&gt;注意本题为实数二分，时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2\log\epsilon^{-1})\)&lt;/span&gt;。注：对两维都进行 wqs 二分的 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2\epsilon^{-1})\)&lt;/span&gt; 做法&lt;a href=&#34;https://www.luogu.com.cn/discuss/422583&#34;&gt;疑似被证伪&lt;/a&gt;，故此处不展开。&lt;/p&gt;
&lt;p&gt;这里再提一下实现细节，由于我们多加一个 Ultra Ball，至多期望新抓到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个宝可梦，所以在 &lt;span class=&#34;math inline&#34;&gt;\([0, 1]\)&lt;/span&gt; 间二分斜率，而且需要注意的是这个函数是上凸的，切不可生搬硬套，需要现场分析。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Trick：可以将 dp 值和选的物品个数打包成一个类，详见代码。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;只是这样似乎是会贡献大常数（笑）&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; db = &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;2005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a, b;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db p[maxn], q[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; DP {&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db dp;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DP(db _dp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : dp(_dp), cnt(_cnt) {}&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;gt;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; DP &amp;amp;rhs) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (myabs(dp - rhs.dp) &amp;lt; &lt;span class=&#34;fl&#34;&gt;1e-7&lt;/span&gt;) ? (cnt &amp;lt; rhs.cnt) : (dp &amp;gt; rhs.dp);&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il DP &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; DP &amp;amp;rhs) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; DP(dp + rhs.dp, cnt + rhs.cnt);&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} f[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; p[i];&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; q[i];&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kase = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; kase &amp;lt;= &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;; ++kase) {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        db mid = (l + r) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(f, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, a) {&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            chkmax(f[i][j], f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + DP(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            chkmax(f[i][j], f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + DP(q[i] - mid, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j) {&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(f[i][j], f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + DP(p[i], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(f[i][j], f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + DP(p[i] + q[i] - p[i] * q[i] - mid, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DP mx;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, a) chkmax(mx, f[n][j]);&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (mx.cnt &amp;lt;= b) ans = mx.dp + mid * b, r = mid;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; l = mid;&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/alex-wei/p/DP_Involution.html&#34;&gt;DP 优化方法大杂烩 I. by Alex Wei&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/blog/daniu/wqs-er-fen&#34;&gt;wqs二分 学习笔记 by 小跳蛙&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/ET2006/p/jcddx-and-wqs-binary-search.html&#34;&gt;决策单调性&amp;amp;wqs二分 by tzc_wk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mina.moe/archives/6349&#34;&gt;【算法】带权二分 by boshi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢以上文章的作者以及伟大的 Asd_Okuu，没有您们我永远学不懂 wqs 二分/kk。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>__builtin 系列函数总结</title>
        <link>https://oi.imyangty.com/note-builtin/</link>
        <pubDate>Tue, 09 Nov 2021 16:56:14 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-builtin/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg9.webp" alt="Featured image of post __builtin 系列函数总结" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;CCF 解禁双下划线函数后实战中有较为强大的运用。&lt;/p&gt;
&lt;p&gt;GCC 编译器提供的内建函数，以 &lt;code&gt;__builtin_&lt;/code&gt; 开头，开头为双下划线。&lt;/p&gt;
&lt;h2 id=&#34;定义&#34;&gt;定义&lt;/h2&gt;
&lt;p&gt;主要有用的是针对位运算的这几个函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__builtin_popcount(unsigned x)&lt;/code&gt;：popcount 函数，基本上比手写的快。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__builtin_popcountll(unsigned long long x)&lt;/code&gt;：对于 &lt;code&gt;long long&lt;/code&gt; 类型的需使用这个函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即，一般，我们是对 &lt;code&gt;unsigned&lt;/code&gt; 进行操作，有符号数会自动转为无符号，对于 &lt;code&gt;long long&lt;/code&gt; 则需要在后面加上 &lt;code&gt;ll&lt;/code&gt; 的后缀。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__builtin_ffs(unsigned x)&lt;/code&gt;：相当于 &lt;code&gt;lowbit(x)&lt;/code&gt;，两者效率差别不大。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__builtin_ctz(unsigned x)&lt;/code&gt;：返回末尾 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的个数，相当于 &lt;code&gt;lowbit(x) - 1&lt;/code&gt;，&lt;strong&gt;对 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 未定义&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__builtin_clz(unsigned x)&lt;/code&gt;：返回前导 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的个数，&lt;strong&gt;对 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 未定义&lt;/strong&gt;。上面两个的记忆方法：count leading/trailing zeros。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般有用的就这几个。&lt;/p&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;p&gt;部分应用场景下可以减少状压 dp 的实现难度。&lt;/p&gt;
&lt;p&gt;而且其效率高（尤其是 popcount），基本不会被卡常。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>几种 IO 方式效率的实验</title>
        <link>https://oi.imyangty.com/note-iotest/</link>
        <pubDate>Thu, 21 Oct 2021 17:29:30 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-iotest/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg16.webp" alt="Featured image of post 几种 IO 方式效率的实验" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;CSP 前颓废的成果。本文的目的在于测试出各 IO 方式的效率并进行粗略的比对并选择使用。&lt;/p&gt;
&lt;p&gt;控制变量似乎不是很严谨（&lt;/p&gt;
&lt;p&gt;但是能得出大概的结论（&lt;/p&gt;
&lt;p&gt;如果发现有写的不对的地方欢迎直接在评论区 D 我（&lt;/p&gt;
&lt;p&gt;或者加我 QQ 也🉑以。😘&lt;/p&gt;
&lt;h2 id=&#34;输入效率测试&#34;&gt;输入效率测试&lt;/h2&gt;
&lt;p&gt;目前我们考虑读入 &lt;span class=&#34;math inline&#34;&gt;\(10^7\)&lt;/span&gt; 个正整数。&lt;/p&gt;
&lt;p&gt;目前大家熟知的读入方式有下面若干种：C 库的 &lt;code&gt;scanf()&lt;/code&gt; 函数，&lt;code&gt;std::cin&lt;/code&gt;，手写的 &lt;code&gt;getchar()&lt;/code&gt; 版本快读以及 &lt;code&gt;fread&lt;/code&gt; 版的快读。&lt;/p&gt;
&lt;p&gt;一般我们认为，&lt;code&gt;cin&lt;/code&gt; 很慢，而 &lt;code&gt;scanf&lt;/code&gt; 一般被认为比较快，手写的 &lt;code&gt;fread&lt;/code&gt; 版是最快的。但是 &lt;code&gt;cin&lt;/code&gt; 有种操作叫做关闭流同步：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cin.tie(NULL);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;cin&lt;/code&gt; 关闭流同步之后的效率如何？&lt;code&gt;getchar()&lt;/code&gt; 快读和 &lt;code&gt;scanf()&lt;/code&gt; 的效率如何？&lt;/p&gt;
&lt;p&gt;我在本机（Intel Core i5-7200U &lt;span class=&#34;citation&#34; data-cites=&#34;2.5Ghz&#34;&gt;@2.5Ghz&lt;/span&gt;，Windows 10 LTSC，GCC 9.2.0）上进行了如下的测试，得到以下测试结果，其中前十个 testcase 没有启用 &lt;code&gt;-O2&lt;/code&gt;，后十个在编译时启用了 &lt;code&gt;-O2&lt;/code&gt; 选项，取了平均值后的结果如下（单位为 ms）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;case&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;scanf&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;cin&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;cin2&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;getchar&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;fread&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;9561.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;19845.9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2733.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3490.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;470.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;9277.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;18647.6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2539.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3065.2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;160.8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可见，在本机的平台下，&lt;strong&gt;&lt;code&gt;cin&lt;/code&gt; 关闭流同步后竟然有不俗的表现&lt;/strong&gt;，甚至可以和 &lt;code&gt;getchar&lt;/code&gt; 版的快读媲美，但是 &lt;code&gt;fread&lt;/code&gt; 吊打一切，在开了 &lt;code&gt;-O2&lt;/code&gt; 的情况下更加明显。&lt;/p&gt;
&lt;p&gt;随后我在我的另一台电脑（AMD Ryzen 5 2600 &lt;span class=&#34;citation&#34; data-cites=&#34;3.40Ghz&#34;&gt;@3.40Ghz&lt;/span&gt;，Windows 10 LTSC，GCC 4.8.0）上进行了同样的测试，得到下面的结果：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;scanf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin2&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;getchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fread&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5746.9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6426.4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1661.2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1468.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;299&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5734.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6368.8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1639.1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1401.4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;98.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;发现在不同的平台上，&lt;code&gt;cin&lt;/code&gt; 的效率有所不一，但不关闭流同步时必然慢于 &lt;code&gt;scanf&lt;/code&gt;，但关闭流同步后表现十分良好，速度相当快，但是时间仍为 &lt;code&gt;fread&lt;/code&gt; 的五倍以上。&lt;/p&gt;
&lt;p&gt;接下来在虚拟机内的 NOI Linux 2.0 内进行测试，编译器为 GCC 9.3.0，得到下面的结果（单位 s）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;scanf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin2&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;getchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fread&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.5291&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.8893&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.675&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.5305&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.8525&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.9605&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.5989&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.5905&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.2427&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.0863&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;然后惊奇的发现，&lt;code&gt;fread&lt;/code&gt; 居然比 &lt;code&gt;cin&lt;/code&gt; 关流同步后还慢（可能是虚拟机的锅）???但是开 &lt;code&gt;-O2&lt;/code&gt; 之后仍旧吊打全场。&lt;/p&gt;
&lt;p&gt;综上，我们有以下结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同平台/编译器版本下，各种读入方式的效率会有微小的差异。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;千万不要用不关流同步的 &lt;code&gt;cin&lt;/code&gt;，相当的慢&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;IO 量不是特别大的时候可以使用 &lt;code&gt;scanf&lt;/code&gt;，当然关流同步的 &lt;code&gt;cin&lt;/code&gt; 会有更优的表现。&lt;/li&gt;
&lt;li&gt;IO 量十分巨大的时候可以考虑 &lt;code&gt;cin&lt;/code&gt; 关流同步或者 &lt;code&gt;fread&lt;/code&gt; 版快读。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;输出效率测试&#34;&gt;输出效率测试&lt;/h2&gt;
&lt;p&gt;考虑输出 &lt;span class=&#34;math inline&#34;&gt;\(10^7\)&lt;/span&gt; 个正整数，我们一般使用 &lt;code&gt;printf&lt;/code&gt;，&lt;code&gt;cout&lt;/code&gt;，&lt;code&gt;putchar&lt;/code&gt; 或者 &lt;code&gt;fwrite&lt;/code&gt; 等方式，类似上面的，我们先用本机测试（单位 ms）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;printf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout_endl&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;putchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fwrite&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4101.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1724.4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;35893.1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3432.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3080.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3684.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1463.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;31412.1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3046.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2644.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中 cout_endl 是每输出一个数字用 &lt;code&gt;endl&lt;/code&gt; 换行。可以发现几种输出方式的效率差别不是特别大，但是由于 &lt;code&gt;endl&lt;/code&gt; 每次会刷新缓冲区，所以会非常的慢，所以需要避免 &lt;code&gt;cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; endl&lt;/code&gt; 这种写法。&lt;/p&gt;
&lt;p&gt;同样附上 AMD 的测试结果：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;printf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout_endl&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;putchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fwrite&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16860.8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1035.9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40743.6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1709.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1584.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16645.8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;990&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39787.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1516.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1359.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可见不同平台的差异还是存在的。但 &lt;code&gt;cout&lt;/code&gt; 的速度依旧可观。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;printf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout_endl&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;putchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fwrite&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;814.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;933.6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15801&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1007.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;957.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;830.2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;945.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16029.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;476.4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;442.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部分平台上 printf 的表现并不是很好。&lt;/li&gt;
&lt;li&gt;与 &lt;code&gt;cin&lt;/code&gt; 相反，&lt;strong&gt;&lt;code&gt;cout&lt;/code&gt; 很快。&lt;/strong&gt;比想象中的快。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fwrite&lt;/code&gt; 并无特别明显的优势，但开了 &lt;code&gt;-O2&lt;/code&gt; 之后效率会有所提升。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;这个不是很严谨的小实验告诉了我们在 &lt;strong&gt;IO 量极其巨大&lt;/strong&gt;的时候各种 IO 方式的效率差别。但需要注意的是，当数据规模在十万级别及以下时，IO 常数并不是瓶颈，其运行时间都差不多，只需记住不要使用不关闭流同步的 &lt;code&gt;cin&lt;/code&gt; 和 &lt;code&gt;endl&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;附自己的 IO 模板：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], *__p1 = ibuf, *__p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++;}&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T &amp;amp;n) {&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; *s) {&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c) &amp;amp;&amp;amp; !isalpha(c)) c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isalpha(c) || isdigit(c)) s[p++] = c, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; obuf[maxc], *__pO = obuf;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; putchar(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {*__pO++ = c;}&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;x) {&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), print(-x);&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; &amp;amp;c) {print(x), putchar(c);}&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; output() {fwrite(obuf, __pO - obuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, stdout);}&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;co&#34;&gt;// namespace fastIO&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T max(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T min(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T myabs(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ? a : -a;}&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b) {&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b, b = t;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;附-1完整测试结果&#34;&gt;附 1：完整测试结果&lt;/h2&gt;
&lt;h3 id=&#34;本机-i5&#34;&gt;本机 i5&lt;/h3&gt;
&lt;p&gt;Intel Core i5-7200U &lt;span class=&#34;citation&#34; data-cites=&#34;2.5Ghz&#34;&gt;@2.5Ghz&lt;/span&gt;，Windows 10 LTSC。&lt;/p&gt;
&lt;p&gt;读入测试：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;printf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout_endl&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;putchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fwrite&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3314&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1480&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;36724&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3870&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3984&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3547&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1688&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;38312&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2971&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3240&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3825&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1542&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;35739&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3720&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3022&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5375&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1685&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;35577&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3387&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4626&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1857&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;32677&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3168&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2497&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3705&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1582&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;32974&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3725&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2796&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4214&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2192&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;36730&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4043&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2793&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3777&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1615&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;37561&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3217&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3505&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4650&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1507&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;36534&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3287&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3079&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3984&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2096&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;36103&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2937&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3290&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;11&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3773&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1444&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;31294&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3062&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2546&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3599&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1456&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;32554&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2825&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3408&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;13&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3804&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1609&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;33589&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3048&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2495&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3598&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1434&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;30778&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3090&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2499&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3710&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1449&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;31659&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3153&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2476&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3638&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1445&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;30739&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3045&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2619&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;17&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3816&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1475&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;30838&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3063&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2509&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;18&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3588&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1437&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;30844&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3045&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2501&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;19&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3591&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1443&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;30862&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3071&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2861&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;20&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3728&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1443&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;30964&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3061&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2529&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4101.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1724.4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;35893.1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3432.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3080.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3684.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1463.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;31412.1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3046.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2644.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;amd-r5-2600&#34;&gt;AMD R5 2600&lt;/h3&gt;
&lt;p&gt;AMD R5 2600 &lt;span class=&#34;citation&#34; data-cites=&#34;3.40Ghz&#34;&gt;@3.40Ghz&lt;/span&gt;，Windows 10 LTSC。&lt;/p&gt;
&lt;p&gt;输入测试：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;scanf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin2&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;getchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fread&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5755&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6403&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1654&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1469&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;298&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5725&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6441&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1651&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1467&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;301&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5740&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6452&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1661&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1472&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;301&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5749&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6435&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1670&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1484&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;298&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5739&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6437&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1671&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1471&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;299&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5761&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6428&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1661&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1474&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;298&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5769&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6424&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1660&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1463&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;297&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5761&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6429&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1662&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1461&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;301&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5735&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6395&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1668&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1464&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5735&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6420&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1654&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1462&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;302&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;11&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5781&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6388&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1658&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1403&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5725&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6379&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1641&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1397&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;13&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5725&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6342&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1636&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1401&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5727&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6335&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1634&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1405&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5778&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6354&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1630&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1400&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5700&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6388&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1635&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1401&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;17&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5750&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6368&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1639&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1401&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;18&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5731&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6372&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1638&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1404&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;19&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5715&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6386&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1642&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1406&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;20&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5713&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6376&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1638&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1396&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;avr&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;5746.9&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;6426.4&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1661.2&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1468.7&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;299&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;avr_O2&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;5734.5&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;6368.8&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1639.1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1401.4&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;98.6&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;输出测试：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;printf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout_endl&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;putchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fwrite&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16545&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1004&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39836&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1693&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1594&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16756&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1044&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40895&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1695&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1581&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16820&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1032&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40841&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1692&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1565&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16655&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1014&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40853&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1737&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1593&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;17147&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1078&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;41379&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1736&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1599&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16965&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1065&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;41250&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1749&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1608&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;17099&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1048&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40937&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1712&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1586&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16981&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1021&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40266&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1698&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1568&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16814&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1016&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40719&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1712&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1590&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16826&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1037&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40460&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1673&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1563&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;11&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16470&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;994&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39597&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1513&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1356&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16584&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1009&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39748&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1511&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1365&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;13&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16669&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;996&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;40008&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1529&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1362&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16725&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1002&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39792&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1515&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1352&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16647&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;997&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39718&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1509&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1368&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16654&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;979&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39874&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1512&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1355&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;17&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16628&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1000&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39667&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1514&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1354&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;18&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16660&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;968&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39887&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1533&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1369&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;19&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16643&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;987&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39732&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1514&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1362&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;20&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16778&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;968&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;39850&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1513&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1356&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;avr&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;16860.8&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1035.9&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;40743.6&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1709.7&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1584.7&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;avr_O2&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;16645.8&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;990&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;39787.3&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1516.3&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1359.9&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;虚拟机-noi-linux-2.0&#34;&gt;虚拟机 NOI Linux 2.0&lt;/h3&gt;
&lt;p&gt;输入测试：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;scanf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cin2&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;getchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fread&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.554&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.897&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.677&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.532&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.856&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.523&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.91&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.674&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.531&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.851&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.498&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.947&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.675&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.527&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.852&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.51&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.839&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.674&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.532&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.854&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.526&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.899&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.676&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.532&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.852&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.55&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.896&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.675&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.533&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.852&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.553&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.86&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.675&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.525&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.853&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.496&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.935&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.675&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.529&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.852&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.545&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.836&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.673&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.532&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.852&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1.536&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.874&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.676&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.532&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.851&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;11&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.957&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.656&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.59&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.242&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.966&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.613&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.588&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.243&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.087&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;13&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.954&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.547&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.591&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.243&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.948&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.546&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.588&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.242&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.968&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.564&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.588&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.242&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.942&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.549&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.593&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.243&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;17&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.993&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.61&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.59&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.243&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;18&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.945&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.611&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.591&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.243&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;19&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.955&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.621&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.593&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.243&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.087&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;20&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.977&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2.672&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.593&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.243&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;0.087&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;avr&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;1.5291&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;2.8893&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;0.675&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;0.5305&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;0.8525&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;avr_O2&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;0.9605&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;2.5989&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;0.5905&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;0.2427&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;0.0863&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;输出测试：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;case&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;printf&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;cout_endl&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;putchar&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;fwrite&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;858&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;924&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15804&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;988&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;946&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;811&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;929&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15878&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1007&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;970&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;831&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;942&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15617&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1007&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;977&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;815&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;927&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15745&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1016&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;945&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;741&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;925&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16205&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;990&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;948&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;818&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;931&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15274&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1040&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;956&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;790&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;931&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15607&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1014&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;965&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;864&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;926&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15554&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1001&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;957&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;824&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;950&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15842&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1007&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;954&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;793&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;951&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16484&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1007&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;957&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;11&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;792&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;949&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16338&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;483&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;456&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;854&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;969&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15373&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;467&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;445&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;13&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;845&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;992&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16049&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;472&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;440&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;796&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;923&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15824&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;478&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;443&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;878&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;960&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16087&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;474&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;437&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;817&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;936&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16525&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;485&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;449&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;17&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;800&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;941&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15988&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;474&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;438&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;18&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;845&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;934&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15650&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;466&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;435&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;19&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;836&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;901&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15754&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;476&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;434&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;20&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;839&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;948&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16705&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;489&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;449&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;814.5&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;933.6&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;15801&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1007.7&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;957.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;avr_O2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;830.2&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;945.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;16029.3&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;476.4&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;442.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;附-2测试代码&#34;&gt;附 2：测试代码&lt;/h2&gt;
&lt;h3 id=&#34;输入效率测试-1&#34;&gt;输入效率测试&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IOtest.cpp&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; gen() {&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.in&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; ++i) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdout);&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read1() {&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c)) c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c)) n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; getcharread() {&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; i++) a[i] = read1();&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; scanfread() {&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; i++) scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a + i);&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; cinread() {&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; i++) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; cinread2() {&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;ios&lt;span class=&#34;bu&#34;&gt;::&lt;/span&gt;sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin.tie(NULL);&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; i++) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], *__p1 = ibuf, *__p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++;}&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T &amp;amp;n) {&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; freadread() {&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; i++) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb3-71&#34;&gt;&lt;a href=&#34;#cb3-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb3-72&#34;&gt;&lt;a href=&#34;#cb3-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-73&#34;&gt;&lt;a href=&#34;#cb3-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-74&#34;&gt;&lt;a href=&#34;#cb3-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; flush() {&lt;/span&gt;
&lt;span id=&#34;cb3-75&#34;&gt;&lt;a href=&#34;#cb3-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdin);&lt;/span&gt;
&lt;span id=&#34;cb3-76&#34;&gt;&lt;a href=&#34;#cb3-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.in&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;, stdin);&lt;/span&gt;
&lt;span id=&#34;cb3-77&#34;&gt;&lt;a href=&#34;#cb3-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-78&#34;&gt;&lt;a href=&#34;#cb3-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-79&#34;&gt;&lt;a href=&#34;#cb3-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-80&#34;&gt;&lt;a href=&#34;#cb3-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-81&#34;&gt;&lt;a href=&#34;#cb3-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;iotmp.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb3-82&#34;&gt;&lt;a href=&#34;#cb3-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flush(), printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%ld\t&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, scanfread());&lt;/span&gt;
&lt;span id=&#34;cb3-83&#34;&gt;&lt;a href=&#34;#cb3-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flush(), printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%ld\t&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, cinread());&lt;/span&gt;
&lt;span id=&#34;cb3-84&#34;&gt;&lt;a href=&#34;#cb3-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flush(), printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%ld\t&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, cinread2());&lt;/span&gt;
&lt;span id=&#34;cb3-85&#34;&gt;&lt;a href=&#34;#cb3-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flush(), printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%ld\t&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, getcharread());&lt;/span&gt;
&lt;span id=&#34;cb3-86&#34;&gt;&lt;a href=&#34;#cb3-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flush(), printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%ld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, freadread());&lt;/span&gt;
&lt;span id=&#34;cb3-87&#34;&gt;&lt;a href=&#34;#cb3-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;IOtest2.cpp&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;iotest.csv&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;case,scanf,cin,cin2,getchar,fread&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        system(&lt;span class=&#34;st&#34;&gt;&amp;quot;IOtest.exe&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;iotmp.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;, stdin);&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;,&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tmp; j &amp;lt;= &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;tmp);&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d%c&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, tmp, j == &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt; ? &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt; : &lt;span class=&#34;ch&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fclose(stdin);&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;输出效率测试-1&#34;&gt;输出效率测试&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IOtest.cpp&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; gen() {&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.in&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; ++i) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; printf() {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.out&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; ++i) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; cout() {&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.out&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; ++i) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; cout_endl() {&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.out&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; ++i) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;endl;&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt;= &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; putchar() {&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.out&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; ++i) print(i), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb5-52&#34;&gt;&lt;a href=&#34;#cb5-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-53&#34;&gt;&lt;a href=&#34;#cb5-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-54&#34;&gt;&lt;a href=&#34;#cb5-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb5-55&#34;&gt;&lt;a href=&#34;#cb5-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; obuf[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;], *__pO = obuf;&lt;/span&gt;
&lt;span id=&#34;cb5-56&#34;&gt;&lt;a href=&#34;#cb5-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; putchar(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {*__pO++ = c;}&lt;/span&gt;
&lt;span id=&#34;cb5-57&#34;&gt;&lt;a href=&#34;#cb5-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;x) {&lt;/span&gt;
&lt;span id=&#34;cb5-58&#34;&gt;&lt;a href=&#34;#cb5-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-59&#34;&gt;&lt;a href=&#34;#cb5-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-60&#34;&gt;&lt;a href=&#34;#cb5-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-61&#34;&gt;&lt;a href=&#34;#cb5-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-62&#34;&gt;&lt;a href=&#34;#cb5-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; output() {fwrite(obuf, __pO - obuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, stdout);}&lt;/span&gt;
&lt;span id=&#34;cb5-63&#34;&gt;&lt;a href=&#34;#cb5-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-64&#34;&gt;&lt;a href=&#34;#cb5-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-65&#34;&gt;&lt;a href=&#34;#cb5-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; fastio() {&lt;/span&gt;
&lt;span id=&#34;cb5-66&#34;&gt;&lt;a href=&#34;#cb5-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.out&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-67&#34;&gt;&lt;a href=&#34;#cb5-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;io.out&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-68&#34;&gt;&lt;a href=&#34;#cb5-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb5-69&#34;&gt;&lt;a href=&#34;#cb5-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; st = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-70&#34;&gt;&lt;a href=&#34;#cb5-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= N; ++i) print(i), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-71&#34;&gt;&lt;a href=&#34;#cb5-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    output();&lt;/span&gt;
&lt;span id=&#34;cb5-72&#34;&gt;&lt;a href=&#34;#cb5-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; ed = clock();&lt;/span&gt;
&lt;span id=&#34;cb5-73&#34;&gt;&lt;a href=&#34;#cb5-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fclose(stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-74&#34;&gt;&lt;a href=&#34;#cb5-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ed - st;&lt;/span&gt;
&lt;span id=&#34;cb5-75&#34;&gt;&lt;a href=&#34;#cb5-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-76&#34;&gt;&lt;a href=&#34;#cb5-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-77&#34;&gt;&lt;a href=&#34;#cb5-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-78&#34;&gt;&lt;a href=&#34;#cb5-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;clock_t&lt;/span&gt; a[&lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-79&#34;&gt;&lt;a href=&#34;#cb5-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = printf();&lt;/span&gt;
&lt;span id=&#34;cb5-80&#34;&gt;&lt;a href=&#34;#cb5-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = cout();&lt;/span&gt;
&lt;span id=&#34;cb5-81&#34;&gt;&lt;a href=&#34;#cb5-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] = cout_endl();&lt;/span&gt;
&lt;span id=&#34;cb5-82&#34;&gt;&lt;a href=&#34;#cb5-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;] = putchar();&lt;/span&gt;
&lt;span id=&#34;cb5-83&#34;&gt;&lt;a href=&#34;#cb5-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;] = fastio();&lt;/span&gt;
&lt;span id=&#34;cb5-84&#34;&gt;&lt;a href=&#34;#cb5-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;iotmp.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb5-85&#34;&gt;&lt;a href=&#34;#cb5-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a[i]);&lt;/span&gt;
&lt;span id=&#34;cb5-86&#34;&gt;&lt;a href=&#34;#cb5-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-87&#34;&gt;&lt;a href=&#34;#cb5-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;IOtest2.cpp&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;iotest.csv&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;, stdout);&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;case,printf,cout,cout_endl,putchar,fwrite&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        system(&lt;span class=&#34;st&#34;&gt;&amp;quot;IOtest.exe&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        freopen(&lt;span class=&#34;st&#34;&gt;&amp;quot;iotmp.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;, stdin);&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;,&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tmp; j &amp;lt;= &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;tmp);&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d%c&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, tmp, j == &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt; ? &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt; : &lt;span class=&#34;ch&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fclose(stdin);&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>计算几何全家桶</title>
        <link>https://oi.imyangty.com/note-geometry/</link>
        <pubDate>Fri, 08 Oct 2021 21:24:49 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-geometry/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg14.webp" alt="Featured image of post 计算几何全家桶" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近模拟赛好像比较爱考😢有点虚。毕竟在 NOI 大纲上的等级比较低。&lt;/p&gt;
&lt;p&gt;计算几何还是比较烦的一个东西。如果以后打 ICPC 的话还是需要会点的。&lt;/p&gt;
&lt;p&gt;先考虑二维计算几何。&lt;del&gt;三维是甚么毒瘤东西&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本定义&#34;&gt;基本定义&lt;/h2&gt;
&lt;h3 id=&#34;一些约定&#34;&gt;一些约定&lt;/h3&gt;
&lt;p&gt;类型名和宏&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; db = &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ldb = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;浮点误差相关。由于计算几何涉及浮点运算较多，故我们需要减少浮点误差对答案正确性造成的影响。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db EPS = &lt;span class=&#34;fl&#34;&gt;1e-8&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sgn(db x) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fabs(x) &amp;lt; EPS ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;点和向量&#34;&gt;点和向量&lt;/h3&gt;
&lt;p&gt;我们知道一个有序实数对可以表示点的坐标，同样对于向量也适用。所以我们存储点的方式和向量的方式其实是一样的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Point {&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db x, y;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Point(db _x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, db _y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : x(_x), y(_y) {}&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; Vector = Point;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;向量的加减法，数乘等基本运算先写在这里。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Vector &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Vector(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Vector &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Vector(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Vector &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db &amp;amp;lambda) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Vector(lambda * a.x, lambda * a.y);}&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Vector &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;/(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db &amp;amp;lambda) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Vector(lambda / a.x, lambda / a.y);}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;其他对象的存储&#34;&gt;其他对象的存储&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;线段：存储两个端点。&lt;/li&gt;
&lt;li&gt;直线：计算甚么的会带来较大的误差，因此保存直线上一点和其方向向量就可以了。&lt;/li&gt;
&lt;li&gt;多边形：一般逆时针记录各个顶点。&lt;/li&gt;
&lt;li&gt;圆：记录圆心和半径。&lt;/li&gt;
&lt;li&gt;特殊曲线：记解析式甚么的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本操作&#34;&gt;基本操作&lt;/h2&gt;
&lt;h3 id=&#34;前置公式&#34;&gt;前置公式&lt;/h3&gt;
&lt;p&gt;正弦定理： &lt;span class=&#34;math display&#34;&gt;\[
\frac{a}{\sin A} = \frac{b}{\sin B} = \frac{c}{\sin C} = 2R
\]&lt;/span&gt; 余弦定理： &lt;span class=&#34;math display&#34;&gt;\[
a^2 = b^2 + c^2 - 2bc\cos A
\]&lt;/span&gt; 和角公式/倍角公式以及他们的变形等等： &lt;span class=&#34;math display&#34;&gt;\[
\sin(\alpha \pm \beta) = \sin\alpha\cos\beta \pm \cos\alpha\sin\beta\\
\cos(\alpha\pm\beta) = \cos\alpha\cos\beta \mp \sin\alpha\sin\beta\\
\]&lt;/span&gt; 学好文化课里的这部分还是挺有帮助的。&lt;/p&gt;
&lt;h3 id=&#34;向量的进阶操作&#34;&gt;向量的进阶操作&lt;/h3&gt;
&lt;p&gt;点积类比做功。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.x * b.x + a.y * b.y;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;叉积的一个几何意义是平四有向面积。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;^(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Vector &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.x * b.y - a.y * b.x;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;应用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若两向量的点积为正，则两向量夹角小于 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac\pi2\)&lt;/span&gt;，若点积为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则两向量垂直，否则夹角大于 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac\pi2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mathbf a\times \mathbf b\)&lt;/span&gt; 的正负性可以判断两个向量的方向位置关系。若其大于 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf b\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf a\)&lt;/span&gt; 左侧，反之亦然。记忆考虑右手螺旋即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;向量的旋转。套一个和角公式。&lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 经过旋转 &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; 之后会得到 &lt;span class=&#34;math inline&#34;&gt;\((x\cos\theta-y\sin\theta, x\sin\theta + y\cos\theta)\)&lt;/span&gt;。记不住的话大可以现推。&lt;/p&gt;
&lt;h3 id=&#34;极角&#34;&gt;极角&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;atan2(x, y)&lt;/code&gt; 函数来求极角，这样可以在 &lt;span class=&#34;math inline&#34;&gt;\(x=0\)&lt;/span&gt; 时返回正确的结果。&lt;/p&gt;
&lt;p&gt;极角排序非常有用。&lt;/p&gt;
&lt;h3 id=&#34;计算多边形面积&#34;&gt;计算多边形面积&lt;/h3&gt;
&lt;p&gt;先考虑三角形的情况。我们知道对于一个三角形 &lt;span class=&#34;math inline&#34;&gt;\(OAB\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(S_{\triangle OAB} = \dfrac12\overrightarrow{OA}\times\overrightarrow{OB}\)&lt;/span&gt;。&lt;del&gt;这东西可以拿来氵文化课题&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;所以计算三角形的面积是很简单的。直接坐标相减再叉乘一下就出来了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;整点三角形面积的两倍一定为整数。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;咕。&lt;/p&gt;
&lt;h3 id=&#34;点和线段的位置关系&#34;&gt;点和线段的位置关系&lt;/h3&gt;
&lt;h3 id=&#34;线段与线段相交&#34;&gt;线段与线段相交&lt;/h3&gt;
&lt;h2 id=&#34;凸包&#34;&gt;凸包&lt;/h2&gt;
&lt;h2 id=&#34;最小圆覆盖&#34;&gt;最小圆覆盖&lt;/h2&gt;
&lt;p&gt;随机增量法，期望 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。关键在于新加入点不在圆内的概率为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac3i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;伪代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;圆 C;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; to n) {&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[i] 不在 C 内) {&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        C = {p[i], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; to i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[j] 不在 C 内) {&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                C = 直径为 p[i] 和 p[j] 的圆;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; to j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[k] 不在 C 内)&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        C = 外接圆(p[i], p[j], p[k]);&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;外接圆可以这样求：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; get(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;b, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;c) {&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db a1 = b.x - a.x, a2 = c.x - a.x, b1 = b.y - a.y, b2 = c.y - a.y;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db c1 = sqr(b.x) - sqr(a.x) + sqr(b.y) - sqr(a.y);&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db c2 = sqr(c.x) - sqr(a.x) + sqr(c.y) - sqr(a.y);&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    o = {&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        (b2 * c1 - b1 * c2) / (b2 * a1 * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; - b1 * a2 * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;), &lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        (a2 * c1 - a1 * c2) / (a2 * b1 * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; - a1 * b2 * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    };&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    r = dis(a, o);&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;旋转卡壳&#34;&gt;旋转卡壳&lt;/h2&gt;
&lt;h2 id=&#34;半平面交&#34;&gt;半平面交&lt;/h2&gt;
&lt;h2 id=&#34;pick-定理&#34;&gt;Pick 定理&lt;/h2&gt;
&lt;h2 id=&#34;三维计算几何&#34;&gt;三维计算几何&lt;/h2&gt;
&lt;h3 id=&#34;叉积&#34;&gt;叉积&lt;/h3&gt;
&lt;p&gt;现在两个向量叉乘出来还是一个向量 &lt;span class=&#34;math display&#34;&gt;\[
(x_1, y_1, z_1)\times(x_2,y_2, z_2) = (y_1z_2 - y_2z_1, z_1x_2 - z_2x_1, x_1y_2 - x_2y_1)
\]&lt;/span&gt; 实质上为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{vmatrix}
\vec{i} &amp;amp; \vec{j} &amp;amp; \vec{k}\\
x_1 &amp;amp; y_1 &amp;amp; z_1\\
x_2 &amp;amp; y_2 &amp;amp; z_2
\end{vmatrix}
\]&lt;/span&gt; 把这个行列式打开来就能得到上面的结果。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>组合数学复习笔记</title>
        <link>https://oi.imyangty.com/summary-combinatorics/</link>
        <pubDate>Sun, 03 Oct 2021 14:34:00 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-combinatorics/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg2.webp" alt="Featured image of post 组合数学复习笔记" /&gt;&lt;p&gt;总结笔记。组合算是一个比较重要的大头。不包看懂，前置知识可能有点多。&lt;/p&gt;
&lt;p&gt;如有错漏烦请指正，当感激不尽/kel。&lt;/p&gt;
&lt;h2 id=&#34;加乘原理&#34;&gt;加乘原理&lt;/h2&gt;
&lt;h2 id=&#34;排列组合&#34;&gt;排列组合&lt;/h2&gt;
&lt;h3 id=&#34;定义&#34;&gt;定义&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个有标号元素里面选 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个排成一排的方案数：&lt;span class=&#34;math inline&#34;&gt;\(\mathrm A_n^m\)&lt;/span&gt;，称为排列数，有 &lt;span class=&#34;math display&#34;&gt;\[
\mathrm A_n^m = \frac{n!}{(n - m)!}
\]&lt;/span&gt; 平凡，不证。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个有标号元素里面选 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个的方案数：&lt;span class=&#34;math inline&#34;&gt;\(\mathrm C_n^m\)&lt;/span&gt;，或者记作 $n m $，称为组合数，有 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \frac{\mathrm A_n^m}{m!} = \frac{n!}{m!(n - m)!}
\]&lt;/span&gt; 相当于去掉 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的全排列的方案数。&lt;/p&gt;
&lt;h3 id=&#34;二项式定理&#34;&gt;二项式定理&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
(x + y)^n = \sum_{k = 0}^n\binom n kx^ky^{n - k}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;组合意义平凡。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 取到特殊值时会有奇怪的推广。 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^n\binom n k = 2^n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^n(-1)^k\binom n k = [n = 0]
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;组合恒等式&#34;&gt;组合恒等式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;对称恒等式 &lt;span class=&#34;math display&#34;&gt;\[
\binom n k = \binom{n}{n - k}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;组合意义易得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;2&#34; type=&#34;1&#34;&gt;
&lt;li&gt;吸收恒等式 &lt;span class=&#34;math display&#34;&gt;\[
\binom n k = \frac n k \binom {n - 1}{k - 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;拆成阶乘形式易得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;3&#34; type=&#34;1&#34;&gt;
&lt;li&gt;归纳恒等式 &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{k} = \binom{n - 1}{k} + \binom{n - 1}{k - 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑钦定一个元素，如果我们现在才选，那么就有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n - 1}{k - 1}\)&lt;/span&gt; 种方案，如果我们没有选，那么就是 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n -1}{k}\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;4&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^nk\binom n k = n2^{n - 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;用吸收恒等式把 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 提掉之后二项式定理可证。对二项展开式求导也可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;5&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n r \binom r k = \binom n k \binom{n - k}{r - k}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：拆成阶乘的形式易证。组合意义也比较好想。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;6&#34; type=&#34;1&#34;&gt;
&lt;li&gt;范德蒙德卷积的推论： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^r\binom n k \binom{m}{r - k} = \binom{n + m}{r}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：考虑组合意义，&lt;span class=&#34;math inline&#34;&gt;\(n + m\)&lt;/span&gt; 中选 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 个可以钦定成在前 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个里面选 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个和在后 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 里面选 &lt;span class=&#34;math inline&#34;&gt;\(r - k\)&lt;/span&gt; 个。同时我们也有 &lt;span class=&#34;math inline&#34;&gt;\((1 + x)^{n + m} = (1 + x)^n(1 + x)^m\)&lt;/span&gt;。考虑 &lt;span class=&#34;math inline&#34;&gt;\([x^r](1 + x)^{n + m}\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;7&#34; type=&#34;1&#34;&gt;
&lt;li&gt;上指标求和 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^n\binom{k}{m} = \binom{n + 1}{m + 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：组合意义：从 &lt;span class=&#34;math inline&#34;&gt;\(\{0, 1, \cdots, n\}\)&lt;/span&gt; 中选出 &lt;span class=&#34;math inline&#34;&gt;\(m + 1\)&lt;/span&gt; 个数，选中的最大数为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的方案数为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom k m\)&lt;/span&gt;。用 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 式一步步推也可推得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;8&#34; type=&#34;1&#34;&gt;
&lt;li&gt;与斐波那契的关系 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=0}^n\binom{n-i}{i} = F_{n+1}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(F_n\)&lt;/span&gt; 表示斐波那契数列的第 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 项。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：可以观察一下杨辉三角。可以通过将式子用归纳恒等式展开证明。&lt;/p&gt;
&lt;h3 id=&#34;多项式系数&#34;&gt;多项式系数&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1, n_2,\cdots, n_t}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其定义为多项式 &lt;span class=&#34;math inline&#34;&gt;\((x_1 + x_2 + \cdots + x_t)^n\)&lt;/span&gt; 中 &lt;span class=&#34;math inline&#34;&gt;\(x_1^{n_1}x_2^{n_2}\cdots x_t^{n_t}\)&lt;/span&gt; 的系数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个不同的球放进 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 个不同盒子里使得第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个盒子有 &lt;span class=&#34;math inline&#34;&gt;\(n_i\)&lt;/span&gt; 个球的方案数。 &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1, n_2,\cdots, n_t} = \binom{n}{n_1}\binom{n - n_1}{n_2}\cdots\binom{n_t}{n_t}
\]&lt;/span&gt; 把组合数拆成阶乘的形式即可得到 &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1,\cdots, n_t} = \frac{n!}{n_1!n_2!\cdots n_t!}
\]&lt;/span&gt; 递推： &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1,\cdots,n_t} = \binom{n - 1}{n_1 - 1, n_2,\cdots, n_t} + \binom{n - 1}{n_1, n_2 - 1,\cdots, n_t} + \binom{n - 1}{n_1, \cdots,n_t - 1}
\]&lt;/span&gt; 和组合数的递推类似。&lt;/p&gt;
&lt;h3 id=&#34;基本计数应用&#34;&gt;基本计数应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5824&#34;&gt;P5824 十二重计数法&lt;/a&gt;（部分）给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子。要将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球全部放入盒子中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I：球之间互不相同，盒子之间互不相同。&lt;/li&gt;
&lt;li&gt;II：球之间互不相同，盒子之间互不相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;III：球之间互不相同，盒子之间互不相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;li&gt;VII：球全部相同，盒子之间互不相同。&lt;/li&gt;
&lt;li&gt;VIII：球全部相同，盒子之间互不相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;IX：球全部相同，盒子之间互不相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;剩余部分留至后文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;I：显然为 &lt;span class=&#34;math inline&#34;&gt;\(m^n\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;II：显然为 &lt;span class=&#34;math inline&#34;&gt;\(m^{\underline{n}}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;III：容斥一波，考虑空盒子的个数，得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=0}^m(-1)^i\binom mi(m-i)^n\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;IX：&lt;strong&gt;插板法&lt;/strong&gt;，我们相当于是将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球划分到 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个连续段里面去，即相当于是 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 个空里面插 &lt;span class=&#34;math inline&#34;&gt;\(m-1\)&lt;/span&gt; 个板，即 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom {n -1}{m-1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;VII：由于一段可以为空，所以不妨强行多塞 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个元素，再套用 VIII，所以就是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{n + m - 1}{m-1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;VIII：考虑是哪几个盒子装球，答案显然为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom mn\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由问题 IX 和问题 VII，我们可以知道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于不定方程 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + \cdots + a_n = X\)&lt;/span&gt;，若要求 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ge 1\)&lt;/span&gt;，则方程的解有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{X - 1}{n - 1}\)&lt;/span&gt; 组。&lt;/li&gt;
&lt;li&gt;若要求 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ge 0\)&lt;/span&gt;，则方程的解有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{X + n - 1}{n - 1}\)&lt;/span&gt; 组。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一类很经典的模型，需要仔细理解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上文是插板法的经典应用，下面来看一个经典问题——错位排列。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4071&#34;&gt;P4071 [SDOI2016]排列计数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\le 5\times 10^5\)&lt;/span&gt; 次询问有多少种 &lt;span class=&#34;math inline&#34;&gt;\(1\sim n\)&lt;/span&gt; 的排列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 满足恰有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个位置满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i = i\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^6\)&lt;/span&gt;，答案模 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们很容易发现，另外的 &lt;span class=&#34;math inline&#34;&gt;\(n - m\)&lt;/span&gt; 个位置必须要满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ne i\)&lt;/span&gt;。而这就是一个很典型的错位排列问题。最经典的错排问题指的是，对于一个排列，其满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ne i\)&lt;/span&gt;，我们设长为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的这样的排列有 &lt;span class=&#34;math inline&#34;&gt;\(D_n\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;则本题的答案很显然为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n}{m}D_{n - m}\)&lt;/span&gt;（考虑选择 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个位置满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i = i\)&lt;/span&gt;）。组合数可以阶乘预处理，压力现在给到 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt; 这边，由于需要多次询问，所以考虑预处理。&lt;/p&gt;
&lt;p&gt;首先我们一定知道 &lt;span class=&#34;math inline&#34;&gt;\(D_1 = 0, D_2 = 1\)&lt;/span&gt;。然后对于 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt;，假设 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 放在了 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 位置上，那么对于数字 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;，若其放在了位置 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 上，则问题转化为 &lt;span class=&#34;math inline&#34;&gt;\(3\sim i\)&lt;/span&gt; 的错排数，有 &lt;span class=&#34;math inline&#34;&gt;\(D_{i - 2}\)&lt;/span&gt; 种方案；若其没有放在位置 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 上，则问题转化为 &lt;span class=&#34;math inline&#34;&gt;\(2\sim i\)&lt;/span&gt; 的错排数，有 &lt;span class=&#34;math inline&#34;&gt;\(D_{i - 1}\)&lt;/span&gt; 种方案。而 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 一共可以放在 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 个位置上，所以是 &lt;span class=&#34;math inline&#34;&gt;\((n-1)(D_{n-2} + D_{n-1})\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;综上， &lt;span class=&#34;math display&#34;&gt;\[
D_n =\begin{cases}
0&amp;amp;n=1\\
1&amp;amp;n=2\\
(n - 1)(D_{n-2} + D_{n-1})&amp;amp;n\ge3
\end{cases}
\]&lt;/span&gt; 同时，错排的通项公式也可以使用容斥来推导，见下文二项式反演处。&lt;/p&gt;
&lt;p&gt;下面提供一个经典的“操作序列”形问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P6475&#34;&gt;P6475 [NOI Online #2 入门组] 建设城市&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问满足以下条件的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a_{1,\cdots, 2n}\)&lt;/span&gt; 的数量，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(1\le n,m\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, 2n], a_i\in[1,m]\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;前 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素不降，后 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素不增。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_x = a_y\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;本题的关键是考虑长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，值域 &lt;span class=&#34;math inline&#34;&gt;\([1, m]\)&lt;/span&gt; 的不降序列的方案数 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m)\)&lt;/span&gt;，剩余部分是简单的分类讨论。下面用两种方法推导 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m)\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;考虑即为将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个小球（高楼）放入 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子（值域）里，可以有空盒，于是由例题 1，答案显然为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m - 1}{m - 1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;考虑长度为 &lt;span class=&#34;math inline&#34;&gt;\(n + m - 1\)&lt;/span&gt; 的操作序列，其中包含给 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 加一和将 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 加到当前序列末尾两个操作。不难发现一个操作序列唯一对应一个不降数列，然后随便想一下发现操作序列的总数为 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m) = \dbinom{n + m - 1}{n}\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作序列的思想很有用。下面来看一道很经典的&lt;strong&gt;棋盘路径计数问题&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;：BZOJ#4767. 两双手&lt;/p&gt;
&lt;p&gt;从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 要走到 &lt;span class=&#34;math inline&#34;&gt;\((E_x, E_y)\)&lt;/span&gt;，每次能从 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((x + A_x, y + A_y)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\((x + B_x, y + B_y)\)&lt;/span&gt;。中间有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个不能走的点，问方案数。保证 &lt;span class=&#34;math inline&#34;&gt;\(A_xB_y - A_yB_x\ne 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\le n,m,k, |A_x|,|A_y|,|B_x|,|B_y|\le 500\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先有一步转化：注意到这两个向量构成平面内的一组基，所以任意的点 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 都可以被表示为 &lt;span class=&#34;math inline&#34;&gt;\(cA + dB\)&lt;/span&gt;，将所有点 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 转为 &lt;span class=&#34;math inline&#34;&gt;\((c, d)\)&lt;/span&gt;。问题于是转化为带障碍的网格路径计数（每步可以向右或者向上走一步）。&lt;/p&gt;
&lt;p&gt;设换了坐标系后终点为 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt;。问题现在转化为从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt; 的带障碍路径计数。&lt;/p&gt;
&lt;p&gt;先不考虑障碍，则我们一共是要走 &lt;span class=&#34;math inline&#34;&gt;\(n + m\)&lt;/span&gt; 步，而其中 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 步往右走，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 步往上走。同样用&lt;strong&gt;操作序列&lt;/strong&gt;的想法来看的话，本质上就是长度为 &lt;span class=&#34;math inline&#34;&gt;\(n + m\)&lt;/span&gt; 的操作序列里面选出 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 步来向右走（剩余 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 步自然是向上走），所以方案数是 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m}{n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有障碍则需要考虑容斥。&lt;/p&gt;
&lt;p&gt;将所有的障碍点以及 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt; 视为关键点，排个序，然后便令 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 出发，不经过障碍点，走到第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个关键点的方案数，则 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \binom{x_i + y_i}{x_i}- \sum_{x_j\le x_i\land y_j\le y_i}f_j\times\binom{(x_i - x_j) + (y_i - y_j)}{x_i - x_j}
\]&lt;/span&gt; 于是时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(k^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;：AGC001E - BBQ Hard&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(a_{1,\cdots, n}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b_{1,\cdots n}\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{j=i+1}^n\binom{a_i + b_i + a_j + b_j}{a_i + a_j}
\]&lt;/span&gt; 答案对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_i,b_i\le 2000\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回忆 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m}{n}\)&lt;/span&gt; 的组合意义：棋盘上从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt; 的路径方案数。那么 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{a_i + b_i + a_j + b_j}{a_i + a_j}\)&lt;/span&gt; 的组合意义即为从 &lt;span class=&#34;math inline&#34;&gt;\((-a_i,-b_i)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((a_j, b_j)\)&lt;/span&gt; 的路径方案数。&lt;/p&gt;
&lt;p&gt;然后现在要求出每一对 &lt;span class=&#34;math inline&#34;&gt;\((i,j)\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\((-a_i, -b_i)\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\((a_j, b_j)\)&lt;/span&gt; 的路径方案数。发现这个东西可以放在棋盘上一起 dp，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(\max^2 v)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意最后要把所有的从 &lt;span class=&#34;math inline&#34;&gt;\((-a_i,-b_i)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((a_i, b_i)\)&lt;/span&gt; 的方案数去重掉，减去 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{2a_i+2b_i}{2a_i}\)&lt;/span&gt; 即可。然后因为题目里面钦定 &lt;span class=&#34;math inline&#34;&gt;\(j &amp;gt; i\)&lt;/span&gt;，所以最后要除以二。&lt;/p&gt;
&lt;h2 id=&#34;容斥原理&#34;&gt;容斥原理&lt;/h2&gt;
&lt;h3 id=&#34;引入&#34;&gt;引入&lt;/h3&gt;
&lt;p&gt;考虑班上有 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个同学选了 A 项目，&lt;span class=&#34;math inline&#34;&gt;\(15\)&lt;/span&gt; 个选了 B 项目，&lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 个选了 C 项目。问班上有多少同学至少选了一个项目。&lt;/p&gt;
&lt;p&gt;朴素的 &lt;span class=&#34;math inline&#34;&gt;\(|A| + |B| + |C|\)&lt;/span&gt; 会重复计数，因为需要考虑重复选项目的同学。所以需要减去同时选了 AB、BC 或 AC 的，但是减去之后，同时选了 ABC 的又会被多减，要加回来。&lt;/p&gt;
&lt;p&gt;直观的表示就是 &lt;span class=&#34;math inline&#34;&gt;\(|A\cup B\cup C| = |A| + |B| + |C| - |A\cap B| - |B\cap C| - |A\cap C| + |A\cap B \cap C|\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;其基本思路就是，&lt;strong&gt;将重复计算的“斥”掉，再将重复“斥”掉的“容”回来&lt;/strong&gt;，所以叫做容斥原理。&lt;/p&gt;
&lt;p&gt;一般地，设 &lt;span class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt; 中元素有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 种不同属性，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 种称为 &lt;span class=&#34;math inline&#34;&gt;\(P_i\)&lt;/span&gt;，具有 &lt;span class=&#34;math inline&#34;&gt;\(P_i\)&lt;/span&gt; 属性的元素构成集合 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;，那么 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\left| \bigcup_{i=1}^n S_i \right| &amp;amp;= \sum_i|S_i| - \sum_{i&amp;lt;j}|S_i\cap S_j| + \sum_{i&amp;lt;j&amp;lt;k}|S_i\cap S_j\cap S_k| - \\&amp;amp;\cdots + (-1)^{m - 1}\sum_{a_i&amp;lt;a_{i + 1}}\left|\bigcap_{i=1}^mS_{a_i}\right| + \cdots + (-1)^{n - 1}|S_1\cap\cdots\cap S_n|
\end{aligned}
\]&lt;/span&gt; 全部缩起来写就是 &lt;span class=&#34;math display&#34;&gt;\[
\left| \bigcup_{i=1}^n S_i \right| = \sum_{m=1}^n(-1)^{m - 1}\sum_{a_i&amp;lt;a_{i + 1}}\left|\bigcap_{i=1}^mS_{a_i}\right|
\]&lt;/span&gt; 浅证明一下：考虑二项式定理，对于每个元素计算其出现的次数。设元素 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 出现在 &lt;span class=&#34;math inline&#34;&gt;\(m\ge 1\)&lt;/span&gt; 个集合 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt; 中，则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选了 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个集合时，被加上了 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom m 1\)&lt;/span&gt; 次。&lt;/li&gt;
&lt;li&gt;选了 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 个集合时，被减去了 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom m 2\)&lt;/span&gt; 次。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;li&gt;选了 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个集合时，被加上了 &lt;span class=&#34;math inline&#34;&gt;\((-1)^{m + 1}\dbinom{m}{m}\)&lt;/span&gt; 次。&lt;/li&gt;
&lt;li&gt;选择的集合多于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个时，他们的交一定不包含 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，不予考虑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i=1}^m(-1)^{i +1}\binom mi\\
=&amp;amp;\binom m0 - \sum_{i=0}^m(-1)^i\binom mi\\
=&amp;amp;1 - (1 - 1)^m\\
=&amp;amp;1
\end{aligned}
\]&lt;/span&gt; 综上，每个元素都一定被计算了恰好 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 次。&lt;/p&gt;
&lt;h3 id=&#34;简单应用&#34;&gt;简单应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3301&#34;&gt;P3301 [SDOI2013]方程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定不定方程 &lt;span class=&#34;math inline&#34;&gt;\(x_1 + x_2 + \cdots + x_n = m\)&lt;/span&gt;，对于 &lt;span class=&#34;math inline&#34;&gt;\(i\in[1, n_1]\)&lt;/span&gt;，有限制 &lt;span class=&#34;math inline&#34;&gt;\(x_i\le A_i\)&lt;/span&gt;；对于 &lt;span class=&#34;math inline&#34;&gt;\(i\in (n_1,n_2]\)&lt;/span&gt;，有限制 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i\)&lt;/span&gt;，求该方程正整数解的组数。答案对 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 取模，&lt;span class=&#34;math inline&#34;&gt;\(p\in\{10007,262203414,437367875\}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n_1,n_2\le 8\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i\)&lt;/span&gt; 的限制，显然，我们把 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 减去 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle \sum_{i = n_1 + 1}^{n_2}(A_i - 1)\)&lt;/span&gt;，然后就把问题转化为了直接插板。&lt;/p&gt;
&lt;p&gt;然后考虑到 &lt;span class=&#34;math inline&#34;&gt;\(x_i\le A_i\)&lt;/span&gt; 的限制不好处理，既然限制数最大为 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt;，不如考虑容斥，将其转化为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i + 1\)&lt;/span&gt; 的形式来处理。&lt;/p&gt;
&lt;p&gt;这样子每次计算的答案为 &lt;span class=&#34;math display&#34;&gt;\[
\binom{m&amp;#39; - 1}{n - 1}\bmod p
\]&lt;/span&gt; 然后这一坨式子是可以使用扩展 Lucas 来算的（见数论复习笔记）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1450&#34;&gt;P1450 [HAOI2008]硬币购物&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(c_1,\cdots, c_4\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次询问不定方程 &lt;span class=&#34;math inline&#34;&gt;\(c_1x_1 + c_2x_2 + c_3x_3 + c_4x_4 = s\)&lt;/span&gt; 的满足 &lt;span class=&#34;math inline&#34;&gt;\(x_i\le d_i\)&lt;/span&gt; 的非负整数解个数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 1000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le c_i,d_i,s\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于一次询问，我们可以 &lt;span class=&#34;math inline&#34;&gt;\(O(s)\)&lt;/span&gt; 背包。但是 &lt;span class=&#34;math inline&#34;&gt;\(O(ns)\)&lt;/span&gt; 显然无法通过本题。&lt;/p&gt;
&lt;p&gt;按照上面的转化，我们先一步容斥，变成 &lt;span class=&#34;math inline&#34;&gt;\(|U| - \displaystyle\left|\bigcup_{i=1}^4\overline{S_i}\right|\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(|U|\)&lt;/span&gt; 可以直接背包求出（无任何限制），后者使用容斥进行展开。考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\overline{S_i}\)&lt;/span&gt; 的意义即为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge d_i + 1\)&lt;/span&gt;，那么直接将 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 减去 &lt;span class=&#34;math inline&#34;&gt;\(d_i + 1\)&lt;/span&gt; 问题就变成没有下界的了，可以背包预处理。&lt;/p&gt;
&lt;h3 id=&#34;子集反演&#34;&gt;子集反演&lt;/h3&gt;
&lt;p&gt;容斥的一般形式，实际上下文的二项式反演/min-max 容斥（乃至数论中的莫比乌斯反演）的本质也就是子集反演，只不过是加以变形和特殊化。&lt;/p&gt;
&lt;p&gt;对于两个集合的函数 &lt;span class=&#34;math inline&#34;&gt;\(f(S)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(S)\)&lt;/span&gt;，若 &lt;span class=&#34;math display&#34;&gt;\[f(S) = \sum_{T\subseteq S} g(T)\]&lt;/span&gt; 则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
g(S) = \sum_{T\subseteq S}(-1)^{|S| - |T|} f(T)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;先考虑将上式代入下式，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{T\subseteq S}(-1)^{|S| - |T|}\sum_{Q\subseteq T}g(Q)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后调换求和顺序改为枚举 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt;，变为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{Q\subseteq S}g(Q)\sum_{Q\subseteq T\subseteq S}(-1)^{|S| - |T|}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;后半部分与 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt; 无关，去掉 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{Q}g(Q)\sum_{T\subseteq (S\setminus Q)}(-1)^{|S\setminus Q| - |T|}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不妨记函数 &lt;span class=&#34;math inline&#34;&gt;\(F(S) = \sum_{T\subseteq S}(-1)^{|S| - |T|}\)&lt;/span&gt; 并尝试对其化简：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(S) &amp;amp;= \sum_{T\subseteq S}(-1)^{|S| - |T|}\\
&amp;amp;= \sum_{i = 0}^{|S|} (-1)^{|S| - i}\binom{|S|}{i}\\
&amp;amp;= \sum_{i=0}^{|S|} \binom{|S|}{i} 1^i (-1)^{|S| - i}\\
&amp;amp;= (1-1)^{|S|}\\
&amp;amp;= [|S| = 0]
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以原式化成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_Q g(Q) F(S\setminus Q)\)&lt;/span&gt; 而只有当 &lt;span class=&#34;math inline&#34;&gt;\(|S\setminus Q| = 0\)&lt;/span&gt; 即 &lt;span class=&#34;math inline&#34;&gt;\(Q = S\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(F(S\setminus Q)\ne 0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(g(Q)\)&lt;/span&gt; 只会在 &lt;span class=&#34;math inline&#34;&gt;\(S = Q\)&lt;/span&gt; 的时候产生贡献，故等式右边等于左边。&lt;span class=&#34;math inline&#34;&gt;\(\square\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;二项式反演&#34;&gt;二项式反演&lt;/h3&gt;
&lt;p&gt;一种奇形怪状的容斥，常用于转换“恰好”“至少”“至多”等字眼。&lt;/p&gt;
&lt;h4 id=&#34;形式一&#34;&gt;形式一&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_n = \sum_{i = 0}^n\binom n i g_i \iff g_n = \sum_{i = 0}^n(-1)^{n - i}\binom n i f_i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;证明考虑将右式回代入左式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_n &amp;amp;= \sum_{i = 0}^n\binom n i g_i\\
&amp;amp;= \sum_{i = 0}^n\binom n i\sum_{j = 0}^i(-1)^{i - j}\binom i jf_j\\
&amp;amp;= \sum_{i = 0}^n\sum_{j = 0}^i(-1)^{i - j}\binom n i \binom i j f_j\\
&amp;amp;= \sum_{i = 0}^n\sum_{j = 0}^i(-1)^{i - j}\binom n j\binom{n - j}{i - j}f_j\\
&amp;amp;= \sum_{j = 0}^nf_j\binom n j \sum_{i = j}^n(-1)^{i - j}\binom{n - j}{i - j}\\
&amp;amp;= \sum_{j = 0}^nf_j\binom n j \sum_{k = 0}^{n - j}(-1)^k\binom {n - j}{k}\\
&amp;amp;= \sum_{j = 0}^nf_j\binom n j[n = j]\\
&amp;amp;= f_n
\end{aligned}
\]&lt;/span&gt; 其中用到了交换求和顺序以及将式子化为卷积形式的 trick。&lt;/p&gt;
&lt;p&gt;还有一种使用 EGF 的证明：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_n &amp;amp;= \sum_{i = 0}^n\binom n i g_i\\
\frac{f_n}{n!} &amp;amp;= \sum_{i = 0}^n\frac{1}{(n - i)!}\frac{g_i}{i!}\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这是一个卷积的形式，考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\exp(x) = \displaystyle\sum_{i = 0}\frac{x^i}{i!}\)&lt;/span&gt;，故有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
F(x) = G(x)\exp(x)\iff G(x) = F(x)\exp(-x)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\frac{g_n}{n!} &amp;amp;= \sum_{i = 0}^n\frac{f_i}{i!}(-1)^{n - i}(n - i)!\\
g_n &amp;amp;= \sum_{i = 0}^n(-1)^{n - i}\binom n i f_i
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;根据组合意义可以知道 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt; 表示“至多 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”，&lt;span class=&#34;math inline&#34;&gt;\(g_n\)&lt;/span&gt; 表示“恰好 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”。&lt;/p&gt;
&lt;h4 id=&#34;形式二&#34;&gt;形式二&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_i = \sum_{j = i}^n\binom j ig_j\iff g_i = \sum_{j = i}^n(-1)^{j - i}\binom j if_{j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;根据组合意义可以知道 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt; 表示“至少 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”，&lt;span class=&#34;math inline&#34;&gt;\(g_n\)&lt;/span&gt; 表示“恰好 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”。&lt;/p&gt;
&lt;h4 id=&#34;应用&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;可以用于优化容斥，也可以进行奇怪的式子转化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：错排问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt; 为恰好 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 排错个的方案数，则我们知道 &lt;span class=&#34;math display&#34;&gt;\[
n! = \sum_{i = 0}^n\binom n i D_i
\]&lt;/span&gt; 这明显是二项式反演的形式，反演一下就知道 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle D_i = \sum_{i = 0}^n(-1)^{n - i}\binom n i i!\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;应用 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：染色问题。&lt;/p&gt;
&lt;p&gt;一列 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 种颜色，给每个球染色，要求相邻球颜色不同，且每种颜色至少用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 次。问方案数。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不考虑至少用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 次的限制的话就是 &lt;span class=&#34;math inline&#34;&gt;\(m(m - 1)^{n - 1}\)&lt;/span&gt;，现在我们考虑进去。设 &lt;span class=&#34;math inline&#34;&gt;\(f_k\)&lt;/span&gt; 为至多用 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 种颜色的方案数，即 &lt;span class=&#34;math inline&#34;&gt;\(k(k - 1)^{n - 1}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g_k\)&lt;/span&gt; 为恰好用 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 种颜色的方案数，则 &lt;span class=&#34;math display&#34;&gt;\[
f_k = \sum_{i = 0}^k\binom k ig_i\iff g_k = \sum_{i = 0}^k(-1)^{k - i}\binom k ii(i - 1)^{n - 1}
\]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：斯特林数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;见下文。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4859&#34;&gt;P4859 已经没有什么好害怕的了&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定两个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(\{a\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{b\}\)&lt;/span&gt;，将其两两配对，问 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;gt; b_i\)&lt;/span&gt; 比 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;lt; b_i\)&lt;/span&gt; 的情况恰好多 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组的方案数。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接令 &lt;span class=&#34;math inline&#34;&gt;\(k = \dfrac{n + k}{2}\)&lt;/span&gt;，即转化为 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;gt; b_i\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组。这样会好想一点。&lt;/p&gt;
&lt;p&gt;如果不考虑恰好 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组这个条件而是将其变为至少 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组，则我们可以考虑一个 dp。首先先分别排好序，然后我们设 &lt;span class=&#34;math inline&#34;&gt;\(dp_{i, j}\)&lt;/span&gt; 表示前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 里选了 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 组比 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 大的，则有转移 &lt;span class=&#34;math display&#34;&gt;\[
dp_{i, j} = dp_{i - 1, j} + (l_i - (j - 1))dp_{i - 1, j - 1}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(l_i\)&lt;/span&gt; 表示比 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 小的 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 的个数。因为已经选了 &lt;span class=&#34;math inline&#34;&gt;\(j - 1\)&lt;/span&gt; 个所以要扣去 &lt;span class=&#34;math inline&#34;&gt;\(j - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;dp 完了之后还没完，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为至少有 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 组的答案，则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = (n - i)!dp_{n, i}\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(g_i\)&lt;/span&gt; 为恰好为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 组的答案，然后快乐二项式反演就可以得到 &lt;span class=&#34;math display&#34;&gt;\[
g_k = \sum_{i = k}^n(-1)^{i - k} \binom i kf_i
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 算一下即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6478&#34;&gt;P6478 [NOI Online #2 提高组] 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有一棵 &lt;span class=&#34;math inline&#34;&gt;\(n = 2m\)&lt;/span&gt; 个点的有根树，两人初始各有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个点。一共 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 轮游戏，每轮游戏两人各选一个点，若两人选的点间构成祖先关系，则这轮会决出胜负。对于 &lt;span class=&#34;math inline&#34;&gt;\(k = 0, 1, 2,\cdots, m\)&lt;/span&gt; 求出有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 轮决出胜负的方案数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 5000\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;题解见&lt;a href=&#34;https://oi.imyangty.com/sol-noiol/&#34;&gt;此处&lt;/a&gt;。本题就是上题的上树版本。&lt;/p&gt;
&lt;h3 id=&#34;min-max-容斥&#34;&gt;min-max 容斥&lt;/h3&gt;
&lt;h4 id=&#34;一般形式&#34;&gt;一般形式&lt;/h4&gt;
&lt;p&gt;假设我们能很容易的求出所有子集的 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt; 但很难求 &lt;span class=&#34;math inline&#34;&gt;\(\max\)&lt;/span&gt;，有一种容斥是可以这样做的： &lt;span class=&#34;math display&#34;&gt;\[
\max(S) = \sum_{T\subseteq S} (-1)^{|T| + 1}\min(T)
\]&lt;/span&gt; 证明：不妨给元素从小到大标号为 &lt;span class=&#34;math inline&#34;&gt;\(a_1, a_2,\cdots,a_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先，&lt;span class=&#34;math inline&#34;&gt;\(\max(S) = a_n\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(\min(T) = a_n\)&lt;/span&gt; 的情况只有 &lt;span class=&#34;math inline&#34;&gt;\(T = \{a_n\}\)&lt;/span&gt;。贡献为 &lt;span class=&#34;math inline&#34;&gt;\((-1)^{1 + 1}a_n = a_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而对于剩下的 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，假设 &lt;span class=&#34;math inline&#34;&gt;\(\min(T) = a_k\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 一定只能包含 &lt;span class=&#34;math inline&#34;&gt;\(a_k,\cdots, a_n\)&lt;/span&gt; 等元素，一共有 &lt;span class=&#34;math inline&#34;&gt;\(2^{n - k + 1}\)&lt;/span&gt; 个这样的 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 中元素奇偶性又是对半分的，故这些贡献是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(\blacksquare\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同样的还有一种形式： &lt;span class=&#34;math display&#34;&gt;\[
\min(S) = \sum_{T\subseteq S}(-1)^{|T| + 1}\max(T)
\]&lt;/span&gt; 注意 min-max 容斥在期望下也成立，所以经常可以把“最后出现的期望”一类转化为“第一次出现的期望”等问题，见例题 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3175&#34;&gt;P3175 [HAOI2015]按位或&lt;/a&gt;&lt;/strong&gt;，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3175/&#34;&gt;题解链接&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;相关题目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.51nod.com/Challenge/Problem.html#problemId=1355&#34;&gt;51nod1355 斐波那契的最小公倍数&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5643&#34;&gt;P5643 [PKUWC2018]随机游走&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，min-max 容斥还可以被推广到第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/小，咕。&lt;/p&gt;
&lt;h4 id=&#34;kth-minmax-容斥&#34;&gt;kth-minmax 容斥&lt;/h4&gt;
&lt;p&gt;咕咕咕。&lt;/p&gt;
&lt;h2 id=&#34;群计数相关&#34;&gt;群计数相关&lt;/h2&gt;
&lt;p&gt;紧急营业，模拟赛做到了考到群计数的题。&lt;/p&gt;
&lt;p&gt;下面的定理全部没有证明，新学的请移步别处。&lt;/p&gt;
&lt;h3 id=&#34;群论基础&#34;&gt;群论基础&lt;/h3&gt;
&lt;p&gt;一个集合 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 和一个运算 &lt;span class=&#34;math inline&#34;&gt;\(\times\)&lt;/span&gt;，若满足满足如下四个性质，则称二元组 &lt;span class=&#34;math inline&#34;&gt;\((G, \times)\)&lt;/span&gt; 为一个群：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封闭性：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b\in G, a\times b\in G\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;结合律：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b, c\in G, (a\times b)\times c = a\times(b\times c)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;单位元：&lt;span class=&#34;math inline&#34;&gt;\(\exist e\in G, a\times e = e\times a = a\)&lt;/span&gt;，并且 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 唯一。&lt;/li&gt;
&lt;li&gt;逆元：&lt;span class=&#34;math inline&#34;&gt;\(\forall a\in G, \exists a&amp;#39;\in G, a\times a&amp;#39; = a&amp;#39;\times a = e\)&lt;/span&gt;，并且 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;#39;\)&lt;/span&gt; 唯一。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集合 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 的大小 &lt;span class=&#34;math inline&#34;&gt;\(|G|\)&lt;/span&gt; 称为这个群的阶。&lt;/p&gt;
&lt;p&gt;子群：&lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 的子集，并且 &lt;span class=&#34;math inline&#34;&gt;\((H, \times)\)&lt;/span&gt; 为群，则称 &lt;span class=&#34;math inline&#34;&gt;\((H,\times)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\((G,\times)\)&lt;/span&gt; 的子群，记为 &lt;span class=&#34;math inline&#34;&gt;\(H\le G\)&lt;/span&gt;​。&lt;/p&gt;
&lt;p&gt;置换： &lt;span class=&#34;math display&#34;&gt;\[
\sigma = \begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5\\
2 &amp;amp; 5 &amp;amp; 4 &amp;amp; 3 &amp;amp; 1
\end{pmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;就是把上一行的排列变成下一行。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma = (a_1, a_2, \cdots, a_n)\)&lt;/span&gt; 表示一个置换。两个置换可以合成。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma\times a = \sigma(a) = (\sigma_{a_1}, \sigma_{a_2},\cdots,\sigma_{a_n})\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(N = \{1, \cdots, n\}\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 为所有排列的集合，令 &lt;span class=&#34;math inline&#34;&gt;\(G = (M, \times)\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 为一置换群。&lt;/p&gt;
&lt;p&gt;封闭性显然，结合律显然，单位元为 &lt;span class=&#34;math inline&#34;&gt;\((1, 2,\cdots, n)\)&lt;/span&gt;，逆元显然。&lt;/p&gt;
&lt;p&gt;轮换：将置换用一张有向图表示，由于每个点的入度/出度都为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，所以一定可以形成若干个环，例如置换： &lt;span class=&#34;math display&#34;&gt;\[
\begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5\\
2 &amp;amp; 5 &amp;amp; 4 &amp;amp; 3 &amp;amp; 1
\end{pmatrix}
\]&lt;/span&gt; 就可以表示为 &lt;span class=&#34;math inline&#34;&gt;\((1, 2, 5)(3, 4)\)&lt;/span&gt;。置换用这些表示一定是一一对应的。&lt;/p&gt;
&lt;p&gt;群作用：对于一个集合 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 和群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;，若给定一二元函数 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(v, k)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k\in M\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(v\in G\)&lt;/span&gt;，且 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(e, k) &amp;amp;= k\\
\varphi(g, \varphi(s, k)) &amp;amp;= \varphi(g\times s, k)
\end{aligned}
\]&lt;/span&gt; 则称 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用于 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;burnside-引理&#34;&gt;Burnside 引理&lt;/h3&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 为一置换群，作用于 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;。若 &lt;span class=&#34;math inline&#34;&gt;\(x, y\in X\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用下可以相等即 &lt;span class=&#34;math inline&#34;&gt;\(\exists f\in G,f(x) = y\)&lt;/span&gt;，则定义 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 属于一个等价类，不同的等价类数量为 &lt;span class=&#34;math display&#34;&gt;\[
|X / G| = \frac{1}{|G|}\sum_{g\in G}X^g
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(X^g\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的作用下不动点的数量，即 &lt;span class=&#34;math inline&#34;&gt;\(|\{x\in X \mid g(x) = x\}|\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 在群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用下的等价类总数等于每个 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 作用于 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 的不动点数量的算术平均值。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案等于每个置换的不动点的平均数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;应用-1&#34;&gt;应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1446&#34;&gt;P1446 [HNOI2008]Cards&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要给 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 张牌染色，&lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 张红，&lt;span class=&#34;math inline&#34;&gt;\(S_g\)&lt;/span&gt; 张绿，&lt;span class=&#34;math inline&#34;&gt;\(S_b\)&lt;/span&gt; 张蓝。同时给定若干种洗牌法，保证为置换群，问本质不同的染色方案数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Burnside 引理告诉我们要求出每个置换的不动点个数。我们注意到这里每个置换都可以分解为若干个轮换环，既然是不动点那么每个环内染的颜色必然就相同，我们用一个 &lt;span class=&#34;math inline&#34;&gt;\(f_{r, g,b}\)&lt;/span&gt; 类似背包的 dp 就可以轻松求出不动点个数。&lt;/p&gt;
&lt;p&gt;然而一定要考虑单位置换的影响。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 2：&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA10601&#34;&gt;UVA10601 Cubes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 根等长，着色的木棒。问能构成的本质不同的正方体数量。颜色最多有 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 种。正方体 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 本质不同，当 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 不能通过旋转得到 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分析正方体的所有置换并拆成若干个轮换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;恒等变换：即不动。分解为 &lt;span class=&#34;math inline&#34;&gt;\((1)^{12}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对面中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(90^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(3\times 2 = 6\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((4)^3\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对面中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(180^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(3\times 1 = 3\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((2)^6\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对棱中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(180^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((1)^2(2)^5\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对顶点连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(120^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(4\times 2 = 8\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((3)^4\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一共有 &lt;span class=&#34;math inline&#34;&gt;\(24\)&lt;/span&gt; 种这样的置换。&lt;/p&gt;
&lt;p&gt;找不动点就是给这些环填上一样颜色的方案数。不难发现就是多重组合数，套公式算就行了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;P4727 [HNOI2009]图的同构计数`&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;生成函数&#34;&gt;生成函数&lt;/h2&gt;
&lt;p&gt;咕咕咕。&lt;/p&gt;
&lt;h2 id=&#34;特殊数列&#34;&gt;特殊数列&lt;/h2&gt;
&lt;h3 id=&#34;卡特兰数&#34;&gt;卡特兰数&lt;/h3&gt;
&lt;p&gt;感觉应用也就那几种。&lt;/p&gt;
&lt;p&gt;递推公式 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
C_n = \sum_{i = 0}^{n - 1}C_iC_{n - 1 - i}
\]&lt;/span&gt; 这个式子是由一个树形 dp 推出来的。&lt;/p&gt;
&lt;p&gt;通项公式： &lt;span class=&#34;math display&#34;&gt;\[
C_n = \frac{\binom{2n}{n}}{n + 1} = \binom{2n}{n} - \binom{2n}{n - 1}
\]&lt;/span&gt; 大多数时候通过观察 dp 式子可以直接看出卡特兰，敲一个通项上去就 ok 了。&lt;/p&gt;
&lt;h3 id=&#34;斯特林数&#34;&gt;斯特林数&lt;/h3&gt;
&lt;h4 id=&#34;第二类斯特林数&#34;&gt;第二类斯特林数&lt;/h4&gt;
&lt;p&gt;第二类斯特林数（斯特林子集数）：&lt;span class=&#34;math inline&#34;&gt;\(\begin{Bmatrix}n\\k\end{Bmatrix}\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(S(n, k)\)&lt;/span&gt;，表示将&lt;strong&gt;两两不同的元素，划分为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个互不区分的非空子集的方案数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{Bmatrix}n\\k\end{Bmatrix} = \begin{Bmatrix}n - 1\\k - 1\end{Bmatrix} + k\begin{Bmatrix}n - 1\\k\end{Bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;边界为 &lt;span class=&#34;math inline&#34;&gt;\(\begin{Bmatrix}n\\0\end{Bmatrix} = [n = 0]\)&lt;/span&gt;。证明考虑组合意义：最后一个数是单独放一个子集还是选一个已经放了的子集放。&lt;/p&gt;
&lt;p&gt;我们考虑 &lt;span class=&#34;math display&#34;&gt;\[
m^n = \sum_{i = 0}^m\binom m i\begin{Bmatrix}n\\ i\end{Bmatrix}i!
\]&lt;/span&gt; 这个式子的组合意义是：将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素随意放入 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个有标号集合的方案数。右边是枚举非空的集合，&lt;span class=&#34;math inline&#34;&gt;\(i!\)&lt;/span&gt; 赋予集合标号。&lt;/p&gt;
&lt;p&gt;然后就可以愉快二项式反演： &lt;span class=&#34;math display&#34;&gt;\[
m!\begin{Bmatrix}n\\m\end{Bmatrix} = \sum_{i = 0}^m(-1)^{m - i}\binom m ii^n
\]&lt;/span&gt; 化简即可得到卷积形式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{Bmatrix}n\\m\end{Bmatrix} = \sum_{i=0}^m\frac{(-1)^{m - i}}{(m - i)!}\times \frac{i^n}{i!}
\]&lt;/span&gt; 然后就可以做 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5395&#34;&gt;P5395 第二类斯特林数·行&lt;/a&gt;&lt;/strong&gt; 了，直接 NTT 碾过去就行了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5824&#34;&gt;P5824 十二重计数法&lt;/a&gt;（部分）给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IV：球之间互不相同，盒子全部相同。&lt;/li&gt;
&lt;li&gt;V：球之间互不相同，盒子全部相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;VI：球之间互不相同，盒子全部相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;VI 显然就为 &lt;span class=&#34;math inline&#34;&gt;\(S(n, m)\)&lt;/span&gt;，V 则是 &lt;span class=&#34;math inline&#34;&gt;\([n\le m]\)&lt;/span&gt;，而 IV 则考虑枚举放了球的盒子个数，不难发现其为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^mS(n, i)\)&lt;/span&gt;。用 P5395 的代码碾过去就可以了。&lt;/p&gt;
&lt;h4 id=&#34;第一类斯特林数&#34;&gt;第一类斯特林数&lt;/h4&gt;
&lt;h4 id=&#34;上升幂与下降幂&#34;&gt;上升幂与下降幂&lt;/h4&gt;
&lt;h4 id=&#34;斯特林反演&#34;&gt;斯特林反演&lt;/h4&gt;
&lt;h3 id=&#34;分拆数&#34;&gt;分拆数&lt;/h3&gt;
&lt;p&gt;令自然数的分拆为递降正整数的和： &lt;span class=&#34;math display&#34;&gt;\[
n= r_1+r_2+\cdots+r_k\quad r_1\ge r_2\ge\cdots\ge r_k\ge 1
\]&lt;/span&gt; 定义分拆数 &lt;span class=&#34;math inline&#34;&gt;\(p_n\)&lt;/span&gt; 为自然数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的分拆方式数。&lt;/p&gt;
&lt;h4 id=&#34;k-部分拆数&#34;&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数&lt;/h4&gt;
&lt;p&gt;在研究 &lt;span class=&#34;math inline&#34;&gt;\(p_n\)&lt;/span&gt; 之前先考虑研究 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数 &lt;span class=&#34;math inline&#34;&gt;\(p(n,k)\)&lt;/span&gt;，即将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 拆分为恰好 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个部分的方案数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5824&#34;&gt;P5824 十二重计数法&lt;/a&gt;（部分）给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X：球全部相同，盒子全部相同。&lt;/li&gt;
&lt;li&gt;XI：球全部相同，盒子全部相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;XII：球全部相同，盒子全部相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;先考虑问题 XII，我们可以随便想出一个经典的 dp： &lt;span class=&#34;math display&#34;&gt;\[
p(n,k) = p(n - k, k) + p(n - 1, k - 1)
\]&lt;/span&gt; 其组合意义为：考虑最后一个部分放 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，或者选择把上一个分拆里面的数字全部加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。于是这个东西就可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; dp。&lt;/p&gt;
&lt;p&gt;接下来我们考虑一下其生成函数 &lt;span class=&#34;math inline&#34;&gt;\(F_j(x) = p(0, j) + p(1, j)x + p(2, j)x^2 + p(3, j)x^3+\cdots\)&lt;/span&gt;，根据上面的递推式我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
F_j(x) = x^jF_j(x) + xF_{j - 1}(x)
\]&lt;/span&gt; 然后化简一下式子：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle F_j(x) = \frac{xF_{j - 1}(x)}{1 - x^j} = x^j\prod_{k=1}^j\frac{1}{1 - x^k}\)&lt;/span&gt;。不妨令 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle G_k(x) = \frac{1}{1 - x^k}\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
F_j(x) = x^j\prod_{k = 1}^jG_k(x) = x^jH_j(x)
\]&lt;/span&gt; 求 &lt;span class=&#34;math inline&#34;&gt;\(\prod G_k(x)\)&lt;/span&gt; 貌似是一个经典问题，这里再推导一遍。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
H_j(x) &amp;amp;= \prod_{k=1}^jG_k(x)\\
\ln H_j(x) &amp;amp;= \sum_{k=1}^j\ln G_k(x)\\
&amp;amp;= -\sum_{k=1}^j\ln(1 - x^k)\\
&amp;amp;= \sum_{k=1}^j\sum_{i=1}^{+\infty}\frac{x^{ki}}{i}
\end{aligned}
\]&lt;/span&gt; 可以暴力 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 求出来，然后做 exp 即可。&lt;/p&gt;
&lt;p&gt;这里不难发现，问题 XII 的答案为 &lt;span class=&#34;math inline&#34;&gt;\([x^{n - m}]H_m(x)\)&lt;/span&gt;，问题 X 的答案为 &lt;span class=&#34;math inline&#34;&gt;\([x^n]H_m(x)\)&lt;/span&gt;，问题 XI 的答案为 &lt;span class=&#34;math inline&#34;&gt;\([n\le m]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;事实上，若我们定义的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数中可以有 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则其生成函数就是 &lt;span class=&#34;math inline&#34;&gt;\(H_m(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;五边形数定理&#34;&gt;五边形数定理&lt;/h4&gt;
&lt;p&gt;定义五边形数 &lt;span class=&#34;math inline&#34;&gt;\(P_n = \dfrac{n(3n - 1)}{2}\)&lt;/span&gt;，将下标扩展后得到广义五边形数 &lt;span class=&#34;math inline&#34;&gt;\(P_n = \dfrac{n(3n\pm 1)}{2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;定义欧拉函数（区别数论中的欧拉函数) &lt;span class=&#34;math display&#34;&gt;\[
\phi(x) = \prod_{i=1}^{+\infty}(1 - x^i)
\]&lt;/span&gt; 则五边形数定理说的就是 &lt;span class=&#34;math display&#34;&gt;\[
\phi(x) = \prod_{i=-\infty}^{+\infty}(-1)^ix^{\frac{i(3i-1)}{2}} = 1 + \prod_{i=0}^{+\infty}(-1)^ix^{\frac{i(3i \pm 1)}{2}}
\]&lt;/span&gt; 这部分证明全部咕掉。&lt;/p&gt;
&lt;h4 id=&#34;求分拆数&#34;&gt;求分拆数&lt;/h4&gt;
&lt;p&gt;注意到，根据上面的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数，我们可以轻松推出分拆数的生成函数为 &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \prod_{i=1}^{+\infty}\frac{1}{1 - x^i}
\]&lt;/span&gt; 发现其满足 &lt;span class=&#34;math display&#34;&gt;\[
F(x)\phi(x) = 1
\]&lt;/span&gt; 我们考虑展开 &lt;span class=&#34;math inline&#34;&gt;\([x^n]F(x)\phi(x)\)&lt;/span&gt;，有： &lt;span class=&#34;math display&#34;&gt;\[
p_n - p_{n - 1} - p_{n - 2} + p_{n - 5} + p_{n - 7} - \cdots = 0
\]&lt;/span&gt; 于是我们就得到了分拆数的递推公式（考虑对于 &lt;span class=&#34;math inline&#34;&gt;\(i&amp;lt;0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p_i = 0\)&lt;/span&gt;）： &lt;span class=&#34;math display&#34;&gt;\[
p_n = p_{n - 1} - p_{n - 2} + p_{n - 5} + p_{n - 7} - \cdots
\]&lt;/span&gt; 由于广义五边形数的增长速度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，所以求分拆数可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 的时间内进行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 2：&lt;a href=&#34;https://www.luogu.com.cn/problem/P6189&#34;&gt;P6189 [NOI Online #1 入门组] 跑步&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;单次询问任意模数拆分数，&lt;span class=&#34;math inline&#34;&gt;\(n = 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以用上面的方法直接做。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod, n, p[maxn], g[maxn], m;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, mod);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * (&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;lt;= n; ++i) g[m++] = i * (&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, g[m++] = i * (&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; m &amp;amp;&amp;amp; g[j] &amp;lt;= i; ++j) p[i] = (p[i] + (((j &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * p[i - g[j]]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print((p[n] + mod) % mod);&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然也可以根号分治，对于 &lt;span class=&#34;math inline&#34;&gt;\(\le\sqrt n\)&lt;/span&gt; 的考虑直接完全背包，然后设 &lt;span class=&#34;math inline&#34;&gt;\(g_{i, j}\)&lt;/span&gt; 为使用 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个大于等于 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 的数加出 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数，发现 &lt;span class=&#34;math inline&#34;&gt;\(i\le \sqrt n\)&lt;/span&gt;，最后合并两个 dp 的答案即可。&lt;/p&gt;
&lt;h3 id=&#34;斐波那契&#34;&gt;斐波那契&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>置换群计数相关</title>
        <link>https://oi.imyangty.com/note-group/</link>
        <pubDate>Sat, 02 Oct 2021 21:10:07 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-group/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg15.webp" alt="Featured image of post 置换群计数相关" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;自己的学习笔记，备忘。不包看懂，不包没错。&lt;/p&gt;
&lt;p&gt;群计数类问题在实际应用时需要较多前置技能（e.g. 莫比乌斯反演，生成函数，排列组合，etc.）。&lt;/p&gt;
&lt;h2 id=&#34;群论基础&#34;&gt;群论基础&lt;/h2&gt;
&lt;p&gt;一个集合 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 和一个运算 &lt;span class=&#34;math inline&#34;&gt;\(\times\)&lt;/span&gt;，若满足满足如下四个性质，则称二元组 &lt;span class=&#34;math inline&#34;&gt;\((G, \times)\)&lt;/span&gt; 为一个群：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封闭性：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b\in G, a\times b\in G\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;结合律：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b, c\in G, (a\times b)\times c = a\times(b\times c)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;单位元：&lt;span class=&#34;math inline&#34;&gt;\(\exist e\in G, a\times e = e\times a = a\)&lt;/span&gt;，并且 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 唯一。&lt;/li&gt;
&lt;li&gt;逆元：&lt;span class=&#34;math inline&#34;&gt;\(\forall a\in G, \exists a&amp;#39;\in G, a\times a&amp;#39; = a&amp;#39;\times a = e\)&lt;/span&gt;，并且 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;#39;\)&lt;/span&gt; 唯一。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集合 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 的大小 &lt;span class=&#34;math inline&#34;&gt;\(|G|\)&lt;/span&gt; 称为这个群的阶。&lt;/p&gt;
&lt;p&gt;子群：&lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 的子集，并且 &lt;span class=&#34;math inline&#34;&gt;\((H, \times)\)&lt;/span&gt; 为群，则称 &lt;span class=&#34;math inline&#34;&gt;\((H,\times)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\((G,\times)\)&lt;/span&gt; 的子群，记为 &lt;span class=&#34;math inline&#34;&gt;\(H\le G\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;陪集：令 &lt;span class=&#34;math inline&#34;&gt;\(H\le G\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g\in G\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(gH = \{g\times h \mid h\in H\}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 关于 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 内关于 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的左陪集。右陪集同理，即为 &lt;span class=&#34;math inline&#34;&gt;\(Hg = \{h\times g\mid h\in H\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;陪集有如下性质：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall g\in G\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|H| = |Hg|\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;由逆元唯一可得 &lt;span class=&#34;math inline&#34;&gt;\(h\times g_1\not= h\times g_2\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;2&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall g\in G, g\in Hg\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑单位元 &lt;span class=&#34;math inline&#34;&gt;\(e\in H\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(e\times g = g\in Hg\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;3&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(Hg = H\iff g\in H\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;封闭性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;4&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(Ha = Hb\iff a\times b^{-1}\in H\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(Ha = Hb\implies Ha\times b^{-1} = H\)&lt;/span&gt;，由性质 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a\times b^{-1}\in H\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(a\times b^{-1}\in H\implies Ha = Hb\)&lt;/span&gt; 显然。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;5&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(Ha\cap Hb\not= \varnothing\implies Ha = Hb\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个性质告诉我们：&lt;strong&gt;一个子群 &lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 的陪集要么互不交要么两个相等&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;假设：&lt;span class=&#34;math inline&#34;&gt;\(c\in Ha \land c\in Hb\)&lt;/span&gt;，于是 &lt;span class=&#34;math inline&#34;&gt;\(\exists h_1, h_2\in H,h_1\times a = c, h_2\times b = c\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(ab^{-1} = h_2h_1^{-1}\in H\)&lt;/span&gt;，由性质 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(Ha = Hb\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;6&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 的全体右陪集的并是 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 取单位元，&lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 取遍 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 中所有元素，并起来就一定是 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;拉格朗日定理&#34;&gt;拉格朗日定理&lt;/h2&gt;
&lt;p&gt;以下默认 &lt;span class=&#34;math inline&#34;&gt;\(G\le H\)&lt;/span&gt;，定义 &lt;span class=&#34;math inline&#34;&gt;\(G/H\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 中&lt;strong&gt;所有元素的左陪集&lt;/strong&gt;即 &lt;span class=&#34;math inline&#34;&gt;\(G/H = \{gH\mid g\in G\}\)&lt;/span&gt;。定义 &lt;span class=&#34;math inline&#34;&gt;\([G:H]\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 中 &lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 不同陪集的数量。&lt;/p&gt;
&lt;p&gt;拉格朗日定理：&lt;/p&gt;
&lt;p&gt;对于有限群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(H\le G\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
|H|[G:H] = [G]
\]&lt;/span&gt; 所有本质不同陪集互不交，且大小均为 &lt;span class=&#34;math inline&#34;&gt;\(|H|\)&lt;/span&gt;，并起来就是 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;。所以不同陪集数量 &lt;span class=&#34;math inline&#34;&gt;\([G:H]\)&lt;/span&gt; 乘上 &lt;span class=&#34;math inline&#34;&gt;\(|H|\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(|G|\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;置换&#34;&gt;置换&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sigma = \begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5\\
2 &amp;amp; 5 &amp;amp; 4 &amp;amp; 3 &amp;amp; 1
\end{pmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;就是把上一行的排列变成下一行。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma = (a_1, a_2, \cdots, a_n)\)&lt;/span&gt; 表示一个置换。两个置换可以合成。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma\times a = \sigma(a) = (\sigma_{a_1}, \sigma_{a_2},\cdots,\sigma_{a_n})\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(N = \{1, \cdots, n\}\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 为所有排列的集合，令 &lt;span class=&#34;math inline&#34;&gt;\(G = (M, \times)\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 为一置换群。&lt;/p&gt;
&lt;p&gt;封闭性显然，结合律显然，单位元为 &lt;span class=&#34;math inline&#34;&gt;\((1, 2,\cdots, n)\)&lt;/span&gt;，逆元显然。&lt;/p&gt;
&lt;p&gt;轮换：将置换用一张有向图表示，由于每个点的入度/出度都为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，所以一定可以形成若干个环，例如置换： &lt;span class=&#34;math display&#34;&gt;\[
\begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5\\
2 &amp;amp; 5 &amp;amp; 4 &amp;amp; 3 &amp;amp; 1
\end{pmatrix}
\]&lt;/span&gt; 就可以表示为 &lt;span class=&#34;math inline&#34;&gt;\((1, 2, 5)(3, 4)\)&lt;/span&gt;。置换用这些表示一定是一一对应的。&lt;/p&gt;
&lt;h2 id=&#34;轨道与稳定子&#34;&gt;轨道与稳定子&lt;/h2&gt;
&lt;p&gt;群作用：对于一个集合 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 和群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;，若给定一二元函数 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(v, k)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k\in M\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(v\in G\)&lt;/span&gt;，且 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(e, k) &amp;amp;= k\\
\varphi(g, \varphi(s, k)) &amp;amp;= \varphi(g\times s, k)
\end{aligned}
\]&lt;/span&gt; 则称 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用于 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑作用于 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 上的 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x\in X\)&lt;/span&gt; 的轨道是 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 通过 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 能转移到的元素的集合，记作 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt;，方便起见记 &lt;span class=&#34;math inline&#34;&gt;\(g(x) = \varphi(g, x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;稳定子：&lt;span class=&#34;math inline&#34;&gt;\(G^x = \{g\mid g\in G,g(x) = x\}\)&lt;/span&gt;。即为群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 中满足 &lt;span class=&#34;math inline&#34;&gt;\(g(x) = x\)&lt;/span&gt; 的所有元素 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt;的集合。&lt;/p&gt;
&lt;p&gt;轨道-稳定子定理： &lt;span class=&#34;math display&#34;&gt;\[
|G^x|\times |G(x)| = |G|
\]&lt;/span&gt; 可以证明 &lt;span class=&#34;math inline&#34;&gt;\(G^x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 的一个子群，然后根据拉格朗日定理，&lt;span class=&#34;math inline&#34;&gt;\(|G^x|\times[G: G^x] = |G|\)&lt;/span&gt;，故现在需要证明 &lt;span class=&#34;math inline&#34;&gt;\([G:G^x] = |G(x)|\)&lt;/span&gt;。转化为证明存在从 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(G^x\)&lt;/span&gt; 所有左陪集的双射。令 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(g(x)) = gG^x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f\in G^x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = g(x)\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(f\times g^{-1} = x = e(x)\in G^x\)&lt;/span&gt;，由于 &lt;span class=&#34;math inline&#34;&gt;\(f\times G^x = g\times G^x\)&lt;/span&gt;，故相同的 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 可以对应相同的陪集。一一对应关系，得证。&lt;/p&gt;
&lt;h2 id=&#34;burnside-引理&#34;&gt;Burnside 引理&lt;/h2&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 为一置换群，作用于 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;。若 &lt;span class=&#34;math inline&#34;&gt;\(x, y\in X\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用下可以相等即 &lt;span class=&#34;math inline&#34;&gt;\(\exists f\in G,f(x) = y\)&lt;/span&gt;，则定义 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 属于一个等价类，不同的等价类数量为 &lt;span class=&#34;math display&#34;&gt;\[
|X / G| = \frac{1}{|G|}\sum_{g\in G}X^g
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(X^g\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的作用下不动点的数量，即 &lt;span class=&#34;math inline&#34;&gt;\(|\{x\in X \mid g(x) = x\}|\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 在群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用下的等价类总数等于每个 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 作用于 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 的不动点数量的算术平均值。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案等于每个置换的不动点的平均数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;因为每个元素属于且仅属于一个轨道，故 &lt;span class=&#34;math display&#34;&gt;\[
|X / G| = \sum_{x \in X}\frac{1}{[G:G^x]}
\]&lt;/span&gt; 而根据轨道-稳定子定理， &lt;span class=&#34;math display&#34;&gt;\[
[G:G^x] = \frac{|G|}{|G^x|}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
|X / G| = \sum_{x\in X}\frac{|G^x|}{|G|} = \frac{1}{|G|}\sum_{x\in X}|G^x|
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(\sum|G^x| = \sum X^g\)&lt;/span&gt;，得证。&lt;/p&gt;
&lt;h2 id=&#34;polya-定理&#34;&gt;Polya 定理&lt;/h2&gt;
&lt;p&gt;我们从例题 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4980&#34;&gt;P4980 【模板】Pólya 定理&lt;/a&gt;&lt;/strong&gt; 出发：&lt;/p&gt;
&lt;p&gt;我们不妨将本质不同的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 元环看作在置换群 &lt;span class=&#34;math inline&#34;&gt;\(G = \{\text{rotate 0 time(s)}, \text{rotate 1 time(s) }, \cdots, \text{rotate }n - 1\text{ times}\}\)&lt;/span&gt; 的作用下，等价类的数量。&lt;/p&gt;
&lt;p&gt;设集合 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 为所有初始的环构成的集合。&lt;/p&gt;
&lt;p&gt;由 Burnside 引理得到答案为 &lt;span class=&#34;math display&#34;&gt;\[
\frac{1}{|G|}\sum_{g\in G}M^g
\]&lt;/span&gt; 然后依次考虑每个置换对答案的贡献。旋转 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 次的不动点显然为 &lt;span class=&#34;math inline&#34;&gt;\(n^n\)&lt;/span&gt; 个，所有集合都合法。&lt;/p&gt;
&lt;p&gt;然后考虑旋转 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次的不动点数量。不难发现其一定要有长度为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的循环节，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\mid k\)&lt;/span&gt;。而且我们也知道 &lt;span class=&#34;math inline&#34;&gt;\(a\mid n\)&lt;/span&gt;，故循环节的长度为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(k, n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;math display&#34;&gt;\[
\frac{1}{n}\sum_{k = 0}^{n - 1}n^{\gcd(k, n)}
\]&lt;/span&gt; 求这个东西就枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 就行了： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\frac{1}{n}\sum_{k = 0}^{n - 1}n^{\gcd(k, n)}\\
=&amp;amp;\frac{1}{n}\sum_{d\mid n}n^d\sum_{k = 1}^{\lfloor n / d\rfloor} [\gcd(k, \lfloor n / d\rfloor) = 1]\\
=&amp;amp;\frac{1}{n}\sum_{d\mid n}n^d\varphi(\lfloor n / d\rfloor)
\end{aligned}
\]&lt;/span&gt; 做完了。&lt;/p&gt;
&lt;p&gt;定义置换 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的轮换环数为 &lt;span class=&#34;math inline&#34;&gt;\(c(g)\)&lt;/span&gt;，则 Polya 定理就是 &lt;span class=&#34;math display&#34;&gt;\[
\frac{1}{|G|}\sum_{g\in G}m^{c(g)}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为可用的颜色数。&lt;/p&gt;
&lt;h2 id=&#34;例题分析&#34;&gt;例题分析&lt;/h2&gt;
&lt;h3 id=&#34;p1446-hnoi2008cards&#34;&gt;P1446 [HNOI2008]Cards&lt;/h3&gt;
&lt;p&gt;题意：要给 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 张牌染色，&lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 张红，&lt;span class=&#34;math inline&#34;&gt;\(S_g\)&lt;/span&gt; 张绿，&lt;span class=&#34;math inline&#34;&gt;\(S_b\)&lt;/span&gt; 张蓝。同时给定若干种洗牌法，保证为置换群，问本质不同的染色方案数。&lt;/p&gt;
&lt;p&gt;Burnside 引理告诉我们要求出每个置换的不动点个数。我们注意到这里每个置换都可以分解为若干个轮换环，既然是不动点那么每个环内染的颜色必然就相同，我们用一个 &lt;span class=&#34;math inline&#34;&gt;\(f_{r, g,b}\)&lt;/span&gt; 类似背包的 dp 就可以轻松求出不动点个数。&lt;/p&gt;
&lt;p&gt;然而一定要考虑单位置换的影响。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, Sr, Sb, Sg, m, &lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[&lt;span class=&#34;dv&#34;&gt;65&lt;/span&gt;], sz[&lt;span class=&#34;dv&#34;&gt;65&lt;/span&gt;], vis[&lt;span class=&#34;dv&#34;&gt;65&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f[&lt;span class=&#34;dv&#34;&gt;65&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;65&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;65&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint calc() {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, Sr) FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, Sb) FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, Sg) f[i][j][k] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) vis[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p, len; i &amp;lt;= n; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        len = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p = i;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!vis[p]) {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[p] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++len;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p = &lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[p];&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sz[++tot] = len;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot) {&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(nr, Sr, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(nb, Sb, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                DEC(ng, Sg, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (nr &amp;gt;= sz[i]) f[nr][nb][ng] += f[nr - sz[i]][nb][ng];&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (nb &amp;gt;= sz[i]) f[nr][nb][ng] += f[nr][nb - sz[i]][ng];&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ng &amp;gt;= sz[i]) f[nr][nb][ng] += f[nr][nb][ng - sz[i]];&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[Sr][Sb][Sg];&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(Sr), read(Sb), read(Sg), read(m), read(mod);&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = Sr + Sb + Sg;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[j]), tmp &amp;amp;= (&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[j] == j);&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += calc(), flag |= tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flag) {&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[j] = j;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += calc();&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans * qPow(m + (!flag), mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;uva10601-cubes&#34;&gt;UVA10601 Cubes&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 根等长，着色的木棒。问能构成的本质不同的正方体数量。颜色最多有 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 种。正方体 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 本质不同，当 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 不能通过旋转得到 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;分析正方体的所有置换并拆成若干个轮换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;恒等变换：即不动。分解为 &lt;span class=&#34;math inline&#34;&gt;\((1)^{12}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对面中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(90^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(3\times 2 = 6\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((4)^3\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对面中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(180^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(3\times 1 = 3\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((2)^6\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对棱中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(180^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((1)^2(2)^5\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对顶点连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(120^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(4\times 2 = 8\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((3)^4\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一共有 &lt;span class=&#34;math inline&#34;&gt;\(24\)&lt;/span&gt; 种这样的置换。&lt;/p&gt;
&lt;p&gt;找不动点就是给这些环填上一样颜色的方案数。不难发现就是多重组合数，套公式算就行了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll fac[&lt;span class=&#34;dv&#34;&gt;13&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;24&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;120&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;720&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5040&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;40320&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;362880&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3628800&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;39916800&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;479001600&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; buc[&lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sz) {&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll res = fac[sz / x];&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!(buc[i] % x)) res /= fac[buc[i] / x];&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) buc[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp; read(tmp);&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++buc[tmp];&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll ans = calc(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt; * calc(&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * calc(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt; * calc(&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!buc[i]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --buc[i];&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!buc[j]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                --buc[j];&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt; * calc(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++buc[j];&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++buc[i];&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans / &lt;span class=&#34;dv&#34;&gt;24&lt;/span&gt;, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;p2561-ahoi2002黑白瓷砖&#34;&gt;P2561 [AHOI2002]黑白瓷砖&lt;/h3&gt;
&lt;p&gt;题意：见题面。&lt;del&gt;虽然你在 OEIS 上搜一下样例也是可以做出来的但没必要&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;所有的置换一共有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单位置换；&lt;/li&gt;
&lt;li&gt;旋转 &lt;span class=&#34;math inline&#34;&gt;\(120^\circ\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(240^\circ\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;翻转一次；&lt;/li&gt;
&lt;li&gt;旋转 &lt;span class=&#34;math inline&#34;&gt;\(120/240^\circ\)&lt;/span&gt; 并翻转一次。但是这相当于就是绕不同的对称轴翻转。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;共 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 种。&lt;/p&gt;
&lt;p&gt;考虑对于一个特定的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，寻找每个置换不动点的个数，分类讨论有点心烦。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单位置换：&lt;span class=&#34;math inline&#34;&gt;\((1)^{n(n + 1) / 2}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;旋转 &lt;span class=&#34;math inline&#34;&gt;\(120/240^\circ\)&lt;/span&gt;：这两个很对称就只考虑一个，不难发现当 &lt;span class=&#34;math inline&#34;&gt;\(n(n + 1) / 2\equiv 1\pmod 3\)&lt;/span&gt; 时，有一个中心，否则一定能形成若干个长度为 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 的轮换。而 &lt;span class=&#34;math inline&#34;&gt;\(n(n + 1)/2\equiv 1\iff n\equiv 1\pmod 3\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;翻转：中轴上有 &lt;span class=&#34;math inline&#34;&gt;\(\lceil n / 2\rceil\)&lt;/span&gt; 个不动的，剩余形成若干个长度为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的轮换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后，令 &lt;span class=&#34;math inline&#34;&gt;\(N = n(n + 1) / 2\)&lt;/span&gt;，我们就可以得到答案： &lt;span class=&#34;math display&#34;&gt;\[
\frac{1}{6}\left(2^N + 2\times 2^{\lceil N / 3\rceil} + 3\times 2^{\frac{N - \lceil n / 2\rceil}{2} + \lceil n / 2 \rceil}\right)
\]&lt;/span&gt; 要写高精度，比较烦。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;BigInt pow2[&lt;span class=&#34;dv&#34;&gt;450&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pow2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;420&lt;/span&gt;) pow2[i] = pow2[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N = n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; (pow2[N] + pow2[(N + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; + pow2[(N - (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; + (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;p4727-hnoi2009图的同构计数&#34;&gt;P4727 [HNOI2009]图的同构计数&lt;/h3&gt;
&lt;h3 id=&#34;p4916-mtoi2018魔力环&#34;&gt;P4916 [MtOI2018]魔力环&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>类欧几里得算法学习笔记</title>
        <link>https://oi.imyangty.com/note-akin-euclidean-algo/</link>
        <pubDate>Sat, 04 Sep 2021 15:38:25 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-akin-euclidean-algo/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg6.webp" alt="Featured image of post 类欧几里得算法学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;洪华敦（SkyDec）于 WC2016 员交提出。&lt;/p&gt;
&lt;p&gt;递归过程类似于辗转相除，故称为”类“欧几里得。&lt;/p&gt;
&lt;p&gt;一般可以求直线下整点之类的问题。&lt;/p&gt;
&lt;h2 id=&#34;引入&#34;&gt;引入&lt;/h2&gt;
&lt;p&gt;最常见的形式，即为直线下整点个数： &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c} \right\rfloor
\]&lt;/span&gt; 需要复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 的算法。&lt;/p&gt;
&lt;h2 id=&#34;推导&#34;&gt;推导&lt;/h2&gt;
&lt;h3 id=&#34;part.-1&#34;&gt;Part. 1&lt;/h3&gt;
&lt;p&gt;首先，如果 &lt;span class=&#34;math inline&#34;&gt;\(a\ge c\lor b \ge c\)&lt;/span&gt;，则可以将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 取模来化简问题： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(a, b, c, n) &amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c}\right\rfloor\\
&amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{(\left\lfloor\frac a c\right\rfloor c + a\bmod c)i + \left\lfloor\frac b c\right\rfloor c + b\bmod c}{c}\right\rfloor\\
&amp;amp;= \frac{n(n + 1)}{2}\left\lfloor\frac ac\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor + f(a\bmod c, b\bmod c, c, n)
\end{aligned}
\]&lt;/span&gt; 于是问题就转化为了 &lt;span class=&#34;math inline&#34;&gt;\(a, b&amp;lt; c\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;h3 id=&#34;part.-2&#34;&gt;Part. 2&lt;/h3&gt;
&lt;p&gt;这个和式看上去不是特别好化简的样子。那么就先拆分一下贡献：&lt;/p&gt;
&lt;p&gt;首先考虑把那一坨东西拆成如下形式： &lt;span class=&#34;math display&#34;&gt;\[
\left\lfloor\frac{ai + b}{c} \right\rfloor = \sum_{j = 0}^{\left\lfloor\frac{ai + b}{c} \right\rfloor - 1}1
\]&lt;/span&gt; 减一是因为计数变量从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 开始。&lt;/p&gt;
&lt;p&gt;然后 &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = \sum_{i = 0}^n\sum_{j = 0}^{\left\lfloor\frac{ai + b}{c} \right\rfloor - 1}1
\]&lt;/span&gt; 调换求和顺序，使得 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 不再被 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 限制， &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = \sum_{j = 0}^{\left\lfloor\frac{an + b}{c} \right\rfloor}\sum_{i = 0}^n\left[j &amp;lt; \left\lfloor\frac{ai + b}{c} \right\rfloor\right]
\]&lt;/span&gt; 把不等式进行化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;j &amp;lt; \left\lfloor\frac{ai + b}{c} \right\rfloor\\
\iff &amp;amp; j + 1\le\left\lfloor\frac{ai + b}{c} \right\rfloor\\
\iff &amp;amp; j + 1\le \frac{ai + b}{c}\\
\iff &amp;amp; j c + c\le ai + b\\
\iff &amp;amp; jc + c - b\le ai\\
\iff &amp;amp; jc + c - b - 1 &amp;lt; ai\\
\iff &amp;amp; \left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor &amp;lt; i
\end{aligned}
\]&lt;/span&gt; 这一步的关键在于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 可以被消掉了。因为我们注意到 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 0}^n\left[\left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor &amp;lt; i\right]
\]&lt;/span&gt; 的意义为：只有大于等于那一坨式子的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 能产生贡献，即这一坨的结果实际上就是： &lt;span class=&#34;math display&#34;&gt;\[
n - \left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor
\]&lt;/span&gt; 所以，为了方便令 &lt;span class=&#34;math display&#34;&gt;\[
m = \left\lfloor\frac{an + b}{c}\right\rfloor
\]&lt;/span&gt; 则有 &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = \sum_{j = 0}^{m - 1}\left(n - \left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor\right)
\]&lt;/span&gt; 拆开来就是 &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = nm - \sum_{j = 0}^{m - 1}\left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor
\]&lt;/span&gt; 右边这个形式不就是一个子问题吗，所以 &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = nm - f(c, c - b - 1, a, m - 1)
\]&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b / c * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a &amp;gt;= c || b &amp;gt;= c) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (a / c) + (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (b / c) + f(a % c, b % c, c, n);&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = (a * n + b) / c;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * m - f(c, c - b - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大概是上面的形式，边界是 &lt;span class=&#34;math inline&#34;&gt;\(a = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;g-和-h-函数的求法&#34;&gt;&lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 函数的求法&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(a, b, c, n) &amp;amp;= \sum_{i = 0}^ni\left\lfloor\frac{ai + b}{c}\right\rfloor\\
h(a, b, c, n) &amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c}\right\rfloor^2\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;g-函数&#34;&gt;&lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 函数&lt;/h3&gt;
&lt;p&gt;首先，&lt;span class=&#34;math inline&#34;&gt;\(a\le c\lor b\le c\)&lt;/span&gt; 的情况依旧是可以取模化简的： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(a, b, c, n) &amp;amp;= \sum_{i = 0}^ni\left\lfloor\frac{(\left\lfloor\frac a c\right\rfloor c + a\bmod c)i + \left\lfloor\frac b c\right\rfloor c + b\bmod c}{c}\right\rfloor\\
&amp;amp;= \sum_{i = 0}^ni^2\left\lfloor\frac ac\right\rfloor + \sum_{i = 0}^ni\left\lfloor\frac bc\right\rfloor + g(a\bmod c, b\bmod c, c, n)\\
&amp;amp;= \left\lfloor\frac ac\right\rfloor\frac{n(n + 1)(2n + 1)}{6} + \left\lfloor\frac bc\right\rfloor\frac{n(n + 1)}{2} + g(a\bmod c, b\bmod c, c, n)
\end{aligned}
\]&lt;/span&gt; 取模化简的部分写完之后，来看看 &lt;span class=&#34;math inline&#34;&gt;\(a, b&amp;lt; c\)&lt;/span&gt; 的情况。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的意义与上文相同，像上文那样化简。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(a, b, c, n) &amp;amp;= \sum_{i = 0}^ni\sum_{j = 0}^{\left\lfloor\frac{ai + b}{c}\right\rfloor - 1}1\\
&amp;amp;= \sum_{j = 0}^{m - 1}\sum_{i = 0}^ni\left[j &amp;lt; \left\lfloor\frac{ai + b}{c}\right\rfloor\right]
\end{aligned}
\]&lt;/span&gt; 令 &lt;span class=&#34;math inline&#34;&gt;\(t = \displaystyle\left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(a, b, c, n) &amp;amp;= \sum_{j = 0}^{m - 1}\sum_{i = 0}^n[i &amp;gt; t]i\\
&amp;amp;= \sum_{j = 0}^{m - 1}\frac{(t + n + 1)(n - t)}{2}\\
&amp;amp;= \frac 12\sum_{j = 0}^{m - 1}\left(-t^2 + (n + 1)n - (n + 1)t  + nt\right)\\
&amp;amp;= \frac 12\left(mn(n + 1) - h(c, c - b - 1, a, m - 1) - f(c, c - b - 1, a, m - 1) \right)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;h-函数&#34;&gt;&lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 函数&lt;/h3&gt;
&lt;p&gt;取模化简真心很烦，过程就是憨算，不放了。但建议第一次学的时候自己化一遍。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
h(a, b, c, n) &amp;amp;=\left\lfloor\frac ac\right\rfloor^2\frac{n(n + 1)(2n + 1)}{6} + n(n + 1)\left\lfloor\frac ac\right\rfloor\left\lfloor\frac bc\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor^2 + \\&amp;amp;+2\left\lfloor\frac ac\right\rfloor g(a\bmod c, b\bmod c, c, n) + 2\left\lfloor\frac bc\right\rfloor f(a\bmod c, b\bmod c, c, n) \\
&amp;amp;+ h(a\bmod c, b\bmod c, c, n)
\end{aligned}
\]&lt;/span&gt; 然后是 &lt;span class=&#34;math inline&#34;&gt;\(a, b&amp;lt; c\)&lt;/span&gt; 的情况。但是如果我们直接套上面的形式的话，会发现很难搞，因为会出现 &lt;span class=&#34;math inline&#34;&gt;\(\sum\times\sum\)&lt;/span&gt; 这种不好化简的东西。所以考虑把平方拆开，注意到： &lt;span class=&#34;math display&#34;&gt;\[
n^2 = 2\frac{n(n + 1)}{2} - n = 2\sum_{i = 1}^ni - n
\]&lt;/span&gt; 依据这个引理进行化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
h(a, b, c, n) &amp;amp;= \sum_{i = 0}^n\left(2\sum_{j = 1}^{\left\lfloor\frac{ai + b}{c}\right\rfloor}j - \left\lfloor\frac{ai + b}{c}\right\rfloor\right)\\
&amp;amp;= 2\sum_{i = 0}^n\sum_{j = 0}^{\left\lfloor\frac{ai + b}{c}\right\rfloor - 1}(j + 1) - f(a, b, c, n)
\end{aligned}
\]&lt;/span&gt; 现在考虑 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 0}^n\sum_{j = 0}^{\left\lfloor\frac{ai + b}{c}\right\rfloor - 1}(j + 1)
\]&lt;/span&gt; 的计算。&lt;/p&gt;
&lt;p&gt;继续调换求和顺序： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 0}^n\sum_{j = 0}^{\left\lfloor\frac{ai + b}{c}\right\rfloor}(j + 1)\\
=&amp;amp;\sum_{j = 0}^{m - 1}(j + 1)\sum_{i = 0}^n[i &amp;gt; t]\\
=&amp;amp;\sum_{j = 0}^{m - 1}(j + 1)(n - t)\\
=&amp;amp;\sum_{j = 0}^{m - 1}(jn - t + n -jt)\\
=&amp;amp;\frac{1}{2}nm(m + 1) - \sum_{j = 0}^{m - 1}(j + 1)t\\
=&amp;amp;\frac12nm(m + 1)-g(c, c - b - 1, a, m - 1) - f(c, c - b - 1, a, m - 1)
\end{aligned}
\]&lt;/span&gt; 因此， &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
h(a, b, c, n) &amp;amp;= nm(m + 1) - 2g(c, c - b - 1, a, m - 1)\\
&amp;amp;- 2f(c, c - b - 1, m - 1) - f(a, b, c, n)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;实现-1&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 都要互相使用下一层递归的东西，所以考虑把三个函数绑在一起递归实现。&lt;/p&gt;
&lt;p&gt;只能说很难不抄错式子。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5170&#34;&gt;洛谷模板&lt;/a&gt;代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], *__p1 = ibuf, *__p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++;}&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T &amp;amp;n) {&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; obuf[maxc], *__pO = obuf;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; putchar(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {*__pO++ = c;}&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(T x) {&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), print(-x);&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; output() {fwrite(obuf, __pO - obuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, stdout);}&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;, inv2 = &lt;span class=&#34;dv&#34;&gt;499122177&lt;/span&gt;, inv6 = &lt;span class=&#34;dv&#34;&gt;166374059&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; query {&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll f, g, h;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll S1(ll n) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; % mod;}&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll S2(ll n) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * (&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * inv6 % mod;}&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;query calc(ll a, ll b, ll c, ll n) {&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    query ret;&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll s1, s2, ac, bc;&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll m;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ac = a / c, bc = b / c, s1 = S1(n), s2 = S2(n), m = (a * n + b) / c;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.f = bc * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.g = bc * s1 % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.h = bc * bc % mod * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a &amp;gt;= c || b &amp;gt;= c) {&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; pre = calc(a % c, b % c, c, n);&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.f = (s1 * ac % mod + (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * bc % mod + pre.f) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.g = (ac * s2 % mod + bc * s1 % mod + pre.g) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.h = (ac * ac % mod * s2 + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * s1 * ac % mod * bc % mod + (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * bc % mod * bc % mod + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * ac * pre.g % mod + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * bc * pre.f % mod + pre.h) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; pre = calc(c, c - b - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.f = (n * m % mod + mod - pre.f) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.g = (m * n % mod * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod + mod - pre.h + mod - pre.f) % mod * inv2 % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.h = (n * m % mod * (m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod + mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pre.g % mod + mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pre.f % mod + mod - ret.f) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, b, c, n; read(n), read(a), read(b), read(c);&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        query ans = calc(a, b, c, n);&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans.f), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), print(ans.h), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), print(ans.g), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-75&#34;&gt;&lt;a href=&#34;#cb2-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-76&#34;&gt;&lt;a href=&#34;#cb2-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;h3 id=&#34;p5171-earthquake&#34;&gt;P5171 Earthquake&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5171&#34;&gt;题面&lt;/a&gt;：求 &lt;span class=&#34;math display&#34;&gt;\[
ax + by\le c
\]&lt;/span&gt; 的非负整数解个数。&lt;span class=&#34;math inline&#34;&gt;\(1\le a, b\le10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le c\le 10^{18}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;转换一下就是： &lt;span class=&#34;math display&#34;&gt;\[
y\le \frac{-ax + c}{b}
\]&lt;/span&gt; 即为直线下整点个数。对于一个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 来说易得答案为 &lt;span class=&#34;math display&#34;&gt;\[
\left\lfloor\frac{-ax + c}{b}\right\rfloor + 1
\]&lt;/span&gt; 加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 是因为有 &lt;span class=&#34;math inline&#34;&gt;\(y = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以答案为 &lt;span class=&#34;math display&#34;&gt;\[
\left\lfloor\frac ac\right\rfloor + 1 + \sum_{x = 0}^{\lfloor\frac ac\rfloor}\left\lfloor\frac{-ax + c}{b}\right\rfloor
\]&lt;/span&gt; 但是那个 &lt;span class=&#34;math inline&#34;&gt;\(-a\)&lt;/span&gt; 就很迷惑，假设 &lt;span class=&#34;math inline&#34;&gt;\(b\ge a\)&lt;/span&gt;（如果 &lt;span class=&#34;math inline&#34;&gt;\(b &amp;lt; a\)&lt;/span&gt; 可以 &lt;code&gt;swap(a, b)&lt;/code&gt;），然后给 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的系数加上 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{x = 0}^{\lfloor\frac ca\rfloor}\left\lfloor\frac{-ax + c}{b}\right\rfloor&amp;amp;= \sum_{x = 0}^{\lfloor\frac ca\rfloor}\left\lfloor\frac{(b - a)x + c}{b} - x\right\rfloor\\
&amp;amp;= \sum_{x = 0}^{\lfloor\frac ca\rfloor}\left\lfloor\frac{(b - a)x + c}{b}\right\rfloor - \frac12\left\lfloor\frac ca\right\rfloor\left(\left\lfloor\frac ca\right\rfloor + 1\right)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>图的连通性相关</title>
        <link>https://oi.imyangty.com/note-connectivity/</link>
        <pubDate>Wed, 01 Sep 2021 23:32:13 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-connectivity/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg11.webp" alt="Featured image of post 图的连通性相关" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;一直对这方面不是很理解，开个坑记录一下。&lt;/p&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;
&lt;p&gt;对于有向图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强连通：对于一张有向图，若每个点互相可达，则称为强连通。&lt;/li&gt;
&lt;li&gt;强连通分量：极大的强连通子图。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于无向图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点割集：若删掉该集合的点后图不连通，则称为点割集。&lt;strong&gt;大小为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的点割集就是割点&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;点联通度：若 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\le |V|\)&lt;/span&gt; 且不存在大小为 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 的点割集，则称该图 &lt;span class=&#34;math inline&#34;&gt;\(k-\)&lt;/span&gt; 点联通。最大的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，即最小点割集合的大小。&lt;/li&gt;
&lt;li&gt;边割集/边联通度：类似。&lt;/li&gt;
&lt;li&gt;点双连通：没有割点的连通图是点双连通的。&lt;/li&gt;
&lt;li&gt;边双连通：没有桥的连通图是边双连通的。&lt;/li&gt;
&lt;li&gt;点双连通分量：极大的点双连通子图（简称点双）。&lt;/li&gt;
&lt;li&gt;边双连通分量：极大的边双连通子图（简称边双）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;强连通分量scc&#34;&gt;强连通分量（SCC）&lt;/h2&gt;
&lt;p&gt;使用 tarjan 算法做到 &lt;span class=&#34;math inline&#34;&gt;\(O(n + m)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;dfs-生成树&#34;&gt;dfs 生成树&lt;/h3&gt;
&lt;p&gt;tarjan 算法是基于 dfs 的。考虑在原图上生成一棵 dfs 生成树。&lt;/p&gt;
&lt;p&gt;那么原图的边可以分为如下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树边：就是在 dfs 生成树的边，当一个点搜素找到一个没有访问的点时生成。&lt;/li&gt;
&lt;li&gt;返祖边：指向祖先节点的边。&lt;/li&gt;
&lt;li&gt;横叉边：搜索时遇到的&lt;strong&gt;访问过的但是不是自己祖先&lt;/strong&gt;的点。&lt;/li&gt;
&lt;li&gt;前向边：搜索时遇到子树节点时的边。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有如下引理：假设 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 是某个 SCC 在 dfs 生成树中第一个遇到的点，则 SCC 剩余的点肯定在子树内，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 称为 SCC 的根。证明可用反证法，不再展开。&lt;/p&gt;
&lt;h3 id=&#34;tarjan-算法&#34;&gt;Tarjan 算法&lt;/h3&gt;
&lt;p&gt;构造 dfs 生成树的同时维护一个栈，表示访问过的还未加入 SCC 的点。&lt;/p&gt;
&lt;p&gt;对于每个节点维护 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dfn}(u)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{low}(u)\)&lt;/span&gt;。含义分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dfn}(u)\)&lt;/span&gt; 时间戳。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{low}(u)\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 或其子树内节点能回溯到的&lt;strong&gt;最早的还在栈中的节点的 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dfn}\)&lt;/span&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据以下定义，有&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;low[u] = min {
    dfn[u],
    low[v], (u, v) 为树边，v 为 u 儿子
    dfn[v], (u, v) 为指向栈中节点的非横叉边
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;发现一个 SCC 中只存在一个 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dfn}(u) = \operatorname{low}(u)\)&lt;/span&gt;，回溯的过程中判定，栈中 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 往后的节点构成 SCC。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfn[maxn], low[maxn], ins[maxn], stk[maxn], top;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfnClock, scc[maxn], sccCnt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; tarjan(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfn[u] = low[u] = ++dfnClock;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    stk[++top] = u, ins[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u, head) {&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!e[i].w) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!dfn[v])&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            tarjan(v), low[u] = min(low[u], low[v]);&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ins[v])&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            low[u] = min(low[u], dfn[v]);&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (low[u] == dfn[u]) {&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++sccCnt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = stk[top--];&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ins[now] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            scc[now] = sccCnt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now == u) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用&#34;&gt;应用&lt;/h3&gt;
&lt;p&gt;可以将一些互相可达的点缩在一起，一张图缩完后会变成一张 DAG，方便进行 dp。&lt;/p&gt;
&lt;h2 id=&#34;双连通分量bcc&#34;&gt;双连通分量（BCC）&lt;/h2&gt;
&lt;p&gt;对于无向图而言的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点双连通&lt;strong&gt;不具有&lt;/strong&gt;传递性，即 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 点双连通、&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 点双连通并不能推出 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 点双连通（考虑 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 为割点的情况）&lt;/li&gt;
&lt;li&gt;相反地，边双连通&lt;strong&gt;具有&lt;/strong&gt;传递性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;边双连通分量e-bcc&#34;&gt;边双连通分量（e-BCC）&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dfn}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{low}\)&lt;/span&gt; 的定义与上面的类似。&lt;/p&gt;
&lt;p&gt;则对于 dfs 树上的一条边 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt;，其会是割边当且仅当 &lt;span class=&#34;math display&#34;&gt;\[
\operatorname{dfn}(u) &amp;lt; \operatorname{low}(v)
\]&lt;/span&gt; 意义为，从子树 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 出发， 在不经过 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 的前提下无法走到比 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 更早访问的节点。这条边 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 显然就应该是桥。&lt;/p&gt;
&lt;p&gt;缩点也不说了，好缩的。割边会缩成若干个 e-BCC，&lt;strong&gt;最后的结果是一棵树/森林&lt;/strong&gt;（因为不能有环），&lt;strong&gt;一个点仅会属于一个 e-BCC，桥不属于任何 e-BCC&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; tarjan(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; last) {&lt;span class=&#34;co&#34;&gt;//last 为上一条边的编号，判父亲用&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfn[u] = low[u] = ++dfnClock;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = to[i];&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!dfn[v]) {&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            tarjan(v, i);&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (low[v] &amp;gt; dfn[u])&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                bridge[i] = bridge[i ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//这里是标记桥&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            low[u] = min(low[u], low[v]);&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i != (last ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;co&#34;&gt;//注意判一下是不是 dfs 树上的父亲&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            low[u] = min(low[u], dfn[v]);&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;经典题：问最多添加多少条边可以使得图边双连通。答案为缩完点之后的叶子个数除以二向上取整。构造的话考虑每次连两个叶子起来就可以形成一个环，环上的都会被消掉。&lt;/p&gt;
&lt;h3 id=&#34;点双连通分量v-bcc&#34;&gt;点双连通分量（v-BCC）&lt;/h3&gt;
&lt;p&gt;定义依旧类似。判断一个点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 是否为割点的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为 dfs 树的根节点，则其只要有多于一个子树，其就是割点。（考虑去掉根之后两个子树不连通）&lt;/li&gt;
&lt;li&gt;否则，考虑 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的子节点，则 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为割点当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dfn}(u)\le \operatorname{low}(v)\)&lt;/span&gt;。即，&lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 子树内的点只能最多回到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，不能再往上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求割点的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; tarjan(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfn[u] = low[u] = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!dfn[v]) {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            tarjan(v);&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            low[u] = min(low[u], low[v]);&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (low[v] &amp;gt;= dfn[u] &amp;amp;&amp;amp; u != root) {&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += (!cut[u]);&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cut[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            child += (u == root);&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        low[u] = min(low[u], dfn[v]);&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u == root &amp;amp;&amp;amp; child &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans++, cut[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;缩点甚么的直接去看后面圆方树吧。&lt;/p&gt;
&lt;h2 id=&#34;sat&#34;&gt;2-SAT&lt;/h2&gt;
&lt;p&gt;咕。&lt;/p&gt;
&lt;h2 id=&#34;圆方树&#34;&gt;圆方树&lt;/h2&gt;
&lt;p&gt;毒瘤数据结构。&lt;/p&gt;
&lt;h3 id=&#34;引入&#34;&gt;引入&lt;/h3&gt;
&lt;p&gt;直接讲广义圆方树吧。&lt;/p&gt;
&lt;p&gt;定义：&lt;strong&gt;任意一条边至多只出现在一条简单回路的无向连通图称为仙人掌&lt;/strong&gt;。什么意思？就是一条边只能出现在至多一个环里面。这样的图长得就很像仙人掌，所以就叫做仙人掌。&lt;/p&gt;
&lt;p&gt;最初的狭义圆方树一般拿来处理仙人掌上的问题，但是广义圆方树还可以处理无向图上的问题。其可以将一些一般无向图上不好做的事情转化到树上，然后就可以使用树剖/LCT/点分之类的方法去维护。&lt;/p&gt;
&lt;p&gt;我们定义不存在割点的图为点双连通图。在圆方树上，每个点双连通分量（以后简称点双）对应一个方点，原来的每个点对应圆方树上一个圆点。就像这样（图源 WC 课件）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/blockforest.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下面是圆方树的一些性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设点双有 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 个，则圆方树有 &lt;span class=&#34;math inline&#34;&gt;\(n + c\)&lt;/span&gt; 个点。所以&lt;strong&gt;要开二倍空间&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;一个条边连接了一个方点和一个圆点。&lt;/li&gt;
&lt;li&gt;若原图不连通，则会形成若干圆方森林。&lt;/li&gt;
&lt;li&gt;原图中不是割点的点都是叶子，一个割点会连接若干个方点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;构建&#34;&gt;构建&lt;/h3&gt;
&lt;p&gt;这里的构建用的 tarjan 算法和一般的求 v-BCC 的不太一样。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dfn}(u)\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的 dfs 序，和普通 tarjan 相同。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{low}(u)\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的子树中的某个节点通过&lt;strong&gt;至多一次返祖边&lt;/strong&gt;或&lt;strong&gt;向父亲的树边&lt;/strong&gt;能访问到的点的最小 dfs 序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;像下面这张图（图源小粉兔的&lt;a href=&#34;https://www.cnblogs.com/PinkRabbit/p/Introduction-to-Block-Forest.html&#34;&gt;博客&lt;/a&gt;）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/blockforest2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;注意 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{low}\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt;，因为规定了向父亲的树边也可以。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt;，发现如果 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{low}(v) = \operatorname{dfn}(u)\)&lt;/span&gt;，则说明 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 子树内的点构成一个点双，将栈内除了 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的点退栈，顺便与新建的方点连边。当然 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 也要与方点连边，但是不退栈。&lt;/p&gt;
&lt;p&gt;下面放一个构建圆方树的代码。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; tarjan(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfn[u] = low[u] = ++dfnClock;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    stk[++top] = u;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head0[u]; i; i = e0[i].nxt) {&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v = e0[i].to;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!dfn[v]) {=&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            tarjan(v, u);&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            low[u] = min(low[u], low[v]);&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (low[v] == dfn[u]) {&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++fang;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = stk[top--];&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    add(fang, x), add(x, fang);&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == v) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                add(fang, u), add(u, fang);&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; low[u] = min(low[u], dfn[v]);&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用-1&#34;&gt;应用&lt;/h3&gt;
&lt;h4 id=&#34;p5236-模板静态仙人掌&#34;&gt;P5236 【模板】静态仙人掌&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5236&#34;&gt;传送门&lt;/a&gt;。大意：给定一棵仙人掌，多次询问两点间最短路。&lt;/p&gt;
&lt;p&gt;多次询问最短路不是很好搞，但是仙人掌一条边最多在一个环上的性质启迪我们可以把环缩起来处理。这样子我们就可以求树上最短路了。&lt;/p&gt;
&lt;p&gt;如何建立？我们考虑建出圆方树，然后给每条边定权值，这样子就可以在树上求最短路了，求 LCA 即可，可是，怎么给圆方树的边定权？&lt;/p&gt;
&lt;p&gt;我们令一个环上 dfn 最小的点为这个环的根，则这个环的方点到这些环上的圆点的边权即为该点到根的最短路。对于只有两个节点的情况，类似。但是我们需要求出环长，由于仙人掌的特性，一个点双只有一条返祖边，所以我们把栈顶的点找到就可以算了。&lt;/p&gt;
&lt;p&gt;然后算最短路的时候，如果两点的 LCA 是圆点，就直接无脑算就行了，但是如果是方点则需要特判一下， 看这两个点在环上的最短路是多少。&lt;/p&gt;
&lt;p&gt;具体细节看代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxm = &lt;span class=&#34;fl&#34;&gt;4e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge {&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to, nxt, w;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e0[maxm], e[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head0[maxn], head[maxn], cnte0, cnte;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, fang, q;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add0(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; w) {&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e0[++cnte0].to = v;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e0[cnte0].w = w;&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e0[cnte0].nxt = head0[u];&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head0[u] = cnte0;&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; w) {&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[++cnte].to = v;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnte].w = w;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnte].nxt = head[u];&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfn[maxn], low[maxn], dfnClock, stk[maxn], top;&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dis0[maxn], val[maxn], r[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; tarjan(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfn[u] = low[u] = ++dfnClock;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    stk[++top] = u;&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head0[u]; i; i = e0[i].nxt) {&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v = e0[i].to;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!dfn[v]) {&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val[v] = e0[i].w;&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dis0[v] = dis0[u] + e0[i].w;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            tarjan(v, u);&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            low[u] = min(low[u], low[v]);&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (low[v] == dfn[u]) {&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++fang;&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                r[fang] = val[stk[top]] + dis0[stk[top]] - dis0[u];&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = stk[top--], tmp = dis0[x] - dis0[u];&lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    tmp = min(tmp, r[fang] - tmp);&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    add(fang, x, tmp), add(x, fang, tmp);&lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == v) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                add(fang, u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), add(u, fang, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            low[u] = min(low[u], dfn[v]);&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa &amp;amp;&amp;amp; dfn[v] &amp;lt; dfn[u]) val[u] = e0[i].w;&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-55&#34;&gt;&lt;a href=&#34;#cb6-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-56&#34;&gt;&lt;a href=&#34;#cb6-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-57&#34;&gt;&lt;a href=&#34;#cb6-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-58&#34;&gt;&lt;a href=&#34;#cb6-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dis[maxn], fa[maxn][&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;], dep[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-59&#34;&gt;&lt;a href=&#34;#cb6-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-60&#34;&gt;&lt;a href=&#34;#cb6-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre) {&lt;/span&gt;
&lt;span id=&#34;cb6-61&#34;&gt;&lt;a href=&#34;#cb6-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fa[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = pre;&lt;/span&gt;
&lt;span id=&#34;cb6-62&#34;&gt;&lt;a href=&#34;#cb6-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; fa[fa[u][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]; ++i) fa[u][i] = fa[fa[u][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb6-63&#34;&gt;&lt;a href=&#34;#cb6-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb6-64&#34;&gt;&lt;a href=&#34;#cb6-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt) {&lt;/span&gt;
&lt;span id=&#34;cb6-65&#34;&gt;&lt;a href=&#34;#cb6-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb6-66&#34;&gt;&lt;a href=&#34;#cb6-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == pre) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-67&#34;&gt;&lt;a href=&#34;#cb6-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = dis[u] + e[i].w;&lt;/span&gt;
&lt;span id=&#34;cb6-68&#34;&gt;&lt;a href=&#34;#cb6-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dep[v] = dep[u] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-69&#34;&gt;&lt;a href=&#34;#cb6-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb6-70&#34;&gt;&lt;a href=&#34;#cb6-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-71&#34;&gt;&lt;a href=&#34;#cb6-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-72&#34;&gt;&lt;a href=&#34;#cb6-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-73&#34;&gt;&lt;a href=&#34;#cb6-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-74&#34;&gt;&lt;a href=&#34;#cb6-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-75&#34;&gt;&lt;a href=&#34;#cb6-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-76&#34;&gt;&lt;a href=&#34;#cb6-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pii LCA(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb6-77&#34;&gt;&lt;a href=&#34;#cb6-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dep[u] &amp;lt; dep[v]) &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(u, v);&lt;/span&gt;
&lt;span id=&#34;cb6-78&#34;&gt;&lt;a href=&#34;#cb6-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; delta = dep[u] - dep[v], i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; delta; delta &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++i)&lt;/span&gt;
&lt;span id=&#34;cb6-79&#34;&gt;&lt;a href=&#34;#cb6-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (delta &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) u = fa[u][i];&lt;/span&gt;
&lt;span id=&#34;cb6-80&#34;&gt;&lt;a href=&#34;#cb6-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u == v) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pii(u, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-81&#34;&gt;&lt;a href=&#34;#cb6-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-82&#34;&gt;&lt;a href=&#34;#cb6-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa[u][i] != fa[v][i]) u = fa[u][i], v = fa[v][i];&lt;/span&gt;
&lt;span id=&#34;cb6-83&#34;&gt;&lt;a href=&#34;#cb6-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] &amp;lt;= n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pii(fa[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-84&#34;&gt;&lt;a href=&#34;#cb6-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pii(u, v);&lt;/span&gt;
&lt;span id=&#34;cb6-85&#34;&gt;&lt;a href=&#34;#cb6-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-86&#34;&gt;&lt;a href=&#34;#cb6-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-87&#34;&gt;&lt;a href=&#34;#cb6-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-88&#34;&gt;&lt;a href=&#34;#cb6-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m), read(q);&lt;/span&gt;
&lt;span id=&#34;cb6-89&#34;&gt;&lt;a href=&#34;#cb6-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb6-90&#34;&gt;&lt;a href=&#34;#cb6-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v, w;&lt;/span&gt;
&lt;span id=&#34;cb6-91&#34;&gt;&lt;a href=&#34;#cb6-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(u), read(v), read(w);&lt;/span&gt;
&lt;span id=&#34;cb6-92&#34;&gt;&lt;a href=&#34;#cb6-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add0(u, v, w), add0(v, u, w);&lt;/span&gt;
&lt;span id=&#34;cb6-93&#34;&gt;&lt;a href=&#34;#cb6-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-94&#34;&gt;&lt;a href=&#34;#cb6-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fang = n, tarjan(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-95&#34;&gt;&lt;a href=&#34;#cb6-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-96&#34;&gt;&lt;a href=&#34;#cb6-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--) {&lt;/span&gt;
&lt;span id=&#34;cb6-97&#34;&gt;&lt;a href=&#34;#cb6-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u), read(v);&lt;/span&gt;
&lt;span id=&#34;cb6-98&#34;&gt;&lt;a href=&#34;#cb6-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; p = LCA(u, v);&lt;/span&gt;
&lt;span id=&#34;cb6-99&#34;&gt;&lt;a href=&#34;#cb6-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~p.second)  {&lt;/span&gt;
&lt;span id=&#34;cb6-100&#34;&gt;&lt;a href=&#34;#cb6-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = myabs(dis0[p.first] - dis0[p.second]);&lt;/span&gt;
&lt;span id=&#34;cb6-101&#34;&gt;&lt;a href=&#34;#cb6-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            tmp = min(tmp, r[fa[p.first][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]] - tmp);&lt;/span&gt;
&lt;span id=&#34;cb6-102&#34;&gt;&lt;a href=&#34;#cb6-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(dis[u] + dis[v] - dis[p.first] - dis[p.second] + tmp, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-103&#34;&gt;&lt;a href=&#34;#cb6-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(dis[u] + dis[v] - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * dis[p.first], &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-104&#34;&gt;&lt;a href=&#34;#cb6-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-105&#34;&gt;&lt;a href=&#34;#cb6-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-106&#34;&gt;&lt;a href=&#34;#cb6-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;p5058-zjoi2004嗅探器&#34;&gt;P5058 [ZJOI2004]嗅探器&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5058&#34;&gt;传送门&lt;/a&gt;。建出圆方树，找两个点中间的圆点即可，其一定是割点。&lt;/p&gt;
&lt;h4 id=&#34;p4320-道路相遇&#34;&gt;P4320 道路相遇&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4320&#34;&gt;传送门&lt;/a&gt;。这个相当于就是求圆方树两点间圆点的个数，树剖维护一下就可以了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>21秋ZR联赛模拟略解</title>
        <link>https://oi.imyangty.com/note-zroi2021noip/</link>
        <pubDate>Sun, 29 Aug 2021 10:45:26 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-zroi2021noip/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg30.webp" alt="Featured image of post 21秋ZR联赛模拟略解" /&gt;&lt;p&gt;密码：ACM password 5&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;clbnb&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;太长不看版&#34;&gt;太长不看版&lt;/h2&gt;
&lt;h3 id=&#34;十连测&#34;&gt;十连测&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;R&lt;/th&gt;
&lt;th&gt;出题人&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;评价&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;wzy&lt;/td&gt;
&lt;td&gt;傻逼数论&lt;/td&gt;
&lt;td&gt;牛马贪心&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;AB 水，CD 毒瘤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;lk&lt;/td&gt;
&lt;td&gt;石头剪刀布&lt;/td&gt;
&lt;td&gt;dp + 最短路&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;A水，B需要想到，CD毒瘤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;lqs&lt;/td&gt;
&lt;td&gt;大模拟&lt;/td&gt;
&lt;td&gt;线段树优化dp😅&lt;/td&gt;
&lt;td&gt;dp+GF+插值😅&lt;/td&gt;
&lt;td&gt;LCP&amp;amp;SA😅&lt;/td&gt;
&lt;td&gt;duliu round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;dyh&lt;/td&gt;
&lt;td&gt;小贪心&lt;/td&gt;
&lt;td&gt;bitse优化dp😅&lt;/td&gt;
&lt;td&gt;poly😅&lt;/td&gt;
&lt;td&gt;扫描线+dp😅&lt;/td&gt;
&lt;td&gt;duliu round，B 值得一做&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;yjz&lt;/td&gt;
&lt;td&gt;二分+贪心&lt;/td&gt;
&lt;td&gt;妙妙思维题✔&lt;/td&gt;
&lt;td&gt;容斥😅&lt;/td&gt;
&lt;td&gt;斯坦纳树😅&lt;/td&gt;
&lt;td&gt;good round，质量高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;xtq&lt;/td&gt;
&lt;td&gt;小凯的疑惑&lt;/td&gt;
&lt;td&gt;链表维护删点&lt;/td&gt;
&lt;td&gt;构造，🐎象棋😅&lt;/td&gt;
&lt;td&gt;计算几何统计圆😅&lt;/td&gt;
&lt;td&gt;质量高，T3 打表 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;xpp&lt;/td&gt;
&lt;td&gt;扫描线维护贡献😅&lt;/td&gt;
&lt;td&gt;树上期望dp😅&lt;/td&gt;
&lt;td&gt;数论统计贡献😅&lt;/td&gt;
&lt;td&gt;奇怪dp😅&lt;/td&gt;
&lt;td&gt;毒瘤，T2 签到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;dcx&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅WTF19&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;巨大毒瘤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;dmy&lt;/td&gt;
&lt;td&gt;矩阵快速幂dp&lt;/td&gt;
&lt;td&gt;签到&lt;/td&gt;
&lt;td&gt;构造贪心😅&lt;/td&gt;
&lt;td&gt;泰勒展开😅&lt;/td&gt;
&lt;td&gt;质量高，dls 我的超人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;wzy&lt;/td&gt;
&lt;td&gt;异或差分建图&lt;/td&gt;
&lt;td&gt;矩阵推式子&lt;/td&gt;
&lt;td&gt;manacher😅&lt;/td&gt;
&lt;td&gt;随机化/bitset&lt;/td&gt;
&lt;td&gt;质量好高，思维好大&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;赛前-20-天&#34;&gt;赛前 20 天&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;R&lt;/th&gt;
&lt;th&gt;出题人&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;评价&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;dyh&lt;/td&gt;
&lt;td&gt;数学推导&lt;/td&gt;
&lt;td&gt;随机乱搞&lt;/td&gt;
&lt;td&gt;绝绝子树形dp&lt;/td&gt;
&lt;td&gt;诈骗傻逼 dp&lt;/td&gt;
&lt;td&gt;EZ round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;zkx&lt;/td&gt;
&lt;td&gt;搜索&lt;/td&gt;
&lt;td&gt;trie + 奇怪贪心&lt;/td&gt;
&lt;td&gt;二分两源点的路径&lt;/td&gt;
&lt;td&gt;启发式合并&lt;/td&gt;
&lt;td&gt;good round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;lqs&lt;/td&gt;
&lt;td&gt;状压&lt;/td&gt;
&lt;td&gt;枚举因子+容斥&lt;/td&gt;
&lt;td&gt;bitset 优化 dp&lt;/td&gt;
&lt;td&gt;最短路树+博弈😅&lt;/td&gt;
&lt;td&gt;good round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;zkx&lt;/td&gt;
&lt;td&gt;排序&lt;/td&gt;
&lt;td&gt;模拟&lt;/td&gt;
&lt;td&gt;基环树概率 dp&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.cnblogs.com/Go7338395/p/14907440.html&#34;&gt;经典状压😅&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;good round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;cxr&lt;/td&gt;
&lt;td&gt;set 连续段😅&lt;/td&gt;
&lt;td&gt;欧拉回路😅&lt;/td&gt;
&lt;td&gt;线性基😅&lt;/td&gt;
&lt;td&gt;B 算法+扫描线😅&lt;/td&gt;
&lt;td&gt;duliu but good round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;xjd&lt;/td&gt;
&lt;td&gt;签到&lt;/td&gt;
&lt;td&gt;暑二分图染色&lt;/td&gt;
&lt;td&gt;trie 上 dp，哈夫曼&lt;/td&gt;
&lt;td&gt;毒瘤算几😅&lt;/td&gt;
&lt;td&gt;D 毒瘤，C good&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;613&lt;/td&gt;
&lt;td&gt;二叉树性质&lt;/td&gt;
&lt;td&gt;诈骗启发式合并&lt;/td&gt;
&lt;td&gt;IOI2008 island&lt;/td&gt;
&lt;td&gt;？？？😅&lt;/td&gt;
&lt;td&gt;比较垃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;dxm&lt;/td&gt;
&lt;td&gt;D2B构造&lt;/td&gt;
&lt;td&gt;三维算几&lt;/td&gt;
&lt;td&gt;妙妙背包+拉插&lt;/td&gt;
&lt;td&gt;SAM😅&lt;/td&gt;
&lt;td&gt;C 题绝绝子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;zkx&lt;/td&gt;
&lt;td&gt;缩点直径&lt;/td&gt;
&lt;td&gt;521D，转换贪心&lt;/td&gt;
&lt;td&gt;妙妙构造&lt;/td&gt;
&lt;td&gt;树上路径？😅&lt;/td&gt;
&lt;td&gt;喜欢 B 和 C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;zkx&lt;/td&gt;
&lt;td&gt;二分 + 最短路&lt;/td&gt;
&lt;td&gt;建图 + 最短路&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf187d/&#34;&gt;线段树维护转移&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;dp 套 dp&lt;/td&gt;
&lt;td&gt;A B C 都挺好&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;xjd&lt;/td&gt;
&lt;td&gt;D2B构造&lt;/td&gt;
&lt;td&gt;绝绝子&lt;a href=&#34;https://oi.imyangty.com/sol-nc202122/&#34;&gt;构造&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;简单二分&lt;/td&gt;
&lt;td&gt;毒瘤 SA😅&lt;/td&gt;
&lt;td&gt;B 的构造绝绝子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;zkx&lt;/td&gt;
&lt;td&gt;枚举+dp😅&lt;/td&gt;
&lt;td&gt;二分图博弈😅&lt;/td&gt;
&lt;td&gt;树上倍增😅&lt;/td&gt;
&lt;td&gt;BZOJ 跳蚤😅&lt;/td&gt;
&lt;td&gt;毒瘤 round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;dls&lt;/td&gt;
&lt;td&gt;位运算 dp😅&lt;/td&gt;
&lt;td&gt;状压😅&lt;/td&gt;
&lt;td&gt;？？😅&lt;/td&gt;
&lt;td&gt;扫描线😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;lqs&lt;/td&gt;
&lt;td&gt;？😅&lt;/td&gt;
&lt;td&gt;分治 + dp😅&lt;/td&gt;
&lt;td&gt;毒瘤数论？😅&lt;/td&gt;
&lt;td&gt;字符串dp？😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;B1&lt;/td&gt;
&lt;td&gt;jry&lt;/td&gt;
&lt;td&gt;毒瘤搜索😅&lt;/td&gt;
&lt;td&gt;概率 dp&lt;/td&gt;
&lt;td&gt;高精 + fib 规律😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;牛逼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;B2&lt;/td&gt;
&lt;td&gt;jry&lt;/td&gt;
&lt;td&gt;并查集😅&lt;/td&gt;
&lt;td&gt;CF446B&lt;/td&gt;
&lt;td&gt;大模拟😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;高爸&lt;/td&gt;
&lt;td&gt;状压😅&lt;/td&gt;
&lt;td&gt;+LIS😅&lt;/td&gt;
&lt;td&gt;牛逼结论题😅&lt;/td&gt;
&lt;td&gt;？？😅&lt;/td&gt;
&lt;td&gt;excellent round&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;xjd&lt;/td&gt;
&lt;td&gt;k 小团😅&lt;/td&gt;
&lt;td&gt;中位数 dp&lt;/td&gt;
&lt;td&gt;LGV+NTT 😅&lt;/td&gt;
&lt;td&gt;SAM + 主席树😅&lt;/td&gt;
&lt;td&gt;trash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;zkx&lt;/td&gt;
&lt;td&gt;博弈&lt;/td&gt;
&lt;td&gt;维护二分图&lt;/td&gt;
&lt;td&gt;牛逼逼构造&lt;/td&gt;
&lt;td&gt;扫描线统计贡献😅&lt;/td&gt;
&lt;td&gt;打的很差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;zkx&lt;/td&gt;
&lt;td&gt;bzoj5071😅&lt;/td&gt;
&lt;td&gt;根号分治 loj2838&lt;/td&gt;
&lt;td&gt;记搜dp loj2397😅&lt;/td&gt;
&lt;td&gt;贪心 loj2393😅&lt;/td&gt;
&lt;td&gt;怎么这么屑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;B3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;B4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;B5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;B6&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;B7&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;十八连测 D5T1&lt;/li&gt;
&lt;li&gt;十八连测 D5T2&lt;/li&gt;
&lt;li&gt;十八连测 D3T4&lt;/li&gt;
&lt;li&gt;十连测 D7T1&lt;/li&gt;
&lt;li&gt;十八连测 D17T4&lt;/li&gt;
&lt;li&gt;十八连测 D12T3&lt;/li&gt;
&lt;li&gt;十八连测 D15T1&lt;/li&gt;
&lt;li&gt;十八连测 D15T2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;十连测-day-1&#34;&gt;十连测 Day 1&lt;/h2&gt;
&lt;h3 id=&#34;a&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^7\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p\le 10^9\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^p\phi(i^j)\bmod 10^9 + 7
\]&lt;/span&gt; 利用欧拉函数的积性展开 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\phi(n^1) + \phi(n^2) + \cdots + \phi(n^p)\\
=&amp;amp;\phi(p_1^{a_1})\phi(p_2^{a_2})\cdots\phi(p_k^{a_k}) + \phi(p_1^{2a_1})\phi(p_2^{2a_2})\cdots\phi(p_k^{2p_k}) + \cdots +\phi(p_1^{pa_1})\phi(p_2^{pa_2})\cdots\phi(p_k^{pa_k})\\
=&amp;amp;\phi(p_1^{a_1})\phi(p_2^{a_2})\cdots\phi(p_k^{a_k}) + p_1^{a_1}\phi(p_1^{a_1})p_2^{a_2}\phi(p_2^{a_2})\cdots p_k^{a_k}\phi(p_k^{a_k}) + \cdots \\
=&amp;amp;\phi(p_1^{a_1})\cdots\phi(p_k^{a_k})(1 + p_1^{a_1}p_2^{a_2}\cdots p_k^{a_k} + p_1^{2a_1}\cdots p_k^{2a_k} + \cdots + p_1^{pa_1}\cdots p_k^{pa_k})\\
=&amp;amp;\phi(n)(1 + n + n^2 + \cdots + n^{p - 1})
\end{aligned}
\]&lt;/span&gt; 对于每个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 都可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 计算 &lt;span class=&#34;math inline&#34;&gt;\(\phi(i)(1 + i + \cdots + i^{p - 1})\)&lt;/span&gt;。需要线性筛出 &lt;span class=&#34;math inline&#34;&gt;\(\phi(i)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(i^p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;同时当 &lt;span class=&#34;math inline&#34;&gt;\(i = 1\)&lt;/span&gt; 的时候计算等比数列求和需要特判。&lt;/p&gt;
&lt;h3 id=&#34;b&#34;&gt;B&lt;/h3&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^6\)&lt;/span&gt; 个节点的大根堆的数量，其中强制要求 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个点为叶子节点。&lt;/p&gt;
&lt;p&gt;不知道为什么这么水的题没有想出来。&lt;/p&gt;
&lt;p&gt;考虑倒序加点，这样子最后一个加进去的点一定是在叶子节点的（堆的性质）。直接考虑每次加的点有多少个位置摆，加完后如果其不是叶子，那么能加的位置 &lt;span class=&#34;math inline&#34;&gt;\(+1\)&lt;/span&gt;，如果强制其为叶子，那么能加的位置 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp; read(tmp);&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[tmp] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pos = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans *= pos;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) --pos;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ++pos;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;十连测-day-2&#34;&gt;十连测 Day 2&lt;/h2&gt;
&lt;h3 id=&#34;a-1&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;注意到 &lt;code&gt;P&lt;/code&gt;，&lt;code&gt;S&lt;/code&gt; 和 &lt;code&gt;R&lt;/code&gt; 都只能由特定的两个状态转移过来，所以有解的情况其实很少，处理一下就可以了。从上往下构造方案，注意满足字典序的要求。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;500&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; P[&lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;], R[&lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;], S[&lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) {&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) ans[i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;P&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;R&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) ans[i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;S&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = (i + j) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(i, m, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(i, m, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(i, m, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = i, y = m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; y &amp;lt;= j; ++x, ++y) {&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[x] != ans[y]) {&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[x] &amp;lt; ans[y])&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                flag = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (flag == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = i, y = m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; y &amp;lt;= j; ++x, ++y)&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(ans[x], ans[y]);&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    P[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, P[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = P[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    R[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, R[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = R[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    S[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, S[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = S[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            P[i][k] += P[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k] + R[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k];&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            R[i][k] += R[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k] + S[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k];&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            S[i][k] += S[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k] + P[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k];&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T;&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;T);&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, p, s, n;&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;r, &amp;amp;p, &amp;amp;s);&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = r + p + s;&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lg = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, flag = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; ; ++lg) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; lg) == n) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (P[lg][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == p &amp;amp;&amp;amp; P[lg][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == r &amp;amp;&amp;amp; P[lg][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] == s) {&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (R[lg][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == p &amp;amp;&amp;amp; R[lg][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == r &amp;amp;&amp;amp; R[lg][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] == s) {&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (S[lg][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == p &amp;amp;&amp;amp; S[lg][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == r &amp;amp;&amp;amp; S[lg][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] == s) {&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (flag) {&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) putchar(ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb2-75&#34;&gt;&lt;a href=&#34;#cb2-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-76&#34;&gt;&lt;a href=&#34;#cb2-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;-1&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-77&#34;&gt;&lt;a href=&#34;#cb2-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-78&#34;&gt;&lt;a href=&#34;#cb2-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;b-1&#34;&gt;B&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，找到最小的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的正整数倍 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的十进制表示中不存在 &lt;span class=&#34;math inline&#34;&gt;\(n_i\in S\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;定义状态 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为当前数字模 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的值为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位能否转移到，则易得转移。将其视为一个图之后便可 bfs 找一开始的可行点到 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的最短路。注意一开始的可行点不包括 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ban[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;], k, a;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dis[maxn], last[maxn], path[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;queue&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now) {&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis[now] != &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(last[now]);&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    putchar(path[now] + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(dis, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; dis), memset(path, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; path);&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;a, &amp;amp;k);&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;tmp);&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ban[tmp] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ban[i]) dis[i % a] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, path[i % a] = min(path[i % a], i), q.push(i % a);&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = q.front(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ban[i]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * now + i) % a;&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis[now] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt; dis[to])&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                dis[to] = dis[now] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, q.push(to), path[to] = i, last[to] = now;&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;) puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;-1&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;十连测-day-3&#34;&gt;十连测 Day 3&lt;/h2&gt;
&lt;h2 id=&#34;十连测-day-4&#34;&gt;十连测 Day 4&lt;/h2&gt;
&lt;h2 id=&#34;十连测-day-5&#34;&gt;十连测 Day 5&lt;/h2&gt;
&lt;h3 id=&#34;a-最小最大&#34;&gt;A 最小最大&lt;/h3&gt;
&lt;p&gt;不难发现不会反悔，二分答案然后随便判判就行了。&lt;/p&gt;
&lt;h3 id=&#34;b-魔法树&#34;&gt;B 魔法树&lt;/h3&gt;
&lt;p&gt;发现每个数循环节的 gcd 一定为根的儿子个数。且每隔 gcd 序列里的数就是同一子树内的，故不妨递归判断，按照 gcd 分组。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b ? gcd(b, a % b) : a;}&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxa = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, last[maxa];&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; solve(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : v) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x != v[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (flag) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; G = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)v.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (last[v[i]]) G = gcd(i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - last[v[i]], G);&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        last[v[i]] = i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : v) last[x] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, G - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; vv;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i; j &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)v.size(); j += G)&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vv.push_back(v[j]);&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!solve(vv)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        v.clear();&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; read(x);&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            v.push_back(x);&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        puts(solve(v) ? &lt;span class=&#34;st&#34;&gt;&amp;quot;Yes&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;No&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;十连测-day-6&#34;&gt;十连测 Day 6&lt;/h2&gt;
&lt;h3 id=&#34;a.-2021提高组十连测day6买&#34;&gt;A. 【2021提高组十连测day6】买&lt;/h3&gt;
&lt;p&gt;注意细节即可。&lt;/p&gt;
&lt;h3 id=&#34;b.-2021提高组十连测day6三角剖分&#34;&gt;B. 【2021提高组十连测day6】三角剖分&lt;/h3&gt;
&lt;p&gt;链表。ARC128D。&lt;/p&gt;
&lt;h3 id=&#34;c.-2021提高组十连测day6马的遍历&#34;&gt;C. 【2021提高组十连测day6】马的遍历&lt;/h3&gt;
&lt;p&gt;构造。&lt;/p&gt;
&lt;h3 id=&#34;d.-2021提高组十连测day6不同的圆&#34;&gt;D. 【2021提高组十连测day6】不同的圆&lt;/h3&gt;
&lt;h2 id=&#34;十连测-day-7&#34;&gt;十连测 Day 7&lt;/h2&gt;
&lt;h3 id=&#34;a.-2021提高组十连测day7a&#34;&gt;A. 【2021提高组十连测day7】a&lt;/h3&gt;
&lt;p&gt;拆开式子，扫描线。&lt;/p&gt;
&lt;h3 id=&#34;b.-2021提高组十连测day7b&#34;&gt;B. 【2021提高组十连测day7】b&lt;/h3&gt;
&lt;p&gt;简单概率 dp。&lt;/p&gt;
&lt;h3 id=&#34;c.-2021提高组十连测day7c&#34;&gt;C. 【2021提高组十连测day7】c&lt;/h3&gt;
&lt;p&gt;还不会&lt;/p&gt;
&lt;h3 id=&#34;d.-2021提高组十连测day7d&#34;&gt;D. 【2021提高组十连测day7】d&lt;/h3&gt;
&lt;p&gt;还不会&lt;/p&gt;
&lt;h2 id=&#34;十连测-day-10&#34;&gt;十连测 Day 10&lt;/h2&gt;
&lt;h3 id=&#34;a.-2021提高组十连测day10灯&#34;&gt;A. 【2021提高组十连测day10】灯&lt;/h3&gt;
&lt;p&gt;先异或差分，然后每次变成对两个点修改，问何时能将整个序列变为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑如何解决这个问题，可以将每个操作的两个点连边，然后显然，对于一个连通块，里面的 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数必须为偶数才有可能被消掉。&lt;/p&gt;
&lt;p&gt;构造方案的话就是随便选一棵生成树即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge {&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, id;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    edge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _v = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _id = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : v(_v), id(_id) {}&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;edge&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[maxn], used[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d = val[u];&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;e : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v = e.v;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[v]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dfs(v)) d ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, used[e.id] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), read(b + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) val[i] = a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] ^ b[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] ^ a[i] ^ b[i], print(val[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    val[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[n] ^ b[n];&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r; read(l, r);&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[l].push_back(edge(r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i)), G[r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].push_back(edge(l, i));&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = m - n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dfs(i)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; print(&lt;span class=&#34;st&#34;&gt;&amp;quot;0&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;NO&amp;quot;&lt;/span&gt;), output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++ans;&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(qPow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, ans));&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(&lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; + used[i]);&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;b.-2021提高组十连测day10矩阵&#34;&gt;B. 【2021提高组十连测day10】矩阵&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
A_{i, j} = line(i) + colomn(j) - B_{i, j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^mA_{i, j} = m\sum_{i =1}^nline(i) + n\sum_{j = 1}^mcolomn(j) -\sum_{i = 1}^n\sum_{j = 1}^mB_{i,j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
sumA = (m + n - 1)sumB
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^mA_{i,j} = (m - 1)line(i) + sumB\\
\sum_{i = 1}^nA_{i, j} = (n - 1)colunm(j) + sumB
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后，对于 &lt;span class=&#34;math inline&#34;&gt;\(n,m\neq 1\)&lt;/span&gt; 的情况，矩阵是唯一确定的，直接输出就行了。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\lor m = 1\)&lt;/span&gt; 的情况，只有全部元素相等时有解，直接构造即可。&lt;/p&gt;
&lt;h3 id=&#34;c.-2021提高组十连测day10折纸&#34;&gt;C. 【2021提高组十连测day10】折纸&lt;/h3&gt;
&lt;h3 id=&#34;d.-2021提高组十连测day10钻石&#34;&gt;D. 【2021提高组十连测day10】钻石&lt;/h3&gt;
&lt;p&gt;答案为 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{NO}\)&lt;/span&gt; 当且仅当每个点及其邻居得到的导出子图为若干个团。&lt;/p&gt;
&lt;p&gt;用 bitset 存邻接矩阵，可以 &lt;span class=&#34;math inline&#34;&gt;\(O\left(\dfrac{nm}{w}\right)\)&lt;/span&gt;，用 hash 存找到的团，避免重复计算。&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-1&#34;&gt;赛前 20 天 Day 1&lt;/h2&gt;
&lt;h3 id=&#34;a.-21-zr联赛集训-day1数字变换&#34;&gt;A. 【21 ZR联赛集训 day1】数字变换&lt;/h3&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(s = (a + b)\bmod p\)&lt;/span&gt;，则一次操作会将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(2a\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\(2a - s\)&lt;/span&gt;。故 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次操作后 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 一定会变成 &lt;span class=&#34;math inline&#34;&gt;\(2^ka - ts\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(t\in[0, 2^k)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;， &lt;span class=&#34;math display&#34;&gt;\[
2^ka - ts = c\iff t = \frac{2^ka - c}{s}
\]&lt;/span&gt; 如果解出来 &lt;span class=&#34;math inline&#34;&gt;\(t\in [0, 2^k)\)&lt;/span&gt;，那么说明搜到解了。&lt;/p&gt;
&lt;h3 id=&#34;b.-21-zr联赛集训-day1均分财产&#34;&gt;B. 【21 ZR联赛集训 day1】均分财产&lt;/h3&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(k\ge\min(25, n - 2)\)&lt;/span&gt;，这启发了我们随机去乱搞。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(n \le 25\)&lt;/span&gt; 的情况，可以爆搜，或者说暴力状压。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;gt; 25\)&lt;/span&gt; 的情况，可以先将最大的 &lt;span class=&#34;math inline&#34;&gt;\(n - 25\)&lt;/span&gt; 个元素分配到两个集合里，当前集合小一些就放进当前集合里。然后最后 &lt;span class=&#34;math inline&#34;&gt;\(25\)&lt;/span&gt; 个元素用上述暴力跑，选出一些使得差为之前选出来的 &lt;span class=&#34;math inline&#34;&gt;\(\Delta\)&lt;/span&gt;，可以发现几乎一定能跑出答案。&lt;/p&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-day1查询工资&#34;&gt;C. 【21 ZR联赛集训 day1】查询工资&lt;/h3&gt;
&lt;p&gt;比较牛逼的树形 dp。分析本题性质。&lt;/p&gt;
&lt;p&gt;首先，如果一个节点有兄弟节点，那么其一定不可能被算出。&lt;/p&gt;
&lt;p&gt;接下来分析没有兄弟节点的情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若其子树大小 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; k\)&lt;/span&gt;，则一定可以用父亲的和减去自身的和得到自己的工资。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若这个点子树大小 &lt;span class=&#34;math inline&#34;&gt;\(\le k\)&lt;/span&gt;，那么他一定和他子树中所有节点一起出现，故其一定为一个叶子。&lt;/p&gt;
&lt;p&gt;其答案可以用其爷爷节点的子树减去爷爷节点的儿子再减去叔叔节点的子树得到。故要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其为叶子；&lt;/li&gt;
&lt;li&gt;其没有兄弟；&lt;/li&gt;
&lt;li&gt;其爷爷至少有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个儿子；&lt;/li&gt;
&lt;li&gt;其表亲要么是叶子，要么大小至少为 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 表示当前子树能得到的人的最大值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于第一种情况，如果存在一个儿子子树大小 &lt;span class=&#34;math inline&#34;&gt;\(\ge k + 1\)&lt;/span&gt;，那么可以删掉其他的子树把这个儿子变成可以得到答案的点。&lt;span class=&#34;math inline&#34;&gt;\(f_u = f_v + 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;对于第二种情况，当前点的儿子个数 &lt;span class=&#34;math inline&#34;&gt;\(\ge k\)&lt;/span&gt;，删完之后，要求除了一个子树大小恰为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 外，剩下子树要么为叶子，要么大小 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; k\)&lt;/span&gt;。把 dp 值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的子树删成叶子，剩余子树不变即可。故满足存在 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个儿子且拥有一个 dp 值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，大小 &lt;span class=&#34;math inline&#34;&gt;\(\ge 2\)&lt;/span&gt; 的儿子就可以满足 &lt;span class=&#34;math inline&#34;&gt;\(f_u = \sum f_v + 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;8e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, size[maxn], f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            tmp.swap(G[i]);&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa; read(fa);&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                G[fa].push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(u, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxf = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, maxs = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                maxf = max(maxf, f[v]);&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                maxs = max(maxs, size[v]);&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[u] += f[v];&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cnt += (!f[v] &amp;amp;&amp;amp; size[v] &amp;gt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[u] += (cnt &amp;amp;&amp;amp; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)G[u].size() &amp;gt;= k);&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (maxs &amp;gt; k) f[u] = max(f[u], maxf + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d.-21-zr联赛集训-day1多项式题&#34;&gt;D. 【21 ZR联赛集训 day1】多项式题&lt;/h3&gt;
&lt;p&gt;😅😅😅😅这 nt 诈骗题放 T4。&lt;/p&gt;
&lt;p&gt;直接 DP，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位划分的答案，&lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 为前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位表示的数字。则不难发现 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \sum_{j = 0}^{i - 1} f_j(s_i - 10^{i - j}s_j) = s_i\sum_{j =0}^{i - 1}f_j - 10^i\sum_{j = 0}^{i - 1}10^{-j}f_js_j
\]&lt;/span&gt; 可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 算。&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-2&#34;&gt;赛前 20 天 Day 2&lt;/h2&gt;
&lt;h3 id=&#34;a.-21-zr联赛集训-day2幻方&#34;&gt;A. 【21 ZR联赛集训 day2】幻方&lt;/h3&gt;
&lt;p&gt;合法的幻方只有 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt; 种且所有状态只有 &lt;span class=&#34;math inline&#34;&gt;\(9! = 362880\)&lt;/span&gt; 种，所以直接多源 bfs 然后对于每组询问 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 输出。&lt;/p&gt;
&lt;h3 id=&#34;b.-21-zr联赛集训-day2数集&#34;&gt;B. 【21 ZR联赛集训 day2】数集&lt;/h3&gt;
&lt;p&gt;查询 xor 就直接在 trie 上乱搞即可。&lt;/p&gt;
&lt;p&gt;至于 and 和 or，需要插入数字时标记这个数字所有的子集，然后按位从高到低贪心乱搞即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (mark[x]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mark[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j) &amp;amp; x) insert(x ^ (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j));&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;; &lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query_and(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (((x &amp;gt;&amp;gt; i) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;amp;&amp;amp; mark[ans | (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i)]) ans |= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query_or(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((((x &amp;gt;&amp;gt; i) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; mark[ans | (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i)]) ans |= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans | x;&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-day2染色&#34;&gt;C. 【21 ZR联赛集训 day2】染色&lt;/h3&gt;
&lt;p&gt;对于一个黑点的情况，不难设计出 dp 方程为 &lt;span class=&#34;math display&#34;&gt;\[
f_u = \max_{f_{v_i}\le f_{v_i + 1}}\{f_{v_i} + i\}
\]&lt;/span&gt; 然后对于两个点的，由于他们中间必然有个分界点，使得一边是 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 管，一边是 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 管，所以可以二分出这个分界点，二分要求两个根的 dp 值的差尽量小。&lt;/p&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2 n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d.-21-zr联赛集训-day2电路板&#34;&gt;D. 【21 ZR联赛集训 day2】电路板&lt;/h3&gt;
&lt;p&gt;启发式合并。按照题意离线下来之后查询就变得很裸。使用并查集维护一下连通性。&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-3&#34;&gt;赛前 20 天 Day 3&lt;/h2&gt;
&lt;h3 id=&#34;a.-zr联赛集训day3史上最简洁的题面&#34;&gt;A. [zr联赛集训day3]史上最简洁的题面&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(2^n)\)&lt;/span&gt; 的简单状压。&lt;/p&gt;
&lt;h3 id=&#34;b.-zr联赛集训day3史上第二简洁的题面&#34;&gt;B. [zr联赛集训day3]史上第二简洁的题面&lt;/h3&gt;
&lt;p&gt;考虑： &lt;span class=&#34;math display&#34;&gt;\[
[\gcd(a_i, x) = 1] = \sum_{d\mid \gcd(a_i, x)}\mu(d)
\]&lt;/span&gt; 答案需要求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = l}^r[a_i\perp x]
\]&lt;/span&gt; 所以即为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d\mid x}\mu(d)\sum_{i = l}^r[d\mid a_i]
\]&lt;/span&gt; 预处理出一个数的倍数出现在哪些位置，询问时枚举 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的质因数集合，100pts。&lt;/p&gt;
&lt;h3 id=&#34;c.-zr联赛集训day3史上第三简洁的题面&#34;&gt;C. [zr联赛集训day3]史上第三简洁的题面&lt;/h3&gt;
&lt;p&gt;见&lt;a href=&#34;https://oi.imyangty.com/sol-msolutions2019f/&#34;&gt;此处&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d.-zr联赛集训day3史上第四简洁的题面&#34;&gt;D. [zr联赛集训day3]史上第四简洁的题面&lt;/h3&gt;
&lt;h3 id=&#34;section&#34;&gt;&lt;/h3&gt;
&lt;h2 id=&#34;赛前-20-天-day-4&#34;&gt;赛前 20 天 Day 4&lt;/h2&gt;
&lt;h3 id=&#34;a.-21-zr联赛集训-day4序列变换&#34;&gt;A. 【21 ZR联赛集训 day4】序列变换&lt;/h3&gt;
&lt;p&gt;类似 NOIP2013 火柴排队，不难发现最小距离为将两个序列升序排序后得到。由于一次可以任意交换，所以考虑将排列分解为若干个循环，答案为总长减循环。&lt;/p&gt;
&lt;h3 id=&#34;b.-21-zr联赛集训-day4下象棋&#34;&gt;B. 【21 ZR联赛集训 day4】下象棋&lt;/h3&gt;
&lt;p&gt;扫一遍对角线。&lt;/p&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-day4外星病毒&#34;&gt;C. 【21 ZR联赛集训 day4】外星病毒&lt;/h3&gt;
&lt;p&gt;基环森林。考虑不在环上的情况，就是 &lt;span class=&#34;math display&#34;&gt;\[
f_u = p_u + (1 - p_u)(1 - \prod_v(1 - f_vq_v))
\]&lt;/span&gt; 可以先 dp 算出不在环上的情况的所有解。&lt;/p&gt;
&lt;p&gt;然后考虑环的情况。先倍长，断环为链，然后就有如下公式。设 &lt;span class=&#34;math inline&#34;&gt;\(g_u\)&lt;/span&gt; 为最终答案，&lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为子树内的答案： &lt;span class=&#34;math display&#34;&gt;\[
g_i = f_i + \sum_{j = i - n}^{i - 1}f_j\left(\prod_{k = j}^{i - 1} q_k\right)\left(\prod_{k = j + 1}^{i}(1 - f_k)\right)
\]&lt;/span&gt; 随便动态维护一下就可以了。复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d.-21-zr联赛集训-day4删边方案&#34;&gt;D. 【21 ZR联赛集训 day4】删边方案&lt;/h3&gt;
&lt;h2 id=&#34;赛前-20-天-day-5&#34;&gt;赛前 20 天 Day 5&lt;/h2&gt;
&lt;h3 id=&#34;a.-21-zr联赛集训-day5日记&#34;&gt;A. 【21 ZR联赛集训 day5】日记&lt;/h3&gt;
&lt;p&gt;发现第一天写在 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 页时，接下来几天的页数一定一天比一天小，直到把第一页写了，此时一定会出现一个 &lt;span class=&#34;math inline&#34;&gt;\(p_i &amp;lt; p_{i + 1}\)&lt;/span&gt;。然后去掉写过的页，然后重复操作。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 中每段连续的 &lt;span class=&#34;math inline&#34;&gt;\(q_i &amp;gt; q_{i + 1}\)&lt;/span&gt;，相当于就是要从剩余页数里选若干页给他们使用，特别地，&lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 不用考虑因为一定会被选。&lt;/p&gt;
&lt;p&gt;构造一个 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，表示所有 &lt;span class=&#34;math inline&#34;&gt;\(q_i &amp;lt; q_{i + 1}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 也加入 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;。答案为 &lt;span class=&#34;math display&#34;&gt;\[
\prod_{i = 2}^k\binom{n - a_{i - 1} - 1}{a_i - a_{i - 1} - 1} = (n - 1)!\prod_{i = 2}^k\frac{1}{n - a_i}\cdot\frac{1}{(a_i - a_{i - 1} - 1)}
\]&lt;/span&gt; 用 &lt;code&gt;std::set&lt;/code&gt; 维护 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，每次计算的时候&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-6&#34;&gt;赛前 20 天 Day 6&lt;/h2&gt;
&lt;h3 id=&#34;a.-21-zr联赛集训-d6夏令营&#34;&gt;A. 【21 ZR联赛集训 d6】夏令营&lt;/h3&gt;
&lt;p&gt;使用两个 &lt;code&gt;multiset&lt;/code&gt; 维护即可。&lt;/p&gt;
&lt;h3 id=&#34;b.-21-zr联赛集训-d6游戏&#34;&gt;B. 【21 ZR联赛集训 d6】游戏&lt;/h3&gt;
&lt;p&gt;原题。&lt;/p&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-d6字符串&#34;&gt;C. 【21 ZR联赛集训 d6】字符串&lt;/h3&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 不能为 &lt;span class=&#34;math inline&#34;&gt;\(s_j\)&lt;/span&gt; 的前缀且字符串仅由 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 构成，所以我们考虑 dp 构造一个哈夫曼树。&lt;/p&gt;
&lt;p&gt;先排序，因为尽可能让权值大的点深度浅。考虑从根开始构建这棵哈夫曼树，我们每次要么就分裂一下空闲的叶子节点，要么就占用一个空闲的叶子节点。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, k}\)&lt;/span&gt; 为已经放了 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个数，有 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个空的叶子节点，树高为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 时的答案。则我们有转移： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j, k} = \min(f_{i - 1, j + 1, k}, f_{i, \lceil j / 2\rceil, k - 1} + \sum_{m = i + 1}^na_m)
\]&lt;/span&gt; 有个东西叫记忆化搜索。&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-7&#34;&gt;赛前 20 天 Day 7&lt;/h2&gt;
&lt;h3 id=&#34;a.-21-zr联赛集训-d7tournament&#34;&gt;A. 【21 ZR联赛集训 d7】tournament&lt;/h3&gt;
&lt;p&gt;枚举。&lt;/p&gt;
&lt;h3 id=&#34;b.-21-zr联赛集训-d7inversion&#34;&gt;B. 【21 ZR联赛集训 d7】inversion&lt;/h3&gt;
&lt;p&gt;诈骗。实际上和逆序对无关，因为每个数字对反正都会被正反统计一遍。相当于就是问长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的链的个数，启发式合并或者点分都可以。&lt;/p&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-d7tree&#34;&gt;C. 【21 ZR联赛集训 d7】tree&lt;/h3&gt;
&lt;p&gt;傻逼码农题。&lt;/p&gt;
&lt;h3 id=&#34;d.-21-zr联赛集训-d7turing-machine&#34;&gt;D. 【21 ZR联赛集训 d7】turing machine&lt;/h3&gt;
&lt;p&gt;还不会&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-8&#34;&gt;赛前 20 天 Day 8&lt;/h2&gt;
&lt;p&gt;A 是很水的构造，B 是简单三维算几。&lt;/p&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-day8连通&#34;&gt;C. 【21 ZR联赛集训 day8】连通&lt;/h3&gt;
&lt;p&gt;绝绝子题。&lt;/p&gt;
&lt;p&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(rt\)&lt;/span&gt; 作为树的根，记 &lt;span class=&#34;math inline&#34;&gt;\(dp(u, i)\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为根的子树，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 所在的连通块有 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 点的方案数，就有了 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的背包做法。&lt;/p&gt;
&lt;p&gt;考虑 GF 优化一下，&lt;span class=&#34;math inline&#34;&gt;\(F_u(x) = \sum_idp(u, i)x^i\)&lt;/span&gt;，转移有 &lt;span class=&#34;math inline&#34;&gt;\(F_u(x) = a_ux\prod(F_v(x) + 1)\)&lt;/span&gt;，然后最终 &lt;span class=&#34;math inline&#34;&gt;\(F_u(x)\)&lt;/span&gt; 就是一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次多项式，考虑拉格朗日插值。&lt;/p&gt;
&lt;p&gt;我们需要的是前 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 项的系数，观察下面的式子可以得到我们可以直接计算后面那坨的前 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 项系数和，然后对于每个点乘上去就行了。 &lt;span class=&#34;math display&#34;&gt;\[
F_u(x) = \sum_{i = 0}^{n}F_u(i)\prod_{j = 0,j\neq i}^n\frac{x-j}{i - j}
\]&lt;/span&gt; 每次枚举 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后算出 &lt;span class=&#34;math inline&#34;&gt;\(F_u(i)\)&lt;/span&gt;，再乘上后面的部分。&lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://zhengruioi.com/submission/404836&#34;&gt;提交记录&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-9&#34;&gt;赛前 20 天 Day 9&lt;/h2&gt;
&lt;p&gt;A 傻逼原题，B CF原题，考虑将所有操作转为操作 3，然后依次执行。&lt;/p&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-day9吃零食&#34;&gt;C. 【21 ZR联赛集训 day9】吃零食&lt;/h3&gt;
&lt;p&gt;牛逼逼构造。subtask 没妈。&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-16&#34;&gt;赛前 20 天 Day 16&lt;/h2&gt;
&lt;p&gt;A k 小团&lt;/p&gt;
&lt;h3 id=&#34;b.-21-zr联赛集训-d16中位数&#34;&gt;B. 【21 ZR联赛集训 d16】中位数&lt;/h3&gt;
&lt;p&gt;考虑平移一下 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt;，然后显然，&lt;span class=&#34;math inline&#34;&gt;\(a_i\in \{b_{i - 1}, b_i, b_{i + 1}\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后就考虑一个 dp，令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, k}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(a_i = b_{i + j - 1}\land a_{i - 1} = b_{i - 1 + k - 1}\)&lt;/span&gt; 时能否成立。然后转移的时候就考虑 &lt;span class=&#34;math inline&#34;&gt;\(a_{i - 2},a_{i - 1},a_i\)&lt;/span&gt; 的中位数是否符合 &lt;span class=&#34;math inline&#34;&gt;\(a_{i - 2}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(a_{i - 1}\)&lt;/span&gt; 的要求，然后就可以进行转移了。&lt;/p&gt;
&lt;p&gt;输出方案就在 dp 的时候记录一下即可。&lt;/p&gt;
&lt;p&gt;需要注意细节。&lt;/p&gt;
&lt;p&gt;C LGV引理 + NTT&lt;/p&gt;
&lt;p&gt;D 原题 HDU6648&lt;/p&gt;
&lt;h2 id=&#34;赛前-20-天-day-17&#34;&gt;赛前 20 天 Day 17&lt;/h2&gt;
&lt;h3 id=&#34;a.-21-zr联赛集训-day17博弈&#34;&gt;A. 【21 ZR联赛集训 day17】博弈&lt;/h3&gt;
&lt;p&gt;博弈论。考虑到一个人要么取走一整个环，要么把这个环留成两个长度为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的链然后去取下一个环。而我们肯定是优先断最小的环，可以感性理解一下。&lt;/p&gt;
&lt;p&gt;先从小到大排序，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i}\)&lt;/span&gt; 表示取了 &lt;span class=&#34;math inline&#34;&gt;\([i, n]\)&lt;/span&gt; 后先后手之差的最大值。初始转移为 &lt;span class=&#34;math inline&#34;&gt;\(f_n = -a_n\)&lt;/span&gt;（先手断环，后手取走），分类讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_i\ge 4\)&lt;/span&gt;：先手断环，后手可以全部取走或者留四个给先手。&lt;/li&gt;
&lt;li&gt;否则后手就只能全部取走。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分别对应了：&lt;span class=&#34;math inline&#34;&gt;\(f_i = -f_{i + 1} - a_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_{i + 1} - (a_i - 4) + 4\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;b.-21-zr联赛集训-day17齿轮&#34;&gt;B. 【21 ZR联赛集训 day17】齿轮&lt;/h3&gt;
&lt;p&gt;不难发现我们只需要维护二分图即可。需要用带权并查集维护一下连通块，奇偶性通过权值易得，然后如果将左部和右部合并了就直接将连通块标记即可。&lt;/p&gt;
&lt;h3 id=&#34;c.-21-zr联赛集训-day17排班方案&#34;&gt;C. 【21 ZR联赛集训 day17】排班方案&lt;/h3&gt;
&lt;p&gt;显然， &lt;span class=&#34;math display&#34;&gt;\[
C = \prod_{i = 1}^n(d_i - i + 1)
\]&lt;/span&gt; 所以我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 的因数然后贪心构造即可。&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>位运算卷积学习笔记</title>
        <link>https://oi.imyangty.com/note-fwt/</link>
        <pubDate>Sat, 28 Aug 2021 20:09:11 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-fwt/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg13.webp" alt="Featured image of post 位运算卷积学习笔记" /&gt;&lt;p&gt;本文内容已经过时，可见 &lt;a href=&#34;https://oi.imyangty.com/note-set-power-series/&#34;&gt;集合幂级数胡扯&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;快速沃尔什变换fwt&#34;&gt;快速沃尔什变换/FWT&lt;/h2&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://www.luogu.com.cn/blog/command-block/wei-yun-suan-juan-ji-yu-ji-kuo-zhan&#34;&gt;位运算卷积(FWT) &amp;amp; 集合幂级数 by cmdblock&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;我们考虑一般的加法卷积： &lt;span class=&#34;math display&#34;&gt;\[
c_k = \sum_{i + j = k} a_ib_j
\]&lt;/span&gt; 类似地，我们可以定义位运算卷积： &lt;span class=&#34;math display&#34;&gt;\[
c_k = \sum_{i\oplus j = k}a_ib_j
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(\oplus\)&lt;/span&gt; 是某种按位运算。&lt;/p&gt;
&lt;p&gt;已知的是，FFT 是通过将系数表示乘上一个范德蒙矩阵变成点值表示然后直接对应相乘，考虑构造一个类似的过程，将两序列转成新序列再对应相乘。&lt;/p&gt;
&lt;h3 id=&#34;构造&#34;&gt;构造&lt;/h3&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)\)&lt;/span&gt; 为幂级数 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 变换之后得到的幂级数。令 &lt;span class=&#34;math inline&#34;&gt;\(C = A * B\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 位运算卷积后的结果。则需要满足： &lt;span class=&#34;math display&#34;&gt;\[
A*B = C\iff \operatorname{FWT}(A)\cdot\operatorname{FWT}(B) = \operatorname{FWT}(C)
\]&lt;/span&gt; FFT 是一个线性变换，相当于乘上一个范德蒙矩阵。考虑对 FWT 构造一个类似的转移矩阵。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt; 为变换系数，即 &lt;span class=&#34;math inline&#34;&gt;\(A_j\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\)&lt;/span&gt; 产生的贡献，则 &lt;span class=&#34;math display&#34;&gt;\[
\operatorname{FWT}(A)_i = \sum_{j = 0}^{n - 1}c(i, j)A_j
\]&lt;/span&gt; 根据 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\cdot\operatorname{FWT}(B)_i=\operatorname{FWT}(C)_i\)&lt;/span&gt;，发现 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\left(\sum_{j = 0}^{n - 1}c(i, j)A_j\right)\left(\sum_{j = 0}^{n - 1}c(i, j)B_j\right) &amp;amp;= \sum_{j = 0}^{n - 1}c(i, j)C_j\\
\sum_{j = 0}^{n - 1}\sum_{k = 0}^{n - 1}c(i,j)c(i, k)A_jB_k &amp;amp;= \sum_{j = 0}^{n -1}c(i, j)C_j
\end{aligned}
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(A*B = C\)&lt;/span&gt;， &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{j = 0}^{n - 1}c(i, j)C_j &amp;amp;= \sum_{j = 0}^{n - 1}c(i,j)\sum_{t_1\oplus t_2 = j}A_{t_1}B_{t_2}\\
\sum_{j = 0}^{n - 1}\sum_{k = 0}^{n - 1}c(i,j)c(i, k)A_jB_k &amp;amp;= \sum_{j = 0}^{n - 1}c(i,j)\sum_{t_1\oplus t_2 = j}A_{t_1}B_{t_2}\\
&amp;amp;= \sum_{j = 0}^{n - 1}\sum_{t_1\oplus t_2 = j}A_{t_1}B_{t_2}c(i, j)\\
&amp;amp;= \sum_{t_1 = 0}^{n - 1}\sum_{t_2 = 0}^{n - 1}A_{t_1}B_{t_2}c(i, t_1\oplus t_2)
\end{aligned}
\]&lt;/span&gt; 对比以下左右两边，发现 &lt;span class=&#34;math display&#34;&gt;\[
c(i, j)c(i, k) = c(i, j\oplus k)
\]&lt;/span&gt; 同时，位运算是具有按位独立性的，所以知道了所有的 &lt;span class=&#34;math inline&#34;&gt;\(c(x, y)\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(x, y\in \{0, 1\}\)&lt;/span&gt;）之后就可以求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt;，具体地，把 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位称为 &lt;span class=&#34;math inline&#34;&gt;\(i_k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j_k\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j) = \prod c(i_k, j_k)\)&lt;/span&gt;，证明显然。&lt;/p&gt;
&lt;p&gt;现在考虑 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\)&lt;/span&gt; 的计算。前面说过，其等于 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 0}^{n - 1}c(i, j)A_j
\]&lt;/span&gt; 然后计算就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，貌似没什么卵用。&lt;/p&gt;
&lt;p&gt;接下来假定 &lt;span class=&#34;math inline&#34;&gt;\(n = 2^m\)&lt;/span&gt;，然后按位折半： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;= \sum_{j = 0}^{n - 1}c(i, j)A_j\\
&amp;amp;= \sum_{j = 0}^{n / 2 - 1}c(i, j)A_j + \sum_{j = n/2}^{n - 1}c(i, j)A_j\\
&amp;amp;= c(i_0, 0)\sum_{j = 0}^{n / 2 - 1}c(i&amp;#39;, j&amp;#39;)A_j + c(i_0, 1)\sum_{j = n / 2}^{n - 1}c(i&amp;#39;, j&amp;#39;)A_j\\
\end{aligned}
\]&lt;/span&gt; 然后就会惊奇的发现：问题的规模得到了减半。设 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的前一半为 &lt;span class=&#34;math inline&#34;&gt;\(A_0\)&lt;/span&gt;，后一半为 &lt;span class=&#34;math inline&#34;&gt;\(A_1\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=c(0, 0)\operatorname{FWT}(A_0)_i + c(0, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= c(1, 0)\operatorname{FWT}(A_0)_i + c(1, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt; 分析一下时间复杂度：&lt;span class=&#34;math inline&#34;&gt;\(T(n) = T(n / 2) + O(n) = O(n\log n)\)&lt;/span&gt;。逆变换也就是 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 矩阵的逆，具体下文。&lt;/p&gt;
&lt;h3 id=&#34;具体的位运算卷积&#34;&gt;具体的位运算卷积&lt;/h3&gt;
&lt;p&gt;对于不同的位运算 &lt;span class=&#34;math inline&#34;&gt;\(\oplus\)&lt;/span&gt;，构造相应的 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 矩阵。将 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
c(0, 0)&amp;amp;c(0, 1)\\
c(1, 0)&amp;amp;c(1, 1)
\end{bmatrix}
\]&lt;/span&gt; 称为位矩阵。&lt;/p&gt;
&lt;h4 id=&#34;or-卷积&#34;&gt;OR 卷积&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, k) = c(i, j\lor k)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, j) = c(i, j)\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\in\{0, 1\}\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
c(1, 0)c(1, 1) = c(1, 1)\\
c(0, 1)c(0, 0) = c(0, 1)
\end{cases}
\]&lt;/span&gt; 合法的矩阵有 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1 \\ 1 &amp;amp; 0\end{bmatrix}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 0\\1 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;第二个的意义为 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j) = [i\land j = j]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i = \displaystyle\sum_{j = 0}^{n - 1}c(i, j) A_j = \sum_{j\in i}A_j\)&lt;/span&gt;。相当于就是子集求和，并且其逆阵的形式很对称，所以使用第二个矩阵。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=\operatorname{FWT}(A_0)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= \operatorname{FWT}(A_0)_i + \operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; OR(modint *f) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] += f[i + j];&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 0\\
1 &amp;amp; 1
\end{bmatrix}^{-1} = 
\begin{bmatrix}
1 &amp;amp; 0\\
-1 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{IFWT}(A)_i &amp;amp;=\operatorname{IFWT}(A_0)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{IFWT}(A)_{i + n/2}&amp;amp;= \operatorname{IFWT}(A_0)_i - \operatorname{IFWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以就可以写出如下的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; OR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] += f[i + j] * x;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;and-卷积&#34;&gt;AND 卷积&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(j, k) = c(i,j\land k)\)&lt;/span&gt;，类似地，&lt;span class=&#34;math inline&#34;&gt;\(c(i,j)\in\{0,1\}\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
c(0, 0)c(0, 1) = c(0, 0)\\
c(1, 0)c(1, 1) = c(1, 0)\\
\end{cases}
\]&lt;/span&gt; 合法的矩阵有 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1\\ 0 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}0 &amp;amp; 1\\1 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt;。第一种的意义为 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j) = [i\land j = i]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i = \displaystyle\sum_{j=0}^{n - 1}c(i,j)A_j = \sum_{i\in j}A_j\)&lt;/span&gt;，相当于超集求和，且求逆完的形式比较对偶，所以使用第一种： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=\operatorname{FWT}(A_0)_i + \operatorname{FWT}(A_1)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;=\operatorname{FWT}(A_1)_i  &amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 1\\0 &amp;amp; 1
\end{bmatrix}^{-1} = \begin{bmatrix}
1 &amp;amp; -1\\
0 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{IFWT}(A)_i &amp;amp;=\operatorname{IFWT}(A_0)_i - \operatorname{IFWT}(A_1)_i &amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{IFWT}(A)_{i + n/2}&amp;amp;=\operatorname{IFWT}(A_1)_i  &amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; AND(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k] * x;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;xor-卷积&#34;&gt;XOR 卷积&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, k) = c(i, j\operatorname{xor} k)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;合法的有 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1\\ 1 &amp;amp; -1\end{bmatrix}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}1 &amp;amp; 1 \\ -1 &amp;amp; 1\end{bmatrix}\)&lt;/span&gt;。第二种求完逆形式不太好，选用第一种。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=\operatorname{FWT}(A_0)_i + \operatorname{FWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= \operatorname{FWT}(A_0)_i -\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 1 \\ 1 &amp;amp; -1
\end{bmatrix}^{-1} =
\begin{bmatrix}
1/ 2 &amp;amp; 1/  2\\
1/2 &amp;amp; -1/2
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{IFWT}(A)_i &amp;amp;=\frac 1 2\operatorname{IFWT}(A_0)_i + \frac 1 2\operatorname{IFWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{IFWT}(A)_{i + n/2}&amp;amp;= \frac 1 2\operatorname{IFWT}(A_0)_i -\frac 1 2\operatorname{IFWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; XOR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] = f[i + j] - f[i + j + k] - f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] *= x, f[i + j + k] *= x;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;板子&#34;&gt;板子&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4717&#34;&gt;P4717&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint A[maxn], B[maxn], a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; OR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] += f[i + j] * x;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; AND(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j)&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k] * x;&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; XOR(modint *f, modint x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; o = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; o &amp;lt;= n; o &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; i += o)&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; k; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] += f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j + k] = f[i + j] - f[i + j + k] - f[i + j + k];&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i + j] *= x, f[i + j + k] *= x;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; mul(modint *f, modint *g) {&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) f[i] *= g[i];&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n;&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(A[i]);&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(B[i]);&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(A, a), cpy(B, b), OR(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), OR(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), mul(a, b), OR(a, MOD - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(a[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;); putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(A, a), cpy(B, b), AND(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), AND(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), mul(a, b), AND(a, MOD - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(a[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;); putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(A, a), cpy(B, b), XOR(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), XOR(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), mul(a, b), XOR(a, (MOD + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(a[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;); putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-52&#34;&gt;&lt;a href=&#34;#cb5-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-53&#34;&gt;&lt;a href=&#34;#cb5-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-54&#34;&gt;&lt;a href=&#34;#cb5-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;整体的思路：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;回顾 FFT，现在要求构造一种线性变换满足 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)\cdot\operatorname{FWT}(B) = \operatorname{FWT}(C)\iff A*B = C\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;考虑构造系数矩阵 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i = \sum c(i, j)A_j\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)c(i, k) = c(i, j\oplus k)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现所有的 &lt;span class=&#34;math inline&#34;&gt;\(c(i, j)\)&lt;/span&gt; 可以由 &lt;span class=&#34;math inline&#34;&gt;\(c(x, y)(x,y\in\{0, 1\})\)&lt;/span&gt; 得到。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(A)_i\)&lt;/span&gt; 的式子折半拆开，发现变为两个子问题。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\operatorname{FWT}(A)_i &amp;amp;=c(0, 0)\operatorname{FWT}(A_0)_i + c(0, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 0, i\in[0, n / 2)\\
\operatorname{FWT}(A)_{i + n/2}&amp;amp;= c(1, 0)\operatorname{FWT}(A_0)_i + c(1, 1)\operatorname{FWT}(A_1)_i&amp;amp;i_0 = 1, i\in[0, n / 2)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于具体的位运算，构造出 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}c(0, 0)&amp;amp; c(0, 1)\\ c(1, 0) &amp;amp; c(1, 1) \end{bmatrix}\)&lt;/span&gt; 及其逆阵，尽量使得两种形式统一。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;敲出迭代版代码。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同时注意一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FWT_AND&lt;/strong&gt; 是&lt;strong&gt;超集&lt;/strong&gt;求和；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FWT_OR&lt;/strong&gt; 是&lt;strong&gt;子集&lt;/strong&gt;求和。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;p&gt;主要运用到 FWT 的线性性。即 &lt;span class=&#34;math display&#34;&gt;\[
\operatorname{FWT}(A) + \operatorname{FWT}(B) = \operatorname{FWT}(A + B)\\
\operatorname{FWT}(cA) = c\operatorname{FWT}(A)
\]&lt;/span&gt; 然后就可以用其优化一些生成函数的运算。&lt;/p&gt;
&lt;p&gt;同时，FWT 求子集/超级和的应用也是很广泛的。&lt;/p&gt;
&lt;p&gt;注意当 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中只有若干项为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时是可以大力分类讨论的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ABC212H - Nim Counting &lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;sol&lt;/a&gt; 利用了 FWT 的线性性，所以 FWT 完之后直接等比数列求和再 IFWT 回去就是对的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CF449D Jzzhu and Numbers &lt;a href=&#34;https://oi.imyangty.com/sol-cf449d/&#34;&gt;sol&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;涉及到了子集求和和 FWT 的线性性。分析只有两项不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的序列做 FWT 之后的性质。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>二分图/网络流总结</title>
        <link>https://oi.imyangty.com/note-bi-graph-and-networkflow/</link>
        <pubDate>Fri, 27 Aug 2021 19:37:04 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-bi-graph-and-networkflow/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg7.webp" alt="Featured image of post 二分图/网络流总结" /&gt;&lt;h2 id=&#34;二分图&#34;&gt;二分图&lt;/h2&gt;
&lt;p&gt;下面的内容不包系统，不包看懂，有错误欢迎指出/kel。&lt;/p&gt;
&lt;h3 id=&#34;匹配最大独立集最小覆盖&#34;&gt;匹配/最大独立集/最小覆盖&lt;/h3&gt;
&lt;h4 id=&#34;相关定义&#34;&gt;相关定义&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最大匹配：在图中选尽可能多的没有公共点的边，完美匹配即所有点都参与匹配。可以用匈牙利 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;，也可建模最大流 &lt;span class=&#34;math inline&#34;&gt;\(O(m\sqrt n)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最大权匹配：KM 算法 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt;，费用流 &lt;span class=&#34;math inline&#34;&gt;\(O(?)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最大独立集：选尽可能多的没有公共边的点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最小点覆盖：选尽可能少的点覆盖所有边。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于匈牙利算法的补充：其实就是不断寻找新的增广路的过程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;研究了几个小时，终于明白了。说穿了，就是你从二分图中找出一条路径来，让路径的起点和终点都是还没有匹配过的点，并且路径经过的连线是一条没被匹配、一条已经匹配过，再下一条又没匹配这样交替地出现。找到这样的路径后，显然路径里没被匹配的连线比已经匹配了的连线多一条，于是修改匹配图，把路径里所有匹配过的连线去掉匹配关系，把没有匹配的连线变成匹配的，这样匹配数就比原来多1个。不断执行上述操作，直到找不到这样的路径为止。——Matrix67《二分图最大匹配问题匈牙利算法》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不难发现最大独立集与最小点覆盖互为对偶问题，&lt;strong&gt;最大独立集+最小点覆盖=点数&lt;/strong&gt;，直观上理解就是两个反着来。&lt;/p&gt;
&lt;h4 id=&#34;konig-定理&#34;&gt;Konig 定理&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Konig 定理：&lt;strong&gt;二分图上，点数-最大匹配=最大独立集&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;二分图上，最大匹配=最小点覆盖&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑证明 Konig 定理：先尝试构造出一个最小点覆盖：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/konig1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这是一个已经找到了最大匹配（已经用红色标出匹配边并加大匹配点）的二分图，可见最大匹配是 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;第一步是我们从右边开始找到第一个未匹配点（&lt;span class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt;)，然后从它开始依次走未匹配边——匹配边——未匹配边…这样下去，可见最后一定达到的是&lt;strong&gt;右边的匹配点&lt;/strong&gt;，这个增广路是不完整的（&lt;strong&gt;因为如果存在增广路说明并没有最大匹配&lt;/strong&gt;），同时我们把沿途的点都标记一下（下图标为绿色）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/konig2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;之后继续，从非匹配点 &lt;span class=&#34;math inline&#34;&gt;\(J\)&lt;/span&gt; 开始：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/konig3.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可见这些点被标记了。&lt;/p&gt;
&lt;p&gt;我们构造出来的最小覆盖就是&lt;strong&gt;把右边未标记的点与左边标记了的点结合起来&lt;/strong&gt;，此处为 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace B, C, G\rbrace\)&lt;/span&gt;，已用橙色标出：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/konig4.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;不难发现我们需要的最小覆盖就已经构造完毕了，现在考虑证明他的正确性（参考了 Matrix67 大佬的&lt;a href=&#34;http://www.matrix67.com/blog/archives/116&#34;&gt;博客&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;第一步要证明我们&lt;strong&gt;选出的每个点都是某个匹配边中的某一个端点&lt;/strong&gt;（右边未标记的点肯定是匹配点，左边标记了的点肯定是匹配点，因为不可能出现从右边的未匹配点连向左边的匹配点的情况），所以这些点是与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 条匹配边一一对应的。&lt;/p&gt;
&lt;p&gt;现在考虑为什么他们能够覆盖所有的边，&lt;strong&gt;因为不存在某条边是左边没有标记而右边标记了的&lt;/strong&gt;（思考一下选出来点是&lt;strong&gt;左边标记&lt;/strong&gt;了的和&lt;strong&gt;右边未标记&lt;/strong&gt;的，所有的边&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;要么就是左边有标记（左边选有标记的点）&lt;/li&gt;
&lt;li&gt;要么就是左右都有标记（左边选有标记的点）&lt;/li&gt;
&lt;li&gt;要么就是两端都没有标记（右边选没有标记的点）），因为如果这条边是非匹配边，左端点就可以从这条边到达从而获得标记，而如果它是匹配边，那么就不可能从右边过来，只能是从左边过来的，所以左边肯定打有标记。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而我们不难发现剩下的点就是最大独立集（用粉色标出）:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/konig5.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;首先证明这些点是独立集：如果他们之间有边，那这些边就没有被橙色点覆盖，矛盾。&lt;/p&gt;
&lt;p&gt;为什么是最大呢？因为橙色点已经最少了，所以这个独立集必然是最大的。&lt;/p&gt;
&lt;h4 id=&#34;应用&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;一般棋盘类的横行/纵列之类的都很好建模成二分图。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6062&#34;&gt;P6062 [USACO05JAN]Muddy Fields G&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;标准的棋盘类建模。考虑一个点只能被纵/横的木板覆盖。木板肯定是尽可能长的，横木板看成左部，纵木板看成右部。中间的格子就是连边。考虑道我们就是要覆盖所有格子，所以跑一遍最小点覆盖就可以了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA1194&#34;&gt;UVA1194 Machine Schedule&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以把任务看作边，两台机子的状态看作点。不难发现也就是一个最小点覆盖，其就等于最大匹配。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3355&#34;&gt;P3355 骑士共存问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不难发现一个骑士与其能到达的点是位于二分图的两部的。对于能互相攻击的位置，连边。跑一遍二分图最大独立集即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;偏序集-dilworth-引理&#34;&gt;偏序集-Dilworth 引理&lt;/h3&gt;
&lt;p&gt;偏序的概念：设 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 为一个非空集，&lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 上的一个关系，若 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为自反的、反对称的、传递的，则称 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为集合 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 上的一个偏序关系。即：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\forall a\in A\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\((a,a)\in P\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\in P\land (b,a)\in P\)&lt;/span&gt; 则 &lt;span class=&#34;math inline&#34;&gt;\(a = b\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\in P\land (b,c)\in P\)&lt;/span&gt; 则 &lt;span class=&#34;math inline&#34;&gt;\((a,c)\in P\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;带偏序关系的集合 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 被称为偏序集。一般使用 &lt;span class=&#34;math inline&#34;&gt;\(a\le b\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\in P\)&lt;/span&gt;（这里 &lt;span class=&#34;math inline&#34;&gt;\(\le\)&lt;/span&gt; 只是一个抽象的符号）。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\((X,\le)\)&lt;/span&gt; 是一个偏序集，对于 &lt;span class=&#34;math inline&#34;&gt;\(a,b\in X\)&lt;/span&gt;，若有 &lt;span class=&#34;math inline&#34;&gt;\(a\le b\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(b\le a\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 是可比的，否则 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 不可比。&lt;strong&gt;一个反链 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 的一个子集，当且仅当其中的任意两个元素都不可比&lt;/strong&gt;，&lt;strong&gt;一个链 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 的一个子集，当且仅当其中的任意两个元素都可比&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Dilworth 引理：&lt;strong&gt;最大反链=最小链覆盖&lt;/strong&gt;，即令 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为最长反链的大小，则 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 可以被划分为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个但不能再少的链。&lt;/p&gt;
&lt;p&gt;不难发现对于一个 DAG，我们可以将它抽象成一个偏序集，求出传递闭包就可以找到所有的偏序关系。&lt;/p&gt;
&lt;p&gt;此时的反链：&lt;strong&gt;对于一个 DAG，定义一个点集 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 为其反链，当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中不存在一个点对 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 可以到达 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最小可重链覆盖：用最少的链覆盖完 DAG 中的所有点，边/点均可重复&lt;/p&gt;
&lt;p&gt;求最小链覆盖的方法：求传递闭包 + 拆点二分图匹配。&lt;/p&gt;
&lt;p&gt;传递闭包即为把所有的偏序关系找出来，使用 Floyd，然后建出一个新的 DAG，跑拆点二分图匹配（网络流 24 题），&lt;strong&gt;一开始每个点都是一个链，每匹配一条边，就连起来两个链，需要链的条数就会减一&lt;/strong&gt;（求传递闭包的目的是把问题转化成每个边只能用一次）&lt;/p&gt;
&lt;p&gt;拆点：把每个点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 拆成 &lt;span class=&#34;math inline&#34;&gt;\(u^+\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(u^-\)&lt;/span&gt;，然后对于原图中的一条边 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt;，连边 &lt;span class=&#34;math inline&#34;&gt;\((u^+,v^-)\)&lt;/span&gt;。拆了点之后跑匹配，&lt;strong&gt;这样子就不会有连起来的链了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;最后原来 DAG 点数减去最大匹配就是最小链覆盖的条数。&lt;/p&gt;
&lt;p&gt;构造最小链覆盖的方案比较显然，把匹配上的边首尾相连即可。&lt;/p&gt;
&lt;p&gt;而构造最长反链的方法即为&lt;strong&gt;求出二分图的最大独立集 &lt;span class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt;，然后找到所有 &lt;span class=&#34;math inline&#34;&gt;\(u^+\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(u^-\)&lt;/span&gt; 都属于 &lt;span class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt; 的点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;&lt;/strong&gt;，这些点就构成了最长反链 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明（参考 &lt;a href=&#34;https://r-64.blog.uoj.ac/blog/623&#34;&gt;r_64 的博客&lt;/a&gt;）：首先假设原 DAG 有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 边，然后求完传递闭包再拆点二分图匹配之后得到的最大匹配为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，则不难发现最大独立集的大小为 &lt;span class=&#34;math inline&#34;&gt;\(2n - m\)&lt;/span&gt;（因为二分图有 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 条边）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用反证法不难得到其必然为反链，因为如果存在了 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 这个偏序关系，那么必然有 &lt;span class=&#34;math inline&#34;&gt;\(u^+\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v^-\)&lt;/span&gt; 的连边，而 &lt;span class=&#34;math inline&#34;&gt;\(u^+\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(v^-\)&lt;/span&gt; 在同一个独立集里面，矛盾。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后考虑证明该反链大小至少为 &lt;span class=&#34;math inline&#34;&gt;\(n - m\)&lt;/span&gt;，不难发现 $|I| = |A| + $ 满足 &lt;span class=&#34;math inline&#34;&gt;\(u^+\in I\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\(u^-\in I\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的数目，后者不超过 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，所以前者至少为 &lt;span class=&#34;math inline&#34;&gt;\(n - m\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最小链覆盖的条数为 &lt;span class=&#34;math inline&#34;&gt;\(n - m\)&lt;/span&gt;，反链的大小不会超过他，所以我们要求的这个最大反链的大小就是 &lt;span class=&#34;math inline&#34;&gt;\(n - m\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;搞懂了这些之后就可以完成&lt;a href=&#34;https://www.luogu.com.cn/problem/P4298&#34;&gt;洛谷P4298 [CTSC2008]祭祀&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这道题的题意就是求最大反链大小、构造一个最大反链、每个点有没有可能在构造出来的最大反链里面。对于每个点是否能加进最大反链里面，只需要把这个点、这个点关联的点和边都删掉之后，看答案是否为 &lt;span class=&#34;math inline&#34;&gt;\(m - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn][maxn], g[maxn][maxn], match[maxn], vis[maxn], idx, to[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ban[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s[maxn], t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ban[u]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[u][i] &amp;amp;&amp;amp; vis[i] != idx &amp;amp;&amp;amp; !ban[i])&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i] = idx;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!match[i] || dfs(match[i]))&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                to[u] = i, match[i] = u;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;span class=&#34;co&#34;&gt;//进行第二问求解，构造出最大独立集&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[u]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    s[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[u][i] &amp;amp;&amp;amp; !t[i])&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, calc(match[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[read()][read()] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[j][k] |= (g[j][i] &amp;amp; g[i][k]);&lt;span class=&#34;co&#34;&gt;//求传递闭包&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = n;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memcpy(f, g, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ++idx, ans -= dfs(i);&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!to[i]) calc(i);&lt;span class=&#34;co&#34;&gt;//从未匹配点开始匹配&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s[i] &amp;amp;&amp;amp; !t[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(nw, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) match[i] = to[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, nn = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(f, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(ban, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ban);&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g[i][nw] || g[nw][i] || i == nw) ban[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ++nn;&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = nn;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ban[i] &amp;amp;&amp;amp; !ban[j]) f[i][j] = g[i][j];&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ban[i]) ++idx, ret -= dfs(i);&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ret == ans - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还有一道例题是 &lt;a href=&#34;https://atcoder.jp/contests/abc237/tasks/abc237_h&#34;&gt;ABC237Ex - Hakata&lt;/a&gt;，可以自行感受。&lt;/p&gt;
&lt;h2 id=&#34;网络流&#34;&gt;网络流&lt;/h2&gt;
&lt;p&gt;约定：&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为点数，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为边数。&lt;/p&gt;
&lt;h3 id=&#34;最大流&#34;&gt;最大流&lt;/h3&gt;
&lt;h4 id=&#34;dinic-算法&#34;&gt;Dinic 算法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;一般图时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2m)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;二分图上为 &lt;span class=&#34;math inline&#34;&gt;\(O(m\sqrt n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;所有边容量均为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\min\{n^\frac 23,\sqrt m\}m)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每次增广前使用 bfs 给图分层。每个点的层数为其到源点的最近距离。作用：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;判断图中是否还有增广路；&lt;/li&gt;
&lt;li&gt;使得增广路最短。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后 dfs 找增广路。每次增广都只往层数比当前点多 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的点增广，保证找到的增广路最短。&lt;/p&gt;
&lt;p&gt;两个必须加的优化：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;当前弧优化：如果一个边被增广过，就没有必要被增广第二次。下一次就没必要经过这些已经被增广的边。&lt;/li&gt;
&lt;li&gt;多路增广：用没用完的残余流量继续找出一条增广路。这样一次 dfs 就找到多条增广路。&lt;/li&gt;
&lt;li&gt;炸点优化：一个点没有办法产生贡献了就把它炸掉。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;x[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].to;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].nxt,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].to)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], *__p1 = ibuf, *__p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++;}&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T &amp;amp;n) {&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; *s) {&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c) &amp;amp;&amp;amp; !isalpha(c)) c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isalpha(c) || isdigit(c)) s[p++] = c, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; obuf[maxc], *__pO = obuf;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; putchar(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {*__pO++ = c;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(T x) {&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), print(-x);&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; output() {fwrite(obuf, __pO - obuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, stdout);}&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;co&#34;&gt;// namespace fastIO&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T min(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T max(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;, maxm = &lt;span class=&#34;dv&#34;&gt;5005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge {&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to, nxt;&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll w;&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxm &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], dep[maxn], cur[maxn], cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, s, t;&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, ll w) {&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[++cnt].to = v;&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnt].w = w;&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnt].nxt = head[u];&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnt;&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; bfs() {&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], qhead, qtail;&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(dep, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; dep);&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memcpy(cur, head, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; head);&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    q[qhead = qtail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = s;&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dep[s] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (qhead &amp;lt;= qtail) {&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q[qhead++];&lt;/span&gt;
&lt;span id=&#34;cb2-75&#34;&gt;&lt;a href=&#34;#cb2-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        GO(u, head) {&lt;/span&gt;
&lt;span id=&#34;cb2-76&#34;&gt;&lt;a href=&#34;#cb2-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (e[i].w &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; dep[v] == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;span class=&#34;co&#34;&gt;//增广&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-77&#34;&gt;&lt;a href=&#34;#cb2-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q[++qtail] = v;&lt;/span&gt;
&lt;span id=&#34;cb2-78&#34;&gt;&lt;a href=&#34;#cb2-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                dep[v] = dep[u] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-79&#34;&gt;&lt;a href=&#34;#cb2-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == t) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//如果找到增广路了退出&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-80&#34;&gt;&lt;a href=&#34;#cb2-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-81&#34;&gt;&lt;a href=&#34;#cb2-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-82&#34;&gt;&lt;a href=&#34;#cb2-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-83&#34;&gt;&lt;a href=&#34;#cb2-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-84&#34;&gt;&lt;a href=&#34;#cb2-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-85&#34;&gt;&lt;a href=&#34;#cb2-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-86&#34;&gt;&lt;a href=&#34;#cb2-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, ll in) {&lt;/span&gt;
&lt;span id=&#34;cb2-87&#34;&gt;&lt;a href=&#34;#cb2-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u == t) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; in;&lt;/span&gt;
&lt;span id=&#34;cb2-88&#34;&gt;&lt;a href=&#34;#cb2-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll out = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-89&#34;&gt;&lt;a href=&#34;#cb2-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u, cur) {&lt;span class=&#34;co&#34;&gt;//当前弧优化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-90&#34;&gt;&lt;a href=&#34;#cb2-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cur[u] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-91&#34;&gt;&lt;a href=&#34;#cb2-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (e[i].w &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; dep[v] == dep[u] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-92&#34;&gt;&lt;a href=&#34;#cb2-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll res = dfs(v, min(in, e[i].w));&lt;/span&gt;
&lt;span id=&#34;cb2-93&#34;&gt;&lt;a href=&#34;#cb2-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            e[i].w -= res, e[i ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].w += res;&lt;/span&gt;
&lt;span id=&#34;cb2-94&#34;&gt;&lt;a href=&#34;#cb2-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            in -= res, out += res;&lt;/span&gt;
&lt;span id=&#34;cb2-95&#34;&gt;&lt;a href=&#34;#cb2-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-96&#34;&gt;&lt;a href=&#34;#cb2-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!in) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-97&#34;&gt;&lt;a href=&#34;#cb2-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-98&#34;&gt;&lt;a href=&#34;#cb2-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!out) dep[u] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//炸点优化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-99&#34;&gt;&lt;a href=&#34;#cb2-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; out;&lt;/span&gt;
&lt;span id=&#34;cb2-100&#34;&gt;&lt;a href=&#34;#cb2-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-101&#34;&gt;&lt;a href=&#34;#cb2-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-102&#34;&gt;&lt;a href=&#34;#cb2-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll dinic() {&lt;/span&gt;
&lt;span id=&#34;cb2-103&#34;&gt;&lt;a href=&#34;#cb2-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-104&#34;&gt;&lt;a href=&#34;#cb2-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (bfs()) ret += dfs(s, INF);&lt;/span&gt;
&lt;span id=&#34;cb2-105&#34;&gt;&lt;a href=&#34;#cb2-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-106&#34;&gt;&lt;a href=&#34;#cb2-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-107&#34;&gt;&lt;a href=&#34;#cb2-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-108&#34;&gt;&lt;a href=&#34;#cb2-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-109&#34;&gt;&lt;a href=&#34;#cb2-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m), read(s), read(t);&lt;/span&gt;
&lt;span id=&#34;cb2-110&#34;&gt;&lt;a href=&#34;#cb2-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb2-111&#34;&gt;&lt;a href=&#34;#cb2-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; ll w; read(u), read(v), read(w);&lt;/span&gt;
&lt;span id=&#34;cb2-112&#34;&gt;&lt;a href=&#34;#cb2-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v, w), add(v, u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-113&#34;&gt;&lt;a href=&#34;#cb2-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-114&#34;&gt;&lt;a href=&#34;#cb2-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(dinic());&lt;/span&gt;
&lt;span id=&#34;cb2-115&#34;&gt;&lt;a href=&#34;#cb2-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-116&#34;&gt;&lt;a href=&#34;#cb2-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;最小割&#34;&gt;最小割&lt;/h3&gt;
&lt;p&gt;最大流=最小割。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单割：割集的每条边都与 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 相连。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;集合划分问题&#34;&gt;集合划分问题&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2057&#34;&gt;P2057 [SHOI2007]善意的投票 / [JLOI2010]冠军调查&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有两个集合 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个物品。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 物品放入集合 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 花费 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，放入 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 花费 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有若干个限制条件 &lt;span class=&#34;math inline&#34;&gt;\((u, v, w)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 若不在一个集合则代价为 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;每个物品最多且必须在两集合之一，求最小代价。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设源点 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和汇点 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 向 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 连 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 容量的边，从 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 向 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 连 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 容量的边。对于 &lt;span class=&#34;math inline&#34;&gt;\((u, v, w)\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 间连容量为 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 双向边。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 被割开时，&lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 可达 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 代表 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 放入 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 可达 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 代表 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 放入 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;割开 &lt;span class=&#34;math inline&#34;&gt;\((S, i)\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 放入 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，割开 &lt;span class=&#34;math inline&#34;&gt;\((i, T)\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 放入 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;。割开 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 代表 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 不在一个集合。&lt;/p&gt;
&lt;p&gt;跑最小割就可以了。&lt;/p&gt;
&lt;p&gt;相关习题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP839&#34;&gt;SP839 OPTM - Optimal Marks&lt;/a&gt;&lt;/strong&gt; 拆位考虑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1361&#34;&gt;P1361 小M的作物&lt;/a&gt;&lt;/strong&gt; 打包型问题，建虚点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;最小割的可行边和必须边&#34;&gt;最小割的可行边和必须边&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4126&#34;&gt;P4126 [AHOI2009]最小割&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先，如果一条边没有满流，那么它肯定不可能在最小割里面，因为总有更好的满流边能替代他。&lt;/p&gt;
&lt;p&gt;然后，在残余网络中如果找得到 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt;，那么 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 就不可能是瓶颈，所以不可能出现在最小割里面（相当于割了 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 之后没用，还是联通的）。&lt;/p&gt;
&lt;p&gt;而如果 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 在残余网络中能到达 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 在残余网络中能到达 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 一定是必选的，因为 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 已经是瓶颈了。&lt;/p&gt;
&lt;p&gt;具体是实现就是求一下残余网络的 SCC 就行了。&lt;/p&gt;
&lt;h4 id=&#34;平面图最小割&#34;&gt;平面图最小割&lt;/h4&gt;
&lt;p&gt;边与边只在顶点相交的图叫做&lt;strong&gt;平面图&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意到平面图的边划分出了若干个区域，将每个区域抽象成一个点，原图中边两侧的区域对应的点连边，则得到平面图对应的&lt;strong&gt;对偶图&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;平面图最小割等于对偶图最短路&lt;/strong&gt;。感性理解一下就好了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4001&#34;&gt;P4001 [ICPC-Beijing 2006]狼抓兔子&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2046&#34;&gt;P2046 [NOI2010] 海拔&lt;/a&gt;。比较毒瘤，题解。&lt;/p&gt;
&lt;h4 id=&#34;最小割的最小边数&#34;&gt;最小割的最小边数&lt;/h4&gt;
&lt;p&gt;首先有一个非常显然的结论：边权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的图的最小割边数等于最小割。&lt;/p&gt;
&lt;p&gt;那么我们考虑将边权不为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的图进行转化：这里是一个套路，将所有边权乘上一个不影响答案的大数 &lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt;（至少大于边数）再加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，跑出最大流 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(F/E\)&lt;/span&gt; 为最小割，&lt;span class=&#34;math inline&#34;&gt;\(F\bmod E\)&lt;/span&gt; 为最小割边数。证明略了，挺显然的。&lt;/p&gt;
&lt;p&gt;还有一种做法是跑一遍最大流，然后将残量网络中的边权设为 &lt;span class=&#34;math inline&#34;&gt;\(\inf\)&lt;/span&gt;，满流边的边权设为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，再跑一遍最大流。这样子做的正确性是相当于重新建了张图，然后求新图的最小割（即为边数）。&lt;/p&gt;
&lt;h4 id=&#34;最大权闭合子图&#34;&gt;最大权闭合子图&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;闭合图：有向图 &lt;span class=&#34;math inline&#34;&gt;\(G= (V, E)\)&lt;/span&gt; 的一个点集，且&lt;strong&gt;该点集的出边指向的点仍在该点集中&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;最大权闭合图：给每个点赋一个权值，点权最大的闭合图。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;反映了事件间必要条件的关系&lt;/strong&gt;。一个事件的发生需要其所有前提发生才发生。最大权闭合图对应了收益最大的事件选择。&lt;/p&gt;
&lt;p&gt;构图：建源汇点 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 连向所有正权点，容量为点权；其余点连向 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，容量为点权的绝对值，对于原图中的边 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt;，连边 &lt;span class=&#34;math inline&#34;&gt;\((x, y, +\infty)\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;该网络 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 的最小割为简单割。&lt;/p&gt;
&lt;p&gt;容量为 &lt;span class=&#34;math inline&#34;&gt;\(+\infty\)&lt;/span&gt; 的边不可能被割断。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;（可行性）该网络中的简单割与闭合图一一对应。设简单割将 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 化成了&lt;span class=&#34;math inline&#34;&gt;\(V_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(V_2\)&lt;/span&gt; 两个点集，则含有 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的点集 &lt;span class=&#34;math inline&#34;&gt;\(V_1\)&lt;/span&gt; 为闭合图。&lt;/p&gt;
&lt;p&gt;理解：原图的边容量为 &lt;span class=&#34;math inline&#34;&gt;\(\infty\)&lt;/span&gt;，所以能走的话一定会走到底的。不存在 &lt;span class=&#34;math inline&#34;&gt;\(V_1\)&lt;/span&gt; 中有点的出边连向 &lt;span class=&#34;math inline&#34;&gt;\(V_2\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;（最优性）最小割对应的 &lt;span class=&#34;math inline&#34;&gt;\(V_1\)&lt;/span&gt; 为最大权闭合图。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(V_1\)&lt;/span&gt; 中正权点点集为 &lt;span class=&#34;math inline&#34;&gt;\(V_1^+\)&lt;/span&gt;，同理定义 &lt;span class=&#34;math inline&#34;&gt;\(V_1^-\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(V_2^+\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(V_2^-\)&lt;/span&gt;。设最小割容量为 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么不难发现 &lt;span class=&#34;math display&#34;&gt;\[
C = \sum_{i\in V_2^+}w_i - \sum_{i\in V_1^-}w_i
\]&lt;/span&gt; 然后，设 &lt;span class=&#34;math inline&#34;&gt;\(V_1\)&lt;/span&gt; 对应的闭合图的权值为 &lt;span class=&#34;math inline&#34;&gt;\(W\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
W = \sum_{i\in V_1^+}w_i + \sum_{i\in V_1^-}w_i
\]&lt;/span&gt; 然后 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
C + W  &amp;amp;= \sum_{i\in V_1^+}w_i + \sum_{i\in V_1^-}w_i + \sum_{i\in V_2^+} - \sum_{i\in V_1^-}w_i\\
C + W&amp;amp;= \sum_{i\in V_1^+} w_i + \sum_{i\in V_2^+}w_i\\
W &amp;amp;= \sum_{i\in V^+}w_i - C
\end{aligned}
\]&lt;/span&gt; 考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i\in V^+}w_i\)&lt;/span&gt; 为定值，故 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 最小时 &lt;span class=&#34;math inline&#34;&gt;\(W\)&lt;/span&gt; 最大，证毕。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，建出图后求出最小割 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;，然后用所有正权点的点权和减去最小割即得到最大权闭合图的点权和。&lt;/p&gt;
&lt;p&gt;输出方案：最小割对应满流的边，所以从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 出发找残量网络即能找到对应的点。&lt;/p&gt;
&lt;p&gt;相关题目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4174&#34;&gt;P4174 [NOI2006] 最大获利&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2805&#34;&gt;P2805 [NOI2009] 植物大战僵尸&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2762&#34;&gt;P2762 太空飞行计划问题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;费用流&#34;&gt;费用流&lt;/h3&gt;
&lt;p&gt;给每个边定一个单位费用，费用为流量乘单位费用，要求最大流的基础上费用最小。&lt;/p&gt;
&lt;h4 id=&#34;ek-费用流&#34;&gt;EK 费用流&lt;/h4&gt;
&lt;p&gt;使用 SPFA 增广，找费用最小的增广路。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;x[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].to;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].nxt,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].to)&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], *__p1 = ibuf, *__p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++;}&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T &amp;amp;n) {&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; *s) {&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c) &amp;amp;&amp;amp; !isalpha(c)) c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isalpha(c) || isdigit(c)) s[p++] = c, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; obuf[maxc], *__pO = obuf;&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; putchar(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {*__pO++ = c;}&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(T x) {&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), print(-x);&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; output() {fwrite(obuf, __pO - obuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, stdout);}&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;co&#34;&gt;// namespace fastIO&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T min(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T max(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxm = &lt;span class=&#34;fl&#34;&gt;5e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge {&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to, nxt;&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll w, c;&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxm &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, s, t;&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, ll w, ll c) {&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[++cnt].to = v, e[cnt].w = w, e[cnt].c = c;&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnt].nxt = head[u], head[u] = cnt;&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[++cnt].to = u, e[cnt].w = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, e[cnt].c = -c;&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnt].nxt = head[v], head[v] = cnt;&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; MCMF {&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll dis[maxn], flow[maxn], maxflow, mincost;&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre[maxn], inq[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-71&#34;&gt;&lt;a href=&#34;#cb3-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; SPFA() {&lt;/span&gt;
&lt;span id=&#34;cb3-72&#34;&gt;&lt;a href=&#34;#cb3-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(inq, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; inq);&lt;/span&gt;
&lt;span id=&#34;cb3-73&#34;&gt;&lt;a href=&#34;#cb3-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(dis, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; dis);&lt;/span&gt;
&lt;span id=&#34;cb3-74&#34;&gt;&lt;a href=&#34;#cb3-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;queue&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb3-75&#34;&gt;&lt;a href=&#34;#cb3-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    q.push(s);&lt;/span&gt;
&lt;span id=&#34;cb3-76&#34;&gt;&lt;a href=&#34;#cb3-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    inq[s] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dis[s] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-77&#34;&gt;&lt;a href=&#34;#cb3-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flow[s] = INF;&lt;/span&gt;
&lt;span id=&#34;cb3-78&#34;&gt;&lt;a href=&#34;#cb3-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb3-79&#34;&gt;&lt;a href=&#34;#cb3-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q.front(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb3-80&#34;&gt;&lt;a href=&#34;#cb3-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        inq[u] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-81&#34;&gt;&lt;a href=&#34;#cb3-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        GO(u, head) {&lt;/span&gt;
&lt;span id=&#34;cb3-82&#34;&gt;&lt;a href=&#34;#cb3-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (e[i].w &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; dis[u] + e[i].c &amp;lt; dis[v]) {&lt;/span&gt;
&lt;span id=&#34;cb3-83&#34;&gt;&lt;a href=&#34;#cb3-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                dis[v] = dis[u] + e[i].c;&lt;/span&gt;
&lt;span id=&#34;cb3-84&#34;&gt;&lt;a href=&#34;#cb3-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                flow[v] = min(flow[u], e[i].w);&lt;/span&gt;
&lt;span id=&#34;cb3-85&#34;&gt;&lt;a href=&#34;#cb3-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                pre[v] = i;&lt;/span&gt;
&lt;span id=&#34;cb3-86&#34;&gt;&lt;a href=&#34;#cb3-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!inq[v]) {&lt;/span&gt;
&lt;span id=&#34;cb3-87&#34;&gt;&lt;a href=&#34;#cb3-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    inq[v] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-88&#34;&gt;&lt;a href=&#34;#cb3-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    q.push(v);&lt;/span&gt;
&lt;span id=&#34;cb3-89&#34;&gt;&lt;a href=&#34;#cb3-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb3-90&#34;&gt;&lt;a href=&#34;#cb3-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb3-91&#34;&gt;&lt;a href=&#34;#cb3-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-92&#34;&gt;&lt;a href=&#34;#cb3-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-93&#34;&gt;&lt;a href=&#34;#cb3-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dis[t] &amp;lt; INF;&lt;/span&gt;
&lt;span id=&#34;cb3-94&#34;&gt;&lt;a href=&#34;#cb3-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-95&#34;&gt;&lt;a href=&#34;#cb3-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-96&#34;&gt;&lt;a href=&#34;#cb3-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; update() {&lt;/span&gt;
&lt;span id=&#34;cb3-97&#34;&gt;&lt;a href=&#34;#cb3-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = t;&lt;/span&gt;
&lt;span id=&#34;cb3-98&#34;&gt;&lt;a href=&#34;#cb3-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (now != s) {&lt;/span&gt;
&lt;span id=&#34;cb3-99&#34;&gt;&lt;a href=&#34;#cb3-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = pre[now];&lt;/span&gt;
&lt;span id=&#34;cb3-100&#34;&gt;&lt;a href=&#34;#cb3-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        e[i].w -= flow[t], e[i ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].w += flow[t];&lt;/span&gt;
&lt;span id=&#34;cb3-101&#34;&gt;&lt;a href=&#34;#cb3-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        now = e[i ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].to;&lt;/span&gt;
&lt;span id=&#34;cb3-102&#34;&gt;&lt;a href=&#34;#cb3-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-103&#34;&gt;&lt;a href=&#34;#cb3-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maxflow += flow[t];&lt;/span&gt;
&lt;span id=&#34;cb3-104&#34;&gt;&lt;a href=&#34;#cb3-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mincost += flow[t] * dis[t];&lt;/span&gt;
&lt;span id=&#34;cb3-105&#34;&gt;&lt;a href=&#34;#cb3-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-106&#34;&gt;&lt;a href=&#34;#cb3-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-107&#34;&gt;&lt;a href=&#34;#cb3-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-108&#34;&gt;&lt;a href=&#34;#cb3-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; MCMF() {&lt;/span&gt;
&lt;span id=&#34;cb3-109&#34;&gt;&lt;a href=&#34;#cb3-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (SPFA()) update();&lt;/span&gt;
&lt;span id=&#34;cb3-110&#34;&gt;&lt;a href=&#34;#cb3-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-111&#34;&gt;&lt;a href=&#34;#cb3-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-112&#34;&gt;&lt;a href=&#34;#cb3-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;co&#34;&gt;// namespace MCMF&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-113&#34;&gt;&lt;a href=&#34;#cb3-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-114&#34;&gt;&lt;a href=&#34;#cb3-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb3-115&#34;&gt;&lt;a href=&#34;#cb3-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-116&#34;&gt;&lt;a href=&#34;#cb3-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-117&#34;&gt;&lt;a href=&#34;#cb3-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m), read(s), read(t);&lt;/span&gt;
&lt;span id=&#34;cb3-118&#34;&gt;&lt;a href=&#34;#cb3-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb3-119&#34;&gt;&lt;a href=&#34;#cb3-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v, w, c;&lt;/span&gt;
&lt;span id=&#34;cb3-120&#34;&gt;&lt;a href=&#34;#cb3-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(u), read(v), read(w), read(c);&lt;/span&gt;
&lt;span id=&#34;cb3-121&#34;&gt;&lt;a href=&#34;#cb3-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v, w, c);&lt;/span&gt;
&lt;span id=&#34;cb3-122&#34;&gt;&lt;a href=&#34;#cb3-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-123&#34;&gt;&lt;a href=&#34;#cb3-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    MCMF::MCMF();&lt;/span&gt;
&lt;span id=&#34;cb3-124&#34;&gt;&lt;a href=&#34;#cb3-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(MCMF::maxflow), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), print(MCMF::mincost);&lt;/span&gt;
&lt;span id=&#34;cb3-125&#34;&gt;&lt;a href=&#34;#cb3-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-126&#34;&gt;&lt;a href=&#34;#cb3-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;zkw-费用流&#34;&gt;zkw 费用流&lt;/h4&gt;
&lt;p&gt;咕。&lt;/p&gt;
&lt;h4 id=&#34;section&#34;&gt;&lt;/h4&gt;
&lt;h2 id=&#34;二分图博弈&#34;&gt;二分图博弈&lt;/h2&gt;
&lt;p&gt;感谢&lt;a href=&#34;https://zhuanlan.zhihu.com/p/362452453&#34;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;基本定义&#34;&gt;基本定义&lt;/h3&gt;
&lt;p&gt;博弈人数两人，轮流决策。&lt;/p&gt;
&lt;p&gt;状态可被分为二分图的左部和右部两个集合，转移只发生在两个集合之间。&lt;/p&gt;
&lt;p&gt;不可以访问重复状态。&lt;/p&gt;
&lt;p&gt;无法转移者被判负。&lt;/p&gt;
&lt;h3 id=&#34;结论及证明&#34;&gt;结论及证明&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;设决策起点为 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;，若二分图的最大匹配一定包含 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;，则先手必胜，否则必败。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分如下情况讨论：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;如果最大匹配不一定包含 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;先手首先走到匹配点上（否则会产生新的匹配，与最大匹配矛盾），接下来后手走的边必为匹配点（否则这条路是一条增广路，和最大匹配矛盾）。最后肯定是先手无路可走。先手必败。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果最大匹配一定包含 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;先手一直走匹配边，后手必败。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为孤立点：&lt;/p&gt;
&lt;p&gt;显然先手必败。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;判断方法&#34;&gt;判断方法&lt;/h3&gt;
&lt;p&gt;判断 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 是否为先手必胜的决策起点，最简单的方法肯定是先把 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 抠掉然后跑最大流，然后再把 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 点加回去在残量网络上继续跑，若最大流增加，则 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 一定在最大匹配里面。&lt;/p&gt;
&lt;p&gt;然而有些题目需要求出所有的合法起点，枚举的时间复杂度铁定是超时的。考虑一个点何时不一定在最大匹配里面：考虑匈牙利算法，无非就是产生了一条交替路。记源汇分别为 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，分别相连的点集为 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;，那么不一定在最大匹配里面的点就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 出发每次找非满流边 dfs，能走到的所有 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 里面的点。&lt;/li&gt;
&lt;li&gt;从 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 出发每次找满流边 dfs，能走到的所有 &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt; 里面的点。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上这两种都是找交替路的过程。第一种等价于找非匹配-匹配-非匹配……的边构成的路径，第二种等价于找匹配-非匹配-匹配……的边构成的路径。&lt;/p&gt;
&lt;h3 id=&#34;例题&#34;&gt;例题&lt;/h3&gt;
&lt;h4 id=&#34;p4055-jsoi2009游戏&#34;&gt;P4055 [JSOI2009]游戏&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4055&#34;&gt;传送门&lt;/a&gt;。大意：给定一张网格，有些点不能走，先手首先选择起点，然后后手和先手轮流移动到可以走的四联通格子，格子不能重复经过。求所有使得先手必胜的起点。&lt;/p&gt;
&lt;p&gt;发现对于 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(i + j\)&lt;/span&gt; 的奇偶性可以天然的将整张图的所有格点划分成一张二分图。然后问题显然变为二分图博弈的问题。如果一定在最大匹配里面的点一定是赢不了的点。&lt;/p&gt;
&lt;p&gt;所以按照刚才说的方式 dfs 就可以了。&lt;/p&gt;
&lt;p&gt;代码写着有点烦。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>数论复习 1（简单数论）</title>
        <link>https://oi.imyangty.com/summary-number-theory1/</link>
        <pubDate>Thu, 12 Aug 2021 14:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-number-theory1/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg16.webp" alt="Featured image of post 数论复习 1（简单数论）" /&gt;&lt;p&gt;自己的总结，既适合新手入门也适合省选复习。文章可能很长，善用 TOC 进行跳转。&lt;/p&gt;
&lt;p&gt;主要分为若干个板块，可能中间会有难度较高的内容，可以跳读。&lt;/p&gt;
&lt;h2 id=&#34;前置常用技巧&#34;&gt;前置常用技巧&lt;/h2&gt;
&lt;p&gt;较难归类的但是非常实用的小技巧。&lt;/p&gt;
&lt;h3 id=&#34;常见符号&#34;&gt;常见符号&lt;/h3&gt;
&lt;p&gt;下文使用时将不加说明。&lt;/p&gt;
&lt;p&gt;求和/求积符号： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{i = 1}^n f(i) &amp;amp;= f(1) + f(2) + \cdots f(n)\\
\prod_{i =1}^nf(i) &amp;amp;= f(1)\times f(2)\times \cdots\times f(n)\\
\sum_{p(x)\text{ is true}}f(x) &amp;amp;= f(x_1) + f(x_2) + \cdots\text{for all }x_i\text{ that meet the proposition}
\end{aligned}
\]&lt;/span&gt; 艾弗森括号： &lt;span class=&#34;math display&#34;&gt;\[
[P] = 
\begin{cases}
1,&amp;amp;\text{if the proposition } P \text{ is true}\\
0,&amp;amp;\text{if the proposition } P \text{ is false}
\end{cases}
\]&lt;/span&gt; 集合的表示： &lt;span class=&#34;math display&#34;&gt;\[
S = \{x:P\}
\]&lt;/span&gt; 表示满足条件 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 构成的集合。&lt;/p&gt;
&lt;h3 id=&#34;龟速乘快速乘&#34;&gt;龟速乘/快速乘&lt;/h3&gt;
&lt;p&gt;有些毒瘤题会存在形如 &lt;code&gt;ll * ll % ll&lt;/code&gt; 的操作，直接乘是会溢出出去的，在开不了 &lt;code&gt;__int128&lt;/code&gt; 的时候只能考虑这两种方法。&lt;/p&gt;
&lt;p&gt;龟速乘是指像做快速幂一样，只不过是乘法换加法，思想是一样的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll mul(ll a, ll b, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = a;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = (b + mod) % mod, a = (a + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = (ans + x) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = (x &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;而快速乘则是利用了 &lt;code&gt;long double&lt;/code&gt; 的神奇性质，一行就可以搞定：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; ldb;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll mul(ll a, ll b, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (a * b - (ll)((ldb)a / mod * b) * mod + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还未经过实测，但是模数很大时建议不使用，容易掉精度。&lt;/p&gt;
&lt;p&gt;其原理即为 &lt;span class=&#34;math display&#34;&gt;\[
a\times b\equiv a\times b - \left\lfloor\frac{a\times b}{p}\right\rfloor p\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;upd：解禁了 &lt;code&gt;__int128&lt;/code&gt; 之后这个东西应该是没必要了。。&lt;/p&gt;
&lt;h3 id=&#34;光速幂&#34;&gt;光速幂&lt;/h3&gt;
&lt;p&gt;由于快速幂怎么样都会带一个 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;，在部分时限卡得很紧的题目中仍会 TLE，故引入该 trick。&lt;/p&gt;
&lt;p&gt;其适用于模数固定，底数固定的情况。例：&lt;span class=&#34;math inline&#34;&gt;\(a^b\bmod p\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不变。&lt;/p&gt;
&lt;p&gt;原理为分段打表。首先 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 如果为质数的话就欧拉定理降个幂，然后设指数上界为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，考虑 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt m\)&lt;/span&gt; 为阈值，处理出 &lt;span class=&#34;math inline&#34;&gt;\(a^0, a^1, \cdots, a^{\sqrt m}\)&lt;/span&gt;，然后再处理出 &lt;span class=&#34;math inline&#34;&gt;\(a^0, a^{\sqrt m}, a^{2\sqrt m}, \cdots, a^{\sqrt m \times \sqrt m}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这样就可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 回答询问。代码很好写，不放了。&lt;/p&gt;
&lt;h3 id=&#34;底函数顶函数&#34;&gt;底函数/顶函数&lt;/h3&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor x\rfloor\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 向下取整，&lt;span class=&#34;math inline&#34;&gt;\(\lceil x\rceil\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 向上取整。&lt;/p&gt;
&lt;p&gt;那么有常见放缩：&lt;span class=&#34;math inline&#34;&gt;\(\lfloor x\rfloor \le x\le \lceil x\rceil\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关键性质 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：若 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 是单增函数，且 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\in\mathbb Z\implies x\in\mathbb Z\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\lfloor f(\lfloor x\rfloor )\rfloor = \lfloor f(x)\rfloor\land \lceil f(\lceil x\rceil )\rceil = \lceil f(x)\rceil
\]&lt;/span&gt; 具体证明可以画出函数图像来脑补一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这于是告诉了我们，对于正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor\lfloor x / m\rfloor/n\rfloor = \lfloor x / mn\rfloor\)&lt;/span&gt;，这个结论在后文推导莫比乌斯反演题目的时候很有用。&lt;/p&gt;
&lt;p&gt;另外，对于底函数，有&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关键性质 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：对于正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，若令 &lt;span class=&#34;math inline&#34;&gt;\(y = \displaystyle\left\lfloor\frac{n}{\lfloor\frac nx\rfloor}\right\rfloor\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[x, y]\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor = \lfloor n / x\rfloor\)&lt;/span&gt;。（整除分块）&lt;/p&gt;
&lt;p&gt;具体证明见下文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数学基础&#34;&gt;数学基础&lt;/h3&gt;
&lt;p&gt;对数函数：若 &lt;span class=&#34;math inline&#34;&gt;\(a^x = b\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;gt;0\land a\ne1,b&amp;gt;0\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\log_ab = x\)&lt;/span&gt;。一般地记 &lt;span class=&#34;math inline&#34;&gt;\(\ln x = \log_{\mathrm e}x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lg x = \log_{10}x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对数函数的运算性质： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\log_ab &amp;amp;= \frac{\log_cb}{\log_ca}&amp;amp;\text{换底公式}\\
\log_ab\log_bc &amp;amp;= \log_ac\\
\log_a{xy} &amp;amp;= \log_a x + \log_ay&amp;amp;\text{化乘为加}\\
\end{aligned}
\]&lt;/span&gt; 复杂度分析时一般忽略底数（因为也就是常数级别的差距）。&lt;/p&gt;
&lt;p&gt;另外给出几个常见和式的估算：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(A(n) =\displaystyle 1 + \frac{1}{\sqrt 2} + \frac{1}{\sqrt 3} + \cdots + \frac{1}{\sqrt n}\)&lt;/span&gt;，放缩或者积分逼近有 &lt;span class=&#34;math inline&#34;&gt;\(A(n) = \Theta(\sqrt n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(B(n) = 1 + \sqrt 2+ \sqrt 3+\cdots + \sqrt n\)&lt;/span&gt;，积分逼近有 &lt;span class=&#34;math inline&#34;&gt;\(B(n) = \Theta(n\sqrt n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;调和级数求和 &lt;span class=&#34;math inline&#34;&gt;\(H(n) = \displaystyle 1 + \frac12 + \frac 13 + \cdots \frac 1n\)&lt;/span&gt;，积分逼近或放缩有 &lt;span class=&#34;math inline&#34;&gt;\(H(n) = \Theta(\ln n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些很重要的公式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;等差数列前缀和：&lt;span class=&#34;math inline&#34;&gt;\(S(n) = \dfrac{(a_1 + a_n)n}{2}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;等比数列前缀和：&lt;span class=&#34;math inline&#34;&gt;\(S(n) = \dfrac{a_1(1 - q^n)}{1 - q}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;一些常见的前缀和：
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1+2+\cdots+n = \dfrac{n(n+1)}{2}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1^2+2^2+\cdots+n^2 = \dfrac{n(n+1)(2n+1)}{6}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1^3 + 2^3 + \cdots + n^3 = \left(\dfrac{n(n+1)}{2}\right)^2\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数论基础&#34;&gt;数论基础&lt;/h2&gt;
&lt;p&gt;一些很基础的内容，大体了解之后再开始下面的深入学习。&lt;/p&gt;
&lt;h3 id=&#34;整除&#34;&gt;整除&lt;/h3&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(a,b\in Z\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\ne 0\)&lt;/span&gt;。若 &lt;span class=&#34;math inline&#34;&gt;\(\exists q\in Z\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(b = aq\)&lt;/span&gt;，则说 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 可以被 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 整除，记作 &lt;span class=&#34;math inline&#34;&gt;\(a\mid b\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的约数，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的倍数。&lt;/p&gt;
&lt;p&gt;具有如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传递性：&lt;span class=&#34;math inline&#34;&gt;\(a\mid b\land b\mid c\implies a\mid c\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a\mid b\land a\mid c\iff \forall x,y\in Z, a\mid xb + yc\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;带余除法&#34;&gt;带余除法&lt;/h3&gt;
&lt;p&gt;一般来说，令 &lt;span class=&#34;math inline&#34;&gt;\(a,b\in Z\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\ne 0\)&lt;/span&gt;，则一定存在&lt;strong&gt;唯一确定&lt;/strong&gt;的一组整数 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 满足 &lt;span class=&#34;math display&#34;&gt;\[
b = qa + r,0\le r &amp;lt; |a|
\]&lt;/span&gt; 称为带余除法，&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 为商，&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为余数。&lt;/p&gt;
&lt;p&gt;注意，&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 只能取 &lt;span class=&#34;math inline&#34;&gt;\(\{0, 1, \cdots, a - 1\}\)&lt;/span&gt; 中的数字。在 C++ 中，使用 &lt;code&gt;a % b&lt;/code&gt; 语句得到 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 除以 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的余数。&lt;/p&gt;
&lt;h3 id=&#34;lcm-与-gcd&#34;&gt;LCM 与 GCD&lt;/h3&gt;
&lt;p&gt;LCM，GCD 的详细定义见下文。&lt;/p&gt;
&lt;p&gt;互素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1, a_2) = 1\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(a_1\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(a_2\)&lt;/span&gt; 互素（既约/互质），记作 &lt;span class=&#34;math inline&#34;&gt;\(a_1\perp a_2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1,\cdots, a_n) = 1\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(a_1,\cdots, a_n\)&lt;/span&gt; 互素。&lt;/li&gt;
&lt;li&gt;多个整数互素并不代表他们一定两两互素。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;质数&#34;&gt;质数&lt;/h3&gt;
&lt;p&gt;质数：令 &lt;span class=&#34;math inline&#34;&gt;\(a\neq 0,\pm 1\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 除了 &lt;span class=&#34;math inline&#34;&gt;\(\pm 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\pm a\)&lt;/span&gt; 外无其他约数，则称 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为质数。&lt;/p&gt;
&lt;p&gt;合数：令 &lt;span class=&#34;math inline&#34;&gt;\(a\neq 0,\pm 1\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 不是质数，则为合数。&lt;/p&gt;
&lt;p&gt;以下的质数一般指正质数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的整数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为合数等价于 &lt;span class=&#34;math inline&#34;&gt;\(a = d\times e\)&lt;/span&gt;，其中 $1&amp;lt; d,e &amp;lt;a $。&lt;/li&gt;
&lt;li&gt;偶质数只有 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;质数有无限个，证明考虑反证法。&lt;/li&gt;
&lt;li&gt;对于合数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，一定存在质数 &lt;span class=&#34;math inline&#34;&gt;\(p \le \sqrt a\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(p\mid a\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;算术基本定理唯一分解定理&#34;&gt;算术基本定理（唯一分解定理）&lt;/h3&gt;
&lt;p&gt;正整数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 必能表示成如下形式： &lt;span class=&#34;math display&#34;&gt;\[
a = p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_k^{\alpha_k}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 为质数，上式为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的标准质因子分解式。&lt;/p&gt;
&lt;h3 id=&#34;同余&#34;&gt;同余&lt;/h3&gt;
&lt;p&gt;设整数 &lt;span class=&#34;math inline&#34;&gt;\(m\neq 0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\mid a - b\)&lt;/span&gt;，则称在模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下，&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 同余，记作 &lt;span class=&#34;math display&#34;&gt;\[
a\equiv b\pmod m
\]&lt;/span&gt; 一般来说模数都是正整数。&lt;/p&gt;
&lt;p&gt;性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自反性：&lt;span class=&#34;math inline&#34;&gt;\(a\equiv a\pmod m\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;对称性：&lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\iff b\equiv a\pmod m\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;传递性：&lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\land b\equiv c\pmod m\implies a\equiv c\pmod m\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;线性运算：若 &lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(c\equiv d\pmod m\)&lt;/span&gt;，则
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a\pm c\equiv b\pm d\pmod m\)&lt;/span&gt;。（加减上）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(ac\equiv bd\pmod m\)&lt;/span&gt;。乘法可以但是&lt;strong&gt;除法不行&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(ak\equiv bk\pmod {mk}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k\neq 0\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;除法的情况&lt;/strong&gt;：&lt;span class=&#34;math inline&#34;&gt;\(k\mid a\land k\mid b\land k\mid m\)&lt;/span&gt;：若 &lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac ak\equiv \dfrac bk\pmod{\dfrac mk}\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;乘法逆元见下。&lt;/p&gt;
&lt;p&gt;一般在写程序时应用：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;(a + b) % p = (a % p + b % p) % p&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;(a * b) % p = (a % p) * (b % p) % p&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这就是为什么很多题目要求我们对很大的答案可以取模输出。&lt;/p&gt;
&lt;h3 id=&#34;数论函数&#34;&gt;数论函数&lt;/h3&gt;
&lt;p&gt;定义域为 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf N^*\)&lt;/span&gt;，值域为 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf C\)&lt;/span&gt; 的函数（可看作数列）。&lt;/p&gt;
&lt;p&gt;积性函数：若 &lt;span class=&#34;math inline&#34;&gt;\(f(1) = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\forall x\perp y\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(f(xy) = f(x)f(y)\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 为积性函数。&lt;/p&gt;
&lt;p&gt;完全积性：若 &lt;span class=&#34;math inline&#34;&gt;\(f(1) = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\forall x,y\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(f(xy) = f(x)f(y)\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 为完全积性函数。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 为积性函数，则下列函数也是积性（易证）： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
h(x) &amp;amp;= f(x^p)\\
h(x) &amp;amp;= f^p(x)\\
h(x) &amp;amp;= f(x)g(x)\\
h(x) &amp;amp;= f(x)*g(x) = \sum_{d\mid x}f(d)g(\frac xd)
\end{aligned}
\]&lt;/span&gt; 积性函数一般可以指导我们干这样的事情，令 &lt;span class=&#34;math inline&#34;&gt;\(x = \prod p_i^{\alpha_i}\)&lt;/span&gt;（标准分解式） &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \prod F(p_i^{\alpha_i})
\]&lt;/span&gt; 这个性质很关键，可以解决很多问题。&lt;/p&gt;
&lt;p&gt;常见的函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单位函数：&lt;span class=&#34;math inline&#34;&gt;\(\epsilon(n) = [n = 1]\)&lt;/span&gt;，完全积性。&lt;/li&gt;
&lt;li&gt;幂函数：&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{id}_k(n) = n^k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{id}_1\)&lt;/span&gt; 一般记作 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{id}\)&lt;/span&gt;，完全积性。&lt;/li&gt;
&lt;li&gt;常数函数：&lt;span class=&#34;math inline&#34;&gt;\(1(n) = 1\)&lt;/span&gt;，完全积性。&lt;/li&gt;
&lt;li&gt;除数函数：&lt;span class=&#34;math inline&#34;&gt;\(\sigma_k(n) = \sum_{d\mid n}d^k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\sigma_0(n)\)&lt;/span&gt; 一般记作 &lt;span class=&#34;math inline&#34;&gt;\(d(n)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(\tau(n)\)&lt;/span&gt;，表示约数个数。&lt;span class=&#34;math inline&#34;&gt;\(\sigma_1(n)\)&lt;/span&gt; 一般记作 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(n)\)&lt;/span&gt;，表示约数之和，积性。&lt;/li&gt;
&lt;li&gt;欧拉函数：&lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 内与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互质的数的个数：&lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = \sum_{i = 1}^{n - 1}[i\perp n]\)&lt;/span&gt;，积性。&lt;/li&gt;
&lt;li&gt;莫比乌斯函数：&lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = \begin{cases}1&amp;amp;n = 1\\0&amp;amp;\exists d &amp;gt; 1\land d^2\mid n\\(-1)^{\omega(n)}&amp;amp;\text{otherwise}\end{cases}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(\omega(n)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的本质不同质因子个数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欧拉函数的性质下文会提到，莫比乌斯函数会在莫反一节进一步展开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;几乎所有的积性函数&lt;/strong&gt;都可以使用 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 线性筛，详见下文线性筛部分。&lt;/p&gt;
&lt;h2 id=&#34;最大公约数相关&#34;&gt;最大公约数相关&lt;/h2&gt;
&lt;h3 id=&#34;基础性质&#34;&gt;基础性质&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, b)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最大公约数，其相当于在每个质因子的幂次上面取 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}(a, b)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最小公倍数，相当于取 &lt;span class=&#34;math inline&#34;&gt;\(\max\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;即： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a &amp;amp;= \prod p_i^{x_i}\\
b &amp;amp;= \prod p_i^{y_i}\\
\gcd(a, b) &amp;amp;= \prod p_i^{\min(x_i, y_i)}\\
\operatorname{lcm}(a, b) &amp;amp;= \prod p_i^{\max(x_1, y_i)}
\end{aligned}
\]&lt;/span&gt; 于是我们可以得到下面的一个关键性质（常用于 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}\)&lt;/span&gt; 的互化）： &lt;span class=&#34;math display&#34;&gt;\[
\gcd(a,b) \times \operatorname{lcm}(a,b) = a\times b
\]&lt;/span&gt; 对于多个数，相当于就是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,\gcd(b, c))\)&lt;/span&gt;，道理是一样的。&lt;/p&gt;
&lt;h3 id=&#34;欧几里得算法辗转相除法&#34;&gt;欧几里得算法（辗转相除法）&lt;/h3&gt;
&lt;p&gt;考虑求 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b)\)&lt;/span&gt;。结论： &lt;span class=&#34;math display&#34;&gt;\[
\gcd(a,b) = \gcd(b, a\bmod b)
\]&lt;/span&gt; 考虑进行证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a &amp;lt; b\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(b, a\bmod b) = \gcd(b, a)\)&lt;/span&gt;，显然得证。&lt;/li&gt;
&lt;li&gt;否则，设 &lt;span class=&#34;math inline&#34;&gt;\(a = qb + r\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(0\le r &amp;lt; b\)&lt;/span&gt;，显然 &lt;span class=&#34;math inline&#34;&gt;\(r = a\bmod b\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\forall d\mid a, d\mid b\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(d\mid (a - qb)\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(d\mid r\)&lt;/span&gt;，相当于 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r, b\)&lt;/span&gt; 的公因数集合是一样的。其 gcd 自然相等，得证。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;递归写法，因为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, 0) = a\)&lt;/span&gt;，所以递归终止条件是 &lt;span class=&#34;math inline&#34;&gt;\(b = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; !b ? a : gcd(b, a % b);}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;时间复杂度：由于若 &lt;span class=&#34;math inline&#34;&gt;\(a \ge b\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a\bmod b\)&lt;/span&gt; 一次至少可以让 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 折半，&lt;span class=&#34;math inline&#34;&gt;\(a&amp;lt;b\)&lt;/span&gt; 的下一步必然是 &lt;span class=&#34;math inline&#34;&gt;\(a\ge b\)&lt;/span&gt;，故时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;。上界很松，但 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(Fib_i, Fib_{i + 1})\)&lt;/span&gt; 可以将其卡满。&lt;/p&gt;
&lt;h3 id=&#34;stein-算法更相减损术&#34;&gt;Stein 算法（更相减损术）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P2152&#34;&gt;P2152 [SDOI2009]SuperGCD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(a, b\le 10^{10000}\)&lt;/span&gt; 的最大公约数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直接使用辗转相除法的话，时间复杂度会炸的很恼火（因为高精除法较慢），而单纯辗转相减又容易遇到一些不优的情况。所以考虑二进制优化： &lt;span class=&#34;math display&#34;&gt;\[
\forall a,b\in \mathbf N, a \ge b\implies \gcd(a, b) = \gcd(a, a - b) = \gcd(b, a - b)
\]&lt;/span&gt; 并且 &lt;span class=&#34;math display&#34;&gt;\[
\gcd(2a, 2b) = 2\gcd(a, b)
\]&lt;/span&gt; 注意到减两次就一定会遇到偶数，可以除以 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;，因此复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(\log^2\)&lt;/span&gt; 级别（单次运算 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;）。套用该算法并使用压位高精便可通过本题。&lt;/p&gt;
&lt;h3 id=&#34;拓展欧几里得&#34;&gt;拓展欧几里得&lt;/h3&gt;
&lt;p&gt;主要用于求解 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = c\)&lt;/span&gt; 的整数不定方程相关问题。&lt;/p&gt;
&lt;p&gt;一部分线性同余方程可以等价转化为上式求解。&lt;/p&gt;
&lt;h4 id=&#34;求解过程&#34;&gt;求解过程&lt;/h4&gt;
&lt;p&gt;由下文裴蜀定理可知，$(a,b)c $ 时方程才有解。现在不妨先解决方程 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = \gcd(a, b)\)&lt;/span&gt;，解出答案后扩大相应倍数即可。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
ax_1 + by_1 &amp;amp;= \gcd(a, b)\\
bx_2 + (a\bmod b)y_2 &amp;amp;= \gcd(b, a\bmod b)
\end{aligned}
\]&lt;/span&gt; 由于 &lt;span class=&#34;math inline&#34;&gt;\((a, b) = (b, a\bmod b)\)&lt;/span&gt;，故 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
ax_1 + by_1 &amp;amp;= bx_2 + (a\bmod b)y_2\\
ax_1 + by_1 &amp;amp;= bx_2 + (a - b\lfloor\frac ab\rfloor)y_2\\
ax_1 + by_1 &amp;amp;= bx_2 + ay_2 - b(\lfloor\frac ab\rfloor y_2)\\
ax_1 + by_1 &amp;amp;= ay_2 + b(x_2 - \lfloor\frac ab\rfloor y_2)
\end{aligned}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math inline&#34;&gt;\(x_1 = y_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y_1 = x_2 - \lfloor\frac ab\rfloor y_2\)&lt;/span&gt;。写成代码就是：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exgcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b) {&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d = exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;边界条件显然有 &lt;span class=&#34;math inline&#34;&gt;\(a\times 1 + 0\times b = a\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这样子解出来的一组解是 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = \gcd(a, b)\)&lt;/span&gt; 的一组特解 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y_0)\)&lt;/span&gt;。回代一下原方程： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
ax_0 + by_0 &amp;amp;= \gcd(a, b)\\
a\cdot\frac{cx_0}{\gcd(a, b)} + b\cdot\frac{cy_0}{\gcd(a, b)} &amp;amp;= c
\end{aligned}
\]&lt;/span&gt; 所以原方程的特解 &lt;span class=&#34;math inline&#34;&gt;\(x^*\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y^*\)&lt;/span&gt; 为 &lt;span class=&#34;math display&#34;&gt;\[
x^* =\frac{cx_0}{\gcd(a, b)}, y^* =\frac{cy_0}{\gcd(a, b)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;构造通解&#34;&gt;构造通解&lt;/h4&gt;
&lt;p&gt;设任意 &lt;span class=&#34;math inline&#34;&gt;\(d\in\mathbf Q\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
a(x^* + db) + b(y^* - da) = c
\]&lt;/span&gt; 必然是成立的。通解需要保证 &lt;span class=&#34;math inline&#34;&gt;\(x^* + db\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(y^* - da\)&lt;/span&gt; 都为整数，所以通解的形式为： &lt;span class=&#34;math display&#34;&gt;\[
x = x^* + s\cdot\frac{b}{\gcd(a, b)}\\
y = y^* - s\cdot\frac{a}{\gcd(a, b)}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(s\in \mathbf Z\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们是不是就可以知道，&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 是负相关的。其实我们将其表示的直线画在坐标系里面就会发现这是显然的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1082&#34;&gt;P1082 [NOIP2012 提高组] 同余方程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv 1 \pmod b\)&lt;/span&gt; 的最小正整数解。&lt;span class=&#34;math inline&#34;&gt;\(2\le a,b\le 2\times 10^9\)&lt;/span&gt;，保证有解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;稍微转化一下问题，引入另一个未知量 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 得到 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = 1\)&lt;/span&gt;，用 exgcd 解一组特解，然后由 &lt;span class=&#34;math inline&#34;&gt;\(x = x^* + s\cdot b\)&lt;/span&gt; 得到答案为 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod b\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1516&#34;&gt;P1516 青蛙的约会&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;长度为 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; 的首尾相接的数轴上有两只青蛙，坐标分别为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，分别每次能往前跳 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个单位长度，求最少跳几次后相遇。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不难得到题目需要我们解如下关于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的方程的最小正整数解： $x+kmy+knL $ 化简可得到 &lt;span class=&#34;math inline&#34;&gt;\((m-n)k\equiv y-x\pmod L\)&lt;/span&gt; 也就是说，我们只要找得到方程 &lt;span class=&#34;math inline&#34;&gt;\((m-n)k+Lj=y-x\)&lt;/span&gt; （其中 &lt;span class=&#34;math inline&#34;&gt;\(j\in\mathbb{Z}\)&lt;/span&gt;）的最小正整数解即可，直接上 exgcd。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;​：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5656&#34;&gt;P5656 【模板】二元一次不定方程 (exgcd)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定不定方程 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = c\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a,b,c\in\mathbf Z\)&lt;/span&gt;。若无整数解，输出 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;；若有正整数解，输出其数量，所有&lt;strong&gt;正整数解&lt;/strong&gt;中 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小值/最大值以及 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的最小值/最大值；若无正整数解，输出所有&lt;strong&gt;整数解&lt;/strong&gt;中 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小正整数值和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的最小正整数值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;无解直接判 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b)\)&lt;/span&gt; 是否整除 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;然后不妨令上文中的 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{b}{\gcd(a,b)}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(d_x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{a}{\gcd(a,b)}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(d_y\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x = x^* + sd_x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y = y^* - sd_y\)&lt;/span&gt;。对于正整数解的限制就列不等式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
x^* + sd_x&amp;gt; 0 &amp;amp;\implies s \ge \left\lceil\frac{-x^* + 1}{d_x}\right\rceil\\
y^* - sd_y&amp;gt;0 &amp;amp;\implies s\le \left\lfloor\frac{y^* - 1}{d_y} \right\rfloor
\end{aligned}
\]&lt;/span&gt; 界出来了就可以直接判合法的 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 是否存在了。&lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 取最大对应 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 最大，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 最小，反之亦然。于是本题得到了解决。&lt;/p&gt;
&lt;h4 id=&#34;值域分析&#34;&gt;值域分析&lt;/h4&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = \gcd(a,b)\)&lt;/span&gt; 的特解 &lt;span class=&#34;math inline&#34;&gt;\((x^*, y^*)\)&lt;/span&gt;，有如下关于值域的结论：&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(b\ne 0\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x^*\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y^*\)&lt;/span&gt; 必满足 &lt;span class=&#34;math inline&#34;&gt;\(|x|\le b\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|y|\le a\)&lt;/span&gt;。归纳证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b) = b\)&lt;/span&gt; 时，必然在下一层停止递归。此时 &lt;span class=&#34;math inline&#34;&gt;\(x^* = 0, y^* = 1\)&lt;/span&gt;，显然 &lt;span class=&#34;math inline&#34;&gt;\(a,b\ge 1\ge |x^*|, |y^*|\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b) \ne b\)&lt;/span&gt; 时，设 &lt;span class=&#34;math inline&#34;&gt;\(|x_2|\le (a\bmod b),|y_2|\le b\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(x^* = y_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y^* = x_2 - \lfloor a / b\rfloor y_2\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(|x^*| = |y_2|\le b\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而 &lt;span class=&#34;math inline&#34;&gt;\(|y^*| \le |x_2| + |\lfloor a / b\rfloor\cdot y_2|\le (a\bmod b) + \lfloor a / b\rfloor y_2\le a - \lfloor a/ b\rfloor(b - |y_2|)\le a\)&lt;/span&gt;。证毕。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，exgcd 解出来的解&lt;del&gt;铁定是不会爆值域的&lt;/del&gt;。&lt;/p&gt;
&lt;h3 id=&#34;裴蜀定理&#34;&gt;裴蜀定理&lt;/h3&gt;
&lt;p&gt;对于两个数的情况：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b\in \mathbf Z\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, b) = d\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\forall x,y\in\mathbf Z\)&lt;/span&gt;，都有 &lt;span class=&#34;math display&#34;&gt;\[
d\mid ax + by
\]&lt;/span&gt; 特别的，&lt;span class=&#34;math inline&#34;&gt;\(\exists x, y\in\mathbf Z\)&lt;/span&gt; 使得 &lt;span class=&#34;math display&#34;&gt;\[
ax + by = d
\]&lt;/span&gt; 证明：考虑若 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = d\)&lt;/span&gt; 成立，则 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = sd\)&lt;/span&gt;（其中 &lt;span class=&#34;math inline&#34;&gt;\(s\in \mathbb Z\)&lt;/span&gt;）也是成立的。所以先证明 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = d\)&lt;/span&gt; 成立。&lt;/p&gt;
&lt;p&gt;然后，假设其成立，则我们可以两边同时除以 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，得到 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;#39;x + b&amp;#39;y = 1\)&lt;/span&gt;，故我们证明其成立即可。&lt;/p&gt;
&lt;p&gt;我们构造一个解：回顾辗转相除法，设每次模出来的余数为 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt;，则我们有： &lt;span class=&#34;math display&#34;&gt;\[
(a_1, b_1) = (b_1, r_1) = (r_1, r_2) = \cdots (r_{n - 1}, r_n) = 1
\]&lt;/span&gt; 展开辗转相除过程中的运算： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a_1 &amp;amp;= q_1b_1 + r_1\\
b_1 &amp;amp;= q_2r_1 + r_2\\
r_1 &amp;amp;= q_3r_2 + r_3\\
&amp;amp;\cdots\\
r_{n - 3} &amp;amp;= q_{n - 1}r_{n - 2} + r_{n - 1}\\
r_{n - 2} &amp;amp;= q_{n}r_{n - 1} + r_n\\
r_{n - 1} &amp;amp;= q_{n + 1}r_n
\end{aligned}
\]&lt;/span&gt; 辗转相除到最后，&lt;span class=&#34;math inline&#34;&gt;\(r_n = 1\)&lt;/span&gt;，将所有的 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 换成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的形式： &lt;span class=&#34;math display&#34;&gt;\[
r_{n - 2} = x_nr_{n - 1} + 1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
r_{n - 2} - r_{n - 1}x_n = 1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后将倒数第三个式子 &lt;span class=&#34;math inline&#34;&gt;\(r_{n - 1} = r_{n - 3} - x_{n - 1}r_{n - 2}\)&lt;/span&gt; 代入，则 &lt;span class=&#34;math display&#34;&gt;\[
r_{n - 3}x_1 -  x_{n - 1}x_nr_{n - 2}  = r_{n - 2} - 1
\]&lt;/span&gt; 整理得 &lt;span class=&#34;math display&#34;&gt;\[
(1 + x_{n -1}x_n)r_{n - 2} - x_nr_{n - 3} = 1
\]&lt;/span&gt; 一步步回代，就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(ax+ by = 1\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;拓展到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个整数上，令 &lt;span class=&#34;math inline&#34;&gt;\(a_1,\cdots,a_n\in\mathbb Z\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{a_1,\cdots, a_n\} = d\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\forall x_i\in \mathbb Z\)&lt;/span&gt;，都有 &lt;span class=&#34;math display&#34;&gt;\[
d\mid \sum_{i = 1}^na_ix_i
\]&lt;/span&gt; &amp;gt; 例题 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4549&#34;&gt;P4549 【模板】裴蜀定理&lt;/a&gt; &amp;gt; &amp;gt; 给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 20\)&lt;/span&gt; 个元素，值域 &lt;span class=&#34;math inline&#34;&gt;\([-10^5, 10^5]\)&lt;/span&gt; 的整数序列 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，求一组整数 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^nA_iX_i\)&lt;/span&gt; 大于 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 且最小，输出这个最小值。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{A_i\}\mid \sum A_iX_i\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{A_i\}\)&lt;/span&gt; 即为答案。&lt;/p&gt;
&lt;h3 id=&#34;基于值域预处理的快速-gcd&#34;&gt;基于值域预处理的快速 GCD&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5435&#34;&gt;P5435 基于值域预处理的快速 GCD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 5000\)&lt;/span&gt; 以及 &lt;span class=&#34;math inline&#34;&gt;\(a_{1,\cdots, n}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b_{1,\cdots, n}\)&lt;/span&gt;。值域 &lt;span class=&#34;math inline&#34;&gt;\(10^6\)&lt;/span&gt;，对所有 &lt;span class=&#34;math inline&#34;&gt;\((i,j)\)&lt;/span&gt; 求出 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_i, b_j)\)&lt;/span&gt;。输出格式见原题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一个当询问 gcd 的次数巨大多而值域 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 有限（&lt;span class=&#34;math inline&#34;&gt;\(10^6\)&lt;/span&gt; 级别左右）时，可以 &lt;span class=&#34;math inline&#34;&gt;\(O(N)\)&lt;/span&gt; 预处理，&lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 回答单次询问的神奇方法。有些时候可以拯救你的常数。&lt;/p&gt;
&lt;p&gt;定义一个数集 &lt;span class=&#34;math inline&#34;&gt;\(\{a_1, \cdots, a_k\}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的分解当 &lt;span class=&#34;math inline&#34;&gt;\(\prod_{i =1}^ka_i = n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;引理：可以将值域内的每个数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 分解为 &lt;span class=&#34;math inline&#34;&gt;\(\{a, b, c\}\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a,b,c\le \sqrt n\)&lt;/span&gt; 或为质数。下面默认 &lt;span class=&#34;math inline&#34;&gt;\(a\le b\le c\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明：不妨设 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 不为质数且 &lt;span class=&#34;math inline&#34;&gt;\(c&amp;gt; \sqrt n\)&lt;/span&gt;。那么 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 显然可以分解为 &lt;span class=&#34;math inline&#34;&gt;\(\{d, e\}\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(d\le e\land d\le \sqrt n\)&lt;/span&gt;。而 &lt;span class=&#34;math inline&#34;&gt;\(a\times b= \dfrac nc&amp;lt; \sqrt n\)&lt;/span&gt;， 所以有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的分解 &lt;span class=&#34;math inline&#34;&gt;\(\{d, ab, e\}\)&lt;/span&gt;，于是乎可以这样一直分解下去到合法为止。&lt;/p&gt;
&lt;p&gt;然后对于询问 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x, y)\)&lt;/span&gt;，我们就分解 &lt;span class=&#34;math inline&#34;&gt;\(x = abc\)&lt;/span&gt;，分开考虑其贡献。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 对答案的贡献为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, y) = \gcd(a, y\bmod a)\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 除掉 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, y)\)&lt;/span&gt; 防止重复统计贡献，然后对 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 做同样的事情就可以了。&lt;/p&gt;
&lt;p&gt;现在的问题是如何在 &lt;span class=&#34;math inline&#34;&gt;\(O(N)\)&lt;/span&gt; 的时间内计算出每个数的分解。&lt;/p&gt;
&lt;p&gt;方法：对于 &lt;span class=&#34;math inline&#34;&gt;\(x = 1\)&lt;/span&gt;，显然为 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 1, 1\}\)&lt;/span&gt;；对于 &lt;span class=&#34;math inline&#34;&gt;\(x\ge 2\)&lt;/span&gt;，找到 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 以及 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac xp\)&lt;/span&gt; 的合法分解 &lt;span class=&#34;math inline&#34;&gt;\(\{a_0, b_0, c_0\}\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的一种合法分解为 &lt;span class=&#34;math inline&#34;&gt;\(\{a_0p, b_0, c_0\}\)&lt;/span&gt; 的升序排序。&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为质数时显然成立，为 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 1, x\}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p\le\sqrt[4]x\)&lt;/span&gt; 时，由于 &lt;span class=&#34;math inline&#34;&gt;\(a_0\le\sqrt[3]{\dfrac{x}{p}}\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(a_op\le \sqrt x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p &amp;gt; \sqrt[4]x\)&lt;/span&gt; 时：
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_0 = 1\)&lt;/span&gt; 时，有 &lt;span class=&#34;math inline&#34;&gt;\(a_0p = p\le \sqrt x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_0\ne 1\)&lt;/span&gt; 时，由于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 不为素数，所以 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac xp\)&lt;/span&gt; 的最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的第二小质因子，一定 &lt;span class=&#34;math inline&#34;&gt;\(\ge p\)&lt;/span&gt;。我们又可以知道 &lt;span class=&#34;math inline&#34;&gt;\(p \le q\le a_0\le b_0\le c_0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(pa_0b_0c_0 &amp;gt; (\sqrt[4]x)^4 = x\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(pa_0b_0c_0 = x\)&lt;/span&gt; 矛盾，故该情况不存在。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么线性筛的时候顺带用最小质因子更新，预处理 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt N\)&lt;/span&gt; 范围的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 数组即可。代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt;, T = &lt;span class=&#34;fl&#34;&gt;1e3&lt;/span&gt;, maxn = &lt;span class=&#34;dv&#34;&gt;5005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; isp[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], p[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], cnt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fac[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;], _gcd[T + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][T + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fac[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = fac[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fac[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, N) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) p[++cnt] = i, fac[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fac[i][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = i;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * p[j] &amp;lt;= N &amp;amp;&amp;amp; j &amp;lt;= cnt; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = i * p[j];&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            isp[tmp] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            fac[tmp][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] * p[j];&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], fac[tmp][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fac[tmp][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] &amp;gt; fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) myswap(fac[tmp][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt; fac[tmp][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]) myswap(fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], fac[tmp][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, T) _gcd[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = _gcd[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = i;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, T)&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i)&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            _gcd[i][j] = _gcd[j][i] = _gcd[j][i % j];&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fac[x][i] &amp;lt;= T) d = _gcd[fac[x][i]][y % fac[x][i]];&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y % fac[x][i] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) d = fac[x][i];&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; d = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y /= d;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans *= d;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;类欧几里得算法&#34;&gt;类欧几里得算法&lt;/h3&gt;
&lt;p&gt;是一个比较阴间的东西。详细全文见&lt;a href=&#34;https://oi.imyangty.com/note-akin-euclidean-algo&#34;&gt;类欧学习笔记&lt;/a&gt;。该算法由洪华敦（SkyDec）于 WC2016 员交提出。递归过程类似于辗转相除，故称为”类“欧几里得。一般可以求直线下整点之类的问题。&lt;/p&gt;
&lt;p&gt;不是很重要的板块，大致了解其推导思想即可。&lt;/p&gt;
&lt;h4 id=&#34;基本形式&#34;&gt;基本形式&lt;/h4&gt;
若令 &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c} \right\rfloor
\]&lt;/span&gt; 则若我们令 &lt;span class=&#34;math inline&#34;&gt;\(m = \displaystyle\left\lfloor\frac{an + b}{c}\right\rfloor\)&lt;/span&gt;，有 $$ f(a, b, c, n) =
&lt;span class=&#34;math display&#34;&gt;\[\begin{cases}
\displaystyle \frac{n(n + 1)}{2}\left\lfloor\frac ac\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor + f(a\bmod c, b\bmod c, c, n) &amp;amp; a\ge c\lor b\ge c\\
\displaystyle nm - f(c, c - b - 1, a, m - 1)&amp;amp;\text{otherwise}

\end{cases}\]&lt;/span&gt;
&lt;p&gt;$$ 而 &lt;span class=&#34;math inline&#34;&gt;\(f(a, b, c, n)\)&lt;/span&gt; 的意义即为直线 &lt;span class=&#34;math inline&#34;&gt;\(y = \dfrac{ai + b}{c}\)&lt;/span&gt; 下方整点的个数。&lt;/p&gt;
&lt;h4 id=&#34;简要推导&#34;&gt;简要推导&lt;/h4&gt;
&lt;p&gt;该问题较为复杂，不妨一步步考虑起。假设 &lt;span class=&#34;math inline&#34;&gt;\(a\ge c\lor b\ge c\)&lt;/span&gt;，则我们可以先将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 取模，即 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(a, b, c, n) &amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c}\right\rfloor\\
&amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{(\left\lfloor\frac a c\right\rfloor c + a\bmod c)i + \left\lfloor\frac b c\right\rfloor c + b\bmod c}{c}\right\rfloor\\
&amp;amp;= \frac{n(n + 1)}{2}\left\lfloor\frac ac\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor + f(a\bmod c, b\bmod c, c, n)
\end{aligned}
\]&lt;/span&gt; 然后问题就变成了 &lt;span class=&#34;math inline&#34;&gt;\(a,b&amp;lt; c\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;先考虑拆分贡献，将 $ $ 拆成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{j = 0}^{\left\lfloor\frac{ai + b}{c} \right\rfloor - 1}1\)&lt;/span&gt; 的形式，随后调换求和顺序，使得 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 不受 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 限制，&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{j = 0}^{\left\lfloor\frac{an + b}{c} \right\rfloor}\sum_{i = 0}^n\left[j &amp;lt; \left\lfloor\frac{ai + b}{c} \right\rfloor\right]\)&lt;/span&gt;，之后就是化简这个不等式，不等式的化简过程如下： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;j &amp;lt; \left\lfloor\frac{ai + b}{c} \right\rfloor\\
\iff &amp;amp; j + 1\le\left\lfloor\frac{ai + b}{c} \right\rfloor\\
\iff &amp;amp; j + 1\le \frac{ai + b}{c}\\
\iff &amp;amp; j c + c\le ai + b\\
\iff &amp;amp; jc + c - b\le ai\\
\iff &amp;amp; jc + c - b - 1 &amp;lt; ai\\
\iff &amp;amp; \left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor &amp;lt; i
\end{aligned}
\]&lt;/span&gt; 中间用到了几步比较巧妙的放缩。然后 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 就没了，令 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle m = \left\lfloor\frac{an + b}{c}\right\rfloor\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle f(a, b, c, n) = \sum_{j = 0}^{m - 1}\left(n - \left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor\right)\)&lt;/span&gt;，拆开来发现其实其就是一个子问题。所以得到答案 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle f(a, b, c, n) = nm - f(c, c - b - 1, a, m - 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;写成代码就是下面这样，边界是 &lt;span class=&#34;math inline&#34;&gt;\(a = 0\)&lt;/span&gt;：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b / c * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a &amp;gt;= c || b &amp;gt;= c) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (a / c) + (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (b / c) + f(a % c, b % c, c, n);&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = (a * n + b) / c;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * m - f(c, c - b - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;扩展形式&#34;&gt;扩展形式&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(a, b, c, n) &amp;amp;= \sum_{i = 0}^ni\left\lfloor\frac{ai + b}{c}\right\rfloor\\
h(a, b, c, n) &amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c}\right\rfloor^2\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这两个函数的计算大同小异。都是分别考虑 &lt;span class=&#34;math inline&#34;&gt;\(a\ge c\lor b\ge c\)&lt;/span&gt; 并取模化简，然后一步步化简式子化成子问题。&lt;/p&gt;
&lt;p&gt;直接放结论： &lt;span class=&#34;math display&#34;&gt;\[
g(a,b,c,n) = \begin{cases}
\displaystyle\left\lfloor\frac ac\right\rfloor\frac{n(n + 1)(2n + 1)}{6} + \left\lfloor\frac bc\right\rfloor\frac{n(n + 1)}{2} + g(a\bmod c, b\bmod c, c, n) &amp;amp; a\ge c\lor b\ge c\\
\displaystyle\frac 12\left(mn(n + 1) - h(c, c - b - 1, a, m - 1) - f(c, c - b - 1, a, m - 1) \right)&amp;amp;\text{otherwise}
\end{cases}
\]&lt;/span&gt; 很阴间。 &lt;span class=&#34;math display&#34;&gt;\[
h(a, b, c, n) =
\begin{cases}
\begin{aligned}
&amp;amp;\left\lfloor\frac ac\right\rfloor^2\frac{n(n + 1)(2n + 1)}{6} + n(n + 1)\left\lfloor\frac ac\right\rfloor\left\lfloor\frac bc\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor^2 + \\&amp;amp;+2\left\lfloor\frac ac\right\rfloor g(a\bmod c, b\bmod c, c, n) + 2\left\lfloor\frac bc\right\rfloor f(a\bmod c, b\bmod c, c, n) \\
&amp;amp;+ h(a\bmod c, b\bmod c, c, n)
\end{aligned}&amp;amp;a\ge c\lor b\ge c\\\\\\
nm(m + 1) - 2g(c, c - b - 1, a, m - 1)\\
- 2f(c, c - b - 1, m - 1) - f(a, b, c, n)&amp;amp;\text{otherwise}
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;应用&#34;&gt;应用&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5170&#34;&gt;P5170 【模板】类欧几里得算法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求上文的 &lt;span class=&#34;math inline&#34;&gt;\(f,g,h\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;写在一起，一起递归计算即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5171&#34;&gt;P5171 Earthquake&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le a,b\le 10^9\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(0\le c\le \min(a,b)\times 10^9\)&lt;/span&gt;。求 &lt;span class=&#34;math inline&#34;&gt;\(ax + by\le c\)&lt;/span&gt; 的非负整数解个数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;稍加转化：&lt;span class=&#34;math inline&#34;&gt;\(ax+by\le c\implies y\le \displaystyle\left\lfloor\frac{c - ax}{b}\right\rfloor\)&lt;/span&gt;。所以实际上要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=0}^{\lfloor a/c\rfloor}1 + \left\lfloor\frac{c - ai}{b}\right\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(-ai\)&lt;/span&gt; 的形式无法直接处理，那么就考虑在分子加上 &lt;span class=&#34;math inline&#34;&gt;\(bi\)&lt;/span&gt; 然后在外面减掉 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor bi / b\rfloor = i\)&lt;/span&gt;。假设 &lt;span class=&#34;math inline&#34;&gt;\(b &amp;gt; a\)&lt;/span&gt;（若不满足就 swap 之）可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=0}^{\lfloor c / a\rfloor}\left\lfloor\frac{(b - a)i + c}{b} \right\rfloor - \frac{\lfloor c /a\rfloor\times (\lfloor c / a\rfloor + 1)}{2} + \lfloor c / a\rfloor
\]&lt;/span&gt; 前半截直接类欧，后半截直接算。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1098E&#34;&gt;CF1098E Fedya the Potter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1182F&#34;&gt;CF1182F Maximum Sine&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;素数&#34;&gt;素数&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;定义见上文。&lt;/p&gt;
&lt;p&gt;关于素数密度，有如下重要结论：设小于等于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的素数有 &lt;span class=&#34;math inline&#34;&gt;\(\pi(x)\)&lt;/span&gt; 个，则 &lt;span class=&#34;math display&#34;&gt;\[
\pi(x)\sim\frac{n}{\ln n}
\]&lt;/span&gt; 估计素数个数上很有用。&lt;/p&gt;
&lt;h3 id=&#34;筛法&#34;&gt;筛法&lt;/h3&gt;
&lt;p&gt;想要找出 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 内所有的数字，一般有如下两种方法：&lt;/p&gt;
&lt;h4 id=&#34;eratosthenes-筛法&#34;&gt;Eratosthenes 筛法&lt;/h4&gt;
&lt;p&gt;一般称为埃筛。思想：合数的倍数一定是合数，而质数的 &lt;span class=&#34;math inline&#34;&gt;\(\ge 2\)&lt;/span&gt; 倍数一定是合数。&lt;/p&gt;
&lt;p&gt;所以算法流程就是，当碰到一个质数时，标记其全部倍数。当碰到合数时直接跳过不管。&lt;/p&gt;
&lt;p&gt;时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log\log n)\)&lt;/span&gt;，暂时不要求掌握其证明。&lt;/p&gt;
&lt;p&gt;埃筛的应用其实有限，但是在 Dirichlet 前缀和还是运用到了其思想的。&lt;/p&gt;
&lt;h4 id=&#34;欧拉线性筛&#34;&gt;欧拉线性筛&lt;/h4&gt;
&lt;p&gt;上面的埃筛虽然实际跑的不慢，但当 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 达到 &lt;span class=&#34;math inline&#34;&gt;\(10^7\)&lt;/span&gt; 以至 &lt;span class=&#34;math inline&#34;&gt;\(10^8\)&lt;/span&gt; 级别时仍然会显得很吃力。&lt;/p&gt;
&lt;p&gt;我们考虑，如果每个合数只被其最小的质因子筛去，是不是时间复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;p&gt;算法流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遇到一个没被筛过的数时，其肯定为质数，标记一下。&lt;/li&gt;
&lt;li&gt;然后枚举已经有过的素数 &lt;span class=&#34;math inline&#34;&gt;\(p_j\)&lt;/span&gt;，标记 &lt;span class=&#34;math inline&#34;&gt;\(i\times p_j\)&lt;/span&gt; 为合数，&lt;strong&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p_j\mid i\)&lt;/span&gt; 时结束循环&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) pri[++cnt] = i;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= cnt &amp;amp;&amp;amp; i * pri[j] &amp;lt;= n; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        isp[i * pri[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!(i % pri[j])) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解释一下这样做的原理：我们注意到 &lt;span class=&#34;math inline&#34;&gt;\(p_j\mid i\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(p_j\)&lt;/span&gt; 一定是 &lt;span class=&#34;math inline&#34;&gt;\(i\times p_j\)&lt;/span&gt; 的最小质因子，因为如果存在更小的，一定会被先枚举到。由于一个合数需要被其最小质因子筛去，所以此时需要结束循环。&lt;/p&gt;
&lt;p&gt;本方法不仅可以筛质数，还可以求很多积性函数的值。&lt;strong&gt;每个合数都被其最小质因子筛去&lt;/strong&gt;这一关键性质决定了其极强的扩展性，详见下文筛法部分。&lt;/p&gt;
&lt;h3 id=&#34;素性测试&#34;&gt;素性测试&lt;/h3&gt;
&lt;h4 id=&#34;暴力判断&#34;&gt;暴力判断&lt;/h4&gt;
&lt;p&gt;我们可以 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 来判断单个数是不是质数。&lt;/p&gt;
&lt;p&gt;涉及到多个数的判断的话可以使用线性筛。&lt;/p&gt;
&lt;p&gt;但是如果数很大（&lt;span class=&#34;math inline&#34;&gt;\(10^{18}\)&lt;/span&gt; 级别）的话我们还是需要使用&lt;em&gt;概率性素性测试&lt;/em&gt;通过牺牲一部分正确率来换取更高的效率。&lt;/p&gt;
&lt;h4 id=&#34;fermat-素性测试&#34;&gt;Fermat 素性测试&lt;/h4&gt;
&lt;p&gt;根据下文提到的费马小定理，对于质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 和正整数 &lt;span class=&#34;math inline&#34;&gt;\(a &amp;lt; p\)&lt;/span&gt; 一定有 &lt;span class=&#34;math inline&#34;&gt;\(a^{p - 1}\equiv 1\pmod p\)&lt;/span&gt;，所以为了判断 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的素性，可以不断选取 &lt;span class=&#34;math inline&#34;&gt;\([2, n - 1]\)&lt;/span&gt; 中的基 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 然后判断是否有 &lt;span class=&#34;math inline&#34;&gt;\(a^{n - 1}\equiv 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;但是由于费马小定理的逆定理不存在，所以上述方法可能会错误判断。例如若 &lt;span class=&#34;math inline&#34;&gt;\(a^{n - 1}\equiv 1\pmod n\)&lt;/span&gt; 但 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 不是素数，则称 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为底的伪素数。同时还存在一类合数满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall a\perp n\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(a^{n -1}\equiv 1\)&lt;/span&gt; 成立，这样的数被称为&lt;em&gt;卡迈克尔数&lt;/em&gt;。&lt;/p&gt;
&lt;h4 id=&#34;miller-rabin-素性测试&#34;&gt;Miller-Rabin 素性测试&lt;/h4&gt;
&lt;p&gt;实战中可以使用的一种高效素数判断方法，对 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 进行 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 轮测试的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(k\log^3n)\)&lt;/span&gt;，且基本不会出错。&lt;/p&gt;
&lt;p&gt;二次探测定理：若 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为奇素数，则 &lt;span class=&#34;math inline&#34;&gt;\(x^2\equiv 1\pmod p\)&lt;/span&gt; 的解为 &lt;span class=&#34;math inline&#34;&gt;\(x\equiv \pm1\pmod p\)&lt;/span&gt;。证明考虑移项出 &lt;span class=&#34;math inline&#34;&gt;\((x + 1)(x - 1) \equiv 0\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;那么我们就将 Fermat 素性测试和二次探测定理联合起来使用，考虑将 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 分解成 &lt;span class=&#34;math inline&#34;&gt;\(u\times 2^t\)&lt;/span&gt;，然后先求出 &lt;span class=&#34;math inline&#34;&gt;\(a^u\pmod n\)&lt;/span&gt;，之后对他进行 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 次平方操作，若中途发现非平凡平方根则其不是素数，否则通过本轮测试。&lt;/p&gt;
&lt;p&gt;取 &lt;span class=&#34;math inline&#34;&gt;\(A = \{2,3,5,7,11,13,17,19,23\}\)&lt;/span&gt; 便可通过绝大部分数据。&lt;del&gt;&lt;strong&gt;给我背板子！&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll a[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll base, ll exp, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(base) * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(ret) * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; isPrime(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == a[i]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; || !(n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, u = n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j;&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!(u &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) u &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++t;&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll v = qPow(a[i], u, n);&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= t; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            v = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(v) * v % n;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;gt; t) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-29&#34;&gt;&lt;a href=&#34;#cb9-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-30&#34;&gt;&lt;a href=&#34;#cb9-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-31&#34;&gt;&lt;a href=&#34;#cb9-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-32&#34;&gt;&lt;a href=&#34;#cb9-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb9-33&#34;&gt;&lt;a href=&#34;#cb9-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll x;&lt;/span&gt;
&lt;span id=&#34;cb9-34&#34;&gt;&lt;a href=&#34;#cb9-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; x) puts(isPrime(x) ? &lt;span class=&#34;st&#34;&gt;&amp;quot;Y&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;N&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-35&#34;&gt;&lt;a href=&#34;#cb9-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-36&#34;&gt;&lt;a href=&#34;#cb9-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;质因数分解&#34;&gt;质因数分解&lt;/h3&gt;
&lt;p&gt;Pollard-Rho 会在 NOI 前重构。&lt;/p&gt;
&lt;h4 id=&#34;朴素分解&#34;&gt;朴素分解&lt;/h4&gt;
&lt;p&gt;最最最朴素的枚举因子然后 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 的分解方法略。&lt;/p&gt;
&lt;p&gt;需注意：若提前打好了质数表，复杂度降为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle O\left(\sqrt{\frac{n}{\ln n}}\right)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^{18}\)&lt;/span&gt; 级别时其显得无能为力。故我们还是考虑牺牲正确性来换取性能，考虑如何求出一个数的非平凡因子。&lt;/p&gt;
&lt;p&gt;有一个最朴素的随机算法：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; T rnd(T l, T r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; mt19937 eng(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; r) swpa(l, r);&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    uniform_int_distribution&amp;lt;T&amp;gt; dis(l, r);&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dis(eng);&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll findFact(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (isPrime(n)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll x;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;do&lt;/span&gt; x = rnd(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n % x);&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个想法确实非常的蠢（类比猴子排序），但这确实是 Pollard-Rho 算法的基础。&lt;/p&gt;
&lt;h4 id=&#34;生日悖论&#34;&gt;生日悖论&lt;/h4&gt;
&lt;p&gt;一个房间里有 23 个人，则他们中有两人生日相同的概率超过一半，这应该是个很经典的 fun fact。&lt;/p&gt;
&lt;p&gt;这启示我们，对于一个 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的随机整数生成器，生成序列中第一个重复数字前期望有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{\dfrac{\pi n}{2}}\)&lt;/span&gt; 个数，这里是&lt;a href=&#34;https://www.zhihu.com/question/367513670/answer/991562741&#34;&gt;证明&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这告诉我们，&lt;strong&gt;采用“组合随机采样”的方法，满足答案的组合比单体个数要多&lt;/strong&gt;，所以可以提高正确率。回到原来的问题，发现一个很关键的性质：&lt;span class=&#34;math inline&#34;&gt;\(\forall k\in\mathbb N, \gcd(k,n)\mid n\)&lt;/span&gt;。所以只要选到恰当的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(k, n) &amp;gt; 1\)&lt;/span&gt; 即可求得一个非平凡因子。关键是，这样的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的个数还不少。&lt;/p&gt;
&lt;p&gt;不妨选一组数 &lt;span class=&#34;math inline&#34;&gt;\(x_1,\cdots, x_m\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(|x_i - x_j|, n)&amp;gt; 1\)&lt;/span&gt;，则我们可以直接返回 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(|x_i - x_j|, n)\)&lt;/span&gt;，而如何选数显得尤为必要。&lt;/p&gt;
&lt;h4 id=&#34;伪随机函数&#34;&gt;伪随机函数&lt;/h4&gt;
&lt;p&gt;Pollard-Rho 算法使用了些技巧，通过 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = (x^2 + c)\bmod n\)&lt;/span&gt; 来生成一个随机数序列 &lt;span class=&#34;math inline&#34;&gt;\(\{x_i\}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 为随机出来的常数。&lt;/p&gt;
&lt;p&gt;随机一个 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(i\ge 2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x_i = f(x_{i - 1})\)&lt;/span&gt;，可以近似认为他随机。但是会发现其会进入一个环（所以叫做 &lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt; 算法）。例如取 &lt;span class=&#34;math inline&#34;&gt;\(c = 2, x_1 = 1\)&lt;/span&gt; 的情况： &lt;span class=&#34;math display&#34;&gt;\[
1,3,11,23,31, 11,23,31,\cdots
\]&lt;/span&gt; #### Floyd 判环&lt;/p&gt;
&lt;p&gt;“龟兔赛跑”。用两个数 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;，初始时 &lt;span class=&#34;math inline&#34;&gt;\(t = r = 1\)&lt;/span&gt;，然后每次兔子跳两格，乌龟走一步：&lt;span class=&#34;math inline&#34;&gt;\(x_t = x_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x_{r} = x_{2i}\)&lt;/span&gt;。注意到他们迟早是会相遇的。&lt;/p&gt;
&lt;p&gt;所以可以写出如下代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll findFact(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll c = rnd(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll t = f(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, c, n), r = f(f(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, c, n), c, n);&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t != r) {&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll d = gcd(myabs(t - r), n);&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t = f(t, c, n), r = f(f(r, c, n), c, n);&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;优化&#34;&gt;优化&lt;/h4&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的个数太多了，求一次就是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;，需要优化。&lt;/p&gt;
&lt;p&gt;考虑若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x, n)&amp;gt;1\)&lt;/span&gt; 则 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(xy, n) &amp;gt; 1\)&lt;/span&gt;，更进一步的有 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(xy\bmod n, n) &amp;gt; 1\)&lt;/span&gt;。所以可以将所有的 &lt;span class=&#34;math inline&#34;&gt;\(|t - r|\)&lt;/span&gt; 在模意义下相乘，再做 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑倍增以避免 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 过多或者在环上停留过久。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll findFact(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll c = rnd(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; step = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; ; goal &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, s = t, val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (step = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; step &amp;lt;= goal; ++step) {&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t = f(t, c, n);&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(val) * myabs(t - s) % n;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (step % &lt;span class=&#34;dv&#34;&gt;127&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll d = gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll d = gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-18&#34;&gt;&lt;a href=&#34;#cb12-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb12-19&#34;&gt;&lt;a href=&#34;#cb12-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面是 &lt;a href=&#34;https://judge.yosupo.jp/problem/factorize&#34;&gt;Library Checker 质因数分解&lt;/a&gt;的模板实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll a[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;ll&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll base, ll exp, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(base) * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(ret) * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; isPrime(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] == n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; || !(n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, u = n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!(u &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) u &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++t;&lt;/span&gt;
&lt;span id=&#34;cb13-22&#34;&gt;&lt;a href=&#34;#cb13-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-23&#34;&gt;&lt;a href=&#34;#cb13-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll v = qPow(a[i], u, n), j;&lt;/span&gt;
&lt;span id=&#34;cb13-24&#34;&gt;&lt;a href=&#34;#cb13-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-25&#34;&gt;&lt;a href=&#34;#cb13-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= t; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb13-26&#34;&gt;&lt;a href=&#34;#cb13-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-27&#34;&gt;&lt;a href=&#34;#cb13-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            v = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(v) * v % n;&lt;/span&gt;
&lt;span id=&#34;cb13-28&#34;&gt;&lt;a href=&#34;#cb13-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-29&#34;&gt;&lt;a href=&#34;#cb13-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;gt; t) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-30&#34;&gt;&lt;a href=&#34;#cb13-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-31&#34;&gt;&lt;a href=&#34;#cb13-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-32&#34;&gt;&lt;a href=&#34;#cb13-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-33&#34;&gt;&lt;a href=&#34;#cb13-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-34&#34;&gt;&lt;a href=&#34;#cb13-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f(ll x, ll c, ll mod) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(x) * x % mod + c) % mod;}&lt;/span&gt;
&lt;span id=&#34;cb13-35&#34;&gt;&lt;a href=&#34;#cb13-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll rnd(ll l, ll r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-36&#34;&gt;&lt;a href=&#34;#cb13-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; mt19937_64 eng(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-37&#34;&gt;&lt;a href=&#34;#cb13-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; r) swap(l, r);&lt;/span&gt;
&lt;span id=&#34;cb13-38&#34;&gt;&lt;a href=&#34;#cb13-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    uniform_int_distribution&amp;lt;ll&amp;gt; dis(l, r);&lt;/span&gt;
&lt;span id=&#34;cb13-39&#34;&gt;&lt;a href=&#34;#cb13-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dis(eng);&lt;/span&gt;
&lt;span id=&#34;cb13-40&#34;&gt;&lt;a href=&#34;#cb13-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-41&#34;&gt;&lt;a href=&#34;#cb13-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-42&#34;&gt;&lt;a href=&#34;#cb13-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll pollardRho(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb13-43&#34;&gt;&lt;a href=&#34;#cb13-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll c = rnd(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-44&#34;&gt;&lt;a href=&#34;#cb13-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-45&#34;&gt;&lt;a href=&#34;#cb13-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; step = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-46&#34;&gt;&lt;a href=&#34;#cb13-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; ; goal &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, s = t, val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-47&#34;&gt;&lt;a href=&#34;#cb13-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (step = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; step &amp;lt;= goal; ++step) {&lt;/span&gt;
&lt;span id=&#34;cb13-48&#34;&gt;&lt;a href=&#34;#cb13-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t = f(t, c, n);&lt;/span&gt;
&lt;span id=&#34;cb13-49&#34;&gt;&lt;a href=&#34;#cb13-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(val) * &lt;span class=&#34;fu&#34;&gt;__builtin_llabs&lt;/span&gt;(s - t) % n;&lt;/span&gt;
&lt;span id=&#34;cb13-50&#34;&gt;&lt;a href=&#34;#cb13-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (step % &lt;span class=&#34;dv&#34;&gt;127&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-51&#34;&gt;&lt;a href=&#34;#cb13-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll d = __gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb13-52&#34;&gt;&lt;a href=&#34;#cb13-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb13-53&#34;&gt;&lt;a href=&#34;#cb13-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb13-54&#34;&gt;&lt;a href=&#34;#cb13-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-55&#34;&gt;&lt;a href=&#34;#cb13-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll d = __gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb13-56&#34;&gt;&lt;a href=&#34;#cb13-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb13-57&#34;&gt;&lt;a href=&#34;#cb13-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-58&#34;&gt;&lt;a href=&#34;#cb13-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-59&#34;&gt;&lt;a href=&#34;#cb13-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-60&#34;&gt;&lt;a href=&#34;#cb13-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;ll&amp;gt; work(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb13-61&#34;&gt;&lt;a href=&#34;#cb13-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {};&lt;/span&gt;
&lt;span id=&#34;cb13-62&#34;&gt;&lt;a href=&#34;#cb13-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (isPrime(n)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {n};&lt;/span&gt;
&lt;span id=&#34;cb13-63&#34;&gt;&lt;a href=&#34;#cb13-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll p = n;&lt;/span&gt;
&lt;span id=&#34;cb13-64&#34;&gt;&lt;a href=&#34;#cb13-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p &amp;gt;= n) p = pollardRho(n);&lt;/span&gt;
&lt;span id=&#34;cb13-65&#34;&gt;&lt;a href=&#34;#cb13-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;ll&amp;gt; tmp = work(p), ret;&lt;/span&gt;
&lt;span id=&#34;cb13-66&#34;&gt;&lt;a href=&#34;#cb13-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n % p == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-67&#34;&gt;&lt;a href=&#34;#cb13-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : tmp) ret.emplace_back(x);&lt;/span&gt;
&lt;span id=&#34;cb13-68&#34;&gt;&lt;a href=&#34;#cb13-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n /= p;&lt;/span&gt;
&lt;span id=&#34;cb13-69&#34;&gt;&lt;a href=&#34;#cb13-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-70&#34;&gt;&lt;a href=&#34;#cb13-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tmp = work(n);&lt;/span&gt;
&lt;span id=&#34;cb13-71&#34;&gt;&lt;a href=&#34;#cb13-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : tmp) ret.emplace_back(x);&lt;/span&gt;
&lt;span id=&#34;cb13-72&#34;&gt;&lt;a href=&#34;#cb13-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb13-73&#34;&gt;&lt;a href=&#34;#cb13-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-74&#34;&gt;&lt;a href=&#34;#cb13-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-75&#34;&gt;&lt;a href=&#34;#cb13-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb13-76&#34;&gt;&lt;a href=&#34;#cb13-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb13-77&#34;&gt;&lt;a href=&#34;#cb13-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb13-78&#34;&gt;&lt;a href=&#34;#cb13-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll n; cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb13-79&#34;&gt;&lt;a href=&#34;#cb13-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; ans = work(n);&lt;/span&gt;
&lt;span id=&#34;cb13-80&#34;&gt;&lt;a href=&#34;#cb13-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sort(ans.begin(), ans.end());&lt;/span&gt;
&lt;span id=&#34;cb13-81&#34;&gt;&lt;a href=&#34;#cb13-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; ans.size() &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-82&#34;&gt;&lt;a href=&#34;#cb13-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : ans) cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-83&#34;&gt;&lt;a href=&#34;#cb13-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb13-84&#34;&gt;&lt;a href=&#34;#cb13-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-85&#34;&gt;&lt;a href=&#34;#cb13-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-86&#34;&gt;&lt;a href=&#34;#cb13-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;反素数&#34;&gt;反素数&lt;/h3&gt;
&lt;h2 id=&#34;基础整除理论&#34;&gt;基础整除理论&lt;/h2&gt;
&lt;h3 id=&#34;同余类与剩余系&#34;&gt;同余类与剩余系&lt;/h3&gt;
&lt;p&gt;同余类（也称剩余类），指全体整数按照对一个正整数的同余关系而分成的类。具体地，设 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为给定正整数，&lt;span class=&#34;math inline&#34;&gt;\(C_r(r = 0,1,\cdots, m -1)\)&lt;/span&gt; 表示形如 &lt;span class=&#34;math inline&#34;&gt;\(qm + r\)&lt;/span&gt; 的整数构成的集合，其中 &lt;span class=&#34;math inline&#34;&gt;\(q\in\mathbb Z\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(C_0,\cdots, C_{m - 1}\)&lt;/span&gt; 称为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的同余类。&lt;/p&gt;
&lt;p&gt;相当于，每个整数被包含在一个类中，且同一个类内的元素彼此模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 同余。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(a_0,\cdots, a_{m - 1}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个整数，当他们两两之间都不在同一个同余类中，我们就称其为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的一个&lt;strong&gt;完全剩余系&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;若剩余系内的每个元素均与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 互质，则称其为&lt;strong&gt;简化剩余系/缩系/既约剩余系&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;乘法逆元&#34;&gt;乘法逆元&lt;/h3&gt;
&lt;h4 id=&#34;定义&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;又叫做数论倒数。若 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv1\pmod p\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 关于模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的乘法逆元，记作 &lt;span class=&#34;math inline&#34;&gt;\(x = a^{-1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;从群论的角度考虑的话：&lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为群 &lt;span class=&#34;math inline&#34;&gt;\((\mathbb Z_p, \times)\)&lt;/span&gt; 的单位元，&lt;span class=&#34;math inline&#34;&gt;\(ax\equiv1\)&lt;/span&gt; 即意味着 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的逆元。&lt;/p&gt;
&lt;p&gt;一般来说，我们如果要计算 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac ab\pmod p\)&lt;/span&gt;， 那么我们可以考虑计算 &lt;span class=&#34;math inline&#34;&gt;\(a\times b^{-1}\pmod p\)&lt;/span&gt;，这即为有理数取模的意义。&lt;/p&gt;
&lt;h4 id=&#34;求单个逆元&#34;&gt;求单个逆元&lt;/h4&gt;
&lt;p&gt;求逆元是一个很重要的话题，是做大多数组合题/数论题的基础。&lt;/p&gt;
&lt;p&gt;第一种方法是当 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数时，用下面提到的费马小定理可以得到 &lt;span class=&#34;math display&#34;&gt;\[
a^{-1} \equiv a^{p - 2}\pmod p
\]&lt;/span&gt; 于是我们在模意义下求一个快速幂即可。&lt;/p&gt;
&lt;p&gt;第二种方法较为通用，我们列出方程 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv 1\pmod p\)&lt;/span&gt;，然后转化为不定方程 &lt;span class=&#34;math inline&#34;&gt;\(ax + py = 1\)&lt;/span&gt;，使用 exgcd 来求解 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的值。同时我们可以注意到，这个方程有解等价于 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt;。故当 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt; 时其关于模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的逆元才存在。&lt;/p&gt;
&lt;h4 id=&#34;线性求逆元&#34;&gt;线性求逆元&lt;/h4&gt;
&lt;p&gt;有一个很重要的技巧：线性求 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的逆元。我们如果每个单独的求的话，复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(n\log n\)&lt;/span&gt;，在 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^7\)&lt;/span&gt; 时显然是不够用的。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(p=ki+r\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k=\lfloor \frac p i\rfloor\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(r=p\bmod i\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(1&amp;lt;r&amp;lt;i&amp;lt;p\)&lt;/span&gt;。则在模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 意义下有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
ki+r\equiv 0\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;两边同时乘以 &lt;span class=&#34;math inline&#34;&gt;\(r^{-1}i^{-1}\)&lt;/span&gt;，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
kr^{-1}+i^{-1}\equiv0\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;移项，&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
i^{-1}\equiv-kr^{-1}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代入 &lt;span class=&#34;math inline&#34;&gt;\(k=\lfloor \frac p i\rfloor\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(r=p\bmod i\)&lt;/span&gt;，有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
i^{-1}\equiv -\lfloor \frac p i\rfloor(p\bmod i)^{-1}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于要保证 &lt;span class=&#34;math inline&#34;&gt;\(i^{-1}&amp;gt;0\)&lt;/span&gt;，在最终式子的右边加上 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(p\equiv 0\pmod p\)&lt;/span&gt;），最终的式子就是：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
i^{-1}\equiv p-\lfloor \frac p i\rfloor(p\bmod i)^{-1}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;令 &lt;code&gt;inv[i]&lt;/code&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i^{-1}\)&lt;/span&gt; 则递推式如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= n; i++)&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    inv[i] = (p - p / i) * inv[p % i] % p;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;事实上，这个东西没有必要记忆，在下文学习阶乘逆元后可以用更自然的方法求出来。本法的扩展性不如下面的方法强。&lt;/p&gt;
&lt;h4 id=&#34;阶乘逆元&#34;&gt;阶乘逆元&lt;/h4&gt;
&lt;p&gt;求组合数的时候经常用得到。&lt;/p&gt;
&lt;p&gt;首先可以把模意义下的阶乘全部求出来，然后快速幂求一下 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 的逆元。&lt;/p&gt;
&lt;p&gt;然后有 &lt;span class=&#34;math display&#34;&gt;\[
(i!)^{-1} = (i + 1)\times((i + 1)!)^{-1}
\]&lt;/span&gt; 显然，不证。推就推完了。我们还可以得到 &lt;span class=&#34;math inline&#34;&gt;\(i^{-1} = (i - 1)!\times (i!)^{-1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这种方法非常好理解并且有较好的扩展性，一定要牢记。&lt;/p&gt;
&lt;p&gt;小小扩展一下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5431&#34;&gt;P5431 【模板】乘法逆元 2&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;实际上就是类似于阶乘逆元的方法。我们考虑求一个前缀积，然后给最后一个 &lt;span class=&#34;math inline&#34;&gt;\(s_n\)&lt;/span&gt; 求一个逆元，之后就可以一步步倒推回去求出 &lt;span class=&#34;math inline&#34;&gt;\(a_i^{-1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;欧拉函数&#34;&gt;欧拉函数&lt;/h3&gt;
&lt;h4 id=&#34;定义-1&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;Euler’s totient function，&lt;span class=&#34;math inline&#34;&gt;\(\varphi(n)\)&lt;/span&gt;，表示 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互质的数的个数。即 &lt;span class=&#34;math display&#34;&gt;\[
\varphi(n) = \sum_{i = 1}^n[i\perp p]
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;性质&#34;&gt;性质&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;欧拉函数是积性函数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n = \sum_{d\mid n}\varphi(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;该点可以在下文中的莫比乌斯反演处进行进一步学习。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall n \gt 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\([1,n]\)&lt;/span&gt; 中与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互质的数之和为 &lt;span class=&#34;math inline&#34;&gt;\(n\varphi(n)/2\)&lt;/span&gt;。简证：与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 不互质的数 &lt;span class=&#34;math inline&#34;&gt;\(x,n-x\)&lt;/span&gt; 成对出现，所以平均值为 &lt;span class=&#34;math inline&#34;&gt;\(n/2\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(n = p^k\)&lt;/span&gt;（下文中若 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不加说明则默认为质数），则 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = p^k - p^{k - 1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明考虑定义即可。&lt;span class=&#34;math inline&#34;&gt;\([1, p^k]\)&lt;/span&gt; 中除了 &lt;span class=&#34;math inline&#34;&gt;\(p^{k} / p = p^{k - 1}\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数外都与 &lt;span class=&#34;math inline&#34;&gt;\(p^k\)&lt;/span&gt; 互质。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;单个欧拉函数的计算&lt;/strong&gt;：令 &lt;span class=&#34;math inline&#34;&gt;\(n = \prod p_i^{c_i}\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\varphi(n) = n\prod(1 - \frac{1}{p_i})
\]&lt;/span&gt; 证明：由欧拉函数的积性，我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(n) &amp;amp;= \prod\varphi(p_i^{k_i})\\
&amp;amp;= \prod p_i^{k_i - 1}(p_i - 1)\\
&amp;amp;= \prod p_i^{k_i}(1 - \frac{1}{p_i})\\
&amp;amp;= n\prod(1 - \frac 1{p_i})
\end{aligned}
\]&lt;/span&gt; 所以我们在求单个欧拉函数值时，可以用下面的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; phi(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = n;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i * i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans / i * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) n /= i;&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans = ans / n * (n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;欧拉函数的线性筛法&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\varphi(1) = 1\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;质数：&lt;span class=&#34;math inline&#34;&gt;\(\varphi(p) = p - 1\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合数：我们知道每个合数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 都是被其最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 筛掉的，设 &lt;span class=&#34;math inline&#34;&gt;\(n = n&amp;#39;p\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\perp n&amp;#39;\)&lt;/span&gt; 时，由欧拉函数的积性显然有 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = \varphi(n&amp;#39;)(p - 1)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\not\perp n&amp;#39;\)&lt;/span&gt; 时，则 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 也是 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 的最小质因子，而且 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 包含了 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 所有的质因子。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(n) &amp;amp;= n\prod\frac{p_i - 1}{p_i}\\
&amp;amp;= pn&amp;#39;\prod\frac{p_i - 1}{p_i}\\
&amp;amp;= p\varphi(n&amp;#39;)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以就可以按照如下的代码线性求出 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的欧拉函数值。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init() {&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    phi[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i] = i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                phi[i * p[j]] = p[j] * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i * p[j]] = (p[j] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-17&#34;&gt;&lt;a href=&#34;#cb16-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-18&#34;&gt;&lt;a href=&#34;#cb16-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;欧拉函数的衰减速度是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log)\)&lt;/span&gt; 级别的。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;应用-1&#34;&gt;应用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;（扩展）欧拉定理中有应用。&lt;/li&gt;
&lt;li&gt;在莫比乌斯反演中扮演重要角色。&lt;/li&gt;
&lt;li&gt;抓住欧拉函数与互质的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;欧拉定理&#34;&gt;欧拉定理&lt;/h3&gt;
&lt;h4 id=&#34;费马小定理&#34;&gt;费马小定理&lt;/h4&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为素数，且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a^{p - 1}\equiv 1\pmod p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;另一个形式：&lt;span class=&#34;math inline&#34;&gt;\(a^p\equiv p\pmod p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明见下面的欧拉定理。这个东西最重要的用途就是求逆元，见上文。&lt;/p&gt;
&lt;h4 id=&#34;欧拉定理-1&#34;&gt;欧拉定理&lt;/h4&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a,n\in\mathbb{N}^+,a\perp n\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
a^{\varphi(n)}\equiv 1\pmod n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的简化剩余系为 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace\overline{a_1},\overline{a_2},\cdots,\overline{a_{\varphi(n)}} \rbrace\)&lt;/span&gt;。对 &lt;span class=&#34;math inline&#34;&gt;\(\forall a_i, a_j\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(aa_i\equiv aa_j\pmod n\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a(a_i-a_j)\equiv 0\pmod n\)&lt;/span&gt;。因为 &lt;span class=&#34;math inline&#34;&gt;\(a\perp n\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(a_i\equiv a_j\)&lt;/span&gt;。故当 &lt;span class=&#34;math inline&#34;&gt;\(a_i\not=a_j\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(aa_i,aa_j\)&lt;/span&gt; 也代表不同同余类。&lt;/p&gt;
&lt;p&gt;而简化剩余系关于模 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 乘法运算封闭 ，所以简化剩余系 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace\overline{a_1},\overline{a_2},\cdots,\overline{a_{\varphi(n)}} \rbrace\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace\overline{aa_1},\overline{aa_2},\cdots,\overline{aa_{\varphi(n)}} \rbrace\)&lt;/span&gt; 是等价的。综上： &lt;span class=&#34;math display&#34;&gt;\[
a^{\varphi(n)}a_1a_2\cdots a_{\varphi(n)}\equiv (aa_1)(aa_2)\cdots(aa_{\varphi(n)})\equiv a_1a_2\cdots a_{\varphi(n)}\equiv 1\pmod n
\]&lt;/span&gt; 欧拉定理得证。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数时，&lt;span class=&#34;math inline&#34;&gt;\(\varphi(p) = p - 1\)&lt;/span&gt;，且只有 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数与 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不互质。显然当 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt; 时 &lt;span class=&#34;math inline&#34;&gt;\(a^{p - 1} \equiv 1\pmod n\)&lt;/span&gt;，两边同乘 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 得到费马小定理。而当 &lt;span class=&#34;math inline&#34;&gt;\(a\not\perp p\)&lt;/span&gt; 时费马小定理显然成立。&lt;/p&gt;
&lt;h4 id=&#34;扩展欧拉定理&#34;&gt;扩展欧拉定理&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^b\equiv
\begin{cases}
a^{b\bmod \phi(m)}&amp;amp;,a\perp m\\
a^b&amp;amp;,a\not\perp m\land b&amp;lt;\phi(m)\\
a^{b \bmod \phi(m) + \phi(m)}&amp;amp;,a\not\perp m\land b \ge \phi(m)
\end{cases}
\pmod m
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;常用于&lt;strong&gt;降幂&lt;/strong&gt;，当指数特别大的时候可以降低指数。此处与欧拉定理不一样的是 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 无需互质。&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(m = p^r\times s\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(\gcd(p,s) = 1\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;由欧拉定理得 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(s)}\equiv 1\pmod s\)&lt;/span&gt;，由欧拉函数积性得 &lt;span class=&#34;math inline&#34;&gt;\(\phi(m) = \phi(s)\phi(p^r)\)&lt;/span&gt;。所以 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m)}\equiv 1\pmod s\)&lt;/span&gt;。设 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m)}=ks + 1\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m) + r} = km + p^r\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m) + r}\equiv p^r\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(b\ge r\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(p^b\equiv p^{b - r}\times p^r\equiv p^{b - r}\times p^{\phi(m) + b}\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;因为 &lt;span class=&#34;math inline&#34;&gt;\(r\le \phi(p^r)\le \phi(m)\)&lt;/span&gt;，所以当 &lt;span class=&#34;math inline&#34;&gt;\(b\ge 2\phi(m)\)&lt;/span&gt; 时 &lt;span class=&#34;math inline&#34;&gt;\(b - \phi(m)\ge r\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(p^b\equiv p^{b - \phi(m)}\pmod m\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(p^b\equiv p^{b\bmod \phi(m) + \phi(m)}\equiv m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 质因数分解之后乘起来，就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(a^b\equiv a^{b\bmod \phi(m) + \phi(m)}\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;但是需要注意当 &lt;span class=&#34;math inline&#34;&gt;\(b&amp;lt;\phi(m)\)&lt;/span&gt; 的时候上述结论不一定正确。&lt;/p&gt;
&lt;h4 id=&#34;应用降幂塔&#34;&gt;应用（降幂塔）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4139&#34;&gt;P4139 上帝与集合的正确用法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\le 10^3\)&lt;/span&gt; 次询问，求 &lt;span class=&#34;math inline&#34;&gt;\(2^{\infty}\bmod p\)&lt;/span&gt; 的值，&lt;span class=&#34;math inline&#34;&gt;\(p\le 10^7\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑使用扩展欧拉定理： &lt;span class=&#34;math display&#34;&gt;\[
2^\infty\equiv 2^{2^\infty \bmod \phi(p) + \phi(p)}\pmod{\phi(p)}
\]&lt;/span&gt; 现在我们发现需要求的变成了 &lt;span class=&#34;math inline&#34;&gt;\(2^\infty\bmod \phi(p)\)&lt;/span&gt;，这样子问题的规模就被缩小了，先线性筛出欧拉函数然后递归处理每组数据即可。返回的条件是 &lt;span class=&#34;math inline&#34;&gt;\(p = 1\)&lt;/span&gt; 时返回 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。时间复杂度&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qpow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, calc(phi[p]) + phi[p], p);&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF906D&#34;&gt;CF906D Power Tower&lt;/a&gt;。本题也是扩展欧拉定理的应用，乍一看直接 dfs 处理的复杂度跑不过去，但考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\phi(n)\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 级别衰减的，所以不用担心跑不过去。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3934&#34;&gt;P3934 [Ynoi2016] 炸脖龙 I&lt;/a&gt; 区间加，查询 &lt;span class=&#34;math inline&#34;&gt;\(a_l^{a_{l + 1}^{a_{l + 2}^{\cdots^{a_r}}}}\)&lt;/span&gt;。同样只需要考虑 &lt;span class=&#34;math inline&#34;&gt;\(a_l\)&lt;/span&gt; 后面的一小段，&lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt; 值就会降到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3747&#34;&gt;P3747 [六省联考 2017] 相逢是问候&lt;/a&gt; 每次操作将 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 替换成 &lt;span class=&#34;math inline&#34;&gt;\(c^{a_i}\)&lt;/span&gt;，区间求和。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>数论复习 2（进阶数论）</title>
        <link>https://oi.imyangty.com/summary-number-theory2/</link>
        <pubDate>Thu, 12 Aug 2021 14:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-number-theory2/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg16.webp" alt="Featured image of post 数论复习 2（进阶数论）" /&gt;&lt;h2 id=&#34;线性同余方程&#34;&gt;线性同余方程&lt;/h2&gt;
&lt;h3 id=&#34;一般线性同余方程&#34;&gt;一般线性同余方程&lt;/h3&gt;
&lt;p&gt;一般的线性同余方程是形如 &lt;span class=&#34;math display&#34;&gt;\[
ax\equiv b\pmod m
\]&lt;/span&gt; 求解可以考虑使用 exgcd，将方程转化为 &lt;span class=&#34;math inline&#34;&gt;\(ax + my = b\)&lt;/span&gt;，便可以求出 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的一个解。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1082&#34;&gt;&lt;strong&gt;P1082&lt;/strong&gt; [NOIP2012 提高组] 同余方程&lt;/a&gt;。对于这种 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv 1\pmod m\)&lt;/span&gt; 的，根据逆元的定义可以直接求逆，这里不展开。&lt;/p&gt;
&lt;h3 id=&#34;中国剩余定理&#34;&gt;中国剩余定理&lt;/h3&gt;
&lt;h4 id=&#34;简介&#34;&gt;简介&lt;/h4&gt;
&lt;p&gt;又称孙子定理。用于求解线性同余方程组。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
x\equiv &amp;amp;a_1\pmod{m_1} \\
x\equiv&amp;amp; a_2\pmod{m_2} \\
&amp;amp;\vdots \\
x\equiv &amp;amp;a_n\pmod{m_n}
\end{cases}
\]&lt;/span&gt; 要求 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\ne j\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(m_i\perp m_j\)&lt;/span&gt;。即，模数要两两互质。&lt;/p&gt;
&lt;h4 id=&#34;结论&#34;&gt;结论&lt;/h4&gt;
&lt;p&gt;构造解：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;计算 &lt;span class=&#34;math inline&#34;&gt;\(M = \displaystyle\prod_{i = 1}^n m_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(M_i = \dfrac M {m_i}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;对于每个 &lt;span class=&#34;math inline&#34;&gt;\(M_i\)&lt;/span&gt; 计算其在模 &lt;span class=&#34;math inline&#34;&gt;\(m_i\)&lt;/span&gt; 意义下的逆元 &lt;span class=&#34;math inline&#34;&gt;\(t_i = M_i^{-1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;方程组的一个特解为 &lt;span class=&#34;math inline&#34;&gt;\(x_0 = \displaystyle\sum_{i = 1}^na_iM_it_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;最小正整数解即为 &lt;span class=&#34;math inline&#34;&gt;\(x_0\bmod M\)&lt;/span&gt;，方程组的解集为 &lt;span class=&#34;math inline&#34;&gt;\(\left\lbrace x|x=\displaystyle\sum_{i=1}^na_iM_it_i+kM,k\in\mathbb{Z}\right\rbrace\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;证明&#34;&gt;证明&lt;/h4&gt;
&lt;p&gt;首先，我们易知 &lt;span class=&#34;math inline&#34;&gt;\(\forall j\in[1,n]\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(i\neq j\)&lt;/span&gt; 时有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a_jM_jt_j\equiv 0\pmod{m_i}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(i=j\)&lt;/span&gt; 时有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a_iM_it_i\equiv a_iM_iM_i^{-1}\equiv a_i\pmod{m_i}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以对于我们得到的解 &lt;span class=&#34;math inline&#34;&gt;\(x=\displaystyle\sum_{i=1}^na_iM_it_i\)&lt;/span&gt;，对于任意的 &lt;span class=&#34;math inline&#34;&gt;\(m_i\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(x\equiv a_i\pmod{m_i}\)&lt;/span&gt;，定理得证。&lt;/p&gt;
&lt;p&gt;类比拉格朗日插值。&lt;/p&gt;
&lt;h4 id=&#34;应用&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;模板题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P1495&#34;&gt;https://www.luogu.com.cn/problem/P1495&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;代码实现如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, a[&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;], m[&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;], Mul, M[&lt;span class=&#34;dv&#34;&gt;16&lt;/span&gt;], inv[&lt;span class=&#34;dv&#34;&gt;16&lt;/span&gt;], x, y;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; exgcd(ll a, ll b, ll&amp;amp; x, ll&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Mul = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n);&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, m + i, a + i);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Mul *= m[i];&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        M[i] = Mul / m[i];&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        exgcd(M[i], m[i], x, y);&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        inv[i] = x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ? x + m[i] : x;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += a[i] * M[i] * inv[i];&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans % Mul);&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一般来说可以在其他算法里面被使用，裸题很少。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3868&#34;&gt;P3868 [TJOI2009] 猜数字&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;线性同余方程的合并excrt&#34;&gt;线性同余方程的合并（exCRT）&lt;/h3&gt;
&lt;p&gt;当 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
x\equiv r_1\pmod{m_1}\\
x\equiv r_2\pmod{m_2}\\
\cdots\\
x\equiv r_n\pmod{m_n}
\end{cases}
\]&lt;/span&gt; 中的模数不两两互质时，CRT 需要的 &lt;span class=&#34;math inline&#34;&gt;\(M_i\)&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(m_i\)&lt;/span&gt; 的逆元就不一定存在。所以我们的方法是：两两合并这些方程，最后用 exgcd 求解。&lt;/p&gt;
&lt;p&gt;先考虑两个未知数的情况： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
x\equiv r_1\pmod{m_1} \\
x\equiv r_2\pmod{m_2} \\
\end{cases}
\]&lt;/span&gt; 这个方程可以改写为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x=k_1m_1+r_1=k_2m_2+r_2
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(k_1,k_2\)&lt;/span&gt; 为未知量，然后方程可以进一步改写为关于 &lt;span class=&#34;math inline&#34;&gt;\(k_1,k_2\)&lt;/span&gt; 的形式：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
k_1m_1 - k_2m_2=r_2-r_1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由裴蜀定理得这个方程有解的条件是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(m_1,m_2)\mid r_2-r_1\)&lt;/span&gt;，若有解， 则令 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle d = \gcd(m_1,m_2),p_1 = \frac{m_1}{d},p_2=\frac{m_2}{d}\)&lt;/span&gt;，方程化为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
k_1p_1-k_2p_2 = \frac{r_2-r_1}{d}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用 exgcd 求出方程 &lt;span class=&#34;math inline&#34;&gt;\(p_1\lambda_1 + p_2\lambda_2 = 1\)&lt;/span&gt; 的解 &lt;span class=&#34;math inline&#34;&gt;\(\lambda_1,\lambda_2\)&lt;/span&gt;，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
k_1=\lambda_1\cdot\dfrac{r_2-r_1}{d} \\
k_2=\lambda_2\cdot\dfrac{r_2-r_1}{d}
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(k_1\)&lt;/span&gt; 还原回去，得到满足原方程的一个特解&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x^* = m_1\lambda_1\cdot\dfrac{r_2-r_1}{d} + r_1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;则这个方程所有的通解为 $x = x^* + k(m_1,m_2),k $。&lt;/p&gt;
&lt;p&gt;所以两个方程就合并为一个：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x\equiv x^*\pmod{\operatorname{lcm}(m_1,m_2)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这样子两两合并下去就可以将所有的方程合为一个，得解。&lt;/p&gt;
&lt;p&gt;应用较为广泛，可以在 exLucas 中发挥其作用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4777&#34;&gt;P4777 【模板】扩展中国剩余定理（EXCRT）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4774&#34;&gt;P4774 [NOI2018] 屠龙勇士&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;组合数取模&#34;&gt;组合数取模&lt;/h2&gt;
&lt;h3 id=&#34;lucas-定理&#34;&gt;Lucas 定理&lt;/h3&gt;
&lt;p&gt;原来主要是为了解决组合数取模的问题，在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制上的表示可以进行数位 dp。&lt;/p&gt;
&lt;p&gt;常见应用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接求 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom n m \bmod p\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为较小质数：这可以直接使用 Lucas 定理。&lt;/li&gt;
&lt;li&gt;使用 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle \binom n m \equiv \binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\cdot \binom{n\bmod p}{m\bmod p}\pmod p\)&lt;/span&gt; 化简式子，见超能粒子炮。&lt;/li&gt;
&lt;li&gt;利用其在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制表示下的性质进行数位 dp，见清华集训组合数问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;定理内容&#34;&gt;定理内容&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\cdot \binom{n\bmod p}{m\bmod p}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数。一般拿来求 &lt;span class=&#34;math inline&#34;&gt;\(\binom nm\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 范围较小时。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * lucas(n / p, m / p) * C(n % p, m % p) % p;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dbinom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\)&lt;/span&gt; 是可以递归算的，而 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n\bmod p}{m\bmod p}\)&lt;/span&gt; 可以直接算。&lt;/p&gt;
&lt;p&gt;另一种形式：对于整数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 和素数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，若 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a &amp;amp;= \sum_{i = 0}^k a_ip^i\\
b &amp;amp;= \sum_{i = 0}^k b_ip^i
\end{aligned}
\]&lt;/span&gt; （相当于把 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下表示）则 &lt;span class=&#34;math display&#34;&gt;\[
\binom ab\equiv\prod_{i = 0}^k\binom{a_i}{b_i}\pmod p
\]&lt;/span&gt; 反复套用第一个形式会发现两个是等价的。&lt;/p&gt;
&lt;h4 id=&#34;证明-1&#34;&gt;证明&lt;/h4&gt;
&lt;p&gt;需要一定的组合数学基础。&lt;/p&gt;
&lt;h5 id=&#34;引理&#34;&gt;引理&lt;/h5&gt;
&lt;p&gt;首先考虑 &lt;span class=&#34;math display&#34;&gt;\[
\binom p n \bmod p
\]&lt;/span&gt; 的取值，注意到展开组合数之后其为如下形式： &lt;span class=&#34;math display&#34;&gt;\[
\frac{p!}{n!(p-n)!}\bmod p
\]&lt;/span&gt; 而显然，由于分子中 &lt;span class=&#34;math inline&#34;&gt;\(p!\)&lt;/span&gt; 是一定有质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的，所以只有当 &lt;span class=&#34;math inline&#34;&gt;\(n = 0\lor n = p\)&lt;/span&gt; 的时候（即 &lt;span class=&#34;math inline&#34;&gt;\(p!\)&lt;/span&gt; 能被消干净）整体的结果为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。即 &lt;span class=&#34;math display&#34;&gt;\[
\binom p n\bmod p = [n = 0\lor n = p]
\]&lt;/span&gt; 进而我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(a + b)^p&amp;amp;=\sum_{n = 0}^p\binom p na^nb^{p - n}\\
&amp;amp;\equiv \sum_{n= 0}^p[n = 0\lor n = p]a^nb^{p - n}\\
&amp;amp;\equiv a^p + b^p\pmod p
\end{aligned}
\]&lt;/span&gt; 然后将其推广到二项式的情况， &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(ax^n + bx^m)^p&amp;amp;\equiv a^px^{np} + b^px^{mp}\\
&amp;amp;\equiv ax^{np} + bx^{mp}
\end{aligned}
\]&lt;/span&gt; 即我们可以直接把指数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 给提进来。&lt;/p&gt;
&lt;h5 id=&#34;证明-2&#34;&gt;证明&lt;/h5&gt;
&lt;p&gt;考虑二项式 &lt;span class=&#34;math inline&#34;&gt;\((1+x)^n\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x^m\)&lt;/span&gt; 处的系数模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的结果，不难发现其即为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom n m\bmod p\)&lt;/span&gt;。利用上述引理，我们可以做出如下推导： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(1+x)^n&amp;amp;\equiv(1+x)^{p\lfloor n/p\rfloor}(1+x)^{n\bmod p}\\
&amp;amp;\equiv(1+x^p)^{\lfloor n/p\rfloor}(1+x)^{n\bmod p}
\end{aligned}
\]&lt;/span&gt; 我们将其看作两个多项式 &lt;span class=&#34;math inline&#34;&gt;\((1+x^p)^{\lfloor n/p\rfloor}\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\((1+x)^{n\bmod p}\)&lt;/span&gt; 的卷积，考虑这两个式子对 &lt;span class=&#34;math inline&#34;&gt;\((1 + x)^n\)&lt;/span&gt; 产生的贡献：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\((1+x^p)^{\lfloor n/p\rfloor}\)&lt;/span&gt; 展开后得到的项的次数均为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\((1+x)^{n\bmod p}\)&lt;/span&gt; 展开后得到的项的次数最多为 &lt;span class=&#34;math inline&#34;&gt;\(p - 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以对 &lt;span class=&#34;math inline&#34;&gt;\(x^m\)&lt;/span&gt; 的系数仅有一种产生贡献的方案，考虑一下这个贡献怎么来的：就是 &lt;span class=&#34;math inline&#34;&gt;\((1+x^p)^{\lfloor n/p\rfloor}\)&lt;/span&gt; 中取 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数次项，这部分的系数即 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\)&lt;/span&gt;，然后在 &lt;span class=&#34;math inline&#34;&gt;\((1+x)^{n\bmod p}\)&lt;/span&gt; 中取剩余的部分，这部分的系数即 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{n\bmod p}{m\bmod p}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以我们得出结论 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\cdot \binom{n\bmod p}{m\bmod p}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;应用-1&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;一般拿来做组合数取模，是很基础的内容，可以辅助推式子。&lt;/p&gt;
&lt;p&gt;在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下的展开形式可以做数位 dp。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3807&#34;&gt;P3807 【模板】卢卡斯定理/Lucas 定理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2480&#34;&gt;P2480 [SDOI2010]古代猪文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4345&#34;&gt;P4345 [SHOI2015]超能粒子炮·改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1778&#34;&gt;51nod1778 小Q的集合&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kummer-定理&#34;&gt;Kummer 定理&lt;/h3&gt;
&lt;p&gt;是一个小番外。&lt;/p&gt;
&lt;h4 id=&#34;质数在阶乘中的幂次&#34;&gt;质数在阶乘中的幂次&lt;/h4&gt;
&lt;p&gt;勒让德在 1808 年提出 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 中含有的质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的幂次为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i\ge 1}\lfloor n / p^i\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明：&lt;span class=&#34;math inline&#34;&gt;\(n! = 1\times 2\times\cdots \times p\times \cdots\times 2p\times \cdots\times \lfloor n / p\rfloor p\times \cdots\times n\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数提出来，为 &lt;span class=&#34;math inline&#34;&gt;\(p^{\lfloor n / p\rfloor}\lfloor n / p\rfloor!\)&lt;/span&gt;，这里面显然有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n/p\rfloor\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。然后递归寻找 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n /p\rfloor!\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;下面我们记 &lt;span class=&#34;math inline&#34;&gt;\(\nu(n!) = \sum_{i \ge 1}\lfloor n /p^i\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当然还有一种公式是 &lt;span class=&#34;math inline&#34;&gt;\(v_p(n!) = \dfrac{n - S_p(n)}{1 - p}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(S_p(n)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的各位数字和。证明在这里先不写了。&lt;/p&gt;
&lt;h4 id=&#34;质数在组合数中的幂次&#34;&gt;质数在组合数中的幂次&lt;/h4&gt;
&lt;p&gt;我们可以发现： &lt;span class=&#34;math display&#34;&gt;\[
\nu\left(\binom{n+m}m\right) = \sum_{i = 1}(\lfloor(n + m)/  p^i\rfloor - \lfloor n / p^i\rfloor- \lfloor m / p^i\rfloor)
\]&lt;/span&gt; 我们可以注意到，对于某个 &lt;span class=&#34;math inline&#34;&gt;\(p^i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / p^i\rfloor\)&lt;/span&gt; 相当于在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下去掉后面的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，&lt;span class=&#34;math inline&#34;&gt;\(m + n\)&lt;/span&gt; 在第 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 位产生进位的条件显然就为 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor(n + m)/ p^i\rfloor - \lfloor n / p^i\rfloor- \lfloor m / p^i\rfloor\)&lt;/span&gt;，这就是 Kummer 定理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m}{m}\)&lt;/span&gt; 中质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的个数为 &lt;span class=&#34;math inline&#34;&gt;\(n,m\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下做加法的进位次数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF582D&#34;&gt;CF582D Number of Binominal Coefficients&lt;/a&gt;：利用上面的定理进行数位 dp。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;扩展卢卡斯&#34;&gt;扩展卢卡斯&lt;/h3&gt;
&lt;p&gt;求 &lt;span class=&#34;math display&#34;&gt;\[
\binom nm\bmod M
\]&lt;/span&gt; 的值。其中 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 不一定为质数。和卢卡斯定理关系不大。&lt;/p&gt;
&lt;p&gt;考虑使用唯一分解定理分解模数 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 得到 &lt;span class=&#34;math inline&#34;&gt;\(M = \prod p_i^{k_i}\)&lt;/span&gt; 的形式，然后对于每个 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{k_i}\)&lt;/span&gt; 单独求解，最后用 CRT 合并。拆开组合数的式子，我们发现：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \frac{n!}{m!(n - m)!}\pmod{p^k}
\]&lt;/span&gt; 然而下面那个东西不一定能算模 &lt;span class=&#34;math inline&#34;&gt;\(p^k\)&lt;/span&gt; 意义下的乘法逆元，那么我们就把所有的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 提出来，设 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \frac{n!}{p^{\nu(n!)}}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\nu(n)\)&lt;/span&gt; 上面已经说明。提出来之后就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\not\equiv 0\pmod{p^k}\)&lt;/span&gt;，可以求逆。现在就需要计算 &lt;span class=&#34;math display&#34;&gt;\[
\frac{f(n)}{f(m)f(n - m)}p^{\nu(n!) - \nu(m!) - \nu((n - m)!)}
\]&lt;/span&gt; 上文说过了 &lt;span class=&#34;math inline&#34;&gt;\(\nu(n!) = \sum_{i\ge 1}\lfloor n /p^i\rfloor\)&lt;/span&gt;，下面考虑如何求 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(p^{\nu(n!)}\)&lt;/span&gt; 是可以求逆的，这里就不再赘述。主要来看 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 怎么求。我们把 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 的式子展开来，提出 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数： &lt;span class=&#34;math display&#34;&gt;\[
n! = 1\times2\times\cdots\times(p-1)\times p\times [(p+1)\times\cdots\times(2p - 1)]\times 2p\times\cdots
\]&lt;/span&gt; 中间是存在循环节的： &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp q}^{q^k}i\equiv\prod_{i,i\perp q}^{q^k}(i + tq^k)\pmod{q^k}\)&lt;/span&gt;，这个循环节循环了 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n}{p^k}\right\rfloor\)&lt;/span&gt; 次，所以考虑暴力把 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp p}^{p^k}i\)&lt;/span&gt; 求出来然后快速幂求一波 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n}{p^k}\right\rfloor\)&lt;/span&gt; 次幂。当然最后是需要乘上余项 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp p}^{n\bmod p^k}i\)&lt;/span&gt;，暴力就可以了。剩下的项是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle p^{\lfloor n/p\rfloor}\cdot\left(\left\lfloor\frac n p\right\rfloor\right)!\)&lt;/span&gt;。前者可以快速幂，后面的可以递归求，即为 &lt;span class=&#34;math inline&#34;&gt;\(f(\lfloor\frac np\rfloor)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;于是我们就做完了。来看下代码：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4720&#34;&gt;洛谷 P4720 【模板】扩展卢卡斯&lt;/a&gt;，细节巨大多。下面的写法，一次询问的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(M\log M)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, m, mod;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; exgcd(ll a, ll b, ll &amp;amp;x, ll &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(b, a % b, y, x), y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll inv(ll n, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll x, y;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(n, mod, x, y);&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll base, ll exp, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll CRT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, ll *a, ll *m) {&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll M = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) M *= m[i];&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll w = M / m[i];&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = (ret + a[i] * w % mod * inv(w, m[i]) % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f(ll n, ll p, ll pk) {&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pk) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p) ret = ret * i % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = qPow(ret, n / pk, pk);&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n / pk * pk + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p) ret = ret * (i % pk) % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret * f(n / p, p, pk) % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll multiLucas(ll n, ll m, ll p, ll pk) {&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n; i; i /= p) cnt += i / p;&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = m; i; i /= p) cnt -= i / p;&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n - m; i; i /= p) cnt -= i / p;&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(p, cnt, pk) * f(n, p, pk) % pk * inv(f(m, p, pk), pk) % pk * inv(f(n - m, p, pk), pk) % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll exLucas(ll n, ll m, ll p) {&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll pk[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;], a[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i * i &amp;lt;= p; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            pk[++cnt] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) pk[cnt] *= i, p /= i;&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a[cnt] = multiLucas(n, m, i, pk[cnt]);&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) pk[++cnt] = p, a[cnt] = multiLucas(n, m, p, p);&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; CRT(cnt, a, pk);&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m, mod);&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(exLucas(n, m, mod));&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，上面这种做法不是最快的。按理来说，如果模数 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 固定，可以预处理 + 光速幂，可以做到更更优，但是由于没有什么用所以不写了。&lt;/p&gt;
&lt;h2 id=&#34;阶与原根二次剩余离散对数&#34;&gt;阶与原根/二次剩余/离散对数&lt;/h2&gt;
&lt;h3 id=&#34;阶指数&#34;&gt;阶/指数&lt;/h3&gt;
&lt;h4 id=&#34;定义&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(a\in \mathbb Z\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\in\mathbb N^*\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp m\)&lt;/span&gt;，最小的满足 &lt;span class=&#34;math inline&#34;&gt;\(a^x\equiv 1\pmod m\)&lt;/span&gt; 的正整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 被称为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的阶（或者指数），记作 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(a)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抽代中这里的阶就是模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 缩系关于乘法形成的群中，元素 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的阶。而 &lt;span class=&#34;math inline&#34;&gt;\(\delta\)&lt;/span&gt; 表示阶也仅限这个特殊群。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;性质&#34;&gt;性质&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;性质 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(a^0,a^1, \cdots, a^{\delta_m(a) - 1}\)&lt;/span&gt; 构成一个模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的剩余系（即两两不同余），并且剩余系内所有元与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 互质。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：考虑反证法，设存在 &lt;span class=&#34;math inline&#34;&gt;\(0\le i&amp;lt;j&amp;lt; \delta_m(a)\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(a^i\equiv a^j\pmod m\)&lt;/span&gt;，那么一定有 &lt;span class=&#34;math inline&#34;&gt;\(a^{|i - j|}\equiv 1\pmod m\)&lt;/span&gt;，与阶的最小性矛盾，证毕。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;性质 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：若 &lt;span class=&#34;math inline&#34;&gt;\(a^n\equiv 1\pmod m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(a)\mid n\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：做带余除法，设 &lt;span class=&#34;math inline&#34;&gt;\(n = q\delta_m(a) + r\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(r &amp;gt; 0\)&lt;/span&gt; 则有 &lt;span class=&#34;math display&#34;&gt;\[
a^r\equiv a^r(a^{\delta_m(a)})^q\equiv a^n\equiv 1\pmod m
\]&lt;/span&gt; 和阶的最小性矛盾，故 &lt;span class=&#34;math inline&#34;&gt;\(r = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以推导出几个推论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(a^p\equiv a^q\pmod m\iff p\equiv q\pmod{\delta_a(m)}\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\delta_a(m)\mid \varphi(m)\)&lt;/span&gt;（考虑欧拉定理）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(k\in \mathbb N\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\delta_m(a^k) = \frac{\delta_m(a)}{\gcd(\delta_m(a), k)}
\]&lt;/span&gt; 证明： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a^{k\delta_m(a^k)}=(a^k)^{\delta_m(a^k)}&amp;amp;\equiv 1\pmod m\\
\delta_m(a)&amp;amp;\mid k\delta_m(a^k)\\
\frac{\delta_m(a)}{\gcd(\delta_m(a), k)}&amp;amp;\mid \delta_m(a^k)
\end{aligned}
\]&lt;/span&gt; 而且 &lt;span class=&#34;math inline&#34;&gt;\(a^{\delta_m(a)}\equiv 1\pmod m\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
(a^k)^{\frac{\delta_m(a)}{\gcd(\delta_m(a), k)}} = (a^{\delta_m(a)})^{\frac{k}{\gcd(\delta_m(a), k)}}\equiv 1\pmod m
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\delta_m(a^k)\mid \frac{\delta_m(a)}{\gcd(\delta_m(a), k)}
\]&lt;/span&gt; 综合一下，证毕。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;（虽然看不出 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 那个有什么卵用）&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;性质 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：设 &lt;span class=&#34;math inline&#34;&gt;\(m\in\mathbb N^*\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a,b\in \mathbb Z\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp m, b\perp m\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\delta_m(ab) = \delta_m(a)\delta_m(b)\iff \delta_m(a)\perp \delta_m(b)
\]&lt;/span&gt; &lt;del&gt;可以理解为 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(x)\)&lt;/span&gt; 有“积性”。&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明先略去，赶时间。&lt;/p&gt;
&lt;h4 id=&#34;求法&#34;&gt;求法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(m)\)&lt;/span&gt; 的因子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好像没有什么卵用，略过。&lt;/p&gt;
&lt;h3 id=&#34;原根&#34;&gt;原根&lt;/h3&gt;
&lt;h4 id=&#34;定义-1&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;继承上文阶的定义，若 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(a) = \varphi(m)\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抽代中，“原根”是循环群的生成元。并非每个模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 缩系关于乘法的群都是循环群，不是的话说明其不存在原根。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;性质-1&#34;&gt;性质&lt;/h4&gt;
&lt;p&gt;证明暂时不写了（笑）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原根判定定理：设 &lt;span class=&#34;math inline&#34;&gt;\(m\ge 3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a\perp m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根的充要条件是，对于 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(m)\)&lt;/span&gt; 的每个质因数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{\varphi(m)}{p}}\not\equiv 1\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原根存在定理：&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 存在原根当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(m = 2,4,p^{\alpha}, 2p^{\alpha}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为奇素数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不写证明。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原根个数：若 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根存在，则个数为 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(\varphi(m))\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不写证明。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最小原根的数量级：&lt;span class=&#34;math inline&#34;&gt;\(O(m^{0.25 + \varepsilon})\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个告诉我们，暴力求原根是对的。&lt;/p&gt;
&lt;h4 id=&#34;求法-1&#34;&gt;求法&lt;/h4&gt;
&lt;p&gt;求单个原根就直接暴力从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 开始枚举并依次判定即可，利用原根判定定理。&lt;/p&gt;
&lt;h4 id=&#34;应用-2&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;NTT。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：ABC212G - Power Pair&lt;/p&gt;
&lt;p&gt;给定质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，问数对 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 的个数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\le x, y\le p - 1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\exists n, x^n\equiv y\pmod p\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le p\le 10^{12}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的原根当且仅当最小的使得 &lt;span class=&#34;math inline&#34;&gt;\(r^e\equiv 1\pmod p\)&lt;/span&gt; 的正整数为 &lt;span class=&#34;math inline&#34;&gt;\(e = p - 1\)&lt;/span&gt;。本题需要用到的性质：&lt;span class=&#34;math inline&#34;&gt;\(r^i\bmod p, i\in[0, p - 1]\)&lt;/span&gt; 的值两两不同，且对于一个质数，一定有原根存在。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(x\equiv r^a\pmod p\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\equiv r^b\pmod p\)&lt;/span&gt;，不难发现 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 总能有一个 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 与之对应。于是就有 &lt;span class=&#34;math inline&#34;&gt;\(an\equiv b\pmod{p - 1}\)&lt;/span&gt;。现在就是需要找满足上式的 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 的数量。&lt;/p&gt;
&lt;p&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，则上式有解的条件是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1)\mid b\)&lt;/span&gt;（裴蜀定理）。那对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 就可以写成： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{a = 1}^{p - 1}\frac{p - 1}{\gcd(a, p - 1)}
\]&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(O(p)\)&lt;/span&gt; 是过不去的，要考虑优化。优化它的方法明显是寻找 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1)\)&lt;/span&gt; 相同的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的个数。根据 &lt;span class=&#34;math inline&#34;&gt;\(p - 1\)&lt;/span&gt; 的因数个数 为 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p)\)&lt;/span&gt; 的，故这些 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 也只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p)\)&lt;/span&gt; 个。我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1) = g\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{g\mid p - 1}\frac{p - 1}{g}\times\phi\left(\frac{p - 1}{g}\right)
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\phi(n)\)&lt;/span&gt; 可以暴力计算。&lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p\log p)\)&lt;/span&gt;，因为 $$ 的上界很松，轻松通过。&lt;/p&gt;
&lt;h3 id=&#34;离散对数&#34;&gt;离散对数&lt;/h3&gt;
&lt;p&gt;求最小的正整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(a^x\equiv b\pmod m\)&lt;/span&gt;，记作 &lt;span class=&#34;math inline&#34;&gt;\(x = \operatorname{lnd}_a b\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;bsgs&#34;&gt;BSGS&lt;/h4&gt;
&lt;p&gt;Baby-Step-Giant-Step（大步小步算法，BSGS）可以用来求解 &lt;span class=&#34;math inline&#34;&gt;\(a\perp m\)&lt;/span&gt; 的离散对数。&lt;/p&gt;
&lt;p&gt;首先由费马小定理可以知道答案一定在 &lt;span class=&#34;math inline&#34;&gt;\([1, m - 1]\)&lt;/span&gt; 之间。&lt;/p&gt;
&lt;p&gt;然后设 &lt;span class=&#34;math inline&#34;&gt;\(x = i\sqrt m - j\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a^{i\sqrt m -j}\equiv b\pmod m\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(a^{i\sqrt m} \equiv ba^j\pmod m\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 都是 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt m\)&lt;/span&gt; 级别的，所以考虑在哈希表中预处理每个 &lt;span class=&#34;math inline&#34;&gt;\(ba^j\)&lt;/span&gt;，然后枚举 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 判断 &lt;span class=&#34;math inline&#34;&gt;\(a^{i\sqrt m}\)&lt;/span&gt; 是否在哈希表内出现过即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;&lt;span class=&#34;at&#34;&gt;register&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(R&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;unordered_map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; hash;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ksm(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod) {&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; BSGS(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash.clear();&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a % p == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t = ceil(sqrt(p)), val, tmp;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash[val = b] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t)&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        hash[val = val * a % p] = j;&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = ksm(a, t, p), val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t) {&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        val = val * a % p;&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp = hash[val])&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val = i * t - tmp, (val % p + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p, a, b;&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;p, &amp;amp;a, &amp;amp;b);&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = BSGS(a, b, p);&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;no solution&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;exbsgs&#34;&gt;exBSGS&lt;/h4&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 不互质的时候，在模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的逆元不一定存在。所以考虑强行让他互质。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(d_1 = \gcd(a, p)\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(d_1\not\mid b\)&lt;/span&gt;，则无解。否则将方程同时除以 &lt;span class=&#34;math inline&#34;&gt;\(d_1\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\frac{a}{d_1}\cdot a^{x-1}\equiv \frac{b}{d_1}\pmod {\frac{p}{d_1}}
\]&lt;/span&gt; 若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{p}{d_1}\)&lt;/span&gt; 仍然不互质就接着上面的流程。直到 &lt;span class=&#34;math inline&#34;&gt;\(a\perp \dfrac{p}{\prod d_i}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;记所有的 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\frac{b}{\prod d} = B, \frac{p}{\prod d} = P,\prod\frac a d = A\)&lt;/span&gt;，则方程最后变为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
Aa^{x - k}\equiv B\pmod P
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此时 &lt;span class=&#34;math inline&#34;&gt;\(A\perp P\)&lt;/span&gt;，所以我们就可以愉快地求出 &lt;span class=&#34;math inline&#34;&gt;\(A^{-1}\pmod P\)&lt;/span&gt; 然后把他乘到右边来，方程就化为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^{x - k}\equiv A^{-1}B\pmod P
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;用 BSGS 求出该方程的解即可，然后记得加回 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;细节：如果 &lt;span class=&#34;math inline&#34;&gt;\(a = 1\or p = 1\)&lt;/span&gt;，最小自然数解必然为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，然后如果在递归的过程中发现 &lt;span class=&#34;math inline&#34;&gt;\(A=B\)&lt;/span&gt;，则说明 &lt;span class=&#34;math inline&#34;&gt;\(x = k\)&lt;/span&gt;，可直接返回答案。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;&lt;span class=&#34;at&#34;&gt;register&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(R&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;unordered_map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; hash;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ksm(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod) {&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exgcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b)&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, a;&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y -= a / b * x, tmp;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; inv(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod) {&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(a, mod, x, y);&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x % mod + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; BSGS(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash.clear();&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a % p == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t = ceil(sqrt(p)), val, tmp;&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash[val = b] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t)&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        hash[val = val * a % p] = j;&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = ksm(a, t, p), val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t) {&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        val = val * a % p;&lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp = hash[val])&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val = i * t - tmp, (val % p + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exBSGS(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || p == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-52&#34;&gt;&lt;a href=&#34;#cb5-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-53&#34;&gt;&lt;a href=&#34;#cb5-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, na = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, g = exgcd(a, p, x, y);&lt;/span&gt;
&lt;span id=&#34;cb5-54&#34;&gt;&lt;a href=&#34;#cb5-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (g &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-55&#34;&gt;&lt;a href=&#34;#cb5-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b % g)&lt;/span&gt;
&lt;span id=&#34;cb5-56&#34;&gt;&lt;a href=&#34;#cb5-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//判无解&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-57&#34;&gt;&lt;a href=&#34;#cb5-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++k, b /= g, p /= g, na = (na * (a / g)) % p;&lt;span class=&#34;co&#34;&gt;//递归&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-58&#34;&gt;&lt;a href=&#34;#cb5-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (na == b)&lt;span class=&#34;co&#34;&gt;//特判可以直接返回答案的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-59&#34;&gt;&lt;a href=&#34;#cb5-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; k;&lt;/span&gt;
&lt;span id=&#34;cb5-60&#34;&gt;&lt;a href=&#34;#cb5-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g = exgcd(a, p, x, y);&lt;/span&gt;
&lt;span id=&#34;cb5-61&#34;&gt;&lt;a href=&#34;#cb5-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-62&#34;&gt;&lt;a href=&#34;#cb5-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = BSGS(a, b * inv(na, p) % p, p);&lt;/span&gt;
&lt;span id=&#34;cb5-63&#34;&gt;&lt;a href=&#34;#cb5-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : ans + k;&lt;/span&gt;
&lt;span id=&#34;cb5-64&#34;&gt;&lt;a href=&#34;#cb5-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-65&#34;&gt;&lt;a href=&#34;#cb5-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-66&#34;&gt;&lt;a href=&#34;#cb5-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-67&#34;&gt;&lt;a href=&#34;#cb5-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, p, b;&lt;/span&gt;
&lt;span id=&#34;cb5-68&#34;&gt;&lt;a href=&#34;#cb5-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;a, &amp;amp;p, &amp;amp;b); a || b || p; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;a, &amp;amp;p, &amp;amp;b)) {&lt;/span&gt;
&lt;span id=&#34;cb5-69&#34;&gt;&lt;a href=&#34;#cb5-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = exBSGS(a % p, b % p, p);&lt;/span&gt;
&lt;span id=&#34;cb5-70&#34;&gt;&lt;a href=&#34;#cb5-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-71&#34;&gt;&lt;a href=&#34;#cb5-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb5-72&#34;&gt;&lt;a href=&#34;#cb5-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;No Solution&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-73&#34;&gt;&lt;a href=&#34;#cb5-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-74&#34;&gt;&lt;a href=&#34;#cb5-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-75&#34;&gt;&lt;a href=&#34;#cb5-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;二次剩余&#34;&gt;二次剩余&lt;/h3&gt;
&lt;p&gt;求解 &lt;span class=&#34;math inline&#34;&gt;\(x^2\equiv a\pmod m\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为奇素数。若 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 存在则称 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的二次剩余。&lt;/p&gt;
&lt;h4 id=&#34;解的数量&#34;&gt;解的数量&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x^2\equiv m\)&lt;/span&gt; 的解？我们肯定知道 &lt;span class=&#34;math inline&#34;&gt;\(x_0^2\equiv x_1^2\)&lt;/span&gt;。移项，平方差，有 &lt;span class=&#34;math inline&#34;&gt;\((x_0 - x_1) (x_0 + x_1) \equiv 0\)&lt;/span&gt;。因为 &lt;span class=&#34;math inline&#34;&gt;\(x_0 - x_1\not\equiv0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; 互为相反数。&lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为奇素数时模意义下的相反数就肯定不会相等，而且奇偶性不同。&lt;/p&gt;
&lt;p&gt;任意一对相反数都会对应一个二次剩余，故模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下的二次剩余一共有 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{m - 1}{2}\)&lt;/span&gt; 个，其余的非零数都是非二次剩余。&lt;/p&gt;
&lt;h4 id=&#34;欧拉准则&#34;&gt;欧拉准则&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Euler 判别准则：&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的二次剩余等价于 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\equiv 1\pmod m\)&lt;/span&gt;，否则 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\equiv -1\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑费马小定理：&lt;span class=&#34;math inline&#34;&gt;\(a^{m - 1}\equiv 1\pmod m\)&lt;/span&gt;，由于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为奇素数，故 &lt;span class=&#34;math inline&#34;&gt;\(a^{2\times\frac{m - 1}{2}}\equiv 1\pmod m\)&lt;/span&gt;，相当于 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;“开根”后的结果，根据二次探测定理（上文 Miller-Rabin 处）其只可能为 &lt;span class=&#34;math inline&#34;&gt;\(\pm 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑证明充分性：若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 是二次剩余，则 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\equiv (x^2)^{\frac{m-1}{2}}\equiv x^{m - 1}\equiv 1\pmod m\)&lt;/span&gt;，证毕。&lt;/p&gt;
&lt;p&gt;考虑证明必要性：若 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m-1}{2}}\equiv 1\pmod m\)&lt;/span&gt;，则将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 表示为 &lt;span class=&#34;math inline&#34;&gt;\(g^k\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根，那么有 &lt;span class=&#34;math inline&#34;&gt;\(g^{k\frac{m-1}{2}}\equiv 1\)&lt;/span&gt;，由于 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 是原根，所以 &lt;span class=&#34;math inline&#34;&gt;\(m - 1=\varphi(m)\)&lt;/span&gt; 为其阶，故一定有 &lt;span class=&#34;math inline&#34;&gt;\(m - 1\mid k\dfrac{m-1}{2}\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为偶数。这就是说 &lt;span class=&#34;math inline&#34;&gt;\((g^{k/2})^2\equiv a\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为二次剩余。&lt;/p&gt;
&lt;h4 id=&#34;cipolla-算法&#34;&gt;Cipolla 算法&lt;/h4&gt;
&lt;p&gt;由于模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下的二次剩余有 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{m - 1}{2}\)&lt;/span&gt; 个，所以期望两次就能找到一个 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(b^2 - a\)&lt;/span&gt; 为非二次剩余。&lt;/p&gt;
&lt;p&gt;然后便是 Cipolla 的核心思想：&lt;strong&gt;扩域&lt;/strong&gt;，人为定义 &lt;span class=&#34;math inline&#34;&gt;\(i^2 = b^2 - a\)&lt;/span&gt;，所以所有的数都可以被表达为 &lt;span class=&#34;math inline&#34;&gt;\(A + Bi\)&lt;/span&gt; 的形式，则 &lt;span class=&#34;math inline&#34;&gt;\(a \equiv (b + i)^{m + 1}\pmod m\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(x \equiv (a + i)^{\frac{m - 1}{2}}\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t, n, p, w;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx {&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il cmplx mul(cmplx a, cmplx b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx ans = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.x = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.x * b.x % p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.y * b.y % p * w % p) + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.y = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.x * b.y % p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.y * b.x % p) + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qPow(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a * a % p)&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * ret * a % p;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qPow(cmplx a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx ans = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a = mul(a, a, p))&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans = mul(ans, a, p);&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans.x % p;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cipolla(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n %= p;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (qPow(n, (p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p) == p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a = rand() % p;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        w = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a * a % p - n) % p + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (qPow(w, (p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p) == p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx x = {a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(x, (p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p);&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(time(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(t);&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t--) {&lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n), read(p);&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) {&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans1 = cipolla(n, p), ans2 = p - ans1;&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans1 == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;Hola!&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-55&#34;&gt;&lt;a href=&#34;#cb6-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-56&#34;&gt;&lt;a href=&#34;#cb6-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(min(ans1, ans2)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), print(max(ans1, ans2));&lt;/span&gt;
&lt;span id=&#34;cb6-57&#34;&gt;&lt;a href=&#34;#cb6-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-58&#34;&gt;&lt;a href=&#34;#cb6-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-59&#34;&gt;&lt;a href=&#34;#cb6-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-60&#34;&gt;&lt;a href=&#34;#cb6-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>数论复习 3（反演与筛法）</title>
        <link>https://oi.imyangty.com/summary-number-theory3/</link>
        <pubDate>Thu, 12 Aug 2021 14:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-number-theory3/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg16.webp" alt="Featured image of post 数论复习 3（反演与筛法）" /&gt;&lt;h2 id=&#34;莫比乌斯反演相关&#34;&gt;莫比乌斯反演相关&lt;/h2&gt;
&lt;p&gt;警告：本节对推式子能力要求较高。&lt;/p&gt;
&lt;p&gt;这一部分内容在 OI 中的考察以式子的化简求值为主。&lt;/p&gt;
&lt;h3 id=&#34;整除分块&#34;&gt;整除分块&lt;/h3&gt;
&lt;p&gt;是学习莫比乌斯反演前的很重要的前置知识。&lt;/p&gt;
&lt;p&gt;是基于 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor\)&lt;/span&gt; 最多只有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 种取值的。可以加快运算。将相同的 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor\)&lt;/span&gt; 合在一起，体现了分块思想。&lt;/p&gt;
&lt;h4 id=&#34;基本形式&#34;&gt;基本形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA11526&#34;&gt;UVA11526 H(n)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 组询问，每次给定 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;lt; 2^{31}\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\left\lfloor\frac{n}{i}\right\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 做法肯定是寄了的，考虑优化。打个表发现很多段 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor\)&lt;/span&gt; 的值都是一样的，并且下面说明这些不同的值只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 种。&lt;/p&gt;
&lt;p&gt;证明：对于 &lt;span class=&#34;math inline&#34;&gt;\(i\le \sqrt n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor\frac n i\rfloor\)&lt;/span&gt; 至多有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 个取值，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(i\gt \sqrt n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor \frac n i\rfloor\lt \sqrt n\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor \frac n i\rfloor\)&lt;/span&gt; 也至多有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 种取值。所以 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor\frac n i\rfloor\)&lt;/span&gt; 至多有 &lt;span class=&#34;math inline&#34;&gt;\(2\sqrt n\)&lt;/span&gt; 种取值。&lt;/p&gt;
&lt;p&gt;那么现在考虑给定 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt;，要求确定出分块右端点 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[l,r]\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor = \lfloor n / l\rfloor\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 最大，那么就是如下限制条件： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
k = \lfloor n / l\rfloor\\
r = \displaystyle\max_{ik\le n}\{i\}
\end{cases}
\]&lt;/span&gt; 那么就有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle r = \left\lfloor\frac nk\right\rfloor = \left\lfloor\frac{n}{\left\lfloor\frac n l\right\rfloor}\right\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;代码实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (n / l);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3935&#34;&gt;P3935 Calculating&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 分解质因数结果为 &lt;span class=&#34;math inline&#34;&gt;\(x=p_1^{k_1}p_2^{k_2}\cdots p_n^{k_n}\)&lt;/span&gt;，令&lt;span class=&#34;math inline&#34;&gt;\(f(x)=(k_1+1)(k_2+1)\cdots (k_n+1)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i=l}^rf(i)\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(998\,244\,353\)&lt;/span&gt; 取模的结果。&lt;span class=&#34;math inline&#34;&gt;\(1\le l\le 10^{14}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le r\le 1.6\times 10^{14}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(r-l&amp;gt;10^{14}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先设 &lt;span class=&#34;math inline&#34;&gt;\(s(n) = \displaystyle\sum_{i=1}^n f(i)\)&lt;/span&gt;，然后答案即为 &lt;span class=&#34;math inline&#34;&gt;\(s(r) - s(l-1)\)&lt;/span&gt;，然后注意到 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 实际就是约数个数函数，那么 &lt;span class=&#34;math inline&#34;&gt;\(s(n)\)&lt;/span&gt; 即为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{d\mid i}1 = \sum_{i=1}^n\left\lfloor\frac{n}{i}\right\rfloor
\]&lt;/span&gt; 直接按上面方法做即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P2261&#34;&gt;P2261 [CQOI2007]余数求和&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le n,k\le 10^9\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^nk\bmod i\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(k\bmod i\)&lt;/span&gt; 可以拆成 &lt;span class=&#34;math inline&#34;&gt;\(k - i\lfloor k / i\rfloor\)&lt;/span&gt;，然后整个式子可以化为 &lt;span class=&#34;math display&#34;&gt;\[
kn - \sum_{i=1}^ni\left\lfloor \frac k i\right\rfloor
\]&lt;/span&gt; 每一块内统计平均值啥的即可。&lt;/p&gt;
&lt;h4 id=&#34;其他变形&#34;&gt;其他变形&lt;/h4&gt;
&lt;p&gt;使用类似的分析方法可以处理更多类似的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P2260&#34;&gt;P2260 [清华集训2012]模积和&lt;/a&gt; &lt;span class=&#34;math display&#34;&gt;\[
\sum_{1\le i\le n} \sum_{1\le j\le m,i\ne j} (n \bmod i) \times (m \bmod j)\bmod19940417
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(1\le n,m\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;二维整除分块。不妨假设 &lt;span class=&#34;math inline&#34;&gt;\(n\le m\)&lt;/span&gt;，首先容斥一波将 &lt;span class=&#34;math inline&#34;&gt;\(i\ne j\)&lt;/span&gt; 去掉： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n(n\bmod i)\sum_{j=1}^m(m\bmod j) - \sum_{i=1}^n(n\bmod i)(m\bmod i)
\]&lt;/span&gt; 然后用上面的化简方法把取模拆开： &lt;span class=&#34;math display&#34;&gt;\[
\left(n^2 - \sum_{i=1}^ni\left\lfloor\frac ni\right\rfloor \right)\times\left(m^2 - \sum_{i=1}^mi\left\lfloor\frac mi\right\rfloor \right) - \sum_{i=1}^n\left(n - i\left\lfloor \frac n i \right\rfloor\right)\left(m - i\left\lfloor \frac m i \right\rfloor\right)
\]&lt;/span&gt; 前面的两大坨是一般通过整除分块，我们看后面一部分： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i=1}^n\left(n - i\left\lfloor \frac n i \right\rfloor\right)\left(m - i\left\lfloor \frac m i \right\rfloor\right)\\
=&amp;amp;\sum_{i=1}^n\left(nm - ni\left\lfloor \frac n i \right\rfloor - mi\left\lfloor \frac m i \right\rfloor + i^2\left\lfloor \frac n i \right\rfloor\left\lfloor \frac m i \right\rfloor\right)\\
=&amp;amp;n^2m - n\sum_{i=1}^n\left\lfloor \frac n i \right\rfloor - m\sum_{i=1}^n\left\lfloor \frac m i \right\rfloor + \sum_{i=1}^ni^2\left\lfloor \frac n i \right\rfloor\left\lfloor \frac m i \right\rfloor
\end{aligned}
\]&lt;/span&gt; 前三项比较好做，主要问题是第四项。实际上你会发现由于 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n /i\rfloor\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor m / i\rfloor\)&lt;/span&gt; 都成块状，所以转折点一共也是 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 的，一样可以整除分块，每次对 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / \lfloor n / l\rfloor\rfloor\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor m / \lfloor m / l\rfloor\rfloor\)&lt;/span&gt; 取个 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt; 即可。而对于 &lt;span class=&#34;math inline&#34;&gt;\(\sum i^2\)&lt;/span&gt; 有公式在开头给出，在此不表。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; ll min(ll a, ll b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;dv&#34;&gt;19940417&lt;/span&gt;, inv2 = &lt;span class=&#34;dv&#34;&gt;9970209&lt;/span&gt;, inv6 = &lt;span class=&#34;dv&#34;&gt;3323403&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, m, ans;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc(ll n, ll k) {&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = min(n, k);&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n, k / (k / l));&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += ((r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (k / l * l) % mod + (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (r - l) % mod * (k / l) % mod * inv2 % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret %= mod;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll summod(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (n * n % mod - calc(n, n) + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll sum(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * (&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * inv6 % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc2(ll n, ll m) {&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = n * m % mod * top % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret -= m * calc(top, n);&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret -= n * calc(top, m);&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(min(top, n / (n / l)), m / (m / l));&lt;span class=&#34;co&#34;&gt;//同时取min，注意上界问题&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll sqri = sum(r) - sum(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = (ret + sqri * (n / l) % mod * (m / l) % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m);&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = summod(n) * summod(m) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = (ans - calc2(n, m) + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{18}\)&lt;/span&gt;，求&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k=1}^n \sum_{d^2 \mid k} d \bmod 998244353
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先我们不妨改变枚举顺序，先枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^{\lfloor\sqrt n\rfloor}d\sum_{k=1}^n[d^2\mid k]
\]&lt;/span&gt; 实际上就是 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^{\lfloor\sqrt n\rfloor}d\left\lfloor\frac{n}{d^2}\right\rfloor
\]&lt;/span&gt; 在这里，我们使用更一般化的思路，令 &lt;span class=&#34;math inline&#34;&gt;\(d^* = d^2\)&lt;/span&gt;，类似上面一样推导：&lt;span class=&#34;math inline&#34;&gt;\(\begin{cases}k = \lfloor n / l^2\rfloor\\r^* = \lfloor n / k\rfloor\end{cases}\)&lt;/span&gt;，那么就有 &lt;span class=&#34;math inline&#34;&gt;\(r^* = \displaystyle\left\lfloor\frac{n}{\left\lfloor\frac n l^2\right\rfloor}\right\rfloor\)&lt;/span&gt;，开个根即得到 &lt;span class=&#34;math inline&#34;&gt;\(r = \left\lfloor\sqrt{\left\lfloor\frac{n}{\left\lfloor\frac{n}{l^2}\right\rfloor}\right\rfloor}\right\rfloor\)&lt;/span&gt;。于是本题 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{1/4})\)&lt;/span&gt; 解决。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\left\lceil\frac ni\right\rceil
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;向上取整啥的不管，注意到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lceil\frac nm\right\rceil = \left\lfloor\frac{n + m - 1}{m}\right\rfloor\)&lt;/span&gt;，所以原式变为对 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n+i-1}{i}\right\rfloor\)&lt;/span&gt; 求和。类似上面推导：&lt;span class=&#34;math inline&#34;&gt;\(k=\lfloor(n+l-1)/l\rfloor\)&lt;/span&gt;，然后 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 要满足 &lt;span class=&#34;math inline&#34;&gt;\(\lceil n / r\rceil = k\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(n\le kr\le n + r - 1\)&lt;/span&gt;，于是乎 &lt;span class=&#34;math inline&#34;&gt;\(r = \displaystyle\left\lfloor\frac{n - 1}{k - 1}\right\rfloor = \left\lfloor\frac{n - 1}{\left\lfloor\frac{n+l-1}{l}\right\rfloor - 1}\right\rfloor\)&lt;/span&gt;，记得最后一步特判，此时 &lt;span class=&#34;math inline&#34;&gt;\(k - 1 = 0\)&lt;/span&gt;，右边界为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;狄利克雷卷积&#34;&gt;狄利克雷卷积&lt;/h3&gt;
&lt;p&gt;定义两个数论函数 &lt;span class=&#34;math inline&#34;&gt;\(f(n),g(n)\)&lt;/span&gt; 的狄利克雷卷积 &lt;span class=&#34;math inline&#34;&gt;\((f*g)(n)\)&lt;/span&gt; 为 &lt;span class=&#34;math display&#34;&gt;\[
(f*g)(n) = \sum_{d\mid n}f(d)g\left(\frac nd\right)
\]&lt;/span&gt; 类比一下一般的加法卷积 &lt;span class=&#34;math inline&#34;&gt;\(c_k = \sum_{i}a_ib_{k - i}\)&lt;/span&gt;，我们可以发现狄利克雷卷积为&lt;strong&gt;关于乘法&lt;/strong&gt;的卷积。&lt;/p&gt;
&lt;p&gt;其具有如下常见性质：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;交换律：&lt;span class=&#34;math inline&#34;&gt;\(f*g = g*f\)&lt;/span&gt;，乘法满足交换律，得证。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结合律：&lt;span class=&#34;math inline&#34;&gt;\((f*g)*h=f*(g*h)\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{(ij)k = n}(f(i)g(j))h(k)=\sum_{i(jk) = n}f(i)(g(j)h(k))
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对加法的分配律：&lt;span class=&#34;math inline&#34;&gt;\((f+g)*h = f*h + g*h\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;(f(n) + g(n)) * h(n)\\
=&amp;amp;\sum_{d\mid n}(f(d) + d(d))h\left(\frac nd\right)\\
=&amp;amp;\sum_{d\mid n}f(d)h\left(\frac nd\right) + \sum_{d\in n}g(d)h\left(\frac nd\right)\\
=&amp;amp;f(n)*h(n) + g(n)*h(n)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与数乘的结合律：&lt;span class=&#34;math inline&#34;&gt;\((cf)*g = c(f*g)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;单位元&lt;/strong&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\epsilon * f = f\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\epsilon(n) = [n = 1]\)&lt;/span&gt;。即这个单位元函数当 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 时返回 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(n\not=1\)&lt;/span&gt; 时返回 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f * \epsilon &amp;amp;= \sum_{d\mid n} f(d)\epsilon\left(\frac nd\right)
\end{aligned}
\]&lt;/span&gt; 不难验证其正确性：只有当 &lt;span class=&#34;math inline&#34;&gt;\(d = n\)&lt;/span&gt; 时 &lt;span class=&#34;math inline&#34;&gt;\(\epsilon(n/d)\)&lt;/span&gt; 才等于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，只保留了 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 这一项。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;狄利克雷逆元：&lt;span class=&#34;math inline&#34;&gt;\(f^{-1}*f=\epsilon\)&lt;/span&gt;。考虑如何求这个逆元： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\epsilon &amp;amp;= f^{-1}*f\\
\epsilon &amp;amp;= \sum_{d\mid n}f^{-1}(d)f\left(\frac nd\right)\\
\epsilon(n) &amp;amp;= f^{-1}(n)f(1) + \sum_{d\mid n\land d &amp;lt; n} f^{-1}(d)f\left(\frac nd\right)\\
f^{-1}(n) &amp;amp;=\frac1{f(1)}\left(\epsilon(n) -  \sum_{d\mid n\land d &amp;lt; n} f^{-1}(d)f\left(\frac nd\right)\right)
\end{aligned}
\]&lt;/span&gt; 于是这个逆元就被求出来了。不难发现只要 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(f(1)\not=0\)&lt;/span&gt;，其就会具有逆元。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;莫比乌斯函数&#34;&gt;莫比乌斯函数&lt;/h3&gt;
&lt;p&gt;在这之前可能需要回顾一下之前讲过的几个数论函数，下面将不会重复提及。&lt;/p&gt;
&lt;p&gt;上面的 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n)\)&lt;/span&gt; 就是莫比乌斯函数。写得更清楚的定义为： &lt;span class=&#34;math display&#34;&gt;\[
\mu(n) = \begin{cases}
1&amp;amp;n = 1\\
0&amp;amp;n\text{ 含有平方因子}\\
(-1)^{\omega(n)}&amp;amp;\omega(n)\text{ 为 }n\text{ 的本质不同质因子个数}
\end{cases}
\]&lt;/span&gt; 同时其有一个等价的定义： &lt;span class=&#34;math display&#34;&gt;\[
\mu(n) = 1^{-1}(n)
\]&lt;/span&gt; 即，&lt;span class=&#34;math inline&#34;&gt;\(\mu(n)\)&lt;/span&gt; 为常函数 &lt;span class=&#34;math inline&#34;&gt;\(1(n)\)&lt;/span&gt; 的狄利克雷逆元。这就意味着 &lt;span class=&#34;math inline&#34;&gt;\(\mu*1 = \epsilon\)&lt;/span&gt;，所以 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d\mid n}\mu(d) = \epsilon(n) = [n = 1]
\]&lt;/span&gt; 有一个常见的反演结论是： &lt;span class=&#34;math display&#34;&gt;\[
[i\perp j] = [\gcd(i,j) = 1] = \sum_{d\mid\gcd(i,j)}\mu(d)
\]&lt;/span&gt; 这个意义应该是很好理解的，不赘述了。&lt;/p&gt;
&lt;p&gt;下面还有一个常见反演结论（欧拉反演）： &lt;span class=&#34;math display&#34;&gt;\[
\varphi * 1= \operatorname{id}
\]&lt;/span&gt; 证明：由于 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\)&lt;/span&gt; 为积性函数，所以我们只需证明 &lt;span class=&#34;math inline&#34;&gt;\(n = p^c\)&lt;/span&gt; 时其成立即可。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi * 1 &amp;amp;= \sum_{d\mid n}\varphi(d)\\
&amp;amp;= \sum_{i = 0}^c\varphi(p^i)\\
&amp;amp;= 1 + p^0(p - 1) + p^1(p -1) + \cdots + p^{c - 1}(p - 1)\\
&amp;amp;= p^c\\
&amp;amp;= \operatorname{id}
\end{aligned}
\]&lt;/span&gt; 另外，两边同时卷 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\varphi = \operatorname{id}*\mu = \sum_{d\mid n}d\mu\left(\frac nd\right)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的求法见下文线性筛部分。&lt;/p&gt;
&lt;h3 id=&#34;莫比乌斯反演公式&#34;&gt;莫比乌斯反演公式&lt;/h3&gt;
&lt;h4 id=&#34;基本形式-1&#34;&gt;基本形式&lt;/h4&gt;
&lt;p&gt;内容是，已知两数论函数 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{d\mid n}g(d)\iff g(n) = \sum_{d\mid n}\mu\left(\frac nd\right)f(d)
\]&lt;/span&gt; 这个公式被称为莫比乌斯反演公式（Möbius inversion formula），用狄利克雷卷积表示就是 &lt;span class=&#34;math display&#34;&gt;\[
f = g * 1\iff g = f * \mu
\]&lt;/span&gt; 写成狄利克雷卷积的形式就好证明了，直接左边卷上 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 就能得到右边。&lt;/p&gt;
&lt;h4 id=&#34;扩展形式&#34;&gt;扩展形式&lt;/h4&gt;
&lt;p&gt;乘积形式的： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \prod_{d\mid n}g(d) \iff g(n) = \prod f(d)^{\mu(\frac nd)},\forall n &amp;gt; 1
\]&lt;/span&gt; 证明：两边同时取对数： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\ln f(n) &amp;amp;= \sum_{d\mid n}\ln g(d)\\
\ln g(n) &amp;amp;= \sum_{d\mid n}\ln f(d)\mu\left(\frac nd\right)\\
g(n) &amp;amp;= \prod_{d\mid n}f(d)^{\mu(\frac nd)}
\end{aligned}
\]&lt;/span&gt; 倍数形式的： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{n\mid d}g(d)\iff g(n) = \sum_{n\mid d}\mu\left(\frac dn\right)f(d)
\]&lt;/span&gt; 证明： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{n\mid d}\mu\left(\frac dn\right)f(d)\\
=&amp;amp;\sum_{k= 1}^\infty\mu(k)f(kn) = \sum_{k = 1}^\infty\mu(k)\sum_{kn\mid d}g(d)\\
=&amp;amp;\sum_{n\mid d}g(d)\sum_{k\mid \frac{d}{n}}\mu(k)= \sum_{n\mid d}g(d)\epsilon\left(\frac dn\right)\\
=&amp;amp;g(n)
\end{aligned}
\]&lt;/span&gt; 将 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 表示成 &lt;span class=&#34;math inline&#34;&gt;\(kn\)&lt;/span&gt; 的形式，然后将左边的式子代入。之后交换枚举顺序变为枚举 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的倍数然后反求 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，最后发现就是 &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;莫比乌斯反演与容斥的关系&#34;&gt;莫比乌斯反演与容斥的关系&lt;/h3&gt;
&lt;p&gt;参考了论文哥的博客。&lt;/p&gt;
&lt;p&gt;首先根据算术基本定理，将一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 分解为 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{k_i}\)&lt;/span&gt; 的结构，然后对于一个数论函数 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;，定义其 zeta 变换 &lt;span class=&#34;math inline&#34;&gt;\(f\zeta\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
f\zeta(n) = \sum_{d\mid n}f(d)
\]&lt;/span&gt; 其实质是枚举了 &lt;span class=&#34;math inline&#34;&gt;\(k_i\)&lt;/span&gt; 表示中的每一维都不大于自己的数，相当于一个高维前缀和。（其实这个就是狄利克雷前缀和，&lt;a href=&#34;https://www.luogu.com.cn/problem/P5495&#34;&gt;P5495 Dirichlet 前缀和&lt;/a&gt;）求这个东西的时候可以像 FMT 一样，类似埃筛的 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后如何从高维前缀和还原成单点的值呢？考虑使用容斥原理，回顾一下高维前缀和的式子。需要枚举每一维相同或者小 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的数，以此决定容斥系数。定义 &lt;span class=&#34;math display&#34;&gt;\[
\mu(n) = \prod_{i = 1}^\infty (-1)^{[e_i = 1]}0^{[e_k &amp;gt; 1]}
\]&lt;/span&gt; 即：某一维为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 时，对函数值没有影响，某一维为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时，函数值乘上 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;，某一维大于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时，函数值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。否则若 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 个质数的积，则 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = (-1)^c\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\mid n\)&lt;/span&gt;，用 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac nd\)&lt;/span&gt; 找到每一维的差，再用 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 找到对应的容斥系数，即： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{d\mid n}\mu\left(\frac nd\right)f\zeta(d)
\]&lt;/span&gt; 把这个变换称为莫比乌斯变换，即 &lt;span class=&#34;math display&#34;&gt;\[
f\mu(n) = \sum_{d\mid n}\mu\left(\frac nd\right)f(d)
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(f\zeta\mu = f\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以本质上，莫比乌斯反演是一个容斥的过程。&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 充当着容斥系数这一角色。&lt;/p&gt;
&lt;h3 id=&#34;应用&#34;&gt;应用&lt;/h3&gt;
&lt;p&gt;下面放几个莫比乌斯反演的经典应用。假定 &lt;span class=&#34;math inline&#34;&gt;\(n\ge m\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;典例-0&#34;&gt;典例 0&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i =1 }^n\gcd(i,n) = \sum_{d\mid n}d\varphi(n/d)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P2303&#34;&gt;P2303 [SDOI2012] Longge 的问题&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里是一个比较常用的技巧：有很多的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,n)\)&lt;/span&gt; 都是一样的，我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d\mid n}d\sum_{i= 1}^n[\gcd(i, n)= d]\)&lt;/span&gt;，然后化为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,j) = 1\)&lt;/span&gt; 的形式：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d\mid n}d\sum_{i=1}^{n/d}[\gcd(i,n/d)=1]\)&lt;/span&gt;，注意到右边那个东西实际上就是 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n/d)\)&lt;/span&gt;，所以就化简完了。&lt;/p&gt;
&lt;h4 id=&#34;典例-1&#34;&gt;典例 1&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = k] = \sum_{d=1}^{\lfloor \frac nk\rfloor}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P3455&#34;&gt;P3455 [POI2007]ZAP-Queries&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简要推导：首先&lt;strong&gt;将其化为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, j) = 1\)&lt;/span&gt; 的形式&lt;/strong&gt;，得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}\sum_{d\mid\gcd(i,j)}\mu(d)\)&lt;/span&gt;，然后写成枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的形式：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}\sum_{d = 1}[d\mid\gcd(i,j)]\mu(d)\)&lt;/span&gt;，再调换一下求和顺序：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d=1}^{\min(n&amp;#39;,m&amp;#39;)}\mu(d)\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}[d\mid\gcd(i,j)]\)&lt;/span&gt;。最后的式子即要求 &lt;span class=&#34;math inline&#34;&gt;\(i,j\)&lt;/span&gt; 同为 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的倍数，所以最终得到答案。&lt;/p&gt;
&lt;h4 id=&#34;典例-2&#34;&gt;典例 2&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) \in P] = \sum_{T = 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T\land k\in P}\mu\left(\frac Tk\right)
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为质数集。对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P2257&#34;&gt;P2257 YY的GCD&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简要推导：首先枚举这个质数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，然后像上一题一样化简可以得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{k\in P}\sum_{d=1}^{\lfloor \frac nk\rfloor}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor\)&lt;/span&gt;。现在仍然不够快，接下来&lt;strong&gt;巧妙换元令 &lt;span class=&#34;math inline&#34;&gt;\(T = kd\)&lt;/span&gt;&lt;/strong&gt;，然后调换枚举顺序改为枚举 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{T= 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T,k\in P}\mu\left(\frac Tk\right)\)&lt;/span&gt;。后者可以预处理，然后套整除分块即可。&lt;/p&gt;
&lt;h4 id=&#34;典例-3&#34;&gt;典例 3&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\operatorname{lcm}(i, j) = \sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)k^2\sum_{i = 1}^{\lfloor\frac{n}{kd}\rfloor}\sum_{j = 1}^{\lfloor\frac{m}{kd}\rfloor}ij
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P1829&#34;&gt;P1829 [国家集训队]Crash的数字表格 / JZPTAB&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简要推导：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{\gcd(i, j)}\)&lt;/span&gt;，然后枚举 gcd，变成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^n\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{d}[\gcd(i,j) = d]\)&lt;/span&gt;，然后是经典反演，变成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^nd\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij\sum_{k\mid \gcd(i,j)}\mu(k)\)&lt;/span&gt;，再然后调换顺序枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij[k\mid i][k\mid j]\)&lt;/span&gt;，最后得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)k^2\sum_{i = 1}^{\lfloor\frac{n}{kd}\rfloor}\sum_{j = 1}^{\lfloor\frac{m}{kd}\rfloor}ij\)&lt;/span&gt;。这个东西的后半坨可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt;，然后就是套两层整除分块的事情了。&lt;/p&gt;
&lt;h4 id=&#34;典例-4&#34;&gt;典例 4&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{j=1}^m\sigma_0(ij) = \sum_{d=1}^n\mu(d)F(\lfloor n / d\rfloor)F(\lfloor m /d \rfloor)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;span class=&#34;math inline&#34;&gt;\(F(n) = \displaystyle\sum_{i=1}^n\left\lfloor\frac ni\right\rfloor = \sum_{i=1}^n\sigma_0(i)\)&lt;/span&gt;。推导：首先是一个经典结论，证明见下文： &lt;span class=&#34;math display&#34;&gt;\[
\sigma_0(xy) = \sum_{i\mid x}\sum_{j\mid y}[i\perp j]
\]&lt;/span&gt; 然后就可以开始反演了：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\sum_{j=1}^m\sigma_0(i,j) = \sum_{i=1}^n\sum_{j=1}^m\sum_{x\mid i}\sum_{y\mid j}[\gcd(x,y) = 1]\)&lt;/span&gt;，然后调换一下内外层求和顺序有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\sum_{j=1}^m[\gcd(i,j) = 1]\left\lfloor\frac ni\right\rfloor\left\lfloor \frac mj\right\rfloor\)&lt;/span&gt;。将 &lt;span class=&#34;math inline&#34;&gt;\([\gcd(i,j) = 1]\)&lt;/span&gt; 用 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 来化开之后变为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\sum_{j=1}^m\left\lfloor\frac ni\right\rfloor\left\lfloor \frac mj\right\rfloor\sum_{d\mid i,d\mid j}\mu(d)\)&lt;/span&gt;，再将 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 提到最外面就有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d=1}^n\mu(d)\left(\sum_{d\mid i, i\le n}\sum_{d\mid j,j\le m}\left\lfloor\frac ni\right\rfloor\left\lfloor \frac mj\right\rfloor\right)\)&lt;/span&gt;，里面直接再除以个 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 就有上面那个式子了。&lt;/p&gt;
&lt;p&gt;至于为什么 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\left\lfloor\frac ni\right\rfloor = \sum_{i=1}^n\sigma_0(i)\)&lt;/span&gt;，分析一下 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_0\)&lt;/span&gt; 是如何被贡献出来的即可。&lt;/p&gt;
&lt;h4 id=&#34;其余例题&#34;&gt;其余例题&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1447&#34;&gt;P1447 [NOI2010] 能量采集&lt;/a&gt;：求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{j=1}^m(2\gcd(i,j) - 1)
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;显然将式子化简就变成 &lt;span class=&#34;math inline&#34;&gt;\(2\displaystyle\sum_{i=1}^n\sum_{j=1}^m\gcd(i,j)-nm\)&lt;/span&gt;。现在考虑 &lt;span class=&#34;math inline&#34;&gt;\(\sum_i\sum_j\gcd(i,j)\)&lt;/span&gt; 怎么求。考虑枚举之：&lt;span class=&#34;math inline&#34;&gt;\(\sum_{d}d\sum_i\sum_j[\gcd(i,j)=d]\)&lt;/span&gt;，发现后面就是上面的典例 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 干掉。但是其可以进一步优化。考虑答案式 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d=1}^nd\sum_{k=1}^{\lfloor n /d\rfloor}\mu(k)\lfloor n/kd\rfloor\lfloor m/kd\rfloor\)&lt;/span&gt;。用典例 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的换元，换得 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{T=1}^{n}\sum_{d\mid T}d\mu(T/d)\lfloor n / T\rfloor\lfloor m / T\rfloor\)&lt;/span&gt;，注意到前面的经典结论：&lt;span class=&#34;math inline&#34;&gt;\(\phi = \mu*\mathrm{id}\)&lt;/span&gt;，所以可以写成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{T=1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor\phi(T)\)&lt;/span&gt;。这样就变成 &lt;span class=&#34;math inline&#34;&gt;\(O(n) - O(\sqrt n)\)&lt;/span&gt; 的了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：禁止查看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;禁止查看。&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3312&#34;&gt;洛谷 P3312 [SDOI2014]数表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(Q\le 2\times 10^4\)&lt;/span&gt; 次询问，给定 &lt;span class=&#34;math inline&#34;&gt;\(n,m\le 10^5,a\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\times[\sigma(\gcd(i,j)) \le a]\bmod 2^{31}
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨先忽略 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(\gcd(i,j)) \le a\)&lt;/span&gt; 的限制来化简式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{i = 1}^{\lfloor n/d\rfloor}\sum_{j = 1}^{\lfloor m / d\rfloor}\sum_{x\mid i\land x \mid j}\mu(x)\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{x = 1}^{\lfloor n / d\rfloor}\lfloor n / dx\rfloor\lfloor m/ dx\rfloor\mu(x)\\
=&amp;amp;\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor\sum_{d\mid T}\sigma(d)\mu(T/d)
\end{aligned}
\]&lt;/span&gt; 最后一步换了个元令 &lt;span class=&#34;math inline&#34;&gt;\(T = dx\)&lt;/span&gt;。若再考虑让 &lt;span class=&#34;math inline&#34;&gt;\(f(T) = \displaystyle\sum_{d\mid T}\sigma(d)\mu(T/d)\)&lt;/span&gt;，则要求的东西就被转化为了 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor f(T)
\]&lt;/span&gt; 然后注意到，&lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\)&lt;/span&gt; 能对 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 产生贡献当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\le a\)&lt;/span&gt;，那么不妨离线所有询问然后将询问按 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 排序，再将预处理好的 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\)&lt;/span&gt; 从小到大排序，用树状数组维护 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;，每次加 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\mu(T / d)\)&lt;/span&gt; 都会使得 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的倍数对应的 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 增加。对于每个询问直接整除分块。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q\sqrt n\log n + n \log^2 n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1139D&#34;&gt;CF1139D Steps to One&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定正整数 &lt;span class=&#34;math inline&#34;&gt;\(m\le 10^5\)&lt;/span&gt;，初始空数列，每次随机一个 &lt;span class=&#34;math inline&#34;&gt;\(1\sim m\)&lt;/span&gt; 的整数加在数列末尾，数列的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd = 1\)&lt;/span&gt; 时停止。问期望长度，对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为当前数列 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 时，期望的剩余步数。则我们有朴素转移： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \frac 1m\sum_{j=1}^mf_{\gcd(j, i)} + 1
\]&lt;/span&gt; 边界条件为 &lt;span class=&#34;math inline&#34;&gt;\(f_1 = 0\)&lt;/span&gt;，答案即为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac 1m\sum f_i\)&lt;/span&gt;。需要注意特判 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,j) = i\)&lt;/span&gt; 的情况，解个方程后发现就是 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \frac{1 + \frac1m\sum_{j=1,i\not\mid j}^m f_{\gcd(i,j)}}{1 - \lfloor\frac{m}{i}\rfloor}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(O(m^2\log m)\)&lt;/span&gt; 显然有点寄，套路地枚举 &lt;span class=&#34;math inline&#34;&gt;\(g = \gcd(i,j)\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(c(i,g)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{x=1}^m[\gcd(x, i) = g]\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \frac{1 + \frac1m \sum_{g\mid i,g\ne i}f_gc(i,g)}{1 - \lfloor\frac mi\rfloor}
\]&lt;/span&gt; 现在推导 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
c(i,g) &amp;amp;= \sum_{x=1}^m[\gcd(x,i) = g]\\
&amp;amp;=\sum_{x&amp;#39; =1}^{\lfloor \frac mg\rfloor}[\gcd(x&amp;#39;, i/g) = 1]\\
&amp;amp;=\sum_{x&amp;#39;=1}^{\lfloor\frac mg\rfloor}\sum_{d\mid \gcd(x&amp;#39;, i / g)}\mu(d)\\
&amp;amp;=\sum_{d\mid \frac ig}\mu(d)\left\lfloor\frac{m}{gd} \right\rfloor
\end{aligned}
\]&lt;/span&gt; 于是求 &lt;span class=&#34;math inline&#34;&gt;\(c(i,g)\)&lt;/span&gt; 的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt{\frac ig})\)&lt;/span&gt;。设总时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(T(m)\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
T(m) = \sum_{i=2}^m\sum_{g\mid i}O\left(\sqrt{\frac ig}\right) = \sum_{i=2}^m\sum_{j\mid i}O(\sqrt j) \sim m\int_1^mj^{-0.5}\mathrm{d}j = O(m\sqrt m)
\]&lt;/span&gt; 但是这题还有另一种做法，即直接从期望开推： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E(n) &amp;amp;= \sum_{i\ge 1}P(i = n)\times i\\
&amp;amp;= \sum_{i\ge 1}P(i = n)\sum_{j=1}^i 1\\
&amp;amp;=\sum_{j\ge 1}\sum_{i\ge j}P(n = i)\\
&amp;amp;=\sum_{i\ge 1}P(n\ge i)\\
&amp;amp;= 1 + \sum_{i\ge1}P(n&amp;gt;i)
\end{aligned}
\]&lt;/span&gt; 求 &lt;span class=&#34;math inline&#34;&gt;\(P(n &amp;gt; i)\)&lt;/span&gt; 的时候考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd_{j=1}^{n}\{a_j\} = 1\)&lt;/span&gt; 的时候就会结束，简单容斥一下再反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
P(n&amp;gt;i) &amp;amp;= P\left(\gcd_{j=1}^i\{a_i\} &amp;gt;1\right)\\
&amp;amp;= 1 - P\left(\gcd_{j=1}^i\{a_i\} =1\right)\\
&amp;amp;= 1 - \frac{\sum_{d=1}^m\mu(d)\lfloor\frac md\rfloor^i}{m^i}\\
&amp;amp;= -\frac{\sum_{d=2}^m\mu(d)\lfloor\frac md\rfloor^i}{m^i}
\end{aligned}
\]&lt;/span&gt; 回代上面的式子，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E(n) &amp;amp;= 1 + \sum_{i\ge 1} P(n &amp;gt; i)\\
&amp;amp;= 1 - \sum_{i\ge 1}\frac{\sum_{d=2}^m\mu(d)\lfloor\frac md\rfloor^i}{m^i}\\
&amp;amp;= 1 - \sum_{i\ge 1}\frac{1}{m^i}\sum_{d=2}^m\mu(d)\left\lfloor\frac md\right\rfloor^i\\
&amp;amp;= 1 - \sum_{d=2}^m\mu(d)\sum_{i\ge 1}\left(\frac{\lfloor\frac md\rfloor}{m}\right)^i&amp;amp;\text{recall the formula }x + x^2+\cdots=\frac{x}{1-x}\\
&amp;amp;= 1 - \sum_{d=2}^m\mu(d)\frac{\lfloor\frac md\rfloor}{m - \lfloor\frac md\rfloor}
\end{aligned}
\]&lt;/span&gt; 可以 &lt;span class=&#34;math inline&#34;&gt;\(O(m)\)&lt;/span&gt;，但也可以上杜教做到 &lt;span class=&#34;math inline&#34;&gt;\(O(m^{2/3})\)&lt;/span&gt; 但没必要。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1559E&#34;&gt;CF1559E Mocha and Stars&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求满足如下条件的序列 &lt;span class=&#34;math inline&#34;&gt;\((a_1, a_2, \cdots , a_n)\)&lt;/span&gt; 的数量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, n], a_i\in[l_i, r_i]\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum a_i\le m\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1, a_2, \cdots, a_n) = 1\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 50\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le 10^5\)&lt;/span&gt;，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，发现其为一个背包。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品，背包容量为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数，则有转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \sum_{k = l_i}^{r_i}f_{i - 1, j - k}
\]&lt;/span&gt; 这样直接去做是 &lt;span class=&#34;math inline&#34;&gt;\(O(nm^2)\)&lt;/span&gt; 的，发现转移可以使用前缀和优化，具体设 &lt;span class=&#34;math inline&#34;&gt;\(s_{i, j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math display&#34;&gt;\[
s_{i, j} = \sum_{k = 0}^jf_{i, k}
\]&lt;/span&gt; 然后就有了转移方程 &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = s_{i - 1, j - l_i} - s_{i - 1, j - r_i - 1}
\]&lt;/span&gt; 背包部分的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;。接下来考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，对于这种多个的情况一样可以考虑反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}[\gcd(a_1,\cdots,a_n)=1]\left[\sum_{i = 1}^na_i\le m\right]\\
=&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d \mid \gcd(a_1,\cdots,a_n)}\mu(d)\\ =&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d\mid a_1,\cdots,d \mid a_n}\mu(d)\\
=&amp;amp;\sum_{d=1}^m\mu(d)\sum_{a_1=\lceil\frac{l_1}{d}\rceil}^{\lfloor\frac{r_1}{d}\rfloor}\sum_{a_2=\lceil\frac{l_2}{d}\rceil}^{\lfloor\frac{r_2}{d}\rfloor}\cdots\sum_{a_n=\lceil\frac{l_n}{d}\rceil}^{\lfloor\frac{r_n}{d}\rfloor}\left[\sum_{i = 1}^na_i\le \left\lfloor\frac m d\right\rfloor\right]
\end{aligned}
\]&lt;/span&gt; 然后枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\in[1, m]\)&lt;/span&gt;，发现其就是个子问题，&lt;span class=&#34;math inline&#34;&gt;\(O(nm\log m)\)&lt;/span&gt; 解决。对于 &lt;span class=&#34;math inline&#34;&gt;\(\mu(d) = 0\)&lt;/span&gt; 的情况跳过还可以加速。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P6271&#34;&gt;P6271 [湖北省队互测2014]一个人的数论&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(f_m(n)\)&lt;/span&gt; 为所有小于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 且与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互素的正整数的 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次方之和。给定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的值和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的质因数分解式，求 &lt;span class=&#34;math inline&#34;&gt;\(f_m(n)\bmod 10^9 + 7\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math display&#34;&gt;\[
n = \prod_{i = 1}^{w}p_i^{\alpha_i}
\]&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(1\le w \le 1000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\le p_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le \alpha_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le m \le 100\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一道非常牛逼的题。首先明确要求的内容为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^{n-1}i^m[\gcd(i, n) = 1]
\]&lt;/span&gt; 然后直接开始反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{i=1}^{n-1}i^m[\gcd(i, n) = 1] &amp;amp;= \sum_{i=1}^{n}i^m[\gcd(i, n) = 1]\\
&amp;amp;=\sum_{i=1}^ni^m\sum_{d\mid \gcd(i,n)}\mu(d)\\
&amp;amp;=\sum_{d\mid n}\mu(d)\sum_{i=1}^{\frac nd}(id)^m\\
&amp;amp;=\sum_{d\mid n}\mu(d)d^m\sum_{i=1}^{\frac nd} i^m
\end{aligned}
\]&lt;/span&gt; 然后似乎就化不动了。。但是注意到式子里有形如 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \displaystyle\sum_{i=1}^n i^m\)&lt;/span&gt;，即自然数幂之和，其必然为关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(m + 1\)&lt;/span&gt; 次多项式，因为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 很小所以可以暴力将 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = \displaystyle\sum_{i=0}^{m+1}f_ix^i\)&lt;/span&gt; 的系数消元出来。然后回代一下式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{d\mid n}\mu(d)d^m\sum_{i=1}^{\lfloor\frac nd\rfloor} i^m\\
=&amp;amp;\sum_{d\mid n}\mu(d)d^m\sum_{i=1}^{m+1}f_i\left(\frac nd\right)^{i}\\
=&amp;amp;\sum_{i=1}^{m+1}f_i\sum_{d\mid n}\mu(d)d^m\left(\frac nd\right)^{i}
\end{aligned}
\]&lt;/span&gt; 发现后面那坨是积性函数的卷积，所以可以对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{\alpha_i}\)&lt;/span&gt; 求一遍然后乘起来，现在考虑怎么快速求之。&lt;/p&gt;
&lt;p&gt;注意到有个东西叫 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;，所以会产生贡献的只有 &lt;span class=&#34;math inline&#34;&gt;\(d = 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(d = p_i\)&lt;/span&gt; 的情况，所以要算的实际就是 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{\alpha_ii} - p_i^{m + \alpha_ii - i}\)&lt;/span&gt;。问题解决了，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m^3 + m(m + w))\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;常见结论方法&#34;&gt;常见结论/方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;写代码的时候注意 &lt;code&gt;long long&lt;/code&gt; 和取模的问题，很容易出岔子。&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;化简式子的时候可以将无关变量提前： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^nf(n)\sum_{j = 1}^mk\times g(n) = \sum_{i = 1}^nf(n)k\sum_{j = 1}^mg(n)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交换枚举顺序： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^nf(n)\sum_{d\mid i}g(d) = \sum_{d = 1}^ng(d)\sum_{i = 1}^{\lfloor\frac nd\rfloor}f(id)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尝试构造 &lt;span class=&#34;math inline&#34;&gt;\(\epsilon = [n = 1]\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^mf(\gcd(i, j))\\
=&amp;amp;\sum_{d = 1}^n\sum_{i = 1}^n\sum_{j = 1}^mf(d)[\gcd(i,j) = d]\\
=&amp;amp;\sum_{d = 1}^nf(d)\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = d]
\end{aligned}
\]&lt;/span&gt; 之后就懒得写了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}(i,j) = \dfrac{ij}{\gcd(i,j)}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;过于平凡，不写。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;巧妙换元减少枚举数量： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{P(k)}\sum_{d = 1}^{\lfloor \frac nk\rfloor}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor = \sum_{T = 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T, P(k)}\mu\left(\frac Tk\right)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除数函数的重要性质: &lt;span class=&#34;math display&#34;&gt;\[
d(xy) = \sum_{i\mid x}\sum_{j\mid y}[\gcd(i,j) = 1]
\]&lt;/span&gt; 证明：考虑一一映射每个因子。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(k\mid xy\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 中有因子 &lt;span class=&#34;math inline&#34;&gt;\(p^c\)&lt;/span&gt;，我们强行规定先取 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 中的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，除非不够，再去取 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 中的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。这样子，如若我们要求 &lt;span class=&#34;math inline&#34;&gt;\(i\perp j\)&lt;/span&gt;，则每个因子 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 都唯一对应一个 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt;。命题得证。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于一般的除数函数 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k\)&lt;/span&gt;，上述性质仍然可以扩展： &lt;span class=&#34;math display&#34;&gt;\[
\sigma_k(xy) = \sum_{i\mid x}\sum_{j\mid y}\left(\frac{x}{i}\right)^kj^k[\gcd(i,j) = 1]
\]&lt;/span&gt; 证明依旧考虑上面的思路。可能写成这样会更好理解： &lt;span class=&#34;math display&#34;&gt;\[
\sigma_k(xy) = \sum_{i\mid x}\sum_{j\mid y}i^kj^k[\gcd(x / i, j) =1]
\]&lt;/span&gt; 然后换一下 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x / i\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;欧拉函数的某性质： &lt;span class=&#34;math display&#34;&gt;\[
\varphi(ab) = \varphi(a)\varphi(b)\frac{\gcd(a,b)}{\varphi(\gcd(a,b))}
\]&lt;/span&gt; 证明：考虑唯一分解定理。对于某质因数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，若他在 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 中都出现了，则 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(a)\varphi(b)\)&lt;/span&gt; 把两个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 变成了 &lt;span class=&#34;math inline&#34;&gt;\(p - 1\)&lt;/span&gt;，乘上一个 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{\gcd(a,b)}{\varphi(\gcd(a,b))}\)&lt;/span&gt; 可以将其修正过来。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;筛法&#34;&gt;筛法&lt;/h2&gt;
&lt;h3 id=&#34;埃筛&#34;&gt;埃筛&lt;/h3&gt;
&lt;p&gt;通过“&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是合数，则 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的倍数也是合数”来减少标记次数，即只标记所有素数的倍数。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; Eratosthenes() {&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    isp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = isp[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= N; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) {&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prime[++totp] = i;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * i * i &amp;lt;= N)&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i * i; j &amp;lt;= N; j += i)&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    isp[j] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log\log n)\)&lt;/span&gt;，没有什么弔用，复杂度分析略（因为不会），唯一用处是可以拿来分析 Dirichlet 前缀和的复杂度。&lt;/p&gt;
&lt;h3 id=&#34;线性筛&#34;&gt;线性筛&lt;/h3&gt;
&lt;p&gt;又名欧拉筛，可以以线性的时间复杂度筛出给定值域内的素数。上文已经提到了如何用欧拉筛筛素数，但是欧拉筛的强大之处在于，其利用的&lt;strong&gt;每个合数被最小质因子筛去&lt;/strong&gt;性质使得它可以同时求出积性函数的值。&lt;/p&gt;
&lt;h4 id=&#34;欧拉函数莫比乌斯函数&#34;&gt;欧拉函数/莫比乌斯函数&lt;/h4&gt;
&lt;p&gt;首先再次强调：&lt;strong&gt;每个合数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 会被其最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 筛去&lt;/strong&gt;，下面令 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39; = n / p\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 必然互质，此时有 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = \varphi(n&amp;#39;)\times \varphi(p) = (p - 1)\varphi(n&amp;#39;)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;否则对于 &lt;span class=&#34;math inline&#34;&gt;\(p\mid n&amp;#39;\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 必然包含 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的所有质因子，拆开 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n)\)&lt;/span&gt; 的表达式有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(n) &amp;amp;= n\times \prod \frac{p_i - 1}{p_i}\\
&amp;amp;= p\times n&amp;#39;\times \prod\frac{p_i - 1}{p_i}\\
&amp;amp;= p\times \varphi(n&amp;#39;)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么事情就变得明朗了，对于质数，&lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = n - 1\)&lt;/span&gt;，对于合数，在筛的过程中按照上面的公式求就可以了。注意边界 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(1) = 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    phi[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i] = i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                phi[i * p[j]] = p[j] * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i * p[j]] = (p[j] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;p&gt;而于莫比乌斯函数，则相对更好考虑。还是令 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39; = n / p\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的最小质因子。&lt;/p&gt;
&lt;p&gt;对于质数，&lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = -1\)&lt;/span&gt;，对于合数，按照上面的方式分类讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 一定互质，&lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = -\mu(n&amp;#39;)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;否则 &lt;span class=&#34;math inline&#34;&gt;\(p\mid n&amp;#39;\)&lt;/span&gt;，这说明 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 里面至少有一个平方因子（&lt;span class=&#34;math inline&#34;&gt;\(p^2\)&lt;/span&gt;），所以 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = 0\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还是注意边界，&lt;span class=&#34;math inline&#34;&gt;\(\mu(1) = 1\)&lt;/span&gt;，记不住的话考虑积性函数的性质。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= N; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prime[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * prime[j] &amp;lt;= N; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * prime[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % prime[j]) mu[i * prime[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;del&gt;当然一般是最后要做前缀和的，这个另说吧。&lt;/del&gt;&lt;/p&gt;
&lt;h4 id=&#34;除数函数&#34;&gt;除数函数&lt;/h4&gt;
&lt;p&gt;首先，若将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 唯一分解：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle n = \prod_{i=1}^sp_i^{\alpha_i}\)&lt;/span&gt;，则有 &lt;span class=&#34;math inline&#34;&gt;\(d(n) = \displaystyle\prod_{i=1}^s(1 + \alpha_i)\)&lt;/span&gt;。其组合意义为：每个质因子选不大于 &lt;span class=&#34;math inline&#34;&gt;\(\alpha_i\)&lt;/span&gt; 个出来，其一定为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的因数。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 会被最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 筛去，所以还需要对每个数额外维护其最小质因子的幂次 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于质数，&lt;span class=&#34;math inline&#34;&gt;\(d(n) = 2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(n) = 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt;，根据 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的积性，有 &lt;span class=&#34;math inline&#34;&gt;\(d(n) = 2d(n&amp;#39;)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(n) = 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;否则，根据上面的公式有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle d(n) = \frac{d(n&amp;#39;)}{1 + f(n&amp;#39;)} \times(2 + f(n’))\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(n) = f(n&amp;#39;) + 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;，有如下公式：&lt;span class=&#34;math inline&#34;&gt;\(\sigma(n) = \displaystyle\prod_{i=1}^s\sum_{j=0}^{\alpha_i}p_i^j\)&lt;/span&gt;。组合意义为：考虑每个质因子里面选不同的次数出来组合成这 &lt;span class=&#34;math inline&#34;&gt;\(d(n)\)&lt;/span&gt; 个因数。&lt;/p&gt;
&lt;p&gt;类似的，需要维护最小质因子的各次幂之和 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于质数，&lt;span class=&#34;math inline&#34;&gt;\(\sigma(n) = g(n) = 1 + n\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt;，根据 &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt; 的积性有 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(n) = (p + 1)\sigma(n&amp;#39;)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g(n) = 1 + p\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;否则，根据上面的公式有 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = pg(n&amp;#39;) + 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle \sigma(n) = \frac{\sigma(n&amp;#39;)}{g(n&amp;#39;)}\times g(n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码就不放了，感受了上面的过程之后遇到题目可以自己推导。&lt;/p&gt;
&lt;p&gt;而对于一般的 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k\)&lt;/span&gt;，一样有公式 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k(n) = \displaystyle\prod_{i=1}^s\sum_{j=0}^{\alpha_i} p_i^{jk}\)&lt;/span&gt;。同样维护一下 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h4 id=&#34;幂函数&#34;&gt;幂函数&lt;/h4&gt;
&lt;p&gt;当然，直接 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 求幂函数也是可以的，但是某些时候时限可能会卡的很紧。&lt;/p&gt;
&lt;p&gt;根据 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{id}_k\)&lt;/span&gt; 的完全积性，对于质数处的点值快速幂一下，其他情况直接乘起来就没问题了。&lt;/p&gt;
&lt;h3 id=&#34;杜教筛&#34;&gt;杜教筛&lt;/h3&gt;
&lt;p&gt;杜教筛可以在&lt;strong&gt;低于线性&lt;/strong&gt;的时间复杂度内求出一类&lt;strong&gt;积性函数&lt;/strong&gt;的前缀和。&lt;/p&gt;
&lt;p&gt;前置知识：上文莫比乌斯反演部分，积性函数部分。&lt;/p&gt;
&lt;h4 id=&#34;算法流程&#34;&gt;算法流程&lt;/h4&gt;
&lt;p&gt;是一种类似&lt;em&gt;硬构造&lt;/em&gt;的感觉。令我们要求的积性函数为 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;，其前缀和为 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在想办法构造一个 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt; 关于 &lt;span class=&#34;math inline&#34;&gt;\(S\left(\left\lfloor\dfrac ni\right\rfloor\right)\)&lt;/span&gt; 的递推式，不妨让 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 卷上另一个积性函数 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 然后考虑其前缀和： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i=1}^n (f*g)(i)\\
=&amp;amp;\sum_{i=1}^n\sum_{d\mid i}g(d)f\left(\frac id\right)\\
=&amp;amp;\sum_{d=1}^ng(d)\sum_{i=1}^{\lfloor\frac nd\rfloor}f(i)\\
=&amp;amp;\sum_{d=1}^ng(d)S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\end{aligned}
\]&lt;/span&gt; 第三行是交换枚举顺序然后提出了 &lt;span class=&#34;math inline&#34;&gt;\(g(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后将 &lt;span class=&#34;math inline&#34;&gt;\(g(1)S(n)\)&lt;/span&gt; 移项一下就得到了杜教筛的核心式子： &lt;span class=&#34;math display&#34;&gt;\[
g(1)S(n) = \sum_{i=1}^n(f*g)(i) - \sum_{d=2}^ng(d)S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt; 如果能快速算出 &lt;span class=&#34;math inline&#34;&gt;\((f*g)(n)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt; 的前缀和的话，就意味着上面的式子可以快速递归计算。见下面伪代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll getSum(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (hash[n]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; hash[n]; &lt;span class=&#34;co&#34;&gt;// 记忆化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = f_g_sum(n); &lt;span class=&#34;co&#34;&gt;// 求 (f*g)(i) 的前缀和&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) { &lt;span class=&#34;co&#34;&gt;// 整除分块&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n, n / (n / l));&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret -= (&lt;span class=&#34;va&#34;&gt;g_sum&lt;/span&gt;(r) - &lt;span class=&#34;va&#34;&gt;g_sum&lt;/span&gt;(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * getSum(n / l);&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于网上关于杜教筛复杂度的证明有各种说法，所以此处先咕着。总之一般而言，杜教筛时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{0.75})\)&lt;/span&gt;，若用线性筛提前处理好前 &lt;span class=&#34;math inline&#34;&gt;\(n^{2/3}\)&lt;/span&gt; 项的话复杂度则降低为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{2/3})\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;常见模型&#34;&gt;常见模型&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(\varphi * \boldsymbol 1 = \mathrm{id}\)&lt;/span&gt;，所以取 &lt;span class=&#34;math inline&#34;&gt;\(f = \varphi\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g = 1\)&lt;/span&gt;，然后就可以很容易杜教筛辣： &lt;span class=&#34;math display&#34;&gt;\[
S(n) = \frac{n(n+1)}{2} - \sum_{d=2}^n S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;会发现 &lt;span class=&#34;math inline&#34;&gt;\(\mu * \boldsymbol 1 = \varepsilon\)&lt;/span&gt;，所以取 &lt;span class=&#34;math inline&#34;&gt;\(f = \mu\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g = \boldsymbol 1\)&lt;/span&gt;，然后： &lt;span class=&#34;math display&#34;&gt;\[
S(n) = 1 - \sum_{d=2}^nS\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(2.5\)&lt;/span&gt;：求 &lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{i=1}^n[2\not\mid i]\mu(i)\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即奇数位置上的和。设其为 &lt;span class=&#34;math inline&#34;&gt;\(T(n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的前缀和为 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt;。考虑用 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt; 减去偶数位置上 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的和，至于偶数位置上 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的和，考虑若其只有一个 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 因子，那么 &lt;span class=&#34;math inline&#34;&gt;\(/2\)&lt;/span&gt; 之后其必然是奇数，而若有多个 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的因子的话，显然我们可以不管，于是这部分贡献就是 &lt;span class=&#34;math inline&#34;&gt;\(-T(\lfloor n / 2\rfloor)\)&lt;/span&gt;。所以 &lt;span class=&#34;math display&#34;&gt;\[
T(n) = S(n) + T(\lfloor n / 2\rfloor)
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k\)&lt;/span&gt;，即除数函数，定义见上文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k = \boldsymbol 1 * \mathrm{id}_k\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k * \mu = \mathrm{id}_k\)&lt;/span&gt;，然后： &lt;span class=&#34;math display&#34;&gt;\[
S(n) = \sum_{i=1}^n\mathrm{id}_k(i) - \sum_{d=2}^n\mu(d)S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt; 顺便需要筛出 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\mu\cdot \mathrm{id}_k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\cdot \mathrm{id}_k\)&lt;/span&gt;。点乘型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;构造 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的时候让 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 来一个 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{id}_k\)&lt;/span&gt; 卷掉即可。具体地： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(\mu\cdot \mathrm{id}_k)* \mathrm{id}_k &amp;amp;= \sum_{d\mid n}\mu(d)d^k\left(\frac nd\right)^k\\
&amp;amp;= n^k\sum_{d\mid n}\mu(d)\\
&amp;amp;= \varepsilon
\end{aligned}
\]&lt;/span&gt; 至于欧拉，则有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(\varphi \cdot \mathrm{id}_k) * \mathrm{id}_k &amp;amp;= \sum_{d\mid n}\varphi(d)d^k\left(\frac nd\right)^k\\
&amp;amp;= n^k\sum_{d\mid n}\varphi(d)\\
&amp;amp;= \mathrm{id}^{k + 1}
\end{aligned}
\]&lt;/span&gt; 然后杜教筛的过程略。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;note：常见的 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{id}_k\)&lt;/span&gt; 前缀和：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\mathrm{id}(i) = \frac{n(n+1)}{2}\)&lt;/span&gt;，这个应该是较常规的等差数列求和。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\mathrm{id}_2(i) = \frac{n(n+1)(2n+1)}{6}\)&lt;/span&gt;，证明可以考虑数归。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\mathrm{id}_3(i) = \left[\frac{n(n+1)}{2}\right]^2\)&lt;/span&gt;，证明同样考虑数归。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，由于 &lt;span class=&#34;math inline&#34;&gt;\((\sum \mathrm{id}_k)(n)\)&lt;/span&gt; 是关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(k+ 1\)&lt;/span&gt; 次多项式（经典结论），故当 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 不大时可以考虑将系数插出来然后 &lt;span class=&#34;math inline&#34;&gt;\(O(k)\)&lt;/span&gt; 单次求值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的几个式子建议牢记，可以省去自己推的麻烦。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\mu^2\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应该是比较神仙的构造 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 函数了。&lt;/p&gt;
&lt;p&gt;此处取 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = [n = k^2, k\in \mathbb{N}_+]\)&lt;/span&gt;。虽然 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的前缀和看似不好求，但是我们对于&lt;strong&gt;这种真值表达式的函数，可以改变枚举的策略使得其恒成立，变为常数函数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\((f*g)(n) = \displaystyle\sum_{d\mid n}g(d)f(n / d)\)&lt;/span&gt;，观察发现 &lt;span class=&#34;math inline&#34;&gt;\(g(d)f(n / d)\)&lt;/span&gt; 仅在 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 取到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的最大平方因子时为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。因为若 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 不为最大平方因子，则 &lt;span class=&#34;math inline&#34;&gt;\(n / d\)&lt;/span&gt; 肯定含平方因子，&lt;span class=&#34;math inline&#34;&gt;\(\mu^2(n / d) = 0\)&lt;/span&gt;。否则 &lt;span class=&#34;math inline&#34;&gt;\(n / d\)&lt;/span&gt; 一定不含平方因子，&lt;span class=&#34;math inline&#34;&gt;\(f(n / d) = g(d) = 1\)&lt;/span&gt;。所以 &lt;span class=&#34;math inline&#34;&gt;\(f*g = \boldsymbol 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;套回杜教筛的式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
S(n) &amp;amp;= \sum_{i=1}^n (f*g)(i) - \sum_{d=2}^ng(d)S\left(\left\lfloor\frac nd\right\rfloor \right)\\
&amp;amp;= n - \sum_{d=2}^{\lfloor \sqrt n\rfloor} S\left(\left\lfloor\frac{n}{d^2}\right\rfloor \right)
\end{aligned}
\]&lt;/span&gt; 没法整除分块，所以可能复杂度危。&lt;/p&gt;
&lt;p&gt;但其实还有另一种方法：我们考虑容斥。&lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt; 可以看作 总数 - 一个平方数的倍数 + 两个平方数的倍数 - …..，发现容斥系数就是 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(S(n) = \displaystyle\sum_{i=1}^{\lfloor \sqrt n\rfloor}\mu(i)\lfloor n / i^2\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;另有小结论 &lt;span class=&#34;math inline&#34;&gt;\(\mu^2(n) = \displaystyle\sum_{d^2\mid n}\mu(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;应用-1&#34;&gt;应用&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4213&#34;&gt;P4213 【模板】杜教筛（Sum）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\le 10\)&lt;/span&gt; 组询问，一次询问查询 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的前缀和，&lt;span class=&#34;math inline&#34;&gt;\(n&amp;lt; 2^{31}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要看下代码怎么写的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;unordered_map&amp;lt;ll, ll&amp;gt; Mu, Phi;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll mu[maxn], phi[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], p[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init() {&lt;span class=&#34;co&#34;&gt;// 线性筛 mu 和 phi 在 1e7 处前缀和的过程省略}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll getSumPhi(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt;= maxn)&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; phi[n];&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (Phi[n])&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Phi[n];&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = (ll)(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (ll)n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;; &lt;span class=&#34;co&#34;&gt;// id 的前缀和&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans -= (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt;) * getSumPhi(n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Phi[n] = ans; &lt;span class=&#34;co&#34;&gt;// 记忆化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll getSumMu(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt;= maxn)&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; mu[n];&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (Mu[n])&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Mu[n];&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;co&#34;&gt;// epsilon 的前缀和就是 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-30&#34;&gt;&lt;a href=&#34;#cb7-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans -= (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt;) * getSumMu(n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-31&#34;&gt;&lt;a href=&#34;#cb7-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-32&#34;&gt;&lt;a href=&#34;#cb7-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Mu[n] = ans; &lt;span class=&#34;co&#34;&gt;// 记忆化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-33&#34;&gt;&lt;a href=&#34;#cb7-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://loj.ac/p/6491&#34;&gt;LOJ#6491. 「XXOI 2018」简单的最大公约数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ABC162E - Sum of gcd of Tuples (Hard) 的加强：给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le N, K\le 10^{11}\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{a_1 = 1}^K\sum_{a_2 = 1}^K\cdots\sum_{a_N = 1}^K\gcd_{i = 1}^N\{a_i\}\bmod {10^9 + 7}
\]&lt;/span&gt; 答案对 &lt;span class=&#34;math inline&#34;&gt;\(2^{64}\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先考虑反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{a_1 = 1}^K\sum_{a_2 = 1}^K\cdots\sum_{a_N = 1}^K\gcd_{i = 1}^N\{a_i\}\\
=&amp;amp;\sum_{a_1 = 1}^K\cdots\sum_{a_N = 1}^K\sum_{d\mid a_1,\cdots d\mid a_N}\varphi(d)\\
=&amp;amp;\sum_{d = 1}^K\varphi(d)\sum_{a_1 = 1}^K\cdots\sum_{a_N = 1}^K[d\mid \gcd\{a_i\}]\\
=&amp;amp;\sum_{d = 1}^K\varphi(d)\left\lfloor\frac Kd\right\rfloor^N
\end{aligned}
\]&lt;/span&gt; 然后就可以整除分块 + 杜教筛了，时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{2/3})\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3768&#34;&gt;P3768 简单的数学题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{10}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(5\times 10^8\le p\le 1.1\times 10^9\)&lt;/span&gt;，保证 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数，求 &lt;span class=&#34;math display&#34;&gt;\[
\left(\sum_{i=1}^n\sum_{j=1}^nij\gcd(i,j) \right)\bmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先显然先欧拉反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{i=1}^n\sum_{j=1}^nij\gcd(i,j) &amp;amp;= \sum_{i=1}^n\sum_{j=1}^nij\sum_{d\mid \gcd(i,j)}\varphi(d)\\
&amp;amp;= \sum_{d=1}^n\varphi(d)\sum_{i=1}^n[d\mid i]i\sum_{j=1}^n[d\mid j]j\\
&amp;amp;= \sum_{d=1}^n\varphi(d)d^2 \left( \frac{(1 + \lfloor n / d\rfloor)\lfloor n / d\rfloor}{2}\right)^2
\end{aligned}
\]&lt;/span&gt; 发现后面那坨式子可以整除分块，而 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(d)d^2\)&lt;/span&gt; 就是上面讲的 &lt;span class=&#34;math inline&#34;&gt;\(\varphi \cdot \mathrm{id}_k\)&lt;/span&gt; 类型，直接做即可。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>正睿 OI 暑高端峰会补题日记</title>
        <link>https://oi.imyangty.com/note-zroi202107/</link>
        <pubDate>Wed, 28 Jul 2021 18:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-zroi202107/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg29.webp" alt="Featured image of post 正睿 OI 暑高端峰会补题日记" /&gt;&lt;p&gt;密码：ACM password 5&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;clbnb&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;p&gt;加粗了的题目较为重要，先补。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;R&lt;/th&gt;
&lt;th&gt;出题人&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;review&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;yjz&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;yjz&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;袁浩天&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;袁浩天&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;csl&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;csl&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;xtq&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;xtq&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;lk&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;lk&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;day-1-dp&#34;&gt;Day 1 dp&lt;/h2&gt;
&lt;h3 id=&#34;例题&#34;&gt;例题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf1238e/&#34;&gt;Sol.&lt;/a&gt;】【状压】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1238E&#34;&gt;CF1238E Keyboard Purchase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【数位】&lt;a href=&#34;https://www.luogu.com.cn/problem/P7609&#34;&gt;P7609 [THUPC2021] 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望】&lt;a href=&#34;https://codeforces.com/gym/101623/problem/E&#34;&gt;NWERC 2017 E - English Restaurant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf1237f/&#34;&gt;Sol.&lt;/a&gt;】【计数】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1237F&#34;&gt;CF1237F Balanced Domino Placements&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【计数】&lt;a href=&#34;https://atcoder.jp/contests/arc112/tasks/arc112_e&#34;&gt;ARC112E - Cigar Box&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-uva1322/&#34;&gt;Sol.&lt;/a&gt;】【DS优化】&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA1322&#34;&gt;UVA1322 优化最大值电路 Minimizing Maximizer&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【DS优化】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=6856&#34;&gt;HDU6856 Breaking Down News&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【倍增】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1322D&#34;&gt;CF1322D Reality Show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【决策单调性】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=6065&#34;&gt;HDU6065 RXD, tree and sequence&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望 + 四边形不等式】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=6065&#34;&gt;AOJ2591 Speedrun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;习题&#34;&gt;习题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1106E&#34;&gt;CF1106E Lunar New Year and Red Envelopes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5492&#34;&gt;P5492 [PKUWC2018]随机算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://atcoder.jp/contests/dp/tasks/dp_y&#34;&gt;ATC DP Y - Grid 2&lt;/a&gt; &lt;a href=&#34;https://www.luogu.com.cn/problem/AT4546&#34;&gt;洛谷&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://atcoder.jp/contests/dp/tasks/dp_w&#34;&gt;ATC DP W - Intervals&lt;/a&gt; &lt;a href=&#34;https://www.luogu.com.cn/problem/AT4544&#34;&gt;洛谷&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://www.luogu.com.cn/problem/P2612&#34;&gt;P2612 [ZJOI2012]波浪&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-2-字符串&#34;&gt;Day 2 字符串&lt;/h2&gt;
&lt;h3 id=&#34;例题-1&#34;&gt;例题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【&lt;strong&gt;Done&lt;/strong&gt;】【最小表示法】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=2609&#34;&gt;HDU2609 How many&lt;/a&gt; 找出最小表示后去重计数即可&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【Manacher】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4287&#34;&gt;P4287 [SHOI2011]双倍回文&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5446/&#34;&gt;Sol.&lt;/a&gt;】【Manacher】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5446&#34;&gt;P5446 [THUPC2018]绿绿和串串&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Z 算法】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5334&#34;&gt;P5334 [JSOI2019]节日庆典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Z 算法】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1466G&#34;&gt;CF1466G Song of the Sirens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf696d/&#34;&gt;Sol.&lt;/a&gt;】【ACAM】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF696D&#34;&gt;CF696D Legen…&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SA 和 SAM 的题不打算补了。。。要慢慢学&lt;/p&gt;
&lt;h2 id=&#34;day-3-数论&#34;&gt;Day 3 数论&lt;/h2&gt;
&lt;h3 id=&#34;例题-2&#34;&gt;例题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;【Done】【类欧】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5170&#34;&gt;P5170 【模板】类欧几里得算法&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【素数】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4718&#34;&gt;P4718 【模板】Pollard-Rho算法&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf338d/&#34;&gt;Sol.&lt;/a&gt;】【CRT】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF338D&#34;&gt;CF338D GCD Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【原根】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6091&#34;&gt;P6091 【模板】原根&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3321/&#34;&gt;Sol.&lt;/a&gt;】【原根、FFT】&lt;a href=&#34;https://www.luogu.com.cn/problem/P3321&#34;&gt;P3321 [SDOI2015]序列统计&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Stern-Brocot】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/2852&#34;&gt;BZOJ#2852. 强大的区间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Stern-Brocot】&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1517&#34;&gt;51nod 1517 递推、平方根与误差&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【Lucas】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6669&#34;&gt;P6669 [清华集训2016] 组合数问题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-51nod1778/&#34;&gt;Sol.&lt;/a&gt;】【Lucas】&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1778&#34;&gt;51nod 1778 小Q的集合&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-hdu4944/&#34;&gt;Sol.&lt;/a&gt;】【莫反】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=4944&#34;&gt;hdu 4944 FSF’s game&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-bzoj3601/&#34;&gt;Sol.&lt;/a&gt;】【莫反】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3601&#34;&gt;BZOJ #3601. 一个人的数论&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【莫反】&lt;a href=&#34;https://uoj.ac/problem/62&#34;&gt;UOJ#62. 【UR #5】怎样跑得更快&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Done】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5495&#34;&gt;P5495 Dirichlet 前缀和&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;习题-1&#34;&gt;习题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【Todo】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3853&#34;&gt;BZOJ#3853. GCD Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】&lt;a href=&#34;https://www.luogu.com.cn/problem/SP20173&#34;&gt;SP20173 DIVCNT2 - Counting Divisors (square)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1986&#34;&gt;51nod 1986 Jason曾不想做的数论题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/2142&#34;&gt;BZOJ#2142. 礼物&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-4-数学&#34;&gt;Day 4 数学&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;【Done】【逆阵】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4783&#34;&gt;P4783 【模板】矩阵求逆&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【高消】&lt;a href=&#34;https://www.luogu.com.cn/problem/P2455&#34;&gt;P2455 [SDOI2006]线性方程组&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【高消】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF446D&#34;&gt;CF446D DZY Loves Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p7429/&#34;&gt;Sol.&lt;/a&gt;】【行列式】&lt;a href=&#34;https://www.luogu.com.cn/problem/P7429&#34;&gt;P7429 [THUPC2017] 气氛&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【LGV】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6657&#34;&gt;P6657 【模板】LGV 引理&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【LGV】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF348D&#34;&gt;CF348D Turtles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【LGV】&lt;a href=&#34;https://www.luogu.com.cn/problem/P7736&#34;&gt;P7736 [NOI2021] 路径交点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【BEST】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5807&#34;&gt;P5807 Which Dreamed It /【模板】BEST 定理&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【BEST】&lt;a href=&#34;https://uoj.ac/problem/226&#34;&gt;UOJ#226. 【UR #15】奥林匹克环城马拉松&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4007&#34;&gt;P4007 小 Y 和恐怖的奴隶主&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6899&#34;&gt;P6899 [ICPC2014 WF]Pachinko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF963E&#34;&gt;CF963E Circles of Waiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF923E&#34;&gt;CF923E Perpetual Subtraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-12305&#34;&gt;TopCoder 12305 Orienteering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-14156&#34;&gt;TopCoder 14156 RandomWalkOnGrid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【组合】&lt;a href=&#34;https://www.luogu.com.cn/problem/AT2705&#34;&gt;AGC019F Yes or No&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【组合】&lt;a href=&#34;https://www.luogu.com.cn/problem/AT1983&#34;&gt;AGC001E BBQ Hard&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3301/&#34;&gt;Sol.&lt;/a&gt;】【容斥】&lt;a href=&#34;https://www.luogu.com.cn/problem/P3301&#34;&gt;P3301 [SDOI2013]方程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【组合】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-14170&#34;&gt;TopCoder 14170 DivFree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p6076/&#34;&gt;Sol.&lt;/a&gt;】【容斥】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6076&#34;&gt;P6076 [JSOI2015]染色问题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【容斥】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3782&#34;&gt;BZOJ#3782. 上学路线&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【组合】&lt;a href=&#34;https://www.luogu.com.cn/problem/P2159&#34;&gt;P2159 [SHOI2009]舞会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【minmax】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5643&#34;&gt;P5643 [PKUWC2018]随机游走&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【minmax】&lt;a href=&#34;https://www.luogu.com.cn/problem/P3349&#34;&gt;P3349 [ZJOI2016]小星星&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【minmax】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF53E&#34;&gt;CF53E Dead Ends&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-5-acm&#34;&gt;Day 5 ACM&lt;/h2&gt;
&lt;h3 id=&#34;donea-gym102501i-rats&#34;&gt;【Done】A GYM102501I Rats&lt;/h3&gt;
&lt;p&gt;SB 题&lt;/p&gt;
&lt;h3 id=&#34;b-gym102483f-fastest-speedrun&#34;&gt;B GYM102483F Fastest Speedrun&lt;/h3&gt;
&lt;p&gt;理解题意。&lt;/p&gt;
&lt;p&gt;化为图论来做，将捷径通关的关系化为基环森林&lt;/p&gt;
&lt;h3 id=&#34;c-gym102576k-to-argue-or-not-to-argue&#34;&gt;C GYM102576K To argue, or not to argue&lt;/h3&gt;
&lt;p&gt;容斥一下，然后使用轮廓线 dp。&lt;/p&gt;
&lt;h3 id=&#34;d-gym102483d-date-pickup&#34;&gt;D GYM102483D Date Pickup&lt;/h3&gt;
&lt;p&gt;二分答案&lt;/p&gt;
&lt;h3 id=&#34;e-gym102536m-thin-ice&#34;&gt;E GYM102536M Thin Ice&lt;/h3&gt;
&lt;p&gt;大力分类讨论&lt;/p&gt;
&lt;p&gt;奇偶分类讨论，构造方案&lt;/p&gt;
&lt;h3 id=&#34;donef-gym102536l-break-the-pattern&#34;&gt;【Done】F GYM102536L Break the Pattern!&lt;/h3&gt;
&lt;p&gt;题意：求 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个次数最高为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的多项式，满足 &lt;span class=&#34;math inline&#34;&gt;\(s_1,\cdots,s_l\)&lt;/span&gt; 均为其根。&lt;/p&gt;
&lt;p&gt;去重 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 之后直接暴力卷积卷出一个 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 次多项式，然后乘上常数 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 输出即可。&lt;/p&gt;
&lt;h3 id=&#34;doneg-gym102501j-counting-trees&#34;&gt;【Done】G GYM102501J Counting Trees&lt;/h3&gt;
&lt;p&gt;比较有意思的题。&lt;/p&gt;
&lt;p&gt;题意：给定一棵二叉树的点权的中序遍历，问有多少种满足条件的二叉树。条件为父亲的点权小于等于儿子的点权。&lt;/p&gt;
&lt;p&gt;首先注意到可以递归分治。&lt;/p&gt;
&lt;p&gt;在处理 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 的时候可以找到所有的最小元素 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;，然后考虑对于只含 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的所有二叉树，剩下的区间都是只有唯一的位置插入的，所以可以继续分治下去。含 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的所有二叉树的数量即为卡特兰数，可以直接做。&lt;/p&gt;
&lt;h3 id=&#34;h-gym101385g-power-sum-graphs&#34;&gt;H GYM101385G Power Sum Graphs&lt;/h3&gt;
&lt;p&gt;阅读理解，每条边代表一个条件表示一个数小于另一个数。&lt;/p&gt;
&lt;p&gt;拓扑排序然后直接构造。有环表示不合法。&lt;/p&gt;
&lt;h3 id=&#34;i-gym102501k-birdwatching&#34;&gt;I GYM102501K Birdwatching&lt;/h3&gt;
&lt;p&gt;阅读理解题，反向建图。&lt;/p&gt;
&lt;h3 id=&#34;j-gym102576e-contamination&#34;&gt;J GYM102576E Contamination&lt;/h3&gt;
&lt;p&gt;询问离线，然后扫描线。&lt;/p&gt;
&lt;h3 id=&#34;k-gym102984a-mango&#34;&gt;K GYM102984A Mango&lt;/h3&gt;
&lt;h3 id=&#34;l-gym102984b-koosagas-problem&#34;&gt;L GYM102984B Koosaga’s Problem&lt;/h3&gt;
&lt;p&gt;基本环，随机&lt;/p&gt;
&lt;p&gt;较重要&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;就是用异或和来求有没有某条边或者某两条边被每个奇环全部覆盖且不会影响到偶环&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;donem-gym102500i-inverted-deck&#34;&gt;【Done】M GYM102500I Inverted Deck&lt;/h3&gt;
&lt;p&gt;问能否将一个序列的一段翻转以使序列单调非减。&lt;/p&gt;
&lt;p&gt;直接复制一份，排序，直接从两边找反转端点。&lt;/p&gt;
&lt;h2 id=&#34;day-6-杂题&#34;&gt;Day 6 杂题&lt;/h2&gt;
&lt;h3 id=&#34;loj3036.-joisc-2019-day3指定城市&#34;&gt;LOJ#3036. 「JOISC 2019 Day3」指定城市&lt;/h3&gt;
&lt;p&gt;考虑确定一个点为根之后的情况，发现就是将所有的长链排个序。&lt;/p&gt;
&lt;p&gt;选 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个点的方案包含选 $k -1 $ 个点的方案&lt;/p&gt;
&lt;h3 id=&#34;loj3037.-joisc-2019-day3开关游戏&#34;&gt;LOJ#3037. 「JOISC 2019 Day3」开关游戏&lt;/h3&gt;
&lt;p&gt;考虑 dp，若证明一个位置最多被操作两次，便可以直接暴力 dp。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, k}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，第一次操作为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，第二次操作为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的答案。直接暴力转移。&lt;/p&gt;
&lt;p&gt;考虑证明：&lt;/p&gt;
&lt;h3 id=&#34;loj3038.-joisc-2019-day3穿越时空-bitaro&#34;&gt;LOJ#3038. 「JOISC 2019 Day3」穿越时空 Bitaro&lt;/h3&gt;
&lt;p&gt;线段树维护每个区间信息，直接查询&lt;/p&gt;
&lt;h3 id=&#34;loj3033.-joisc-2019-day2两个天线&#34;&gt;LOJ#3033. 「JOISC 2019 Day2」两个天线&lt;/h3&gt;
&lt;p&gt;先考虑 &lt;span class=&#34;math inline&#34;&gt;\(l = 1, r = n\)&lt;/span&gt; 的情况。线段树上加 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 扫 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;正解主席树。&lt;/p&gt;
&lt;h3 id=&#34;loj3034.-joisc-2019-day2两道料理&#34;&gt;LOJ#3034. 「JOISC 2019 Day2」两道料理&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt; 的 dp trivial。&lt;/p&gt;
&lt;p&gt;线段树优化 dp，对于一列的 dp 值用线段树来维护。&lt;/p&gt;
&lt;h3 id=&#34;loj2399.-joisc-2017-day-4绑架-2&#34;&gt;LOJ#2399. 「JOISC 2017 Day 4」绑架 2&lt;/h3&gt;
&lt;p&gt;走的道路权值单调不降。注意到走的时候只能往两个方向走一个区间的位置，可以进行 dp。&lt;/p&gt;
&lt;p&gt;复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q(h + w))\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;loj2392.-joisc-2017-day-1烟花棒&#34;&gt;LOJ#2392. 「JOISC 2017 Day 1」烟花棒&lt;/h3&gt;
&lt;p&gt;神奇的二分答案 + 贪心&lt;/p&gt;
&lt;h3 id=&#34;loj2737.-joisc-2016-day-3电报&#34;&gt;LOJ#2737. 「JOISC 2016 Day 3」电报&lt;/h3&gt;
&lt;p&gt;显然要构造一个环。&lt;/p&gt;
&lt;p&gt;把我们要删的边删掉，剩下的显然为链。&lt;/p&gt;
&lt;p&gt;在基环树上面 dp，划分为若干条链然后要求链尾的权值和最小。&lt;/p&gt;
&lt;h3 id=&#34;loj2736.-joisc-2016-day-3回转寿司&#34;&gt;LOJ#2736. 「JOISC 2016 Day 3」回转寿司&lt;/h3&gt;
&lt;p&gt;分块。先考虑 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的情况，不难发现我们只关心数字的集合，对于整块可以维护一个堆进行类似处理，而对于散块则需要暴力重构。复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q\sqrt n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;loj3523.-ioi2021分糖果&#34;&gt;LOJ#3523. 「IOI2021」分糖果&lt;/h3&gt;
&lt;p&gt;考虑上面那题类似的想法。&lt;/p&gt;
&lt;p&gt;对于散块，每次需要找到前缀最小值/最大值的位置，当前缀最大值和最小值的差小于等于 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 的时候就会停下来&lt;/p&gt;
&lt;h3 id=&#34;loj2882.-joisc-2014-day4两个人的星座&#34;&gt;LOJ#2882. 「JOISC 2014 Day4」两个人的星座&lt;/h3&gt;
&lt;p&gt;考虑枚举两个点，连一条线 &lt;span class=&#34;math inline&#34;&gt;\(AA&amp;#39;\)&lt;/span&gt;，在 &lt;span class=&#34;math inline&#34;&gt;\(AA&amp;#39;\)&lt;/span&gt; 的一侧找 &lt;span class=&#34;math inline&#34;&gt;\(\triangle ABC\)&lt;/span&gt;，另一侧找 &lt;span class=&#34;math inline&#34;&gt;\(\triangle A&amp;#39;B&amp;#39;C&amp;#39;\)&lt;/span&gt;，一定会是合法的。而且这样子每对合法三角形都会被统计两次。&lt;/p&gt;
&lt;p&gt;枚举点对，然后用极角排序维护方案。&lt;/p&gt;
&lt;h3 id=&#34;loj2393.-joisc-2017-day-2门票安排&#34;&gt;LOJ#2393. 「JOISC 2017 Day 2」门票安排&lt;/h3&gt;
&lt;p&gt;神仙贪心？咕咕咕&lt;/p&gt;
&lt;h2 id=&#34;day-7-ds&#34;&gt;Day 7 DS&lt;/h2&gt;
&lt;p&gt;呜呜，全部不会。&lt;/p&gt;
&lt;h3 id=&#34;p3642-apio2016烟火表演&#34;&gt;P3642 [APIO2016]烟火表演&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_{i,j} = \sum_{v\in S(i)}\min_{x\le j}\{f_{v, j - x} + |x - w_{i,j}|\}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(|x - w_{i,j}|\)&lt;/span&gt; 是下凸的，大胆猜想 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 为凸函数。&lt;/p&gt;
&lt;p&gt;用可并堆维护&lt;/p&gt;
&lt;h3 id=&#34;hdu6800-play-osu-on-your-tablet&#34;&gt;HDU6800 Play osu! on Your Tablet&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; dp 较 trivial&lt;/p&gt;
&lt;h3 id=&#34;p5163-wd与地图&#34;&gt;P5163 WD与地图&lt;/h3&gt;
&lt;p&gt;难点在于如何维护 SCC。&lt;/p&gt;
&lt;p&gt;整体二分&lt;/p&gt;
&lt;h3 id=&#34;p4690-ynoi2016-镜中的昆虫&#34;&gt;P4690 [Ynoi2016] 镜中的昆虫&lt;/h3&gt;
&lt;p&gt;树套树二维数点，需要维护奇怪的信息。合并连续段&lt;/p&gt;
&lt;h3 id=&#34;bzoj3779-重组病毒&#34;&gt;BZOJ3779 重组病毒&lt;/h3&gt;
&lt;p&gt;LCT。P3703&lt;/p&gt;
&lt;h3 id=&#34;uoj228.-基础数据结构练习题&#34;&gt;UOJ#228. 基础数据结构练习题&lt;/h3&gt;
&lt;p&gt;神奇的势能分析 + 线段树&lt;/p&gt;
&lt;h3 id=&#34;p5073-ynoi2015-世上最幸福的女孩&#34;&gt;P5073 [Ynoi2015] 世上最幸福的女孩&lt;/h3&gt;
&lt;p&gt;线段树 + 凸包 + 闵可夫斯基和&lt;/p&gt;
&lt;h3 id=&#34;donep3302-sdoi2013森林&#34;&gt;【Done】P3302 [SDOI2013]森林&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3302/&#34;&gt;solution&lt;/a&gt;启发式合并+主席树。先补P2633 Count on a tree（done）&lt;/p&gt;
&lt;h3 id=&#34;p4602-ctsc2018混合果汁&#34;&gt;P4602 [CTSC2018]混合果汁&lt;/h3&gt;
&lt;p&gt;主席树 + 二分贪心&lt;/p&gt;
&lt;h3 id=&#34;p6765-apio2020交换城市&#34;&gt;P6765 [APIO2020]交换城市&lt;/h3&gt;
&lt;p&gt;二分答案。加入所有的长度 &amp;lt;= 当前答案的边。 考虑一对点可行当且仅当它们在一个连通块里，且该连通块有环或者包含一个度数 &amp;gt;=3 的点&lt;/p&gt;
&lt;p&gt;用并查集维护连通块内度数最小和最大的点&lt;/p&gt;
&lt;p&gt;或者使用 Kruskal 重构树&lt;/p&gt;
&lt;h3 id=&#34;donep2839-国家集训队middle&#34;&gt;【Done】P2839 [国家集训队]middle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2839/&#34;&gt;Sol&lt;/a&gt;。区间中位数有令为 &lt;span class=&#34;math inline&#34;&gt;\(-1, 0, 1\)&lt;/span&gt; 的套路。主席树。&lt;/p&gt;
&lt;h3 id=&#34;hdu5756-boss-bo&#34;&gt;HDU5756 Boss Bo&lt;/h3&gt;
&lt;p&gt;好点在 dfs 序上最多 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个连续的区间&lt;/p&gt;
&lt;p&gt;主席树维护。&lt;/p&gt;
&lt;h2 id=&#34;day-8-模拟赛-1&#34;&gt;Day 8 模拟赛 1&lt;/h2&gt;
&lt;h3 id=&#34;a&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;玄学向外扩展&lt;/p&gt;
&lt;h3 id=&#34;b&#34;&gt;B&lt;/h3&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;给定一 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点构成的网格状四连通块，起初全是白色，要求涂黑最少数量的点，然后能通过下面的操作使得所有点被染黑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若田字格中有三个黑色，则第四个会自动变成黑色。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能要构造方案。&lt;/p&gt;
&lt;h4 id=&#34;solution&#34;&gt;Solution&lt;/h4&gt;
&lt;p&gt;答案为 &lt;span class=&#34;math inline&#34;&gt;\(C / 2 + 1\)&lt;/span&gt;，方案不难构造。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Point {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, id;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;lt;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;b) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x == b.x ? y &amp;lt; b.y : x &amp;lt; b.x;}&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;map&amp;lt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; exist;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define mp&lt;/span&gt;(x,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;y)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;make_pair(x,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;y)&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(type);&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(p[i].x), read(p[i].y), exist[mp(p[i].x, p[i].y)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p[i].id = i;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exist[mp(p[i].x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p[i].y)] &amp;amp;&amp;amp; exist[mp(p[i].x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p[i].y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] &amp;amp;&amp;amp; exist[mp(p[i].x, p[i].y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)]);&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans.push_back(p[i].id);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans.size()), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (type) &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; i : ans) print(i), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;c&#34;&gt;C&lt;/h3&gt;
&lt;h4 id=&#34;description-1&#34;&gt;Description&lt;/h4&gt;
&lt;h4 id=&#34;solution-1&#34;&gt;Solution&lt;/h4&gt;
&lt;h2 id=&#34;day-9-模拟赛2&#34;&gt;Day 9 模拟赛2&lt;/h2&gt;
&lt;h3 id=&#34;a-1&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;BC都不会，不补了。&lt;/p&gt;
&lt;h2 id=&#34;day-10-模拟赛3&#34;&gt;Day 10 模拟赛3&lt;/h2&gt;
&lt;h3 id=&#34;a-2&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;傻逼结论题&lt;/p&gt;
&lt;p&gt;考虑一个 &lt;span class=&#34;math inline&#34;&gt;\(t = 2\)&lt;/span&gt; 的情况。&lt;/p&gt;
&lt;p&gt;我们就是要求 &lt;span class=&#34;math inline&#34;&gt;\(x_1 + Dx_2\ge W_0\)&lt;/span&gt; 而且要最小化 &lt;span class=&#34;math inline&#34;&gt;\(x_1^2 + x_2^2\)&lt;/span&gt;。左边那个东西很像线性规划，所以我们在坐标系里面画出来这个可行域。然后既然要最小化 &lt;span class=&#34;math inline&#34;&gt;\(x_1^2 + x_2^2\)&lt;/span&gt;，并且这条直线的斜率小于 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;，那么就是点到直线的距离公式，答案就是： &lt;span class=&#34;math display&#34;&gt;\[
(\frac{|-W_0|}{\sqrt{1^2 }})^2 =(\frac{|-W_0|}{\sqrt{1^2 + D^2}})^2 = \frac{W_0^2}{1 + D^2}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后推广一下，我们会发现 &lt;span class=&#34;math inline&#34;&gt;\(x_1 + Dx_2 + D^2x_3= W_0\)&lt;/span&gt; 是一个平面，然后把上面的形式一推广，就是点到平面的距离公式，于是答案就是 &lt;span class=&#34;math display&#34;&gt;\[
\frac{W_0^2}{1 + D^2 + D^4}
\]&lt;/span&gt; 然后依次推广，结论就是 &lt;span class=&#34;math display&#34;&gt;\[
\frac{W_0^2}{\sum_{i = 0}^{t - 1}D^{2i}}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;b-1&#34;&gt;B&lt;/h3&gt;
&lt;h3 id=&#34;c-1&#34;&gt;C&lt;/h3&gt;
&lt;p&gt;朴素的 dp 显然，&lt;span class=&#34;math inline&#34;&gt;\(O(nmk)\)&lt;/span&gt;，可以通过随机数据。&lt;/p&gt;
&lt;p&gt;由于所有 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的总长最小为 &lt;span class=&#34;math inline&#34;&gt;\(2\times 10^5\)&lt;/span&gt;，而不同串长个数又是 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{|T|}\)&lt;/span&gt; 级别的，所以直接记录一下 fail 树上面第一个有 end 的节点，然后这样跳的复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;h2 id=&#34;day-11-模拟赛-4&#34;&gt;Day 11 模拟赛 4&lt;/h2&gt;
&lt;h2 id=&#34;day-12-模拟赛-5&#34;&gt;Day 12 模拟赛 5&lt;/h2&gt;
&lt;h2 id=&#34;day-13-模拟赛-6&#34;&gt;Day 13 模拟赛 6&lt;/h2&gt;
&lt;h2 id=&#34;day-14-模拟赛-7&#34;&gt;Day 14 模拟赛 7&lt;/h2&gt;
&lt;h2 id=&#34;day-15-模拟赛-8&#34;&gt;Day 15 模拟赛 8&lt;/h2&gt;
&lt;h2 id=&#34;day-16-模拟赛-9&#34;&gt;Day 16 模拟赛 9&lt;/h2&gt;
&lt;h2 id=&#34;day-17-模拟赛-10&#34;&gt;Day 17 模拟赛 10&lt;/h2&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>决策单调性优化动态规划</title>
        <link>https://oi.imyangty.com/note-mono-opti-dp/</link>
        <pubDate>Mon, 26 Jul 2021 17:06:49 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-mono-opti-dp/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg21.webp" alt="Featured image of post 决策单调性优化动态规划" /&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;决策单调性的定义&#34;&gt;决策单调性的定义&lt;/h2&gt;
&lt;p&gt;对于任意四个转移点 &lt;span class=&#34;math inline&#34;&gt;\(a &amp;lt; b &amp;lt; c &amp;lt; d\)&lt;/span&gt;。若以下条件满足：&lt;span class=&#34;math inline&#34;&gt;\(f_c\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 转移比从 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 转移优可以推出 &lt;span class=&#34;math inline&#34;&gt;\(f_d\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 转移比从 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 转移优，则说明满足决策单调性。&lt;/p&gt;
&lt;p&gt;即：dp 的转移点是单调的。&lt;/p&gt;
&lt;h2 id=&#34;四边形不等式在-2d1d-动态规划中的应用&#34;&gt;四边形不等式在 2D/1D 动态规划中的应用&lt;/h2&gt;
&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;在区间 dp 中，经常会遇到以下形式的状态转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f(l, r) = \min_{l\le k &amp;lt; r}\left\{f(l, k) + f(k + 1, r)\right\} + w(l, r)
\]&lt;/span&gt; 直接暴力的做，复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt;，但如果 &lt;span class=&#34;math inline&#34;&gt;\(w(l, r)\)&lt;/span&gt; 满足一些特殊性质时，可以考虑四边形不等式优化成 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;基本概念&lt;/h3&gt;
&lt;p&gt;首先，令 &lt;span class=&#34;math inline&#34;&gt;\(w(l, r)\)&lt;/span&gt; 为定义在 &lt;span class=&#34;math inline&#34;&gt;\(\mathbb Z\)&lt;/span&gt; 上的二元函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;区间包含的单调性：若 &lt;span class=&#34;math inline&#34;&gt;\(\forall a \le b &amp;lt; c \le d\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(w(b, c) \le w(a, d)\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 具有区间包含的单调性。（即里面不超过外面）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;四边形不等式：若 &lt;span class=&#34;math inline&#34;&gt;\(\forall a \le b &amp;lt; c\le d\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(w(a, c) + w(b, d)\le w(b, c) + w(a, d)\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 满足四边形不等式。（记忆方法：&lt;strong&gt;交叉小于包含&lt;/strong&gt;）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;四边形不等式定理&#34;&gt;四边形不等式定理&lt;/h3&gt;
&lt;p&gt;四边形不等式定理：若 &lt;span class=&#34;math inline&#34;&gt;\(w(i, j)\)&lt;/span&gt; 满足四边形不等式和单调性，则 dp 计算 &lt;span class=&#34;math inline&#34;&gt;\(f(i, j)\)&lt;/span&gt; 的复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;p&gt;为了证明这两个定理，有以下两个 Lemma：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lemma 1：若 &lt;span class=&#34;math inline&#34;&gt;\(w(i, j)\)&lt;/span&gt; 满足四边形不等式和单调性，则 &lt;span class=&#34;math inline&#34;&gt;\(f(i, j)\)&lt;/span&gt; 满足四边形不等式。&lt;/li&gt;
&lt;li&gt;Lemma 2：记 &lt;span class=&#34;math inline&#34;&gt;\(s(i, j)\)&lt;/span&gt; 为 dp 的最优转移点，即 &lt;span class=&#34;math inline&#34;&gt;\(s(i, j) = \arg\min_{l\le k &amp;lt; r}\{f(l, k) + f(k + 1, r)\}\)&lt;/span&gt;。则 &lt;span class=&#34;math inline&#34;&gt;\(s(i, j - 1) \le s(i, j) \le s(i + 1, j)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lemma 2 直接用于 dp 优化。&lt;/p&gt;
&lt;h3 id=&#34;定理证明&#34;&gt;定理证明&lt;/h3&gt;
&lt;p&gt;懒得证了，不会也不想看。&lt;/p&gt;
&lt;p&gt;但是需要注意一下，如果题目中说的是 &lt;span class=&#34;math inline&#34;&gt;\(\max\)&lt;/span&gt;，则四边形不等式将变为&lt;strong&gt;反四边形不等式&lt;/strong&gt;， 即 &lt;span class=&#34;math display&#34;&gt;\[
w(a,c) + w(b, d) \ge w(b, c) + w(a, d)
\]&lt;/span&gt; 而区间包含的单调也变为 &lt;span class=&#34;math inline&#34;&gt;\(w(b, c) \ge w(a, d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;应用石子合并&#34;&gt;应用——石子合并&lt;/h3&gt;
&lt;p&gt;此时的 &lt;span class=&#34;math inline&#34;&gt;\(w(i, j)\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\([i, j]\)&lt;/span&gt; 的石子数量。区间包含的单调性是显然的，而四边形不等式是刚好取到等号，所以最小化的一问可以使用四边形不等式进行优化。而最大化则不可以，但是稍加分析可得最大化的转移方程如下： &lt;span class=&#34;math inline&#34;&gt;\(f_2(i, j) = \max(f_2(i + 1, j), f_2(i, j - 1)) + w(i, j)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(len, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j = i + len - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= n &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; ++i, ++j) {&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f2[i][j] = max(f2[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j], f2[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) + a[j] - a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f1[i][j] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, s[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], s[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]) {&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f1[i][j] &amp;gt; f1[i][k] + f1[k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + a[j] - a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f1[i][j] = f1[i][k] + f1[k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + a[j] - a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], s[i][j] = k;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样下来均摊的复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;应用2uva10304&#34;&gt;应用2——UVA10304&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点，安排其成为一个二叉树使得 &lt;span class=&#34;math inline&#34;&gt;\(\sum d_ia_i\)&lt;/span&gt; 最大。&lt;/p&gt;
&lt;p&gt;直接设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为将 &lt;span class=&#34;math inline&#34;&gt;\([i, j]\)&lt;/span&gt; 变为一棵二叉树的最小代价，则枚举根节点 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，有很明显的区间 dp： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \min_{i\le k\le j} \{f_{i, k - 1} + f_{k + 1, j} - e_k\} + w(i, j)
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(w(i, j) = \sum_{k = i}^je_k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后，区间和这个东西满足四边形不等式，所以可以记录最优转移点来优化转移。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;255&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, f[maxn][maxn], a[maxn], sum[maxn], s[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cost(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; sum[j] - sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - a[k];}&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; to_min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b &amp;lt; a ? (a = b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (~scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n)) {&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a + i), sum[i] = sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + a[i], s[i][i] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(f, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i] = f[i][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, f[i][i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(len, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j = i + len - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= n; ++i, ++j)&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = s[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]; k &amp;lt;= s[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]; ++k)&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to_min(f[i][j], f[i][k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + f[k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + cost(i, j, k)))&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        s[i][j] = k;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][n]);&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;四边形不等式在-1d1d-动态规划中的应用&#34;&gt;四边形不等式在 1D/1D 动态规划中的应用&lt;/h2&gt;
&lt;h3 id=&#34;前言-1&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;考虑一类动态规划： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \min\{f_j + w(i, j)\} 
\]&lt;/span&gt; 朴素的做法是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，如果 &lt;span class=&#34;math inline&#34;&gt;\(w(i, j)\)&lt;/span&gt; 具有一些神奇的性质则可以优化为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;定理&#34;&gt;定理&lt;/h3&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(w(i, j)\)&lt;/span&gt; 满足四边形不等式，则 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 的最优转移点 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 是单调的。&lt;/p&gt;
&lt;p&gt;当然实际操作中一般使用打表暴力观察最优决策点找单调性。&lt;/p&gt;
&lt;h3 id=&#34;证明&#34;&gt;证明&lt;/h3&gt;
&lt;p&gt;反证法：设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 的最优转移点为 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt;，假设有 &lt;span class=&#34;math inline&#34;&gt;\(y &amp;lt; x\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(p_y &amp;gt; p_x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;根据最优决策： &lt;span class=&#34;math display&#34;&gt;\[
f_{p_x} + w(p_x, x) \le f_{p_y} + w(p_y,x)\\
\]&lt;/span&gt; 我们知道的是：&lt;span class=&#34;math inline&#34;&gt;\(p_x &amp;lt; p_y &amp;lt; y &amp;lt; x\)&lt;/span&gt;，代一下四边形不等式： &lt;span class=&#34;math display&#34;&gt;\[
w(p_x, y) + w(p_y, x) \le w(p_x, x) + w(p_y, y)
\]&lt;/span&gt; 两式相加： &lt;span class=&#34;math display&#34;&gt;\[
f_{p_x} + w(p_x, y)\le f_{p_y} + w(p_y, y)
\]&lt;/span&gt; 说明 &lt;span class=&#34;math inline&#34;&gt;\(p_x\)&lt;/span&gt; 转移到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 比从 &lt;span class=&#34;math inline&#34;&gt;\(p_y\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 更优，与假设矛盾，得证。&lt;/p&gt;
&lt;h3 id=&#34;法1二分队列栈&#34;&gt;法1——二分队列/栈&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1912&#34;&gt;P1912 [NOI2009] 诗人小G&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;容易列出转移方程 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \min_{j &amp;lt; i}\{f_j + |s_i - s_j -1 - L|^p\}
\]&lt;/span&gt; 打表发现对于 &lt;span class=&#34;math inline&#34;&gt;\(x\le y\)&lt;/span&gt;，一定有 &lt;span class=&#34;math inline&#34;&gt;\(p_x\le p_y\)&lt;/span&gt;，即决策点单调，决策点是一段一段的形如下面这样：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;1112222444446666666&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而我们一开始如果只考虑 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为决策点的话，是这样的：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;1111111111111111111&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加入 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 之后，是这样的：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;1112222222222222222&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加入 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 之后，是这样的：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;1112222444444444444&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所以考虑二分来维护一个决策点可以管理的区间。用单调队列来实现这个过程。&lt;/p&gt;
&lt;p&gt;加入一个决策点的时候有三种情况：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;旧决策完全不如新决策，即旧决策管的左端点从新决策转移来一定更优，此时弹队列右端；&lt;/li&gt;
&lt;li&gt;旧决策吊打新决策，即旧决策管理的左端点比从新决策转移来优，此时不弹队列；&lt;/li&gt;
&lt;li&gt;旧决策中等不如新决策，即旧决策管的左端点从旧决策转移更优，右端点则从新决策转移来更优，此时将旧决策进行拆分，然后插入新决策。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;转移的时候考虑队头可不可以转移，如果可以转移则直接从队头转移，否则弹队头。&lt;/p&gt;
&lt;p&gt;所以我们的 dp 过程应该是这样的：其中 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 表示该决策点能管到的区间右端点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; k[head] &amp;lt;= i) ++head;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[i] = calc(q[head], i), pre[i] = q[head];&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; k[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;= bound(q[tail], i)) --tail;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    k[tail] = bound(q[tail], i);&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    q[++tail] = i;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;bound(x, y)&lt;/code&gt; 函数负责决定 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 决策点和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 相比，两者的临界点，代码如下&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; bound(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = x, r = n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mid;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt; r) {&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(x, mid) &amp;gt;= calc(y, mid))&lt;span class=&#34;co&#34;&gt;//x比y在mid处更l&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r = mid;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; l;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;法2分治&#34;&gt;法2——分治&lt;/h3&gt;
&lt;p&gt;假设已知 &lt;span class=&#34;math inline&#34;&gt;\(f_l, f_{l+ 1},\cdots, f_r\)&lt;/span&gt; 的最优决策点在 &lt;span class=&#34;math inline&#34;&gt;\([L, R]\)&lt;/span&gt; 上，令 &lt;span class=&#34;math inline&#34;&gt;\(m = (l + r) / 2\)&lt;/span&gt;，设其最优决策点为 &lt;span class=&#34;math inline&#34;&gt;\(p_m\)&lt;/span&gt;，则由决策单调性可以知道 &lt;span class=&#34;math inline&#34;&gt;\(f_l,\cdots, f_m\)&lt;/span&gt; 的最优决策点在 &lt;span class=&#34;math inline&#34;&gt;\([L, p]\)&lt;/span&gt; 上，&lt;span class=&#34;math inline&#34;&gt;\(f_{m + 1},\cdots, f_r\)&lt;/span&gt; 的最优决策点在 &lt;span class=&#34;math inline&#34;&gt;\([p, R]\)&lt;/span&gt; 上。&lt;/p&gt;
&lt;p&gt;这样子问题的归模就得到了减半，每次找 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的决策点的时候暴力扫 &lt;span class=&#34;math inline&#34;&gt;\([L, R]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;即可。但是这样做的前提是 &lt;span class=&#34;math inline&#34;&gt;\(w(i, j)\)&lt;/span&gt; 能 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 计算，否则复杂度会萎掉，而二分队列就不存在这个问题。&lt;/p&gt;
&lt;p&gt;但是分治的代码明显很好写啊！&lt;/p&gt;
&lt;p&gt;这是 &lt;a href=&#34;https://www.luogu.com.cn/problem/P3515&#34;&gt;P3515 [POI2011]Lightning Conductor&lt;/a&gt; 分治部分的代码。&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3515/&#34;&gt;题解链接&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; L, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; R) {&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; r) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db mx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, tmp;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = L; j &amp;lt;= mid &amp;amp;&amp;amp; j &amp;lt;= R; ++j)&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((tmp = a[j] + sq[mid - j]) &amp;gt; mx) mx = tmp, k = j;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[mid] = max(p[mid], mx);&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(l, mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, L, k);&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, k, R);&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>李超树学习笔记</title>
        <link>https://oi.imyangty.com/note-lichao/</link>
        <pubDate>Sun, 04 Jul 2021 22:13:16 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-lichao/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg18.webp" alt="Featured image of post 李超树学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;因为最近在学斜率优化，然后遇到了 CEOI 的那道毒瘤题，被迫来学习李超树。&lt;/p&gt;
&lt;p&gt;李超树是一种能维护平面内线段的最大值的数据结构。&lt;/p&gt;
&lt;h2 id=&#34;模板题&#34;&gt;模板题&lt;/h2&gt;
&lt;h3 id=&#34;题意&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4097&#34;&gt;P4097 [HEOI2013]Segment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在平面直角坐标系中，维护两个操作（强制在线）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在平面内插入一条线段，记第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 条被插入的线段的编号为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，端点为 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y_0)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((x_1, y_1)\)&lt;/span&gt;。（&lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 可能与 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; 相等）&lt;/li&gt;
&lt;li&gt;给定一个数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，询问与直线 &lt;span class=&#34;math inline&#34;&gt;\(x = k\)&lt;/span&gt; 相交的线段中，交点纵坐标最大的线段的编号（若有多条线段与查询直线的交点纵坐标都是最大的，则输出编号最小的线段）。特别地，若不存在线段与给定直线相交，输出 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;概述&#34;&gt;概述&lt;/h3&gt;
&lt;p&gt;李超树的精髓在于维护每个区间内有可能成为最优解的线段。&lt;/p&gt;
&lt;p&gt;定义一个线段在 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 处最优当且仅当其与 &lt;span class=&#34;math inline&#34;&gt;\(x = x_0\)&lt;/span&gt; 的交点纵坐标最大。&lt;/p&gt;
&lt;p&gt;我们在区间 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 维护的最优线段满足如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该线段完整覆盖 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;该线段在区间中点最优&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此李超树就是一棵维护上面这样的信息的线段树。&lt;/p&gt;
&lt;h3 id=&#34;插入&#34;&gt;插入&lt;/h3&gt;
&lt;p&gt;考虑将一条新线段插入的操作。&lt;/p&gt;
&lt;p&gt;首先，只有这个线段完整覆盖了 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 中维护的最优线段才可能发生改变。&lt;/p&gt;
&lt;p&gt;我们简单分类讨论一下，设新插入的线段编号为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，原先的最优线段的编号为 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(k_u &amp;gt; k_v\)&lt;/span&gt;，则考虑一下 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(M = (l + r) / 2\)&lt;/span&gt; 的取值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 更优，则 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\([M + 1, r]\)&lt;/span&gt; &lt;strong&gt;一定&lt;/strong&gt;是更优的，而 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\([l, M]\)&lt;/span&gt; &lt;strong&gt;可能&lt;/strong&gt;是最优的。&lt;/li&gt;
&lt;li&gt;反之，则 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\([M + 1, r]\)&lt;/span&gt; &lt;strong&gt;可能&lt;/strong&gt;是最优的，&lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\([l, M]\)&lt;/span&gt; &lt;strong&gt;一定&lt;/strong&gt;是最优的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;画图可以方便理解。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(k_u &amp;lt; k_v\)&lt;/span&gt; 的情况类似，请画图分析以加深印象。&lt;/p&gt;
&lt;p&gt;这里需要在另一半区间下传 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的原因是：李超树查询使用的是标记永久化的思想。相当于 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 的优势线段是 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的话是不需要继续下传的。所以为了避免 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 直接覆盖掉，要往另一个区间下传 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以插入的时间复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log^2n)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;小补充：如果判定时一个直线已经全部高于/低于当前的最优直线，那么可以暴力直接判，常数会大大减小。&lt;/p&gt;
&lt;h3 id=&#34;查询&#34;&gt;查询&lt;/h3&gt;
&lt;p&gt;我们就从大区间依次向下，查询一下遇到的区间的 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 的最优线段是否能更新答案。这样的区间显而易见有 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 个，所以查询的时间复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 的&lt;/p&gt;
&lt;p&gt;就做完了。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;整体的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。需要维护线段的斜截式 &lt;span class=&#34;math inline&#34;&gt;\(y = kx + b\)&lt;/span&gt; 以方便计算。线段树里面就存优势线段的编号就行了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; buf[maxc], *p1 = buf, *p2 = buf;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p1 == p2 &amp;amp;&amp;amp; (p2 = (p1 = buf) + fread(buf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), p1 == p2) ? EOF : *p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, mod1 = &lt;span class=&#34;dv&#34;&gt;39989&lt;/span&gt;, mod2 = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; segment {&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db k, b;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t[mod1 &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p[i].k * x + p[i].b;}&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; swap(T &amp;amp;a, T &amp;amp;b) {&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b, b = t;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x0, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y0, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x1, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y1) {&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x0 == x1)&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        p[cnt].k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p[cnt].b = max(y0, y1);&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        p[cnt].k = db(y0 - y1) / db(x0 - x1), p[cnt].b = y0 - p[cnt].k * x0;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; update(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; j || y &amp;lt; i) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = t[k];&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db resu = calc(u, M), resv = calc(v, M);&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) {&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(u, i) &amp;gt;= calc(v, i) &amp;amp;&amp;amp; calc(u, j) &amp;gt;= calc(v, j)) {&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(u, i) &amp;lt;= calc(v, i) &amp;amp;&amp;amp; calc(u, j) &amp;lt;= calc(v, j)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[u].k &amp;gt; p[v].k) {&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                t[k] = u, update(L, i, M, x, y, v);&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; update(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[u].k &amp;lt; p[v].k) {&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                t[k] = u, update(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x, y, v);&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; update(L, i, M, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    update(L, i, M, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    update(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cmp(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; X, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; calc(i, X) &amp;gt; calc(j, X) ? i : j;}&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; X, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j) {&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt; j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = cmp(X, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t[k]);&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (X &amp;lt;= M) ret = cmp(X, ret, query(X, L, i, M));&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ret = cmp(X, ret, query(X, R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j));&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), last = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op = read();&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!op) {&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = (read() + last - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod1 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, last = query(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mod1));&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x0 = (read() + last - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod1 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y0 = (read() + last - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod2 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x1 = (read() + last - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod1 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y1 = (read() + last - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod2 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x0 &amp;gt; x1) swap(x0, x1), swap(y0, y1);&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(x0, y0, x1, y1);&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mod1, x0, x1, cnt);&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-109&#34;&gt;&lt;a href=&#34;#cb1-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;例题&#34;&gt;例题&lt;/h2&gt;
&lt;h3 id=&#34;p4254-jsoi2008blue-mary开公司&#34;&gt;P4254 [JSOI2008]Blue Mary开公司&lt;/h3&gt;
&lt;p&gt;这题比较模板，直接插入直线即可，甚至都不需要维护左右端点，所以时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxt = &lt;span class=&#34;fl&#34;&gt;5e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; segment&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db k, b;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t[maxt &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(db s, db k)&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[cnt].k = k;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[cnt].b = s - k;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p[i].k * x + p[i].b;}&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db max(db a, db b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;} &lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; update(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = t[k];&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db resu = calc(u, M), resv = calc(v, M);&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv) t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[u].k &amp;gt; p[v].k)&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[k] = u, update(L, i, M, v);&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; update(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, u);&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p[u].k &amp;lt; p[v].k)&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[k] = u, update(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, v);&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; update(L, i, M, u);&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv) t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; X, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j)&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db res = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    res = max(res, calc(t[k], X));&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (X &amp;lt;= M) res = max(res, query(X, L, i, M));&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; res = max(res, query(X, R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j));&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n);&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; op[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-75&#34;&gt;&lt;a href=&#34;#cb2-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, op + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-76&#34;&gt;&lt;a href=&#34;#cb2-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;Q&amp;#39;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-77&#34;&gt;&lt;a href=&#34;#cb2-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-78&#34;&gt;&lt;a href=&#34;#cb2-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t;&lt;/span&gt;
&lt;span id=&#34;cb2-79&#34;&gt;&lt;a href=&#34;#cb2-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;t);&lt;/span&gt;
&lt;span id=&#34;cb2-80&#34;&gt;&lt;a href=&#34;#cb2-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)floor(query(t, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxt) / &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb2-81&#34;&gt;&lt;a href=&#34;#cb2-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-82&#34;&gt;&lt;a href=&#34;#cb2-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;P&amp;#39;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-83&#34;&gt;&lt;a href=&#34;#cb2-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-84&#34;&gt;&lt;a href=&#34;#cb2-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            db s, p;&lt;/span&gt;
&lt;span id=&#34;cb2-85&#34;&gt;&lt;a href=&#34;#cb2-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;s, &amp;amp;p);&lt;/span&gt;
&lt;span id=&#34;cb2-86&#34;&gt;&lt;a href=&#34;#cb2-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(s, p);&lt;/span&gt;
&lt;span id=&#34;cb2-87&#34;&gt;&lt;a href=&#34;#cb2-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxt, cnt);&lt;/span&gt;
&lt;span id=&#34;cb2-88&#34;&gt;&lt;a href=&#34;#cb2-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-89&#34;&gt;&lt;a href=&#34;#cb2-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-90&#34;&gt;&lt;a href=&#34;#cb2-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-91&#34;&gt;&lt;a href=&#34;#cb2-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;bzoj3938.-robot&#34;&gt;&lt;a href=&#34;https://darkbzoj.tk/problem/3938&#34;&gt;BZOJ#3938. Robot&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;题意-1&#34;&gt;题意&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个机器人，一开始分别在 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 位置。接下来进行 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(T_i\texttt{ command } k_i~x_i\)&lt;/span&gt;，表示在时间 &lt;span class=&#34;math inline&#34;&gt;\(T_i\)&lt;/span&gt; 时重置 &lt;span class=&#34;math inline&#34;&gt;\(k_i\)&lt;/span&gt; 号机器人的速度为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 单位长度每秒，&lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 可以为负。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(T_i\texttt{ query}\)&lt;/span&gt;，表示查询时间 &lt;span class=&#34;math inline&#34;&gt;\(T_i\)&lt;/span&gt; 时距离原点最远的机器人的距离。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\le T_i\le 10^9\)&lt;/span&gt;，总操作次数不超过 &lt;span class=&#34;math inline&#34;&gt;\(6\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;思路&#34;&gt;思路&lt;/h4&gt;
&lt;p&gt;分析可得，每个机器人的 &lt;span class=&#34;math inline&#34;&gt;\(x-t\)&lt;/span&gt; 图像都是分段的一次函数，所以可以离线，一开始建出一棵李超树来维护这些分段的一次函数的最值，再统一进行查询。（最大值就直接做，最小值为了方便可以把所有直线的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 取相反数之后再做一次）。由于时间过大，所以需要离散化。&lt;/p&gt;
&lt;p&gt;总体来说还是比较不好写的，需要注意的细节非常多。&lt;strong&gt;需要注意的是离散化之后计算中点的函数值时一定要取离散化后的中点，因为递归下去的时候是以离散化之后的中点为参照的，不然 WA 80&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;同时，如果你同时维护了两棵李超树分别维护最大和最小值，修改函数千万要写成两个，否则在更新最大值的时候会更新很多无谓的最小值，会 T 飞掉只剩 40pts。&lt;/p&gt;
&lt;p&gt;把思路理清楚就可以写代码了。&lt;/p&gt;
&lt;h4 id=&#34;实现-1&#34;&gt;实现&lt;/h4&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;6e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, tot;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], rt[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; operation {&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll t, i, k;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} q[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; line {&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll k, b, t1, t2;&lt;span class=&#34;co&#34;&gt;//维护时间的编号&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    line() {k = b = t1 = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t2 = maxn;}&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} L[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], cnt, t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(ll t) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;lower_bound(rt + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, rt + tot + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t) - rt;}&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll calc(ll X, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; L[i].k * X + L[i].b;}&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll max(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs &lt;/span&gt;(ls&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; update(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; j || y &amp;lt; i) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = t[k];&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll resu = calc(rt[M], u), resv = calc(rt[M], v);&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) {&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) {&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv) t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L[u].k &amp;gt; L[v].k) {&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                t[k] = u, update(ls, i, M, x, y, v);&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; update(rs, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L[u].k &amp;lt; L[v].k) {&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                t[k] = u, update(rs, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x, y, v);&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; update(ls, i, M, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv) t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    update(ls, i, M, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    update(rs, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = calc(rt[x], t[k]);&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = max(ret, query(ls, i, M, x));&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ret = max(ret, query(rs, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x));&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m);&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a + i), head[i] = ++cnt, L[cnt].t1 = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, L[cnt].b = a[i];&lt;/span&gt;
&lt;span id=&#34;cb3-71&#34;&gt;&lt;a href=&#34;#cb3-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; tmp[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-72&#34;&gt;&lt;a href=&#34;#cb3-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rt[++tot] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-73&#34;&gt;&lt;a href=&#34;#cb3-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb3-74&#34;&gt;&lt;a href=&#34;#cb3-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;q[i].t), rt[++tot] = q[i].t;&lt;/span&gt;
&lt;span id=&#34;cb3-75&#34;&gt;&lt;a href=&#34;#cb3-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, tmp);&lt;/span&gt;
&lt;span id=&#34;cb3-76&#34;&gt;&lt;a href=&#34;#cb3-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;q&amp;#39;&lt;/span&gt;) q[i].op = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-77&#34;&gt;&lt;a href=&#34;#cb3-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;q[i].i, &amp;amp;q[i].k);&lt;/span&gt;
&lt;span id=&#34;cb3-78&#34;&gt;&lt;a href=&#34;#cb3-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-79&#34;&gt;&lt;a href=&#34;#cb3-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tot = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;unique(rt + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, rt + tot + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - rt - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-80&#34;&gt;&lt;a href=&#34;#cb3-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb3-81&#34;&gt;&lt;a href=&#34;#cb3-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (q[i].op == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-82&#34;&gt;&lt;a href=&#34;#cb3-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[i].t = find(q[i].t);&lt;/span&gt;
&lt;span id=&#34;cb3-83&#34;&gt;&lt;a href=&#34;#cb3-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            line &amp;amp;last = L[head[q[i].i]], now;&lt;/span&gt;
&lt;span id=&#34;cb3-84&#34;&gt;&lt;a href=&#34;#cb3-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            last.t2 = q[i].t;&lt;/span&gt;
&lt;span id=&#34;cb3-85&#34;&gt;&lt;a href=&#34;#cb3-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll y = last.k * rt[last.t2] + last.b;&lt;/span&gt;
&lt;span id=&#34;cb3-86&#34;&gt;&lt;a href=&#34;#cb3-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now.k = q[i].k, now.t1 = q[i].t;&lt;/span&gt;
&lt;span id=&#34;cb3-87&#34;&gt;&lt;a href=&#34;#cb3-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now.b = y - now.k * rt[now.t1];&lt;/span&gt;
&lt;span id=&#34;cb3-88&#34;&gt;&lt;a href=&#34;#cb3-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            L[++cnt] = now, head[q[i].i] = cnt;&lt;/span&gt;
&lt;span id=&#34;cb3-89&#34;&gt;&lt;a href=&#34;#cb3-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-90&#34;&gt;&lt;a href=&#34;#cb3-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; q[i].t = find(q[i].t);&lt;/span&gt;
&lt;span id=&#34;cb3-91&#34;&gt;&lt;a href=&#34;#cb3-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-92&#34;&gt;&lt;a href=&#34;#cb3-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) L[head[i]].t2 = tot;&lt;/span&gt;
&lt;span id=&#34;cb3-93&#34;&gt;&lt;a href=&#34;#cb3-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot, L[i].t1, L[i].t2, i);&lt;/span&gt;
&lt;span id=&#34;cb3-94&#34;&gt;&lt;a href=&#34;#cb3-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (q[i].op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[i] = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot, q[i].t);&lt;/span&gt;
&lt;span id=&#34;cb3-95&#34;&gt;&lt;a href=&#34;#cb3-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(t, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; t);&lt;/span&gt;
&lt;span id=&#34;cb3-96&#34;&gt;&lt;a href=&#34;#cb3-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) L[i].k *= -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;, L[i].b *= -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;, update(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot, L[i].t1, L[i].t2, i);&lt;/span&gt;
&lt;span id=&#34;cb3-97&#34;&gt;&lt;a href=&#34;#cb3-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (q[i].op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, max(ans[i], query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot, q[i].t)));&lt;/span&gt;
&lt;span id=&#34;cb3-98&#34;&gt;&lt;a href=&#34;#cb3-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-99&#34;&gt;&lt;a href=&#34;#cb3-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;p4069-sdoi2016游戏&#34;&gt;P4069 [SDOI2016]游戏&lt;/h3&gt;
&lt;h4 id=&#34;题意-2&#34;&gt;题意&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的树。最初每个点上有一个数 &lt;span class=&#34;math inline&#34;&gt;\(123456789123456789\)&lt;/span&gt;。进行两种操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选一条从 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 的路径，在这条路径上的每个点都添加一个数字。对于路径上的一个点 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 的距离为 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，则这个点上添加的数字就是 &lt;span class=&#34;math inline&#34;&gt;\(a\times d + b\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;从一条从 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 的路径上的点中选出一个最小的数字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;思路-1&#34;&gt;思路&lt;/h4&gt;
&lt;p&gt;维护树上路径，很自然的可以树链剖分然后使用李超树维护。设 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到根的距离为 &lt;span class=&#34;math inline&#34;&gt;\(d(u)\)&lt;/span&gt;，注意到同一条重链上面的 &lt;span class=&#34;math inline&#34;&gt;\(d(u)\)&lt;/span&gt; 是单调递增的，所以可以使用李超树进行维护。&lt;/p&gt;
&lt;p&gt;具体地，设 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 的 LCA 为 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt;，分 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 两段讨论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 上任意取一点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 上加的数为 &lt;span class=&#34;math inline&#34;&gt;\(a\times(d(s) - d(x)) + b\)&lt;/span&gt;，化简开有 &lt;span class=&#34;math inline&#34;&gt;\(-a\times d(x) + ad(s) + b\)&lt;/span&gt;。所以这一段要加的直线为 &lt;span class=&#34;math inline&#34;&gt;\(y = -ax + (a\times d(s) + b)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;从 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 上任意取一点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 上加的数为 &lt;span class=&#34;math inline&#34;&gt;\(a\times(d(x) - d(w) + d(s) - d(w)) + b\)&lt;/span&gt;，化简开就可以得到这一段的直线为 &lt;span class=&#34;math inline&#34;&gt;\(y = ax + (a(d(s) - 2d(w)) + b)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后对于查询操作：在线段树上的每个区间维护一个该区间中线段能达到的最小值，查询的时候直接输出即可。&lt;/p&gt;
&lt;h4 id=&#34;实现-2&#34;&gt;实现&lt;/h4&gt;
&lt;p&gt;首先是插入操作需要注意的细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一定要 &lt;code&gt;pushup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;插入直线之后要用两个端点来更新最小值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后是查询操作，注意此时需要同时计算一下当前区间的优势线段能产生的最小答案。&lt;/p&gt;
&lt;p&gt;总的来说比较考验代码组织能力，值得一做。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;head[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].to;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].nxt,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;e[i].to)&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; buf[maxc], *p1 = buf, *p2 = buf;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p1 == p2 &amp;amp;&amp;amp; (p2 = (p1 = buf) + fread(buf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), p1 == p2) ? EOF : *p1++;}&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; swap(T &amp;amp;a, T &amp;amp;b) {&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b, b = t;&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;100000&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;dv&#34;&gt;123456789123456789&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll min(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll max(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, head[maxn], cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge {&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to, nxt;&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll dist;&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; w) {&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[++cnte].to = v;&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnte].dist = w;&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnte].nxt = head[u];&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-51&#34;&gt;&lt;a href=&#34;#cb4-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-52&#34;&gt;&lt;a href=&#34;#cb4-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-53&#34;&gt;&lt;a href=&#34;#cb4-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa[maxn], son[maxn], size[maxn], dep[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-54&#34;&gt;&lt;a href=&#34;#cb4-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfn[maxn], nfd[maxn], top[maxn], cntDfn;&lt;/span&gt;
&lt;span id=&#34;cb4-55&#34;&gt;&lt;a href=&#34;#cb4-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll dis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-56&#34;&gt;&lt;a href=&#34;#cb4-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-57&#34;&gt;&lt;a href=&#34;#cb4-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f) {&lt;/span&gt;
&lt;span id=&#34;cb4-58&#34;&gt;&lt;a href=&#34;#cb4-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fa[u] = f, size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dep[u] = dep[f] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-59&#34;&gt;&lt;a href=&#34;#cb4-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u) {&lt;/span&gt;
&lt;span id=&#34;cb4-60&#34;&gt;&lt;a href=&#34;#cb4-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == f) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-61&#34;&gt;&lt;a href=&#34;#cb4-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = dis[u] + e[i].dist;&lt;/span&gt;
&lt;span id=&#34;cb4-62&#34;&gt;&lt;a href=&#34;#cb4-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-63&#34;&gt;&lt;a href=&#34;#cb4-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb4-64&#34;&gt;&lt;a href=&#34;#cb4-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (size[v] &amp;gt; size[son[u]])&lt;/span&gt;
&lt;span id=&#34;cb4-65&#34;&gt;&lt;a href=&#34;#cb4-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb4-66&#34;&gt;&lt;a href=&#34;#cb4-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-67&#34;&gt;&lt;a href=&#34;#cb4-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-68&#34;&gt;&lt;a href=&#34;#cb4-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-69&#34;&gt;&lt;a href=&#34;#cb4-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-70&#34;&gt;&lt;a href=&#34;#cb4-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; topf) {&lt;/span&gt;
&lt;span id=&#34;cb4-71&#34;&gt;&lt;a href=&#34;#cb4-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfn[u] = ++cntDfn, top[u] = topf, nfd[dfn[u]] = u;&lt;/span&gt;
&lt;span id=&#34;cb4-72&#34;&gt;&lt;a href=&#34;#cb4-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (son[u]) dfs2(son[u], topf);&lt;/span&gt;
&lt;span id=&#34;cb4-73&#34;&gt;&lt;a href=&#34;#cb4-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u) {&lt;/span&gt;
&lt;span id=&#34;cb4-74&#34;&gt;&lt;a href=&#34;#cb4-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa[u] || v == son[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-75&#34;&gt;&lt;a href=&#34;#cb4-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(v, v);&lt;/span&gt;
&lt;span id=&#34;cb4-76&#34;&gt;&lt;a href=&#34;#cb4-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-77&#34;&gt;&lt;a href=&#34;#cb4-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-78&#34;&gt;&lt;a href=&#34;#cb4-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-79&#34;&gt;&lt;a href=&#34;#cb4-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-80&#34;&gt;&lt;a href=&#34;#cb4-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; LCA(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb4-81&#34;&gt;&lt;a href=&#34;#cb4-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top[u] != top[v]) {&lt;/span&gt;
&lt;span id=&#34;cb4-82&#34;&gt;&lt;a href=&#34;#cb4-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dep[top[u]] &amp;lt; dep[top[v]])&lt;/span&gt;
&lt;span id=&#34;cb4-83&#34;&gt;&lt;a href=&#34;#cb4-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            swap(u, v);&lt;/span&gt;
&lt;span id=&#34;cb4-84&#34;&gt;&lt;a href=&#34;#cb4-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = fa[top[u]];&lt;/span&gt;
&lt;span id=&#34;cb4-85&#34;&gt;&lt;a href=&#34;#cb4-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-86&#34;&gt;&lt;a href=&#34;#cb4-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dep[u] &amp;lt; dep[v] ? u : v;&lt;/span&gt;
&lt;span id=&#34;cb4-87&#34;&gt;&lt;a href=&#34;#cb4-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-88&#34;&gt;&lt;a href=&#34;#cb4-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-89&#34;&gt;&lt;a href=&#34;#cb4-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-90&#34;&gt;&lt;a href=&#34;#cb4-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-91&#34;&gt;&lt;a href=&#34;#cb4-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-92&#34;&gt;&lt;a href=&#34;#cb4-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-93&#34;&gt;&lt;a href=&#34;#cb4-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], minv[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-94&#34;&gt;&lt;a href=&#34;#cb4-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll K[maxn], B[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-95&#34;&gt;&lt;a href=&#34;#cb4-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot;&lt;/span&gt;
&lt;span id=&#34;cb4-96&#34;&gt;&lt;a href=&#34;#cb4-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-97&#34;&gt;&lt;a href=&#34;#cb4-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; id) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; K[id] * dis[nfd[x]] + B[id];}&lt;/span&gt;
&lt;span id=&#34;cb4-98&#34;&gt;&lt;a href=&#34;#cb4-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {minv[k] = min(minv[k], min(minv[L], minv[R]));}&lt;/span&gt;
&lt;span id=&#34;cb4-99&#34;&gt;&lt;a href=&#34;#cb4-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-100&#34;&gt;&lt;a href=&#34;#cb4-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb4-101&#34;&gt;&lt;a href=&#34;#cb4-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    minv[k] = INF, t[k] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-102&#34;&gt;&lt;a href=&#34;#cb4-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-103&#34;&gt;&lt;a href=&#34;#cb4-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb4-104&#34;&gt;&lt;a href=&#34;#cb4-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb4-105&#34;&gt;&lt;a href=&#34;#cb4-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-106&#34;&gt;&lt;a href=&#34;#cb4-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-107&#34;&gt;&lt;a href=&#34;#cb4-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-108&#34;&gt;&lt;a href=&#34;#cb4-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb4-109&#34;&gt;&lt;a href=&#34;#cb4-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) {&lt;/span&gt;
&lt;span id=&#34;cb4-110&#34;&gt;&lt;a href=&#34;#cb4-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(i, u) &amp;lt;= calc(i, t[k]) &amp;amp;&amp;amp; calc(j, u) &amp;lt;= calc(j, t[k])) {&lt;/span&gt;
&lt;span id=&#34;cb4-111&#34;&gt;&lt;a href=&#34;#cb4-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb4-112&#34;&gt;&lt;a href=&#34;#cb4-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            minv[k] = min(minv[k], min(calc(i, u), calc(j, u)));&lt;/span&gt;
&lt;span id=&#34;cb4-113&#34;&gt;&lt;a href=&#34;#cb4-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-114&#34;&gt;&lt;a href=&#34;#cb4-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-115&#34;&gt;&lt;a href=&#34;#cb4-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(i, u) &amp;gt;= calc(i, t[k]) &amp;amp;&amp;amp; calc(j, u) &amp;gt;= calc(j, t[k])) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-116&#34;&gt;&lt;a href=&#34;#cb4-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (K[u] &amp;lt; K[t[k]]) {&lt;/span&gt;
&lt;span id=&#34;cb4-117&#34;&gt;&lt;a href=&#34;#cb4-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(M, u) &amp;lt;= calc(M, t[k]))&lt;/span&gt;
&lt;span id=&#34;cb4-118&#34;&gt;&lt;a href=&#34;#cb4-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                modify(i, M, L, x, y, t[k]), t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb4-119&#34;&gt;&lt;a href=&#34;#cb4-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb4-120&#34;&gt;&lt;a href=&#34;#cb4-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb4-121&#34;&gt;&lt;a href=&#34;#cb4-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(M, u) &amp;lt;= calc(M, t[k]))&lt;/span&gt;
&lt;span id=&#34;cb4-122&#34;&gt;&lt;a href=&#34;#cb4-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                modify(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, y, t[k]), t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb4-123&#34;&gt;&lt;a href=&#34;#cb4-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(i, M, L, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb4-124&#34;&gt;&lt;a href=&#34;#cb4-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-125&#34;&gt;&lt;a href=&#34;#cb4-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; minv[k] = min(minv[k], min(calc(i, u), calc(j, u))), pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb4-126&#34;&gt;&lt;a href=&#34;#cb4-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-127&#34;&gt;&lt;a href=&#34;#cb4-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(i, M, L, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb4-128&#34;&gt;&lt;a href=&#34;#cb4-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) modify(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, y, u);&lt;/span&gt;
&lt;span id=&#34;cb4-129&#34;&gt;&lt;a href=&#34;#cb4-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb4-130&#34;&gt;&lt;a href=&#34;#cb4-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-131&#34;&gt;&lt;a href=&#34;#cb4-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-132&#34;&gt;&lt;a href=&#34;#cb4-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-133&#34;&gt;&lt;a href=&#34;#cb4-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb4-134&#34;&gt;&lt;a href=&#34;#cb4-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; minv[k];&lt;/span&gt;
&lt;span id=&#34;cb4-135&#34;&gt;&lt;a href=&#34;#cb4-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = INF;&lt;/span&gt;
&lt;span id=&#34;cb4-136&#34;&gt;&lt;a href=&#34;#cb4-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (B[t[k]] != INF) ret = min(ret, min(calc(max(i, x), t[k]), calc(min(j, y), t[k])));&lt;/span&gt;
&lt;span id=&#34;cb4-137&#34;&gt;&lt;a href=&#34;#cb4-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = min(ret, query(i, M, L, x, y));&lt;/span&gt;
&lt;span id=&#34;cb4-138&#34;&gt;&lt;a href=&#34;#cb4-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) ret = min(ret, query(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, y));&lt;/span&gt;
&lt;span id=&#34;cb4-139&#34;&gt;&lt;a href=&#34;#cb4-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-140&#34;&gt;&lt;a href=&#34;#cb4-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-141&#34;&gt;&lt;a href=&#34;#cb4-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-142&#34;&gt;&lt;a href=&#34;#cb4-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb4-143&#34;&gt;&lt;a href=&#34;#cb4-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top[u] != top[v])&lt;/span&gt;
&lt;span id=&#34;cb4-144&#34;&gt;&lt;a href=&#34;#cb4-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[top[u]], dfn[u], tot), u = fa[top[u]];&lt;/span&gt;
&lt;span id=&#34;cb4-145&#34;&gt;&lt;a href=&#34;#cb4-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[v], dfn[u], tot);&lt;/span&gt;
&lt;span id=&#34;cb4-146&#34;&gt;&lt;a href=&#34;#cb4-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-147&#34;&gt;&lt;a href=&#34;#cb4-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-148&#34;&gt;&lt;a href=&#34;#cb4-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-149&#34;&gt;&lt;a href=&#34;#cb4-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t, ll a, ll b) {&lt;/span&gt;
&lt;span id=&#34;cb4-150&#34;&gt;&lt;a href=&#34;#cb4-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lca = LCA(s, t);&lt;/span&gt;
&lt;span id=&#34;cb4-151&#34;&gt;&lt;a href=&#34;#cb4-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    K[++tot] = -a, B[tot] = a * dis[s] + b;&lt;/span&gt;
&lt;span id=&#34;cb4-152&#34;&gt;&lt;a href=&#34;#cb4-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modify(s, lca);&lt;/span&gt;
&lt;span id=&#34;cb4-153&#34;&gt;&lt;a href=&#34;#cb4-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    K[++tot] = a, B[tot] = a * (dis[s] - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * dis[lca]) + b;&lt;/span&gt;
&lt;span id=&#34;cb4-154&#34;&gt;&lt;a href=&#34;#cb4-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modify(t, lca);&lt;/span&gt;
&lt;span id=&#34;cb4-155&#34;&gt;&lt;a href=&#34;#cb4-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-156&#34;&gt;&lt;a href=&#34;#cb4-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-157&#34;&gt;&lt;a href=&#34;#cb4-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-158&#34;&gt;&lt;a href=&#34;#cb4-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t) {&lt;/span&gt;
&lt;span id=&#34;cb4-159&#34;&gt;&lt;a href=&#34;#cb4-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = INF;&lt;/span&gt;
&lt;span id=&#34;cb4-160&#34;&gt;&lt;a href=&#34;#cb4-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top[s] != top[t]) {&lt;/span&gt;
&lt;span id=&#34;cb4-161&#34;&gt;&lt;a href=&#34;#cb4-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dep[top[s]] &amp;lt; dep[top[t]]) swap(s, t);&lt;/span&gt;
&lt;span id=&#34;cb4-162&#34;&gt;&lt;a href=&#34;#cb4-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = min(ret, query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[top[s]], dfn[s]));&lt;/span&gt;
&lt;span id=&#34;cb4-163&#34;&gt;&lt;a href=&#34;#cb4-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = fa[top[s]];&lt;/span&gt;
&lt;span id=&#34;cb4-164&#34;&gt;&lt;a href=&#34;#cb4-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-165&#34;&gt;&lt;a href=&#34;#cb4-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dep[s] &amp;gt; dep[t]) swap(s, t);&lt;/span&gt;
&lt;span id=&#34;cb4-166&#34;&gt;&lt;a href=&#34;#cb4-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min(ret, query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[s], dfn[t]));&lt;/span&gt;
&lt;span id=&#34;cb4-167&#34;&gt;&lt;a href=&#34;#cb4-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-168&#34;&gt;&lt;a href=&#34;#cb4-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-169&#34;&gt;&lt;a href=&#34;#cb4-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-170&#34;&gt;&lt;a href=&#34;#cb4-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb4-171&#34;&gt;&lt;a href=&#34;#cb4-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-172&#34;&gt;&lt;a href=&#34;#cb4-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = read(), v = read(), w = read();&lt;/span&gt;
&lt;span id=&#34;cb4-173&#34;&gt;&lt;a href=&#34;#cb4-173&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v, w), add(v, u, w);&lt;/span&gt;
&lt;span id=&#34;cb4-174&#34;&gt;&lt;a href=&#34;#cb4-174&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-175&#34;&gt;&lt;a href=&#34;#cb4-175&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-176&#34;&gt;&lt;a href=&#34;#cb4-176&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-177&#34;&gt;&lt;a href=&#34;#cb4-177&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    B[tot = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = INF;&lt;/span&gt;
&lt;span id=&#34;cb4-178&#34;&gt;&lt;a href=&#34;#cb4-178&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-179&#34;&gt;&lt;a href=&#34;#cb4-179&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb4-180&#34;&gt;&lt;a href=&#34;#cb4-180&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op = read(), s = read(), t = read();&lt;/span&gt;
&lt;span id=&#34;cb4-181&#34;&gt;&lt;a href=&#34;#cb4-181&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-182&#34;&gt;&lt;a href=&#34;#cb4-182&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll a = read(), b = read();&lt;/span&gt;
&lt;span id=&#34;cb4-183&#34;&gt;&lt;a href=&#34;#cb4-183&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            modify(s, t, a, b);&lt;/span&gt;
&lt;span id=&#34;cb4-184&#34;&gt;&lt;a href=&#34;#cb4-184&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, query(s, t));&lt;/span&gt;
&lt;span id=&#34;cb4-185&#34;&gt;&lt;a href=&#34;#cb4-185&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-186&#34;&gt;&lt;a href=&#34;#cb4-186&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-187&#34;&gt;&lt;a href=&#34;#cb4-187&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;cf1303g-sum-of-prefix-sums&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1303G&#34;&gt;CF1303G Sum of Prefix Sums&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;点分治与李超树的结合，篇幅较长并且不太适合放在这里，&lt;a href=&#34;https://oi.imyangty.com/sol-cf1303g/&#34;&gt;已移出&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;p4655-ceoi2017building-bridges&#34;&gt;P4655 [CEOI2017]Building Bridges&lt;/h3&gt;
&lt;p&gt;李超树优化 dp，把 dp 方程化为一次函数的形式，就可以使用李超树维护了。&lt;/p&gt;
&lt;p&gt;放在&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4655/&#34;&gt;单独的博文&lt;/a&gt;里面。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>组合数求法小记</title>
        <link>https://oi.imyangty.com/note-comb-number/</link>
        <pubDate>Tue, 29 Jun 2021 19:29:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-comb-number/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg10.webp" alt="Featured image of post 组合数求法小记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;记录一下常见的求组合数的几种方法&lt;/p&gt;
&lt;h2 id=&#34;暴力&#34;&gt;暴力&lt;/h2&gt;
&lt;p&gt;利用 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \frac{n!}{(n - m)!m!}
\]&lt;/span&gt; 直接做，复杂度与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 相关，且很容易爆 &lt;code&gt;long long&lt;/code&gt;。但是 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 很小的时候很实用！&lt;/p&gt;
&lt;h2 id=&#34;递推&#34;&gt;递推&lt;/h2&gt;
&lt;p&gt;利用 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \binom{n - 1}{m} + \binom{n - 1}{m - 1}
\]&lt;/span&gt; 来进行递推，时空复杂度均为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;c[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = c[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    c[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[i][j] = (c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;适用于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 较小的情况，需要注意边界条件，当 &lt;span class=&#34;math inline&#34;&gt;\(m = 0\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom n m = 1\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;lucas-定理&#34;&gt;Lucas 定理&lt;/h3&gt;
&lt;p&gt;见 &lt;a href=&#34;https://oi.imyangty.com/note-lucas/&#34;&gt;Lucas 定理学习笔记&lt;/a&gt;。适用于模数较小，而 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 均很大的情况。&lt;/p&gt;
&lt;h3 id=&#34;乘法逆元&#34;&gt;乘法逆元&lt;/h3&gt;
&lt;p&gt;利用 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \frac{n!}{(n - m)!m!}
\]&lt;/span&gt; 来做。要求模数为质数。&lt;/p&gt;
&lt;p&gt;求出 &lt;span class=&#34;math inline&#34;&gt;\((n - m)!m!\)&lt;/span&gt; 的逆元，然后直接与 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 相乘即可。适用于模数为质数，且只求少量组合数的情况。&lt;/p&gt;
&lt;h3 id=&#34;矩阵快速幂&#34;&gt;矩阵快速幂&lt;/h3&gt;
&lt;p&gt;本篇博客的重点。&lt;/p&gt;
&lt;p&gt;有些时候（如 &lt;a href=&#34;https://loj.ac/p/6069&#34;&gt;LOJ6069&lt;/a&gt;），题目会要求我们求很大的组合数，比如此题要求我们求所有的 &lt;span class=&#34;math display&#34;&gt;\[
\binom{a}{b}
\]&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^9\)&lt;/span&gt; 级别，&lt;span class=&#34;math inline&#34;&gt;\(b\in[0, n]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 很小。此时就需要利用组合数的递推来构造转移矩阵使用矩阵快速幂求解。&lt;/p&gt;
&lt;p&gt;由于递推式是这个样子的： &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \binom{n - 1}{m} + \binom{n - 1}{m - 1}
\]&lt;/span&gt; 所以我们的矩阵应该长这个样子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
C_{i, 0}\\
C_{i, 1}\\
\vdots\\
C_{n, 1}
\end{bmatrix}
\]&lt;/span&gt; 然后不难构造出转移矩阵 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0\\
1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0\\
0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 1 &amp;amp; \cdots &amp;amp; 0\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots\\
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt; 于是就可以用矩阵快速幂求解。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; matrix&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; id()&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix() {memset(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; a);}&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;matrix &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; matrix &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; matrix &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                add(ret.a[i][j], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.a[i][k] * b.a[k][j] % mod);&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;matrix ksm(matrix base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.id();&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base)&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = base * ret;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init()&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix trans;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    trans.a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        trans.a[i][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = trans.a[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret = ksm(trans, l);&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) c[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = ret.a[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r)&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[i - l][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(c[i - l][j], c[i - l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + c[i - l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>单调队列优化多重背包</title>
        <link>https://oi.imyangty.com/note-mulbackpack/</link>
        <pubDate>Sat, 26 Jun 2021 12:07:14 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-mulbackpack/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg22.webp" alt="Featured image of post 单调队列优化多重背包" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;约定：下文一律使用字母 &lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt; 代表价值（value），用字母 &lt;span class=&#34;math inline&#34;&gt;\(W\)&lt;/span&gt; 代表重量（weight）避免引起混淆。&lt;/p&gt;
&lt;p&gt;其实我们是已经拥有 &lt;span class=&#34;math inline&#34;&gt;\(O(NW\sum\log m_i)\)&lt;/span&gt; 的二进制分组做法的，但是不够优秀，下面介绍一种严格 &lt;span class=&#34;math inline&#34;&gt;\(O(NW)\)&lt;/span&gt; 的单调队列方法。&lt;/p&gt;
&lt;h2 id=&#34;从基础的多重背包开始&#34;&gt;从基础的多重背包开始&lt;/h2&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1776&#34;&gt;洛谷 P1776 宝物筛选&lt;/a&gt;。没什么好说的，模板。&lt;/p&gt;
&lt;p&gt;下文用 &lt;span class=&#34;math inline&#34;&gt;\(m_i\)&lt;/span&gt; 代表第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品最多能选的个数。&lt;/p&gt;
&lt;p&gt;首先写出一个最朴素的 &lt;span class=&#34;math inline&#34;&gt;\(O(NW\sum m_i)\)&lt;/span&gt; 的转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f_{i,j} = \max\{f_{i - 1, j - kw_i} + kv_i\}
\]&lt;/span&gt; 把第一维滚动掉可以得到 &lt;span class=&#34;math display&#34;&gt;\[
f_j = \max\{f_{j - kw} + kv\}
\]&lt;/span&gt; 然后，把 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 按照模 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 的意义分组，即令 &lt;span class=&#34;math inline&#34;&gt;\(j = k_1w + p\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(p\in[0, w)\)&lt;/span&gt;，然后转移方程就可以这样进行转化： &lt;span class=&#34;math display&#34;&gt;\[
f_j = \max\{f_{k_1w + p - kw} + kv\}
\]&lt;/span&gt; 然后合并一下同类项， &lt;span class=&#34;math display&#34;&gt;\[
f_j = \max\{f_{(k_1 - k)w + p} - (k_1 - k)v\} + k_1v
\]&lt;/span&gt; 注意到 &lt;span class=&#34;math inline&#34;&gt;\(k_1 - k\)&lt;/span&gt; 的重复出现，这就意味着有意义的状态只有 &lt;span class=&#34;math inline&#34;&gt;\(\frac{W -p}{w}\)&lt;/span&gt; 种，故每次总状态为 &lt;span class=&#34;math inline&#34;&gt;\(O(W)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(g_k = f_{kw + p} - kv\)&lt;/span&gt;，则我们对于每个 &lt;span class=&#34;math inline&#34;&gt;\(k_1\)&lt;/span&gt;，能且仅能从 &lt;span class=&#34;math inline&#34;&gt;\(\max_{k\in[\max\{0, k_1 - m\}, k_1]}\{g_k\}\)&lt;/span&gt; 处进行转移。这个东西可以使用单调队列进行优化。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;//{...} fastIO omitted&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;4e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos, val;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} q[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), W = read();&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = read(), w = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        m = min(m, W / w);&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(mod, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, w - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            head = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tail = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (W - mod) / w)&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = k, y = f[k * w + mod] - k * v;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt;= tail &amp;amp;&amp;amp; q[head].pos &amp;lt;  k - m) ++head;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt;= tail &amp;amp;&amp;amp; q[tail].val &amp;lt;= y) --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q[++tail].val = y, q[tail].pos = k;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[k * w + mod] = q[head].val + k * v;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[W]);&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>动态 DP 学习笔记</title>
        <link>https://oi.imyangty.com/note-ddp/</link>
        <pubDate>Sat, 05 Jun 2021 17:52:20 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-ddp/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg12.webp" alt="Featured image of post 动态 DP 学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;动态 dp 一般用来解决树上的 dp 问题，同时需要支持修改点权/边权的操作。&lt;/p&gt;
&lt;p&gt;前置知识：矩阵乘法，树链剖分&lt;/p&gt;
&lt;h2 id=&#34;模板题&#34;&gt;模板题&lt;/h2&gt;
&lt;h3 id=&#34;题意&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4719&#34;&gt;洛谷 P4719 【模板】动态 DP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;带修改点权的树上最大独立集，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 点，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次操作&lt;/p&gt;
&lt;h3 id=&#34;不带修改操作&#34;&gt;不带修改操作&lt;/h3&gt;
&lt;p&gt;没有上司的舞会嘛不就是。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,0}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 子树内不选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 点所构成的最大独立集点权之和，&lt;span class=&#34;math inline&#34;&gt;\(f_{i, 1}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 子树选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 点构成的最大独立集点权之和。则易得转移： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{u, 0} = \sum_{v\in\operatorname{son}(u)} \max\{f_{v, 0}, f_{v, 1}\}\\
f_{u, 1} = \operatorname{val}_u + \sum_{v\in\operatorname{son}(u) f_{v, 0}}
\end{cases}
\]&lt;/span&gt; 答案即为 &lt;span class=&#34;math inline&#34;&gt;\(\max\{f_{\mathrm{root}, 0}, f_{\mathrm{root}, 1}\}\)&lt;/span&gt;。这是普及组的内容。&lt;/p&gt;
&lt;h3 id=&#34;朴素的暴力&#34;&gt;朴素的暴力&lt;/h3&gt;
&lt;p&gt;我们注意到，如果带上了修改点权的操作，则只会有从根到该节点的一条链上会产生 dp 值的变化。这是相当重要的一个思考过程。这样的暴力的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;（最坏情况下一次操作 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;思考一下这个过程：对链进行操作，无非就是树剖。所以我们考虑使用树链剖分解决这个问题。&lt;/p&gt;
&lt;h3 id=&#34;树链剖分&#34;&gt;树链剖分&lt;/h3&gt;
&lt;p&gt;树剖的原理是使用线段树或者其他的数据结构来维护一条重链。故其维护的信息必须满足结合律。什么是结合律呢？加法显然就是满足结合律的： &lt;span class=&#34;math display&#34;&gt;\[
(A + B) + C = A + (B + C)
\]&lt;/span&gt; 然而这个 dp 值一看就不是很好维护出什么结合律的样子。。。&lt;/p&gt;
&lt;p&gt;怎么办？&lt;strong&gt;矩阵&lt;/strong&gt;。矩阵乘法是满足结合律的。所以我们来看看如何利用矩阵来解决这个问题。&lt;/p&gt;
&lt;h3 id=&#34;矩阵乘法&#34;&gt;矩阵乘法&lt;/h3&gt;
&lt;p&gt;首先对这个 dp 式子进行一下修改。由于每次都要对所有儿子求个和太慢了，所以定义一个 &lt;span class=&#34;math inline&#34;&gt;\(g_{i, 0/1}\)&lt;/span&gt; 来简化 dp 的式子。具体地，&lt;span class=&#34;math inline&#34;&gt;\(g_{i, 0}\)&lt;/span&gt; 表示不选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 且只可以选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的轻儿子所在子树的答案，&lt;span class=&#34;math inline&#34;&gt;\(g_{i, 1}\)&lt;/span&gt; 表示选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的最大答案。令 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点的重儿子，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{u, 0} = g_{u, 0} + \max\{f_{x, 0}, f_{x, 1}\}\\
f_{u, 1} = g_{u, 1} + f_{x, 0}
\end{cases}
\]&lt;/span&gt; 统一一下形式，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{u, 0} = \max\{g_{u, 0} + f_{x, 0}, g_{u, 0} + f_{x, 1}\}\\
f_{u, 1} = \max\{g_{u, 1} + f_{x, 0}, g_{u, 1} -\infty \}
\end{cases}
\]&lt;/span&gt; 如是，我们可构造矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}f_{u, 0}\\ f_{u, 1}\end{bmatrix}\)&lt;/span&gt;。然后定义广义矩阵乘法，使得 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
g_{u, 0} &amp;amp; g_{u, 0}\\
g_{u, 1} &amp;amp; -\infty
\end{bmatrix}
\otimes
\begin{bmatrix}
f_{x, 0}\\
f_{x, 1}
\end{bmatrix}
 = 
\begin{bmatrix}
f_{u, 0}\\
f_{u, 1}
\end{bmatrix}
\]&lt;/span&gt; 这里的广义矩阵乘法实际就是 &lt;span class=&#34;math display&#34;&gt;\[
C_{i, j} = \max_{k = 1}^n(A_{i,k} + B_{k, j})
\]&lt;/span&gt; 不难发现这样的矩阵乘法也是满足结合律的。&lt;/p&gt;
&lt;p&gt;于是我们的矩阵乘法就定义好了。这里将矩阵封装起来就是下面这个样子：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _c = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : r(_r), c(_c) {}&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define RET &lt;/span&gt;ret.ele&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M1 &lt;/span&gt;m1.ele&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M2 &lt;/span&gt;m2.ele&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                RET[i][j] = max(RET[i][j], M1[i][k] + M2[k][j]);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef RET&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意到这样子的单位矩阵应为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
0 &amp;amp; -\infty\\
-\infty &amp;amp; 0
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;查询节点的-dp-值&#34;&gt;查询节点的 dp 值&lt;/h3&gt;
&lt;p&gt;现在回顾一下处理流程。&lt;/p&gt;
&lt;p&gt;假设现在要求出 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 节点的 dp 值，怎么办呢？&lt;/p&gt;
&lt;p&gt;明确一点：每个节点的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 值根本就不重要，完全可以现算现用。我们需要记录的是每个节点的转移矩阵，并用线段树维护转移矩阵的乘积。&lt;/p&gt;
&lt;p&gt;于是乎，只需要知道 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 所在重链的底部叶子节点 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{end}(x)\)&lt;/span&gt; 的编号，然后获取 &lt;span class=&#34;math inline&#34;&gt;\(f_{\operatorname{end}(x)} = \begin{bmatrix}0\\ \operatorname{val}_{\operatorname{end}(x)}\end{bmatrix}\)&lt;/span&gt;，然后连乘上转移矩阵到 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 处就可以了。也就是 &lt;code&gt;query(dfn[x], dfn[end[x]]) * Matrix&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;h3 id=&#34;修改点权&#34;&gt;修改点权&lt;/h3&gt;
&lt;p&gt;首先对于转移矩阵，只需要把含 &lt;span class=&#34;math inline&#34;&gt;\(g_{u, 1}\)&lt;/span&gt; 的地方加上 &lt;span class=&#34;math inline&#34;&gt;\(\Delta\mathrm{val}_u\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;但是，这样一来，祖先的 dp 值就会发生改变，而对于 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的链顶节点，其一定为另一节点的轻儿子，所以 &lt;code&gt;fa[top[u]]&lt;/code&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 值是会发生变化的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fa[top[u]]&lt;/code&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 值由链顶节点的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 值产生，所以就需要查询出链顶的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 值。&lt;/p&gt;
&lt;p&gt;但这样一来，就又需要一条条链往上的一直修改了。。。&lt;/p&gt;
&lt;p&gt;总结一下流程吧：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;把矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}g_{u, 0} &amp;amp; g_{u, 0}\\ g_{u, 1} &amp;amp; -\infty\end{bmatrix}\)&lt;/span&gt; 的左下角加上 &lt;span class=&#34;math inline&#34;&gt;\(\Delta\mathrm{val}_u\)&lt;/span&gt;，记录到矩阵 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 中。&lt;/li&gt;
&lt;li&gt;在修改之前，查询一个 &lt;span class=&#34;math inline&#34;&gt;\(F = \begin{bmatrix}f_{\operatorname{top}(u), 0}\\f_{\operatorname{top}(u), 1}\end{bmatrix}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;线段树上修改 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点的矩阵为 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，然后查询 &lt;span class=&#34;math inline&#34;&gt;\(F&amp;#39; = \begin{bmatrix}f_{\operatorname{top}(u), 0}\\f_{\operatorname{top}(u), 1}\end{bmatrix}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(u\leftarrow \mathrm{fa}(\mathrm{top}(u))\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(u = 0\)&lt;/span&gt;，结束流程&lt;/li&gt;
&lt;li&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的矩阵第一行减去 &lt;span class=&#34;math inline&#34;&gt;\(\max\{F\}\)&lt;/span&gt; 加上 &lt;span class=&#34;math inline&#34;&gt;\(\max\{F&amp;#39;\}\)&lt;/span&gt;，左下角减去 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{top}(u), 1}\)&lt;/span&gt; 加上 &lt;span class=&#34;math inline&#34;&gt;\(F&amp;#39;\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{top}(u), 1}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;回到第二步&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;具体实现&#34;&gt;具体实现&lt;/h3&gt;
&lt;p&gt;遇到的坑点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线段树的查询函数可能会遇到查询 &lt;span class=&#34;math inline&#34;&gt;\([0, 0]\)&lt;/span&gt; 的情况，故需要在线段树结构体中记录下一个节点对应的区间，避免死循环。&lt;/li&gt;
&lt;li&gt;单位矩阵的初始化不要弄错或者忘记。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码还是相当长的，内含注释。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意，这段代码里面使用了重载了 &lt;code&gt;operator()&lt;/code&gt; 运算符来访问矩阵内部元素的封装，请在自己编写时老老实实写宏定义或者不要偷懒。这种写法在不开 &lt;code&gt;-O2&lt;/code&gt; 的情况下常数极大。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;head[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i];&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;nxt[i],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i])&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, INF = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnte;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;&lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;()(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ele[a][b];}&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ret(i, j) = max(ret(i, j), m1(i, k) + m2(k, j));&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ID, g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, val[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa[maxn], dep[maxn], size[maxn], son[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f)&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fa[u] = f, size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dep[u] = dep[f] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == f) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (size[v] &amp;gt; size[son[u]]) son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;//正常的树剖dfs1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfnClock, dfn[maxn], nfd[maxn], top[maxn], end[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-75&#34;&gt;&lt;a href=&#34;#cb2-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; topf)&lt;/span&gt;
&lt;span id=&#34;cb2-76&#34;&gt;&lt;a href=&#34;#cb2-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-77&#34;&gt;&lt;a href=&#34;#cb2-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    top[u] = topf, dfn[u] = ++dfnClock, nfd[dfnClock] = u;&lt;span class=&#34;co&#34;&gt;//记录nfd是方便下面的线段树操作&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-78&#34;&gt;&lt;a href=&#34;#cb2-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!son[u])&lt;span class=&#34;co&#34;&gt;//叶子节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-79&#34;&gt;&lt;a href=&#34;#cb2-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-80&#34;&gt;&lt;a href=&#34;#cb2-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = val[u];&lt;span class=&#34;co&#34;&gt;//f值很容易得到&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-81&#34;&gt;&lt;a href=&#34;#cb2-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u] = ID;&lt;span class=&#34;co&#34;&gt;//g矩阵赋为单位矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-82&#34;&gt;&lt;a href=&#34;#cb2-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        end[u] = u;&lt;span class=&#34;co&#34;&gt;//记录链底部&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-83&#34;&gt;&lt;a href=&#34;#cb2-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-84&#34;&gt;&lt;a href=&#34;#cb2-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-85&#34;&gt;&lt;a href=&#34;#cb2-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = val[u], g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;span class=&#34;co&#34;&gt;//初始化g矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-86&#34;&gt;&lt;a href=&#34;#cb2-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(son[u], topf);&lt;/span&gt;
&lt;span id=&#34;cb2-87&#34;&gt;&lt;a href=&#34;#cb2-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    end[u] = end[son[u]];&lt;span class=&#34;co&#34;&gt;//更新链底&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-88&#34;&gt;&lt;a href=&#34;#cb2-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb2-89&#34;&gt;&lt;a href=&#34;#cb2-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-90&#34;&gt;&lt;a href=&#34;#cb2-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa[u] || v == son[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-91&#34;&gt;&lt;a href=&#34;#cb2-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(v, v);&lt;/span&gt;
&lt;span id=&#34;cb2-92&#34;&gt;&lt;a href=&#34;#cb2-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = g[u](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) += max(f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[v][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-93&#34;&gt;&lt;a href=&#34;#cb2-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) += f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-94&#34;&gt;&lt;a href=&#34;#cb2-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-95&#34;&gt;&lt;a href=&#34;#cb2-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = g[u](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) + max(f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[son[u]][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//利用g更新f，以计算父亲的g和f&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-96&#34;&gt;&lt;a href=&#34;#cb2-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) + f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-97&#34;&gt;&lt;a href=&#34;#cb2-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-98&#34;&gt;&lt;a href=&#34;#cb2-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-99&#34;&gt;&lt;a href=&#34;#cb2-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-100&#34;&gt;&lt;a href=&#34;#cb2-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb2-101&#34;&gt;&lt;a href=&#34;#cb2-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-102&#34;&gt;&lt;a href=&#34;#cb2-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r;&lt;span class=&#34;co&#34;&gt;//不记录l和r的话对于查询区间为[0,0] 的情况会死循环&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-103&#34;&gt;&lt;a href=&#34;#cb2-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; val;&lt;/span&gt;
&lt;span id=&#34;cb2-104&#34;&gt;&lt;a href=&#34;#cb2-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} tree[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-105&#34;&gt;&lt;a href=&#34;#cb2-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-106&#34;&gt;&lt;a href=&#34;#cb2-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-107&#34;&gt;&lt;a href=&#34;#cb2-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-108&#34;&gt;&lt;a href=&#34;#cb2-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-109&#34;&gt;&lt;a href=&#34;#cb2-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-110&#34;&gt;&lt;a href=&#34;#cb2-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb2-111&#34;&gt;&lt;a href=&#34;#cb2-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-112&#34;&gt;&lt;a href=&#34;#cb2-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].val = tree[L].val * tree[R].val;&lt;/span&gt;
&lt;span id=&#34;cb2-113&#34;&gt;&lt;a href=&#34;#cb2-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-114&#34;&gt;&lt;a href=&#34;#cb2-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-115&#34;&gt;&lt;a href=&#34;#cb2-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-116&#34;&gt;&lt;a href=&#34;#cb2-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb2-117&#34;&gt;&lt;a href=&#34;#cb2-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-118&#34;&gt;&lt;a href=&#34;#cb2-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].l = i, tree[k].r = j;&lt;/span&gt;
&lt;span id=&#34;cb2-119&#34;&gt;&lt;a href=&#34;#cb2-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb2-120&#34;&gt;&lt;a href=&#34;#cb2-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-121&#34;&gt;&lt;a href=&#34;#cb2-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[nfd[i]];&lt;span class=&#34;co&#34;&gt;//此处即为nfd的作用&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-122&#34;&gt;&lt;a href=&#34;#cb2-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-123&#34;&gt;&lt;a href=&#34;#cb2-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-124&#34;&gt;&lt;a href=&#34;#cb2-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb2-125&#34;&gt;&lt;a href=&#34;#cb2-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb2-126&#34;&gt;&lt;a href=&#34;#cb2-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb2-127&#34;&gt;&lt;a href=&#34;#cb2-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-128&#34;&gt;&lt;a href=&#34;#cb2-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-129&#34;&gt;&lt;a href=&#34;#cb2-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-130&#34;&gt;&lt;a href=&#34;#cb2-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;span class=&#34;co&#34;&gt;//查询操作，查询[x, y] 的矩阵连乘积&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-131&#34;&gt;&lt;a href=&#34;#cb2-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-132&#34;&gt;&lt;a href=&#34;#cb2-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb2-133&#34;&gt;&lt;a href=&#34;#cb2-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tree[k].val;&lt;/span&gt;
&lt;span id=&#34;cb2-134&#34;&gt;&lt;a href=&#34;#cb2-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ret = ID;&lt;/span&gt;
&lt;span id=&#34;cb2-135&#34;&gt;&lt;a href=&#34;#cb2-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = query(L, x, y);&lt;/span&gt;
&lt;span id=&#34;cb2-136&#34;&gt;&lt;a href=&#34;#cb2-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) ret = ret * query(R, x, y);&lt;span class=&#34;co&#34;&gt;//注意乘的先后&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-137&#34;&gt;&lt;a href=&#34;#cb2-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-138&#34;&gt;&lt;a href=&#34;#cb2-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-139&#34;&gt;&lt;a href=&#34;#cb2-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-140&#34;&gt;&lt;a href=&#34;#cb2-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;span class=&#34;co&#34;&gt;//把线段树 x 点上的值赋为 p 的矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-141&#34;&gt;&lt;a href=&#34;#cb2-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-142&#34;&gt;&lt;a href=&#34;#cb2-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb2-143&#34;&gt;&lt;a href=&#34;#cb2-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb2-144&#34;&gt;&lt;a href=&#34;#cb2-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-145&#34;&gt;&lt;a href=&#34;#cb2-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[p];&lt;/span&gt;
&lt;span id=&#34;cb2-146&#34;&gt;&lt;a href=&#34;#cb2-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-147&#34;&gt;&lt;a href=&#34;#cb2-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-148&#34;&gt;&lt;a href=&#34;#cb2-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(L, x, p);&lt;/span&gt;
&lt;span id=&#34;cb2-149&#34;&gt;&lt;a href=&#34;#cb2-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(R, x, p);&lt;/span&gt;
&lt;span id=&#34;cb2-150&#34;&gt;&lt;a href=&#34;#cb2-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb2-151&#34;&gt;&lt;a href=&#34;#cb2-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-152&#34;&gt;&lt;a href=&#34;#cb2-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-153&#34;&gt;&lt;a href=&#34;#cb2-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-154&#34;&gt;&lt;a href=&#34;#cb2-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;span class=&#34;co&#34;&gt;//查询 x 点的 dp 值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-155&#34;&gt;&lt;a href=&#34;#cb2-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-156&#34;&gt;&lt;a href=&#34;#cb2-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb2-157&#34;&gt;&lt;a href=&#34;#cb2-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tmp(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, tmp(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = val[end[x]];&lt;span class=&#34;co&#34;&gt;//最右边，初始化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-158&#34;&gt;&lt;a href=&#34;#cb2-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], dfn[end[x]]) * tmp;&lt;span class=&#34;co&#34;&gt;//连乘给上去&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-159&#34;&gt;&lt;a href=&#34;#cb2-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-160&#34;&gt;&lt;a href=&#34;#cb2-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-161&#34;&gt;&lt;a href=&#34;#cb2-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;span class=&#34;co&#34;&gt;//将 x 的点权修改为 y&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-162&#34;&gt;&lt;a href=&#34;#cb2-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-163&#34;&gt;&lt;a href=&#34;#cb2-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; F0, F1;&lt;/span&gt;
&lt;span id=&#34;cb2-164&#34;&gt;&lt;a href=&#34;#cb2-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[x](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) += y - val[x];&lt;/span&gt;
&lt;span id=&#34;cb2-165&#34;&gt;&lt;a href=&#34;#cb2-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    F0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb2-166&#34;&gt;&lt;a href=&#34;#cb2-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    val[x] = y;&lt;/span&gt;
&lt;span id=&#34;cb2-167&#34;&gt;&lt;a href=&#34;#cb2-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (x)&lt;/span&gt;
&lt;span id=&#34;cb2-168&#34;&gt;&lt;a href=&#34;#cb2-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-169&#34;&gt;&lt;a href=&#34;#cb2-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], x);&lt;span class=&#34;co&#34;&gt;//把线段树上修改了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-170&#34;&gt;&lt;a href=&#34;#cb2-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        F1 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb2-171&#34;&gt;&lt;a href=&#34;#cb2-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = fa[top[x]];&lt;/span&gt;
&lt;span id=&#34;cb2-172&#34;&gt;&lt;a href=&#34;#cb2-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[x](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = g[x](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) += max(F1(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), F1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)) - max(F0(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), F0(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb2-173&#34;&gt;&lt;a href=&#34;#cb2-173&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[x](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) += F1(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) - F0(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-174&#34;&gt;&lt;a href=&#34;#cb2-174&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        F0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb2-175&#34;&gt;&lt;a href=&#34;#cb2-175&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-176&#34;&gt;&lt;a href=&#34;#cb2-176&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-177&#34;&gt;&lt;a href=&#34;#cb2-177&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-178&#34;&gt;&lt;a href=&#34;#cb2-178&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-179&#34;&gt;&lt;a href=&#34;#cb2-179&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-180&#34;&gt;&lt;a href=&#34;#cb2-180&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-181&#34;&gt;&lt;a href=&#34;#cb2-181&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ID(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;span class=&#34;co&#34;&gt;//单位矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-182&#34;&gt;&lt;a href=&#34;#cb2-182&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb2-183&#34;&gt;&lt;a href=&#34;#cb2-183&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) val[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb2-184&#34;&gt;&lt;a href=&#34;#cb2-184&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-185&#34;&gt;&lt;a href=&#34;#cb2-185&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-186&#34;&gt;&lt;a href=&#34;#cb2-186&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = read(), v = read();&lt;/span&gt;
&lt;span id=&#34;cb2-187&#34;&gt;&lt;a href=&#34;#cb2-187&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v), add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb2-188&#34;&gt;&lt;a href=&#34;#cb2-188&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-189&#34;&gt;&lt;a href=&#34;#cb2-189&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-190&#34;&gt;&lt;a href=&#34;#cb2-190&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-191&#34;&gt;&lt;a href=&#34;#cb2-191&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-192&#34;&gt;&lt;a href=&#34;#cb2-192&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--)&lt;/span&gt;
&lt;span id=&#34;cb2-193&#34;&gt;&lt;a href=&#34;#cb2-193&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-194&#34;&gt;&lt;a href=&#34;#cb2-194&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb2-195&#34;&gt;&lt;a href=&#34;#cb2-195&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(x, y);&lt;/span&gt;
&lt;span id=&#34;cb2-196&#34;&gt;&lt;a href=&#34;#cb2-196&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ans = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-197&#34;&gt;&lt;a href=&#34;#cb2-197&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, max(ans(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), ans(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)));&lt;/span&gt;
&lt;span id=&#34;cb2-198&#34;&gt;&lt;a href=&#34;#cb2-198&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-199&#34;&gt;&lt;a href=&#34;#cb2-199&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-200&#34;&gt;&lt;a href=&#34;#cb2-200&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;序列上的动态-dp&#34;&gt;序列上的动态 dp&lt;/h2&gt;
&lt;h3 id=&#34;题意-1&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP1716&#34;&gt;SPOJ GSS3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个数，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次操作，&lt;span class=&#34;math inline&#34;&gt;\(n,m\le 50000\)&lt;/span&gt;。每次操作要么修改 &lt;span class=&#34;math inline&#34;&gt;\(A_x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，要么询问 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 的最大连续子段和。&lt;span class=&#34;math inline&#34;&gt;\(|A_i|\le 10000\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;其他的解法&#34;&gt;其他的解法&lt;/h3&gt;
&lt;p&gt;使用线段树来记录区间和，区间最大子段和，区间最大前/后缀和，然后直接做。&lt;/p&gt;
&lt;p&gt;其实这确实是一道线段树的好题，可以和 GSS1 一起食用。&lt;/p&gt;
&lt;p&gt;这里不考虑这些做法。&lt;/p&gt;
&lt;h3 id=&#34;从-dp-方程说起&#34;&gt;从 dp 方程说起&lt;/h3&gt;
&lt;p&gt;众所周知，我们可以这样定义 dp 的状态：设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾的最大子段和，&lt;span class=&#34;math inline&#34;&gt;\(g_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1,i]\)&lt;/span&gt; 的最大子段和，则方程易得： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_i = \max\{f_{i - 1} + a_i, a_i\}\\
g_i = \max\{f_i, g_{i - 1}\}
\end{cases}
\]&lt;/span&gt; 然后我们尝试构造一下矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}f_i\\g_i\end{bmatrix}\)&lt;/span&gt;，但是发现转移写不出来，故加一行：&lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}f_i\\g_i\\0\end{bmatrix}\)&lt;/span&gt;则转移就有了： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
a_i &amp;amp; -\infty &amp;amp; a_i\\
a_i &amp;amp; 0 &amp;amp; a_i\\
-\infty &amp;amp; -\infty &amp;amp; 0 &amp;amp;
\end{bmatrix}
\otimes
\begin{bmatrix}
f_{i - 1}\\
g_{i - 1}\\
0
\end{bmatrix}
=
\begin{bmatrix}
f_{i}\\
g_i\\
0
\end{bmatrix}
\]&lt;/span&gt; 这里的 &lt;span class=&#34;math inline&#34;&gt;\(\otimes\)&lt;/span&gt; 和上文是一样的，都表示 &lt;span class=&#34;math inline&#34;&gt;\(C_{i,j} = \max_{k = 1}^n\{A_{i, k} + B_{k, j}\}\)&lt;/span&gt;。具体的构造其实不难，自己手玩一下就可以构造出来。&lt;/p&gt;
&lt;p&gt;于是我们就用线段树来维护转移矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}a_i &amp;amp; -\infty &amp;amp; a_i\\a_i &amp;amp; 0 &amp;amp; a_i\\-\infty &amp;amp; -\infty &amp;amp; 0 &amp;amp;\end{bmatrix}\)&lt;/span&gt; 的连乘积（但是一定要注意是从右往左乘），每次修改操作就修改矩阵就可以了。查询操作就初始化一下 ，最右边的矩阵肯定是 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}a_l\\a_l\\0\end{bmatrix}\)&lt;/span&gt;，查询出 &lt;span class=&#34;math inline&#34;&gt;\([l + 1, r]\)&lt;/span&gt; 的连乘积再左乘给初始矩阵就得解了。&lt;/p&gt;
&lt;p&gt;单位矩阵易构造为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
0 &amp;amp; -\infty &amp;amp; -\infty\\
-\infty &amp;amp; 0 &amp;amp; -\infty\\
-\infty &amp;amp; -\infty &amp;amp; 0
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;注意，这段代码里面使用了重载了 &lt;code&gt;operator()&lt;/code&gt; 运算符来访问矩阵内部元素的封装，请在自己编写时老老实实写宏定义或者不要偷懒。这种写法在不开 &lt;code&gt;-O2&lt;/code&gt; 的情况下常数极大。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, INF = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix() {}&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;&lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;()(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ele[a][b];}&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ret(i, j) = max(ret(i, j), m1(i, k) + m2(k, j));&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r;&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; val;&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} tree[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; ID;&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].val = tree[R].val * tree[L].val;&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; makeMat(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = x;&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-71&#34;&gt;&lt;a href=&#34;#cb3-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].l = i, tree[k].r = j;&lt;/span&gt;
&lt;span id=&#34;cb3-72&#34;&gt;&lt;a href=&#34;#cb3-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb3-73&#34;&gt;&lt;a href=&#34;#cb3-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-74&#34;&gt;&lt;a href=&#34;#cb3-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = makeMat(a[i] = read());&lt;/span&gt;
&lt;span id=&#34;cb3-75&#34;&gt;&lt;a href=&#34;#cb3-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-76&#34;&gt;&lt;a href=&#34;#cb3-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-77&#34;&gt;&lt;a href=&#34;#cb3-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb3-78&#34;&gt;&lt;a href=&#34;#cb3-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb3-79&#34;&gt;&lt;a href=&#34;#cb3-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb3-80&#34;&gt;&lt;a href=&#34;#cb3-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-81&#34;&gt;&lt;a href=&#34;#cb3-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-82&#34;&gt;&lt;a href=&#34;#cb3-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-83&#34;&gt;&lt;a href=&#34;#cb3-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;
&lt;span id=&#34;cb3-84&#34;&gt;&lt;a href=&#34;#cb3-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-85&#34;&gt;&lt;a href=&#34;#cb3-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ID;&lt;/span&gt;
&lt;span id=&#34;cb3-86&#34;&gt;&lt;a href=&#34;#cb3-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb3-87&#34;&gt;&lt;a href=&#34;#cb3-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tree[k].val;&lt;/span&gt;
&lt;span id=&#34;cb3-88&#34;&gt;&lt;a href=&#34;#cb3-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; ret = ID;&lt;/span&gt;
&lt;span id=&#34;cb3-89&#34;&gt;&lt;a href=&#34;#cb3-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = query(L, x, y);&lt;/span&gt;
&lt;span id=&#34;cb3-90&#34;&gt;&lt;a href=&#34;#cb3-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) ret = query(R, x, y) * ret;&lt;/span&gt;
&lt;span id=&#34;cb3-91&#34;&gt;&lt;a href=&#34;#cb3-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-92&#34;&gt;&lt;a href=&#34;#cb3-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-93&#34;&gt;&lt;a href=&#34;#cb3-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-94&#34;&gt;&lt;a href=&#34;#cb3-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; z)&lt;/span&gt;
&lt;span id=&#34;cb3-95&#34;&gt;&lt;a href=&#34;#cb3-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-96&#34;&gt;&lt;a href=&#34;#cb3-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb3-97&#34;&gt;&lt;a href=&#34;#cb3-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb3-98&#34;&gt;&lt;a href=&#34;#cb3-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-99&#34;&gt;&lt;a href=&#34;#cb3-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = makeMat(a[i] = z);&lt;/span&gt;
&lt;span id=&#34;cb3-100&#34;&gt;&lt;a href=&#34;#cb3-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-101&#34;&gt;&lt;a href=&#34;#cb3-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-102&#34;&gt;&lt;a href=&#34;#cb3-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(L, x, z);&lt;/span&gt;
&lt;span id=&#34;cb3-103&#34;&gt;&lt;a href=&#34;#cb3-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(R, x, z);&lt;/span&gt;
&lt;span id=&#34;cb3-104&#34;&gt;&lt;a href=&#34;#cb3-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb3-105&#34;&gt;&lt;a href=&#34;#cb3-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-106&#34;&gt;&lt;a href=&#34;#cb3-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-107&#34;&gt;&lt;a href=&#34;#cb3-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-108&#34;&gt;&lt;a href=&#34;#cb3-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb3-109&#34;&gt;&lt;a href=&#34;#cb3-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-110&#34;&gt;&lt;a href=&#34;#cb3-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ID(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;/span&gt;
&lt;span id=&#34;cb3-111&#34;&gt;&lt;a href=&#34;#cb3-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read();&lt;/span&gt;
&lt;span id=&#34;cb3-112&#34;&gt;&lt;a href=&#34;#cb3-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-113&#34;&gt;&lt;a href=&#34;#cb3-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q = read();&lt;/span&gt;
&lt;span id=&#34;cb3-114&#34;&gt;&lt;a href=&#34;#cb3-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--)&lt;/span&gt;
&lt;span id=&#34;cb3-115&#34;&gt;&lt;a href=&#34;#cb3-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-116&#34;&gt;&lt;a href=&#34;#cb3-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op = read(), x = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb3-117&#34;&gt;&lt;a href=&#34;#cb3-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!op) modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb3-118&#34;&gt;&lt;a href=&#34;#cb3-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-119&#34;&gt;&lt;a href=&#34;#cb3-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb3-120&#34;&gt;&lt;a href=&#34;#cb3-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-121&#34;&gt;&lt;a href=&#34;#cb3-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = a[x], ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-122&#34;&gt;&lt;a href=&#34;#cb3-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y) * ret;&lt;/span&gt;
&lt;span id=&#34;cb3-123&#34;&gt;&lt;a href=&#34;#cb3-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb3-124&#34;&gt;&lt;a href=&#34;#cb3-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-125&#34;&gt;&lt;a href=&#34;#cb3-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-126&#34;&gt;&lt;a href=&#34;#cb3-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-127&#34;&gt;&lt;a href=&#34;#cb3-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然也有另一种实现，就是只获取所有矩阵的连乘积，然后取 &lt;span class=&#34;math inline&#34;&gt;\((1, 2)\)&lt;/span&gt; 位置上的元素，不难发现 &lt;span class=&#34;math inline&#34;&gt;\((1, 2)\)&lt;/span&gt; 上的元素就是 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt;。实际上都可以 AC。&lt;/p&gt;
&lt;h2 id=&#34;noip2018-d2t3-保卫王国&#34;&gt;NOIP2018 D2T3 保卫王国&lt;/h2&gt;
&lt;h3 id=&#34;题意-2&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5024&#34;&gt;题面&lt;/a&gt;。给定一棵有点权的树，每次操作选定两个点强制选或不选，问这次操作下整棵树的最小点覆盖。&lt;/p&gt;
&lt;h3 id=&#34;动态-dp-的思路&#34;&gt;动态 DP 的思路&lt;/h3&gt;
&lt;p&gt;总点权 = 最大独立集 + 最小点覆盖。直接用求最大独立集的方法做就行了。&lt;/p&gt;
&lt;p&gt;强制选一个点即为这个点不能在最大独立集中出现，将点权设为 &lt;span class=&#34;math inline&#34;&gt;\(-\infty\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;强制不选某个点即为这个点必须在最大独立集中出现，将点权设为 &lt;span class=&#34;math inline&#34;&gt;\(+\infty\)&lt;/span&gt; 并让总点权也加上 &lt;span class=&#34;math inline&#34;&gt;\(+\infty\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;剩下的就是注意常数了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;head[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i];&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;nxt[i],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i])&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;fl&#34;&gt;1e15&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll max(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix() {}&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define RET &lt;/span&gt;ret.ele&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M1 &lt;/span&gt;m1.ele&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M2 &lt;/span&gt;m2.ele&lt;/span&gt;
&lt;span id=&#34;cb4-51&#34;&gt;&lt;a href=&#34;#cb4-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb4-52&#34;&gt;&lt;a href=&#34;#cb4-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-53&#34;&gt;&lt;a href=&#34;#cb4-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-54&#34;&gt;&lt;a href=&#34;#cb4-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-55&#34;&gt;&lt;a href=&#34;#cb4-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                RET[i][j] = max(RET[i][j], M1[i][k] + M2[k][j]);&lt;/span&gt;
&lt;span id=&#34;cb4-56&#34;&gt;&lt;a href=&#34;#cb4-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-57&#34;&gt;&lt;a href=&#34;#cb4-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef RET&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-58&#34;&gt;&lt;a href=&#34;#cb4-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-59&#34;&gt;&lt;a href=&#34;#cb4-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-60&#34;&gt;&lt;a href=&#34;#cb4-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-61&#34;&gt;&lt;a href=&#34;#cb4-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-62&#34;&gt;&lt;a href=&#34;#cb4-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ID, g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-63&#34;&gt;&lt;a href=&#34;#cb4-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-64&#34;&gt;&lt;a href=&#34;#cb4-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb4-65&#34;&gt;&lt;a href=&#34;#cb4-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll p[maxn], sump;&lt;/span&gt;
&lt;span id=&#34;cb4-66&#34;&gt;&lt;a href=&#34;#cb4-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-67&#34;&gt;&lt;a href=&#34;#cb4-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dep[maxn], fa[maxn], size[maxn], son[maxn]; &lt;/span&gt;
&lt;span id=&#34;cb4-68&#34;&gt;&lt;a href=&#34;#cb4-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-69&#34;&gt;&lt;a href=&#34;#cb4-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f)&lt;/span&gt;
&lt;span id=&#34;cb4-70&#34;&gt;&lt;a href=&#34;#cb4-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-71&#34;&gt;&lt;a href=&#34;#cb4-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dep[u] = dep[f] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fa[u] = f, size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-72&#34;&gt;&lt;a href=&#34;#cb4-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb4-73&#34;&gt;&lt;a href=&#34;#cb4-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-74&#34;&gt;&lt;a href=&#34;#cb4-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == f) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-75&#34;&gt;&lt;a href=&#34;#cb4-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-76&#34;&gt;&lt;a href=&#34;#cb4-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb4-77&#34;&gt;&lt;a href=&#34;#cb4-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (size[v] &amp;gt; size[son[u]]) son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb4-78&#34;&gt;&lt;a href=&#34;#cb4-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-79&#34;&gt;&lt;a href=&#34;#cb4-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-80&#34;&gt;&lt;a href=&#34;#cb4-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-81&#34;&gt;&lt;a href=&#34;#cb4-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-82&#34;&gt;&lt;a href=&#34;#cb4-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top[maxn], end[maxn], dfn[maxn], nfd[maxn], dfnClock;&lt;/span&gt;
&lt;span id=&#34;cb4-83&#34;&gt;&lt;a href=&#34;#cb4-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-84&#34;&gt;&lt;a href=&#34;#cb4-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-85&#34;&gt;&lt;a href=&#34;#cb4-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; topf)&lt;/span&gt;
&lt;span id=&#34;cb4-86&#34;&gt;&lt;a href=&#34;#cb4-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-87&#34;&gt;&lt;a href=&#34;#cb4-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    top[u] = topf, dfn[u] = ++dfnClock, nfd[dfnClock] = u;&lt;span class=&#34;co&#34;&gt;//记录nfd是方便下面的线段树操作&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-88&#34;&gt;&lt;a href=&#34;#cb4-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!son[u])&lt;span class=&#34;co&#34;&gt;//叶子节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-89&#34;&gt;&lt;a href=&#34;#cb4-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-90&#34;&gt;&lt;a href=&#34;#cb4-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = p[u];&lt;span class=&#34;co&#34;&gt;//f值很容易得到&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-91&#34;&gt;&lt;a href=&#34;#cb4-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u] = ID;&lt;span class=&#34;co&#34;&gt;//g矩阵赋为单位矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-92&#34;&gt;&lt;a href=&#34;#cb4-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        end[u] = u;&lt;span class=&#34;co&#34;&gt;//记录链底部&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-93&#34;&gt;&lt;a href=&#34;#cb4-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-94&#34;&gt;&lt;a href=&#34;#cb4-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-95&#34;&gt;&lt;a href=&#34;#cb4-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define G &lt;/span&gt;g[u].ele&lt;/span&gt;
&lt;span id=&#34;cb4-96&#34;&gt;&lt;a href=&#34;#cb4-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = p[u], G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = -INF;&lt;span class=&#34;co&#34;&gt;//初始化g矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-97&#34;&gt;&lt;a href=&#34;#cb4-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(son[u], topf);&lt;/span&gt;
&lt;span id=&#34;cb4-98&#34;&gt;&lt;a href=&#34;#cb4-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    end[u] = end[son[u]];&lt;span class=&#34;co&#34;&gt;//更新链底&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-99&#34;&gt;&lt;a href=&#34;#cb4-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb4-100&#34;&gt;&lt;a href=&#34;#cb4-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-101&#34;&gt;&lt;a href=&#34;#cb4-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa[u] || v == son[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-102&#34;&gt;&lt;a href=&#34;#cb4-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(v, v);&lt;/span&gt;
&lt;span id=&#34;cb4-103&#34;&gt;&lt;a href=&#34;#cb4-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] += max(f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[v][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-104&#34;&gt;&lt;a href=&#34;#cb4-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] += f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-105&#34;&gt;&lt;a href=&#34;#cb4-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-106&#34;&gt;&lt;a href=&#34;#cb4-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + max(f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[son[u]][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//利用g更新f，以计算父亲的g和f&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-107&#34;&gt;&lt;a href=&#34;#cb4-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-108&#34;&gt;&lt;a href=&#34;#cb4-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-109&#34;&gt;&lt;a href=&#34;#cb4-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef G&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-110&#34;&gt;&lt;a href=&#34;#cb4-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-111&#34;&gt;&lt;a href=&#34;#cb4-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-112&#34;&gt;&lt;a href=&#34;#cb4-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb4-113&#34;&gt;&lt;a href=&#34;#cb4-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-114&#34;&gt;&lt;a href=&#34;#cb4-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r;&lt;/span&gt;
&lt;span id=&#34;cb4-115&#34;&gt;&lt;a href=&#34;#cb4-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; val;&lt;/span&gt;
&lt;span id=&#34;cb4-116&#34;&gt;&lt;a href=&#34;#cb4-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} tree[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-117&#34;&gt;&lt;a href=&#34;#cb4-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-118&#34;&gt;&lt;a href=&#34;#cb4-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-119&#34;&gt;&lt;a href=&#34;#cb4-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-120&#34;&gt;&lt;a href=&#34;#cb4-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-121&#34;&gt;&lt;a href=&#34;#cb4-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-122&#34;&gt;&lt;a href=&#34;#cb4-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb4-123&#34;&gt;&lt;a href=&#34;#cb4-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-124&#34;&gt;&lt;a href=&#34;#cb4-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].val = tree[L].val * tree[R].val;&lt;/span&gt;
&lt;span id=&#34;cb4-125&#34;&gt;&lt;a href=&#34;#cb4-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-126&#34;&gt;&lt;a href=&#34;#cb4-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-127&#34;&gt;&lt;a href=&#34;#cb4-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-128&#34;&gt;&lt;a href=&#34;#cb4-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb4-129&#34;&gt;&lt;a href=&#34;#cb4-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-130&#34;&gt;&lt;a href=&#34;#cb4-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].l = i, tree[k].r = j;&lt;/span&gt;
&lt;span id=&#34;cb4-131&#34;&gt;&lt;a href=&#34;#cb4-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb4-132&#34;&gt;&lt;a href=&#34;#cb4-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-133&#34;&gt;&lt;a href=&#34;#cb4-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[nfd[i]];&lt;/span&gt;
&lt;span id=&#34;cb4-134&#34;&gt;&lt;a href=&#34;#cb4-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-135&#34;&gt;&lt;a href=&#34;#cb4-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-136&#34;&gt;&lt;a href=&#34;#cb4-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb4-137&#34;&gt;&lt;a href=&#34;#cb4-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb4-138&#34;&gt;&lt;a href=&#34;#cb4-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb4-139&#34;&gt;&lt;a href=&#34;#cb4-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-140&#34;&gt;&lt;a href=&#34;#cb4-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-141&#34;&gt;&lt;a href=&#34;#cb4-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-142&#34;&gt;&lt;a href=&#34;#cb4-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;
&lt;span id=&#34;cb4-143&#34;&gt;&lt;a href=&#34;#cb4-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-144&#34;&gt;&lt;a href=&#34;#cb4-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb4-145&#34;&gt;&lt;a href=&#34;#cb4-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tree[k].val;&lt;/span&gt;
&lt;span id=&#34;cb4-146&#34;&gt;&lt;a href=&#34;#cb4-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ret = ID;&lt;/span&gt;
&lt;span id=&#34;cb4-147&#34;&gt;&lt;a href=&#34;#cb4-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = query(L, x, y);&lt;/span&gt;
&lt;span id=&#34;cb4-148&#34;&gt;&lt;a href=&#34;#cb4-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) ret = ret * query(R, x, y);&lt;/span&gt;
&lt;span id=&#34;cb4-149&#34;&gt;&lt;a href=&#34;#cb4-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-150&#34;&gt;&lt;a href=&#34;#cb4-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-151&#34;&gt;&lt;a href=&#34;#cb4-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-152&#34;&gt;&lt;a href=&#34;#cb4-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb4-153&#34;&gt;&lt;a href=&#34;#cb4-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-154&#34;&gt;&lt;a href=&#34;#cb4-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb4-155&#34;&gt;&lt;a href=&#34;#cb4-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb4-156&#34;&gt;&lt;a href=&#34;#cb4-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-157&#34;&gt;&lt;a href=&#34;#cb4-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[p];&lt;/span&gt;
&lt;span id=&#34;cb4-158&#34;&gt;&lt;a href=&#34;#cb4-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-159&#34;&gt;&lt;a href=&#34;#cb4-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-160&#34;&gt;&lt;a href=&#34;#cb4-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(L, x, p);&lt;/span&gt;
&lt;span id=&#34;cb4-161&#34;&gt;&lt;a href=&#34;#cb4-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(R, x, p);&lt;/span&gt;
&lt;span id=&#34;cb4-162&#34;&gt;&lt;a href=&#34;#cb4-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb4-163&#34;&gt;&lt;a href=&#34;#cb4-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-164&#34;&gt;&lt;a href=&#34;#cb4-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-165&#34;&gt;&lt;a href=&#34;#cb4-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-166&#34;&gt;&lt;a href=&#34;#cb4-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb4-167&#34;&gt;&lt;a href=&#34;#cb4-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-168&#34;&gt;&lt;a href=&#34;#cb4-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-169&#34;&gt;&lt;a href=&#34;#cb4-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define RET &lt;/span&gt;ret.ele&lt;/span&gt;
&lt;span id=&#34;cb4-170&#34;&gt;&lt;a href=&#34;#cb4-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    RET[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, RET[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = p[end[x]];&lt;/span&gt;
&lt;span id=&#34;cb4-171&#34;&gt;&lt;a href=&#34;#cb4-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], dfn[end[x]]) * ret;&lt;/span&gt;
&lt;span id=&#34;cb4-172&#34;&gt;&lt;a href=&#34;#cb4-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef RET&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-173&#34;&gt;&lt;a href=&#34;#cb4-173&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-174&#34;&gt;&lt;a href=&#34;#cb4-174&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-175&#34;&gt;&lt;a href=&#34;#cb4-175&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, ll y)&lt;/span&gt;
&lt;span id=&#34;cb4-176&#34;&gt;&lt;a href=&#34;#cb4-176&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-177&#34;&gt;&lt;a href=&#34;#cb4-177&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; f0, f1;&lt;/span&gt;
&lt;span id=&#34;cb4-178&#34;&gt;&lt;a href=&#34;#cb4-178&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define G &lt;/span&gt;g[x].ele&lt;/span&gt;
&lt;span id=&#34;cb4-179&#34;&gt;&lt;a href=&#34;#cb4-179&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define F0 &lt;/span&gt;f0.ele&lt;/span&gt;
&lt;span id=&#34;cb4-180&#34;&gt;&lt;a href=&#34;#cb4-180&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define F1 &lt;/span&gt;f1.ele&lt;/span&gt;
&lt;span id=&#34;cb4-181&#34;&gt;&lt;a href=&#34;#cb4-181&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] += y - p[x];&lt;/span&gt;
&lt;span id=&#34;cb4-182&#34;&gt;&lt;a href=&#34;#cb4-182&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb4-183&#34;&gt;&lt;a href=&#34;#cb4-183&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[x] = y;&lt;/span&gt;
&lt;span id=&#34;cb4-184&#34;&gt;&lt;a href=&#34;#cb4-184&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (x)&lt;/span&gt;
&lt;span id=&#34;cb4-185&#34;&gt;&lt;a href=&#34;#cb4-185&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-186&#34;&gt;&lt;a href=&#34;#cb4-186&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], x);&lt;/span&gt;
&lt;span id=&#34;cb4-187&#34;&gt;&lt;a href=&#34;#cb4-187&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f1 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb4-188&#34;&gt;&lt;a href=&#34;#cb4-188&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = fa[top[x]];&lt;/span&gt;
&lt;span id=&#34;cb4-189&#34;&gt;&lt;a href=&#34;#cb4-189&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] += max(F1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], F1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) - max(F0[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], F0[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb4-190&#34;&gt;&lt;a href=&#34;#cb4-190&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] += F1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] - F0[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-191&#34;&gt;&lt;a href=&#34;#cb4-191&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb4-192&#34;&gt;&lt;a href=&#34;#cb4-192&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-193&#34;&gt;&lt;a href=&#34;#cb4-193&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-194&#34;&gt;&lt;a href=&#34;#cb4-194&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef G&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-195&#34;&gt;&lt;a href=&#34;#cb4-195&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef F0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-196&#34;&gt;&lt;a href=&#34;#cb4-196&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef F1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-197&#34;&gt;&lt;a href=&#34;#cb4-197&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-198&#34;&gt;&lt;a href=&#34;#cb4-198&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-199&#34;&gt;&lt;a href=&#34;#cb4-199&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb4-200&#34;&gt;&lt;a href=&#34;#cb4-200&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-201&#34;&gt;&lt;a href=&#34;#cb4-201&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ID.ele[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = ID.ele[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = -INF;&lt;/span&gt;
&lt;span id=&#34;cb4-202&#34;&gt;&lt;a href=&#34;#cb4-202&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read(), read();&lt;/span&gt;
&lt;span id=&#34;cb4-203&#34;&gt;&lt;a href=&#34;#cb4-203&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) p[i] = read(), sump += p[i];&lt;/span&gt;
&lt;span id=&#34;cb4-204&#34;&gt;&lt;a href=&#34;#cb4-204&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-205&#34;&gt;&lt;a href=&#34;#cb4-205&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-206&#34;&gt;&lt;a href=&#34;#cb4-206&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = read(), v = read();&lt;/span&gt;
&lt;span id=&#34;cb4-207&#34;&gt;&lt;a href=&#34;#cb4-207&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v), add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-208&#34;&gt;&lt;a href=&#34;#cb4-208&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-209&#34;&gt;&lt;a href=&#34;#cb4-209&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-210&#34;&gt;&lt;a href=&#34;#cb4-210&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-211&#34;&gt;&lt;a href=&#34;#cb4-211&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-212&#34;&gt;&lt;a href=&#34;#cb4-212&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb4-213&#34;&gt;&lt;a href=&#34;#cb4-213&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-214&#34;&gt;&lt;a href=&#34;#cb4-214&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = read(), x = read(), b = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb4-215&#34;&gt;&lt;a href=&#34;#cb4-215&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x &amp;amp;&amp;amp; !y &amp;amp;&amp;amp; (fa[a] == b || fa[b] == a))&lt;/span&gt;
&lt;span id=&#34;cb4-216&#34;&gt;&lt;a href=&#34;#cb4-216&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-217&#34;&gt;&lt;a href=&#34;#cb4-217&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;-1&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-218&#34;&gt;&lt;a href=&#34;#cb4-218&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-219&#34;&gt;&lt;a href=&#34;#cb4-219&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-220&#34;&gt;&lt;a href=&#34;#cb4-220&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll a0 = p[a], b0 = p[b], tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-221&#34;&gt;&lt;a href=&#34;#cb4-221&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x) modify(a, INF), tmp += INF - a0; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(a, -INF);&lt;/span&gt;
&lt;span id=&#34;cb4-222&#34;&gt;&lt;a href=&#34;#cb4-222&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!y) modify(b, INF), tmp += INF - b0; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(b, -INF);&lt;/span&gt;
&lt;span id=&#34;cb4-223&#34;&gt;&lt;a href=&#34;#cb4-223&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ans = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-224&#34;&gt;&lt;a href=&#34;#cb4-224&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ANS &lt;/span&gt;ans.ele&lt;/span&gt;
&lt;span id=&#34;cb4-225&#34;&gt;&lt;a href=&#34;#cb4-225&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, sump - max(ANS[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], ANS[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) + tmp);&lt;/span&gt;
&lt;span id=&#34;cb4-226&#34;&gt;&lt;a href=&#34;#cb4-226&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(a, a0), modify(b, b0);&lt;/span&gt;
&lt;span id=&#34;cb4-227&#34;&gt;&lt;a href=&#34;#cb4-227&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef ANS&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-228&#34;&gt;&lt;a href=&#34;#cb4-228&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-229&#34;&gt;&lt;a href=&#34;#cb4-229&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-230&#34;&gt;&lt;a href=&#34;#cb4-230&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;其他做法&#34;&gt;其他做法&lt;/h3&gt;
&lt;p&gt;不会，先咕咕咕。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Lucas 定理</title>
        <link>https://oi.imyangty.com/note-lucas/</link>
        <pubDate>Mon, 10 May 2021 21:25:50 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-lucas/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg20.webp" alt="Featured image of post Lucas 定理" /&gt;&lt;p&gt;本文停止维护，更多内容详见&lt;a href=&#34;https://oi.imyangty.com/summary-number-theory/&#34;&gt;数论总结&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;本文主要介绍了 Lucas 定理及其扩展，并附以若干道相关习题。&lt;/p&gt;
&lt;p&gt;鉴于作者没有 MO 背景，写出来的东西可能更偏向 OI 的做题应用，望各位大佬海涵 qwq。&lt;/p&gt;
&lt;p&gt;公式可能偏多，但是只要静下心来慢慢读还剩可以读得懂的 qwq。&lt;/p&gt;
&lt;p&gt;本文用到了的前置知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简单的排列组合&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;普及~提高的数论知识&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;二项式定理&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;简单的生成函数知识&lt;/li&gt;
&lt;li&gt;乘法逆元&lt;/li&gt;
&lt;li&gt;中国剩余定理（CRT）&lt;/li&gt;
&lt;li&gt;欧拉定理（可选，习题涉及）&lt;/li&gt;
&lt;li&gt;整除分块（习题涉及其思想）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;普通-lucas模数为质数&#34;&gt;普通 Lucas（模数为质数）&lt;/h2&gt;
&lt;h3 id=&#34;问题描述&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;求 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m\bmod p
\]&lt;/span&gt; 的值，其中 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 可以很大，&lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为一个不大的质数。&lt;/p&gt;
&lt;h3 id=&#34;结论lucas-定理&#34;&gt;结论（Lucas 定理）&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\cdot \binom{n\bmod p}{m\bmod p}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;体现在程序中就是：&lt;span class=&#34;math inline&#34;&gt;\(\binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\)&lt;/span&gt; 可以递归求解，&lt;span class=&#34;math inline&#34;&gt;\(\binom{n\bmod p}{m\bmod p}\)&lt;/span&gt; 可以直接算，时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(f(p) + g(n)\log n)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(f(p)\)&lt;/span&gt; 为预处理组合数的时间复杂度，&lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt; 为单次询问组合数的时间复杂度。&lt;/p&gt;
&lt;h3 id=&#34;证明&#34;&gt;证明&lt;/h3&gt;
&lt;p&gt;参考了 &lt;a href=&#34;https://oi-wiki.org/math/lucas/&#34;&gt;OI-Wiki&lt;/a&gt; 的证明并加以了自己的说明和补充。&lt;/p&gt;
&lt;h4 id=&#34;引理&#34;&gt;引理&lt;/h4&gt;
&lt;p&gt;首先考虑 &lt;span class=&#34;math display&#34;&gt;\[
\binom p n \bmod p
\]&lt;/span&gt; 的取值，注意到展开组合数之后其为如下形式： &lt;span class=&#34;math display&#34;&gt;\[
\frac{p!}{n!(p-n)!}\bmod p
\]&lt;/span&gt; 而显然，由于分子中 &lt;span class=&#34;math inline&#34;&gt;\(p!\)&lt;/span&gt; 是一定有质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的，所以只有当 &lt;span class=&#34;math inline&#34;&gt;\(n = 0\lor n = p\)&lt;/span&gt; 的时候（即 &lt;span class=&#34;math inline&#34;&gt;\(p!\)&lt;/span&gt; 能被消干净）整体的结果为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。即 &lt;span class=&#34;math display&#34;&gt;\[
\binom p n\bmod p = [n = 0\lor n = p]
\]&lt;/span&gt; 进而我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(a + b)^p&amp;amp;=\sum_{n = 0}^p\binom p na^nb^{p - n}\\
&amp;amp;\equiv \sum_{n= 0}^p[n = 0\lor n = p]a^nb^{p - n}\\
&amp;amp;\equiv a^p + b^p\pmod p
\end{aligned}
\]&lt;/span&gt; 然后将其推广到二项式的情况， &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(ax^n + bx^m)^p&amp;amp;\equiv a^px^{np} + b^px^{mp}\\
&amp;amp;\equiv ax^{np} + bx^{mp}
\end{aligned}
\]&lt;/span&gt; 即我们可以直接把指数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 给提进来。&lt;/p&gt;
&lt;h4 id=&#34;证明-1&#34;&gt;证明&lt;/h4&gt;
&lt;h3 id=&#34;代码实现&#34;&gt;代码实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * lucas(n / p, m / p) * C(n % p, m % p) % p;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;写的时候注意边界 &lt;span class=&#34;math inline&#34;&gt;\(m = 0\)&lt;/span&gt; 即可，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\)&lt;/span&gt; 用 Lucas 定理继续递归计算，而右边的 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{n\bmod p}{m\bmod p}\)&lt;/span&gt; 因为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 较小，直接求即可。&lt;/p&gt;
&lt;p&gt;总的实现：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3807&#34;&gt;洛谷 P3807 【模板】卢卡斯定理&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, p, fact[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qpow(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod)&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * base * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; C(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (m &amp;gt; n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * fact[n] * qpow(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * fact[m] * fact[n - m] % p, p - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p) % p;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * lucas(n / p, m / p) * C(n % p, m % p) % p;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T = read();&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        m = read(), n = read() + m, p = read();&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fact[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt;) fact[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * i * fact[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % p;&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, lucas(n, m));&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;lucas-定理的另一种证明&#34;&gt;Lucas 定理的另一种证明&lt;/h2&gt;
&lt;p&gt;参考了&lt;strong&gt;冯志刚版《初等数论》&lt;/strong&gt;第37页。这个应该是大多数 MOer 先接触到的 Lucas 定理的版本。&lt;/p&gt;
&lt;h3 id=&#34;lucas-定理的另一形式&#34;&gt;Lucas 定理的另一形式&lt;/h3&gt;
&lt;p&gt;对于整数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 和素数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，若 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a &amp;amp;= \sum_{i = 0}^k a_ip^i\\
b &amp;amp;= \sum_{i = 0}^k b_ip^i
\end{aligned}
\]&lt;/span&gt; （相当于把 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下表示）则 &lt;span class=&#34;math display&#34;&gt;\[
\binom ab\equiv\prod_{i = 0}^k\binom{a_i}{b_i}\pmod p
\]&lt;/span&gt; 那么它和之前提到的 &lt;span class=&#34;math display&#34;&gt;\[
\binom a b\equiv\binom{\lfloor\frac ap\rfloor}{\lfloor\frac bp\rfloor}\binom{a\bmod p}{b\bmod p}\pmod p
\]&lt;/span&gt; 为什么是等价的呢？&lt;/p&gt;
&lt;p&gt;这样子考虑，对 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 取模相当于取了 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下的最低位，而除以 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 向下取整就相当于 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下去掉最后一位，反复套用就发现两个形式是等价的了。&lt;/p&gt;
&lt;h3 id=&#34;证明-2&#34;&gt;证明&lt;/h3&gt;
&lt;p&gt;记号约定：设 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle f(x) = \sum_{i = 0}^na_ix^i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle g(x) = \sum_{i = 0}^nb_ix^i\)&lt;/span&gt; 均为整系数多项式，若对于 &lt;span class=&#34;math inline&#34;&gt;\(\forall 0\le i\le n\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(a_i\equiv b_i\pmod m\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 对模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 同余，记作 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\equiv g(x)\pmod m\)&lt;/span&gt;。注意到若 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\equiv g(x)\pmod m\)&lt;/span&gt;，则对于 &lt;span class=&#34;math inline&#34;&gt;\(\forall a\in \mathbb Z\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(f(a)\equiv g(a)\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为素数&lt;/strong&gt;，可知对于 &lt;span class=&#34;math inline&#34;&gt;\(1\le j\le p - 1\)&lt;/span&gt;，都有 &lt;span class=&#34;math display&#34;&gt;\[
\binom p j = \frac pj\binom{p - 1}{j - 1}\equiv0\pmod p
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(1 + x)^p &amp;amp;= 1 + \binom p1x + \cdots + \binom{p}{p - 1}x^{p - 1} + x^p\\
&amp;amp;\equiv 1 + x^p\pmod p
\end{aligned}
\]&lt;/span&gt; 利用这个结论，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(1 + x)^a &amp;amp;= (1 + x)^{a_0}((1 + x)^p)^{a_1}\cdots((1 + x)^{p^k})^{a_k}\\
&amp;amp;\equiv (1 + x)^{a_0}(1 + x^p)^{a_1}\cdots(1 + x^{p^k})^{a_k}\pmod p
\end{aligned}
\]&lt;/span&gt; 观察右边展开后得到的结果。发现每个括号中有且仅有一项对 &lt;span class=&#34;math inline&#34;&gt;\(x^b\)&lt;/span&gt; 的系数产生了贡献（根据 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制数的性质），再结合二项式定理，故 &lt;span class=&#34;math display&#34;&gt;\[
\binom ab\equiv\prod_{i = 0}^k\binom{a_i}{b_i}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;exlucas模数不一定为质数&#34;&gt;exLucas（模数不一定为质数）&lt;/h2&gt;
&lt;p&gt;继续之前，假定读者已熟练掌握乘法逆元和 CRT。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;这个东西除了和 Lucas 定理长得像之外和 Lucas 就没有半毛钱关系了，而且比 Lucas 阴间 n 多倍&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;问题描述-1&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;求 &lt;span class=&#34;math display&#34;&gt;\[
\binom nm\bmod p
\]&lt;/span&gt; 的值。其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不一定为质数且 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 较小。&lt;/p&gt;
&lt;h3 id=&#34;问题求解&#34;&gt;问题求解&lt;/h3&gt;
&lt;p&gt;参考了 &lt;a href=&#34;https://oi-wiki.org/math/lucas/&#34;&gt;OI-Wiki&lt;/a&gt; 并加以自己的说明和补充。&lt;/p&gt;
&lt;h4 id=&#34;part-1&#34;&gt;Part 1&lt;/h4&gt;
&lt;p&gt;使用唯一分解定理分解模数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 得到： &lt;span class=&#34;math display&#34;&gt;\[
p = \prod_{i = 1}^rq_i^{k_i}
\]&lt;/span&gt; 然后由于 &lt;span class=&#34;math inline&#34;&gt;\(q_i^{k_i}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(q_j^{k_j}\)&lt;/span&gt; 两两互质，所以可以构造如下的同余方程组 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}x\equiv\dbinom n m\pmod{q_1^{k_1}}\\x\equiv\dbinom n m\pmod{q_2^{k_2}}\\\quad\cdots\\x\equiv\dbinom n m\pmod{q_r^{k_r}}\end{cases}
\]&lt;/span&gt; 然后用 CRT 合并解即可。&lt;/p&gt;
&lt;h4 id=&#34;part-2&#34;&gt;Part 2&lt;/h4&gt;
&lt;p&gt;现在的问题变成了求 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom n m \bmod{q^k}\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 为质数）的值。拆开组合数的式子，我们发现： &lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \frac{n!}{m!(n - m)!}\pmod{q^k}
\]&lt;/span&gt; 然而下面那个东西不一定能算模 &lt;span class=&#34;math inline&#34;&gt;\(q^k\)&lt;/span&gt; 意义下的乘法逆元，那么我们就把所有的 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 提出来： &lt;span class=&#34;math display&#34;&gt;\[
\frac{\frac{n!}{q^x}}{\frac{m!}{q^y}\frac{(n - m)!}{q^z}}q^{x - y - z}\bmod q^k
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 中质因子 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 的次数，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 同理。这样子分数线下面的式子由于与 &lt;span class=&#34;math inline&#34;&gt;\(q^k\)&lt;/span&gt; 互质，就可以求逆元了。&lt;/p&gt;
&lt;h4 id=&#34;part-3&#34;&gt;Part 3&lt;/h4&gt;
&lt;p&gt;现在需要解决的就是求 &lt;span class=&#34;math display&#34;&gt;\[
f(n) \equiv \frac{n!}{q^x}\pmod{q^k}
\]&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;先考虑 &lt;span class=&#34;math inline&#34;&gt;\(n!\bmod q^k\)&lt;/span&gt; 的值。以一个最常见的例子：&lt;span class=&#34;math inline&#34;&gt;\(n = 22\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(q = 3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k = 2\)&lt;/span&gt; 为例： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
22! = 1\times2\times3\times4\times5\times6\times7\times8\times9\times10\times11\times12\\\times13\times14\times15\times16\times17\times18\times19\times20\times21\times22
\end{aligned}
\]&lt;/span&gt; 把所有 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 的倍数提取出来，即为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
22! =&amp;amp; (3\times6\times9\times12\times15\times18\times21)\times1\times2\times4\times5\times7\\&amp;amp;\times8\times10\times11\times13\times14\times16\times17\times19\times20\times22\\
=&amp;amp;3^7\times(1\times2\times3\times4\times5\times6\times7)\times1\times2\times4\times5\times7\\&amp;amp;\times8\times10\times11\times13\times14\times16\times17\times19\times20\times22\\
\end{aligned}
\]&lt;/span&gt; 注意一下这个分组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(3^7\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(q^{\lfloor n/q\rfloor}\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;还剩下一个 &lt;span class=&#34;math inline&#34;&gt;\(7!\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n/q\rfloor!\)&lt;/span&gt;，这一部分可以递归进行求解。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后剩下来的就是 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 中与 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 互质的部分的乘积。可以发现 &lt;span class=&#34;math display&#34;&gt;\[
1\times2\times4\times5\times7\times8\equiv10\times11\times13\times14\times16\times17\pmod{3^2}
\]&lt;/span&gt; 所以其相当于就是一个循环节，我们再重新写一下 &lt;span class=&#34;math inline&#34;&gt;\(22!\)&lt;/span&gt; 的展开： &lt;span class=&#34;math display&#34;&gt;\[
22! \equiv 3^7\times7!\times(1\times2\times4\times5\times7\times8)^2\times(19\times20\times22)\pmod{3^2}
\]&lt;/span&gt; 关于循环节，可以这样理解： &lt;span class=&#34;math display&#34;&gt;\[
\prod_{i,i\perp q}^{q^k}i\equiv\prod_{i,i\perp q}^{q^k}(i + tq^k)\pmod{q^k}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(t\in\mathbb N^*\)&lt;/span&gt;。这个循环节循环了 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n}{q^k}\right\rfloor\)&lt;/span&gt; 次，所以考虑暴力把 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp q}^{q^k}i\)&lt;/span&gt; 求出来然后快速幂求一波 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n}{q^k}\right\rfloor\)&lt;/span&gt; 次幂。当然最后是需要乘上余项 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp q}^{n\bmod q^k}i\)&lt;/span&gt;（对应上面的 &lt;span class=&#34;math inline&#34;&gt;\(19\times20\times22\)&lt;/span&gt;），暴力就可以了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结下来就是 &lt;span class=&#34;math display&#34;&gt;\[
n!\equiv q^{\lfloor n/q\rfloor}\cdot\left(\left\lfloor\frac n q\right\rfloor\right)!\cdot\left(\prod_{i, i\perp q}^{q^k}i\right)^{\lfloor n / q^k\rfloor}\cdot \left(\prod_{i, i\perp q}^{n\bmod q^k}i\right)\pmod{q^k}
\]&lt;/span&gt; 而我们需要求的是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\frac{n!}{q^x}\bmod q^k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;变形一下上面的式子得到 &lt;span class=&#34;math display&#34;&gt;\[
f(n)\equiv f\left(\left\lfloor\frac n q\right\rfloor\right)\cdot\left(\prod_{i, i\perp q}^{q^k}i\right)^{\lfloor n / q^k\rfloor}\cdot \left(\prod_{i, i\perp q}^{n\bmod q^k}i\right)\pmod{q^k}
\]&lt;/span&gt; （注意此时 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 中的质因子 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 会在递归的过程中全部被消掉），此时我们就求得 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 的值了。&lt;/p&gt;
&lt;p&gt;这一部分的代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc(ll n, ll q, ll qk)&lt;span class=&#34;co&#34;&gt;//传入的参数不再赘述&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//边界条件&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, qk)&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % q) ret = ret * i % qk;&lt;span class=&#34;co&#34;&gt;//处理循环节的部分&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = qpow(ret, n / qk, qk);&lt;span class=&#34;co&#34;&gt;//给循环节进行快速幂&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, n / qk * qk + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % q) ret = ret * (i % qk) % qk;&lt;span class=&#34;co&#34;&gt;//暴力合并余项，注意这里一定要先取模再乘不然会去世&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret * calc(n / q, q, qk) % qk;&lt;span class=&#34;co&#34;&gt;//递归继续求解&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;part-4&#34;&gt;Part 4&lt;/h4&gt;
&lt;p&gt;那么回到刚才的问题：求 &lt;span class=&#34;math display&#34;&gt;\[
\frac{\frac{n!}{q^x}}{\frac{m!}{q^y}\frac{(n - m)!}{q^z}}q^{x - y - z}\bmod q^k
\]&lt;/span&gt; 左边分数的分子可以求，分母由于必然与 &lt;span class=&#34;math inline&#34;&gt;\(q^k\)&lt;/span&gt; 互质是可以求逆元的，现在问题就是如何去求这个 &lt;span class=&#34;math inline&#34;&gt;\(q^{x - y - z}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;不妨设 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = x\)&lt;/span&gt;，则由刚才的推导过程可以知道 &lt;span class=&#34;math display&#34;&gt;\[
g(n) = \left\lfloor\frac n q\right\rfloor + g\left(\left\lfloor\frac n q\right\rfloor\right)
\]&lt;/span&gt; （其实就是考虑当前求 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 中 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 的倍数产生的贡献和下面求 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / q\rfloor!\)&lt;/span&gt; 中 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 的倍数产生的贡献）&lt;/p&gt;
&lt;p&gt;当然我们其实有一种更加简洁的去求 &lt;span class=&#34;math inline&#34;&gt;\(x - y - z\)&lt;/span&gt; 的方法：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n; i; i /= q) cnt += i / q;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = m; i; i /= q) cnt -= i / q;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n - m; i; i /= q) cnt -= i / q;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样做的道理其实也很简单，完全就是把递归式的 &lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt; 换成了非递归式而已。&lt;/p&gt;
&lt;p&gt;那么所有的问题就已经搞定了。&lt;/p&gt;
&lt;p&gt;这一部分的代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll multiLucas(ll n, ll m, ll q, ll qk)&lt;span class=&#34;co&#34;&gt;//求 \binom n m \pmod{q ^ k} 的值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n; i; i /= q) cnt += i / q;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = m; i; i /= q) cnt -= i / q;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n - m; i; i /= q) cnt -= i / q;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qpow(q, cnt, qk) * calc(n, q, qk) % qk * inv(calc(m, q, qk), qk) % qk * inv(calc(n - m, q, qk), qk) % qk;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;流程回顾&#34;&gt;流程回顾&lt;/h4&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 分解质因数得到每个质因子 &lt;span class=&#34;math inline&#34;&gt;\(q^k\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于每个质因子，求出 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m\equiv \frac{f(n)}{f(m)f(n - m)}\cdot q^{g(n) - g(m) - g(n - m)}\pmod{q^k}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用 CRT 合并所有答案。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;代码实现-1&#34;&gt;代码实现&lt;/h3&gt;
&lt;p&gt;细节非常的繁冗，一定要注意关于取模/&lt;code&gt;long long&lt;/code&gt;/是否爆范围之类的问题。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4720&#34;&gt;洛谷 P4720 【模板】扩展卢卡斯&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ll&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ll&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll mod;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; exgcd(ll a, ll b, ll &amp;amp;x, ll &amp;amp;y)&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b)&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; ll inv(ll n, ll p)&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll x, y;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(n, p, x, y);&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qpow(ll base, ll p, ll mod)&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll CRT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, ll *a, ll *m)&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll M = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) M *= m[i];&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll w = M / m[i];&lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = (ret + a[i] * w % mod * inv(w, m[i]) % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc(ll n, ll q, ll qk)&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, qk)&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % q) ret = ret * i % qk;&lt;/span&gt;
&lt;span id=&#34;cb6-55&#34;&gt;&lt;a href=&#34;#cb6-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = qpow(ret, n / qk, qk);&lt;/span&gt;
&lt;span id=&#34;cb6-56&#34;&gt;&lt;a href=&#34;#cb6-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, n / qk * qk + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb6-57&#34;&gt;&lt;a href=&#34;#cb6-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % q) ret = ret * (i % qk) % qk;&lt;/span&gt;
&lt;span id=&#34;cb6-58&#34;&gt;&lt;a href=&#34;#cb6-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret * calc(n / q, q, qk) % qk;&lt;/span&gt;
&lt;span id=&#34;cb6-59&#34;&gt;&lt;a href=&#34;#cb6-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-60&#34;&gt;&lt;a href=&#34;#cb6-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-61&#34;&gt;&lt;a href=&#34;#cb6-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll multiLucas(ll n, ll m, ll q, ll qk)&lt;/span&gt;
&lt;span id=&#34;cb6-62&#34;&gt;&lt;a href=&#34;#cb6-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-63&#34;&gt;&lt;a href=&#34;#cb6-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-64&#34;&gt;&lt;a href=&#34;#cb6-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n; i; i /= q) cnt += i / q;&lt;/span&gt;
&lt;span id=&#34;cb6-65&#34;&gt;&lt;a href=&#34;#cb6-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = m; i; i /= q) cnt -= i / q;&lt;/span&gt;
&lt;span id=&#34;cb6-66&#34;&gt;&lt;a href=&#34;#cb6-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n - m; i; i /= q) cnt -= i / q;&lt;/span&gt;
&lt;span id=&#34;cb6-67&#34;&gt;&lt;a href=&#34;#cb6-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qpow(q, cnt, qk) * calc(n, q, qk) % qk * inv(calc(m, q, qk), qk) % qk * inv(calc(n - m, q, qk), qk) % qk;&lt;/span&gt;
&lt;span id=&#34;cb6-68&#34;&gt;&lt;a href=&#34;#cb6-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-69&#34;&gt;&lt;a href=&#34;#cb6-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-70&#34;&gt;&lt;a href=&#34;#cb6-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll exLucas(ll n, ll m, ll p)&lt;/span&gt;
&lt;span id=&#34;cb6-71&#34;&gt;&lt;a href=&#34;#cb6-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-72&#34;&gt;&lt;a href=&#34;#cb6-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-73&#34;&gt;&lt;a href=&#34;#cb6-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll qk[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;], a[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//存放所有的 q^k 和待合并答案的结果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-74&#34;&gt;&lt;a href=&#34;#cb6-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i * i &amp;lt;= p; ++i)&lt;span class=&#34;co&#34;&gt;//质因数分解&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-75&#34;&gt;&lt;a href=&#34;#cb6-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb6-76&#34;&gt;&lt;a href=&#34;#cb6-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-77&#34;&gt;&lt;a href=&#34;#cb6-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb6-78&#34;&gt;&lt;a href=&#34;#cb6-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            qk[++cnt] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-79&#34;&gt;&lt;a href=&#34;#cb6-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-80&#34;&gt;&lt;a href=&#34;#cb6-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                qk[cnt] *= i, p /= i;&lt;/span&gt;
&lt;span id=&#34;cb6-81&#34;&gt;&lt;a href=&#34;#cb6-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a[cnt] = multiLucas(n, m, i, qk[cnt]);&lt;/span&gt;
&lt;span id=&#34;cb6-82&#34;&gt;&lt;a href=&#34;#cb6-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-83&#34;&gt;&lt;a href=&#34;#cb6-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-84&#34;&gt;&lt;a href=&#34;#cb6-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) qk[++cnt] = p, a[cnt] = multiLucas(n, m, p, p);&lt;/span&gt;
&lt;span id=&#34;cb6-85&#34;&gt;&lt;a href=&#34;#cb6-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; CRT(cnt, a, qk);&lt;span class=&#34;co&#34;&gt;//CRT 合并答案&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-86&#34;&gt;&lt;a href=&#34;#cb6-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-87&#34;&gt;&lt;a href=&#34;#cb6-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-88&#34;&gt;&lt;a href=&#34;#cb6-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb6-89&#34;&gt;&lt;a href=&#34;#cb6-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-90&#34;&gt;&lt;a href=&#34;#cb6-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll n, m, p;&lt;/span&gt;
&lt;span id=&#34;cb6-91&#34;&gt;&lt;a href=&#34;#cb6-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m, &amp;amp;p);&lt;/span&gt;
&lt;span id=&#34;cb6-92&#34;&gt;&lt;a href=&#34;#cb6-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mod = p;&lt;/span&gt;
&lt;span id=&#34;cb6-93&#34;&gt;&lt;a href=&#34;#cb6-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, exLucas(n, m, p));&lt;/span&gt;
&lt;span id=&#34;cb6-94&#34;&gt;&lt;a href=&#34;#cb6-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-95&#34;&gt;&lt;a href=&#34;#cb6-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;习题&#34;&gt;习题&lt;/h2&gt;
&lt;p&gt;两个模板&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3807&#34;&gt;P3807 【模板】卢卡斯定理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4720&#34;&gt;P4720 【模板】扩展卢卡斯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来就是应用到 Lucas 定理的习题了，难度应该是递增的，请放心食用。&lt;/p&gt;
&lt;h3 id=&#34;国家集训队礼物&#34;&gt;[国家集训队]礼物&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2183&#34;&gt;洛谷 P2183&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 件礼物，送给 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个人，送给第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个人礼物的数量为 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt;。请计算出送礼物的方案数（两个方案被认为是不同的，当且仅当存在某个人在这两种方案中收到的礼物不同）模 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 后的结果。&lt;/p&gt;
&lt;p&gt;数据范围：令 &lt;span class=&#34;math inline&#34;&gt;\(P = \prod_{i = 1}^tp_i^{c_i}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 为质数，有 &lt;span class=&#34;math inline&#34;&gt;\(1\le n\le10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\leq m\leq 5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\leq p_i^{c_i}\leq 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\leq w_i \leq P\leq 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;hint&#34;&gt;Hint&lt;/h4&gt;
&lt;p&gt;直接考虑组合意义。&lt;/p&gt;
&lt;h4 id=&#34;solution&#34;&gt;Solution&lt;/h4&gt;
&lt;p&gt;分析题意：直接一波乘法原理可得答案为 &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{w_1}\times\binom{n - w_1}{w_2}\times\binom{n - w_1 - w_2}{w_3}\times\cdots\bmod P
\]&lt;/span&gt; （组合意义就是对于每个人看能取多少，第一个人取了 &lt;span class=&#34;math inline&#34;&gt;\(w_1\)&lt;/span&gt; 个了所以第二个人能取的就只有 &lt;span class=&#34;math inline&#34;&gt;\(n - w_1\)&lt;/span&gt; 个，以此类推）&lt;/p&gt;
&lt;p&gt;剩下就是套一个 exLucas 板子的事情了（因为 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 不一定为质数）。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ll&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll P, n, m, w[&lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;//.......//&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;P);&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m);&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll W = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, w + i), W += w[i];&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (W &amp;gt; n)&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;Impossible&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = ans * exLucas(n, w[i], P) % P;&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n -= w[i];&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;sdoi2010古代猪文&#34;&gt;[SDOI2010]古代猪文&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2480&#34;&gt;洛谷 P2480&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;description-1&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;远古时期猪文文字总个数为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;iPig 打算研究古时某个朝代的猪文文字。该朝代流传的猪文文字恰好为远古时期的 &lt;span class=&#34;math inline&#34;&gt;\(1/k\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的一个正约数（可以是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;iPig 觉得只要符合文献，每一种 &lt;span class=&#34;math inline&#34;&gt;\(k|n\)&lt;/span&gt; 都是有可能的。他打算考虑到所有可能的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。显然当 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 等于某个定值时，该朝的猪文文字个数为 &lt;span class=&#34;math inline&#34;&gt;\(n/k\)&lt;/span&gt;。然而从 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个文字中保留下 &lt;span class=&#34;math inline&#34;&gt;\(n/k\)&lt;/span&gt; 个的情况也是相当多的。iPig 预计，如果所有可能的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的所有情况数加起来为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的话，那么他研究古代文字的代价将会是 &lt;span class=&#34;math inline&#34;&gt;\(g^p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在他想知道猪王国研究古代文字的代价是多少。由于 iPig 觉得这个数字可能是天文数字，所以你只需要告诉他答案除以 &lt;span class=&#34;math inline&#34;&gt;\(999911659\)&lt;/span&gt; 的余数就可以了。&lt;/p&gt;
&lt;p&gt;数据范围 &lt;span class=&#34;math inline&#34;&gt;\(1\le n,g \le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;hint-1&#34;&gt;Hint&lt;/h4&gt;
&lt;p&gt;考虑欧拉定理，将模数拆开，计算后用 CRT 合并答案。&lt;/p&gt;
&lt;h4 id=&#34;solution-1&#34;&gt;Solution&lt;/h4&gt;
&lt;p&gt;答案实际就为 &lt;span class=&#34;math display&#34;&gt;\[
g^{\sum_{k\mid n}\binom n k}\bmod 999911659
\]&lt;/span&gt; 然后为了求这个东西，需要套一个欧拉定理： &lt;span class=&#34;math display&#34;&gt;\[
g^{\sum_{k\mid n}\binom n k\bmod 999911658}\bmod 999911659
\]&lt;/span&gt; 现在问题的关键就是求出 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k\mid n}\binom n k\bmod 999911658
\]&lt;/span&gt; &lt;del&gt;这波，这波啊直接 exLucas&lt;/del&gt;，尝试一下分解 &lt;span class=&#34;math inline&#34;&gt;\(999911658=4679\times3\times2\times35617\)&lt;/span&gt;，每一个质因子的次数都是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，所以只需要用 CRT 求解如下方程组 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}p \equiv \sum_{k\mid n}\dbinom n k\pmod{2}\\p \equiv \sum_{k\mid n}\dbinom n k\pmod{3}\\p \equiv \sum_{k\mid n}\dbinom n k\pmod{4679}\\p \equiv \sum_{k\mid n}\dbinom n k\pmod{35617}\end{cases}
\]&lt;/span&gt; 最后求一波快速幂，于是这题就做完了，注意代码细节即可。&lt;/p&gt;
&lt;p&gt;参考代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ll&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod[&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;999911659&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4679&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;35617&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxp = &lt;span class=&#34;dv&#34;&gt;40005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll fact[maxp];&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qpow(ll base, ll p, ll mod)&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init(ll p)&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fact[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fact[i] = fact[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i % p;&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll C(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, ll p)&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fact[n] * qpow(fact[m], p - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p) % p * qpow(fact[n - m], p - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p) % p;&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll Lucas(ll n, ll m, ll p)&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-36&#34;&gt;&lt;a href=&#34;#cb8-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n || !m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-37&#34;&gt;&lt;a href=&#34;#cb8-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Lucas(n / p, m / p, p) * C(n % p, m % p, p) % p;&lt;/span&gt;
&lt;span id=&#34;cb8-38&#34;&gt;&lt;a href=&#34;#cb8-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-39&#34;&gt;&lt;a href=&#34;#cb8-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-40&#34;&gt;&lt;a href=&#34;#cb8-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb8-41&#34;&gt;&lt;a href=&#34;#cb8-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-42&#34;&gt;&lt;a href=&#34;#cb8-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb8-43&#34;&gt;&lt;a href=&#34;#cb8-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-44&#34;&gt;&lt;a href=&#34;#cb8-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll n, g;&lt;/span&gt;
&lt;span id=&#34;cb8-45&#34;&gt;&lt;a href=&#34;#cb8-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;g);&lt;/span&gt;
&lt;span id=&#34;cb8-46&#34;&gt;&lt;a href=&#34;#cb8-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g % mod[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//特判&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-47&#34;&gt;&lt;a href=&#34;#cb8-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-48&#34;&gt;&lt;a href=&#34;#cb8-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;0&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-49&#34;&gt;&lt;a href=&#34;#cb8-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-50&#34;&gt;&lt;a href=&#34;#cb8-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-51&#34;&gt;&lt;a href=&#34;#cb8-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-52&#34;&gt;&lt;a href=&#34;#cb8-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-53&#34;&gt;&lt;a href=&#34;#cb8-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        init(mod[k]);&lt;/span&gt;
&lt;span id=&#34;cb8-54&#34;&gt;&lt;a href=&#34;#cb8-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb8-55&#34;&gt;&lt;a href=&#34;#cb8-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb8-56&#34;&gt;&lt;a href=&#34;#cb8-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n % i) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-57&#34;&gt;&lt;a href=&#34;#cb8-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a[k] = (a[k] + Lucas(n, i, mod[k])) % mod[k];&lt;/span&gt;
&lt;span id=&#34;cb8-58&#34;&gt;&lt;a href=&#34;#cb8-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i * i != n)&lt;/span&gt;
&lt;span id=&#34;cb8-59&#34;&gt;&lt;a href=&#34;#cb8-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[k] = (a[k] + Lucas(n, n / i, mod[k])) % mod[k];&lt;/span&gt;
&lt;span id=&#34;cb8-60&#34;&gt;&lt;a href=&#34;#cb8-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb8-61&#34;&gt;&lt;a href=&#34;#cb8-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-62&#34;&gt;&lt;a href=&#34;#cb8-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll M = mod[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-63&#34;&gt;&lt;a href=&#34;#cb8-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-64&#34;&gt;&lt;a href=&#34;#cb8-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-65&#34;&gt;&lt;a href=&#34;#cb8-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; w = M / mod[i];&lt;/span&gt;
&lt;span id=&#34;cb8-66&#34;&gt;&lt;a href=&#34;#cb8-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = (ans + a[i] * w % M * qpow(w, mod[i] - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, mod[i]) % M) % M;&lt;/span&gt;
&lt;span id=&#34;cb8-67&#34;&gt;&lt;a href=&#34;#cb8-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-68&#34;&gt;&lt;a href=&#34;#cb8-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, qpow(g, ans, mod[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]));&lt;/span&gt;
&lt;span id=&#34;cb8-69&#34;&gt;&lt;a href=&#34;#cb8-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-70&#34;&gt;&lt;a href=&#34;#cb8-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;shoi2015超能粒子炮改&#34;&gt;[SHOI2015]超能粒子炮·改&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4345&#34;&gt;洛谷 P4345&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;description-2&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 组数据（&lt;span class=&#34;math inline&#34;&gt;\(1\le t\le 10^5\)&lt;/span&gt;），给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n,k\le 10^{18}\)&lt;/span&gt;），求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 0}^k\binom n k\bmod{2333}
\]&lt;/span&gt; 的值。&lt;/p&gt;
&lt;h4 id=&#34;hint-2&#34;&gt;Hint&lt;/h4&gt;
&lt;p&gt;考虑拆开式子，然后利用类似整除分块的思想处理，递归来做。&lt;/p&gt;
&lt;h4 id=&#34;solution-2&#34;&gt;Solution&lt;/h4&gt;
&lt;p&gt;由于数据组数很大并且 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 都很大，所以不能直接卢卡斯然后简单相加，时间会爆炸。考虑令 &lt;span class=&#34;math display&#34;&gt;\[
f(n, k) = \sum_{i = 0}^k\binom n k\bmod p
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(2333\)&lt;/span&gt;。然后使用卢卡斯定理拆开 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}f(n,k) &amp;amp;\equiv \sum_{i = 0}^k\binom n k\\&amp;amp;\equiv \sum_{i = 0}^k\binom{n\bmod p}{i\bmod p}\binom{\lfloor\frac np\rfloor}{\lfloor\frac ip\rfloor}\pmod p\end{aligned}
\]&lt;/span&gt; 现在化简成了这样之后，注意到 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 其实很小，可以类似整除分块的做法，按照 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac ip\right\rfloor\)&lt;/span&gt; 的值分开来处理： &lt;span class=&#34;math display&#34;&gt;\[
f(n,k) \equiv \binom{\lfloor\frac np\rfloor}{0}\sum_{i = 0}^{p - 1}\binom{n\bmod p}{i} + \binom{\lfloor\frac np\rfloor}{1}\sum_{i = 0}^{p - 1}\binom{n\bmod p}{i} + \cdots+\binom{\lfloor\frac np\rfloor}{\lfloor\frac kp\rfloor}\sum_{i = 0}^{k\bmod p}\binom{n\bmod p}{i}\pmod p
\]&lt;/span&gt; 前面有从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac kp\right\rfloor - 1\)&lt;/span&gt; 的整块，把前面整块的部分拎出来化简：&lt;br /&gt;
&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}&amp;amp;\binom{\lfloor\frac np\rfloor}{0}\sum_{i = 0}^{p - 1}\binom{n\bmod p}{i} + \binom{\lfloor\frac np\rfloor}{1}\sum_{i = 0}^{p - 1}\binom{n\bmod p}{i} + \cdots + \binom{\lfloor\frac np\rfloor}{\left\lfloor\frac kp\right\rfloor - 1}\sum_{i = 0}^{p - 1}\binom{n\bmod p}{i}\\=&amp;amp;\left(\sum_{i = 0}^{p - 1}\binom{n\bmod p}{i}\right)\cdot\left(\sum_{i = 0}^{\left\lfloor\frac kp\right\rfloor - 1}\binom{\lfloor\frac np\rfloor}{i}\right)\\=&amp;amp;f(n\bmod p, p - 1)\times f(\lfloor n/p\rfloor, \lfloor k/p\rfloor - 1)\end{aligned}
\]&lt;/span&gt; 后面的余项即为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}&amp;amp;\binom{\lfloor\frac np\rfloor}{\lfloor\frac kp\rfloor}\sum_{i = 0}^{k\bmod p}\binom{n\bmod p}{i}\\=&amp;amp;\binom{\lfloor\frac np\rfloor}{\lfloor\frac kp\rfloor}f(n\bmod p, k\bmod p)\end{aligned}
\]&lt;/span&gt; 最后我们得到 &lt;span class=&#34;math display&#34;&gt;\[
f(n, k) =f(n\bmod p, p - 1)\times f(\lfloor n/p\rfloor, \lfloor k/p\rfloor - 1) +\binom{\lfloor\frac np\rfloor}{\lfloor\frac kp\rfloor}f(n\bmod p, k\bmod p)\bmod p
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{\lfloor\frac np\rfloor}{\lfloor\frac kp\rfloor}\)&lt;/span&gt; 可以直接 Lucas 定理，剩下的递归做就行，预处理 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 以内的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 就可以很快的做了。&lt;/p&gt;
&lt;p&gt;主要代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;p&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2333&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; C[p + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][p + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], f[p + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][p + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C[n % p][m % p] * lucas(n / p, m / p) % p;&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; F(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!k || !n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; p &amp;amp;&amp;amp; k &amp;lt; p) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[n][k];&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (lucas(n / p, k / p) * f[n % p][k % p] % p + f[n % p][p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * F(n / p, k / p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % p) % p;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t = read();&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    C[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        C[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = C[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            C[i][j] = (C[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + C[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) % p;&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-29&#34;&gt;&lt;a href=&#34;#cb9-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-30&#34;&gt;&lt;a href=&#34;#cb9-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb9-31&#34;&gt;&lt;a href=&#34;#cb9-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-32&#34;&gt;&lt;a href=&#34;#cb9-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb9-33&#34;&gt;&lt;a href=&#34;#cb9-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb9-34&#34;&gt;&lt;a href=&#34;#cb9-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i][j] = (C[i][j] + f[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) % p;&lt;/span&gt;
&lt;span id=&#34;cb9-35&#34;&gt;&lt;a href=&#34;#cb9-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t--)&lt;/span&gt;
&lt;span id=&#34;cb9-36&#34;&gt;&lt;a href=&#34;#cb9-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb9-37&#34;&gt;&lt;a href=&#34;#cb9-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), k = read();&lt;/span&gt;
&lt;span id=&#34;cb9-38&#34;&gt;&lt;a href=&#34;#cb9-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, F(n, k));&lt;/span&gt;
&lt;span id=&#34;cb9-39&#34;&gt;&lt;a href=&#34;#cb9-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-40&#34;&gt;&lt;a href=&#34;#cb9-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-41&#34;&gt;&lt;a href=&#34;#cb9-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要注意预处理 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(f(0, i) = 1\)&lt;/span&gt;，如果这里没处理的话会只有 55pts。&lt;/p&gt;
&lt;h3 id=&#34;清华集训2016-组合数问题&#34;&gt;[清华集训2016] 组合数问题&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6669&#34;&gt;洛谷 P6669&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;description-3&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;、&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，问 &lt;span class=&#34;math inline&#34;&gt;\(\forall 0\le i\le n, 0\le j\le \min(i, m)\)&lt;/span&gt; 有多少对 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(k\mid \dbinom i j\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;答案对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模，&lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 组数据，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为一个素数，&lt;span class=&#34;math inline&#34;&gt;\(1\le n,m\le 10^{18}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le t,k \le 100\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;hint-3&#34;&gt;Hint&lt;/h4&gt;
&lt;p&gt;考虑 Lucas 定理在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下的那种形式。&lt;/p&gt;
&lt;h4 id=&#34;solution-3&#34;&gt;Solution&lt;/h4&gt;
&lt;p&gt;总而言之就是 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的每一位都不能小于 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，这个东西可以数位 dp！&lt;/p&gt;
&lt;p&gt;代码很短！&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll t, k, n, m, bn[&lt;span class=&#34;dv&#34;&gt;66&lt;/span&gt;], bm[&lt;span class=&#34;dv&#34;&gt;66&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[&lt;span class=&#34;dv&#34;&gt;66&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cur, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; ok, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; dif, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; fn, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; fm) {&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!cur) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ok;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll &amp;amp;res = f[cur][ok][dif][fn][fm];&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~res) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    res = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; upn = fn ? k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : bn[cur], upm = fm ? k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : bm[cur];&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, upn)&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; (j &amp;lt;= i || dif) &amp;amp;&amp;amp; j &amp;lt;= upm; ++j)&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            res = (res + solve(cur - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ok | (i &amp;lt; j), dif | (i != j), fn | (i &amp;lt; upn), fm | (j &amp;lt; upm))) % mod;&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(t), read(k);&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t--) {&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll mx = n &amp;gt; m ? n : m, len = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(f, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (mx) mx /= k, ++len;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, len) bn[i] = n % k, n /= k;&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, len) bm[i] = m % k, m /= k;&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(solve(len, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;其他的好题&#34;&gt;其他的好题&lt;/h3&gt;
&lt;p&gt;篇幅限制，不放在这里了。下面给出题解链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1778&#34;&gt;51nod1778 小Q的集合&lt;/a&gt; &lt;a href=&#34;https://oi.imyangty.com/sol-51nod1778/&#34;&gt;推式子好题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3301&#34;&gt;洛谷&lt;strong&gt;P3301&lt;/strong&gt; [SDOI2013]方程&lt;/a&gt; &lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3301/&#34;&gt;容斥 + 扩展 Lucas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;那么对于 Lucas 定理及其扩展的学习就告一段落了，除了这些列出来的习题外，Lucas 定理还可能出现在某些毒瘤组合题要你求组合数取模的值的时候，总的来说 Lucas 定理本身还是一个比较清新优美的定理的。&lt;/p&gt;
&lt;p&gt;省选爆炸没进省队的蒟蒻祝各位 NOI 加油。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>斜率优化学习笔记</title>
        <link>https://oi.imyangty.com/note-slope-dp/</link>
        <pubDate>Thu, 22 Apr 2021 20:25:59 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-slope-dp/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg26.webp" alt="Featured image of post 斜率优化学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;有些时候，我们会碰到形如 &lt;span class=&#34;math inline&#34;&gt;\(f_i = \min/\max\{f_j + g(i)h(j)\}\)&lt;/span&gt; 的状态转移方程，此时朴素的做的时间复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 乃至 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的。而我们可以按照线性规划的思想，把其建模成 &lt;span class=&#34;math inline&#34;&gt;\(y = kx + b\)&lt;/span&gt; 的形式去截一个凸壳来使截距最大，达到 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 甚至 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 的转移从而使复杂度降低到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这个方法就叫做斜率优化。具体的实现难度取决于题目性质。&lt;/p&gt;
&lt;p&gt;一般来说，只要转移方程中出现类似一次函数的东西，都可以考虑斜率优化。&lt;/p&gt;
&lt;h2 id=&#34;例题&#34;&gt;例题&lt;/h2&gt;
&lt;p&gt;先来看一道斜率优化的模板题。&lt;/p&gt;
&lt;h3 id=&#34;题意&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3195&#34; title=&#34;P3195 [HNOI2008]玩具装箱&#34;&gt;P3195 [HNOI2008]玩具装箱&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将一段序列 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 分成若干段，每一段的代价为 &lt;span class=&#34;math inline&#34;&gt;\((j-i+\sum_{k=i}^jc_k-L)^2\)&lt;/span&gt;，求最小总代价。&lt;/p&gt;
&lt;h3 id=&#34;从状态转移方程说起&#34;&gt;从状态转移方程说起&lt;/h3&gt;
&lt;p&gt;不难发现状态转移方程为（如果有困难建议先去补 dp 的基础知识）&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_i=\min_{j&amp;lt;i}\lbrace f_j+(s_i-s_j+i-j-1-L)^2\rbrace
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(s_i=\sum_{k=1}^ic_k\)&lt;/span&gt;。时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt;，考虑进行优化。&lt;/p&gt;
&lt;p&gt;为了简化方程，不妨采用&lt;strong&gt;参变分离&lt;/strong&gt;的思想，将只与 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有关的 &lt;span class=&#34;math inline&#34;&gt;\(s_i+i\)&lt;/span&gt; 令为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，将只与 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 有关的 &lt;span class=&#34;math inline&#34;&gt;\(s_j+j+L+1\)&lt;/span&gt; 令为 &lt;span class=&#34;math inline&#34;&gt;\(b_j\)&lt;/span&gt;，现在的方程为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_i=\min_{j&amp;lt;i}\lbrace f_j+(a_i-b_j)^2\rbrace
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;理一下思路：现在我们需要找到一个最优的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 达到最优，注意到此时所有关于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的量都是确定的。&lt;/p&gt;
&lt;p&gt;去掉 min 然后化简转移方程可得：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
2a_ib_j+f_i-a_i^2=f_j+b_j^2
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;第一种理解数形结合&#34;&gt;第一种理解：数形结合&lt;/h3&gt;
&lt;p&gt;斜率优化的精髓，就是要把转移方程化为直线方程 &lt;span class=&#34;math inline&#34;&gt;\(y=kx+b\)&lt;/span&gt; 的形式然后使用数据结构维护一个凸壳。下面来实现这个过程。如果没有学过高一数学线性规划的话建议先去了解或者是直接看第二种更好理解的方式。&lt;/p&gt;
&lt;p&gt;一般地，&lt;strong&gt;我们将所有只跟 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 有关的项 &lt;span class=&#34;math inline&#34;&gt;\(f_1(j)\)&lt;/span&gt;&lt;/strong&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;strong&gt;将所有只跟 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有关的项&lt;span class=&#34;math inline&#34;&gt;\(f_2(i)\)&lt;/span&gt;&lt;/strong&gt; 看作截距 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，会剩下一项 &lt;span class=&#34;math inline&#34;&gt;\(f_3(i)f_4(j)\)&lt;/span&gt;，考虑将 &lt;span class=&#34;math inline&#34;&gt;\(f_3(i)\)&lt;/span&gt; 看作斜率 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_4(j)\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这里就是 &lt;span class=&#34;math inline&#34;&gt;\(f_j+b_j^2=y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b_j=x\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;方程化作&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
2a_ix+f_i-a_i^2=y
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意到除 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 以外的与 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有关的项都是确定的，所以现在的问题就是在坐标系中找到这个 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 使直线的截距最小（因为要最小化 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;）。用含 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的形式方便理解的话就是找到过&lt;strong&gt;确定&lt;/strong&gt;点 &lt;span class=&#34;math inline&#34;&gt;\((b_j,f_j+b_j^2)\)&lt;/span&gt; 的斜率为 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 的直线的最小截距。&lt;/p&gt;
&lt;p&gt;怎么找呢？看下面的图： &lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/斜率优化1.png&#34; title=&#34;寻找最优的截距&#34; alt=&#34;寻找最优的截距&#34; /&gt;&lt;/p&gt;
&lt;p&gt;很显然，&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 点是我们的最优选择，至于 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 点，因为我们的斜率 &lt;span class=&#34;math inline&#34;&gt;\(k=2a_i\)&lt;/span&gt; 满足&lt;strong&gt;单调递增&lt;/strong&gt;，所以可以让 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 点滚蛋了，至于 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 点，如果我们当前的斜率足够大：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/斜率优化2.png&#34; title=&#34;现在 C 点为最优决策点&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;现在 C 点为最优决策点&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;则 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 点这辈子以后也不可能用到了，可以让他拜拜了。&lt;/p&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{slope}(A,B)\)&lt;/span&gt; 为直线 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 的斜率&lt;/p&gt;
&lt;p&gt;我们不难发现这样的性质：为了让我们使用的决策点 &lt;span class=&#34;math inline&#34;&gt;\((b_j,f_j+b_j^2)\)&lt;/span&gt; 最优，我们需要让这些可供选择的决策点形成一个凸壳，即形式化地，设我们维护的这些点序列为 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace P_i\rbrace\)&lt;/span&gt;，且要求 &lt;span class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt; 为需要的决策点，则一定要有 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{slope}(P_{i-1},P_i)&amp;lt;\operatorname{slope}(P_i,P_{i+1})\)&lt;/span&gt;，即相邻两点间的斜率要单调递增。&lt;/p&gt;
&lt;p&gt;同时如果 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{slope}(P_1,P_2)&amp;lt;k\)&lt;/span&gt;，则选择 &lt;span class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt; 一定不优（在坐标系里面画图可以感受一下），需要弹掉这些点。&lt;/p&gt;
&lt;p&gt;做完决策（即求出 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 之后），我们需要将 &lt;span class=&#34;math inline&#34;&gt;\((b_i,f_i+b_i^2)\)&lt;/span&gt; 放入这个序列的末尾，但是还是要满足凸壳的性质。因此考虑用单调队列维护这些点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(q[head], q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * a[i])&lt;span class=&#34;co&#34;&gt;//这里是一开始的弹点操作&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++head;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = q[head];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[i] = f[j] + (a[i] - b[j]) * (a[i] - b[j]);&lt;span class=&#34;co&#34;&gt;//进行决策&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(i, q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; slope(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], q[tail]))&lt;span class=&#34;co&#34;&gt;//弹尾部的点维护凸性&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    q[++tail] = i;&lt;span class=&#34;co&#34;&gt;//加入凸壳&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;整道题的代码就是：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; a[maxn], b[maxn], f[maxn], sum[maxn], L;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; X(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b[x]; }&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; Y(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[x] + b[x] * b[x]; }&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; slope(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (Y(a) - Y(b)) / (X(a) - X(b)); }&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {...}&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), L = read();&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sum[i] = sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + read();&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = sum[i] + i;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        b[i] = sum[i] + i + L + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = sum[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; + L + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//注意，$b_0$ 不等于 0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head = tail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(q[head], q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * a[i])&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++head;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = q[head];&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = f[j] + (a[i] - b[j]) * (a[i] - b[j]);&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(i, q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; slope(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], q[tail]))&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --tail;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[++tail] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;)f[n]);&lt;span class=&#34;co&#34;&gt;//观察数据范围发现这东西会爆int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;第二种理解方式代数&#34;&gt;第二种理解方式：代数&lt;/h3&gt;
&lt;p&gt;现在的方程是 &lt;span class=&#34;math inline&#34;&gt;\(f_i = \min\{f_j + a_i^2 - 2a_ib_j + b_j^2\}\)&lt;/span&gt;，首先肯定是将与决策点无关的项提出来，方程化为 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \min\{f_j - 2a_ib_j + b_j^2\} + a_i^2
\]&lt;/span&gt; 现在需要最小化的，就是 &lt;span class=&#34;math inline&#34;&gt;\(f_j - 2a_ib_j + b_j^2\)&lt;/span&gt;。那么我们考虑一下决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 何时会比决策点 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 更优： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_j - 2a_ib_j + b_j^2 &amp;amp;&amp;lt; f_k - 2a_ib_k + b_k^2\\
(f_j + b_j^2) - (f_k + b_k^2) &amp;amp;&amp;lt; 2a_i(b_j - b_k)\\
\frac{(f_j + b_j^2) - (f_k + b_k^2)}{b_j - b_k} &amp;amp;&amp;lt; 2a_i
\end{aligned}
\]&lt;/span&gt; 第二行是参变分离，把带有 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的移到一边。第三行就是化为斜率的形式。&lt;/p&gt;
&lt;p&gt;不难发现这样子更加好找斜率和坐标的定义。&lt;span class=&#34;math inline&#34;&gt;\(f_i + b_i^2\)&lt;/span&gt; 就是纵坐标，&lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 就是横坐标，&lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 即为斜率。&lt;/p&gt;
&lt;p&gt;因此我们知道了，如果一个决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 优于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，那么 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 所代表的点到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 所代表的点的连线的斜率一定小于 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt;。而我们就是要在 &lt;span class=&#34;math inline&#34;&gt;\([1, i)\)&lt;/span&gt; 这些决策点里面找到一个最优的决策点，相当于斜率刚刚好好小于等于 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt;。由于横坐标 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 递增，这个过程是可以在凸包上面二分实现的。&lt;/p&gt;
&lt;p&gt;然而我们注意到每次查询的斜率 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 是单调增的，所以我们可以把那些斜率小于 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 的点先删掉，因为他们肯定不会最优。而且我们要维护一个斜率递增的决策点序列（就是一个凸包），所以算完了 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 并加点的时候要维护凸包后端的斜率单调性。这可以解释上面的一系列过程。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;对于形如 &lt;span class=&#34;math inline&#34;&gt;\(f_i=\min_{j&amp;lt;i}\lbrace f_j-a_id_j\rbrace\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(d_i\)&lt;/span&gt; 满足单调递增的状态转移方程，我们可以使用斜率优化将其从朴素的 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 优化到 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;具体地，我们将其看作一条直线方程的形式：&lt;span class=&#34;math inline&#34;&gt;\(f_j=f_i+a_id_j\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(f_j\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(d_j\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 看作斜率 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 看作截距。我们就可以利用其单调性维护一个凸壳，来起到加速转移的效果。&lt;/p&gt;
&lt;p&gt;步骤一般是如下三步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弹出队首的点，找到最优决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;根据转移方程算出 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;维护凸壳的右端&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;一些需要注意的点&#34;&gt;一些需要注意的点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;有些时候需要使用 &lt;code&gt;long double&lt;/code&gt;，一部分题卡精度卡的很凶，所以建议使用乘法来判断斜率，&lt;strong&gt;当然一定要看清楚不等号的方向（负数乘过去要变号）&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;大多数时候需要 &lt;code&gt;long long&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;大多数时候，队列中一开始需要有&lt;strong&gt;初始转移点&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;在删点的时候的判定一定是基于&lt;strong&gt;两个点&lt;/strong&gt;的斜率的，&lt;strong&gt;所以队列中必须有两个或以上的元素&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;关于要维护的东西的单调性是增还是减：一定自己推式子看清楚，不要觉得是什么就是什么。&lt;/li&gt;
&lt;li&gt;有些毒瘤题的斜率或横坐标&lt;strong&gt;没有单调性&lt;/strong&gt;，这时候需要在凸壳上二分（斜率不单调）或者&lt;strong&gt;李超树&lt;/strong&gt;（都不单调）。一般推荐使用李超树，十分好理解且代码不难写。&lt;/li&gt;
&lt;li&gt;有些复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nk)\)&lt;/span&gt; 的题（相当于做 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的 dp），一定要处理好滚动数组，要清楚调用的是哪个 dp 值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他例题&#34;&gt;其他例题&lt;/h2&gt;
&lt;p&gt;一般比较有代表性，篇幅问题，只给出详细的题解。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5785/&#34;&gt;P5785 [SDOI2012]任务安排&lt;/a&gt; 斜率不一定单调的题目，需要在凸壳上二分。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4655/&#34;&gt;P4655 [CEOI2017]Building Bridges&lt;/a&gt; 斜率和横坐标都不单调，需要 cdq 分治或者李超树。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5017/&#34;&gt;P5017 摆渡车&lt;/a&gt; 比较经典的斜优模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;习题&#34;&gt;习题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3648&#34;&gt;P3648 [APIO2014]序列分割&lt;/a&gt; 经典卡常卡精度毒瘤题。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF311B&#34;&gt;CF311B Cats Transport&lt;/a&gt; 和摆渡车类似的经典模型。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2120&#34;&gt;P2120 [ZJOI2007]仓库建设&lt;/a&gt; 经典套路模型。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4360&#34;&gt;P4360 [CEOI2004]锯木厂选址&lt;/a&gt; 经典套路模型。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3628&#34;&gt;P3628 [APIO2010]特别行动队&lt;/a&gt; 简单推推式子。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4072&#34;&gt;P4072 [SDOI2016]征途&lt;/a&gt; 要注意 dp 值的初始化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的几道题难度递增，都是比较好想的经典斜优题。敲完了这几道就上手斜优了。&lt;/p&gt;
&lt;p&gt;然后是一些较难的题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4027&#34;&gt;P4027 [NOI2007] 货币兑换&lt;/a&gt; 其实也没多难，只是不单调。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1721&#34;&gt;P1721 [NOI2016] 国王饮水记&lt;/a&gt; 神仙结论题。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2305&#34;&gt;P2305 [NOI2014] 购票&lt;/a&gt; 树上转移，需要点分治。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF932F&#34;&gt;CF932F Escape Through Leaf&lt;/a&gt; 使用李超树的线段树合并非常好写。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>后缀数组</title>
        <link>https://oi.imyangty.com/note-sa/</link>
        <pubDate>Wed, 21 Apr 2021 21:12:47 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-sa/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg24.webp" alt="Featured image of post 后缀数组" /&gt;&lt;h2 id=&#34;基础&#34;&gt;基础&lt;/h2&gt;
&lt;h3 id=&#34;定义&#34;&gt;定义&lt;/h3&gt;
&lt;p&gt;本文的字符串&lt;strong&gt;下标从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 开始&lt;/strong&gt;。“后缀 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;”指代从第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个字母开始的后缀。&lt;/p&gt;
&lt;p&gt;后缀数组由两个数组构成，一个是 &lt;code&gt;sa[]&lt;/code&gt;，一个是 &lt;code&gt;rk[]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sa[i]&lt;/code&gt; 表示的是后缀排名后第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 小的后缀的编号，&lt;code&gt;rk[i]&lt;/code&gt; 表示的是后缀 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的排名。&lt;/p&gt;
&lt;p&gt;即 &lt;code&gt;sa&lt;/code&gt; 告诉我们&lt;strong&gt;排第几的是谁&lt;/strong&gt;，&lt;code&gt;rk&lt;/code&gt; 告诉我们谁排第几。&lt;/p&gt;
&lt;p&gt;不难发现 &lt;code&gt;sa[rk[i]] = rk[sa[i]] = i&lt;/code&gt;，这是一个比较好玩的性质。&lt;/p&gt;
&lt;h3 id=&#34;求法&#34;&gt;求法&lt;/h3&gt;
&lt;p&gt;最暴力的办法就是枚举所有的后缀然后排序，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2\log n)\)&lt;/span&gt;，妥妥的炸掉。下面要讲的倍增法可以做到在 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的时间内求出一个字符串的后缀数组。&lt;/p&gt;
&lt;p&gt;首先，我们很容易求得每个长度为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的子串（每个字符）的排名。然后考虑倍增。假设已经知道了长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的子串的排名们 &lt;code&gt;rk[k][i]&lt;/code&gt;。（&lt;code&gt;rk[k][i]&lt;/code&gt; 表示从 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 开始长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;（或者已经到底了，长度不足 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;）的子串在所有这些长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的子串中的排名），那么如果我们以 &lt;code&gt;rk[k][i]&lt;/code&gt; 为第一关键字，&lt;code&gt;rk[k][i + k]&lt;/code&gt; 为第二关键字（若 &lt;span class=&#34;math inline&#34;&gt;\(i + k &amp;gt; n\)&lt;/span&gt; 则为无穷小）进行排序，就可以求得 &lt;code&gt;rk[2k][i]&lt;/code&gt; 在所有长度为 &lt;span class=&#34;math inline&#34;&gt;\(2k\)&lt;/span&gt; 的子串们的排名了。&lt;/p&gt;
&lt;p&gt;这样子一直倍增下去，当 &lt;span class=&#34;math inline&#34;&gt;\(k = n\)&lt;/span&gt; 时不难发现此时后缀数组就已经被求出来了。但是，排序的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;，按理来说总复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;，那我们有什么神奇的办法可以将其优化到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基数排序&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;双关键字排序，所以我们可以使用 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的基数排序使总复杂度降低为一个 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;但是说是这么说，真要写起来后缀数组真的短小精悍但是对于初学者来说十分难以理解。下面看看其具体实现。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;先来看看这短小的实现：（&lt;a href=&#34;https://www.luogu.com.cn/problem/P3809&#34;&gt;洛谷 P3809 【模板】后缀排序&lt;/a&gt;）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, sa[maxn], rank[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x[maxn], y[maxn], c[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; SA()&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ++c[x[i] = s[i]];&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) c[i] += c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sa[c[x[i]]--] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k &amp;lt;= n; k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, n - k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) y[++num] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (sa[i] &amp;gt; k) y[++num] = sa[i] - k;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; c);&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ++c[x[i]];&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) c[i] += c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sa[c[x[y[i]]]--] = y[i];&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(x, y);&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        num = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x[sa[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y[sa[i]] == y[sa[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]] &amp;amp;&amp;amp; y[sa[i] + k] == y[sa[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + k]) x[sa[i]] = num;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; x[sa[i]] = ++num;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (num == n) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        m = num;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = strlen(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    m = &lt;span class=&#34;dv&#34;&gt;122&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    SA();&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, sa[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;del&gt;不科学，这么这么短&lt;/del&gt;。没错，其就是这么短，但是仔细一看会一脸懵逼，发现什么都看不懂。所以还是从头来，慢慢看：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, sa[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x[maxn], y[maxn], c[maxn];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这些数组中，&lt;code&gt;n&lt;/code&gt; 和 &lt;code&gt;s[]&lt;/code&gt; 就不解释了，再强调一下 &lt;code&gt;sa[i]&lt;/code&gt; 的意义：排名为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的是谁。然后 &lt;code&gt;c[]&lt;/code&gt; 是基数排序要用到的桶，&lt;code&gt;x[]&lt;/code&gt; 是第一关键字，&lt;code&gt;y[]&lt;/code&gt; 是第二关键字，具体的意义下面会解释。&lt;/p&gt;
&lt;p&gt;首先看看 &lt;code&gt;SA()&lt;/code&gt; 函数的前三行：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ++c[x[i] = s[i]];&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, m) c[i] += c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sa[c[x[i]]--] = i;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;第一行，&lt;code&gt;x[i] = s[i]&lt;/code&gt; 表示我们把字符直接赋值到第一关键字里面，相当于获取了个相对的位置，同时加进桶里面。&lt;/li&gt;
&lt;li&gt;第二行是做前缀和，&lt;strong&gt;获取所有关键字的排名&lt;/strong&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 表示字符集的大小（因为桶的下标是字符的 ASCII 码）。&lt;/li&gt;
&lt;li&gt;第三行就是把对应的&lt;strong&gt;排名为 &lt;code&gt;c[x[i]]--&lt;/code&gt; 的是谁&lt;/strong&gt;给记录起，为什么要 &lt;code&gt;--&lt;/code&gt; 呢？因为字符可以有重复的，此时倒序循环就可以保证&lt;strong&gt;先出现的子串排在前面&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来开循环了：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; k &amp;lt;= n; k &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 表示第一/二关键字的长度，这里就开始倍增了。&lt;/p&gt;
&lt;p&gt;下面开始对第二关键字进行操作：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, n - k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) y[++num] = i;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时 &lt;code&gt;y[i]&lt;/code&gt; 的意义是&lt;strong&gt;第二关键字排名为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的数对应的第一关键字的位置&lt;/strong&gt;，注意&lt;strong&gt;排名是下标&lt;/strong&gt;。&lt;span class=&#34;math inline&#34;&gt;\([n - k + 1, n]\)&lt;/span&gt; 是没有第二关键字的，所以他们的排名在最前面。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (sa[i] &amp;gt; k) y[++num] = sa[i] - k;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时枚举的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; &lt;strong&gt;是排名&lt;/strong&gt;，如果该排名对应的下标大于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，说明它可以接在前面做第二关键字，然后把其对应的第一关键字的位置 &lt;code&gt;sa[i] - k&lt;/code&gt; 加进 &lt;code&gt;y[]&lt;/code&gt; 数组。回顾一下 &lt;code&gt;y[i]&lt;/code&gt; 的定义：&lt;strong&gt;第二关键字排名为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的数对应的第一关键字的位置&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然后就是基数排序了，这里需要着重理解：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; c);&lt;span class=&#34;co&#34;&gt;//清空桶&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ++c[x[i]];&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, m) c[i] += c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sa[c[x[y[i]]]--] = y[i];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前三行没有什么好说的，就是获取第一关键字的排名。主要是第四行的那个循环。这里是什么意思呢？注意到我们貌似只对第一关键字进行了所谓的排序，但是这样做就是对的，这是为什么呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;x[]&lt;/code&gt; 数组里面存着本次的第一关键字排序（上次的结果，即为 &lt;code&gt;rk[]&lt;/code&gt; 数组），即&lt;strong&gt;&lt;code&gt;x[i]&lt;/code&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 开头的子串的排名&lt;/strong&gt;，而我们通过 &lt;code&gt;y[]&lt;/code&gt; 先对第二关键字进行了排序，以此保证&lt;strong&gt;第一关键字相同的时候，出现在前面的第二关键字出现在前面。&lt;/strong&gt;换句话说，这个基数排序实际上就是先根据 &lt;code&gt;x[]&lt;/code&gt; 的值排序，&lt;code&gt;x[]&lt;/code&gt; 相同的时候再根据 &lt;code&gt;y[]&lt;/code&gt; 排序。&lt;/p&gt;
&lt;p&gt;建议看到这里的时候结合 &lt;code&gt;x[]&lt;/code&gt;，&lt;code&gt;y[]&lt;/code&gt; 的下标和值的意义进行多次脑补：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先我们把&lt;strong&gt;排名为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的第二关键字对应的第一关键字的起始位置&lt;/strong&gt;填到了 &lt;code&gt;y[i]&lt;/code&gt; 里面。&lt;/li&gt;
&lt;li&gt;首先我们把所有第一关键字的排名搞出来，存进了 &lt;code&gt;c[]&lt;/code&gt; 数组&lt;/li&gt;
&lt;li&gt;然后先从第二关键字排名&lt;strong&gt;低&lt;/strong&gt;（倒序循环）的开始处理，让&lt;strong&gt;第二关键字排名低的第一关键字先被处理&lt;/strong&gt;，此时整个第一、二关键字合起来形成的子串的排名就是 &lt;code&gt;c[x[y[i]]]--&lt;/code&gt;，所以存进 &lt;code&gt;sa[]&lt;/code&gt; 数组里面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理清楚这部分最难了的之后就可以继续了：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;swap(x, y);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里的交换两个数组没有什么意思，只是因为我们需要生成新一轮的名次数组（&lt;code&gt;x[]&lt;/code&gt; 数组）了，所以暂时把其交换一下下。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        num = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x[sa[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y[sa[i]] == y[sa[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]] &amp;amp;&amp;amp; y[sa[i] + k] == y[sa[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + k]) x[sa[i]] = num;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; x[sa[i]] = ++num;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时就是根据 &lt;code&gt;sa[]&lt;/code&gt; 来生成 &lt;code&gt;rk[]&lt;/code&gt;（即 &lt;code&gt;x[]&lt;/code&gt;）的过程了。注意一下这个 &lt;code&gt;y[]&lt;/code&gt; 就是&lt;strong&gt;上一轮倍增中的 &lt;code&gt;rk[]&lt;/code&gt; 数组&lt;/strong&gt;，第三行这个 &lt;code&gt;if&lt;/code&gt; 实际上就是判断第一、二关键字是不是相等，是的话排名就一样，所以 &lt;code&gt;x[sa[i]] = num&lt;/code&gt;。否则的话就说明排名要变，即 &lt;code&gt;x[sa[i]] = ++num&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;到这里，其实一个倍增的过程就已经结束了。当然不要忘记下面的小优化：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (num == n) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        m = num;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一个是既然都已经搞出来互异的排名了，就没有必要继续倍增下去了。第二个是现在桶的上界已经不是字符集大小了，而是最大的排名 &lt;code&gt;num&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;于是 SA 的代码实现就讲完了。我们回顾一下算法流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开始倍增之前，求出每个字符对应的排名，存进 &lt;code&gt;sa[]&lt;/code&gt; 数组和 &lt;code&gt;x[]&lt;/code&gt; 数组里面。&lt;/li&gt;
&lt;li&gt;开始倍增，关键字长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。
&lt;ul&gt;
&lt;li&gt;先根据上一轮求出的 &lt;code&gt;sa[]&lt;/code&gt; 数组，求出这一轮的 &lt;code&gt;y[]&lt;/code&gt; 数组：&lt;strong&gt;第二关键字排名为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 对应的第一关键字的位置&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;对于区间 &lt;span class=&#34;math inline&#34;&gt;\([n - k + 1, n]\)&lt;/span&gt; 来说，他们是不配拥有第二关键字的（即第二关键字小得离谱），只管往低了搞即可，即 &lt;code&gt;y[++num] = i&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;对于剩余的来说，从排名从小到大遍历一下上一轮求出的 &lt;code&gt;sa[]&lt;/code&gt; 数组（相当于从小到大遍历第二关键字），如果当前这个子串可以成为第二关键字（&lt;code&gt;sa[i] &amp;gt; k&lt;/code&gt;）那么就加入。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;然后根据上一轮求出的排名数组 &lt;code&gt;x[]&lt;/code&gt;，进行基数排序。注意这行：&lt;code&gt;DEC(i, n, 1) sa[c[x[y[i]]]--] = y[i];&lt;/code&gt;，其意义是从排名靠后的第二关键字开始进行操作，保证第一关键字相同的第二关键字大的排在后面（&lt;code&gt;sa[]&lt;/code&gt; 的下标大，毕竟是 &lt;code&gt;--&lt;/code&gt;）。并清空、&lt;/li&gt;
&lt;li&gt;把 &lt;code&gt;x[]&lt;/code&gt; 和 &lt;code&gt;y[]&lt;/code&gt; 进行交换，因为现在要求出新的 &lt;code&gt;x[]&lt;/code&gt; 出来了。&lt;/li&gt;
&lt;li&gt;初始化：&lt;code&gt;num = 1, x[sa[1]] = 1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;然后判断如果 &lt;code&gt;if (y[sa[i]] == y[sa[i - 1]] &amp;amp;&amp;amp; y[sa[i] + k] == y[sa[i - 1] + k])&lt;/code&gt; 成立，即两个关键字都相等的话，排名不增加，否则新增加一个排名。&lt;/li&gt;
&lt;li&gt;最后，如果所有排名已经互异，直接结束战斗。&lt;/li&gt;
&lt;li&gt;若没有结束，把桶的枚举范围缩小到排名的个数。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;height-数组&#34;&gt;Height 数组&lt;/h2&gt;
&lt;h3 id=&#34;lcp最长公共前缀&#34;&gt;LCP（最长公共前缀）&lt;/h3&gt;
&lt;p&gt;字面意思，下面定义 &lt;span class=&#34;math inline&#34;&gt;\(lcp(i, j)\)&lt;/span&gt; 表示后缀 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和后缀 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的最长公共前缀的长度。&lt;/p&gt;
&lt;h3 id=&#34;height-数组的定义&#34;&gt;Height 数组的定义&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(height[i] = lcp(sa[i], sa[i - 1])\)&lt;/span&gt;，即排名为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的后缀与他前一名的后缀的 LCP 的长度。&lt;span class=&#34;math inline&#34;&gt;\(height[1] = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;一个引理&#34;&gt;一个引理&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
height[rk[i]] \ge height[rk[i - 1]] - 1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;理解：&lt;strong&gt;后缀 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 与排名在其前一位的后缀&lt;/strong&gt;（后缀 &lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i] - 1]\)&lt;/span&gt;）的 LCP 的长度大于等于&lt;strong&gt;后缀 &lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt; 与排名在其前一位的后缀&lt;/strong&gt;（后缀 &lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i - 1] - 1]\)&lt;/span&gt;）减一。（排名为 &lt;span class=&#34;math inline&#34;&gt;\(rk[i]\)&lt;/span&gt; 的后缀就是后缀 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;证明：（参考 OI-Wiki）&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(height[rk[i - 1]]\le 1\)&lt;/span&gt; 时，显然成立，因为右边小于等于 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(height[rk[i - 1]] \gt 1\)&lt;/span&gt; 时：&lt;/p&gt;
&lt;p&gt;设后缀 &lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(aAD\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 是一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(height[rk[i - 1]] - 1\)&lt;/span&gt; 的字符串），那么后缀 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 就是 &lt;span class=&#34;math inline&#34;&gt;\(AD\)&lt;/span&gt;。设后缀 &lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i - 1] - 1]\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(aAB\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(lcp(i - 1, sa[rk[i - 1] - 1]) = aA\)&lt;/span&gt;。由于后缀 &lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i - 1] - 1] + 1\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt;，其一定排在后缀 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的前面，所以后缀 &lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i] - 1]\)&lt;/span&gt; 一定有前缀 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(lcp(i, sa[rk[i] - 1])\)&lt;/span&gt; 至少是 &lt;span class=&#34;math inline&#34;&gt;\(height[rk[i - 1]] - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们这样理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(aAD\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(AD\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i - 1] - 1]\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(aAB\)&lt;/span&gt;（也就是后缀 &lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt; 的&lt;strong&gt;前一名&lt;/strong&gt;后缀）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(lcp(i - 1, sa[rk[i - 1] - 1]) = aA\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i - 1] - 1] + 1\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt;（也就是上面那个后缀的后缀）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(sa[rk[i] - 1]\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(A[B/C]\)&lt;/span&gt;（也就是 &lt;span class=&#34;math inline&#34;&gt;\(AD\)&lt;/span&gt; 上一名的后缀）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(lcp(i, sa[rk[i] - 1])\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(AX\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 可能为空）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，&lt;span class=&#34;math inline&#34;&gt;\(lcp(i, sa[rk[i] - 1]) \ge lcp(i - 1,sa[rk[i - 1] - 1]) - 1\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(height[rk[i]] \ge height[rk[i - 1]] - 1\)&lt;/span&gt;，得证。&lt;/p&gt;
&lt;h3 id=&#34;on-求出-height-数组&#34;&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 求出 Height 数组&lt;/h3&gt;
&lt;p&gt;根据上面的引理，直接暴力：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k) --k;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (s[i + k] == s[sa[rk[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + k]) ++k;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ht[rk[i]] = k;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;复杂度？&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 最大到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，最多减 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次，最多加 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 次，总的复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;lcp-与-rmq&#34;&gt;LCP 与 RMQ&lt;/h3&gt;
&lt;p&gt;注意下面的两条性质：&lt;/p&gt;
&lt;p&gt;性质一（LCP Lemma） &lt;span class=&#34;math display&#34;&gt;\[
\forall i\le k\le j, lcp(sa[i], sa[j]) = \min\{lcp(sa[i], sa[k]), lcp(sa[k], sa[j])\}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;画出图来之后应该很容易理解这个性质，非常的显然，因为都是已经排好序了的后缀。它的重要之处在于可以推导下面的这个性质：&lt;/p&gt;
&lt;p&gt;性质二（LCP Theorem） &lt;span class=&#34;math display&#34;&gt;\[
lcp(sa[i], sa[j]) = \min_{i &amp;lt; k\le j}\{height[k]\}
\]&lt;/span&gt; 为什么呢，我们展开一下下： &lt;span class=&#34;math display&#34;&gt;\[
lcp(sa[i], sa[j]) = \min_{i \lt k\le j}\{lcp(sa[k], sa[k - 1])\}
\]&lt;/span&gt; 发现有了第一个性质之后这个性质就是显然的了。&lt;/p&gt;
&lt;p&gt;这意味着我们如果需要查找两个后缀的 LCP，就只需要在 &lt;span class=&#34;math inline&#34;&gt;\(height\)&lt;/span&gt; 数组上做 RMQ 就可以了，使用 ST 表可以做到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 预处理 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 查询。&lt;/p&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;h3 id=&#34;寻找最小循环移动位置&#34;&gt;寻找最小循环移动位置&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4051&#34;&gt;洛谷 P4051 [JSOI2007]字符加密&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;把字符串复制一遍之后直接跑后缀排序就可以了。&lt;/p&gt;
&lt;h3 id=&#34;在字符串中寻找模式串&#34;&gt;在字符串中寻找模式串&lt;/h3&gt;
&lt;p&gt;给定字符串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，多次在线查找模式串 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;。构造 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的后缀数组。考虑 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 出现的情况：其必然是 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的某个后缀的前缀。由于我们已经将所有的后缀排过序了，所以可以在 &lt;code&gt;sa[]&lt;/code&gt; 数组中二分来查找 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;。复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(|T|\log |S|)\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;最小化从字符串首尾取字符构成新串的字典序&#34;&gt;最小化从字符串首尾取字符构成新串的字典序&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2870&#34;&gt;洛谷 P2870 [USACO07DEC]Best Cow Line G&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题意：每次从首尾取一个字符，拼接成一个新字符串，最小化其字典序。&lt;/p&gt;
&lt;p&gt;很贪心的想就是每次取字典序最小的一端的字符，现在的问题主要就是如果两端的字符相等了话怎么办。不难发现我们实际上就是在比较原串的后缀和反串的后缀的大小，所以把原串的反串接在原串背后跑后缀排序即可。&lt;/p&gt;
&lt;h3 id=&#34;两个子串的最长公共前缀&#34;&gt;两个子串的最长公共前缀&lt;/h3&gt;
&lt;p&gt;正如上文所说，对 &lt;span class=&#34;math inline&#34;&gt;\(height\)&lt;/span&gt; 做 RMQ 即可。&lt;/p&gt;
&lt;h3 id=&#34;结合单调栈&#34;&gt;结合单调栈&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4248&#34;&gt;P4248 [AHOI2013]差异&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Link-Cut Tree 学习笔记</title>
        <link>https://oi.imyangty.com/note-lct/</link>
        <pubDate>Fri, 16 Apr 2021 19:57:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-lct/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg17.webp" alt="Featured image of post Link-Cut Tree 学习笔记" /&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;https://www.zybuluo.com/xzyxzy/note/1027479&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/candy99/p/6271344.html&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/flashhu/p/8324551.html&lt;/p&gt;
&lt;p&gt;https://oi-wiki.org/ds/lct/&lt;/p&gt;
&lt;p&gt;鸣谢以上博客的作者们。&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;Link/Cut Tree（简称 LCT），是一种可以解决动态树问题的数据结构。具体地，它可以维护一个动态的森林，实现如下操作（洛谷模板题）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;询问 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 上路径的异或和&lt;/li&gt;
&lt;li&gt;连接 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;删除边 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;更改 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的权值为 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学习 LCT 之前，首先需要对树链剖分有一定的认识，然后需要熟练掌握 Splay。因为 LCT 是一种十分精巧的数据结构，生来就是需要和 Splay 配合（如果使用别的平衡树时间复杂度会多一个 log，使用 Splay 的话均摊下来还是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的）。&lt;/p&gt;
&lt;h2 id=&#34;实链剖分&#34;&gt;实链剖分&lt;/h2&gt;
&lt;p&gt;上述操作如果没有连接和删除操作的话，就是一个裸的树剖题。我们回想一下树剖是怎么做的：把整棵树按照子树大小剖分成若干条链，并重新标号使得这些链上面的标号连续，然后使用数据结构（线段树等）在这些链上搞事情。&lt;/p&gt;
&lt;p&gt;至于现在的动态树问题，假设我们能把需要的路径抽出来，然后直接进行序列操作，岂不美哉。所以我们考虑&lt;strong&gt;动态地进行剖分&lt;/strong&gt;，即&lt;strong&gt;实链剖分&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个点有若干连向儿子的边，&lt;strong&gt;我们自己选择一条边进行剖分&lt;/strong&gt;（即自己选定“重儿子”），这条被选择的边就称为&lt;strong&gt;实边&lt;/strong&gt;，其他边称为&lt;strong&gt;虚边&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;实边连接的儿子称为&lt;strong&gt;实儿子&lt;/strong&gt;（类似于重链剖分中的重儿子）&lt;/li&gt;
&lt;li&gt;实边组合成的链称为&lt;strong&gt;实链&lt;/strong&gt;（类似于重链和长链）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择实链剖分的好处就是&lt;strong&gt;实和虚可以互相进行转化&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;虚者实之，实者虚之。——《东周列国志》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;针对这样灵活多变的实链，我们使用 &lt;strong&gt;Splay&lt;/strong&gt; 进行维护。&lt;/p&gt;
&lt;h2 id=&#34;主要性质&#34;&gt;主要性质&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;每一棵 Splay 维护的是一条实链&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每棵 Splay 中序遍历得到的点在原树中深度单调递增&lt;/strong&gt;（即对应这条实链从上往下走）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虚边由一棵 Splay 指向另外一棵 Splay&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的性质告诉我们，LCT 其实本质上是一个森林，我们可以把组成这个森林的树称为&lt;strong&gt;辅助树&lt;/strong&gt;，一定要搞清楚辅助树和原树的关系，否则极其容易想错问题。&lt;/p&gt;
&lt;p&gt;我们可以知道&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原树与辅助树中的节点一一对应&lt;/li&gt;
&lt;li&gt;若干棵 Splay 组成了一棵辅助树&lt;/li&gt;
&lt;li&gt;辅助树中的 Splay 不是互相独立的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常来说，一棵 Splay 的根的父亲节点应该为空，但是在 LCT 中一棵 Splay 的根的父亲节点指向原树中&lt;strong&gt;这棵 Splay 维护的实链的父亲节点&lt;/strong&gt;（即链顶的父节点），对应了原树中的一条&lt;strong&gt;虚边&lt;/strong&gt;。其具有&lt;strong&gt;认父不认子&lt;/strong&gt;的特点，即儿子存储了父亲，但是父亲不存储儿子。&lt;/p&gt;
&lt;p&gt;所以所有的操作都可以在辅助树上进行而不需要动原树。&lt;/p&gt;
&lt;p&gt;上面这样说可能有些抽象，我们看看图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/LCT1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上图是一棵剖好了的原树，虚线代表虚边，实线代表实边，可见图中有两条实链：&lt;span class=&#34;math inline&#34;&gt;\(\{1,2,4\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{5,6\}\)&lt;/span&gt;。现在我们按照这样子建出来的 LCT 应该是如下的样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/LCT2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;每个绿色圈内是一棵 Splay，每棵 Splay 内的红边对应了原图的实边。黑色的单向边对应了原图的虚边，在 Splay 中的体现就是 &lt;code&gt;fa[5] = 1&lt;/code&gt;，而 &lt;code&gt;ch[1][0]&lt;/code&gt; 和 &lt;code&gt;ch[1][1]&lt;/code&gt; 都不等于 &lt;code&gt;5&lt;/code&gt;，在 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 号点上也有体现：其左/右儿子都储存有值，但是 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 的父亲指向了 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。而且我们发现每棵 Splay 的中序遍历在原图中都是深度单调递增的。&lt;/p&gt;
&lt;p&gt;了解了上述性质之后，就可以开始学习如何写出一棵 LCT 了。&lt;/p&gt;
&lt;h2 id=&#34;代码基础定义&#34;&gt;代码基础定义&lt;/h2&gt;
&lt;p&gt;以下代码均以&lt;a href=&#34;https://www.luogu.com.cn/problem/P3690&#34;&gt;洛谷模板题&lt;/a&gt;（维护路径异或和）为例进行讲解。&lt;/p&gt;
&lt;h3 id=&#34;变量宏声明&#34;&gt;变量/宏声明&lt;/h3&gt;
&lt;p&gt;首先是 Splay 的结构体：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa, size, tag, val, res;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分别维护左/右儿子，父亲，子树大小，&lt;strong&gt;翻转标记&lt;/strong&gt;，节点的值，路径权值和。&lt;/p&gt;
&lt;p&gt;然后是一些宏定义：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来需要用到的函数如下：&lt;/p&gt;
&lt;h3 id=&#34;基础函数字面意思&#34;&gt;基础函数（字面意思）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;void pushUp(int u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void pushDown(int u)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不解释，分别是合并信息和懒标记下传。&lt;/p&gt;
&lt;h3 id=&#34;splay-的基础函数&#34;&gt;Splay 的基础函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;void rotate(int u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void splay(int u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int get(int u)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rotate()&lt;/code&gt; 和 &lt;code&gt;splay()&lt;/code&gt; 是&lt;strong&gt;经过魔改&lt;/strong&gt;了的版本，下面会进行说明。&lt;/p&gt;
&lt;h3 id=&#34;lct-的特有函数&#34;&gt;LCT 的特有函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int isRoot(int u)&lt;/code&gt; 判断 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 是否为根&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void pushAll(int u)&lt;/code&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 一直到根的路径上的点的标记全部下传&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void access(int u)&lt;/code&gt; 打通根到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的一条实链&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void makeRoot(int u)&lt;/code&gt; 将原树换根为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int findRoot(int u)&lt;/code&gt; 找到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 所在的树的根节点的编号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void link(int u, int v)&lt;/code&gt; 连边 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void cut(int u, int v)&lt;/code&gt; 删边 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void split(int u, int v)&lt;/code&gt; 提取出 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的路径以方便进行区间操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;函数讲解&#34;&gt;函数讲解&lt;/h2&gt;
&lt;p&gt;从简单的开始：&lt;/p&gt;
&lt;h3 id=&#34;pushup-和-pushdown-和-pushall&#34;&gt;&lt;code&gt;pushUp()&lt;/code&gt; 和 &lt;code&gt;pushDown()&lt;/code&gt; 和 &lt;code&gt;pushAll()&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushUp(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[ls(u)].size + t[rs(u)].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].res = t[ls(u)].res ^ t[rs(u)].res ^ t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushDown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].tag)&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ls(u)) t[ls(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(ls(u)), rs(ls(u)));&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (rs(u)) t[rs(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(rs(u)), rs(rs(u)));&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushAll(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(u)) pushAll(t[u].fa);&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushDown(u);&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时 &lt;code&gt;pushup()&lt;/code&gt; 维护异或和，&lt;code&gt;pushdown()&lt;/code&gt; 维护翻转标记。&lt;/p&gt;
&lt;h3 id=&#34;splay-和-rotate&#34;&gt;&lt;code&gt;splay()&lt;/code&gt; 和 &lt;code&gt;rotate()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;和普通 Splay 的有些不一样：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define get&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;==&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define isRoot&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ls(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushAll(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(u)) pushAll(t[u].fa);&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushDown(u);&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa, k1 = get(u), k2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa)) t[gfa].ch[k2] = u;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[k1] = t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa, t[fa].fa = u, t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(fa), pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushAll(u);&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa; fa = t[u].fa, !isRoot(u); rotate(u))&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa))&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rotate(get(fa) == get(u) ? fa : u);&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要注意的就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rotate&lt;/code&gt; 的时候一定要先判断 &lt;code&gt;fa&lt;/code&gt; 是不是根在进行下一步操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splay&lt;/code&gt; 只需要传入一个参数，因为不存在要把某个点旋转到另一个点下面这种操作了。而且进行之前要把其到根上的懒标记先全部下传。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;access&#34;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这个操作的目的是打通从原树的树根到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点的一条实链，代码很短但是不太好理解：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; access(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; u; p = u, u = t[u].fa)&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(u), rs(u) = p, pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总的来说，操作分为下面几个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把当前的节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 旋转到当前 Splay 的根（&lt;code&gt;splay(u)&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的右儿子替换成之前的节点 &lt;code&gt;rs(u) = p&lt;/code&gt;（对应了”化实为虚“的过程）&lt;/li&gt;
&lt;li&gt;更新当前点的信息 &lt;code&gt;pushup(u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重复以上步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解释一下：我们要拉通这条实链的话，是自底而上逐步更新 Splay 来进行操作的。首先肯定是把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 旋转到 Splay 的根，然后注意到这个 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; （可能）有两个实儿子，以及一个父亲（一条虚边），现在我们既然要打通实链，那么肯定有虚实的转化，注意到&lt;strong&gt;认父不认子&lt;/strong&gt;的特点，我们可以直接把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的右儿子更新为之前更新过的点 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，然后 &lt;code&gt;pushup&lt;/code&gt;，再更新 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 更新为其父亲，继续进行操作。&lt;/p&gt;
&lt;h3 id=&#34;makeroot&#34;&gt;&lt;code&gt;makeRoot()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;makeRoot(int u)&lt;/code&gt; 是把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点设为该连通块的根节点。&lt;/p&gt;
&lt;p&gt;步骤&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;access(u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splay(u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;反转整棵 Splay&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一步之后，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点会在当前连通块根节点所在 Splay 的最右下角（因为深度最大），第二步我们把它提到根节点之后就可以注意到其右儿子为空（仍是由于深度最大），第三步把 Splay 反转之后 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点变到了最左端，这样子整棵树的深度就完全倒过来了，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点变为了深度最浅的点。这样就达到了我们把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 变成根的目的。&lt;/p&gt;
&lt;p&gt;至于下面的这种实现，结合上面的代码可以发现 &lt;code&gt;access()&lt;/code&gt; 的返回值就是这棵 Splay 的根，所以我们直接对其进行操作即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; makeRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = access(u);&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(ls(u), rs(u));&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;finroot&#34;&gt;&lt;code&gt;finRoot()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;findRoot(int u)&lt;/code&gt; 是寻找 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点所在的连通块的根节点。可以判断两个点的连通性，&lt;code&gt;findRoot(x) == findRoot(y)&lt;/code&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 联通。具体来说，我们需要把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的实链打通，然后将其搞到 Splay 的根，再一路向左下不停走，就能找到我们可爱的根节点了。&lt;strong&gt;找到之后一定要 Splay 一下以保证复杂度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;走的时候一定要一路 &lt;code&gt;pushDown&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; findRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(u), splay(u);&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (ls(u)) pushDown(u), u = ls(u);&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;link&#34;&gt;&lt;code&gt;link()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;link(int u, int v)&lt;/code&gt; 的作用是连接一条边 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt;，当然前提是 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 不联通。&lt;/p&gt;
&lt;p&gt;首先需要让 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 成为该连通块的根并 Splay 到辅助树的根（不难发现其肯定没有向上的虚边），然后暴力把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的父亲设成 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 即可（连一条虚边）。&lt;/p&gt;
&lt;p&gt;至于判断，只需在 &lt;code&gt;makeRoot()&lt;/code&gt; 之后 &lt;code&gt;findRoot(v) == u&lt;/code&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; link(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) == u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = v;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;cut&#34;&gt;&lt;code&gt;cut()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cut(int u, int v)&lt;/code&gt; 的作用是切断原有的边 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt;。当然数据有可能不合法， 当数据不合法的时候我们就需要进行判断。&lt;/p&gt;
&lt;p&gt;如果数据保证合法，就先把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 设为连通块的根，然后 &lt;code&gt;access(v)&lt;/code&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 拉通一条实链，再 &lt;code&gt;splay(u)&lt;/code&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 拉到根处。不难发现如果 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 有连边而且&lt;strong&gt;相邻&lt;/strong&gt;的话 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 一定是 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的右儿子，所以双向断开 &lt;code&gt;t[v].fa = rs(u) = 0&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;但是如果数据不合法，我们就需要思考一下数据怎么样能合法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 在同一连通块内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;makeRoot(u)&lt;/code&gt; 之后，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的&lt;strong&gt;直接&lt;/strong&gt;父亲&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 没有左儿子（想一下为什么不可以）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; cut(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) != u || t[v].fa != u || ls(v)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[v].fa = rs(u) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 有左儿子，那么按照中序遍历的原则，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的深度差就不是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;p&gt;最后更不更新信息都无所谓其实。但是既然右边的儿子都没了，还是上传一下标记比较好。&lt;/p&gt;
&lt;h3 id=&#34;split&#34;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;split(int u, int v)&lt;/code&gt; 可以把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的路径抽出来变成一条实链（即放进一棵 Splay 里面）方便我们进行处理。代码很简单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 成为根&lt;/li&gt;
&lt;li&gt;打通 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;（此时的根）到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的实链&lt;/li&gt;
&lt;li&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 变成 Splay 的树根方便进行处理&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(v);&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(v);&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;总的实现&#34;&gt;总的实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; swap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b, b = t;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa, size, tag, val, res;&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-37&#34;&gt;&lt;a href=&#34;#cb11-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushUp(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-38&#34;&gt;&lt;a href=&#34;#cb11-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-39&#34;&gt;&lt;a href=&#34;#cb11-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[ls(u)].size + t[rs(u)].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-40&#34;&gt;&lt;a href=&#34;#cb11-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].res = t[ls(u)].res ^ t[rs(u)].res ^ t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb11-41&#34;&gt;&lt;a href=&#34;#cb11-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-42&#34;&gt;&lt;a href=&#34;#cb11-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-43&#34;&gt;&lt;a href=&#34;#cb11-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-44&#34;&gt;&lt;a href=&#34;#cb11-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushDown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-45&#34;&gt;&lt;a href=&#34;#cb11-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-46&#34;&gt;&lt;a href=&#34;#cb11-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].tag)&lt;/span&gt;
&lt;span id=&#34;cb11-47&#34;&gt;&lt;a href=&#34;#cb11-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-48&#34;&gt;&lt;a href=&#34;#cb11-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ls(u)) t[ls(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(ls(u)), rs(ls(u)));&lt;/span&gt;
&lt;span id=&#34;cb11-49&#34;&gt;&lt;a href=&#34;#cb11-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (rs(u)) t[rs(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(rs(u)), rs(rs(u)));&lt;/span&gt;
&lt;span id=&#34;cb11-50&#34;&gt;&lt;a href=&#34;#cb11-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-51&#34;&gt;&lt;a href=&#34;#cb11-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-52&#34;&gt;&lt;a href=&#34;#cb11-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-53&#34;&gt;&lt;a href=&#34;#cb11-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-54&#34;&gt;&lt;a href=&#34;#cb11-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-55&#34;&gt;&lt;a href=&#34;#cb11-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define get&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;==&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb11-56&#34;&gt;&lt;a href=&#34;#cb11-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define isRoot&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ls(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb11-57&#34;&gt;&lt;a href=&#34;#cb11-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-58&#34;&gt;&lt;a href=&#34;#cb11-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushAll(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-59&#34;&gt;&lt;a href=&#34;#cb11-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-60&#34;&gt;&lt;a href=&#34;#cb11-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(u)) pushAll(t[u].fa);&lt;/span&gt;
&lt;span id=&#34;cb11-61&#34;&gt;&lt;a href=&#34;#cb11-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushDown(u);&lt;/span&gt;
&lt;span id=&#34;cb11-62&#34;&gt;&lt;a href=&#34;#cb11-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-63&#34;&gt;&lt;a href=&#34;#cb11-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-64&#34;&gt;&lt;a href=&#34;#cb11-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-65&#34;&gt;&lt;a href=&#34;#cb11-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-66&#34;&gt;&lt;a href=&#34;#cb11-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-67&#34;&gt;&lt;a href=&#34;#cb11-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa, k1 = get(u), k2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb11-68&#34;&gt;&lt;a href=&#34;#cb11-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa)) t[gfa].ch[k2] = u;&lt;/span&gt;
&lt;span id=&#34;cb11-69&#34;&gt;&lt;a href=&#34;#cb11-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[k1] = t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb11-70&#34;&gt;&lt;a href=&#34;#cb11-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa, t[fa].fa = u, t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb11-71&#34;&gt;&lt;a href=&#34;#cb11-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(fa), pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb11-72&#34;&gt;&lt;a href=&#34;#cb11-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-73&#34;&gt;&lt;a href=&#34;#cb11-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-74&#34;&gt;&lt;a href=&#34;#cb11-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-75&#34;&gt;&lt;a href=&#34;#cb11-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-76&#34;&gt;&lt;a href=&#34;#cb11-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-77&#34;&gt;&lt;a href=&#34;#cb11-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushAll(u);&lt;/span&gt;
&lt;span id=&#34;cb11-78&#34;&gt;&lt;a href=&#34;#cb11-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa; fa = t[u].fa, !isRoot(u); rotate(u))&lt;/span&gt;
&lt;span id=&#34;cb11-79&#34;&gt;&lt;a href=&#34;#cb11-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-80&#34;&gt;&lt;a href=&#34;#cb11-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa))&lt;/span&gt;
&lt;span id=&#34;cb11-81&#34;&gt;&lt;a href=&#34;#cb11-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rotate(get(fa) == get(u) ? fa : u);&lt;/span&gt;
&lt;span id=&#34;cb11-82&#34;&gt;&lt;a href=&#34;#cb11-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-83&#34;&gt;&lt;a href=&#34;#cb11-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-84&#34;&gt;&lt;a href=&#34;#cb11-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-85&#34;&gt;&lt;a href=&#34;#cb11-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-86&#34;&gt;&lt;a href=&#34;#cb11-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; access(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-87&#34;&gt;&lt;a href=&#34;#cb11-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-88&#34;&gt;&lt;a href=&#34;#cb11-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb11-89&#34;&gt;&lt;a href=&#34;#cb11-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; u; p = u, u = t[u].fa)&lt;/span&gt;
&lt;span id=&#34;cb11-90&#34;&gt;&lt;a href=&#34;#cb11-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(u), rs(u) = p, pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb11-91&#34;&gt;&lt;a href=&#34;#cb11-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb11-92&#34;&gt;&lt;a href=&#34;#cb11-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-93&#34;&gt;&lt;a href=&#34;#cb11-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-94&#34;&gt;&lt;a href=&#34;#cb11-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; makeRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-95&#34;&gt;&lt;a href=&#34;#cb11-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-96&#34;&gt;&lt;a href=&#34;#cb11-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = access(u);&lt;/span&gt;
&lt;span id=&#34;cb11-97&#34;&gt;&lt;a href=&#34;#cb11-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(ls(u), rs(u));&lt;/span&gt;
&lt;span id=&#34;cb11-98&#34;&gt;&lt;a href=&#34;#cb11-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-99&#34;&gt;&lt;a href=&#34;#cb11-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-100&#34;&gt;&lt;a href=&#34;#cb11-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-101&#34;&gt;&lt;a href=&#34;#cb11-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-102&#34;&gt;&lt;a href=&#34;#cb11-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; findRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-103&#34;&gt;&lt;a href=&#34;#cb11-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-104&#34;&gt;&lt;a href=&#34;#cb11-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(u), splay(u);&lt;/span&gt;
&lt;span id=&#34;cb11-105&#34;&gt;&lt;a href=&#34;#cb11-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (ls(u)) pushDown(u), u = ls(u);&lt;/span&gt;
&lt;span id=&#34;cb11-106&#34;&gt;&lt;a href=&#34;#cb11-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb11-107&#34;&gt;&lt;a href=&#34;#cb11-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb11-108&#34;&gt;&lt;a href=&#34;#cb11-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-109&#34;&gt;&lt;a href=&#34;#cb11-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-110&#34;&gt;&lt;a href=&#34;#cb11-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; link(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb11-111&#34;&gt;&lt;a href=&#34;#cb11-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-112&#34;&gt;&lt;a href=&#34;#cb11-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb11-113&#34;&gt;&lt;a href=&#34;#cb11-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) == u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-114&#34;&gt;&lt;a href=&#34;#cb11-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb11-115&#34;&gt;&lt;a href=&#34;#cb11-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = v;&lt;/span&gt;
&lt;span id=&#34;cb11-116&#34;&gt;&lt;a href=&#34;#cb11-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-117&#34;&gt;&lt;a href=&#34;#cb11-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-118&#34;&gt;&lt;a href=&#34;#cb11-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-119&#34;&gt;&lt;a href=&#34;#cb11-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; cut(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb11-120&#34;&gt;&lt;a href=&#34;#cb11-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-121&#34;&gt;&lt;a href=&#34;#cb11-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb11-122&#34;&gt;&lt;a href=&#34;#cb11-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) != u || t[v].fa != u || ls(v)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-123&#34;&gt;&lt;a href=&#34;#cb11-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[v].fa = rs(u) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-124&#34;&gt;&lt;a href=&#34;#cb11-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb11-125&#34;&gt;&lt;a href=&#34;#cb11-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-126&#34;&gt;&lt;a href=&#34;#cb11-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-127&#34;&gt;&lt;a href=&#34;#cb11-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-128&#34;&gt;&lt;a href=&#34;#cb11-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb11-129&#34;&gt;&lt;a href=&#34;#cb11-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-130&#34;&gt;&lt;a href=&#34;#cb11-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb11-131&#34;&gt;&lt;a href=&#34;#cb11-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(v);&lt;/span&gt;
&lt;span id=&#34;cb11-132&#34;&gt;&lt;a href=&#34;#cb11-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(v);&lt;/span&gt;
&lt;span id=&#34;cb11-133&#34;&gt;&lt;a href=&#34;#cb11-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-134&#34;&gt;&lt;a href=&#34;#cb11-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-135&#34;&gt;&lt;a href=&#34;#cb11-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-136&#34;&gt;&lt;a href=&#34;#cb11-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb11-137&#34;&gt;&lt;a href=&#34;#cb11-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-138&#34;&gt;&lt;a href=&#34;#cb11-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb11-139&#34;&gt;&lt;a href=&#34;#cb11-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb11-140&#34;&gt;&lt;a href=&#34;#cb11-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[i].val = read();&lt;/span&gt;
&lt;span id=&#34;cb11-141&#34;&gt;&lt;a href=&#34;#cb11-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--)&lt;/span&gt;
&lt;span id=&#34;cb11-142&#34;&gt;&lt;a href=&#34;#cb11-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-143&#34;&gt;&lt;a href=&#34;#cb11-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb11-144&#34;&gt;&lt;a href=&#34;#cb11-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-145&#34;&gt;&lt;a href=&#34;#cb11-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            split(x, y), printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t[y].res);&lt;/span&gt;
&lt;span id=&#34;cb11-146&#34;&gt;&lt;a href=&#34;#cb11-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-147&#34;&gt;&lt;a href=&#34;#cb11-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            link(x, y);&lt;/span&gt;
&lt;span id=&#34;cb11-148&#34;&gt;&lt;a href=&#34;#cb11-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-149&#34;&gt;&lt;a href=&#34;#cb11-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cut(x, y);&lt;/span&gt;
&lt;span id=&#34;cb11-150&#34;&gt;&lt;a href=&#34;#cb11-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-151&#34;&gt;&lt;a href=&#34;#cb11-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            splay(x), t[x].val = y, pushUp(x);&lt;/span&gt;
&lt;span id=&#34;cb11-152&#34;&gt;&lt;a href=&#34;#cb11-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-153&#34;&gt;&lt;a href=&#34;#cb11-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-154&#34;&gt;&lt;a href=&#34;#cb11-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;p&gt;https://www.cnblogs.com/flashhu/p/9498517.html&lt;/p&gt;
&lt;p&gt;https://www.zybuluo.com/xzyxzy/note/1027479&lt;/p&gt;
&lt;p&gt;https://www.luogu.com.cn/blog/command-block/lct-xiao-ji&lt;/p&gt;
&lt;h3 id=&#34;维护&#34;&gt;维护&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>树上问题笔记（点分治，dsu，长链剖分）</title>
        <link>https://oi.imyangty.com/note-treeproblem/</link>
        <pubDate>Thu, 08 Apr 2021 19:19:32 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-treeproblem/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg27.webp" alt="Featured image of post 树上问题笔记（点分治，dsu，长链剖分）" /&gt;&lt;h2 id=&#34;点分治&#34;&gt;点分治&lt;/h2&gt;
&lt;h3 id=&#34;概述&#34;&gt;概述&lt;/h3&gt;
&lt;p&gt;用来处理树上路径问题，对于一棵树，指定一个根 &lt;span class=&#34;math inline&#34;&gt;\(rt\)&lt;/span&gt; 之后，所有的路径无非分为两类：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;经过根的路径&lt;/li&gt;
&lt;li&gt;不经过根的路径&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当我们处理完所有经过根的路径之后，删除根，不难发现可以这样子对于每棵子树继续分治下去，所有的路径都能划归到第一种情况。&lt;/p&gt;
&lt;p&gt;算法的流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;找到当前树的重心，设为根节点&lt;/li&gt;
&lt;li&gt;处理所有经过根的路径&lt;/li&gt;
&lt;li&gt;删除根节点&lt;/li&gt;
&lt;li&gt;对于所有的子树，重复上述步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每次处理路径的复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的，而每次选根在重心保证递归的层数为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 级别，故总复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;具体写法&#34;&gt;具体写法&lt;/h3&gt;
&lt;p&gt;首先不论如何，树的重心是一定要找到的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getrt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maxp[u] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa || vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getrt(v, u);&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxp[u] = max(maxp[u], size[v]);&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maxp[u] = max(maxp[u], tot - size[u]);&lt;span class=&#34;co&#34;&gt;//***注意 tot 是当前处理到的子树大小&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (maxp[u] &amp;lt; maxp[root]) root = u;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一次树形 dp 即可，唯一需要注意的一点是需要维护一个 &lt;code&gt;tot&lt;/code&gt; 变量来存储当前子树的大小，不然如果用 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 来减的话会导致错误。&lt;/p&gt;
&lt;p&gt;然后是分治的部分：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;span class=&#34;co&#34;&gt;//传入的 u 要为根节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = judge[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//暂时不需要管 judge 是什么&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    calc(u);&lt;span class=&#34;co&#34;&gt;//先统计经过 u 的答案&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = n, tot = size[v], root = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//注意这里 dp 数组的初值以及维护新子树的大小&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getrt(v, u);&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        solve(root);&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至于 &lt;code&gt;calc()&lt;/code&gt; 函数，每道题都是不一样的，下面看这道例题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P3806&#34;&gt;洛谷 P3806&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;题意：&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(m\le 100\)&lt;/span&gt;）次查询 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，问树上是否存在长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的路径。&lt;/p&gt;
&lt;p&gt;可以考虑每次把到达的根节点当作 LCA，然后处理不经过其的路径即可。具体来说，当 &lt;code&gt;solve()&lt;/code&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为根的子树时，先依次遍历 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的一棵子树 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的所有节点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，每次把 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的距离记录到桶 &lt;code&gt;rem&lt;/code&gt; 里面，然后对于每个询问 &lt;code&gt;query[k]&lt;/code&gt;，在桶（&lt;code&gt;judge&lt;/code&gt; 数组）中查询在遍历到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 之前的节点中有没有距离为 &lt;code&gt;query[k] - rem[j]&lt;/code&gt; 的点，之后再把 &lt;code&gt;rem&lt;/code&gt; 中的贡献与前面的合并（即加入 &lt;code&gt;judge&lt;/code&gt; 数组）。&lt;/p&gt;
&lt;p&gt;但是，每次 &lt;code&gt;calc(u)&lt;/code&gt; 结束之后，如果不清空 &lt;code&gt;judge&lt;/code&gt; 数组就会出大问题——影响到以后的状态。但是 &lt;code&gt;memset&lt;/code&gt; 来清空太慢了，很容易直接 TLE，所以把每次遍历到的距离加进一个队列 &lt;code&gt;q&lt;/code&gt; 里面，&lt;code&gt;calc()&lt;/code&gt; 结束的时候按照 &lt;code&gt;q&lt;/code&gt; 里面清就行了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getdis(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa)&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rem[++rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]] = dis[u];&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa || vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = dis[u] + e[i].w;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getdis(v, u);&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//表示桶里元素个数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = e[i].w;&lt;span class=&#34;co&#34;&gt;//一定要初始化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getdis(v, u);&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(j, rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (query[k] &amp;gt;= rem[j])&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    ans[k] |= judge[query[k] - rem[j]];&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(j, rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++p] = rem[j], judge[rem[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        judge[q[i]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;完整代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxm = &lt;span class=&#34;dv&#34;&gt;105&lt;/span&gt;, maxk = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, query[maxm], ans[maxk];&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to, nxt, w;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; w)&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[++cnte].to = v;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnte].nxt = head[u];&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    e[cnte].w = w;&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxp[maxn], vis[maxn], root, tot, rem[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp[maxk], judge[maxk], q[maxn], dis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getrt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa)&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maxp[u] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa || vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getrt(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-51&#34;&gt;&lt;a href=&#34;#cb4-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb4-52&#34;&gt;&lt;a href=&#34;#cb4-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxp[u] = max(maxp[u], size[v]);&lt;/span&gt;
&lt;span id=&#34;cb4-53&#34;&gt;&lt;a href=&#34;#cb4-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-54&#34;&gt;&lt;a href=&#34;#cb4-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maxp[u] = max(maxp[u], tot - size[u]);&lt;/span&gt;
&lt;span id=&#34;cb4-55&#34;&gt;&lt;a href=&#34;#cb4-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (maxp[u] &amp;lt; maxp[root]) root = u;&lt;/span&gt;
&lt;span id=&#34;cb4-56&#34;&gt;&lt;a href=&#34;#cb4-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-57&#34;&gt;&lt;a href=&#34;#cb4-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-58&#34;&gt;&lt;a href=&#34;#cb4-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-59&#34;&gt;&lt;a href=&#34;#cb4-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getdis(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa)&lt;/span&gt;
&lt;span id=&#34;cb4-60&#34;&gt;&lt;a href=&#34;#cb4-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-61&#34;&gt;&lt;a href=&#34;#cb4-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rem[++rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]] = dis[u];&lt;/span&gt;
&lt;span id=&#34;cb4-62&#34;&gt;&lt;a href=&#34;#cb4-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb4-63&#34;&gt;&lt;a href=&#34;#cb4-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-64&#34;&gt;&lt;a href=&#34;#cb4-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb4-65&#34;&gt;&lt;a href=&#34;#cb4-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa || vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-66&#34;&gt;&lt;a href=&#34;#cb4-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = dis[u] + e[i].w;&lt;/span&gt;
&lt;span id=&#34;cb4-67&#34;&gt;&lt;a href=&#34;#cb4-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getdis(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-68&#34;&gt;&lt;a href=&#34;#cb4-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-69&#34;&gt;&lt;a href=&#34;#cb4-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-70&#34;&gt;&lt;a href=&#34;#cb4-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-71&#34;&gt;&lt;a href=&#34;#cb4-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-72&#34;&gt;&lt;a href=&#34;#cb4-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-73&#34;&gt;&lt;a href=&#34;#cb4-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-74&#34;&gt;&lt;a href=&#34;#cb4-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-75&#34;&gt;&lt;a href=&#34;#cb4-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb4-76&#34;&gt;&lt;a href=&#34;#cb4-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-77&#34;&gt;&lt;a href=&#34;#cb4-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb4-78&#34;&gt;&lt;a href=&#34;#cb4-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-79&#34;&gt;&lt;a href=&#34;#cb4-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-80&#34;&gt;&lt;a href=&#34;#cb4-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = e[i].w;&lt;/span&gt;
&lt;span id=&#34;cb4-81&#34;&gt;&lt;a href=&#34;#cb4-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getdis(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-82&#34;&gt;&lt;a href=&#34;#cb4-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(j, rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-83&#34;&gt;&lt;a href=&#34;#cb4-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb4-84&#34;&gt;&lt;a href=&#34;#cb4-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (query[k] &amp;gt;= rem[j])&lt;/span&gt;
&lt;span id=&#34;cb4-85&#34;&gt;&lt;a href=&#34;#cb4-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    ans[k] |= judge[query[k] - rem[j]];&lt;/span&gt;
&lt;span id=&#34;cb4-86&#34;&gt;&lt;a href=&#34;#cb4-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(j, rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-87&#34;&gt;&lt;a href=&#34;#cb4-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++p] = rem[j], judge[rem[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-88&#34;&gt;&lt;a href=&#34;#cb4-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-89&#34;&gt;&lt;a href=&#34;#cb4-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb4-90&#34;&gt;&lt;a href=&#34;#cb4-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        judge[q[i]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-91&#34;&gt;&lt;a href=&#34;#cb4-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-92&#34;&gt;&lt;a href=&#34;#cb4-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-93&#34;&gt;&lt;a href=&#34;#cb4-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-94&#34;&gt;&lt;a href=&#34;#cb4-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-95&#34;&gt;&lt;a href=&#34;#cb4-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-96&#34;&gt;&lt;a href=&#34;#cb4-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = judge[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-97&#34;&gt;&lt;a href=&#34;#cb4-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    calc(u);&lt;/span&gt;
&lt;span id=&#34;cb4-98&#34;&gt;&lt;a href=&#34;#cb4-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = e[i].nxt)&lt;/span&gt;
&lt;span id=&#34;cb4-99&#34;&gt;&lt;a href=&#34;#cb4-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-100&#34;&gt;&lt;a href=&#34;#cb4-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = e[i].to;&lt;/span&gt;
&lt;span id=&#34;cb4-101&#34;&gt;&lt;a href=&#34;#cb4-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-102&#34;&gt;&lt;a href=&#34;#cb4-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = n, tot = size[v], root = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-103&#34;&gt;&lt;a href=&#34;#cb4-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getrt(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-104&#34;&gt;&lt;a href=&#34;#cb4-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        solve(root);&lt;/span&gt;
&lt;span id=&#34;cb4-105&#34;&gt;&lt;a href=&#34;#cb4-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-106&#34;&gt;&lt;a href=&#34;#cb4-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-107&#34;&gt;&lt;a href=&#34;#cb4-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-108&#34;&gt;&lt;a href=&#34;#cb4-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-109&#34;&gt;&lt;a href=&#34;#cb4-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb4-110&#34;&gt;&lt;a href=&#34;#cb4-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-111&#34;&gt;&lt;a href=&#34;#cb4-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb4-112&#34;&gt;&lt;a href=&#34;#cb4-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-113&#34;&gt;&lt;a href=&#34;#cb4-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-114&#34;&gt;&lt;a href=&#34;#cb4-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = read(), v = read(), w = read();&lt;/span&gt;
&lt;span id=&#34;cb4-115&#34;&gt;&lt;a href=&#34;#cb4-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v, w), add(v, u, w);&lt;/span&gt;
&lt;span id=&#34;cb4-116&#34;&gt;&lt;a href=&#34;#cb4-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-117&#34;&gt;&lt;a href=&#34;#cb4-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) query[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb4-118&#34;&gt;&lt;a href=&#34;#cb4-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maxp[root = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = tot = n;&lt;/span&gt;
&lt;span id=&#34;cb4-119&#34;&gt;&lt;a href=&#34;#cb4-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getrt(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-120&#34;&gt;&lt;a href=&#34;#cb4-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(root);&lt;/span&gt;
&lt;span id=&#34;cb4-121&#34;&gt;&lt;a href=&#34;#cb4-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb4-122&#34;&gt;&lt;a href=&#34;#cb4-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        puts(ans[i] ? &lt;span class=&#34;st&#34;&gt;&amp;quot;AYE&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;NAY&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-123&#34;&gt;&lt;a href=&#34;#cb4-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-124&#34;&gt;&lt;a href=&#34;#cb4-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;例题-2&#34;&gt;例题 2&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4178&#34;&gt;洛谷 P4178&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，问树上距离小于等于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的点对数量。&lt;/p&gt;
&lt;p&gt;对于这道题，我们也可以使用类似于上题的方法。首先很明显需要点分治，每次分治的时候考虑统计经过根的路径的贡献。在处理 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树的时候，假设我们正在处理 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的儿子 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;，先把所有距离求出来记录进一个桶 &lt;code&gt;rem[j]&lt;/code&gt; 里面，然后我们对于每一个 &lt;code&gt;rem[j]&lt;/code&gt; 需要查询别的子树里面距离小于等于 &lt;code&gt;k - rem[j]&lt;/code&gt; 的点有几个，所以考虑实现一个树状数组（因为这里值域只有 &lt;span class=&#34;math inline&#34;&gt;\(4\times 10^7\)&lt;/span&gt;，否则就需要实现一个平衡树了）来进行查询。查询完之后把所有 &lt;code&gt;rem[j]&lt;/code&gt; 加入树状数组。当然不要忘记处理完之后清空树状数组（不能用 &lt;code&gt;memset&lt;/code&gt;，需要记录下插入的点然后一个个对应删除）&lt;/p&gt;
&lt;p&gt;总复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxdis = &lt;span class=&#34;fl&#34;&gt;4e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; bit[maxdis], ans;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dis[maxn], rem[maxdis], q[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; ins(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x &amp;lt; maxdis; x += lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        bit[x] += v;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x; x -= lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += bit[x];&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;//上面是树状数组&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getdis(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa)&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rem[++rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]] = dis[u];&lt;span class=&#34;co&#34;&gt;//把距离加入桶里面&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa || vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = dis[u] + e[i].w;&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getdis(v, u);&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] = e[i].w;&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getdis(v, u);&lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(j, rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += query(k - rem[j]);&lt;span class=&#34;co&#34;&gt;//树状数组查询&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt;= rem[j]) ++ans;&lt;span class=&#34;co&#34;&gt;//这里需要格外注意点对中其中一个点为根的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(j, rem[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++p] = rem[j], ins(rem[j], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//记录下插入树状数组的点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-52&#34;&gt;&lt;a href=&#34;#cb5-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb5-53&#34;&gt;&lt;a href=&#34;#cb5-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ins(q[i], -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//清空树状数组&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-54&#34;&gt;&lt;a href=&#34;#cb5-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-55&#34;&gt;&lt;a href=&#34;#cb5-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-56&#34;&gt;&lt;a href=&#34;#cb5-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-57&#34;&gt;&lt;a href=&#34;#cb5-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; divide(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb5-58&#34;&gt;&lt;a href=&#34;#cb5-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-59&#34;&gt;&lt;a href=&#34;#cb5-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-60&#34;&gt;&lt;a href=&#34;#cb5-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    calc(u);&lt;/span&gt;
&lt;span id=&#34;cb5-61&#34;&gt;&lt;a href=&#34;#cb5-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb5-62&#34;&gt;&lt;a href=&#34;#cb5-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-63&#34;&gt;&lt;a href=&#34;#cb5-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-64&#34;&gt;&lt;a href=&#34;#cb5-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = n, tot = size[v], root = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-65&#34;&gt;&lt;a href=&#34;#cb5-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getrt(v, u);&lt;/span&gt;
&lt;span id=&#34;cb5-66&#34;&gt;&lt;a href=&#34;#cb5-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        divide(root);&lt;/span&gt;
&lt;span id=&#34;cb5-67&#34;&gt;&lt;a href=&#34;#cb5-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-68&#34;&gt;&lt;a href=&#34;#cb5-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-69&#34;&gt;&lt;a href=&#34;#cb5-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;其他习题&#34;&gt;其他习题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6626&#34;&gt;P6626 [省选联考 2020 B 卷] 消息传递&lt;/a&gt; 比较板，问的是到一个点距离为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的点的个数&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4149&#34;&gt;P4149 [IOI2011]Race&lt;/a&gt; 问距离为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的点对间最少的边数，需要同时维护两个信息&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;树上启发式合并静态链分治&#34;&gt;树上启发式合并/静态链分治&lt;/h2&gt;
&lt;h3 id=&#34;概述-1&#34;&gt;概述&lt;/h3&gt;
&lt;p&gt;lxl 管这个东西叫“静态链分治”，而网上又广为流传一个名字叫做 dsu on tree。这里保留如上所有说法。&lt;/p&gt;
&lt;p&gt;这个算法可以以 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的优秀复杂度处理树上&lt;strong&gt;不带修&lt;/strong&gt;的&lt;strong&gt;离线&lt;/strong&gt;子树问题，其核心思想在于&lt;strong&gt;把小的往大的上合并&lt;/strong&gt;。例如，对于一个节点，把它所有小儿子上面的信息往大儿子上面合并。这个大儿子就是&lt;strong&gt;轻重链剖分&lt;/strong&gt;中的&lt;strong&gt;重儿子&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;算法的流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;剖一下这棵树，但只需要知道重儿子是谁就可以了（对应 &lt;code&gt;dfs1()&lt;/code&gt; 函数）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于递归到的每个节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理好所有轻儿子及他们的答案并&lt;strong&gt;删除他们对 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的贡献&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;处理好重儿子及答案并&lt;strong&gt;保留贡献&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;暴力合并所有轻儿子和 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点的贡献累加到上一步算出重儿子的贡献上，得到答案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其伪代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; keep)&lt;span class=&#34;co&#34;&gt;//keep = 1/0 表示是否保留贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (v : u 的轻儿子)&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;      dfs2(v, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u 有重儿子)&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(son[u], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;      calc(u);&lt;span class=&#34;co&#34;&gt;//合并贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!keep)&lt;span class=&#34;co&#34;&gt;//如果贡献不用保留&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        del(u);&lt;span class=&#34;co&#34;&gt;//删除贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;例题-1&#34;&gt;例题 1&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/U41492&#34;&gt;洛谷 U41492 树上数颜色&lt;/a&gt;（作者来自&lt;a href=&#34;https://www.luogu.com.cn/blog/codesonic/dsu-on-tree&#34;&gt;这篇洛谷日报&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;题意：给定每个节点的颜色 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;，对于每个询问，求出对应子树的颜色数。&lt;/p&gt;
&lt;p&gt;很明显可以先求出所有节点的答案然后离线来做。&lt;/p&gt;
&lt;p&gt;如果记录了所有节点的桶，空间复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，很明显过不去。那么考虑 dsu on tree。&lt;/p&gt;
&lt;p&gt;具体的，动态记录桶数组 &lt;code&gt;cnt[i]&lt;/code&gt; 和当前颜色种数 &lt;code&gt;tmp&lt;/code&gt;。按照上面的流程跑 dsu on tree 即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//加上贡献的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[c[u]])&lt;span class=&#34;co&#34;&gt;//如果有了新颜色的点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++tmp;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++vis[c[u]];&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[c[u]] &amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//如果这个颜色要被删干净了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --tmp;&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --vis[c[u]];&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != fa[u] &amp;amp;&amp;amp; to[i] != flag)&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            calc(to[i], val);&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; keep)&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != fa[u] &amp;amp;&amp;amp; to[i] != son[u])&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dfs2(to[i], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//处理轻儿子&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (son[u]) dfs2(son[u], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), flag = son[u];&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    calc(u, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//合并一下贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans[u] = tmp;&lt;/span&gt;
&lt;span id=&#34;cb7-30&#34;&gt;&lt;a href=&#34;#cb7-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!keep) calc(u, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-31&#34;&gt;&lt;a href=&#34;#cb7-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-32&#34;&gt;&lt;a href=&#34;#cb7-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意 &lt;code&gt;flag&lt;/code&gt; 变量：这里是因为执行 &lt;code&gt;calc&lt;/code&gt; 函数的时候我们不能遍历 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的重儿子，但是其儿子的重儿子是可以访问的，所以记录 &lt;code&gt;flag&lt;/code&gt; 标记一下不能走的点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, c[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnt;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; son[maxn], size[maxn], fa[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnt] = v;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnt] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnt;&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; father)&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fa[u] = father;&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxson = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-36&#34;&gt;&lt;a href=&#34;#cb8-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb8-37&#34;&gt;&lt;a href=&#34;#cb8-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-38&#34;&gt;&lt;a href=&#34;#cb8-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = to[i];&lt;/span&gt;
&lt;span id=&#34;cb8-39&#34;&gt;&lt;a href=&#34;#cb8-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == father) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-40&#34;&gt;&lt;a href=&#34;#cb8-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb8-41&#34;&gt;&lt;a href=&#34;#cb8-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb8-42&#34;&gt;&lt;a href=&#34;#cb8-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (size[v] &amp;gt; maxson)&lt;/span&gt;
&lt;span id=&#34;cb8-43&#34;&gt;&lt;a href=&#34;#cb8-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            maxson = size[v], son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb8-44&#34;&gt;&lt;a href=&#34;#cb8-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-45&#34;&gt;&lt;a href=&#34;#cb8-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-46&#34;&gt;&lt;a href=&#34;#cb8-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-47&#34;&gt;&lt;a href=&#34;#cb8-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-48&#34;&gt;&lt;a href=&#34;#cb8-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], ans[maxn], flag, tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-49&#34;&gt;&lt;a href=&#34;#cb8-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-50&#34;&gt;&lt;a href=&#34;#cb8-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb8-51&#34;&gt;&lt;a href=&#34;#cb8-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-52&#34;&gt;&lt;a href=&#34;#cb8-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-53&#34;&gt;&lt;a href=&#34;#cb8-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-54&#34;&gt;&lt;a href=&#34;#cb8-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[c[u]])&lt;/span&gt;
&lt;span id=&#34;cb8-55&#34;&gt;&lt;a href=&#34;#cb8-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-56&#34;&gt;&lt;a href=&#34;#cb8-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++vis[c[u]];&lt;/span&gt;
&lt;span id=&#34;cb8-57&#34;&gt;&lt;a href=&#34;#cb8-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-58&#34;&gt;&lt;a href=&#34;#cb8-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-59&#34;&gt;&lt;a href=&#34;#cb8-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-60&#34;&gt;&lt;a href=&#34;#cb8-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[c[u]] &amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-61&#34;&gt;&lt;a href=&#34;#cb8-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-62&#34;&gt;&lt;a href=&#34;#cb8-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --vis[c[u]];&lt;/span&gt;
&lt;span id=&#34;cb8-63&#34;&gt;&lt;a href=&#34;#cb8-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-64&#34;&gt;&lt;a href=&#34;#cb8-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb8-65&#34;&gt;&lt;a href=&#34;#cb8-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != fa[u] &amp;amp;&amp;amp; to[i] != flag)&lt;/span&gt;
&lt;span id=&#34;cb8-66&#34;&gt;&lt;a href=&#34;#cb8-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            calc(to[i], val);&lt;/span&gt;
&lt;span id=&#34;cb8-67&#34;&gt;&lt;a href=&#34;#cb8-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-68&#34;&gt;&lt;a href=&#34;#cb8-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-69&#34;&gt;&lt;a href=&#34;#cb8-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-70&#34;&gt;&lt;a href=&#34;#cb8-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; keep)&lt;/span&gt;
&lt;span id=&#34;cb8-71&#34;&gt;&lt;a href=&#34;#cb8-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-72&#34;&gt;&lt;a href=&#34;#cb8-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb8-73&#34;&gt;&lt;a href=&#34;#cb8-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != fa[u] &amp;amp;&amp;amp; to[i] != son[u])&lt;/span&gt;
&lt;span id=&#34;cb8-74&#34;&gt;&lt;a href=&#34;#cb8-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dfs2(to[i], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-75&#34;&gt;&lt;a href=&#34;#cb8-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (son[u]) dfs2(son[u], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), flag = son[u];&lt;/span&gt;
&lt;span id=&#34;cb8-76&#34;&gt;&lt;a href=&#34;#cb8-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    calc(u, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-77&#34;&gt;&lt;a href=&#34;#cb8-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-78&#34;&gt;&lt;a href=&#34;#cb8-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans[u] = tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-79&#34;&gt;&lt;a href=&#34;#cb8-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!keep) calc(u, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-80&#34;&gt;&lt;a href=&#34;#cb8-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-81&#34;&gt;&lt;a href=&#34;#cb8-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-82&#34;&gt;&lt;a href=&#34;#cb8-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-83&#34;&gt;&lt;a href=&#34;#cb8-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb8-84&#34;&gt;&lt;a href=&#34;#cb8-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-85&#34;&gt;&lt;a href=&#34;#cb8-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read();&lt;/span&gt;
&lt;span id=&#34;cb8-86&#34;&gt;&lt;a href=&#34;#cb8-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-87&#34;&gt;&lt;a href=&#34;#cb8-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-88&#34;&gt;&lt;a href=&#34;#cb8-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = read(), v = read();&lt;/span&gt;
&lt;span id=&#34;cb8-89&#34;&gt;&lt;a href=&#34;#cb8-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v);&lt;/span&gt;
&lt;span id=&#34;cb8-90&#34;&gt;&lt;a href=&#34;#cb8-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb8-91&#34;&gt;&lt;a href=&#34;#cb8-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-92&#34;&gt;&lt;a href=&#34;#cb8-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) c[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb8-93&#34;&gt;&lt;a href=&#34;#cb8-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-94&#34;&gt;&lt;a href=&#34;#cb8-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-95&#34;&gt;&lt;a href=&#34;#cb8-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = read();&lt;/span&gt;
&lt;span id=&#34;cb8-96&#34;&gt;&lt;a href=&#34;#cb8-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--)&lt;/span&gt;
&lt;span id=&#34;cb8-97&#34;&gt;&lt;a href=&#34;#cb8-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans[read()]);&lt;/span&gt;
&lt;span id=&#34;cb8-98&#34;&gt;&lt;a href=&#34;#cb8-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-99&#34;&gt;&lt;a href=&#34;#cb8-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;例题-2-1&#34;&gt;例题 2&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF600E&#34;&gt;CF600E Lomsat gelral&lt;/a&gt; dsu on tree 的模板。&lt;/p&gt;
&lt;p&gt;题意：求出子树中众数颜色的编号之和。&lt;/p&gt;
&lt;p&gt;和上道题基本没有改变，只是需要记录一下众数的出现次数，同时要判断众数出现了多次的情况。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; flag, maxc, cnt[maxn];&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll sum, ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cnt[c[u]] += val;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; cnt[c[u]] &amp;gt; maxc)&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxc = cnt[c[u]], sum = c[u];&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; cnt[c[u]] == maxc)&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sum += c[u];&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != fa[u] &amp;amp;&amp;amp; to[i] != flag)&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            calc(to[i], val);&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; keep)&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != fa[u] &amp;amp;&amp;amp; to[i] != son[u])&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dfs2(to[i], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (son[u]) dfs2(son[u], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), flag = son[u];&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    calc(u, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans[u] = sum;&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!keep) calc(u, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), sum = maxc = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;例题-3&#34;&gt;例题 3&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF570D&#34;&gt;CF570D Tree Requests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题意：每个节点上有一字符（小写英文字母），每次查询 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的子树内深度为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的节点上的字母重排列之后能否排成回文串。&lt;/p&gt;
&lt;p&gt;不难发现出现次数为奇数的字符只能有一种，定义一个桶 &lt;code&gt;cnt[dep][ch]&lt;/code&gt; 来存储出现次数即可。&lt;/p&gt;
&lt;p&gt;而我们可以把所有的询问先读进来然后按照 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 分类，遍历每个询问然后 check 一下对应的深度能否完成即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; flag, cnt[maxn][&lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cnt[dep[u]][s[u] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;] += val;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != flag)&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            calc(to[i], val);&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dep)&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += (cnt[dep][i] &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ret &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; keep)&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to[i] != son[u])&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dfs2(to[i], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (son[u]) dfs2(son[u], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), flag = son[u];&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    calc(u, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; query[u].size(); ++i)&lt;span class=&#34;co&#34;&gt;//处理所有 u 的询问&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[query[u][i].i] = check(query[u][i].dep);&lt;span class=&#34;co&#34;&gt;//依次check&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!keep) calc(u, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;长链剖分&#34;&gt;长链剖分&lt;/h2&gt;
&lt;p&gt;暂时烂尾了&lt;/p&gt;
</description>
        </item>
        <item>
        <title>多项式全家桶笔记</title>
        <link>https://oi.imyangty.com/note-poly/</link>
        <pubDate>Sat, 13 Mar 2021 12:41:09 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-poly/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg23.webp" alt="Featured image of post 多项式全家桶笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;upd：笔者写这篇文章的时候水平不足，在省选后可能会考虑重构，并将生成函数计数和形式幂级数科技分开。&lt;/p&gt;
&lt;p&gt;多项式全家桶的总结笔记。篇幅极长，善用 TOC 进行跳转。&lt;/p&gt;
&lt;p&gt;如有错漏之处烦请指出。&lt;/p&gt;
&lt;h2 id=&#34;开始全家桶之前&#34;&gt;开始全家桶之前&lt;/h2&gt;
&lt;h3 id=&#34;形式化定义&#34;&gt;形式化定义&lt;/h3&gt;
&lt;p&gt;约定：&lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;（或者 &lt;span class=&#34;math inline&#34;&gt;\([x^i]f(x)\)&lt;/span&gt;）表示 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x^i\)&lt;/span&gt; 处的系数，即一个多项式可以表示为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 0} f_ix^i\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;两个多项式的加减法定义为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) \pm g(x) = \sum_{i = 0}(f_i \pm g_i)x^i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;两个多项式的乘法（加法卷积）定义为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x)*g(x) = \sum_{i = 0}x^i\sum_{j = 0}f_jg_{i - j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不难发现其正确性。可以手动模拟一下多项式的乘法看看是不是这样子的。其本质也就是卷完之后合并同类项。朴素的做的话复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，下面要讲的 FFT/NTT 可以加速到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;界&#34;&gt;界&lt;/h3&gt;
&lt;p&gt;有些时候，题目只对多项式的前若干项感兴趣，所以我们给运算设定一个上界，即 &lt;span class=&#34;math inline&#34;&gt;\(\pmod{x^n}\)&lt;/span&gt;。意思就是&lt;strong&gt;只考虑这个多项式的前 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 项&lt;/strong&gt;，从 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 开始以后的全部舍掉。&lt;/p&gt;
&lt;p&gt;不难发现由加法和乘法是从低位到高位贡献的，所以&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(f(x) \bmod{x^n} \pm g(x)\bmod{x^n})\bmod{x^n} &amp;amp;= (f(x) \pm g(x))\bmod{x^n}\\
(f(x) \bmod{x^n}) * (g(x)\bmod{x^n})\bmod{x^n} &amp;amp;= (f(x) * g(x))\bmod{x^n}\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下面我们就开始学习多项式的各种操作吧&lt;/p&gt;
&lt;h2 id=&#34;快速傅里叶变换fft&#34;&gt;快速傅里叶变换（FFT)&lt;/h2&gt;
&lt;p&gt;FFT 可以加速卷积，让时间复杂度从 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 降到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;，学习 FFT 的基础操作前，需要先了解复数，因为 FFT 就是基于单位复数根的良好性质实现的。&lt;/p&gt;
&lt;h3 id=&#34;复数基础&#34;&gt;复数基础&lt;/h3&gt;
&lt;p&gt;（数学旧人教选修 2-2 内容）&lt;/p&gt;
&lt;p&gt;定义虚数单位 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm i = \sqrt{-1}\)&lt;/span&gt;，把形如 &lt;span class=&#34;math inline&#34;&gt;\(a + b\mathrm i\:(a,b\in\mathbb R)\)&lt;/span&gt; 的数称为复数，所有复数的集合称为复数集 &lt;span class=&#34;math inline&#34;&gt;\(\mathbb C\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;复数一般使用 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 表示，表示为 &lt;span class=&#34;math inline&#34;&gt;\(z = a + b\mathrm i\)&lt;/span&gt;，这种形式称为复数的代数形式。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 被称为复数的实部，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 称为复数的虚部，未加说明的情况下一般认为 &lt;span class=&#34;math inline&#34;&gt;\(a,b\in\mathbb R\)&lt;/span&gt;。很明显地，当 &lt;span class=&#34;math inline&#34;&gt;\(a = 0\land b\not=0\)&lt;/span&gt; 时，这个复数为纯虚数，当 &lt;span class=&#34;math inline&#34;&gt;\(b=0\)&lt;/span&gt; 时，这个复数为实数。&lt;/p&gt;
&lt;p&gt;每个复数 &lt;span class=&#34;math inline&#34;&gt;\(a + b\mathrm i\)&lt;/span&gt; 都能对应平面直角坐标系里面的一个点 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\)&lt;/span&gt;，同样的也可以对应一个向量 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\)&lt;/span&gt;。故定义复数的模为 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{a^2 + b^2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;定义复数的加法与乘法： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;(a + b\mathrm i) + (c + d\mathrm i)\\
=&amp;amp;(a + c) + (b + d)\mathrm i
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;(a+b\mathrm i)(c + d\mathrm i)\\
=&amp;amp;ac + ad\mathrm i + cb\mathrm i + bd\mathrm i^2\\
=&amp;amp;(ac - bd) + (ad + bc)\mathrm i
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这都是比较显然的。&lt;/p&gt;
&lt;p&gt;容易看出复数满足很多实数的运算律。&lt;/p&gt;
&lt;p&gt;定义复数 &lt;span class=&#34;math inline&#34;&gt;\(z=a+b\mathrm i\)&lt;/span&gt; 的共轭复数为 &lt;span class=&#34;math inline&#34;&gt;\(\overline{z} = a - b\mathrm i\)&lt;/span&gt;，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(\overline{z}\)&lt;/span&gt; 关于实轴对称。 &lt;span class=&#34;math display&#34;&gt;\[
z\overline z=(a+b\mathrm i)(a-b\mathrm i) = a^2 + b^2=|z|^2
\]&lt;/span&gt; 复数既然可以对应平面直角坐标系中的向量，不难发现其可以使用其模长与辐角来表示： &lt;span class=&#34;math display&#34;&gt;\[
z=a+b\mathrm i\iff z = r(\cos\theta+\mathrm i\sin\theta)
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 的模长，&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; 为其辐角。即我们可以把一个复数表示成二元组 &lt;span class=&#34;math inline&#34;&gt;\((r,\theta)\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;现在考虑两个复数 &lt;span class=&#34;math inline&#34;&gt;\((r_1,\theta_1)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\((r_2,\theta_2)\)&lt;/span&gt; 相乘得到的结果： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(r_1,\theta_1)\times(r_2,\theta_2) &amp;amp;= r_1(\cos\theta_1 + \mathrm i\sin\theta_1)r_2(\cos\theta_2 + \mathrm i\sin\theta_2)\\
&amp;amp;=r_1r_2(\cos\theta_1\cos\theta_2 - \sin\theta_1\sin\theta_2 + \mathrm i\sin\theta_1\cos\theta_2 + \mathrm i\sin\theta_2\cos\theta_1)\\
&amp;amp;=r_1r_2\left(\cos(\theta_1 + \theta_2) + \mathrm i\sin(\theta_1 + \theta_2)\right)\\
&amp;amp;=(r_1r_2,\theta_1 + \theta_2)
\end{aligned}
\]&lt;/span&gt; 于是我们可以概括复数乘法的法则：模长相乘，辐角相加。（上述推导需要掌握基本的三角恒等变换）&lt;/p&gt;
&lt;h3 id=&#34;从欧拉公式到单位圆&#34;&gt;从欧拉公式到单位圆&lt;/h3&gt;
&lt;p&gt;给出复数指数幂的定义： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm e^{x +y\mathrm i} = e^x(\cos y + \mathrm i\sin y)
\]&lt;/span&gt; 这个公式是基于如下事实（可以理解为这几个函数在 &lt;span class=&#34;math inline&#34;&gt;\(x = 0\)&lt;/span&gt; 处的泰勒展开）： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sin(x) &amp;amp;= x - \frac{x^3}{3!}+\frac{x^5}{5!} - \frac{x^7}{7!} + \frac{x^9}{9!} + \cdots = \sum_{k = 1}^\infty\frac{(-1)^{k - 1}x^{2k - 1}}{(2k-1)!}\\
\cos(x) &amp;amp;= 1 - \frac{x^2}{2!} + \frac{x^4}{4!} - \frac{x^6}{6!} + \frac{x^8}{8!} + \cdots = \sum_{k = 0}^\infty\frac{(-1)^{k} x^{2k}}{(2k)!}\\
\mathrm e^x &amp;amp;= 1 + x + \frac{x^2}{2!} + \frac{x^3}{3!} + \frac{x^4}{4!} + \cdots = \sum_{k = 0}^\infty\frac{x^k}{k!}
\end{aligned}
\]&lt;/span&gt; 将 &lt;span class=&#34;math inline&#34;&gt;\(x + y\mathrm i\)&lt;/span&gt; 代入进去即可推导。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(x = 0\)&lt;/span&gt;，我们就得到大名鼎鼎的欧拉公式： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm e^{x\mathrm i} = \cos x + \mathrm i\sin x
\]&lt;/span&gt; 更特殊地，如果 &lt;span class=&#34;math inline&#34;&gt;\(x = \pi\)&lt;/span&gt;，得到的就是下面这个神奇的式子： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm e^{\pi\mathrm i} = -1
\]&lt;/span&gt; 复平面上我们可以定义类似于平面直角坐标系上的单位圆，单位圆上的所有复数构成集合 &lt;span class=&#34;math inline&#34;&gt;\(\{z: |z| = 1\}\)&lt;/span&gt;。这些复数都可以表示为 &lt;span class=&#34;math inline&#34;&gt;\(\cos\theta + \mathrm i\sin\theta\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(e^{\theta \mathrm i}\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;h3 id=&#34;多项式的表示法&#34;&gt;多项式的表示法&lt;/h3&gt;
&lt;p&gt;系数表示法：顾名思义 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = a_0 + a_1x + a_2x^2 + \cdots + a_nx^n\iff f(x) = \{a_0,a_1,a_2,\cdots,a_n\} = 
\begin{bmatrix}
x^0 &amp;amp; x^1 &amp;amp; x^2 &amp;amp;\cdots &amp;amp; x^n
\end{bmatrix}
\begin{bmatrix}
a_0\\a_1\\a_2\\\vdots\\a_n
\end{bmatrix}
\]&lt;/span&gt; 点值表示法：&lt;/p&gt;
&lt;p&gt;我们知道由一个多项式在 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 个点上的取值是可以唯一确定一个多项式的，其本质也就是线性方程组的解。所以一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次多项式可以用 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 个点表示：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) = \{(x_0,y_0),(x_1,y_1),\cdots,(x_n,y_n)\}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;或者：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
x_0^0 &amp;amp; x_0^1 &amp;amp; x_0^2 &amp;amp;\cdots &amp;amp;x_0^n\\
x_1^0 &amp;amp; x_1^1 &amp;amp; x_1^2 &amp;amp;\cdots &amp;amp; x_1^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
x_n^0 &amp;amp; x_n^1 &amp;amp; x_n^2 &amp;amp; \cdots &amp;amp; x_n^n
\end{bmatrix}\begin{bmatrix}
a_0\\a_1\\ \vdots \\ a_n
\end{bmatrix}
=\begin{bmatrix}
y_0\\y_1\\ \vdots\\ y_n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;通过下面的这个形式我们看得出来其就是一个典型的线性方程组的形式，不难证明其解的唯一性。&lt;/p&gt;
&lt;p&gt;并且我们发现点值表示法有一个很明显的优势：可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的时间内将两个多项式乘起来，只需把对应点的 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 乘起来即可。&lt;/p&gt;
&lt;p&gt;通俗的来说，FFT 实现的就是快速求多项式乘法的过程：先把系数表示法转成点值表示法（DFT，离散傅里叶变换），乘完之后再把点值还原为插值（IDFT，离散傅里叶逆变换）。可是朴素的 DFT 需要的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;，IDFT 还回其系数需要高斯消元是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的。而 FFT 利用了一些很特殊很特殊的值加速了 DFT 和 IDFT 的过程，使得总时间复杂度降低到了 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;单位复数根&#34;&gt;单位复数根&lt;/h3&gt;
&lt;p&gt;解这个方程： &lt;span class=&#34;math display&#34;&gt;\[
x^n = 1
\]&lt;/span&gt; 我们会发现这个方程在实数范围内只有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 个解。然而代数基本定理告诉我们这样的方程有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个复数域上的解。由模长相乘辐角相加我们知道因为最终 &lt;span class=&#34;math inline&#34;&gt;\(x^n = 1\)&lt;/span&gt;，所以这些满足条件的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的模长必定也是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。然后需要满足他们的辐角的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 倍能被 &lt;span class=&#34;math inline&#34;&gt;\(2\pi\)&lt;/span&gt; 整除。&lt;/p&gt;
&lt;p&gt;不难发现其就是 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 等分单位圆：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://oi-wiki.org/math/poly/images/fft2.jpg&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;我们记 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次单位根的第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个记为 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n^k\)&lt;/span&gt;，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\omega_k^n = \mathrm e^{\frac{2k\pi i}{n}}\)&lt;/span&gt;。由此可见，单位复数根具有一些非常好的性质比如： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\omega_n^0 = \omega_n^n &amp;amp;= 1\\
\omega_n^k &amp;amp;= \omega_{2n}^{2k}\\
\omega_{2n}^{k + n} &amp;amp;= -\omega_{2n}^k\\
\left(\omega_{2n}^{k + n}\right)^2 &amp;amp;=\omega_n^k 
\end{aligned}
\]&lt;/span&gt; 利用这些性质，我们可以加速 DFT 的过程。FFT 就是利用分治思想加速求每个 &lt;span class=&#34;math inline&#34;&gt;\(f(\omega_n^k)\)&lt;/span&gt; 的值&lt;/p&gt;
&lt;h3 id=&#34;dft&#34;&gt;DFT&lt;/h3&gt;
&lt;p&gt;此时 DFT 的分治思想就是分开考虑奇次项和偶次项：&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = a_0x^0 + a_1x^1 + a_2x^2 + \cdots
\]&lt;/span&gt; 将其分为两个多项式 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(x) &amp;amp;= a_0x^0 + a_2x^2 + a_4x^4 + a_6x^6 + a_8x^8 + \cdots +a_1x^1 + a_3x^3 + a_5x^5 + a_7x^7 + a_9x^9 + \cdots\\
&amp;amp;= a_0x^0 + a_2x^2 + a_4x^4 + a_6x^6 + a_8x^8+\cdots +x(a_1x^0 + a_3x^2 + a_5x^4 + a_7x^6 + \cdots)
\end{aligned}
\]&lt;/span&gt; 考虑两个新多项式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_0(x) &amp;amp;= a_0x^0 + a_2x^1 + a_4x^2 + a_6x^3 + \cdots\\
f_1(x) &amp;amp;= a_1x^0 + a_3x^1 + a_5x^2 + a_7x^3 + \cdots
\end{aligned}
\]&lt;/span&gt; 不难发现 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = f_0(x^2) + xf_1(x^2)
\]&lt;/span&gt; 利用单位复数根的性质： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm{DFT}(f(\omega_n^k)) &amp;amp;= \mathrm{DFT}(f_0(\omega_n^{2k})) + \omega_n^k\mathrm{DFT}(f_1(\omega_n^{2k}))\\
&amp;amp;=\mathrm{DFT}(f_0(\omega_{\frac n2^k})) + \omega_n^k\mathrm{DFT}(f_1(\omega_{\frac n2^k}))
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm{DFT}(f(\omega_n^{k + \frac n2})) &amp;amp;= \mathrm{DFT}(f_0(\omega_n^{2k + n})) + \omega_{n}^{k + \frac n2}\mathrm{DFT}(f_1(\omega_n^{2k + n}))\\
&amp;amp;=\mathrm{DFT}(f_0(\omega_n^n\omega_n^{2k})) - \omega_n^k\mathrm{DFT}(f_1(\omega_n^n\omega_n^{2k}))\\
&amp;amp;=\mathrm{DFT}(f_0(\omega_{\frac n2^k})) - \omega_n^k\mathrm{DFT}(f_1(\omega_{\frac n2^k}))
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(k &amp;lt; \displaystyle\frac n2\)&lt;/span&gt;。不难发现只要我们求得出 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f_0(\omega_{\frac n2^k}))\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f_1(\omega_{\frac n2^k}))\)&lt;/span&gt; 的话，就可以同时求出 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f(\omega_n^k))\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f(\omega_n^{k + \frac n2}))\)&lt;/span&gt;。接下来再对 &lt;span class=&#34;math inline&#34;&gt;\(f_0\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(f_1\)&lt;/span&gt; 递归 DFT 即可。其时间复杂度函数是形如下面这样的： &lt;span class=&#34;math display&#34;&gt;\[
T(n) = T(n/2) + O(n)
\]&lt;/span&gt; 所以总复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(\Theta(n\log n)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际实现的时候一定要注意传进去的系数一定要是 &lt;span class=&#34;math inline&#34;&gt;\(2^m\)&lt;/span&gt; 个的，不然分治的过程中左右不一样会出问题。第一次传进去的时候就高位补 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，补成最高项次数为 &lt;span class=&#34;math inline&#34;&gt;\(2^{m - 1}\)&lt;/span&gt; 的多项式。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lim == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//常数项直接返回&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex a1[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], a2[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; lim; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a1[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i], a2[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//把系数按照奇偶分开&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a1, type);&lt;span class=&#34;co&#34;&gt;//求 DFT(f_0())&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a2, type);&lt;span class=&#34;co&#34;&gt;//求 DFT(f_1())&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex Wn = complex(cos(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim), sin(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim)), w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); ++i, w = w * Wn)&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a1[i] + w * a2[i];&lt;span class=&#34;co&#34;&gt;//求 DFT(f(\omega_n^k))&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i + (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] = a1[i] - w * a2[i];&lt;span class=&#34;co&#34;&gt;//求 DFT(f(\omega_n^{k+\fracn2}))&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;idft&#34;&gt;IDFT&lt;/h3&gt;
&lt;p&gt;好了现在假装我们已经求出了两个多项式的点值表达并已经将他们乘起来，但是我们最终还是要把他还原回去到系数表示的。这个过程就叫做 IDFT。&lt;/p&gt;
&lt;p&gt;其实就是我们需要求解下面关于 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的线性方程组：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
(\omega_n^0)^0 &amp;amp; (\omega_n^0)^1 &amp;amp; (\omega_n^0)^2 &amp;amp;\cdots &amp;amp;(\omega_n^0)^n\\
(\omega_n^1)^0 &amp;amp; (\omega_n^1)^1 &amp;amp; (\omega_n^1)^2 &amp;amp;\cdots &amp;amp; (\omega_n^1)^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{n})^0 &amp;amp; (\omega_n^{n})^1 &amp;amp; (\omega_n^{n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^n)^n
\end{bmatrix}
\begin{bmatrix}
a_0\\a_1\\ \vdots \\ a_n
\end{bmatrix}=\begin{bmatrix}
y_0\\y_1\\ \vdots\\ y_n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们将其乘上左边矩阵的逆：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
a_0\\a_1\\ \vdots \\ a_n
\end{bmatrix}=\begin{bmatrix}
(\omega_n^0)^0 &amp;amp; (\omega_n^0)^1 &amp;amp; (\omega_n^0)^2 &amp;amp;\cdots &amp;amp;(\omega_n^0)^n\\
(\omega_n^1)^0 &amp;amp; (\omega_n^1)^1 &amp;amp; (\omega_n^1)^2 &amp;amp;\cdots &amp;amp; (\omega_n^1)^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{n})^0 &amp;amp; (\omega_n^{n})^1 &amp;amp; (\omega_n^{n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^n)^n
\end{bmatrix}^{-1}
\begin{bmatrix}
y_0\\y_1\\ \vdots\\ y_n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;模相同的正交列向量构成的矩阵的逆是转置的模分之一倍，所以：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
(\omega_n^0)^0 &amp;amp; (\omega_n^0)^1 &amp;amp; (\omega_n^0)^2 &amp;amp;\cdots &amp;amp;(\omega_n^0)^n\\
(\omega_n^1)^0 &amp;amp; (\omega_n^1)^1 &amp;amp; (\omega_n^1)^2 &amp;amp;\cdots &amp;amp; (\omega_n^1)^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{n})^0 &amp;amp; (\omega_n^{n})^1 &amp;amp; (\omega_n^{n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^n)^n
\end{bmatrix}^{-1} =\frac {1}{n+1} \begin{bmatrix}
(\omega_n^{-0})^0 &amp;amp; (\omega_n^{-0})^1 &amp;amp; (\omega_n^{-0})^2 &amp;amp;\cdots &amp;amp;(\omega_n^{-0})^n\\
(\omega_n^{-1})^0 &amp;amp; (\omega_n^{-1})^1 &amp;amp; (\omega_n^{-1})^2 &amp;amp;\cdots &amp;amp; (\omega_n^{-1})^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{-n})^0 &amp;amp; (\omega_n^{-n})^1 &amp;amp; (\omega_n^{-n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^{-n})^n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以不难发现，IDFT 其实就是再做了一遍 DFT，只不过是反起来的。只是算出来最后的系数结果都要除以点值的个数，反映在代码里面就是那个 &lt;code&gt;lim&lt;/code&gt; 变量。&lt;/p&gt;
&lt;p&gt;不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n^k\)&lt;/span&gt; 的共轭就是虚部取反，所以可以在 DFT 函数里面传一个参数表示是否为 IDFT。&lt;/p&gt;
&lt;p&gt;这样子一个递归版的 FFT 就写完了，总体的代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; complex&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex(&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = xx, y = yy;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;span class=&#34;co&#34;&gt;//type = 1 DFT；type = -1 IDFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lim == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//返回常数项&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex a1[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], a2[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; lim; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a1[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i], a2[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a1, type);&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a2, type);&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex Wn = complex(cos(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim), type * sin(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim)), w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); ++i, w = w * Wn)&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a1[i] + w * a2[i];&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i + (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] = a1[i] - w * a2[i];&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) b[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//lim一定要大于 n + m&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim, a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim, b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i];&lt;span class=&#34;co&#34;&gt;//点值乘起来&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim, a, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//IDFT还回去&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].x / lim + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;span class=&#34;co&#34;&gt;//最后要除那个数然后还原回去，四舍五入&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;位逆序置换&#34;&gt;位逆序置换&lt;/h3&gt;
&lt;p&gt;然而，上面的代码连模板都跑不过去……&lt;/p&gt;
&lt;p&gt;考虑继续优化 DFT 的过程。递归的过程中开了大量的空间并且常数巨大，考虑非递归写法。&lt;/p&gt;
&lt;p&gt;只考虑我们对 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt; 操作：&lt;/p&gt;
&lt;p&gt;递归的过程：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;original        0   1   2   3   4   5   6   7
recursion#1     0   2   4   6   1   3   5   7
recursion#2     0   4   2   6   1   5   3   7
recursion#3     0   4   2   6   1   5   3   7
original bin    000 001 010 011 100 101 110 111
now bin         000 100 010 110 001 101 011 111&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可见递归到最后的结果无非就是一个二进制反转。&lt;/p&gt;
&lt;p&gt;所以我们可以考虑非递归，一开始就先把所有的数放到最后的位置，然后迭代的时候一步步还回去即可。这个过程就是位逆序置换（蝴蝶变换）&lt;/p&gt;
&lt;p&gt;考虑处理出 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 二进制位翻转之后的数 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;。易知 &lt;span class=&#34;math inline&#34;&gt;\(R(0) = 0\)&lt;/span&gt;。我们可以从小到大求 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;。很明显，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor x/2\rfloor\)&lt;/span&gt; 的二进制位是 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 右移一位，那么如果知道了 &lt;span class=&#34;math inline&#34;&gt;\(R(\lfloor x/2\rfloor)\)&lt;/span&gt; 就可以很容易的求出 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;，再分 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的奇偶性判断就可以了。 &lt;span class=&#34;math display&#34;&gt;\[
R(x) = \left\lfloor\frac{R(\lfloor x/2\rfloor)}{2}\right\rfloor + (x\bmod 2)\times\frac{len}2
\]&lt;/span&gt; 举个例子：翻转 &lt;span class=&#34;math inline&#34;&gt;\((10101110)_2\)&lt;/span&gt;，首先我们知道它的二分之一倍为 &lt;span class=&#34;math inline&#34;&gt;\((01010111)_2\)&lt;/span&gt;，其翻转结果为 &lt;span class=&#34;math inline&#34;&gt;\((11101010)_2\)&lt;/span&gt;，除以二变为 &lt;span class=&#34;math inline&#34;&gt;\((01110101)_2\)&lt;/span&gt;，由于它是偶数所以前面不用补 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。不难发现其就是一开始要求的翻转结果。&lt;/p&gt;
&lt;p&gt;预处理翻转结果的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | (((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后在处理翻转的时候只需要下面几行：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        myswap(a[i], a[rev[i]]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不难验证其正确性。&lt;/p&gt;
&lt;p&gt;而且观察我们在求 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f(\omega_n^k))\)&lt;/span&gt; 时我们需要算两遍 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n^k\mathrm{DFT}(f_1(\omega_{\frac n2^k}))\)&lt;/span&gt;，复数的乘法常数很大，考虑使用临时变量记录以降低常数。&lt;/p&gt;
&lt;p&gt;这样子的话迭代版的 DFT 过程就很好写了：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(a[i], a[rev[i]]);&lt;span class=&#34;co&#34;&gt;//先预处理翻转完了的结果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//模拟合并答案的过程，即为所谓的 n&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//即上面的 n / 2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        complex Wp = complex(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p));&lt;span class=&#34;co&#34;&gt;//处理出 p 次单位根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;span class=&#34;co&#34;&gt;//对每一个进行合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            complex w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//处理 \omega_p^0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;span class=&#34;co&#34;&gt;//开始合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;co&#34;&gt;//此时的 a[l] 就是之前的 a1[i]，a[len + l] 就是之前的 a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                complex tmp = w * a[len + l];&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[len + l] = a[l] - tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i + (lim &amp;gt;&amp;gt; 1)] = a1[i] - w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[l] = a[l] + tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i] = a1[i] + w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;多项式乘法的实现&#34;&gt;多项式乘法的实现&lt;/h3&gt;
&lt;p&gt;总的一个非递归版 FFT 的实现如下（&lt;a href=&#34;https://www.luogu.com.cn/problem/P3803&#34;&gt;洛谷 P3803&lt;/a&gt;）：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b;&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = t;&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; complex&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-30&#34;&gt;&lt;a href=&#34;#cb7-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb7-31&#34;&gt;&lt;a href=&#34;#cb7-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex(&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-32&#34;&gt;&lt;a href=&#34;#cb7-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-33&#34;&gt;&lt;a href=&#34;#cb7-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = xx, y = yy;&lt;/span&gt;
&lt;span id=&#34;cb7-34&#34;&gt;&lt;a href=&#34;#cb7-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-35&#34;&gt;&lt;a href=&#34;#cb7-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-36&#34;&gt;&lt;a href=&#34;#cb7-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-37&#34;&gt;&lt;a href=&#34;#cb7-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-38&#34;&gt;&lt;a href=&#34;#cb7-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-39&#34;&gt;&lt;a href=&#34;#cb7-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb7-40&#34;&gt;&lt;a href=&#34;#cb7-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb7-41&#34;&gt;&lt;a href=&#34;#cb7-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb7-42&#34;&gt;&lt;a href=&#34;#cb7-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-43&#34;&gt;&lt;a href=&#34;#cb7-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb7-44&#34;&gt;&lt;a href=&#34;#cb7-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-45&#34;&gt;&lt;a href=&#34;#cb7-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-46&#34;&gt;&lt;a href=&#34;#cb7-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb7-47&#34;&gt;&lt;a href=&#34;#cb7-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(a[i], a[rev[i]]);&lt;span class=&#34;co&#34;&gt;//先预处理翻转完了的结果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-48&#34;&gt;&lt;a href=&#34;#cb7-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//模拟合并答案的过程，即为所谓的 n&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-49&#34;&gt;&lt;a href=&#34;#cb7-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-50&#34;&gt;&lt;a href=&#34;#cb7-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//即上面的 n / 2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-51&#34;&gt;&lt;a href=&#34;#cb7-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        complex Wp = complex(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p));&lt;span class=&#34;co&#34;&gt;//处理出 p 次单位根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-52&#34;&gt;&lt;a href=&#34;#cb7-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;span class=&#34;co&#34;&gt;//对每一个进行合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-53&#34;&gt;&lt;a href=&#34;#cb7-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb7-54&#34;&gt;&lt;a href=&#34;#cb7-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            complex w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//处理 \omega_p^0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-55&#34;&gt;&lt;a href=&#34;#cb7-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;span class=&#34;co&#34;&gt;//开始合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-56&#34;&gt;&lt;a href=&#34;#cb7-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb7-57&#34;&gt;&lt;a href=&#34;#cb7-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;co&#34;&gt;//此时的 a[l] 就是之前的 a1[i]，a[len + l] 就是之前的 a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-58&#34;&gt;&lt;a href=&#34;#cb7-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                complex tmp = w * a[len + l];&lt;/span&gt;
&lt;span id=&#34;cb7-59&#34;&gt;&lt;a href=&#34;#cb7-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[len + l] = a[l] - tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i + (lim &amp;gt;&amp;gt; 1)] = a1[i] - w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-60&#34;&gt;&lt;a href=&#34;#cb7-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[l] = a[l] + tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i] = a1[i] + w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-61&#34;&gt;&lt;a href=&#34;#cb7-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb7-62&#34;&gt;&lt;a href=&#34;#cb7-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb7-63&#34;&gt;&lt;a href=&#34;#cb7-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-64&#34;&gt;&lt;a href=&#34;#cb7-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-65&#34;&gt;&lt;a href=&#34;#cb7-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-66&#34;&gt;&lt;a href=&#34;#cb7-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb7-67&#34;&gt;&lt;a href=&#34;#cb7-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-68&#34;&gt;&lt;a href=&#34;#cb7-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb7-69&#34;&gt;&lt;a href=&#34;#cb7-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb7-70&#34;&gt;&lt;a href=&#34;#cb7-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) b[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb7-71&#34;&gt;&lt;a href=&#34;#cb7-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-72&#34;&gt;&lt;a href=&#34;#cb7-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//补齐高位&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-73&#34;&gt;&lt;a href=&#34;#cb7-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-74&#34;&gt;&lt;a href=&#34;#cb7-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | (((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)));&lt;span class=&#34;co&#34;&gt;//先处理翻转完的结果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-75&#34;&gt;&lt;a href=&#34;#cb7-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(lim, a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//DFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-76&#34;&gt;&lt;a href=&#34;#cb7-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(lim, b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//DFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-77&#34;&gt;&lt;a href=&#34;#cb7-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb7-78&#34;&gt;&lt;a href=&#34;#cb7-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i];&lt;span class=&#34;co&#34;&gt;//对处理出来的点值进行乘法&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-79&#34;&gt;&lt;a href=&#34;#cb7-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(lim, a, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//IDFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-80&#34;&gt;&lt;a href=&#34;#cb7-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb7-81&#34;&gt;&lt;a href=&#34;#cb7-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].x / lim + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb7-82&#34;&gt;&lt;a href=&#34;#cb7-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-83&#34;&gt;&lt;a href=&#34;#cb7-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 FFT 来求高精度整数乘法的实现（&lt;a href=&#34;https://www.luogu.com.cn/problem/P1919&#34;&gt;洛谷 P1919&lt;/a&gt;）：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b) {T t = a; a = b; b = t; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;3000000&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db x, y;&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx(db xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, db yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {x = xx, y = yy;}&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s1[maxn], s2[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(cmplx *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cmplx Wp(cos(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / p));&lt;/span&gt;
&lt;span id=&#34;cb8-36&#34;&gt;&lt;a href=&#34;#cb8-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb8-37&#34;&gt;&lt;a href=&#34;#cb8-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb8-38&#34;&gt;&lt;a href=&#34;#cb8-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cmplx w(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-39&#34;&gt;&lt;a href=&#34;#cb8-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;/span&gt;
&lt;span id=&#34;cb8-40&#34;&gt;&lt;a href=&#34;#cb8-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb8-41&#34;&gt;&lt;a href=&#34;#cb8-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cmplx tmp = w * f[l + len];&lt;/span&gt;
&lt;span id=&#34;cb8-42&#34;&gt;&lt;a href=&#34;#cb8-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l + len] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-43&#34;&gt;&lt;a href=&#34;#cb8-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-44&#34;&gt;&lt;a href=&#34;#cb8-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb8-45&#34;&gt;&lt;a href=&#34;#cb8-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb8-46&#34;&gt;&lt;a href=&#34;#cb8-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-47&#34;&gt;&lt;a href=&#34;#cb8-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-48&#34;&gt;&lt;a href=&#34;#cb8-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-49&#34;&gt;&lt;a href=&#34;#cb8-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-50&#34;&gt;&lt;a href=&#34;#cb8-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb8-51&#34;&gt;&lt;a href=&#34;#cb8-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-52&#34;&gt;&lt;a href=&#34;#cb8-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s\n%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s1, s2);&lt;/span&gt;
&lt;span id=&#34;cb8-53&#34;&gt;&lt;a href=&#34;#cb8-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n1 = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n2 = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-54&#34;&gt;&lt;a href=&#34;#cb8-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, strlen(s1) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) a[++n1].x = s1[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-55&#34;&gt;&lt;a href=&#34;#cb8-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, strlen(s2) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) b[++n2].x = s2[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-56&#34;&gt;&lt;a href=&#34;#cb8-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-57&#34;&gt;&lt;a href=&#34;#cb8-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n1 + n2) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-58&#34;&gt;&lt;a href=&#34;#cb8-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-59&#34;&gt;&lt;a href=&#34;#cb8-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | (((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)));&lt;/span&gt;
&lt;span id=&#34;cb8-60&#34;&gt;&lt;a href=&#34;#cb8-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-61&#34;&gt;&lt;a href=&#34;#cb8-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(b, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-62&#34;&gt;&lt;a href=&#34;#cb8-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb8-63&#34;&gt;&lt;a href=&#34;#cb8-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i];&lt;/span&gt;
&lt;span id=&#34;cb8-64&#34;&gt;&lt;a href=&#34;#cb8-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-65&#34;&gt;&lt;a href=&#34;#cb8-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb8-66&#34;&gt;&lt;a href=&#34;#cb8-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] = (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].x / lim + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-67&#34;&gt;&lt;a href=&#34;#cb8-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb8-68&#34;&gt;&lt;a href=&#34;#cb8-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[i] &amp;gt;= &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;) ans[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] += ans[i] / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, ans[i] %= &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, lim += (i == lim);&lt;/span&gt;
&lt;span id=&#34;cb8-69&#34;&gt;&lt;a href=&#34;#cb8-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!ans[lim] &amp;amp;&amp;amp; lim &amp;gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) --lim;&lt;/span&gt;
&lt;span id=&#34;cb8-70&#34;&gt;&lt;a href=&#34;#cb8-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lim == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-71&#34;&gt;&lt;a href=&#34;#cb8-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; DEC(i, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb8-72&#34;&gt;&lt;a href=&#34;#cb8-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-73&#34;&gt;&lt;a href=&#34;#cb8-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;当然，千万要记得 IDFT 还回去的时候要除以 &lt;code&gt;lim&lt;/code&gt;，实在怕记不住就在 DFT 函数里面加几句话直接处理好&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (type == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i].x /= lim;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;针对多项式乘法三次变两次优化&#34;&gt;针对多项式乘法：三次变两次优化&lt;/h3&gt;
&lt;p&gt;我们发现我们在做多项式乘法的时候，需要先 DFT &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt;，乘在一起之后再 IDFT 还回来 &lt;span class=&#34;math inline&#34;&gt;\(C(x)\)&lt;/span&gt;，一共进行了三次这样的操作。考虑如何减少我们调用 DFT 的次数。&lt;/p&gt;
&lt;p&gt;可以把 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 的系数放到 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt; 系数的虚部上面，即 &lt;span class=&#34;math inline&#34;&gt;\(a + b\mathrm i\)&lt;/span&gt;，然后 DFT 一下 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt; 再求个平方，得到 &lt;span class=&#34;math inline&#34;&gt;\(A^2(x)\)&lt;/span&gt;，再 IDFT 回去。我们可以发现得到的系数都是 &lt;span class=&#34;math inline&#34;&gt;\((a + b\mathrm i)^2 = a^2 - b^2 + 2ab\mathrm i\)&lt;/span&gt; 的形式的，所以只需要取出虚部再除以二就得到答案了。&lt;/p&gt;
&lt;p&gt;这样的写法可以减小常数，跑的比 NTT 还快。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b;&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = t;&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db x, y;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx(db xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, db yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = xx, y = yy;&lt;/span&gt;
&lt;span id=&#34;cb10-36&#34;&gt;&lt;a href=&#34;#cb10-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-37&#34;&gt;&lt;a href=&#34;#cb10-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-38&#34;&gt;&lt;a href=&#34;#cb10-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-39&#34;&gt;&lt;a href=&#34;#cb10-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-40&#34;&gt;&lt;a href=&#34;#cb10-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-41&#34;&gt;&lt;a href=&#34;#cb10-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb10-42&#34;&gt;&lt;a href=&#34;#cb10-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb10-43&#34;&gt;&lt;a href=&#34;#cb10-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb10-44&#34;&gt;&lt;a href=&#34;#cb10-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-45&#34;&gt;&lt;a href=&#34;#cb10-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(cmplx *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb10-46&#34;&gt;&lt;a href=&#34;#cb10-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-47&#34;&gt;&lt;a href=&#34;#cb10-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-48&#34;&gt;&lt;a href=&#34;#cb10-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb10-49&#34;&gt;&lt;a href=&#34;#cb10-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb10-50&#34;&gt;&lt;a href=&#34;#cb10-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-51&#34;&gt;&lt;a href=&#34;#cb10-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-52&#34;&gt;&lt;a href=&#34;#cb10-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-53&#34;&gt;&lt;a href=&#34;#cb10-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cmplx Wp(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p));&lt;/span&gt;
&lt;span id=&#34;cb10-54&#34;&gt;&lt;a href=&#34;#cb10-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb10-55&#34;&gt;&lt;a href=&#34;#cb10-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-56&#34;&gt;&lt;a href=&#34;#cb10-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cmplx w(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-57&#34;&gt;&lt;a href=&#34;#cb10-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;/span&gt;
&lt;span id=&#34;cb10-58&#34;&gt;&lt;a href=&#34;#cb10-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb10-59&#34;&gt;&lt;a href=&#34;#cb10-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cmplx tmp = w * f[len + l];&lt;/span&gt;
&lt;span id=&#34;cb10-60&#34;&gt;&lt;a href=&#34;#cb10-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[len + l] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb10-61&#34;&gt;&lt;a href=&#34;#cb10-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb10-62&#34;&gt;&lt;a href=&#34;#cb10-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb10-63&#34;&gt;&lt;a href=&#34;#cb10-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-64&#34;&gt;&lt;a href=&#34;#cb10-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-65&#34;&gt;&lt;a href=&#34;#cb10-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-66&#34;&gt;&lt;a href=&#34;#cb10-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-67&#34;&gt;&lt;a href=&#34;#cb10-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb10-68&#34;&gt;&lt;a href=&#34;#cb10-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-69&#34;&gt;&lt;a href=&#34;#cb10-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb10-70&#34;&gt;&lt;a href=&#34;#cb10-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb10-71&#34;&gt;&lt;a href=&#34;#cb10-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) a[i].y = read();&lt;/span&gt;
&lt;span id=&#34;cb10-72&#34;&gt;&lt;a href=&#34;#cb10-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-73&#34;&gt;&lt;a href=&#34;#cb10-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-74&#34;&gt;&lt;a href=&#34;#cb10-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-75&#34;&gt;&lt;a href=&#34;#cb10-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb10-76&#34;&gt;&lt;a href=&#34;#cb10-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-77&#34;&gt;&lt;a href=&#34;#cb10-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-78&#34;&gt;&lt;a href=&#34;#cb10-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * a[i];&lt;/span&gt;
&lt;span id=&#34;cb10-79&#34;&gt;&lt;a href=&#34;#cb10-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-80&#34;&gt;&lt;a href=&#34;#cb10-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb10-81&#34;&gt;&lt;a href=&#34;#cb10-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].y / lim / &lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb10-82&#34;&gt;&lt;a href=&#34;#cb10-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-83&#34;&gt;&lt;a href=&#34;#cb10-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;快速数论变换ntt&#34;&gt;快速数论变换（NTT）&lt;/h2&gt;
&lt;p&gt;有了 FFT，我们已经有能力在 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的时间内求出两个多项式的卷积了。但是 FFT 也有它的缺点：复数采用的浮点运算不仅造成精度的问题，还会增大常数。遗憾的是数学家们已经证明了 &lt;span class=&#34;math inline&#34;&gt;\(\mathbb C\)&lt;/span&gt; 中只有单位复数根满足 FFT 的要求。&lt;/p&gt;
&lt;p&gt;考虑到利用多项式的计数题很多都是模意义下的，所以自然希望为单位复数根找一个模意义下的替代品。此时就进入下面的前置知识：原根。&lt;/p&gt;
&lt;h3 id=&#34;原根&#34;&gt;原根&lt;/h3&gt;
&lt;p&gt;设整数 &lt;span class=&#34;math inline&#34;&gt;\(r,n\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(r\perp n\land r \not= 0 \land n &amp;gt; 0\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(r^x \equiv 1\pmod n\)&lt;/span&gt; 的&lt;strong&gt;最小正整数&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 称为 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的&lt;strong&gt;阶&lt;/strong&gt;，记为 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{ord}_nr\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(\delta_n(r)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(r,n\in\mathbb N^+\land r\perp n\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{ord}_nr = \phi(n)\)&lt;/span&gt; 时，称 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 是模 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的原根或者 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的原根。&lt;/p&gt;
&lt;h3 id=&#34;ntt&#34;&gt;NTT&lt;/h3&gt;
&lt;p&gt;对于质数 &lt;span class=&#34;math inline&#34;&gt;\(p = qn + 1\:(n = 2^m)\)&lt;/span&gt;，原根 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(g^{qn}\equiv 1\pmod p\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(g_n = g^q\pmod p\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n\)&lt;/span&gt; 的等价，其满足相似的性质，比如 &lt;span class=&#34;math inline&#34;&gt;\(g_n^n\equiv 1\pmod p,g_n^{n/2} \equiv -1\pmod p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;常见的质数 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
p &amp;amp;= 998244353 = 7\times17\times2^{23} + 1,&amp;amp;g = 3\\
p &amp;amp;= 1004535809 = 479\times 2^{21} + 1,&amp;amp;g =  3
\end{aligned}
\]&lt;/span&gt; 迭代到长度为 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(g_l = g^{\frac{p - 1}{l}}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;直接看代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll G = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = t;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll pow(ll base, ll p = mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-37&#34;&gt;&lt;a href=&#34;#cb11-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-38&#34;&gt;&lt;a href=&#34;#cb11-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-39&#34;&gt;&lt;a href=&#34;#cb11-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb11-40&#34;&gt;&lt;a href=&#34;#cb11-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-41&#34;&gt;&lt;a href=&#34;#cb11-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-42&#34;&gt;&lt;a href=&#34;#cb11-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb11-43&#34;&gt;&lt;a href=&#34;#cb11-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn], g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb11-44&#34;&gt;&lt;a href=&#34;#cb11-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll invG = pow(G);&lt;/span&gt;
&lt;span id=&#34;cb11-45&#34;&gt;&lt;a href=&#34;#cb11-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-46&#34;&gt;&lt;a href=&#34;#cb11-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; NTT(ll *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb11-47&#34;&gt;&lt;a href=&#34;#cb11-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-48&#34;&gt;&lt;a href=&#34;#cb11-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-49&#34;&gt;&lt;a href=&#34;#cb11-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb11-50&#34;&gt;&lt;a href=&#34;#cb11-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb11-51&#34;&gt;&lt;a href=&#34;#cb11-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-52&#34;&gt;&lt;a href=&#34;#cb11-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-53&#34;&gt;&lt;a href=&#34;#cb11-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-54&#34;&gt;&lt;a href=&#34;#cb11-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll tG = pow(type ? G : invG, (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / p);&lt;/span&gt;
&lt;span id=&#34;cb11-55&#34;&gt;&lt;a href=&#34;#cb11-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb11-56&#34;&gt;&lt;a href=&#34;#cb11-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb11-57&#34;&gt;&lt;a href=&#34;#cb11-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll buf = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-58&#34;&gt;&lt;a href=&#34;#cb11-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, buf = buf * tG % mod)&lt;/span&gt;
&lt;span id=&#34;cb11-59&#34;&gt;&lt;a href=&#34;#cb11-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb11-60&#34;&gt;&lt;a href=&#34;#cb11-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll tmp = buf * f[len + l] % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-61&#34;&gt;&lt;a href=&#34;#cb11-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[len + l] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb11-62&#34;&gt;&lt;a href=&#34;#cb11-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[len + l] &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) f[len + l] += mod;&lt;span class=&#34;co&#34;&gt;//及时取模&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-63&#34;&gt;&lt;a href=&#34;#cb11-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb11-64&#34;&gt;&lt;a href=&#34;#cb11-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[l] &amp;gt; mod) f[l] -= mod;&lt;span class=&#34;co&#34;&gt;//及时取模&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-65&#34;&gt;&lt;a href=&#34;#cb11-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb11-66&#34;&gt;&lt;a href=&#34;#cb11-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-67&#34;&gt;&lt;a href=&#34;#cb11-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-68&#34;&gt;&lt;a href=&#34;#cb11-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll invlim = pow(lim);&lt;span class=&#34;co&#34;&gt;//最后还回去，除以lim相当于乘上lim的逆元&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-69&#34;&gt;&lt;a href=&#34;#cb11-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!type)&lt;/span&gt;
&lt;span id=&#34;cb11-70&#34;&gt;&lt;a href=&#34;#cb11-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-71&#34;&gt;&lt;a href=&#34;#cb11-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = (f[i] * invlim % mod);&lt;/span&gt;
&lt;span id=&#34;cb11-72&#34;&gt;&lt;a href=&#34;#cb11-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-73&#34;&gt;&lt;a href=&#34;#cb11-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-74&#34;&gt;&lt;a href=&#34;#cb11-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-75&#34;&gt;&lt;a href=&#34;#cb11-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb11-76&#34;&gt;&lt;a href=&#34;#cb11-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-77&#34;&gt;&lt;a href=&#34;#cb11-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb11-78&#34;&gt;&lt;a href=&#34;#cb11-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) f[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb11-79&#34;&gt;&lt;a href=&#34;#cb11-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) g[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb11-80&#34;&gt;&lt;a href=&#34;#cb11-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-81&#34;&gt;&lt;a href=&#34;#cb11-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-82&#34;&gt;&lt;a href=&#34;#cb11-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-83&#34;&gt;&lt;a href=&#34;#cb11-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = (rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-84&#34;&gt;&lt;a href=&#34;#cb11-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-85&#34;&gt;&lt;a href=&#34;#cb11-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-86&#34;&gt;&lt;a href=&#34;#cb11-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = f[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-87&#34;&gt;&lt;a href=&#34;#cb11-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-88&#34;&gt;&lt;a href=&#34;#cb11-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb11-89&#34;&gt;&lt;a href=&#34;#cb11-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)f[i]);&lt;/span&gt;
&lt;span id=&#34;cb11-90&#34;&gt;&lt;a href=&#34;#cb11-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-91&#34;&gt;&lt;a href=&#34;#cb11-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;任意模数多项式乘法&#34;&gt;任意模数多项式乘法&lt;/h2&gt;
&lt;h3 id=&#34;问题描述&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;有些毒瘤题目里面，模数不一定是满足 &lt;span class=&#34;math inline&#34;&gt;\(p = a\times2^k + 1\)&lt;/span&gt; 的形式，这就意味着 NTT 是不能用的，而普通的 FFT 精度又不够，怎么办呢？&lt;/p&gt;
&lt;p&gt;一般的问题形式：给定 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(h(x) = f(x)\times g(x)\)&lt;/span&gt;，系数对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;h3 id=&#34;法-1三模-ntt&#34;&gt;法 1：三模 NTT&lt;/h3&gt;
&lt;p&gt;分析可得最大的数应该是 &lt;span class=&#34;math inline&#34;&gt;\(p^2\times\max\{\deg f, \deg g\}\)&lt;/span&gt;，是 &lt;span class=&#34;math inline&#34;&gt;\(10^{23}\)&lt;/span&gt; 级别的。所以选三个模数分别做 NTT 然后用 CRT 合并即可。需要做 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt; 次 DFT，常数较大，暂不考虑。&lt;/p&gt;
&lt;h3 id=&#34;法-2拆系数-fftmtt&#34;&gt;法 2：拆系数 FFT（MTT）&lt;/h3&gt;
&lt;p&gt;考虑把多项式的系数拆成形如 &lt;span class=&#34;math inline&#34;&gt;\(a\times 2^{15} + b\)&lt;/span&gt; 的形式，那么 &lt;span class=&#34;math inline&#34;&gt;\(a, b\le 2^{15}\)&lt;/span&gt;。这样子相乘的值域大概是 &lt;span class=&#34;math inline&#34;&gt;\(10^{14}\)&lt;/span&gt; 级别的。&lt;/p&gt;
&lt;p&gt;于是有 &lt;span class=&#34;math inline&#34;&gt;\(c_1c_2 = (a_1\times 2^{15} + b_1)(a_2\times 2^{15}+b_2) = a_1a_2\times 2^{30} + (a_1b_2 + a_2b_1)2^{15} + b_1b_2\)&lt;/span&gt;。然而这样看似要求四次多项式乘法，&lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 次 DFT，似乎更加屑了。&lt;/p&gt;
&lt;p&gt;冷静分析一下：现在的问题是有四个多项式 &lt;span class=&#34;math inline&#34;&gt;\(A_1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(A_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B_2\)&lt;/span&gt;，要求这些多项式的两两乘积。&lt;/p&gt;
&lt;p&gt;利用复数的性质：考虑 &lt;span class=&#34;math inline&#34;&gt;\((a + bi)(c + di) = ac - bd + (ad + bc)i\)&lt;/span&gt;。那么令复多项式 &lt;span class=&#34;math inline&#34;&gt;\(P = A_1 + iA_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(Q = B_1 + iB_2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有 &lt;span class=&#34;math inline&#34;&gt;\(T_1 = P\times Q = A_1B_1 - A_2B_2 + (A_1B_2 + A_2B_1)i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;再设 &lt;span class=&#34;math inline&#34;&gt;\(P&amp;#39; = A_1 - iA_2\)&lt;/span&gt;，那么有 &lt;span class=&#34;math inline&#34;&gt;\(T_2 = P&amp;#39;\times Q = A_1B_1 + A_2B_2 + (A_1B_2 - A_2B_1)i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;两式相加可以得到 &lt;span class=&#34;math inline&#34;&gt;\(2A_1B_1 + 2A_1B_2i\)&lt;/span&gt;，两式相减可以得到 &lt;span class=&#34;math inline&#34;&gt;\(2A_2B_2 - 2A_2B_1i\)&lt;/span&gt;。把这两个多项式的实部虚部拆出来就得到我们想要的结果了。&lt;/p&gt;
&lt;p&gt;这样子需要做 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 次 DFT，常数不小但比 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt; 次 NTT 优。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;可以直接配合后面的 &lt;code&gt;vector&lt;/code&gt; 版多项式板子食用。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; complex {&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx {&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        db x, y;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cmplx(db xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, db yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : x(xx), y(yy) {}&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    };&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; complex;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; MTT {&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sin;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cos;&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;acos;&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;floor;&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db PI = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; DIV = &lt;span class=&#34;dv&#34;&gt;32768&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-18&#34;&gt;&lt;a href=&#34;#cb12-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod;&lt;/span&gt;
&lt;span id=&#34;cb12-19&#34;&gt;&lt;a href=&#34;#cb12-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-20&#34;&gt;&lt;a href=&#34;#cb12-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;pp&#34;&gt;#define clr2&lt;/span&gt;(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memset(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;(cmplx))&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;*&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;/span&gt;
&lt;span id=&#34;cb12-21&#34;&gt;&lt;a href=&#34;#cb12-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-22&#34;&gt;&lt;a href=&#34;#cb12-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(cmplx *g, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim) {&lt;/span&gt;
&lt;span id=&#34;cb12-23&#34;&gt;&lt;a href=&#34;#cb12-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; cmplx f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb12-24&#34;&gt;&lt;a href=&#34;#cb12-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getTr(lim);&lt;/span&gt;
&lt;span id=&#34;cb12-25&#34;&gt;&lt;a href=&#34;#cb12-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = g[&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i]];&lt;/span&gt;
&lt;span id=&#34;cb12-26&#34;&gt;&lt;a href=&#34;#cb12-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb12-27&#34;&gt;&lt;a href=&#34;#cb12-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-28&#34;&gt;&lt;a href=&#34;#cb12-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cmplx Wp(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cos(PI / len), type * &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sin(PI / len));&lt;/span&gt;
&lt;span id=&#34;cb12-29&#34;&gt;&lt;a href=&#34;#cb12-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p) {&lt;/span&gt;
&lt;span id=&#34;cb12-30&#34;&gt;&lt;a href=&#34;#cb12-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cmplx w(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-31&#34;&gt;&lt;a href=&#34;#cb12-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp) {&lt;/span&gt;
&lt;span id=&#34;cb12-32&#34;&gt;&lt;a href=&#34;#cb12-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    cmplx tmp = w * f[len + l];&lt;/span&gt;
&lt;span id=&#34;cb12-33&#34;&gt;&lt;a href=&#34;#cb12-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[len + l] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb12-34&#34;&gt;&lt;a href=&#34;#cb12-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb12-35&#34;&gt;&lt;a href=&#34;#cb12-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb12-36&#34;&gt;&lt;a href=&#34;#cb12-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb12-37&#34;&gt;&lt;a href=&#34;#cb12-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-38&#34;&gt;&lt;a href=&#34;#cb12-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-39&#34;&gt;&lt;a href=&#34;#cb12-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (type == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) g[i] = cmplx(f[i].x / lim, f[i].y / lim);&lt;/span&gt;
&lt;span id=&#34;cb12-40&#34;&gt;&lt;a href=&#34;#cb12-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; g[i] = f[i];&lt;/span&gt;
&lt;span id=&#34;cb12-41&#34;&gt;&lt;a href=&#34;#cb12-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-42&#34;&gt;&lt;a href=&#34;#cb12-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-43&#34;&gt;&lt;a href=&#34;#cb12-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-44&#34;&gt;&lt;a href=&#34;#cb12-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb12-45&#34;&gt;&lt;a href=&#34;#cb12-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; cmplx p1[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], p2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], q[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t1[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb12-46&#34;&gt;&lt;a href=&#34;#cb12-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, A) p1[i] = cmplx(A[i] / DIV, A[i] % DIV), p2[i] = cmplx(A[i] / DIV, -p1[i].y);&lt;/span&gt;
&lt;span id=&#34;cb12-47&#34;&gt;&lt;a href=&#34;#cb12-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, B) q[i] = cmplx(B[i] / DIV, B[i] % DIV);&lt;/span&gt;
&lt;span id=&#34;cb12-48&#34;&gt;&lt;a href=&#34;#cb12-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Poly C; C.resize(min(lim, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)A.size() + (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb12-49&#34;&gt;&lt;a href=&#34;#cb12-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; n &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(A.size() + B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); n &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-50&#34;&gt;&lt;a href=&#34;#cb12-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-51&#34;&gt;&lt;a href=&#34;#cb12-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DFT(p1, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), DFT(p2, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), DFT(q, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb12-52&#34;&gt;&lt;a href=&#34;#cb12-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) t1[i] = p1[i] * q[i], t2[i] = p2[i] * q[i];&lt;/span&gt;
&lt;span id=&#34;cb12-53&#34;&gt;&lt;a href=&#34;#cb12-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DFT(t1, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), DFT(t2, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb12-54&#34;&gt;&lt;a href=&#34;#cb12-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-55&#34;&gt;&lt;a href=&#34;#cb12-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, C) {&lt;/span&gt;
&lt;span id=&#34;cb12-56&#34;&gt;&lt;a href=&#34;#cb12-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll a1b1, a1b2, a2b1, a2b2;&lt;/span&gt;
&lt;span id=&#34;cb12-57&#34;&gt;&lt;a href=&#34;#cb12-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a1b1 = (ll)floor((t1[i].x + t2[i].x) / &lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-58&#34;&gt;&lt;a href=&#34;#cb12-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a1b2 = (ll)floor((t1[i].y + t2[i].y) / &lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-59&#34;&gt;&lt;a href=&#34;#cb12-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a2b1 = ((ll)floor(t1[i].y + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) - a1b2) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-60&#34;&gt;&lt;a href=&#34;#cb12-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a2b2 = ((ll)floor(t2[i].x + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) - a1b1) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-61&#34;&gt;&lt;a href=&#34;#cb12-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            C[i] = ((((a1b1 &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;) + (a1b2 + a2b1)) &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;) + a2b2) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-62&#34;&gt;&lt;a href=&#34;#cb12-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            C[i] = (C[i] + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-63&#34;&gt;&lt;a href=&#34;#cb12-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-64&#34;&gt;&lt;a href=&#34;#cb12-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-65&#34;&gt;&lt;a href=&#34;#cb12-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        clr2(p1, n), clr2(p2, n), clr2(q, n), clr2(t1, n), clr2(t2, n);&lt;/span&gt;
&lt;span id=&#34;cb12-66&#34;&gt;&lt;a href=&#34;#cb12-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb12-67&#34;&gt;&lt;a href=&#34;#cb12-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-68&#34;&gt;&lt;a href=&#34;#cb12-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; MTT;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;fftntt-优化卷积的一些例子&#34;&gt;FFT/NTT 优化卷积的一些例子&lt;/h2&gt;
&lt;p&gt;在继续之前，我们先来看看 FFT/NTT 的一些应用。（高精度乘法就不说了，记得最后进位就可以了）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化一般的卷积&lt;/li&gt;
&lt;li&gt;和生成函数一起食用&lt;/li&gt;
&lt;li&gt;字符串匹配（你没看错）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;洛谷-p3338-zjoi2014力&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3338&#34;&gt;洛谷 P3338 [ZJOI2014]力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(\{q\}\)&lt;/span&gt;，定义 &lt;span class=&#34;math display&#34;&gt;\[
F_i = \sum_{j = 1}^{i - 1}\frac{q_iq_j}{(i - j)^2} - \sum_{j = i + 1}^n\frac{q_iq_j}{(i - j)^2}
\]&lt;/span&gt; 求 &lt;span class=&#34;math display&#34;&gt;\[
E_i=\frac{F_i}{q_i}
\]&lt;/span&gt; 考虑暴力的话，这道题是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，过不去，考虑转化式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E_i &amp;amp;= \frac{F_i}{q_i}\\
&amp;amp;=\sum_{j = 1}^{i - 1}\frac{q_j}{(i - j)^2} - \sum_{j = i + 1}^n\frac{q_j}{(i - j)^2}\\
\end{aligned}
\]&lt;/span&gt; 我们尝试将其化为卷积的形式，令 &lt;span class=&#34;math inline&#34;&gt;\(f_i = q_i\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(f_0 = 0\)&lt;/span&gt;；&lt;span class=&#34;math inline&#34;&gt;\(g_i =\dfrac{1}{i^2}\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(g_0 = 0\)&lt;/span&gt;，回代： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E_i &amp;amp;= \sum_{j = 0}^{i}f_jg_{i - j} - \sum_{j = i}^nf_jg_{j - i}
\end{aligned}
\]&lt;/span&gt; 左边的部分已经是一个卷积的形式了，考虑继续化简右边。此时我们可以使用一个翻转的技巧，令 &lt;span class=&#34;math inline&#34;&gt;\(f&amp;#39;_i = f_{n - i}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(t = n - i\)&lt;/span&gt;，则右半边的式子可以化为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{j = 0}^{t}f&amp;#39;_{t - j}g_j\)&lt;/span&gt;。现在两边都化为卷积的形式了，可以愉快的使用 FFT 加速了。&lt;/p&gt;
&lt;p&gt;即我们设多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x) =\displaystyle\sum_{i = 0}^nf_ix^n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B(x) = \displaystyle\sum_{i = 0}^ng_ix^n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(C(x) = \displaystyle\sum_{i = 0}^nf&amp;#39;_i\)&lt;/span&gt;。再令 &lt;span class=&#34;math inline&#34;&gt;\(L(x) = A(x)B(x)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(R(x) = B(x)C(x)\)&lt;/span&gt;，不难发现答案 &lt;span class=&#34;math inline&#34;&gt;\(E_i = l_i - r_{n - i}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(l_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt; 分别为 &lt;span class=&#34;math inline&#34;&gt;\(L(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt; 中 &lt;span class=&#34;math inline&#34;&gt;\(x^i\)&lt;/span&gt; 的系数。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n);&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;a[i].x);&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        b[i].x = (&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt; / i / i);&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[n - i].x = a[i].x;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= (n &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), DFT(b, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), DFT(c, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i], c[i] = b[i] * c[i];&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), DFT(c, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%.3lf\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a[i].x - c[n - i].x);&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;洛谷-p3723-ah2017hnoi2017礼物&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3723&#34;&gt;洛谷 P3723 [AH2017/HNOI2017]礼物&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;题意：给定两个序列 &lt;span class=&#34;math inline&#34;&gt;\(\{x\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{y\}\)&lt;/span&gt;，可以整体平移序列或者整体加/减某个数，求最终序列&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n(x_i - y_i)^2
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;的最小值。&lt;/p&gt;
&lt;p&gt;分析：设整体加减的数为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 可正可负），我们需要最小化的就是下面这个式子：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n(x_i - y_i + c)^2
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;展开上面的式子，由 &lt;span class=&#34;math inline&#34;&gt;\((x_i - y_i +c)^2 = x_i^2 + y_i^2 + c^2 + 2x_ic - 2y_ic - 2x_iy_i\)&lt;/span&gt; 可以得到原式可化简为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum x_i^2 + \sum y_i^2 + nc^2 + 2c\sum x_i - 2c\sum y_i - 2\sum x_iy_i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（下标省略）&lt;/p&gt;
&lt;p&gt;不难发现我们只需要最大化 &lt;span class=&#34;math inline&#34;&gt;\(\sum x_iy_i\)&lt;/span&gt; 就可以啦。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_k\)&lt;/span&gt; 为旋转了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个单位后 &lt;span class=&#34;math inline&#34;&gt;\(\sum x_iy_i\)&lt;/span&gt; 的取值，先把 &lt;span class=&#34;math inline&#34;&gt;\(\{x\}\)&lt;/span&gt; 倍长一波，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_k = \sum_{i = 1}^nx_{i + k}y_k
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;翻转 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_k = \sum_{i = 1}^nx_{i + k}y_{n - i + 1}&amp;#39;
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;考虑多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(t) = \sum_{i = 1}^n x_it^i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g(t) = \sum_{i = 1}^n y_it^i\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(h(t) = f(t) * g(t)\)&lt;/span&gt;，不难发现其 &lt;span class=&#34;math inline&#34;&gt;\(t^{n + k + 1}\)&lt;/span&gt; 的系数即为 &lt;span class=&#34;math inline&#34;&gt;\(f_k\)&lt;/span&gt;。因此可以使用 FFT/NTT 将倍长过的 &lt;span class=&#34;math inline&#34;&gt;\(\{x\}\)&lt;/span&gt; 与翻转过的 &lt;span class=&#34;math inline&#34;&gt;\(\{y\}\)&lt;/span&gt; 卷起来，然后把结果从第 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 到第 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 处找最值就可以了&lt;/p&gt;
&lt;p&gt;NTT 的实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll suma, sumb, suma2, sumb2, n, m;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; NTT(ll *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            swap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll Gp = pow(type ? G : invG, (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / p);&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll buf = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, buf = buf * Gp % mod)&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll tmp = buf * f[l + len] % mod;&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l + len] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[l + len] &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) f[l + len] += mod;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[l] &amp;gt; mod) f[l] -= mod;&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll invlim = pow(lim);&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!type)&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = f[i] * invlim % mod;&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-32&#34;&gt;&lt;a href=&#34;#cb14-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb14-33&#34;&gt;&lt;a href=&#34;#cb14-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-34&#34;&gt;&lt;a href=&#34;#cb14-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb14-35&#34;&gt;&lt;a href=&#34;#cb14-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb14-36&#34;&gt;&lt;a href=&#34;#cb14-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb14-37&#34;&gt;&lt;a href=&#34;#cb14-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb14-38&#34;&gt;&lt;a href=&#34;#cb14-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i + n] = read(), suma += a[i], suma2 += a[i] * a[i];&lt;/span&gt;
&lt;span id=&#34;cb14-39&#34;&gt;&lt;a href=&#34;#cb14-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb14-40&#34;&gt;&lt;a href=&#34;#cb14-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = read(), sumb += b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], sumb2 += b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb14-41&#34;&gt;&lt;a href=&#34;#cb14-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-42&#34;&gt;&lt;a href=&#34;#cb14-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * n) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-43&#34;&gt;&lt;a href=&#34;#cb14-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-44&#34;&gt;&lt;a href=&#34;#cb14-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = (rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-45&#34;&gt;&lt;a href=&#34;#cb14-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(b, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-46&#34;&gt;&lt;a href=&#34;#cb14-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb14-47&#34;&gt;&lt;a href=&#34;#cb14-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i] % mod;&lt;span class=&#34;co&#34;&gt;//千万不要忘记取模&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-48&#34;&gt;&lt;a href=&#34;#cb14-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(a, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-49&#34;&gt;&lt;a href=&#34;#cb14-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-50&#34;&gt;&lt;a href=&#34;#cb14-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb14-51&#34;&gt;&lt;a href=&#34;#cb14-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, -m, m)&lt;/span&gt;
&lt;span id=&#34;cb14-52&#34;&gt;&lt;a href=&#34;#cb14-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = min(ans, suma2 + sumb2 + j * j * n + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j * (suma - sumb) - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * a[i + n]);&lt;/span&gt;
&lt;span id=&#34;cb14-53&#34;&gt;&lt;a href=&#34;#cb14-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb14-54&#34;&gt;&lt;a href=&#34;#cb14-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-55&#34;&gt;&lt;a href=&#34;#cb14-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;bzoj3771-triple&#34;&gt;BZOJ3771 Triple&lt;/h3&gt;
&lt;p&gt;题意：有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 把价值分别为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的斧子，河神可能拿走 1 - 3 把，问每种可能的损失价值及其对应方案数。（不计顺序）&lt;/p&gt;
&lt;p&gt;思路：这是一道生成函数的入门题。&lt;/p&gt;
&lt;p&gt;考虑设出多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，其系数有 &lt;span class=&#34;math inline&#34;&gt;\(A[a_i] = 1\)&lt;/span&gt;，代表选一把的。则你可能会觉得答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x) + A^2(x) + A^3(x)\)&lt;/span&gt;。但是这样是显然不对的。为什么？&lt;/p&gt;
&lt;p&gt;因为这样的话同一个元素可能被选两次或三次，对于这种情况定义 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(C(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B[2a_i] = 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(C[3a_i] = 1\)&lt;/span&gt;，代表同时选两次/三次的，减掉这些方案数就可以了。然后需要注意顺序问题：&lt;/p&gt;
&lt;p&gt;选一把的答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，不难发现选两种的即为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{A^2(x) - B(x)}{2}\)&lt;/span&gt;，选三种的比较麻烦：不能同时选两种一样的，即减去 &lt;span class=&#34;math inline&#34;&gt;\(3A(x)B(x)\)&lt;/span&gt;，，但是选三种同样的又会被多减两次，最后除以 &lt;span class=&#34;math inline&#34;&gt;\(3!\)&lt;/span&gt; 去掉顺序问题，所以最终答案为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
A(x) + \frac{A^2(x) - B(x)}{2} + \frac{A^3(x) - 3A(x)B(x) + 2C(x)}{6}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;生成函数的卷积使用 NTT 或 FFT 优化即可。注意此时 NTT 模数要取一个更大的质数。&lt;strong&gt;不知道为什么生成函数能这样对应的可以意会一下多项式卷积的定义式以及这些系数的组合意义&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f1[maxn], f2[maxn], f3[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll g[maxn], t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read();&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = read();&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++f1[tmp], ++g[tmp], ++ans[tmp];&lt;/span&gt;
&lt;span id=&#34;cb15-11&#34;&gt;&lt;a href=&#34;#cb15-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++f2[tmp &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ++f3[tmp * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb15-12&#34;&gt;&lt;a href=&#34;#cb15-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-13&#34;&gt;&lt;a href=&#34;#cb15-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-14&#34;&gt;&lt;a href=&#34;#cb15-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= (&lt;span class=&#34;dv&#34;&gt;40000&lt;/span&gt; * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-15&#34;&gt;&lt;a href=&#34;#cb15-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-16&#34;&gt;&lt;a href=&#34;#cb15-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = (rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-17&#34;&gt;&lt;a href=&#34;#cb15-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f1, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-18&#34;&gt;&lt;a href=&#34;#cb15-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-19&#34;&gt;&lt;a href=&#34;#cb15-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = f1[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb15-20&#34;&gt;&lt;a href=&#34;#cb15-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-21&#34;&gt;&lt;a href=&#34;#cb15-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-22&#34;&gt;&lt;a href=&#34;#cb15-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += (g[i] - f2[i]) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-23&#34;&gt;&lt;a href=&#34;#cb15-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-24&#34;&gt;&lt;a href=&#34;#cb15-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-25&#34;&gt;&lt;a href=&#34;#cb15-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = f1[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb15-26&#34;&gt;&lt;a href=&#34;#cb15-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-27&#34;&gt;&lt;a href=&#34;#cb15-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-28&#34;&gt;&lt;a href=&#34;#cb15-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-29&#34;&gt;&lt;a href=&#34;#cb15-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f2[i] = f2[i] * f1[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb15-30&#34;&gt;&lt;a href=&#34;#cb15-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-31&#34;&gt;&lt;a href=&#34;#cb15-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-32&#34;&gt;&lt;a href=&#34;#cb15-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb15-33&#34;&gt;&lt;a href=&#34;#cb15-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += (g[i] - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * f2[i] + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * f3[i]) / &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-34&#34;&gt;&lt;a href=&#34;#cb15-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[i]) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, i, ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb15-35&#34;&gt;&lt;a href=&#34;#cb15-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-36&#34;&gt;&lt;a href=&#34;#cb15-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-37&#34;&gt;&lt;a href=&#34;#cb15-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;fftntt-与字符串匹配&#34;&gt;FFT/NTT 与字符串匹配&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;字符串下标从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 开始&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;最一般的情况&#34;&gt;最一般的情况&lt;/h4&gt;
&lt;p&gt;考虑文本串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和模式串 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，串长 &lt;span class=&#34;math inline&#34;&gt;\(n = |S|\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = |T|\)&lt;/span&gt;，保证 &lt;span class=&#34;math inline&#34;&gt;\(n \ge m\)&lt;/span&gt;，现在需要找出 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中出现的每个位置。直接跑 KMP 就可以了，但是这个不是要提的重点。考虑串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个字符为 &lt;span class=&#34;math inline&#34;&gt;\(S[i]\)&lt;/span&gt;，那么匹配就可以写成 &lt;span class=&#34;math inline&#34;&gt;\(S[i] - T[j] = 0\)&lt;/span&gt;，这个应该是比较好想的。&lt;/p&gt;
&lt;p&gt;假设 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位开始成功匹配，则我们有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^{m} (S[i + j - 1] - T[j])^2 = 0
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;为了防止正负号相互抵消，所以需要平方。由于 &lt;span class=&#34;math inline&#34;&gt;\(i + j - 1 + j\)&lt;/span&gt; 不是定值，不符合我们需要的卷积的形式，所以翻转一下 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 让其变为 &lt;span class=&#34;math inline&#34;&gt;\(T&amp;#39;\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^{m} (S[i + j - 1] - T[m - j + 1])^2 = 0
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;打开来我们就会发现&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^{m} (S[i + j - 1]^2 + T[j]^2 - 2S[i + j - 1]T[m - j + 1]) = 0
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(i + j - 1 + m - j + 1 = i + m\)&lt;/span&gt;，为定值。&lt;/p&gt;
&lt;p&gt;所以上面的式子就可以化成&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^m S[i + j - 1]^2 + \sum_{j = 1}^m T[j]^2 - 2\sum_{x + y = i + m}S[x]T[y]
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第一项直接前缀和就可以解决，第二项常数，第三项使用 FFT/NTT。&lt;/p&gt;
&lt;p&gt;更加好理解地，设 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = \sum_{i + j = x + m}S[i]T[j]\)&lt;/span&gt;，我们只需要求出这个 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;问题来了，这样难写复杂度高常数大全方位被 KMP 吊打的算法有什么存在的意义吗？对不起还真的有：&lt;/p&gt;
&lt;h4 id=&#34;带通配符的字符串匹配&#34;&gt;带通配符的字符串匹配&lt;/h4&gt;
&lt;p&gt;请看例题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P4173&#34;&gt;洛谷 P4173 残缺的字符串&lt;/a&gt;。仍然是字符串匹配，但是每个串都有&lt;strong&gt;通配符&lt;/strong&gt;，这个时候 KMP 就显得无能为力了。怎么办呢？好好思考一下两个字符如何才能匹配：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个字符完全一样&lt;/li&gt;
&lt;li&gt;其中至少一个为通配符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两者是逻辑或的关系，我们魔改一下上面的式子，不难发现我们只需要把通配符的值设为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 就可以解决了：&lt;/p&gt;
&lt;p&gt;定义匹配函数 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 位开始和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 是否匹配，匹配的话 &lt;span class=&#34;math inline&#34;&gt;\(F(x) = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{j = 1}^m(S[x + j - 1] - T[j])^2S[x + j - 1]T[j]
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;化简：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(x) &amp;amp;= \sum_{j = 1}^m(S[x + j - 1] - T[j])^2S[x + j - 1]T[j]\\
&amp;amp;= \sum_{j = 1}^m(S[x + j - 1] - T&amp;#39;[m - j + 1])^2S[x + j - 1]T&amp;#39;[m - j + 1]\\
&amp;amp;= \sum_{j = 1}^m(S[x + j - 1]^2 + T&amp;#39;[m - j + 1]^2 - 2S[x + j - 1]T&amp;#39;[m - j + 1])S[x + j - 1]T&amp;#39;[m - j + 1]\\
&amp;amp;= \sum_{j = 1}^m S[x + j - 1]^3T&amp;#39;[m - j + 1] + \sum_{j = 1}^m S[x + j - 1]T&amp;#39;[m - j + 1]^3- 2\sum_{j = 1}^m S[x + j - 1]^2T&amp;#39;[m - j + 1]^2\\
&amp;amp;= \sum_{i + j = x + m}S[i]^3T&amp;#39;[j] + \sum_{i + j = x + m}S[i]T&amp;#39;[j]^3 - 2\sum_{i + j = x + m}S[i]^2T[j]^2
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;于是问题就解决了，只需要用 NTT/FFT 计算出上面三项恶心的东西出来就 OK 了。一共进行 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt; 次 NTT 即可。&lt;/p&gt;
&lt;p&gt;需要注意的是最后枚举答案的时候只能枚举到 &lt;span class=&#34;math inline&#34;&gt;\(n - m + 1\)&lt;/span&gt; 处，否则只有 &lt;span class=&#34;math inline&#34;&gt;\(35\)&lt;/span&gt; 分。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], f2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], f3[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g3[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], vec[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], tot;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    m = readInt(), n = readInt();&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, b + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = (a[m - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;) ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : a[m - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g2[i] = g[i] * g[i], g3[i] = g2[i] * g[i];&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-17&#34;&gt;&lt;a href=&#34;#cb16-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb16-18&#34;&gt;&lt;a href=&#34;#cb16-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb16-19&#34;&gt;&lt;a href=&#34;#cb16-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = (b[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;) ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : b[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-20&#34;&gt;&lt;a href=&#34;#cb16-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f2[i] = f[i] * f[i], f3[i] = f2[i] * f[i];&lt;/span&gt;
&lt;span id=&#34;cb16-21&#34;&gt;&lt;a href=&#34;#cb16-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-22&#34;&gt;&lt;a href=&#34;#cb16-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-23&#34;&gt;&lt;a href=&#34;#cb16-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-24&#34;&gt;&lt;a href=&#34;#cb16-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(f3, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-25&#34;&gt;&lt;a href=&#34;#cb16-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g2, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g3, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-26&#34;&gt;&lt;a href=&#34;#cb16-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-27&#34;&gt;&lt;a href=&#34;#cb16-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f3[i] * g[i] % mod + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * g3[i] % mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f2[i] * g2[i] % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb16-28&#34;&gt;&lt;a href=&#34;#cb16-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(ans, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-29&#34;&gt;&lt;a href=&#34;#cb16-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-30&#34;&gt;&lt;a href=&#34;#cb16-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-31&#34;&gt;&lt;a href=&#34;#cb16-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[i + m] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-32&#34;&gt;&lt;a href=&#34;#cb16-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++cnt, vec[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb16-33&#34;&gt;&lt;a href=&#34;#cb16-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, cnt);&lt;/span&gt;
&lt;span id=&#34;cb16-34&#34;&gt;&lt;a href=&#34;#cb16-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, vec[i]);&lt;/span&gt;
&lt;span id=&#34;cb16-35&#34;&gt;&lt;a href=&#34;#cb16-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-36&#34;&gt;&lt;a href=&#34;#cb16-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;另外一道例题&#34;&gt;另外一道例题&lt;/h4&gt;
&lt;p&gt;请看 &lt;a href=&#34;https://www.luogu.com.cn/problem/CF528D&#34;&gt;CF528D Fuzzy Search&lt;/a&gt;。题意：字符串匹配，&lt;span class=&#34;math inline&#34;&gt;\(1\le |T| \le |S| \le 2\times 10^5\)&lt;/span&gt;，字符集只有 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{ATCG}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个位置出现当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\forall j\in [1,T]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\exists p\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(|i + j - 1 - p|\le k \land S[p] = T[j]\)&lt;/span&gt;。即偏移量不能超过 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到字符集很小，只有 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 个字符，所以我们可以把字符串 01 化，分开考虑每个字母。比如 &lt;span class=&#34;math inline&#34;&gt;\(S = \texttt{ATCGAA}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(T = \texttt{ACAA}\)&lt;/span&gt;，现在只考虑字母 &lt;span class=&#34;math inline&#34;&gt;\(\texttt A\)&lt;/span&gt;，把 &lt;span class=&#34;math inline&#34;&gt;\(\texttt A\)&lt;/span&gt; 化成 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 而其他的化为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(S = \texttt{100011}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(T= \texttt{1011}\)&lt;/span&gt;。然后假设 &lt;span class=&#34;math inline&#34;&gt;\(k = 1\)&lt;/span&gt;，把能扩展的都往两边扩展，则 &lt;span class=&#34;math inline&#34;&gt;\(S = \texttt{110111}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这个时候，我们就可以设匹配 &lt;span class=&#34;math inline&#34;&gt;\(F(x, c)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 位开始字符 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 能匹配的数量，最终答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x) = \sum_{c\in\lbrace\texttt{A,T,C,G}\rbrace}F(x,c)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 匹配成功当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(A(x) = m\)&lt;/span&gt;，即所有字符都匹配到了，否则失败。&lt;/p&gt;
&lt;p&gt;不难发现 &lt;span class=&#34;math inline&#34;&gt;\(F(x, c) = \sum_{j = 1}^mS[x + j - 1]T[j]\)&lt;/span&gt;，老套路翻转一下变为 &lt;span class=&#34;math inline&#34;&gt;\(F(x, c) = \sum_{j = 1}^m S[x + j - 1]T[m - j + 1] = \sum_{i + j = x + m}S[i]T[j]\)&lt;/span&gt;。这就是喜闻乐见的卷积形式了。NTT 直接上就完了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, k, lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; proc(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c)&lt;/span&gt;
&lt;span id=&#34;cb17-8&#34;&gt;&lt;a href=&#34;#cb17-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb17-9&#34;&gt;&lt;a href=&#34;#cb17-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(f, lim), clr(g, lim);&lt;/span&gt;
&lt;span id=&#34;cb17-10&#34;&gt;&lt;a href=&#34;#cb17-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, lst = -&lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb17-11&#34;&gt;&lt;a href=&#34;#cb17-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb17-12&#34;&gt;&lt;a href=&#34;#cb17-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == c)&lt;/span&gt;
&lt;span id=&#34;cb17-13&#34;&gt;&lt;a href=&#34;#cb17-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lst = i;&lt;/span&gt;
&lt;span id=&#34;cb17-14&#34;&gt;&lt;a href=&#34;#cb17-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i - lst &amp;lt;= k)&lt;/span&gt;
&lt;span id=&#34;cb17-15&#34;&gt;&lt;a href=&#34;#cb17-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-16&#34;&gt;&lt;a href=&#34;#cb17-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-17&#34;&gt;&lt;a href=&#34;#cb17-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = n, lst = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;; i; --i)&lt;/span&gt;
&lt;span id=&#34;cb17-18&#34;&gt;&lt;a href=&#34;#cb17-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb17-19&#34;&gt;&lt;a href=&#34;#cb17-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == c)&lt;/span&gt;
&lt;span id=&#34;cb17-20&#34;&gt;&lt;a href=&#34;#cb17-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lst = i;&lt;/span&gt;
&lt;span id=&#34;cb17-21&#34;&gt;&lt;a href=&#34;#cb17-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lst - i &amp;lt;= k)&lt;/span&gt;
&lt;span id=&#34;cb17-22&#34;&gt;&lt;a href=&#34;#cb17-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-23&#34;&gt;&lt;a href=&#34;#cb17-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-24&#34;&gt;&lt;a href=&#34;#cb17-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb17-25&#34;&gt;&lt;a href=&#34;#cb17-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = (t[m - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == c);&lt;/span&gt;
&lt;span id=&#34;cb17-26&#34;&gt;&lt;a href=&#34;#cb17-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-27&#34;&gt;&lt;a href=&#34;#cb17-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb17-28&#34;&gt;&lt;a href=&#34;#cb17-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb17-29&#34;&gt;&lt;a href=&#34;#cb17-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-30&#34;&gt;&lt;a href=&#34;#cb17-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb17-31&#34;&gt;&lt;a href=&#34;#cb17-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += f[i + m];&lt;/span&gt;
&lt;span id=&#34;cb17-32&#34;&gt;&lt;a href=&#34;#cb17-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-33&#34;&gt;&lt;a href=&#34;#cb17-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-34&#34;&gt;&lt;a href=&#34;#cb17-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb17-35&#34;&gt;&lt;a href=&#34;#cb17-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb17-36&#34;&gt;&lt;a href=&#34;#cb17-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = readInt(), m = readInt(), k = readInt();&lt;/span&gt;
&lt;span id=&#34;cb17-37&#34;&gt;&lt;a href=&#34;#cb17-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-38&#34;&gt;&lt;a href=&#34;#cb17-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-39&#34;&gt;&lt;a href=&#34;#cb17-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-40&#34;&gt;&lt;a href=&#34;#cb17-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) proc(&lt;span class=&#34;st&#34;&gt;&amp;quot;ATCG&amp;quot;&lt;/span&gt;[i]);&lt;/span&gt;
&lt;span id=&#34;cb17-41&#34;&gt;&lt;a href=&#34;#cb17-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-42&#34;&gt;&lt;a href=&#34;#cb17-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb17-43&#34;&gt;&lt;a href=&#34;#cb17-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cnt += (ans[i] == m);&lt;/span&gt;
&lt;span id=&#34;cb17-44&#34;&gt;&lt;a href=&#34;#cb17-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, cnt);&lt;/span&gt;
&lt;span id=&#34;cb17-45&#34;&gt;&lt;a href=&#34;#cb17-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-46&#34;&gt;&lt;a href=&#34;#cb17-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;关于封装&#34;&gt;关于封装&lt;/h2&gt;
&lt;p&gt;以后的全家桶会大量使用 NTT 等基础操作，考虑实现一个常数较小的且方便阅读的封装：&lt;/p&gt;
&lt;p&gt;首先是各种 &lt;code&gt;#define&lt;/code&gt;。由于我们在进行多项式运算的时候需要考虑界的问题，&lt;strong&gt;因此一定要把超过界了的给清零&lt;/strong&gt;，不然可能出现各种奇奇怪怪的问题比如多卷了之类的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define VEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)v.size();&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ll &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ull &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define clr&lt;/span&gt;(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memset(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;))&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;*&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(n))&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define cpy&lt;/span&gt;(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;g,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memcpy(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;g,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;))&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;*&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(n))&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define MOD &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;memset&lt;/code&gt; 和 &lt;code&gt;memcpy&lt;/code&gt; 的用法建议自己去查。&lt;/p&gt;
&lt;p&gt;接下来是一些基本的东西，下面我们使用 &lt;code&gt;vector&lt;/code&gt; 来实现多项式，这样子的好处是常数不大而且方便好写：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; G = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, mod = MOD, maxn = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;500&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; Poly;&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll a, ll b = mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a = a * a % mod)&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = a * ret % mod;&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; invG = qPow(G);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NTT 时需要用到的位逆序置换：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], revLim;&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getTr(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (revLim == n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    revLim = n;&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i] = (&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样子可以在需要进行很多次 NTT 的时候智能的求出对应需要的 &lt;code&gt;tr&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;NTT：&lt;strong&gt;关于 &lt;code&gt;static&lt;/code&gt; 关键字相关的建议自己查一下。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; NTT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *g, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; op, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getTr(n);&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; ull f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], w[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    w[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-5&#34;&gt;&lt;a href=&#34;#cb21-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = (((ll)mod &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) + g[&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i]]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-6&#34;&gt;&lt;a href=&#34;#cb21-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; l &amp;lt; n; l &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb21-7&#34;&gt;&lt;a href=&#34;#cb21-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ull tG = qPow(op ? G : invG, (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / (l &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb21-8&#34;&gt;&lt;a href=&#34;#cb21-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) w[i] = w[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * tG % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-9&#34;&gt;&lt;a href=&#34;#cb21-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; n; k += (l &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb21-10&#34;&gt;&lt;a href=&#34;#cb21-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; p &amp;lt; l; ++p) {&lt;/span&gt;
&lt;span id=&#34;cb21-11&#34;&gt;&lt;a href=&#34;#cb21-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tt = w[p] * f[k | l | p] % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-12&#34;&gt;&lt;a href=&#34;#cb21-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[k | l | p] = f[k | p] + mod - tt;&lt;/span&gt;
&lt;span id=&#34;cb21-13&#34;&gt;&lt;a href=&#34;#cb21-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[k | p] += tt;&lt;/span&gt;
&lt;span id=&#34;cb21-14&#34;&gt;&lt;a href=&#34;#cb21-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb21-15&#34;&gt;&lt;a href=&#34;#cb21-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb21-16&#34;&gt;&lt;a href=&#34;#cb21-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] %= mod;&lt;/span&gt;
&lt;span id=&#34;cb21-17&#34;&gt;&lt;a href=&#34;#cb21-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-18&#34;&gt;&lt;a href=&#34;#cb21-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!op) {&lt;/span&gt;
&lt;span id=&#34;cb21-19&#34;&gt;&lt;a href=&#34;#cb21-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ull invn = qPow(n);&lt;/span&gt;
&lt;span id=&#34;cb21-20&#34;&gt;&lt;a href=&#34;#cb21-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) g[i] = f[i] % mod * invn % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-21&#34;&gt;&lt;a href=&#34;#cb21-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) g[i] = f[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-22&#34;&gt;&lt;a href=&#34;#cb21-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中有几个需要注意的点。使用 &lt;code&gt;ull&lt;/code&gt; 是因为 &lt;code&gt;ull&lt;/code&gt; 可以大幅减少需要的取模操作，我们可以在迭代 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 次再取模，减少常数。而第五行则为去掉传进来的 &lt;span class=&#34;math inline&#34;&gt;\([x^i]g(x)\)&lt;/span&gt; 为负数时可能产生的影响。&lt;/p&gt;
&lt;p&gt;然后是 &lt;code&gt;poly&lt;/code&gt; 的常见运算，重载了之后会非常方便。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; mul(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *g, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-4&#34;&gt;&lt;a href=&#34;#cb22-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-5&#34;&gt;&lt;a href=&#34;#cb22-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-6&#34;&gt;&lt;a href=&#34;#cb22-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb22-7&#34;&gt;&lt;a href=&#34;#cb22-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A; C.resize(max(A.size(), B.size()));&lt;/span&gt;
&lt;span id=&#34;cb22-8&#34;&gt;&lt;a href=&#34;#cb22-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    VEC(i, B) C[i] = (C[i] + B[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-9&#34;&gt;&lt;a href=&#34;#cb22-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-10&#34;&gt;&lt;a href=&#34;#cb22-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-11&#34;&gt;&lt;a href=&#34;#cb22-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb22-12&#34;&gt;&lt;a href=&#34;#cb22-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A; C.resize(max(A.size(), B.size()));&lt;/span&gt;
&lt;span id=&#34;cb22-13&#34;&gt;&lt;a href=&#34;#cb22-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    VEC(i, B) C[i] = (C[i] + mod - B[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-14&#34;&gt;&lt;a href=&#34;#cb22-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-15&#34;&gt;&lt;a href=&#34;#cb22-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-16&#34;&gt;&lt;a href=&#34;#cb22-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb22-17&#34;&gt;&lt;a href=&#34;#cb22-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A;&lt;/span&gt;
&lt;span id=&#34;cb22-18&#34;&gt;&lt;a href=&#34;#cb22-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    VEC(i, A) C[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * c * C[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-19&#34;&gt;&lt;a href=&#34;#cb22-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-20&#34;&gt;&lt;a href=&#34;#cb22-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-21&#34;&gt;&lt;a href=&#34;#cb22-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-22&#34;&gt;&lt;a href=&#34;#cb22-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim;&lt;span class=&#34;co&#34;&gt;//代表多项式运算时的界&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-23&#34;&gt;&lt;a href=&#34;#cb22-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-24&#34;&gt;&lt;a href=&#34;#cb22-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb22-25&#34;&gt;&lt;a href=&#34;#cb22-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], b[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb22-26&#34;&gt;&lt;a href=&#34;#cb22-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(a, &amp;amp;A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], A.size());&lt;/span&gt;
&lt;span id=&#34;cb22-27&#34;&gt;&lt;a href=&#34;#cb22-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(b, &amp;amp;B[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], B.size());&lt;/span&gt;
&lt;span id=&#34;cb22-28&#34;&gt;&lt;a href=&#34;#cb22-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C; C.resize(min(lim, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(A.size() + B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)));&lt;/span&gt;
&lt;span id=&#34;cb22-29&#34;&gt;&lt;a href=&#34;#cb22-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; n &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(A.size() + B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); n &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-30&#34;&gt;&lt;a href=&#34;#cb22-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), NTT(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb22-31&#34;&gt;&lt;a href=&#34;#cb22-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mul(a, b, n), NTT(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb22-32&#34;&gt;&lt;a href=&#34;#cb22-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(&amp;amp;C[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], a, C.size());&lt;/span&gt;
&lt;span id=&#34;cb22-33&#34;&gt;&lt;a href=&#34;#cb22-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(a, n), clr(b, n);&lt;/span&gt;
&lt;span id=&#34;cb22-34&#34;&gt;&lt;a href=&#34;#cb22-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-35&#34;&gt;&lt;a href=&#34;#cb22-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式乘法逆&#34;&gt;多项式乘法逆&lt;/h2&gt;
&lt;h3 id=&#34;定义&#34;&gt;定义&lt;/h3&gt;
&lt;p&gt;当两个多项式 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 在每一项系数模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 时有 &lt;span class=&#34;math inline&#34;&gt;\(F(x)*G(x)\equiv 1\pmod{x^n}\)&lt;/span&gt; 时，称 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 互为乘法逆元。此处 &lt;span class=&#34;math inline&#34;&gt;\(\pmod{x^n}\)&lt;/span&gt; 代表次数高于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的项都不考虑。&lt;/p&gt;
&lt;p&gt;需要的前置知识：NTT。&lt;/p&gt;
&lt;h3 id=&#34;求法&#34;&gt;求法&lt;/h3&gt;
&lt;p&gt;考虑倍增。假设我们要求满足 &lt;span class=&#34;math inline&#34;&gt;\(F(x)*G(x)\equiv 1\pmod{x^k}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt;，并且已经求出了满足 &lt;span class=&#34;math inline&#34;&gt;\(F(x)*G&amp;#39;(x)\equiv1\pmod{x^{\lceil\frac x 2\rceil}}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(G&amp;#39;(x)\)&lt;/span&gt;。那么我们由 &lt;span class=&#34;math display&#34;&gt;\[
F(x)*G&amp;#39;(x)\equiv1\pmod{x^{\lceil\frac x 2\rceil}}
\]&lt;/span&gt; 必然可以推出 &lt;span class=&#34;math display&#34;&gt;\[
F(x)*G(x)\equiv1\pmod{x^{\lceil\frac x 2\rceil}}
\]&lt;/span&gt; 那么 &lt;span class=&#34;math display&#34;&gt;\[
G(x) \equiv G&amp;#39;(x)\pmod{x^{\lceil\frac x 2\rceil}}
\]&lt;/span&gt; 作差， &lt;span class=&#34;math display&#34;&gt;\[
G(x) - G&amp;#39;(x)\equiv 0\pmod{x^{\lceil\frac x2\rceil}}
\]&lt;/span&gt; 将两边同时平方，不难发现界会从 &lt;span class=&#34;math inline&#34;&gt;\(\lceil\frac n2\rceil\)&lt;/span&gt; 变为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
G^2(x) - 2G(x)G&amp;#39;(x) + G&amp;#39;^2(x)\equiv 0\pmod{x^n}
\]&lt;/span&gt; 现在要求的是 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt;，而我们发现 &lt;span class=&#34;math inline&#34;&gt;\(G^2(x)\)&lt;/span&gt; 不好处理，怎么办？同时乘以 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 就可以消掉一个 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
G(x) - 2G&amp;#39;(x) + G&amp;#39;^2(x)F(x)\equiv 0\pmod{x^n}
\]&lt;/span&gt; 所以我们得到了 &lt;span class=&#34;math display&#34;&gt;\[
G(x)\equiv 2G&amp;#39;(x) - G&amp;#39;^2(x)F(x)\pmod{x^n}
\]&lt;/span&gt; 根据这个，我们就可以从 &lt;span class=&#34;math inline&#34;&gt;\(G&amp;#39;(x)\)&lt;/span&gt; 推出 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 的值出来了。从上往下递归求解，到常数项的时候直接费马小定理求逆元然后一步步回溯上去。不难发现复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(T(n) = T(n/2) + O(n\log n)\)&lt;/span&gt;，由主定理知总复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-1&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;递归版多项式求逆，套用上面的板子：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyInv(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, Poly &amp;amp;B, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-3&#34;&gt;&lt;a href=&#34;#cb23-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) B.push_back(qPow(A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]));&lt;/span&gt;
&lt;span id=&#34;cb23-4&#34;&gt;&lt;a href=&#34;#cb23-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb23-5&#34;&gt;&lt;a href=&#34;#cb23-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyInv(A, B, --n);&lt;/span&gt;
&lt;span id=&#34;cb23-6&#34;&gt;&lt;a href=&#34;#cb23-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sav = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-7&#34;&gt;&lt;a href=&#34;#cb23-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sav = (sav + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * B[i] * A[n - i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb23-8&#34;&gt;&lt;a href=&#34;#cb23-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * sav * qPow(mod - A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) % mod);&lt;/span&gt;
&lt;span id=&#34;cb23-9&#34;&gt;&lt;a href=&#34;#cb23-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb23-10&#34;&gt;&lt;a href=&#34;#cb23-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyInv(A, B, n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb23-11&#34;&gt;&lt;a href=&#34;#cb23-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Poly sA; sA.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb23-12&#34;&gt;&lt;a href=&#34;#cb23-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cpy(&amp;amp;sA[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &amp;amp;A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], n);&lt;/span&gt;
&lt;span id=&#34;cb23-13&#34;&gt;&lt;a href=&#34;#cb23-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * B - B * B * sA;&lt;/span&gt;
&lt;span id=&#34;cb23-14&#34;&gt;&lt;a href=&#34;#cb23-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb23-15&#34;&gt;&lt;a href=&#34;#cb23-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb23-16&#34;&gt;&lt;a href=&#34;#cb23-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-17&#34;&gt;&lt;a href=&#34;#cb23-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb23-18&#34;&gt;&lt;a href=&#34;#cb23-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyInv(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb23-19&#34;&gt;&lt;a href=&#34;#cb23-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C; polyInv(A, C, A.size());&lt;/span&gt;
&lt;span id=&#34;cb23-20&#34;&gt;&lt;a href=&#34;#cb23-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb23-21&#34;&gt;&lt;a href=&#34;#cb23-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中把 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为奇数的情况进行了特判优化，调用就直接对下面的 &lt;code&gt;polyInv&lt;/code&gt; 函数传入一个 &lt;code&gt;vector&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2 id=&#34;多项式的导数积分复合&#34;&gt;多项式的导数/积分/复合&lt;/h2&gt;
&lt;p&gt;回顾一下一些基础的导数公式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(x) = e^x&amp;amp;\implies f&amp;#39;(x) = e^x\\
f(x) = \ln x&amp;amp;\implies f&amp;#39;(x) = \frac1x\\
f(x) = ax^k&amp;amp;\implies f&amp;#39;(x) = akx^{k - 1}\\
(f(x)\pm g(x))&amp;#39;&amp;amp;= f&amp;#39;(x)\pm g&amp;#39;(x)\\
(f(g(x)))&amp;#39; &amp;amp;=f&amp;#39;(g(x))\times g&amp;#39;(x)
\end{aligned}
\]&lt;/span&gt; 我们在这里定义一下多项式的求导： &lt;span class=&#34;math display&#34;&gt;\[
f(x) = \sum_{i = 0}^na_ix^i\implies f&amp;#39;(x) = \sum_{i = 0}^{n - 1}(i + 1)a_{i + 1}x^i
\]&lt;/span&gt; 积分为求导的逆运算： &lt;span class=&#34;math display&#34;&gt;\[
f(x) = \sum_{i = 0}^na_ix_i\implies\int f(x) \mathrm dx= \sum_{i = 1}^{n + 1}\frac{a_{i - 1}x^i}{i}
\]&lt;/span&gt; 所以多项式求导和求积分的代码就很容易写出来了，当然需要一开始线性预处理一下逆元。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; inv[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; initInv() {&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    inv[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, lim) inv[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * inv[mod % i] * (mod - mod / i) % mod;&lt;/span&gt;
&lt;span id=&#34;cb24-5&#34;&gt;&lt;a href=&#34;#cb24-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-6&#34;&gt;&lt;a href=&#34;#cb24-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb24-7&#34;&gt;&lt;a href=&#34;#cb24-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-8&#34;&gt;&lt;a href=&#34;#cb24-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly deri(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb24-9&#34;&gt;&lt;a href=&#34;#cb24-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A;&lt;/span&gt;
&lt;span id=&#34;cb24-10&#34;&gt;&lt;a href=&#34;#cb24-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)C.size(); ++i) C[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * C[i] * i % mod;&lt;/span&gt;
&lt;span id=&#34;cb24-11&#34;&gt;&lt;a href=&#34;#cb24-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!C.empty()) C.pop_back();&lt;/span&gt;
&lt;span id=&#34;cb24-12&#34;&gt;&lt;a href=&#34;#cb24-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb24-13&#34;&gt;&lt;a href=&#34;#cb24-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb24-14&#34;&gt;&lt;a href=&#34;#cb24-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-15&#34;&gt;&lt;a href=&#34;#cb24-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly ints(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb24-16&#34;&gt;&lt;a href=&#34;#cb24-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A;&lt;/span&gt;
&lt;span id=&#34;cb24-17&#34;&gt;&lt;a href=&#34;#cb24-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)C.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; --i)&lt;/span&gt;
&lt;span id=&#34;cb24-18&#34;&gt;&lt;a href=&#34;#cb24-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        C[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * C[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * inv[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb24-19&#34;&gt;&lt;a href=&#34;#cb24-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!C.empty()) C[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-20&#34;&gt;&lt;a href=&#34;#cb24-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb24-21&#34;&gt;&lt;a href=&#34;#cb24-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要非常注意传进来的多项式为空的情况，对空 &lt;code&gt;vector&lt;/code&gt; 进行调用 &lt;code&gt;pop_back()&lt;/code&gt; 和访问元素会直接 RE，需要注意。&lt;/p&gt;
&lt;p&gt;定义多项式的复合：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(g(x)) = \sum_{i = 0}f_i(g(x))^i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;应该比较好理解，直接把 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 代入即可。后面学习牛顿迭代的时候需要用到。&lt;/p&gt;
&lt;h2 id=&#34;牛顿迭代法&#34;&gt;牛顿迭代法&lt;/h2&gt;
&lt;p&gt;这节内容相当重要，是后面学习开根和 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 的基础，建议掌握好。&lt;/p&gt;
&lt;h3 id=&#34;牛迭求函数零点&#34;&gt;牛迭求函数零点&lt;/h3&gt;
&lt;p&gt;首先各位如果学过旧人教版选修 2-2 的话应该都有看到过牛顿迭代。&lt;/p&gt;
&lt;p&gt;牛顿迭代是一种求函数零点的方法。设初始近似值为 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt;，则我们有这点的切线方程 &lt;span class=&#34;math display&#34;&gt;\[
y = f&amp;#39;(x_0)(x - x_0) + f(x_0)
\]&lt;/span&gt; 令 &lt;span class=&#34;math inline&#34;&gt;\(y = 0\)&lt;/span&gt;，得 &lt;span class=&#34;math inline&#34;&gt;\(x = x_0 - \dfrac{f(x_0)}{f&amp;#39;(x_0)}\)&lt;/span&gt;。这样子我们就可以一直迭代下去，令 &lt;span class=&#34;math inline&#34;&gt;\(x_0\leftarrow x\)&lt;/span&gt;，就可以在很短的时间内很接近地得到 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的零点。&lt;/p&gt;
&lt;h3 id=&#34;泰勒展开&#34;&gt;泰勒展开&lt;/h3&gt;
&lt;p&gt;简单扯一扯吧，实际上就是使用多项式函数来拟合 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 啊 &lt;span class=&#34;math inline&#34;&gt;\(\sin\)&lt;/span&gt; 啊这类的函数（因为多项式真的方便啊），其原理就是在要求的函数 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 上找一个点 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt;，构造一个多项式 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 使得这个多项式在 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 处的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 阶导数都相等，随着 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 越来越大，拟合的效果就越来越好。&lt;/p&gt;
&lt;p&gt;泰勒展开的公式是长这样的：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) = \frac{f(x_0)}{0!}(x - x_0)^0 + \frac{f&amp;#39;(x_0)}{1!}(x - x_0)^1 + \frac{f&amp;#39;&amp;#39;(x_0)}{2!}(x - x_0)^2 + \cdots + \frac{f^{(n)}(x_0)}{n!}(x - x_0)^n + R_n(x)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;或者写成&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) \approx \sum_{i = 0}^n\frac{f^{(i)}(x_0)}{i!}(x - x_0)^i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(f^{(i)}(x_0)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 处的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 阶导数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x_0 = 0\)&lt;/span&gt; 时得到的级数就是麦克劳林级数，下面的东西需要牢记：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm e^x &amp;amp;= \sum_{k = 0}^\infty\frac{x^k}{k!}\\
\sin x &amp;amp;= x - \frac{x^3}{3!} + \frac{x^5}{5!} - \cdots + (-1)^n\frac{x^{2n - 1}}{(2n - 1)!} + \cdots\\
&amp;amp;= \sum_{i = 0}^\infty(-1)^i\frac{x^{2i - 1}}{(2i - 1)!}\\
\cos x &amp;amp;= 1 - \frac{x^2}{2!} + \frac{x^4}{4!} - \cdots + (-1)^n\frac{x^{2n}}{(2n)!}+\cdots\\
&amp;amp;= \sum_{i = 0}^\infty(-1)^i\frac{x^{2i}}{(2i)!}\\
\ln(1 + x) &amp;amp;= \sum_{i = 1}^\infty(-1)^{i - 1}\frac{x^i}{i}\\
\ln(1 - x) &amp;amp;= -\sum_{i = 1}^\infty\frac{x^i}{i}
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;多项式的 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 是如是定义的： &lt;span class=&#34;math display&#34;&gt;\[
\ln(1 - f(x)) = -\sum_{i = 1}^{+\infty}\frac{f^i(x)}{i}\\\ln(1 + f(x)) = \sum_{i = 1}^{+\infty}\frac{(-1)^{i - 1}f^i(x)}{i}
\]&lt;/span&gt; 多项式的 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 则是这样： &lt;span class=&#34;math display&#34;&gt;\[
\exp f(x) = e^{f(x)}=\sum_{i = 0}^{+\infty}\frac{f^i(x)}{i!}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;多项式牛迭&#34;&gt;多项式牛迭&lt;/h3&gt;
&lt;p&gt;现在要解决的是给定 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;，求满足 &lt;span class=&#34;math inline&#34;&gt;\(g(f(x))\equiv 0\pmod{x^n}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;（模 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 意义下）。&lt;/p&gt;
&lt;p&gt;考虑倍增。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 的时候，&lt;span class=&#34;math inline&#34;&gt;\([x^0]g(f(x)) = 0\)&lt;/span&gt; 的解要单独的算。&lt;/p&gt;
&lt;p&gt;假设已经求出了模 &lt;span class=&#34;math inline&#34;&gt;\(x^{\left\lceil\frac n 2\right\rceil}\)&lt;/span&gt; 意义下的解 &lt;span class=&#34;math inline&#34;&gt;\(f_0(x)\)&lt;/span&gt;，要求模 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(g(f(x))\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(f_0(x)\)&lt;/span&gt; 处泰勒展开，有： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 0}^{+\infty}\frac{g^{(i)}(f_0(x))}{i!}(f(x) - f_0(x))^i\equiv 0\pmod{x^n}
\]&lt;/span&gt; 因为 &lt;span class=&#34;math inline&#34;&gt;\(f(x) - f_0(x)\)&lt;/span&gt; 的最低非零项次数最低为 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\frac n 2\right\rceil\)&lt;/span&gt;，所以当 &lt;span class=&#34;math inline&#34;&gt;\(i\ge 2\)&lt;/span&gt; 时有 &lt;span class=&#34;math display&#34;&gt;\[
(f(x) - f_0(x))^i\equiv 0\pmod{x^n}
\]&lt;/span&gt; 所以泰勒展开的结果为 &lt;span class=&#34;math display&#34;&gt;\[
g(f_0(x)) + g&amp;#39;(f_0(x))(f(x) - f_0(x))\equiv 0\pmod{x^n}
\]&lt;/span&gt; 化简下来就是 &lt;span class=&#34;math display&#34;&gt;\[
f(x)\equiv f_0(x) - \frac{g(f_0(x))}{g&amp;#39;(f_0(x))}\pmod{x^n}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;应用&#34;&gt;应用&lt;/h3&gt;
&lt;p&gt;这个形式可能暂时看不出来有什么用，但是等一下涉及到 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 和多项式开根等操作时其就会发挥大作用。&lt;/p&gt;
&lt;h2 id=&#34;多项式对指开根&#34;&gt;多项式对指开根&lt;/h2&gt;
&lt;p&gt;建议先了解清楚高中数学必修 1 中的对数函数/指数函数/幂函数以及一些最基础的微积分知识（基础导数公式，泰勒展开）&lt;/p&gt;
&lt;h3 id=&#34;多项式-ln&#34;&gt;多项式 ln&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-1&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\equiv \ln A(x) \pmod{x^n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;由上文多项式对数的定义，&lt;strong&gt;多项式的对数仅在常数项为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时才有意义。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;求法-1&#34;&gt;求法&lt;/h4&gt;
&lt;p&gt;不管那么多了，直接求导再积分积回去就可以了：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(\ln A(x))&amp;#39; &amp;amp;= \frac{A&amp;#39;(x)}{A(x)}\\
\ln A(x) &amp;amp;= \int \frac{A&amp;#39;(x)}{A(x)}\mathrm{d}x
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;均在 &lt;span class=&#34;math inline&#34;&gt;\(\pmod{x^n}\)&lt;/span&gt; 意义下进行。所以我们只需求导，求逆，乘起来再积个分就可以了。&lt;/p&gt;
&lt;h4 id=&#34;实现-2&#34;&gt;实现&lt;/h4&gt;
&lt;p&gt;就一行，超级短。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyLn(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb25-2&#34;&gt;&lt;a href=&#34;#cb25-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ints(deri(A) * polyInv(A));&lt;/span&gt;
&lt;span id=&#34;cb25-3&#34;&gt;&lt;a href=&#34;#cb25-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4725&#34;&gt;洛谷 4725&lt;/a&gt; 的实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb26-6&#34;&gt;&lt;a href=&#34;#cb26-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lim = n; initInv();&lt;/span&gt;
&lt;span id=&#34;cb26-7&#34;&gt;&lt;a href=&#34;#cb26-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb26-8&#34;&gt;&lt;a href=&#34;#cb26-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb26-9&#34;&gt;&lt;a href=&#34;#cb26-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = polyLn(f);&lt;/span&gt;
&lt;span id=&#34;cb26-10&#34;&gt;&lt;a href=&#34;#cb26-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f);&lt;/span&gt;
&lt;span id=&#34;cb26-11&#34;&gt;&lt;a href=&#34;#cb26-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-12&#34;&gt;&lt;a href=&#34;#cb26-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;多项式-exp&#34;&gt;多项式 exp&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-2&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\equiv \exp A(x)\pmod{x^n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多项式的指数函数仅在常数项为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 时才有意义，&lt;/strong&gt;否则常数项将不收敛。&lt;/p&gt;
&lt;h4 id=&#34;求法-1-牛顿迭代&#34;&gt;求法 1 牛顿迭代&lt;/h4&gt;
&lt;p&gt;考虑使用牛顿迭代。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}B(x)&amp;amp;\equiv \exp A(x)&amp;amp;\pmod{x^n}\\\ln B(x) - A(x)&amp;amp;\equiv 0&amp;amp;\pmod{x^n}\\\end{aligned}
\]&lt;/span&gt; 现在我们把 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt; 看成一个常数，&lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 看成一个变量，则我们就是要求这个勾八东西的零点。令 &lt;span class=&#34;math inline&#34;&gt;\(G(B(x)) \equiv \ln B(x) - A(x)\pmod{x^n}\)&lt;/span&gt;，这个东西求导是 &lt;span class=&#34;math inline&#34;&gt;\(G&amp;#39;(B(x))\equiv \dfrac{1}{B(x)}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;套用一下上面的牛迭式子，假设我们已经搞定了模 &lt;span class=&#34;math inline&#34;&gt;\(x^{\left\lceil\frac n 2\right\rceil}\)&lt;/span&gt; 意义下的解 &lt;span class=&#34;math inline&#34;&gt;\(B_0(x)\)&lt;/span&gt;，要求模 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt;。然后就有了 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}B(x) &amp;amp;\equiv B_0(x) - \frac{G(B_0(x))}{G&amp;#39;(B_0(x))}\\&amp;amp;\equiv B_0(x) - (\ln B_0(x) - A(x))B_0(x)\\&amp;amp;\equiv B_0(x)(1 - \ln B_0(x) + A(x))\pmod{x^n}\end{aligned}
\]&lt;/span&gt; 这样子我们就成功的把递推式写出来了。&lt;/p&gt;
&lt;h4 id=&#34;实现-1-1&#34;&gt;实现 1&lt;/h4&gt;
&lt;p&gt;这种递归写起方便的就写递归好一点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyExp(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, Poly &amp;amp;B, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) B.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyExp(A, B, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); n -= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-6&#34;&gt;&lt;a href=&#34;#cb27-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sav = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-7&#34;&gt;&lt;a href=&#34;#cb27-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) sav = (sav + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * A[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod * B[n - i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb27-8&#34;&gt;&lt;a href=&#34;#cb27-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * sav * inv[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod);&lt;/span&gt;
&lt;span id=&#34;cb27-9&#34;&gt;&lt;a href=&#34;#cb27-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb27-10&#34;&gt;&lt;a href=&#34;#cb27-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyExp(A, B, n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb27-11&#34;&gt;&lt;a href=&#34;#cb27-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Poly lnB = B;&lt;/span&gt;
&lt;span id=&#34;cb27-12&#34;&gt;&lt;a href=&#34;#cb27-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        lnB.resize(n); lnB = polyLn(lnB);&lt;/span&gt;
&lt;span id=&#34;cb27-13&#34;&gt;&lt;a href=&#34;#cb27-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, lnB) lnB[i] = (mod + A[i] - lnB[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb27-14&#34;&gt;&lt;a href=&#34;#cb27-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++lnB[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb27-15&#34;&gt;&lt;a href=&#34;#cb27-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B = B * lnB;&lt;/span&gt;
&lt;span id=&#34;cb27-16&#34;&gt;&lt;a href=&#34;#cb27-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb27-17&#34;&gt;&lt;a href=&#34;#cb27-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb27-18&#34;&gt;&lt;a href=&#34;#cb27-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-19&#34;&gt;&lt;a href=&#34;#cb27-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb27-20&#34;&gt;&lt;a href=&#34;#cb27-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-21&#34;&gt;&lt;a href=&#34;#cb27-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyExp(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;f) {&lt;/span&gt;
&lt;span id=&#34;cb27-22&#34;&gt;&lt;a href=&#34;#cb27-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly ret;&lt;/span&gt;
&lt;span id=&#34;cb27-23&#34;&gt;&lt;a href=&#34;#cb27-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyExp(f, ret, f.size());&lt;/span&gt;
&lt;span id=&#34;cb27-24&#34;&gt;&lt;a href=&#34;#cb27-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb27-25&#34;&gt;&lt;a href=&#34;#cb27-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是需要注意的是，这个多项式 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 的常数还是比较大的，需要尽量减少其调用。&lt;/p&gt;
&lt;h4 id=&#34;求法-2-分治-fft&#34;&gt;求法 2 分治 FFT&lt;/h4&gt;
&lt;p&gt;分治 FFT 可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 的复杂度下以极优的常数（比一个 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 快）求出结果。暂时不想写，咕咕咕。&lt;/p&gt;
&lt;h3 id=&#34;多项式开根&#34;&gt;多项式开根&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-3&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定一个多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(B^2(x)\equiv A(x)\pmod{x^n}\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;求解&#34;&gt;求解&lt;/h4&gt;
&lt;p&gt;考虑使用牛顿迭代，令 &lt;span class=&#34;math inline&#34;&gt;\(f(B(x)) = B^2(x) - A(x)\pmod{x^n}\)&lt;/span&gt;。则 &lt;span class=&#34;math inline&#34;&gt;\(f&amp;#39;(B(x)) = 2B(x)\)&lt;/span&gt;，套牛迭式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}B(x) &amp;amp;\equiv B_0(x) - \frac{f(B_0(x))}{f&amp;#39;(B_0(x))}\\&amp;amp;\equiv B_0(x) - \frac{B_0^2(x) - A(x)}{2B_0(x)}\\&amp;amp;\equiv \frac{B_0^2(x) + A(x)}{2B_0(x)}\end{aligned}
\]&lt;/span&gt; 时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意一下如果常数项不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的话是需要二次剩余来求出答案的常数项的。&lt;/p&gt;
&lt;h4 id=&#34;实现-3&#34;&gt;实现&lt;/h4&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polySqrt(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, Poly &amp;amp;B, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (m == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.push_back(QuadResidue::cipolla(A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]));&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-6&#34;&gt;&lt;a href=&#34;#cb28-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polySqrt(A, B, (m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb28-7&#34;&gt;&lt;a href=&#34;#cb28-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    B.resize(m);&lt;/span&gt;
&lt;span id=&#34;cb28-8&#34;&gt;&lt;a href=&#34;#cb28-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly invB = polyInv(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * B), sA(A.begin(), A.begin() + m);&lt;/span&gt;
&lt;span id=&#34;cb28-9&#34;&gt;&lt;a href=&#34;#cb28-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    B = qPow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) * B + invB * sA;&lt;/span&gt;
&lt;span id=&#34;cb28-10&#34;&gt;&lt;a href=&#34;#cb28-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-11&#34;&gt;&lt;a href=&#34;#cb28-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb28-12&#34;&gt;&lt;a href=&#34;#cb28-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-13&#34;&gt;&lt;a href=&#34;#cb28-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polySqrt(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb28-14&#34;&gt;&lt;a href=&#34;#cb28-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C; polySqrt(A, C, A.size());&lt;/span&gt;
&lt;span id=&#34;cb28-15&#34;&gt;&lt;a href=&#34;#cb28-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb28-16&#34;&gt;&lt;a href=&#34;#cb28-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用-1-多项式快速幂&#34;&gt;应用 1 多项式快速幂&lt;/h3&gt;
&lt;p&gt;分两种情况。第一种 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x) = 1\)&lt;/span&gt;，此时我们不难发现 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}g(x) &amp;amp;\equiv f^k(x)\\\ln g(x) &amp;amp;\equiv k\ln f(x)\\g(x) &amp;amp;\equiv \exp(k\ln f(x))\pmod{x^n}\end{aligned}
\]&lt;/span&gt; 然后就一个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，乘上 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，再 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 一下，这题就做完了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb29&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb29-1&#34;&gt;&lt;a href=&#34;#cb29-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb29-2&#34;&gt;&lt;a href=&#34;#cb29-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k;&lt;/span&gt;
&lt;span id=&#34;cb29-3&#34;&gt;&lt;a href=&#34;#cb29-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb29-4&#34;&gt;&lt;a href=&#34;#cb29-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-5&#34;&gt;&lt;a href=&#34;#cb29-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb29-6&#34;&gt;&lt;a href=&#34;#cb29-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(s); f.resize(lim = n);&lt;/span&gt;
&lt;span id=&#34;cb29-7&#34;&gt;&lt;a href=&#34;#cb29-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; s[i]; ++i) k = (&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k + s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb29-8&#34;&gt;&lt;a href=&#34;#cb29-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb29-9&#34;&gt;&lt;a href=&#34;#cb29-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initInv();&lt;/span&gt;
&lt;span id=&#34;cb29-10&#34;&gt;&lt;a href=&#34;#cb29-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = polyExp(k * polyLn(f));&lt;/span&gt;
&lt;span id=&#34;cb29-11&#34;&gt;&lt;a href=&#34;#cb29-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f);&lt;/span&gt;
&lt;span id=&#34;cb29-12&#34;&gt;&lt;a href=&#34;#cb29-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-13&#34;&gt;&lt;a href=&#34;#cb29-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二种情况 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x) \not= 1\)&lt;/span&gt;，此时我们应该做的，就是创造条件强上。&lt;/p&gt;
&lt;p&gt;怎么上呢？当 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x)\not= 0\)&lt;/span&gt; 时，我们就直接： &lt;span class=&#34;math display&#34;&gt;\[
f^k(x)\equiv \left(\frac{f(x)}{[x^0]f(x)} \right)^k\times \left([x^0]f(x)\right)^k
\]&lt;/span&gt; 当 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x) = 0\)&lt;/span&gt; 时，我们就把多项式平移一下，然后强行按上面上，最后平移回去就可以了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb30&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb30-1&#34;&gt;&lt;a href=&#34;#cb30-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb30-2&#34;&gt;&lt;a href=&#34;#cb30-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, k2;&lt;/span&gt;
&lt;span id=&#34;cb30-3&#34;&gt;&lt;a href=&#34;#cb30-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-4&#34;&gt;&lt;a href=&#34;#cb30-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-5&#34;&gt;&lt;a href=&#34;#cb30-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb30-6&#34;&gt;&lt;a href=&#34;#cb30-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(s);&lt;/span&gt;
&lt;span id=&#34;cb30-7&#34;&gt;&lt;a href=&#34;#cb30-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb30-8&#34;&gt;&lt;a href=&#34;#cb30-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb30-9&#34;&gt;&lt;a href=&#34;#cb30-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-10&#34;&gt;&lt;a href=&#34;#cb30-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-11&#34;&gt;&lt;a href=&#34;#cb30-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (f[p] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; p &amp;lt; n) ++p;&lt;/span&gt;
&lt;span id=&#34;cb30-12&#34;&gt;&lt;a href=&#34;#cb30-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-13&#34;&gt;&lt;a href=&#34;#cb30-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; s[i]; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb30-14&#34;&gt;&lt;a href=&#34;#cb30-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        k = (&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k + s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb30-15&#34;&gt;&lt;a href=&#34;#cb30-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        k2 = (&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k2 + s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) % (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb30-16&#34;&gt;&lt;a href=&#34;#cb30-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k * p &amp;gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb30-17&#34;&gt;&lt;a href=&#34;#cb30-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb30-18&#34;&gt;&lt;a href=&#34;#cb30-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-19&#34;&gt;&lt;a href=&#34;#cb30-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb30-20&#34;&gt;&lt;a href=&#34;#cb30-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-21&#34;&gt;&lt;a href=&#34;#cb30-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-22&#34;&gt;&lt;a href=&#34;#cb30-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lim = n = n - p * k, initInv();&lt;/span&gt;
&lt;span id=&#34;cb30-23&#34;&gt;&lt;a href=&#34;#cb30-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-24&#34;&gt;&lt;a href=&#34;#cb30-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = qPow(f[p], MOD - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;), v = qPow(f[p], k2);&lt;/span&gt;
&lt;span id=&#34;cb30-25&#34;&gt;&lt;a href=&#34;#cb30-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i + p] * u % mod;&lt;/span&gt;
&lt;span id=&#34;cb30-26&#34;&gt;&lt;a href=&#34;#cb30-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(&amp;amp;f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + n, p * k);&lt;/span&gt;
&lt;span id=&#34;cb30-27&#34;&gt;&lt;a href=&#34;#cb30-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = v * polyExp(k * polyLn(f));&lt;/span&gt;
&lt;span id=&#34;cb30-28&#34;&gt;&lt;a href=&#34;#cb30-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p * k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb30-29&#34;&gt;&lt;a href=&#34;#cb30-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f);&lt;/span&gt;
&lt;span id=&#34;cb30-30&#34;&gt;&lt;a href=&#34;#cb30-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-31&#34;&gt;&lt;a href=&#34;#cb30-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用-2-ln-的组合意义&#34;&gt;应用 2 ln 的组合意义&lt;/h3&gt;
&lt;p&gt;看例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4841&#34;&gt;洛谷 P4841 [集训队作业2013]城市规划&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的有标号无向连通图的个数 &lt;span class=&#34;math inline&#34;&gt;\(\bmod 1004535809\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;可以先不考虑标号，最后得到的答案乘以 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;然后不考虑联通的话，&lt;span class=&#34;math inline&#34;&gt;\(g_n = 2^{\binom n 2}\)&lt;/span&gt;，即考虑每条边选还是不选，设联通的情况的方案数为 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;构造一下联通的 EGF：&lt;span class=&#34;math inline&#34;&gt;\(F(x) = \displaystyle\sum_{i = 0}^\infty f_i\frac{x^i}{i!}\)&lt;/span&gt;，不连通的类似：&lt;span class=&#34;math inline&#34;&gt;\(G(x) = \displaystyle\sum_{i = 0}^\infty g_i\frac{x^i}{i!}\)&lt;/span&gt;。根据 EGF 的性质发现 &lt;span class=&#34;math inline&#34;&gt;\(G(x) = \mathrm e^{F(x)}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以求个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;配合封装过的 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 是这样的：（upd：下面的代码未更新新的封装，请看准了食用）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb31&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb31-1&#34;&gt;&lt;a href=&#34;#cb31-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyln(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb31-2&#34;&gt;&lt;a href=&#34;#cb31-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb31-3&#34;&gt;&lt;a href=&#34;#cb31-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; invf[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb31-4&#34;&gt;&lt;a href=&#34;#cb31-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-5&#34;&gt;&lt;a href=&#34;#cb31-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt; m &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-6&#34;&gt;&lt;a href=&#34;#cb31-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initinv(lim);&lt;/span&gt;
&lt;span id=&#34;cb31-7&#34;&gt;&lt;a href=&#34;#cb31-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(invf, f, m);&lt;/span&gt;
&lt;span id=&#34;cb31-8&#34;&gt;&lt;a href=&#34;#cb31-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    invpoly(invf, m);&lt;/span&gt;
&lt;span id=&#34;cb31-9&#34;&gt;&lt;a href=&#34;#cb31-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    derivate(f, m);&lt;/span&gt;
&lt;span id=&#34;cb31-10&#34;&gt;&lt;a href=&#34;#cb31-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(invf, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb31-11&#34;&gt;&lt;a href=&#34;#cb31-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb31-12&#34;&gt;&lt;a href=&#34;#cb31-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * invf[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb31-13&#34;&gt;&lt;a href=&#34;#cb31-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb31-14&#34;&gt;&lt;a href=&#34;#cb31-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    intergrate(f, m);&lt;/span&gt;
&lt;span id=&#34;cb31-15&#34;&gt;&lt;a href=&#34;#cb31-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(invf, lim);&lt;/span&gt;
&lt;span id=&#34;cb31-16&#34;&gt;&lt;a href=&#34;#cb31-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(f + m, lim - m);&lt;/span&gt;
&lt;span id=&#34;cb31-17&#34;&gt;&lt;a href=&#34;#cb31-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb31-18&#34;&gt;&lt;a href=&#34;#cb31-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb31-19&#34;&gt;&lt;a href=&#34;#cb31-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], invf[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb31-20&#34;&gt;&lt;a href=&#34;#cb31-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fact[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb31-21&#34;&gt;&lt;a href=&#34;#cb31-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb31-22&#34;&gt;&lt;a href=&#34;#cb31-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb31-23&#34;&gt;&lt;a href=&#34;#cb31-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb31-24&#34;&gt;&lt;a href=&#34;#cb31-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb31-25&#34;&gt;&lt;a href=&#34;#cb31-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb31-26&#34;&gt;&lt;a href=&#34;#cb31-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = readInt();&lt;/span&gt;
&lt;span id=&#34;cb31-27&#34;&gt;&lt;a href=&#34;#cb31-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fact[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-28&#34;&gt;&lt;a href=&#34;#cb31-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb31-29&#34;&gt;&lt;a href=&#34;#cb31-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fact[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * fact[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i % mod,&lt;/span&gt;
&lt;span id=&#34;cb31-30&#34;&gt;&lt;a href=&#34;#cb31-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * qpow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * i * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * qpow(fact[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb31-31&#34;&gt;&lt;a href=&#34;#cb31-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyln(f, n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb31-32&#34;&gt;&lt;a href=&#34;#cb31-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[n] * fact[n] % mod);&lt;/span&gt;
&lt;span id=&#34;cb31-33&#34;&gt;&lt;a href=&#34;#cb31-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-34&#34;&gt;&lt;a href=&#34;#cb31-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用-3-配合生成函数推式子&#34;&gt;应用 3 配合生成函数推式子&lt;/h3&gt;
&lt;p&gt;请看 &lt;a href=&#34;https://www.luogu.com.cn/problem/P4389&#34;&gt;P4389 付公主的背包&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;设容量为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的物品的个数为 &lt;span class=&#34;math inline&#34;&gt;\(k_i\)&lt;/span&gt; 个，则其生成函数为 &lt;span class=&#34;math display&#34;&gt;\[
A_i(x) =  \left(\sum_{j = 0}^{+\infty}x^{ji}\right)^{k_i} =\left(\frac{1}{1 - x^i}\right)^{k_i}
\]&lt;/span&gt; 所以我们要求的就是 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = \prod_{i = 1}^n A_i(x)
\]&lt;/span&gt; 的每项系数。暴力乘起来是 &lt;span class=&#34;math inline&#34;&gt;\(O(nm\log n)\)&lt;/span&gt; 的，无法通过本题。&lt;/p&gt;
&lt;p&gt;我们试一下求个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，则我们有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(x) &amp;amp;= \prod_{i = 1}^nA_i(x)\\
\ln f(x) &amp;amp;= \sum_{i = 1}^n\ln A_i(x)\\
\ln f(x) &amp;amp;= \sum_{i = 1}^nk_i(\ln 1 - \ln(1 - x^i))\\
\ln f(x) &amp;amp;= -\sum_{i = 1}^nk_i\ln(1 - x^i)
\end{aligned}
\]&lt;/span&gt; 然后我们注意到这个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 的形式，回顾一下上面讲过的一个式子： &lt;span class=&#34;math display&#34;&gt;\[
\ln(1 - x) = -\sum_{m = 1}^{+\infty}\frac{x^{m}}{m}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\ln f(x) &amp;amp;= \sum_{i = 1}^nk_i\sum_{j = 1}^{+\infty}\frac{x^{ij}}{j}
\end{aligned}
\]&lt;/span&gt; 然后问题就转化为了求 &lt;span class=&#34;math display&#34;&gt;\[
\exp\left(\sum_{i = 1}^nk_i\sum_{j = 1}^{+\infty}\frac{x^{ij}}{j} \right)
\]&lt;/span&gt; 里面的东西可以 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log m)\)&lt;/span&gt; 算，总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log m)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb32&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb32-1&#34;&gt;&lt;a href=&#34;#cb32-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, cnt[maxn];&lt;/span&gt;
&lt;span id=&#34;cb32-2&#34;&gt;&lt;a href=&#34;#cb32-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb32-3&#34;&gt;&lt;a href=&#34;#cb32-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-4&#34;&gt;&lt;a href=&#34;#cb32-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb32-5&#34;&gt;&lt;a href=&#34;#cb32-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb32-6&#34;&gt;&lt;a href=&#34;#cb32-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(lim = m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb32-7&#34;&gt;&lt;a href=&#34;#cb32-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initInv();&lt;/span&gt;
&lt;span id=&#34;cb32-8&#34;&gt;&lt;a href=&#34;#cb32-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb32-9&#34;&gt;&lt;a href=&#34;#cb32-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp; read(tmp);&lt;/span&gt;
&lt;span id=&#34;cb32-10&#34;&gt;&lt;a href=&#34;#cb32-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++cnt[tmp];&lt;/span&gt;
&lt;span id=&#34;cb32-11&#34;&gt;&lt;a href=&#34;#cb32-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb32-12&#34;&gt;&lt;a href=&#34;#cb32-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb32-13&#34;&gt;&lt;a href=&#34;#cb32-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb32-14&#34;&gt;&lt;a href=&#34;#cb32-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i; j &amp;lt;= m; j += i) {&lt;/span&gt;
&lt;span id=&#34;cb32-15&#34;&gt;&lt;a href=&#34;#cb32-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[j] += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * cnt[i] * inv[j / i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb32-16&#34;&gt;&lt;a href=&#34;#cb32-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[j] &amp;gt; mod) f[j] -= mod;&lt;/span&gt;
&lt;span id=&#34;cb32-17&#34;&gt;&lt;a href=&#34;#cb32-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb32-18&#34;&gt;&lt;a href=&#34;#cb32-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb32-19&#34;&gt;&lt;a href=&#34;#cb32-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb32-20&#34;&gt;&lt;a href=&#34;#cb32-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = polyExp(f);&lt;/span&gt;
&lt;span id=&#34;cb32-21&#34;&gt;&lt;a href=&#34;#cb32-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) print(f[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb32-22&#34;&gt;&lt;a href=&#34;#cb32-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb32-23&#34;&gt;&lt;a href=&#34;#cb32-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式带余除法&#34;&gt;多项式带余除法&lt;/h2&gt;
&lt;h3 id=&#34;问题描述-4&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;给定多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;。求 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 除以 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 的商 &lt;span class=&#34;math inline&#34;&gt;\(Q(x)\)&lt;/span&gt; 和余数 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若令 &lt;span class=&#34;math inline&#34;&gt;\(n = \deg f\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = \deg g\)&lt;/span&gt;，则要求满足 &lt;span class=&#34;math inline&#34;&gt;\(\deg Q = n - m\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\deg R &amp;lt; m\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;问题求解&#34;&gt;问题求解&lt;/h3&gt;
&lt;p&gt;最关键的问题就是 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;，如果我们能把 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt; 的影响消去，那么就可以直接求逆来求出 &lt;span class=&#34;math inline&#34;&gt;\(Q(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(n = \deg f\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = \deg g\)&lt;/span&gt;。主要思想是构造 &lt;span class=&#34;math display&#34;&gt;\[
f^R(x) = x^nf\left(\frac1x\right)
\]&lt;/span&gt; 然后不难发现这个东西的实质就是反转 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的系数。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = Q(x)g(x) + R(x)\)&lt;/span&gt; 中的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 换成 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac 1x\)&lt;/span&gt; 进行化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}f\left(\frac1x\right) &amp;amp;= Q\left(\frac1x\right)g\left(\frac1x\right) + R\left(\frac1x\right)\\x^nf\left(\frac1x\right) &amp;amp;= x^{n - m}Q\left(\frac1x\right)x^mg\left(\frac1x\right) + x^{n - m + 1}x^{m - 1}R\left(\frac1x\right)\\f^R(x)&amp;amp;=Q^R(x)g^R(x) + x^{n - m + 1}R^R(x)\\f^R(x)&amp;amp;\equiv Q^R(x)g^R(x)\pmod{x^{n - m + 1}}\end{aligned}
\]&lt;/span&gt; 所以我们可以用求逆求出 &lt;span class=&#34;math inline&#34;&gt;\(Q(x)\)&lt;/span&gt;，然后回代就可以求出 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-4&#34;&gt;实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb33&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb33-1&#34;&gt;&lt;a href=&#34;#cb33-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyDiv(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B, Poly &amp;amp;Q, Poly &amp;amp;R) {&lt;/span&gt;
&lt;span id=&#34;cb33-2&#34;&gt;&lt;a href=&#34;#cb33-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly rA = A, rB = B;&lt;/span&gt;
&lt;span id=&#34;cb33-3&#34;&gt;&lt;a href=&#34;#cb33-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    reverse(rA), reverse(rB);&lt;/span&gt;
&lt;span id=&#34;cb33-4&#34;&gt;&lt;a href=&#34;#cb33-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = A.size(), m = B.size();&lt;/span&gt;
&lt;span id=&#34;cb33-5&#34;&gt;&lt;a href=&#34;#cb33-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rA.resize(n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), rB.resize(n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb33-6&#34;&gt;&lt;a href=&#34;#cb33-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Q = rA * polyInv(rB), Q.resize(n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), reverse(Q);&lt;/span&gt;
&lt;span id=&#34;cb33-7&#34;&gt;&lt;a href=&#34;#cb33-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    R = A - B * Q, R.resize(m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb33-8&#34;&gt;&lt;a href=&#34;#cb33-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb33-9&#34;&gt;&lt;a href=&#34;#cb33-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主函数调用：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb34&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb34-1&#34;&gt;&lt;a href=&#34;#cb34-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb34-2&#34;&gt;&lt;a href=&#34;#cb34-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f, g, R, Q;&lt;/span&gt;
&lt;span id=&#34;cb34-3&#34;&gt;&lt;a href=&#34;#cb34-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-4&#34;&gt;&lt;a href=&#34;#cb34-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb34-5&#34;&gt;&lt;a href=&#34;#cb34-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb34-6&#34;&gt;&lt;a href=&#34;#cb34-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(++n), g.resize(++m);&lt;/span&gt;
&lt;span id=&#34;cb34-7&#34;&gt;&lt;a href=&#34;#cb34-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lim = n;&lt;/span&gt;
&lt;span id=&#34;cb34-8&#34;&gt;&lt;a href=&#34;#cb34-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb34-9&#34;&gt;&lt;a href=&#34;#cb34-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(g[i]);&lt;/span&gt;
&lt;span id=&#34;cb34-10&#34;&gt;&lt;a href=&#34;#cb34-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyDiv(f, g, Q, R);&lt;/span&gt;
&lt;span id=&#34;cb34-11&#34;&gt;&lt;a href=&#34;#cb34-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(Q);&lt;/span&gt;
&lt;span id=&#34;cb34-12&#34;&gt;&lt;a href=&#34;#cb34-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(R);&lt;/span&gt;
&lt;span id=&#34;cb34-13&#34;&gt;&lt;a href=&#34;#cb34-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-14&#34;&gt;&lt;a href=&#34;#cb34-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式三角函数反三角函数&#34;&gt;多项式三角函数/反三角函数&lt;/h2&gt;
&lt;p&gt;感觉这东西没什么用。。。&lt;/p&gt;
&lt;h3 id=&#34;多项式三角函数&#34;&gt;多项式三角函数&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-5&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;，求模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(\sin f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\cos f(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;式子推导&#34;&gt;式子推导&lt;/h4&gt;
&lt;p&gt;欧拉公式： &lt;span class=&#34;math display&#34;&gt;\[
e^{i\theta} = \cos \theta + i\sin\theta
\]&lt;/span&gt; 用诱导公式日一通之后可以得到 &lt;span class=&#34;math display&#34;&gt;\[
e^{i(-\theta)} = \cos\theta - i\sin\theta
\]&lt;/span&gt; 由上面两个式子就可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sin\theta &amp;amp;= \frac{e^{i\theta} - e^{-i\theta}}{2i}\\
\cos\theta &amp;amp;= \frac{e^{i\theta} + e^{-i\theta}}{2}
\end{aligned}
\]&lt;/span&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 带进去： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sin f(x) &amp;amp;= \frac{\exp(if(x)) - \exp(-if(x))}{2i}\\
\cos f(x) &amp;amp;= \frac{\exp(if(x)) + \exp(-if(x))}{2}
\end{aligned}
\]&lt;/span&gt; 现在看来似乎直接 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 就可以做完了，然而 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 是什么东西呢？&lt;/p&gt;
&lt;p&gt;回顾一下在复数域下，我们有 &lt;span class=&#34;math inline&#34;&gt;\(i^2 = -1\)&lt;/span&gt;。放在 &lt;span class=&#34;math inline&#34;&gt;\(\mathbb Z_{998244353}\)&lt;/span&gt; 下不就是 &lt;span class=&#34;math inline&#34;&gt;\(i^2\equiv 998244352\pmod{998244353}\)&lt;/span&gt;。取 &lt;span class=&#34;math inline&#34;&gt;\(998244352\)&lt;/span&gt; 的一个二次剩余 &lt;span class=&#34;math inline&#34;&gt;\(86583718\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h4 id=&#34;实现-5&#34;&gt;实现&lt;/h4&gt;
&lt;p&gt;注意一下我们能尽量少求 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 就少求 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt;（有 &lt;span class=&#34;math inline&#34;&gt;\(\exp(-if(x)) = (\exp(if(x)))^{-1}\)&lt;/span&gt;），可以很大程度地优化常数&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb35&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb35-1&#34;&gt;&lt;a href=&#34;#cb35-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polySin(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb35-2&#34;&gt;&lt;a href=&#34;#cb35-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly tmp = polyExp(imgunit * A);&lt;/span&gt;
&lt;span id=&#34;cb35-3&#34;&gt;&lt;a href=&#34;#cb35-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * imgunit % mod) * (tmp - polyInv(tmp));&lt;/span&gt;
&lt;span id=&#34;cb35-4&#34;&gt;&lt;a href=&#34;#cb35-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-5&#34;&gt;&lt;a href=&#34;#cb35-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-6&#34;&gt;&lt;a href=&#34;#cb35-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyCos(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb35-7&#34;&gt;&lt;a href=&#34;#cb35-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly tmp = polyExp(imgunit * A);&lt;/span&gt;
&lt;span id=&#34;cb35-8&#34;&gt;&lt;a href=&#34;#cb35-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) * (tmp + polyInv(tmp));&lt;/span&gt;
&lt;span id=&#34;cb35-9&#34;&gt;&lt;a href=&#34;#cb35-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;超级短。。。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb36&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb36-1&#34;&gt;&lt;a href=&#34;#cb36-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, type;&lt;/span&gt;
&lt;span id=&#34;cb36-2&#34;&gt;&lt;a href=&#34;#cb36-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb36-3&#34;&gt;&lt;a href=&#34;#cb36-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-4&#34;&gt;&lt;a href=&#34;#cb36-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb36-5&#34;&gt;&lt;a href=&#34;#cb36-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(type);&lt;/span&gt;
&lt;span id=&#34;cb36-6&#34;&gt;&lt;a href=&#34;#cb36-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(lim = n), initInv();&lt;/span&gt;
&lt;span id=&#34;cb36-7&#34;&gt;&lt;a href=&#34;#cb36-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb36-8&#34;&gt;&lt;a href=&#34;#cb36-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(type ? polyCos(f) : polySin(f));&lt;/span&gt;
&lt;span id=&#34;cb36-9&#34;&gt;&lt;a href=&#34;#cb36-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-10&#34;&gt;&lt;a href=&#34;#cb36-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;多项式反三角函数&#34;&gt;多项式反三角函数&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-6&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;，求模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(\arcsin f(x)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\arccos f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\arctan f(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;式子推导-1&#34;&gt;式子推导&lt;/h4&gt;
&lt;p&gt;首先需要知道 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\arcsin&amp;#39;x &amp;amp;= \frac{1}{\sqrt{1 - x^2}}\\
\arccos&amp;#39;x &amp;amp;= -\frac{1}{\sqrt{1 - x^2}}\\
\arctan&amp;#39;x &amp;amp;= \frac{1}{1 + x^2}
\end{aligned}
\]&lt;/span&gt; 然后类似 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，先求求导后积分我们就可以得到： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\arcsin f(x) &amp;amp;= \int\frac{f&amp;#39;(x)}{\sqrt{1 - f^2(x)}}\\
\arccos f(x) &amp;amp;= -\int\frac{f&amp;#39;(x)}{\sqrt{1 - f^2(x)}}\\
\arctan f(x) &amp;amp;= \int\frac{f&amp;#39;(x)}{1 + f^2(x)}
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;实现-6&#34;&gt;实现&lt;/h4&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb37&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb37-1&#34;&gt;&lt;a href=&#34;#cb37-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyAsin(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb37-2&#34;&gt;&lt;a href=&#34;#cb37-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly one; one.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-3&#34;&gt;&lt;a href=&#34;#cb37-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ints(deri(A) * polyInv(polySqrt(one - A * A)));&lt;/span&gt;
&lt;span id=&#34;cb37-4&#34;&gt;&lt;a href=&#34;#cb37-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-5&#34;&gt;&lt;a href=&#34;#cb37-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-6&#34;&gt;&lt;a href=&#34;#cb37-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyAtan(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb37-7&#34;&gt;&lt;a href=&#34;#cb37-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly one; one.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-8&#34;&gt;&lt;a href=&#34;#cb37-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ints(deri(A) * polyInv(one + A * A));&lt;/span&gt;
&lt;span id=&#34;cb37-9&#34;&gt;&lt;a href=&#34;#cb37-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vector&lt;/code&gt; 封装的优势得到体现。&lt;/p&gt;
&lt;h2 id=&#34;拉格朗日插值&#34;&gt;拉格朗日插值&lt;/h2&gt;
&lt;h3 id=&#34;问题背景&#34;&gt;问题背景&lt;/h3&gt;
&lt;p&gt;给出 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\((x_i,y_i)\)&lt;/span&gt;，令这 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点确定的多项式为 &lt;span class=&#34;math inline&#34;&gt;\(L(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(L(x)\)&lt;/span&gt; 的系数表示。&lt;/p&gt;
&lt;h3 id=&#34;结论&#34;&gt;结论&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
L(x) = \sum_{i=1}^n y_il_i(x)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中每个 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x)\)&lt;/span&gt; 为拉格朗日基本多项式，表达式为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
l_i(x) = \prod_{j=1,j\ne i}^n\frac{x-x_j}{x_i-x_j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其特点是 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x_i)=1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\forall j\ne i\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x_j)=0\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;推导&#34;&gt;推导&lt;/h3&gt;
&lt;p&gt;抛开拉插，这道题明显可以列方程组然后使用高斯消元求解，但是复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 且精度问题明显，所以拉格朗日是这样考虑的：&lt;/p&gt;
&lt;p&gt;对于每个点 &lt;span class=&#34;math inline&#34;&gt;\(P_i(x_i,y_i)\)&lt;/span&gt;，构造一个 &lt;span class=&#34;math inline&#34;&gt;\(n-1\)&lt;/span&gt; 次多项式 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x)\)&lt;/span&gt; 使其在 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 上取值为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，在其余 &lt;span class=&#34;math inline&#34;&gt;\(x_j\)&lt;/span&gt; 上为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。构造的结果就是上面的结论：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
l_i(x) = \prod_{j=1,j\ne i}^n\frac{x-x_j}{x_i-x_j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不加证明地，上面这个多项式是正确且唯一的。&lt;/p&gt;
&lt;p&gt;然后考虑构造答案：很显然对于点 &lt;span class=&#34;math inline&#34;&gt;\(P_i(x_i,y_i)\)&lt;/span&gt;，只有 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x_i)\)&lt;/span&gt; 的取值为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，其他的都为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。所以答案的正确性也是比较显然的：对于 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt;，只有 &lt;span class=&#34;math inline&#34;&gt;\(y_il_i(x_i)\)&lt;/span&gt; 产生了贡献，其余的都是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。故这个多项式是正确的。&lt;/p&gt;
&lt;p&gt;所以回到一开始，若我们需要求 &lt;span class=&#34;math inline&#34;&gt;\(f(k)\)&lt;/span&gt; 的值，则我们需要的就是&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(k) = \sum_{i=1}^n y_i\prod_{j=1,j\ne i}^n\frac{k-x_j}{x_i-x_j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于模数是质数，所以使用费马小定理求逆元，跑得飞快。&lt;/p&gt;
&lt;p&gt;复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;，求逆元就是个很小的常数&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb38&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb38-1&#34;&gt;&lt;a href=&#34;#cb38-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-2&#34;&gt;&lt;a href=&#34;#cb38-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-3&#34;&gt;&lt;a href=&#34;#cb38-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-4&#34;&gt;&lt;a href=&#34;#cb38-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-5&#34;&gt;&lt;a href=&#34;#cb38-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb38-6&#34;&gt;&lt;a href=&#34;#cb38-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-7&#34;&gt;&lt;a href=&#34;#cb38-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; ll read()&lt;/span&gt;
&lt;span id=&#34;cb38-8&#34;&gt;&lt;a href=&#34;#cb38-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-9&#34;&gt;&lt;a href=&#34;#cb38-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb38-10&#34;&gt;&lt;a href=&#34;#cb38-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-11&#34;&gt;&lt;a href=&#34;#cb38-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-12&#34;&gt;&lt;a href=&#34;#cb38-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb38-13&#34;&gt;&lt;a href=&#34;#cb38-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb38-14&#34;&gt;&lt;a href=&#34;#cb38-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb38-15&#34;&gt;&lt;a href=&#34;#cb38-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb38-16&#34;&gt;&lt;a href=&#34;#cb38-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb38-17&#34;&gt;&lt;a href=&#34;#cb38-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb38-18&#34;&gt;&lt;a href=&#34;#cb38-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-19&#34;&gt;&lt;a href=&#34;#cb38-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll maxn = &lt;span class=&#34;fl&#34;&gt;2e3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, mod = &lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-20&#34;&gt;&lt;a href=&#34;#cb38-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll x[maxn], y[maxn];&lt;/span&gt;
&lt;span id=&#34;cb38-21&#34;&gt;&lt;a href=&#34;#cb38-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-22&#34;&gt;&lt;a href=&#34;#cb38-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll pow(ll base, ll p)&lt;/span&gt;
&lt;span id=&#34;cb38-23&#34;&gt;&lt;a href=&#34;#cb38-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-24&#34;&gt;&lt;a href=&#34;#cb38-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-25&#34;&gt;&lt;a href=&#34;#cb38-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    base = (base + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-26&#34;&gt;&lt;a href=&#34;#cb38-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb38-27&#34;&gt;&lt;a href=&#34;#cb38-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb38-28&#34;&gt;&lt;a href=&#34;#cb38-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb38-29&#34;&gt;&lt;a href=&#34;#cb38-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-30&#34;&gt;&lt;a href=&#34;#cb38-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-31&#34;&gt;&lt;a href=&#34;#cb38-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-32&#34;&gt;&lt;a href=&#34;#cb38-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb38-33&#34;&gt;&lt;a href=&#34;#cb38-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb38-34&#34;&gt;&lt;a href=&#34;#cb38-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-35&#34;&gt;&lt;a href=&#34;#cb38-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll inv(ll n)&lt;/span&gt;
&lt;span id=&#34;cb38-36&#34;&gt;&lt;a href=&#34;#cb38-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-37&#34;&gt;&lt;a href=&#34;#cb38-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pow(n, mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb38-38&#34;&gt;&lt;a href=&#34;#cb38-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb38-39&#34;&gt;&lt;a href=&#34;#cb38-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-40&#34;&gt;&lt;a href=&#34;#cb38-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb38-41&#34;&gt;&lt;a href=&#34;#cb38-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-42&#34;&gt;&lt;a href=&#34;#cb38-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll n = read(), k = read();&lt;/span&gt;
&lt;span id=&#34;cb38-43&#34;&gt;&lt;a href=&#34;#cb38-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb38-44&#34;&gt;&lt;a href=&#34;#cb38-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x[i] = read(), y[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb38-45&#34;&gt;&lt;a href=&#34;#cb38-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-46&#34;&gt;&lt;a href=&#34;#cb38-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb38-47&#34;&gt;&lt;a href=&#34;#cb38-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb38-48&#34;&gt;&lt;a href=&#34;#cb38-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll prod1 = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, prod2 = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-49&#34;&gt;&lt;a href=&#34;#cb38-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= n; ++j)&lt;/span&gt;
&lt;span id=&#34;cb38-50&#34;&gt;&lt;a href=&#34;#cb38-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb38-51&#34;&gt;&lt;a href=&#34;#cb38-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb38-52&#34;&gt;&lt;a href=&#34;#cb38-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-53&#34;&gt;&lt;a href=&#34;#cb38-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prod1 = prod1 * (k - x[j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-54&#34;&gt;&lt;a href=&#34;#cb38-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prod2 = prod2 * (x[i] - x[j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-55&#34;&gt;&lt;a href=&#34;#cb38-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb38-56&#34;&gt;&lt;a href=&#34;#cb38-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = (ans + prod1 * y[i] % mod * inv(prod2) % mod + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-57&#34;&gt;&lt;a href=&#34;#cb38-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-58&#34;&gt;&lt;a href=&#34;#cb38-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb38-59&#34;&gt;&lt;a href=&#34;#cb38-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-60&#34;&gt;&lt;a href=&#34;#cb38-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;重心型拉格朗日插值法&#34;&gt;重心型拉格朗日插值法&lt;/h3&gt;
&lt;p&gt;上面的做法在需要动态加点/删点的情况下是有弊端的，因为一次加点就需要 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 重新计算，这样肯定是不优秀的。&lt;/p&gt;
&lt;p&gt;继续推导式子。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}f(k) &amp;amp;= \sum_{i = 1}^nf(x_i)\prod_{j\not=i}\frac{k - x_j}{x_i - x_j}\\&amp;amp;=\sum_{i = 1}^nf(x_i)\frac{\prod_{j = 1}^n(k - x_j)}{(k - x_i)\prod_{j \not= i}(x_i - x_j)}\\&amp;amp;=\prod_{i = 1}^n(k - x_i)\sum_{i = 1}^nf(x_i)\frac{1}{(k - x_i)\prod_{j \not= i}(x_i - x_j)}\end{aligned}
\]&lt;/span&gt; 设 &lt;span class=&#34;math inline&#34;&gt;\(w_i = \dfrac{f(x_i)}{\prod_{j\not=i}(x_i - x_j)}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g = \displaystyle\prod_{i = 1}^n(k - x_i)\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
f(k) = g\sum_{i = 1}^n\frac{w_i}{k - x_i}
\]&lt;/span&gt; 这个 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt; 称为重心权。每次加点更新的话其复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;（更新 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt;，求逆 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;）。这样做就可以快速加点删点。&lt;/p&gt;
&lt;p&gt;模板题：&lt;a href=&#34;https://loj.ac/p/165&#34;&gt;LOJ#165. 拉格朗日插值&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本题需要特判 &lt;span class=&#34;math inline&#34;&gt;\(k = x_i\)&lt;/span&gt; 的情况。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb39&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb39-1&#34;&gt;&lt;a href=&#34;#cb39-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;3005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-2&#34;&gt;&lt;a href=&#34;#cb39-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint g = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, w[maxn], x[maxn], y[maxn];&lt;/span&gt;
&lt;span id=&#34;cb39-3&#34;&gt;&lt;a href=&#34;#cb39-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt;&lt;/span&gt;
&lt;span id=&#34;cb39-4&#34;&gt;&lt;a href=&#34;#cb39-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-5&#34;&gt;&lt;a href=&#34;#cb39-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; ins(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt) {&lt;/span&gt;
&lt;span id=&#34;cb39-6&#34;&gt;&lt;a href=&#34;#cb39-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    w[cnt] = y[cnt];&lt;/span&gt;
&lt;span id=&#34;cb39-7&#34;&gt;&lt;a href=&#34;#cb39-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) w[i] *= qPow(x[i] - x[cnt], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;), w[cnt] *= qPow(x[cnt] - x[i], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-8&#34;&gt;&lt;a href=&#34;#cb39-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-9&#34;&gt;&lt;a href=&#34;#cb39-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-10&#34;&gt;&lt;a href=&#34;#cb39-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-11&#34;&gt;&lt;a href=&#34;#cb39-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint calc(modint k) {&lt;/span&gt;
&lt;span id=&#34;cb39-12&#34;&gt;&lt;a href=&#34;#cb39-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == x[i]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y[i];&lt;/span&gt;
&lt;span id=&#34;cb39-13&#34;&gt;&lt;a href=&#34;#cb39-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint g = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-14&#34;&gt;&lt;a href=&#34;#cb39-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) g *= (k - x[i]);&lt;/span&gt;
&lt;span id=&#34;cb39-15&#34;&gt;&lt;a href=&#34;#cb39-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-16&#34;&gt;&lt;a href=&#34;#cb39-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) ret += w[i] * qPow(k - x[i], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-17&#34;&gt;&lt;a href=&#34;#cb39-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret * g;&lt;/span&gt;
&lt;span id=&#34;cb39-18&#34;&gt;&lt;a href=&#34;#cb39-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-19&#34;&gt;&lt;a href=&#34;#cb39-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-20&#34;&gt;&lt;a href=&#34;#cb39-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb39-21&#34;&gt;&lt;a href=&#34;#cb39-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; read(n);&lt;/span&gt;
&lt;span id=&#34;cb39-22&#34;&gt;&lt;a href=&#34;#cb39-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--) {&lt;/span&gt;
&lt;span id=&#34;cb39-23&#34;&gt;&lt;a href=&#34;#cb39-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op;&lt;/span&gt;
&lt;span id=&#34;cb39-24&#34;&gt;&lt;a href=&#34;#cb39-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(op);&lt;/span&gt;
&lt;span id=&#34;cb39-25&#34;&gt;&lt;a href=&#34;#cb39-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-26&#34;&gt;&lt;a href=&#34;#cb39-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            read(x[++cnt]), read(y[cnt]);&lt;/span&gt;
&lt;span id=&#34;cb39-27&#34;&gt;&lt;a href=&#34;#cb39-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ins(cnt);&lt;/span&gt;
&lt;span id=&#34;cb39-28&#34;&gt;&lt;a href=&#34;#cb39-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb39-29&#34;&gt;&lt;a href=&#34;#cb39-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; read(x);&lt;/span&gt;
&lt;span id=&#34;cb39-30&#34;&gt;&lt;a href=&#34;#cb39-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(calc(x));&lt;/span&gt;
&lt;span id=&#34;cb39-31&#34;&gt;&lt;a href=&#34;#cb39-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-32&#34;&gt;&lt;a href=&#34;#cb39-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-33&#34;&gt;&lt;a href=&#34;#cb39-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-34&#34;&gt;&lt;a href=&#34;#cb39-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-35&#34;&gt;&lt;a href=&#34;#cb39-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;正整数的-k-次方之和&#34;&gt;正整数的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次方之和&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-7&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF622F&#34;&gt;CF622F&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(n,k\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^9,0\le k\le 10^6\)&lt;/span&gt;），求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^ni^k = 1^k + 2^k + 3^k +\cdots + n^k
\]&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;h4 id=&#34;题解&#34;&gt;题解&lt;/h4&gt;
&lt;p&gt;下面的证明会讲到，这个东西可以看作以 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为变量的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;p&gt;而我们很容易就可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(k\log k)\)&lt;/span&gt; 的时间内求出求出 &lt;span class=&#34;math inline&#34;&gt;\(f(1),f(2),\cdots,f(k+ 1)\)&lt;/span&gt;，我们需要求的是 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;，故考虑拉格朗日插值，得出如下公式 &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{i = 1}^{k + 2}f(i)\prod_{j\neq i}\frac{n - j}{i - j}
\]&lt;/span&gt; 如果朴素地做的话，复杂度显然是 &lt;span class=&#34;math inline&#34;&gt;\(O(k^2)\)&lt;/span&gt; 的，但是注意到我们用于取点值的数都是连续的，所以 &lt;span class=&#34;math inline&#34;&gt;\(\prod\)&lt;/span&gt; 这一堆是可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 预处理然后 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 求的。怎么预处理呢？我们考虑把他打开看看规律 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\prod_{j = 1,j\neq i}^{k + 2}\frac{n - j}{i - j} &amp;amp;= \frac{(n - 1)(n - 2)\cdots(n - j + 1)(n - j - 1)\cdots(n - k - 1)(n - k - 2)}{(i - 1)(i - 2)\cdots(i - j + 1)(i - j - 1)\cdots(i - k - 2)}\\
&amp;amp;=\frac{\prod_{j = 1}^{i - 1}(n - j)\times\prod_{j = i + 1}^{k + 2}(n - j)}{(-1)^{k -i}\times i!\times (k + 2 - i)!}
\end{aligned}
\]&lt;/span&gt; 所以维护一下 &lt;span class=&#34;math inline&#34;&gt;\((n - j)\)&lt;/span&gt; 的前/后缀积和 &lt;span class=&#34;math inline&#34;&gt;\([1, k + 1]\)&lt;/span&gt; 的阶乘逆元，这道题就可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(k\log k)\)&lt;/span&gt; 的时间内做出来了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb40&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb40-1&#34;&gt;&lt;a href=&#34;#cb40-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-2&#34;&gt;&lt;a href=&#34;#cb40-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb40-3&#34;&gt;&lt;a href=&#34;#cb40-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb40-4&#34;&gt;&lt;a href=&#34;#cb40-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-5&#34;&gt;&lt;a href=&#34;#cb40-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb40-6&#34;&gt;&lt;a href=&#34;#cb40-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-7&#34;&gt;&lt;a href=&#34;#cb40-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-8&#34;&gt;&lt;a href=&#34;#cb40-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-9&#34;&gt;&lt;a href=&#34;#cb40-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, k;&lt;/span&gt;
&lt;span id=&#34;cb40-10&#34;&gt;&lt;a href=&#34;#cb40-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-11&#34;&gt;&lt;a href=&#34;#cb40-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll fac[maxn], pre[maxn], suf[maxn];&lt;/span&gt;
&lt;span id=&#34;cb40-12&#34;&gt;&lt;a href=&#34;#cb40-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-13&#34;&gt;&lt;a href=&#34;#cb40-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qpow(ll base, ll p = mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-14&#34;&gt;&lt;a href=&#34;#cb40-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb40-15&#34;&gt;&lt;a href=&#34;#cb40-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-16&#34;&gt;&lt;a href=&#34;#cb40-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb40-17&#34;&gt;&lt;a href=&#34;#cb40-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-18&#34;&gt;&lt;a href=&#34;#cb40-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-19&#34;&gt;&lt;a href=&#34;#cb40-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb40-20&#34;&gt;&lt;a href=&#34;#cb40-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-21&#34;&gt;&lt;a href=&#34;#cb40-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-22&#34;&gt;&lt;a href=&#34;#cb40-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb40-23&#34;&gt;&lt;a href=&#34;#cb40-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb40-24&#34;&gt;&lt;a href=&#34;#cb40-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;k);&lt;/span&gt;
&lt;span id=&#34;cb40-25&#34;&gt;&lt;a href=&#34;#cb40-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!k)&lt;/span&gt;
&lt;span id=&#34;cb40-26&#34;&gt;&lt;a href=&#34;#cb40-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb40-27&#34;&gt;&lt;a href=&#34;#cb40-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb40-28&#34;&gt;&lt;a href=&#34;#cb40-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-29&#34;&gt;&lt;a href=&#34;#cb40-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-30&#34;&gt;&lt;a href=&#34;#cb40-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-31&#34;&gt;&lt;a href=&#34;#cb40-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pre[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fac[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-32&#34;&gt;&lt;a href=&#34;#cb40-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-33&#34;&gt;&lt;a href=&#34;#cb40-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pre[i] = pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (n - i) % mod, fac[i] = fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-34&#34;&gt;&lt;a href=&#34;#cb40-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    suf[k + &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-35&#34;&gt;&lt;a href=&#34;#cb40-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-36&#34;&gt;&lt;a href=&#34;#cb40-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        suf[i] = suf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (n - i) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-37&#34;&gt;&lt;a href=&#34;#cb40-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-38&#34;&gt;&lt;a href=&#34;#cb40-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb40-39&#34;&gt;&lt;a href=&#34;#cb40-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = (y + qpow(i, k)) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-40&#34;&gt;&lt;a href=&#34;#cb40-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll tmp = y * pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod * suf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod * (((k - i) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * qpow(fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * fac[k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; - i] % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-41&#34;&gt;&lt;a href=&#34;#cb40-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = (ans + tmp + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-42&#34;&gt;&lt;a href=&#34;#cb40-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-43&#34;&gt;&lt;a href=&#34;#cb40-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb40-44&#34;&gt;&lt;a href=&#34;#cb40-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-45&#34;&gt;&lt;a href=&#34;#cb40-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;证明&#34;&gt;证明&lt;/h4&gt;
&lt;p&gt;这里的证明使用差分（参考数竞小蓝本数列那一册）。&lt;/p&gt;
&lt;p&gt;定义多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的一阶差分为 &lt;span class=&#34;math inline&#34;&gt;\(\Delta f(x) = f(x + 1) - f(x)\)&lt;/span&gt;，把得到的多项式再作次差分得到 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的二阶差分 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\Delta^2f(x) &amp;amp;= \Delta (\Delta f(x))\\
&amp;amp;= \Delta (f(x + 1) - f(x))\\
&amp;amp;= (f(x + 2) - f(x + 1)) - (f(x + 1) - f(x))\\
&amp;amp;= f(x + 2) - 2f(x + 1) + f(x)
\end{aligned}
\]&lt;/span&gt; 类似的可以定义 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶差分，即 &lt;span class=&#34;math inline&#34;&gt;\(\Delta^p f(x) = \Delta(\Delta^{p - 1}f(x))\)&lt;/span&gt;。类似的我们对数列也是可以进行差分操作的。如果一个数列的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶差分为一个非零常数列，则称其为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶等差数列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数列 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶等差数列的充要条件是其通项公式为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的一个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;已知数列 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶等差数列，设数列 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 的通项为一个关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 次多项式，即 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \sum_{i = 0}^vu_ix^i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 的差分为 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace b_n\rbrace\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace b_n\rbrace\)&lt;/span&gt; 的通项公式为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\Delta f(x) &amp;amp;= f(x + 1) - f(x)\\
&amp;amp;= \sum_{i = 0}^v u_i(x + 1)^i - \sum_{i = 0}^vu_ix_i
\end{aligned}
\]&lt;/span&gt; 打开后我们发现 &lt;span class=&#34;math inline&#34;&gt;\(x^v\)&lt;/span&gt; 的系数变为了 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，说明差分之后通项公式的次数减了 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，从其 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶差分为一个非零常数列可反推知其通项公式的次数为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;回到本题，定义出数列 &lt;span class=&#34;math display&#34;&gt;\[
\lbrace a_n\rbrace = \sum_{i = 1}^1i^k, \sum_{i = 1}^2i^k,\cdots,\sum_{i = 1}^ni^k
\]&lt;/span&gt; 对这个数列作差分可以得到 &lt;span class=&#34;math inline&#34;&gt;\(1^k,2^k,3^k,\cdots, n^k\)&lt;/span&gt;，发现其通项公式为 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = n^k\)&lt;/span&gt;，所以原数列的通项就是关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的一个 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;h2 id=&#34;多项式多点求值&#34;&gt;多项式多点求值&lt;/h2&gt;
&lt;p&gt;前置知识：多项式带余除法、简单的分治思想。&lt;/p&gt;
&lt;h3 id=&#34;问题描述-8&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;给定一个多项式和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\(\{a_1,\cdots, a_m\}\)&lt;/span&gt;，要求分别求出 &lt;span class=&#34;math inline&#34;&gt;\(f(a_1),f(a_2),\cdots, f(a_m)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;问题求解-1&#34;&gt;问题求解&lt;/h3&gt;
&lt;p&gt;核心思想是构造 + 分治。&lt;/p&gt;
&lt;p&gt;考虑现在正在处理子问题 &lt;span class=&#34;math display&#34;&gt;\[
\{a_1, a_2, \cdots, a_m\}
\]&lt;/span&gt; 将其分为两个部分 &lt;span class=&#34;math display&#34;&gt;\[
\{a_1, a_2,\cdots, a_{\left\lfloor\frac m2\right\rfloor}\}\quad \{a_{\left\lfloor\frac m2\right\rfloor + 1}, \cdots, a_m\}
\]&lt;/span&gt; 然后构造两个多项式 &lt;span class=&#34;math display&#34;&gt;\[
g_0(x) = \prod_{i = 1}^{\lfloor\frac m2\rfloor}(x - a_i)\\g_1(x) = \prod_{i = \lfloor\frac m2\rfloor + 1}^m(x - a_i)
\]&lt;/span&gt; 然后我们令 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = g_0(x)Q(x) + f_0(x)\)&lt;/span&gt;，则显然有 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, \lfloor\frac m2\rfloor]\)&lt;/span&gt;，一定有 &lt;span class=&#34;math inline&#34;&gt;\(g_0(a_i) = 0\)&lt;/span&gt;。所以有 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\equiv f_0(x)\pmod {g_0(x)}\)&lt;/span&gt;。这就是一个多项式取模的事情。对于右边则同理。&lt;/p&gt;
&lt;p&gt;这样子我们就成功将问题的规模减半。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-7&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;一开始就需要求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;，这个过程类似于线段树，是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 的。然后每一层也要给他个多项式取模。&lt;/p&gt;
&lt;p&gt;然后鉴于多项式取模的巨大常数，当区间比较小的时候可以考虑直接暴算，优化常数。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb41&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb41-1&#34;&gt;&lt;a href=&#34;#cb41-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-2&#34;&gt;&lt;a href=&#34;#cb41-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-3&#34;&gt;&lt;a href=&#34;#cb41-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((l&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;r)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-4&#34;&gt;&lt;a href=&#34;#cb41-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly g[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], Q;&lt;/span&gt;
&lt;span id=&#34;cb41-5&#34;&gt;&lt;a href=&#34;#cb41-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-6&#34;&gt;&lt;a href=&#34;#cb41-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; initG(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *a) {&lt;/span&gt;
&lt;span id=&#34;cb41-7&#34;&gt;&lt;a href=&#34;#cb41-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r) {&lt;/span&gt;
&lt;span id=&#34;cb41-8&#34;&gt;&lt;a href=&#34;#cb41-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[k].push_back(a[l] ? mod - a[l] : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb41-9&#34;&gt;&lt;a href=&#34;#cb41-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[k].push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb41-10&#34;&gt;&lt;a href=&#34;#cb41-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-11&#34;&gt;&lt;a href=&#34;#cb41-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-12&#34;&gt;&lt;a href=&#34;#cb41-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initG(L, l, M, a);&lt;/span&gt;
&lt;span id=&#34;cb41-13&#34;&gt;&lt;a href=&#34;#cb41-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initG(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, a);&lt;/span&gt;
&lt;span id=&#34;cb41-14&#34;&gt;&lt;a href=&#34;#cb41-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[k] = g[L] * g[R];&lt;/span&gt;
&lt;span id=&#34;cb41-15&#34;&gt;&lt;a href=&#34;#cb41-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-16&#34;&gt;&lt;a href=&#34;#cb41-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-17&#34;&gt;&lt;a href=&#34;#cb41-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-18&#34;&gt;&lt;a href=&#34;#cb41-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; work(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, Poly A, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *ans) {&lt;/span&gt;
&lt;span id=&#34;cb41-19&#34;&gt;&lt;a href=&#34;#cb41-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb41-20&#34;&gt;&lt;a href=&#34;#cb41-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, l, r) {&lt;/span&gt;
&lt;span id=&#34;cb41-21&#34;&gt;&lt;a href=&#34;#cb41-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-22&#34;&gt;&lt;a href=&#34;#cb41-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(j, A.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-23&#34;&gt;&lt;a href=&#34;#cb41-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                s = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * s * a[i] % mod + A[j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb41-24&#34;&gt;&lt;a href=&#34;#cb41-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans[i] = s;&lt;/span&gt;
&lt;span id=&#34;cb41-25&#34;&gt;&lt;a href=&#34;#cb41-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb41-26&#34;&gt;&lt;a href=&#34;#cb41-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-27&#34;&gt;&lt;a href=&#34;#cb41-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-28&#34;&gt;&lt;a href=&#34;#cb41-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly B;&lt;/span&gt;
&lt;span id=&#34;cb41-29&#34;&gt;&lt;a href=&#34;#cb41-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyDiv(A, g[L], Q, B);&lt;/span&gt;
&lt;span id=&#34;cb41-30&#34;&gt;&lt;a href=&#34;#cb41-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    work(L, l, M, B, a, ans);&lt;/span&gt;
&lt;span id=&#34;cb41-31&#34;&gt;&lt;a href=&#34;#cb41-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyDiv(A, g[R], Q, B);&lt;/span&gt;
&lt;span id=&#34;cb41-32&#34;&gt;&lt;a href=&#34;#cb41-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    work(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, B, a, ans);&lt;/span&gt;
&lt;span id=&#34;cb41-33&#34;&gt;&lt;a href=&#34;#cb41-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-34&#34;&gt;&lt;a href=&#34;#cb41-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-35&#34;&gt;&lt;a href=&#34;#cb41-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-36&#34;&gt;&lt;a href=&#34;#cb41-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; evaluate(Poly f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *ans) {&lt;/span&gt;
&lt;span id=&#34;cb41-37&#34;&gt;&lt;a href=&#34;#cb41-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initG(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m, a);&lt;/span&gt;
&lt;span id=&#34;cb41-38&#34;&gt;&lt;a href=&#34;#cb41-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    work(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m, f, a, ans);&lt;/span&gt;
&lt;span id=&#34;cb41-39&#34;&gt;&lt;a href=&#34;#cb41-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-40&#34;&gt;&lt;a href=&#34;#cb41-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-41&#34;&gt;&lt;a href=&#34;#cb41-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef L&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-42&#34;&gt;&lt;a href=&#34;#cb41-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef R&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-43&#34;&gt;&lt;a href=&#34;#cb41-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef M&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式快速插值&#34;&gt;多项式快速插值&lt;/h2&gt;
&lt;p&gt;前置知识：多点求值，洛必达法则&lt;/p&gt;
&lt;h3 id=&#34;问题描述-9&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\((x_i, y_i)\)&lt;/span&gt;，求出经过这 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;h3 id=&#34;问题求解-2&#34;&gt;问题求解&lt;/h3&gt;
&lt;p&gt;回顾一下拉格朗日插值公式： &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{i = 1}^n y_i\prod_{j \not=i}\frac{x - x_j}{x_i - x_j}
\]&lt;/span&gt; 先把后面的分母提到前面来： &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{i = 1}^n\frac{y_i}{\prod_{j\not=i}(x_i - x_j)}\prod_{j \not= i}(x - x_j)
\]&lt;/span&gt; 首先发现 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{y_i}{\prod_{j\not=i}(x_i - x_j)}\)&lt;/span&gt;，考虑先计算这个常数。令 &lt;span class=&#34;math inline&#34;&gt;\(\delta(x) = \displaystyle\prod_{j = 1}^n(x - x_j)\)&lt;/span&gt;，这个东西可以分治 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2 n)\)&lt;/span&gt; 求。然后看 &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; 的分母： &lt;span class=&#34;math display&#34;&gt;\[
\prod_{j\not= i}(x_i - x_j) = \lim_{x\to x_i}\frac{\delta(x)}{x - x_i}
\]&lt;/span&gt; 这个东西就是导数的定义式，不难发现 &lt;span class=&#34;math display&#34;&gt;\[
\lim_{x\to x_i}\frac{\delta(x)}{x - x_i} = \delta&amp;#39;(x_i)
\]&lt;/span&gt; 求出 &lt;span class=&#34;math inline&#34;&gt;\(\delta(x)\)&lt;/span&gt; 之后求个导再写个多点求值就可以搞定了。&lt;/p&gt;
&lt;p&gt;然后问题就化简到了 &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{i = 1}^n\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j\not=i}(x - x_j)
\]&lt;/span&gt; 还是用分治大法。设 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle F_{l, r}(x) = \sum_{i = l}^r\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j\not=i}(x - x_j)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\delta_{l,r}(x) = \displaystyle\prod_{j = l}^r(x - x_j)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = \left\lfloor\dfrac {i+ j}2\right\rfloor\)&lt;/span&gt;，开始化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}F_{l, r}(x) &amp;amp;= \sum_{i = l}^r\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j\not=i}(x - x_j)\\&amp;amp;=\sum_{i = l}^m\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j = l, j\not=i}^m(x - x_j)\prod_{j = m + 1, j\not= i}^r(x - x_j) + \sum_{i = m + 1}^r\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j = l, j\not=i}^m(x - x_j)\prod_{j = m + 1, j\not= i}^r(x - x_j)\\&amp;amp;=F_{l,m}(x)\delta_{m + 1, r}(x) + F_{m + 1, r}(x)\delta_{l, m}(x)\end{aligned}
\]&lt;/span&gt; 边界肯定就是 &lt;span class=&#34;math inline&#34;&gt;\(l = r\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(F_{l,l}(x) = \dfrac{y_l}{\delta&amp;#39;(x_l)}\)&lt;/span&gt;。总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-8&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;配合上面的封装，其实不难写。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb42&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb42-1&#34;&gt;&lt;a href=&#34;#cb42-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly delta[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], ddelta;&lt;/span&gt;
&lt;span id=&#34;cb42-2&#34;&gt;&lt;a href=&#34;#cb42-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dval[maxn];&lt;/span&gt;
&lt;span id=&#34;cb42-3&#34;&gt;&lt;a href=&#34;#cb42-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-4&#34;&gt;&lt;a href=&#34;#cb42-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; initDelta(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *x) {&lt;/span&gt;
&lt;span id=&#34;cb42-5&#34;&gt;&lt;a href=&#34;#cb42-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r) {&lt;/span&gt;
&lt;span id=&#34;cb42-6&#34;&gt;&lt;a href=&#34;#cb42-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        delta[k].push_back(x[l] ? mod - x[l] : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-7&#34;&gt;&lt;a href=&#34;#cb42-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        delta[k].push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-8&#34;&gt;&lt;a href=&#34;#cb42-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-9&#34;&gt;&lt;a href=&#34;#cb42-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-10&#34;&gt;&lt;a href=&#34;#cb42-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initDelta(L, l, M, x);&lt;/span&gt;
&lt;span id=&#34;cb42-11&#34;&gt;&lt;a href=&#34;#cb42-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initDelta(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x);&lt;/span&gt;
&lt;span id=&#34;cb42-12&#34;&gt;&lt;a href=&#34;#cb42-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delta[k] = delta[L] * delta[R];&lt;/span&gt;
&lt;span id=&#34;cb42-13&#34;&gt;&lt;a href=&#34;#cb42-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-14&#34;&gt;&lt;a href=&#34;#cb42-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-15&#34;&gt;&lt;a href=&#34;#cb42-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-16&#34;&gt;&lt;a href=&#34;#cb42-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly interpolation(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *y) {&lt;/span&gt;
&lt;span id=&#34;cb42-17&#34;&gt;&lt;a href=&#34;#cb42-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r)&lt;/span&gt;
&lt;span id=&#34;cb42-18&#34;&gt;&lt;a href=&#34;#cb42-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Poly(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * y[l] * qPow(dval[l]) % mod);&lt;/span&gt;
&lt;span id=&#34;cb42-19&#34;&gt;&lt;a href=&#34;#cb42-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; interpolation(L, l, M, x, y) * delta[R] + interpolation(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x, y) * delta[L];&lt;/span&gt;
&lt;span id=&#34;cb42-20&#34;&gt;&lt;a href=&#34;#cb42-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-21&#34;&gt;&lt;a href=&#34;#cb42-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-22&#34;&gt;&lt;a href=&#34;#cb42-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly interpolation(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *y) {&lt;/span&gt;
&lt;span id=&#34;cb42-23&#34;&gt;&lt;a href=&#34;#cb42-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initDelta(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, x);&lt;/span&gt;
&lt;span id=&#34;cb42-24&#34;&gt;&lt;a href=&#34;#cb42-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ddelta = deri(delta[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb42-25&#34;&gt;&lt;a href=&#34;#cb42-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    evaluate(ddelta, n, x, dval);&lt;/span&gt;
&lt;span id=&#34;cb42-26&#34;&gt;&lt;a href=&#34;#cb42-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; interpolation(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, x, y);&lt;/span&gt;
&lt;span id=&#34;cb42-27&#34;&gt;&lt;a href=&#34;#cb42-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>莫反/杜教筛做题记录</title>
        <link>https://oi.imyangty.com/summary-mobius/</link>
        <pubDate>Mon, 01 Feb 2021 20:40:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-mobius/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg14.webp" alt="Featured image of post 莫反/杜教筛做题记录" /&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p3455-poi2007zap-queries&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3455&#34;&gt;洛谷 P3455 [POI2007]ZAP-Queries&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;求： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^a\sum_{j = 1}^b[\gcd(i,j) = d]
\]&lt;/span&gt; ### Solution&lt;/p&gt;
&lt;p&gt;莫比乌斯反演时，一般要将含 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的式子化为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,j) = 1\)&lt;/span&gt; 的形式才好反演。因此考虑设 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;#39; = a/d\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b&amp;#39; = b/d\)&lt;/span&gt;，原式化为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}[\gcd(i,j) = 1]
\]&lt;/span&gt; 然后就可以愉快的反演了。我们知道 &lt;span class=&#34;math display&#34;&gt;\[
\mu * 1 = \varepsilon
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\varepsilon(n) = \sum_{d\mid n}\mu(d)
\]&lt;/span&gt; 稍微变一下： &lt;span class=&#34;math display&#34;&gt;\[
\varepsilon(\gcd(i,j)) = \sum_{d\mid \gcd(i,j)}\mu(d)
\]&lt;/span&gt; 所以原式化为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}\sum_{d\mid \gcd(i,j)}\mu(d)
\]&lt;/span&gt; 考虑写成枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的形式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}\sum_{d\mid \gcd(i,j)}\mu(d)\\
=&amp;amp;\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}\sum_{d = 1}^{\min(a&amp;#39;,b&amp;#39;)}[d\mid\gcd(i,j)]\mu(d)\\
=&amp;amp;\sum_{d=1}^{\min(a&amp;#39;,b&amp;#39;)}\mu(d)\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}[d\mid\gcd(i,j)]
\end{aligned}
\]&lt;/span&gt; 考虑到若要使 &lt;span class=&#34;math inline&#34;&gt;\(d\mid \gcd(i,j)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 必须同为 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的倍数，根据乘法原理，原式可以化为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^{\min(a&amp;#39;,b&amp;#39;)}\mu(d)\left\lfloor\frac{a&amp;#39;}{d}\right\rfloor\left\lfloor\frac{b&amp;#39;}{d}\right\rfloor
\]&lt;/span&gt; 预处理出 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的前缀和，再套一个整除分块即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mu[maxn], prime[maxn], tot, vis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getmu()&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prime[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * prime[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * prime[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % prime[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * prime[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * prime[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mu[i] += mu[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getmu();&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T = read();&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = read(), b = read(), d = read();&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a /= d, b /= d;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(a, b), ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; l &amp;lt;= top &amp;amp;&amp;amp; r &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r = min(top, min(a / (a / l), b / (b / l)));&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += (a / l) * (b / l) * (mu[r] - mu[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2522&#34;&gt;洛谷 P2522 [HAOI2011]Problem b&lt;/a&gt; 与此题类似，只不过需要套一个容斥。&lt;/p&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;将含有 gcd 的式子化为 &lt;span class=&#34;math inline&#34;&gt;\([\gcd(i,j) = 1]\)&lt;/span&gt;，然后就可以使用 &lt;span class=&#34;math inline&#34;&gt;\(\varepsilon = 1 * \mu\)&lt;/span&gt; 进行反演。&lt;/p&gt;
&lt;p&gt;推式子的时候随时记得可以改变枚举的顺序。&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p2257-yy的gcd&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2257&#34;&gt;洛谷 P2257 YY的GCD&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-1&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) \in P]
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为质数集。&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;不妨枚举这个质数，如下： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k\in P}\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = k]
\]&lt;/span&gt; 然后就是像上题一样化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{k\in P}\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = k]\\
=&amp;amp;\sum_{k\in P}\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}[\gcd(i,j) = 1],\quad n&amp;#39; = \left\lfloor\frac nk \right\rfloor,m&amp;#39; = \left\lfloor\frac mk \right\rfloor\\
=&amp;amp;\sum_{k\in P}\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}\sum_{d\mid \gcd(i,j)}\mu(d)\\
=&amp;amp;\sum_{k\in P}\sum_{d = 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor
\end{aligned}
\]&lt;/span&gt; 此时这个式子看上去已经差不多了，但是实际运行的时候还是会 T 掉，考虑设 &lt;span class=&#34;math inline&#34;&gt;\(T = kd\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{k\in P}\sum_{d = 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor\\
=&amp;amp;\sum_{k\in P}\sum_{d= 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu\left(\frac Tk\right)\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\\
\end{aligned}
\]&lt;/span&gt; 换成枚举 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，提前： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{k\in P}\sum_{d= 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu\left(\frac Tk\right)\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\\
=&amp;amp;\sum_{T = 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T\land k\in P}\mu\left(\frac Tk\right)
\end{aligned}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{k\mid T\land k\in P}\mu\left(\frac Tk\right)\)&lt;/span&gt; 是可以预处理的，预处理然后整除分块就可以了。实际实现的时候记得开 &lt;code&gt;long long&lt;/code&gt; 并卡卡常（不要处处 &lt;code&gt;long long&lt;/code&gt;）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mu[maxn], p[maxn], vis[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll sum[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getmu()&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot)&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            sum[i * p[j]] += mu[i];&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sum[i] += sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getmu();&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kase = read();&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (kase--)&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r = min(top, min(n / (n / l), m / (m / l)));&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += (ll)(n / l) * (ll)(m / l) * (sum[r] - sum[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-1&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;适当的时候设 &lt;span class=&#34;math inline&#34;&gt;\(T=kd\)&lt;/span&gt; 是可以化简式子减小运算的时间复杂度的。&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p3312-sdoi2014数表&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3312&#34;&gt;洛谷 P3312 [SDOI2014]数表&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-2&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n,m\le 10^5,a\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\times[\sigma(\gcd(i,j)) \le a]\bmod 2^{31}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(x)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的正约数之和。&lt;/p&gt;
&lt;h3 id=&#34;solution-1&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;先忽略 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(\gcd(i,j))\le a\)&lt;/span&gt; 的条件，并假定 &lt;span class=&#34;math inline&#34;&gt;\(n\le m\)&lt;/span&gt;，化简上面的式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\\
=&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sum_{d = 1}^n\sigma(d)[\gcd(i,j) = d]\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{i = 1}^{\lfloor n/d\rfloor}\sum_{j = 1}^{\lfloor m / d\rfloor}[\gcd(i,j) = 1]\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{i = 1}^{\lfloor n/d\rfloor}\sum_{j = 1}^{\lfloor m / d\rfloor}\sum_{x\mid i\land x \mid j}\mu(x)\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{x = 1}^{\lfloor n / d\rfloor}\lfloor n / dx\rfloor\lfloor m/ dx\rfloor\mu(x)\\
\end{aligned}
\]&lt;/span&gt; 令 &lt;span class=&#34;math inline&#34;&gt;\(T = dx\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{x = 1}^{\lfloor n / d\rfloor}\lfloor n / dx\rfloor\lfloor m/ dx\rfloor\mu(x)\\
=&amp;amp;\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor\sum_{d\mid T}\sigma(d)\mu(T/d)
\end{aligned}
\]&lt;/span&gt; 再令 &lt;span class=&#34;math inline&#34;&gt;\(f(T) = \displaystyle\sum_{d\mid T}\sigma(d)\mu(T/d)\)&lt;/span&gt;，则要求的东西就是： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor f(T)
\]&lt;/span&gt; 然后我们可以发现的是：只有当 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\le a\)&lt;/span&gt; 时，其才会对 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 产生贡献，所以考虑离线处理每个询问，按照 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 从小到大排序，再将预处理好的 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\)&lt;/span&gt; 从小到大排序，然后动态更新 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 的前缀和。可以发现的是我们每次加入一个 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\mu(T/d)\)&lt;/span&gt; 都会让 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的每个倍数的 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 对应增加。所以使用树状数组维护。对于每个询问整除分块即可。总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q\sqrt n\log n + n \log^2 n)\)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;utility&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define lowbit&lt;/span&gt;(x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;((x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(-x))&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define Fi &lt;/span&gt;first&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define Se &lt;/span&gt;second&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define mk&lt;/span&gt;(a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;make_pair(a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;13&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; queries&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, a, id;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} q[&lt;span class=&#34;dv&#34;&gt;20000&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; cmp(queries a, queries b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.a &amp;lt; b.a;}&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c =getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; g[maxn], mu[maxn], vis[maxn], p[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tree[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; x += lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[x] += val;&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x; x -= lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += tree[x];&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pre()&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = mk(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = mk(g[i] = i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb3-71&#34;&gt;&lt;a href=&#34;#cb3-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i * p[j]] = g[i] * p[j] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-72&#34;&gt;&lt;a href=&#34;#cb3-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i * p[j]] = mk(f[i].Fi / g[i] * g[i * p[j]], i * p[j]);&lt;/span&gt;
&lt;span id=&#34;cb3-73&#34;&gt;&lt;a href=&#34;#cb3-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-74&#34;&gt;&lt;a href=&#34;#cb3-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-75&#34;&gt;&lt;a href=&#34;#cb3-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb3-76&#34;&gt;&lt;a href=&#34;#cb3-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-77&#34;&gt;&lt;a href=&#34;#cb3-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb3-78&#34;&gt;&lt;a href=&#34;#cb3-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb3-79&#34;&gt;&lt;a href=&#34;#cb3-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i * p[j]] = mk(f[i].Fi * f[p[j]].Fi, i * p[j]);&lt;/span&gt;
&lt;span id=&#34;cb3-80&#34;&gt;&lt;a href=&#34;#cb3-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i * p[j]] = p[j] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-81&#34;&gt;&lt;a href=&#34;#cb3-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb3-82&#34;&gt;&lt;a href=&#34;#cb3-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-83&#34;&gt;&lt;a href=&#34;#cb3-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-84&#34;&gt;&lt;a href=&#34;#cb3-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-85&#34;&gt;&lt;a href=&#34;#cb3-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-86&#34;&gt;&lt;a href=&#34;#cb3-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb3-87&#34;&gt;&lt;a href=&#34;#cb3-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-88&#34;&gt;&lt;a href=&#34;#cb3-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;gt; m) {&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t = n; n = m; m = t;}&lt;/span&gt;
&lt;span id=&#34;cb3-89&#34;&gt;&lt;a href=&#34;#cb3-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-90&#34;&gt;&lt;a href=&#34;#cb3-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-91&#34;&gt;&lt;a href=&#34;#cb3-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-92&#34;&gt;&lt;a href=&#34;#cb3-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l));&lt;/span&gt;
&lt;span id=&#34;cb3-93&#34;&gt;&lt;a href=&#34;#cb3-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += (query(r) - query(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * (n / l) * (m / l);&lt;/span&gt;
&lt;span id=&#34;cb3-94&#34;&gt;&lt;a href=&#34;#cb3-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-95&#34;&gt;&lt;a href=&#34;#cb3-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-96&#34;&gt;&lt;a href=&#34;#cb3-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-97&#34;&gt;&lt;a href=&#34;#cb3-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-98&#34;&gt;&lt;a href=&#34;#cb3-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb3-99&#34;&gt;&lt;a href=&#34;#cb3-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-100&#34;&gt;&lt;a href=&#34;#cb3-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pre();&lt;/span&gt;
&lt;span id=&#34;cb3-101&#34;&gt;&lt;a href=&#34;#cb3-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(f + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f + maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-102&#34;&gt;&lt;a href=&#34;#cb3-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; Q = read();&lt;/span&gt;
&lt;span id=&#34;cb3-103&#34;&gt;&lt;a href=&#34;#cb3-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, Q)&lt;/span&gt;
&lt;span id=&#34;cb3-104&#34;&gt;&lt;a href=&#34;#cb3-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[i].id = i, q[i].n = read(), q[i].m = read(), q[i].a = read();&lt;/span&gt;
&lt;span id=&#34;cb3-105&#34;&gt;&lt;a href=&#34;#cb3-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(q + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, q + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + Q, cmp);&lt;/span&gt;
&lt;span id=&#34;cb3-106&#34;&gt;&lt;a href=&#34;#cb3-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= Q; ++i)&lt;/span&gt;
&lt;span id=&#34;cb3-107&#34;&gt;&lt;a href=&#34;#cb3-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-108&#34;&gt;&lt;a href=&#34;#cb3-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; f[j].Fi &amp;lt;= q[i].a &amp;amp;&amp;amp; j &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb3-109&#34;&gt;&lt;a href=&#34;#cb3-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = f[j].Se; k &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; k += f[j].Se)&lt;/span&gt;
&lt;span id=&#34;cb3-110&#34;&gt;&lt;a href=&#34;#cb3-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                modify(k, f[j].Fi * mu[k / f[j].Se]);&lt;/span&gt;
&lt;span id=&#34;cb3-111&#34;&gt;&lt;a href=&#34;#cb3-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[q[i].id] = solve(q[i].n, q[i].m);&lt;/span&gt;
&lt;span id=&#34;cb3-112&#34;&gt;&lt;a href=&#34;#cb3-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-113&#34;&gt;&lt;a href=&#34;#cb3-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, Q) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans[i] % (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;31&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb3-114&#34;&gt;&lt;a href=&#34;#cb3-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-115&#34;&gt;&lt;a href=&#34;#cb3-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-2&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;适当使用 &lt;span class=&#34;math inline&#34;&gt;\(T = kd\)&lt;/span&gt; 进行换元。考虑贡献是如何产生的然后就可以使用恰当的数据结构进行维护。&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p3327-sdoi2015约数个数和&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3327&#34;&gt;洛谷 P3327 [SDOI2015]约数个数和&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-3&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(\tau(n)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的约数个数，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\tau(ij)
\]&lt;/span&gt; ### Solution&lt;/p&gt;
&lt;p&gt;引理： &lt;span class=&#34;math display&#34;&gt;\[
\tau(ij) = \sum_{x\mid i}\sum_{y\mid j}[\gcd(x, y) = 1]
\]&lt;/span&gt; 证明考虑 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的质因子即可。&lt;/p&gt;
&lt;p&gt;原式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\tau(ij)\\
=&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sum_{x\mid i}\sum_{y\mid j}[\gcd(x, y) = 1]\\
=&amp;amp;\sum_{x = 1}^n\sum_{y = 1}^m\left\lfloor\frac nx\right\rfloor\left\lfloor\frac my\right\rfloor[\gcd(x,y) = 1]\\
=&amp;amp;\sum_{x = 1}^n\sum_{y = 1}^m\left\lfloor\frac nx\right\rfloor\left\lfloor\frac my\right\rfloor\sum_{d\mid \gcd(x,y)}\mu(d)\\
=&amp;amp;\sum_{d = 1}^{\min\{n,m\}}\mu(d)\sum_{x = 1}^{\left\lfloor\frac nd\right\rfloor}\left\lfloor\frac n{dx}\right\rfloor\sum_{y = 1}^{\left\lfloor\frac md\right\rfloor}\left\lfloor\frac m{dy}\right\rfloor
\end{aligned}
\]&lt;/span&gt; 设 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \sum_{1\le i\le n}\left\lfloor\dfrac ni\right\rfloor\)&lt;/span&gt;，则原式进一步化简为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^{\min\{n,m\}}\mu(d)f\left(\left\lfloor\frac nd\right\rfloor\right)f\left(\left\lfloor\frac md\right\rfloor\right)
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 的值可以一开始 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 求出来，然后总的复杂度明显为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n + T\sqrt n)\)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;50005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mu[maxn], p[maxn], vis[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; get_mu()&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mu[i] += mu[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; get_f()&lt;/span&gt;
&lt;span id=&#34;cb4-51&#34;&gt;&lt;a href=&#34;#cb4-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-52&#34;&gt;&lt;a href=&#34;#cb4-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; n &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++n)&lt;/span&gt;
&lt;span id=&#34;cb4-53&#34;&gt;&lt;a href=&#34;#cb4-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-54&#34;&gt;&lt;a href=&#34;#cb4-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-55&#34;&gt;&lt;a href=&#34;#cb4-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb4-56&#34;&gt;&lt;a href=&#34;#cb4-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[n] += (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (n / l);&lt;/span&gt;
&lt;span id=&#34;cb4-57&#34;&gt;&lt;a href=&#34;#cb4-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-58&#34;&gt;&lt;a href=&#34;#cb4-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-59&#34;&gt;&lt;a href=&#34;#cb4-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-60&#34;&gt;&lt;a href=&#34;#cb4-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-61&#34;&gt;&lt;a href=&#34;#cb4-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb4-62&#34;&gt;&lt;a href=&#34;#cb4-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-63&#34;&gt;&lt;a href=&#34;#cb4-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-64&#34;&gt;&lt;a href=&#34;#cb4-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; up = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb4-65&#34;&gt;&lt;a href=&#34;#cb4-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= up; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-66&#34;&gt;&lt;a href=&#34;#cb4-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-67&#34;&gt;&lt;a href=&#34;#cb4-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l));&lt;/span&gt;
&lt;span id=&#34;cb4-68&#34;&gt;&lt;a href=&#34;#cb4-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += (ll)(mu[r] - mu[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * f[n / l] * f[m / l];&lt;/span&gt;
&lt;span id=&#34;cb4-69&#34;&gt;&lt;a href=&#34;#cb4-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-70&#34;&gt;&lt;a href=&#34;#cb4-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-71&#34;&gt;&lt;a href=&#34;#cb4-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-72&#34;&gt;&lt;a href=&#34;#cb4-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-73&#34;&gt;&lt;a href=&#34;#cb4-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb4-74&#34;&gt;&lt;a href=&#34;#cb4-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-75&#34;&gt;&lt;a href=&#34;#cb4-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    get_mu();&lt;/span&gt;
&lt;span id=&#34;cb4-76&#34;&gt;&lt;a href=&#34;#cb4-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    get_f();&lt;/span&gt;
&lt;span id=&#34;cb4-77&#34;&gt;&lt;a href=&#34;#cb4-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T = read();&lt;/span&gt;
&lt;span id=&#34;cb4-78&#34;&gt;&lt;a href=&#34;#cb4-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb4-79&#34;&gt;&lt;a href=&#34;#cb4-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-80&#34;&gt;&lt;a href=&#34;#cb4-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb4-81&#34;&gt;&lt;a href=&#34;#cb4-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, solve(n, m));&lt;/span&gt;
&lt;span id=&#34;cb4-82&#34;&gt;&lt;a href=&#34;#cb4-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-83&#34;&gt;&lt;a href=&#34;#cb4-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-84&#34;&gt;&lt;a href=&#34;#cb4-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-3&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\tau(ij) = \sum_{x\mid i}\sum_{y\mid j}[\gcd(x, y) = 1]
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;重要结论。&lt;/p&gt;
&lt;h2 id=&#34;spoj5971-lcmsum---lcm-sum&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP5971&#34;&gt;SPOJ5971 LCMSUM - LCM Sum&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-4&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 组数据，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\operatorname{lcm}(i,n)\quad\text{s.t. }1\le T\le 3\times 10^5,1\le n\le 10^6
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;solution-2&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;先推式子： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\operatorname{lcm}(i, n) = \sum_{i = 1}^n\frac{in}{\gcd(i,n)}
\]&lt;/span&gt; 这一步相当显然。接下来由于这个式子不是很好处理，而我们知道 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = \gcd(n - i, n)\)&lt;/span&gt;，所以考虑把 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 这一项提出来，然后复制一遍倒序求和： &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\left(\sum_{i = 1}^{n - 1}\frac{in}{\gcd(i, n)} + \sum_{i = n - 1}^1\frac{in}{\gcd(n - i, n)} \right)
\]&lt;/span&gt; 合并分母相同的项， &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\sum_{i = 1}^{n - 1}\frac{n^2}{\gcd(i, n)} + n
\]&lt;/span&gt; 最后让这个式子好看一点： &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\sum_{i = 1}^n\frac{n^2}{\gcd(i, n)} + \frac n 2
\]&lt;/span&gt; 由于很多的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n)\)&lt;/span&gt; 是相同的，所以考虑把它们并在一起计算。枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = d\)&lt;/span&gt;，那会有多少个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = d\)&lt;/span&gt; 呢？我们知道 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\gcd(i, n) = d\iff \gcd(\frac id, \frac nd) = 1\)&lt;/span&gt;，所以有 &lt;span class=&#34;math inline&#34;&gt;\(\phi(\frac nd)\)&lt;/span&gt; 个这样的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 是满足的。 &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\sum_{d|n}\frac{n^2\phi(\frac nd)}{d} + \frac n2
\]&lt;/span&gt; 提出一个 &lt;span class=&#34;math inline&#34;&gt;\(n/2\)&lt;/span&gt;，然后换一下元 &lt;span class=&#34;math inline&#34;&gt;\(d&amp;#39; = n / d\)&lt;/span&gt;，得到 &lt;span class=&#34;math display&#34;&gt;\[
=\frac 12 n\left(\sum_{d&amp;#39;|n}d&amp;#39;\phi(d&amp;#39;) + 1\right)
\]&lt;/span&gt; 令 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = \displaystyle\sum_{d|n}d\phi(d)\)&lt;/span&gt;，则我们最终要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\frac12(g(n) + 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt; 为积性函数，所以可以线性筛做到 &lt;span class=&#34;math inline&#34;&gt;\(O(n)-O(1)\)&lt;/span&gt; 的复杂度。下面考虑如何线性筛出 &lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先对于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为质数，显然 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = 1 + n\phi(n) = 1 + n(n - 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后考虑正在用 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 来筛 &lt;span class=&#34;math inline&#34;&gt;\(g(i\cdot p_j)\)&lt;/span&gt; 的过程。若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, p_j) = 1\)&lt;/span&gt;，直接使用积性函数的性质即可。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(p_j|i\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(i = i&amp;#39;\cdot p_j^w\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i&amp;#39;, p_j) = 1\)&lt;/span&gt;，然后可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(i\cdot p_j) &amp;amp;= g(i&amp;#39;)\cdot g(p_j^{w + 1})\\
g(i)&amp;amp;=g(i’)\cdot g(p_j^w)
\end{aligned}
\]&lt;/span&gt; 然后我们考虑计算 &lt;span class=&#34;math inline&#34;&gt;\(g(p_j^k)\)&lt;/span&gt;，显然地， &lt;span class=&#34;math display&#34;&gt;\[
g(p_j^k) = \sum_{w = 0}^kp_j^w\cdot\phi(p_j^w)
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(\phi(p_j^w) = p_j^{w - 1}\cdot(p_j - 1)\)&lt;/span&gt;，所以 &lt;span class=&#34;math display&#34;&gt;\[
g(p_j^k) = \sum_{w = 0}^kp_j^{2w-1}(p_j - 1)
\]&lt;/span&gt; 于是 &lt;span class=&#34;math inline&#34;&gt;\(g(p_j^{w + 1}) = p_j^{2w + 1}(p_j - 1) + g(p_j^k)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;回到之前的两个式子，将两式相减，可以得到 &lt;span class=&#34;math display&#34;&gt;\[
g(i\cdot p_j) - g(i) = g(i&amp;#39;)\cdot p_j^{2w + 1}\cdot(p_j - 1)
\]&lt;/span&gt; 同理，由于 &lt;span class=&#34;math inline&#34;&gt;\(p_j|i\)&lt;/span&gt;，所以 &lt;span class=&#34;math display&#34;&gt;\[
g(i) - g(\frac{i}{p_j}) = g(i&amp;#39;)\cdot p_j^{2w - 1}\cdot(p_j - 1)
\]&lt;/span&gt; 所以两式相除消去 &lt;span class=&#34;math inline&#34;&gt;\(g(i&amp;#39;)\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
g(i\cdot p_j) = g(i) + \left(g(i) - g(\frac{i}{p_j})\right)\cdot p_j^2
\]&lt;/span&gt; 所以我们就在 &lt;span class=&#34;math inline&#34;&gt;\(O(n + T)\)&lt;/span&gt; 的时间内解决了这题。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p[maxn], flg[maxn], cntp;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flg[i]) p[++cntp] = i, g[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= cntp &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            flg[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i * p[j]] = g[i] + (g[i] - g[i / p[j]]) * p[j] * p[j];&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            g[i * p[j]] = g[i] * g[p[j]];&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T = read();&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read();&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, (g[n] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-4&#34;&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = \gcd(n - i, n)\)&lt;/span&gt;（更相减损术）&lt;/li&gt;
&lt;li&gt;对于很多项取值相等的项可以考虑提出来（类似整除分块的思想）&lt;/li&gt;
&lt;li&gt;对于积性函数是可以线性筛的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hdu-4944-fsfs-game&#34;&gt;&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=4944&#34;&gt;hdu 4944 FSF’s game&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;见 &lt;a href=&#34;https://oi.imyangty.com/sol-hdu4944/&#34;&gt;题解 hdu 4944 FSF’s game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要就是把奇奇怪怪的东西化简了。把问题化归到求 LCMSUM 那道题去。&lt;/p&gt;
&lt;h2 id=&#34;bzoj-3601.-一个人的数论&#34;&gt;&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3601&#34;&gt;BZOJ #3601. 一个人的数论&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;见 &lt;a href=&#34;https://oi.imyangty.com/sol-bzoj3601/&#34;&gt;题解 BZOJ #3601. 一个人的数论&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要是化简之后将自然数幂之和化开用高斯消元，之后 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 计算那个积性函数的值。&lt;/p&gt;
&lt;h2 id=&#34;p1829-国家集训队crash的数字表格-jzptab&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1829&#34;&gt;&lt;strong&gt;P1829&lt;/strong&gt; [国家集训队]Crash的数字表格 / JZPTAB&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-5&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\operatorname{lcm}(i, j)\bmod 20101009
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;solution-3&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;先把 lcm 变成 gcd： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{\gcd(i, j)}
\]&lt;/span&gt; 枚举 gcd： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^n\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{d}[\gcd(i,j) = d]
\]&lt;/span&gt; 然后是经典套路： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^nd\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij\sum_{k\mid \gcd(i,j)}\mu(k)
\]&lt;/span&gt; 再然后，枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij[k\mid i][k\mid j]
\]&lt;/span&gt; 之后应该就能化简了： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)k^2\sum_{i = 1}^{\lfloor\frac{n}{kd}\rfloor}\sum_{j = 1}^{\lfloor\frac{m}{kd}\rfloor}ij
\]&lt;/span&gt; 后面这个 &lt;span class=&#34;math inline&#34;&gt;\(f(x,y)=\sum_{i= 1}^x\sum_{j= 1}^yij\)&lt;/span&gt; 可以化简成 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{n(n+ 1)m(m+1)}{4}\)&lt;/span&gt;，然后我们最终得到的式子就是 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^nd\sum_{k=1}^{\lfloor\frac nd\rfloor}\mu(k)k^2f(\lfloor n/kd\rfloor, \lfloor m/kd\rfloor)
\]&lt;/span&gt; 我们令 &lt;span class=&#34;math inline&#34;&gt;\(S(n,m) = \displaystyle\sum_{k=1}^{\min(n,m)}\mu(k)k^2f(\lfloor n/k\rfloor, \lfloor m/k\rfloor)\)&lt;/span&gt;。这个东西可以先筛出 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n)n^2\)&lt;/span&gt; 之后用整除分块来做。然后，我们的答案明显为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d= 1}^{\min(n,m)}dS(\lfloor n/d\rfloor,\lfloor m/d\rfloor)\)&lt;/span&gt;。可以再套一层分块来做。&lt;/p&gt;
&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;
&lt;p&gt;取模和 ll 的细节是有点烦的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; isp[maxn], p[maxn], mu[maxn], cnt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint sum[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, N) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) p[++cnt] = i, mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= cnt &amp;amp;&amp;amp; i * p[j] &amp;lt;= N; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            isp[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, N) sum[i] = sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (modint)i * i * mu[i];&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; modint(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * x * (x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; % mod) * modint(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * y * (y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; % mod);}&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint S(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l), top);&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += (sum[r] - sum[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * f(n / l, m / l);&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sieve();&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m; read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l), top);&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (l + r) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; % mod * S(n / l, m / l);&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>平衡树笔记</title>
        <link>https://oi.imyangty.com/note-bst/</link>
        <pubDate>Sat, 12 Dec 2020 14:20:29 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-bst/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg8.webp" alt="Featured image of post 平衡树笔记" /&gt;&lt;h2 id=&#34;二叉搜索树bst&#34;&gt;二叉搜索树(BST)&lt;/h2&gt;
&lt;p&gt;BST 是一种常用的数据结构，每个节点储存着一个可以比较大小的权值，并且其满足如下性质：对于任意节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，其左子树（如果存在）内所有节点的权值均小于 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的权值，其右子树（如果存在）内所有节点的权值均大于 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的权值。&lt;/p&gt;
&lt;p&gt;不难发现这棵树可以做很多事情：这棵树的中序遍历就是排好序的序列，并且可以很方便的进行插入删除和查找操作（只需层层递归即可），同时可以统计一个元素的排名（只需看左边有多少节点）。&lt;/p&gt;
&lt;p&gt;然而，如果插入的序列是一个递增的序列，则 BST 的复杂度可以退化到 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;，这样的话查找一个元素的复杂度和在线性表内查找就没有什么区别了，需要进行优化。&lt;/p&gt;
&lt;p&gt;不难发现，对于一个集合，如果我们将他建构成一棵 BST，可以有很多情况，而很明显地：左右平衡的结构是相对比较优的，这样子的话操作的期望复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;，达到了我们的目的。&lt;/p&gt;
&lt;p&gt;下面学习一些比较常用的可以使 BST 平衡的手法&lt;/p&gt;
&lt;h2 id=&#34;treap&#34;&gt;Treap&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;Treap=Tree+Heap，是一种相对好写的平衡 BST（简称平衡树），从其命名可以看出来它是一个堆（Heap) 与 BST（Tree）的结合体。&lt;/p&gt;
&lt;p&gt;Treap 有如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是一棵关于元素值 val 的 BST&lt;/li&gt;
&lt;li&gt;是关于权值 priority（一般是随机的）的堆（小根大根没什么区别）&lt;/li&gt;
&lt;li&gt;val 和 priority 确定时，Treap 唯一&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样随机给元素分配权值可以使得 Treap 不容易退化成链，使查找/插入/删除/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/排名的操作都是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;h3 id=&#34;initialization&#34;&gt;Initialization&lt;/h3&gt;
&lt;p&gt;首先是 Treap 的数组形式定义（指针太难写了而且容易出奇奇怪怪的 bug）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; treap&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//存储左/右儿子的编号&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt,size;&lt;span class=&#34;co&#34;&gt;//存储当前元素的数量和子树大小&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val,p;&lt;span class=&#34;co&#34;&gt;//val为元素值，p为随机权值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}t[maxn];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面操作类似于线段树的 pushup，主要是下面信息改变后维护子树大小用&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size=t[u].cnt+t[L].size+t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;旋转&#34;&gt;旋转&lt;/h3&gt;
&lt;p&gt;接下来了解一下 Treap 的核心操作：旋转。&lt;/p&gt;
&lt;p&gt;Treap 的旋转操作只需要实行一次，说人话就是为了保持堆的性质，将某节点的儿子旋转上来，同时要使树仍满足 BST 的性质，怎么实现呢？看下图：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/treap_rotate.png&#34; title=&#34;Treap 的单旋&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;Treap 的单旋&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;画图理解后，代码就比较容易写了：&lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 是旋转方式，0 为旋转左儿子上来（右旋），1 则反之亦然。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d)&lt;span class=&#34;co&#34;&gt;// x 引用是为了方便修改，一般传进来的参就是 t[u].ch[x]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k=t[x].ch[d];&lt;span class=&#34;co&#34;&gt;//要旋转上来的节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[x].ch[d]=t[k].ch[d^&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[k].ch[d^&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]=x;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(x);&lt;span class=&#34;co&#34;&gt;//这里一定要先维护 x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(x=k);&lt;span class=&#34;co&#34;&gt;//然后将 x 的值改变，并维护之&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的维护顺序&lt;/strong&gt;，因为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的 size 是要从 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 那里更新来的，所以要先处理好儿子的结果。&lt;/p&gt;
&lt;h3 id=&#34;插入删除&#34;&gt;插入/删除&lt;/h3&gt;
&lt;p&gt;插入操作。直接从根开始，二分查找到对应位置，如果已经存在则 &lt;code&gt;++cnt&lt;/code&gt;，如果不存在就新建节点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;co&#34;&gt;//如果 val 不存在&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u=++cnt;&lt;span class=&#34;co&#34;&gt;//开一个新节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size=t[u].cnt=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val=val;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].p=rand();&lt;span class=&#34;co&#34;&gt;//随机一个权值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size++;&lt;span class=&#34;co&#34;&gt;//因为加到子树里面了，所以 ++size&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val==val)&lt;span class=&#34;co&#34;&gt;//找到了就直接增加cnt&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d=t[u].val&amp;lt;val;&lt;span class=&#34;co&#34;&gt;//比较巧妙的写法，待插入值大的话就是1，对应右儿子，反之亦然&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(t[u].ch[d],val);&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].p&amp;gt;t[t[u].ch[d]].p)&lt;span class=&#34;co&#34;&gt;//维护小根堆，如果插入后破坏了堆的性质&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u,d);&lt;span class=&#34;co&#34;&gt;//就把对应儿子旋上来&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除操作。比较难搞，遇到一个节点的时候分为如下情况：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;当前节点不是待删除节点，递归儿子查找删除&lt;/li&gt;
&lt;li&gt;当前节点是待删除节点但是个数大于 1，个数– 然后返回&lt;/li&gt;
&lt;li&gt;当前节点是待删除节点且个数为 1&lt;/li&gt;
&lt;li&gt;至少有一个儿子为空：把另外一个儿子翻上来，然后直接丢掉自己&lt;/li&gt;
&lt;li&gt;两个儿子都不为空：把随机权值较低的儿子翻上来，然后化为 1 情况继续递归&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//访问到空了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val==val)&lt;span class=&#34;co&#34;&gt;//找到待删除节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].cnt&amp;gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//多于一个就只删除一个&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].size--;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d=t[L].p&amp;gt;t[R].p;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;((!L)||(!R))&lt;span class=&#34;co&#34;&gt;//如果左或右有至少一边为空&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u=L+R;&lt;span class=&#34;co&#34;&gt;//直接把非空的赋给 u&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; rotate(u,d),delnode(u,val);&lt;span class=&#34;co&#34;&gt;//否则就把随机权值更小的儿子翻上来，然后递归处理&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; t[u].size--,delnode(t[u].ch[t[u].val&amp;lt;val],val);&lt;span class=&#34;co&#34;&gt;//size--，然后递归到儿子里面删除&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;查询排名第-k-大小&#34;&gt;查询排名/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/小&lt;/h3&gt;
&lt;p&gt;查询排名操作。这个就比较简单了，同时也是我们为什么要维护每个节点的 size。看代码即能理解：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//如果到了空节点，返回 1，因为排名可以排到 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val==val)&lt;span class=&#34;co&#34;&gt;//如果找到了对应的数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[L].size+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//返回左儿子的大小加 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val&amp;gt;val)&lt;span class=&#34;co&#34;&gt;//如果当前节点大于待查找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(L,val);&lt;span class=&#34;co&#34;&gt;//递归查找左儿子&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(R,val)+t[L].size+t[u].cnt;&lt;span class=&#34;co&#34;&gt;//这里比较容易错，因为需要加上左儿子和节点本身产生的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查询第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小/大。这里实现查询第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小，理解了排名操作基本就能写出来了。值得注意的是这里既可以递归操作，也可以直接迭代写出来。&lt;/p&gt;
&lt;p&gt;递归：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = L ? t[L].size : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(L, k);&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k &amp;lt;= lsize + t[u].cnt)&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(R, k - t[u].cnt - lsize);&lt;span class=&#34;co&#34;&gt;//k要减去贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非递归：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u=root;&lt;span class=&#34;co&#34;&gt;//从根节点开始向下查找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k&amp;lt;=t[L].size)&lt;span class=&#34;co&#34;&gt;//如果待查询的 k 小于左子树大小&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u=L;&lt;span class=&#34;co&#34;&gt;//往左走&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k&amp;gt;t[L].size+t[u].cnt)&lt;span class=&#34;co&#34;&gt;//如果大于了左边和本身产生的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k-=t[L].size+t[u].cnt,u=R;&lt;span class=&#34;co&#34;&gt;//首先 k 要减去贡献，然后再往右走&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;span class=&#34;co&#34;&gt;//否则就是找到了，直接返回即可&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继完整代码&#34;&gt;前驱后继/完整代码&lt;/h3&gt;
&lt;p&gt;前驱和后继。前驱的定义为“小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最大的数”。为了满足“小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;”，如果当前节点大于等于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，则在左儿子里面查找。但如果发现了小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的数，为了满足“最大的数”，要在其右子树里面继续查找，结合代码会更好理解。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;co&#34;&gt;//查到了空节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -inf;&lt;span class=&#34;co&#34;&gt;//就返回一个不会对答案产生贡献的 -inf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val&amp;gt;=val)&lt;span class=&#34;co&#34;&gt;//如果不满足“小于 val“ 的性质&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pre(L,val);&lt;span class=&#34;co&#34;&gt;//就在左儿子里面找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(pre(R,val),t[u].val);&lt;span class=&#34;co&#34;&gt;//取max是为了处理万一右儿子不存在&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; nxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;span class=&#34;co&#34;&gt;//与前驱同理&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; inf;&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val&amp;lt;=val)&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; nxt(R,val);&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min(nxt(L,val),t[u].val);&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所以 &lt;a href=&#34;https://www.luogu.com.cn/problem/P6136&#34; title=&#34;洛谷 P6136&#34;&gt;洛谷 P6136&lt;/a&gt; 的代码如下（省略了一些不关键的定义）：&lt;strong&gt;（建议不要提交 P3369，有很多问题没有考虑到的 Treap 是可以通过那道题的，建议交加强版）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;climits&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x?-s:s;&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt;+&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, inf = INT_MAX-&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root, lastans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; treap&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, p;&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, cnt;&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb10-36&#34;&gt;&lt;a href=&#34;#cb10-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-37&#34;&gt;&lt;a href=&#34;#cb10-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-38&#34;&gt;&lt;a href=&#34;#cb10-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-39&#34;&gt;&lt;a href=&#34;#cb10-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d)&lt;/span&gt;
&lt;span id=&#34;cb10-40&#34;&gt;&lt;a href=&#34;#cb10-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-41&#34;&gt;&lt;a href=&#34;#cb10-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = t[u].ch[d];&lt;/span&gt;
&lt;span id=&#34;cb10-42&#34;&gt;&lt;a href=&#34;#cb10-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].ch[d] = t[k].ch[d ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-43&#34;&gt;&lt;a href=&#34;#cb10-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[k].ch[d^&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = u;&lt;/span&gt;
&lt;span id=&#34;cb10-44&#34;&gt;&lt;a href=&#34;#cb10-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb10-45&#34;&gt;&lt;a href=&#34;#cb10-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u = k);&lt;/span&gt;
&lt;span id=&#34;cb10-46&#34;&gt;&lt;a href=&#34;#cb10-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-47&#34;&gt;&lt;a href=&#34;#cb10-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-48&#34;&gt;&lt;a href=&#34;#cb10-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-49&#34;&gt;&lt;a href=&#34;#cb10-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-50&#34;&gt;&lt;a href=&#34;#cb10-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-51&#34;&gt;&lt;a href=&#34;#cb10-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-52&#34;&gt;&lt;a href=&#34;#cb10-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-53&#34;&gt;&lt;a href=&#34;#cb10-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb10-54&#34;&gt;&lt;a href=&#34;#cb10-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-55&#34;&gt;&lt;a href=&#34;#cb10-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb10-56&#34;&gt;&lt;a href=&#34;#cb10-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].p = rand();&lt;/span&gt;
&lt;span id=&#34;cb10-57&#34;&gt;&lt;a href=&#34;#cb10-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-58&#34;&gt;&lt;a href=&#34;#cb10-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-59&#34;&gt;&lt;a href=&#34;#cb10-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size++;&lt;/span&gt;
&lt;span id=&#34;cb10-60&#34;&gt;&lt;a href=&#34;#cb10-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val == val)&lt;/span&gt;
&lt;span id=&#34;cb10-61&#34;&gt;&lt;a href=&#34;#cb10-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-62&#34;&gt;&lt;a href=&#34;#cb10-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb10-63&#34;&gt;&lt;a href=&#34;#cb10-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-64&#34;&gt;&lt;a href=&#34;#cb10-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-65&#34;&gt;&lt;a href=&#34;#cb10-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d = val &amp;gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb10-66&#34;&gt;&lt;a href=&#34;#cb10-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(t[u].ch[d], val);&lt;/span&gt;
&lt;span id=&#34;cb10-67&#34;&gt;&lt;a href=&#34;#cb10-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[t[u].ch[d]].p &amp;lt; t[u].p)&lt;/span&gt;
&lt;span id=&#34;cb10-68&#34;&gt;&lt;a href=&#34;#cb10-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u, d);&lt;/span&gt;
&lt;span id=&#34;cb10-69&#34;&gt;&lt;a href=&#34;#cb10-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-70&#34;&gt;&lt;a href=&#34;#cb10-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-71&#34;&gt;&lt;a href=&#34;#cb10-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-72&#34;&gt;&lt;a href=&#34;#cb10-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-73&#34;&gt;&lt;a href=&#34;#cb10-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-74&#34;&gt;&lt;a href=&#34;#cb10-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-75&#34;&gt;&lt;a href=&#34;#cb10-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-76&#34;&gt;&lt;a href=&#34;#cb10-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val == val)&lt;/span&gt;
&lt;span id=&#34;cb10-77&#34;&gt;&lt;a href=&#34;#cb10-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-78&#34;&gt;&lt;a href=&#34;#cb10-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-79&#34;&gt;&lt;a href=&#34;#cb10-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-80&#34;&gt;&lt;a href=&#34;#cb10-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb10-81&#34;&gt;&lt;a href=&#34;#cb10-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].size--;&lt;/span&gt;
&lt;span id=&#34;cb10-82&#34;&gt;&lt;a href=&#34;#cb10-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-83&#34;&gt;&lt;a href=&#34;#cb10-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-84&#34;&gt;&lt;a href=&#34;#cb10-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((!L) || (!R))&lt;/span&gt;
&lt;span id=&#34;cb10-85&#34;&gt;&lt;a href=&#34;#cb10-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L + R;&lt;/span&gt;
&lt;span id=&#34;cb10-86&#34;&gt;&lt;a href=&#34;#cb10-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-87&#34;&gt;&lt;a href=&#34;#cb10-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-88&#34;&gt;&lt;a href=&#34;#cb10-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d = t[L].p &amp;gt; t[R].p;&lt;/span&gt;
&lt;span id=&#34;cb10-89&#34;&gt;&lt;a href=&#34;#cb10-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rotate(u, d);&lt;/span&gt;
&lt;span id=&#34;cb10-90&#34;&gt;&lt;a href=&#34;#cb10-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(u, val);&lt;/span&gt;
&lt;span id=&#34;cb10-91&#34;&gt;&lt;a href=&#34;#cb10-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-92&#34;&gt;&lt;a href=&#34;#cb10-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-93&#34;&gt;&lt;a href=&#34;#cb10-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-94&#34;&gt;&lt;a href=&#34;#cb10-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size--, delnode(t[u].ch[val &amp;gt; t[u].val], val);&lt;/span&gt;
&lt;span id=&#34;cb10-95&#34;&gt;&lt;a href=&#34;#cb10-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-96&#34;&gt;&lt;a href=&#34;#cb10-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-97&#34;&gt;&lt;a href=&#34;#cb10-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-98&#34;&gt;&lt;a href=&#34;#cb10-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-99&#34;&gt;&lt;a href=&#34;#cb10-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-100&#34;&gt;&lt;a href=&#34;#cb10-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-101&#34;&gt;&lt;a href=&#34;#cb10-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-102&#34;&gt;&lt;a href=&#34;#cb10-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val == t[u].val)&lt;/span&gt;
&lt;span id=&#34;cb10-103&#34;&gt;&lt;a href=&#34;#cb10-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-104&#34;&gt;&lt;a href=&#34;#cb10-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;lt; t[u].val)&lt;/span&gt;
&lt;span id=&#34;cb10-105&#34;&gt;&lt;a href=&#34;#cb10-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(L, val);&lt;/span&gt;
&lt;span id=&#34;cb10-106&#34;&gt;&lt;a href=&#34;#cb10-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(R, val) + t[L].size + t[u].cnt;&lt;/span&gt;
&lt;span id=&#34;cb10-107&#34;&gt;&lt;a href=&#34;#cb10-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-108&#34;&gt;&lt;a href=&#34;#cb10-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-109&#34;&gt;&lt;a href=&#34;#cb10-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb10-110&#34;&gt;&lt;a href=&#34;#cb10-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-111&#34;&gt;&lt;a href=&#34;#cb10-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-112&#34;&gt;&lt;a href=&#34;#cb10-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-113&#34;&gt;&lt;a href=&#34;#cb10-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = L ? t[L].size : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-114&#34;&gt;&lt;a href=&#34;#cb10-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb10-115&#34;&gt;&lt;a href=&#34;#cb10-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(L, k);&lt;/span&gt;
&lt;span id=&#34;cb10-116&#34;&gt;&lt;a href=&#34;#cb10-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k &amp;lt;= lsize + t[u].cnt)&lt;/span&gt;
&lt;span id=&#34;cb10-117&#34;&gt;&lt;a href=&#34;#cb10-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb10-118&#34;&gt;&lt;a href=&#34;#cb10-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(R, k - t[u].cnt - lsize);&lt;/span&gt;
&lt;span id=&#34;cb10-119&#34;&gt;&lt;a href=&#34;#cb10-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-120&#34;&gt;&lt;a href=&#34;#cb10-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-121&#34;&gt;&lt;a href=&#34;#cb10-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-122&#34;&gt;&lt;a href=&#34;#cb10-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-123&#34;&gt;&lt;a href=&#34;#cb10-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-124&#34;&gt;&lt;a href=&#34;#cb10-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -inf;&lt;/span&gt;
&lt;span id=&#34;cb10-125&#34;&gt;&lt;a href=&#34;#cb10-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;gt;= val)&lt;/span&gt;
&lt;span id=&#34;cb10-126&#34;&gt;&lt;a href=&#34;#cb10-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pre(L, val);&lt;/span&gt;
&lt;span id=&#34;cb10-127&#34;&gt;&lt;a href=&#34;#cb10-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(t[u].val, pre(R, val));&lt;/span&gt;
&lt;span id=&#34;cb10-128&#34;&gt;&lt;a href=&#34;#cb10-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-129&#34;&gt;&lt;a href=&#34;#cb10-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-130&#34;&gt;&lt;a href=&#34;#cb10-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-131&#34;&gt;&lt;a href=&#34;#cb10-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-132&#34;&gt;&lt;a href=&#34;#cb10-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-133&#34;&gt;&lt;a href=&#34;#cb10-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; inf;&lt;/span&gt;
&lt;span id=&#34;cb10-134&#34;&gt;&lt;a href=&#34;#cb10-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= val)&lt;/span&gt;
&lt;span id=&#34;cb10-135&#34;&gt;&lt;a href=&#34;#cb10-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; suc(R, val);&lt;/span&gt;
&lt;span id=&#34;cb10-136&#34;&gt;&lt;a href=&#34;#cb10-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min(t[u].val, suc(L, val));&lt;/span&gt;
&lt;span id=&#34;cb10-137&#34;&gt;&lt;a href=&#34;#cb10-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-138&#34;&gt;&lt;a href=&#34;#cb10-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-139&#34;&gt;&lt;a href=&#34;#cb10-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb10-140&#34;&gt;&lt;a href=&#34;#cb10-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-141&#34;&gt;&lt;a href=&#34;#cb10-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb10-142&#34;&gt;&lt;a href=&#34;#cb10-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-143&#34;&gt;&lt;a href=&#34;#cb10-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb10-144&#34;&gt;&lt;a href=&#34;#cb10-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(root, read());&lt;/span&gt;
&lt;span id=&#34;cb10-145&#34;&gt;&lt;a href=&#34;#cb10-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--)&lt;/span&gt;
&lt;span id=&#34;cb10-146&#34;&gt;&lt;a href=&#34;#cb10-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-147&#34;&gt;&lt;a href=&#34;#cb10-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read() ^ lastans;&lt;/span&gt;
&lt;span id=&#34;cb10-148&#34;&gt;&lt;a href=&#34;#cb10-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt)&lt;/span&gt;
&lt;span id=&#34;cb10-149&#34;&gt;&lt;a href=&#34;#cb10-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-150&#34;&gt;&lt;a href=&#34;#cb10-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-151&#34;&gt;&lt;a href=&#34;#cb10-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(root, x);&lt;/span&gt;
&lt;span id=&#34;cb10-152&#34;&gt;&lt;a href=&#34;#cb10-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-153&#34;&gt;&lt;a href=&#34;#cb10-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-154&#34;&gt;&lt;a href=&#34;#cb10-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(root, x);&lt;/span&gt;
&lt;span id=&#34;cb10-155&#34;&gt;&lt;a href=&#34;#cb10-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-156&#34;&gt;&lt;a href=&#34;#cb10-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-157&#34;&gt;&lt;a href=&#34;#cb10-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = rank(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-158&#34;&gt;&lt;a href=&#34;#cb10-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-159&#34;&gt;&lt;a href=&#34;#cb10-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-160&#34;&gt;&lt;a href=&#34;#cb10-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = kth(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-161&#34;&gt;&lt;a href=&#34;#cb10-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-162&#34;&gt;&lt;a href=&#34;#cb10-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-163&#34;&gt;&lt;a href=&#34;#cb10-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = pre(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-164&#34;&gt;&lt;a href=&#34;#cb10-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-165&#34;&gt;&lt;a href=&#34;#cb10-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-166&#34;&gt;&lt;a href=&#34;#cb10-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = suc(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-167&#34;&gt;&lt;a href=&#34;#cb10-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-168&#34;&gt;&lt;a href=&#34;#cb10-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-169&#34;&gt;&lt;a href=&#34;#cb10-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-170&#34;&gt;&lt;a href=&#34;#cb10-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb10-171&#34;&gt;&lt;a href=&#34;#cb10-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-172&#34;&gt;&lt;a href=&#34;#cb10-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;fhq-treap无旋-treap&#34;&gt;FHQ-Treap（无旋 Treap）&lt;/h2&gt;
&lt;p&gt;由范浩强大佬发明的神级数据结构，相比于 Treap 不用旋转，且增添了两个核心操作：分裂（split）与合并（merge），这两个操作是无旋 Treap 的核心操作，其余的所有操作都是基于 split 和 merge 的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;两个值相同的元素是分别储存在两个不同的节点里面的，不像 Treap 的 &lt;code&gt;cnt&lt;/code&gt; 域&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;分裂&#34;&gt;分裂&lt;/h3&gt;
&lt;p&gt;该操作把一棵 Treap 分裂成两棵，有两种分裂方法：按值分裂以及按大小分裂。这里先考虑按值分裂。&lt;/p&gt;
&lt;p&gt;该种分裂方式按照一个阈值 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 把一棵 Treap 分裂成两棵，满足左树的所有元素值均&lt;strong&gt;小于等于&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，右树的所有元素值均&lt;strong&gt;大于&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。由于 Treap 满足堆的性质，所以直接分裂即可，不需要特殊维护。&lt;/p&gt;
&lt;p&gt;一般来说 &lt;code&gt;split()&lt;/code&gt; 函数使用递归实现：&lt;code&gt;void split(int u, int k, int &amp;amp;x, int &amp;amp;y)&lt;/code&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 表示当前节点，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 不再赘述，两个引用 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 是放返回值（即分裂出来的左树的根和右树的根）的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x = u;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            split(R, k, R, y);&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            y = u;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            split(L, k, x, L);&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来解释一下上面的代码：&lt;/p&gt;
&lt;p&gt;首先如果这个节点不存在，就不能再继续了，直接 &lt;code&gt;x = y = 0;&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;然后如果这个节点的值小于等于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则这个节点肯定是划到左树里面去了，所以有 &lt;code&gt;x = u;&lt;/code&gt;，然后对于这个节点的左子树，肯定是被划到左子树里面去的，所以继续分裂右子树，即 &lt;code&gt;split(R, k, R, y);&lt;/code&gt;。如果无法理解，下面来看看具体步骤：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split1.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;初始的树&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这是一棵分裂前的 FHQ-Treap（省略了节点编号和随机权值，只保留了值），让我们以阈值 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt; 将其分裂。一开始 &lt;code&gt;split(root, 7, x, y)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;首先我们找到树根 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(6 \le 7\)&lt;/span&gt;，所以划到左树里面，同时它的左子树也都属于左树。（属于左树的节点标红）&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split2.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来 &lt;code&gt;split(R, k, R, y)&lt;/code&gt; 即 &lt;code&gt;split(10的编号, 7, t[6].ch[1], y)&lt;/code&gt; 现在来到节点 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;，注意到 &lt;span class=&#34;math inline&#34;&gt;\(10 &amp;gt; 6\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 划给右树，&lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 的所有右节点也都划给右树：此时 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 就被赋为 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 的编号。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split3.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;然后 &lt;code&gt;split(L, k，x, L)&lt;/code&gt; 即 &lt;code&gt;split(8的编号, 7, t[6].ch[1], t[10].ch[0])&lt;/code&gt;，&lt;span class=&#34;math inline&#34;&gt;\(8 &amp;gt; 7\)&lt;/span&gt;&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split4.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来 &lt;code&gt;split(L, k, x, L)&lt;/code&gt; 即 &lt;code&gt;split(7的编号, 7, t[6].ch[1], t[8].ch[0])&lt;/code&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\(7 \le 7\)&lt;/span&gt;，所以划到左子树，并且 &lt;span class=&#34;math inline&#34;&gt;\(x=u\)&lt;/span&gt;，即把 &lt;code&gt;t[6].ch[1]&lt;/code&gt; 赋为 7，&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split5.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 4&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;然后 &lt;code&gt;split(R, k, R, y)&lt;/code&gt; 即 &lt;code&gt;split(0, 7, t[7].ch[1], t[8].ch[0])&lt;/code&gt;，发现节点不存在，将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 都赋为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，返回即可。这样就完成了分裂。&lt;/p&gt;
&lt;p&gt;总结一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遇到比小于等于阈值的节点，由于其左子树一定划为左树，所以要继续分裂右子树，传下去左树的根是当前节点的右儿子，在更深的递归层会更新。&lt;/li&gt;
&lt;li&gt;遇到大于阈值的节点，同理，分裂左子树，传下去右树的根是当前节点的左儿子，在更深的递归层会更新&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个递归可能一开始不太好理解，但是理解了会发现其实挺简单的。&lt;/p&gt;
&lt;h3 id=&#34;合并&#34;&gt;合并&lt;/h3&gt;
&lt;p&gt;合并的时候是把两棵 FHQ-Treap &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 合并成一棵，必须满足：&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 中所有节点的值小于等于 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 中所有节点的值，然后合并的结果也要满足 Treap 的性质（即堆的性质）。&lt;/p&gt;
&lt;p&gt;合并函数 &lt;code&gt;int merge(int x, int y)&lt;/code&gt; 返回合并后的树根，&lt;span class=&#34;math inline&#34;&gt;\(x,y\)&lt;/span&gt; 分别为两棵待合并树的根。由于要维护堆的性质，实现如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y)&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key) {&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(x);&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(y);&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先如果两棵树的其中一棵为空，则直接返回另一棵的根即可。&lt;/p&gt;
&lt;p&gt;然后维护一个小根堆（小根大根其实无所谓），如果发现左边子树根（&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;）的权小一些，说明是 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 做父亲，将其右子树与 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 合并的结果作为其右子树即可，合并完记得 pushup 一下就行了。&lt;/p&gt;
&lt;p&gt;反之亦然，将 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左子树与 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 合并的结果作为 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左子树即可，&lt;strong&gt;注意传参的顺序：先传左树后传右树&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;还是比较好理解的。学习完了两个基本操作，就可以很轻松的实现插入删除排名 &lt;span class=&#34;math inline&#34;&gt;\(k\text{th}\)&lt;/span&gt; 前驱后继等操作了。&lt;/p&gt;
&lt;h3 id=&#34;插入&#34;&gt;插入&lt;/h3&gt;
&lt;p&gt;值得注意的是，FHQ-Treap 在处理相同值的时候是单独开新节点的，不像一般的 Treap 维护 &lt;code&gt;cnt&lt;/code&gt; 域。&lt;/p&gt;
&lt;p&gt;核心思想就是以待插入值为阈值分裂成树 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，新节点和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 合并即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[++cnt].val = val;&lt;span class=&#34;co&#34;&gt;//开新节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].key = rnd();&lt;span class=&#34;co&#34;&gt;//随机分配权&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;span class=&#34;co&#34;&gt;//临时变量&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;span class=&#34;co&#34;&gt;//按照 val 分裂&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, cnt), y);&lt;span class=&#34;co&#34;&gt;//先合并 x 和新节点，再将结果与 y 合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;删除&#34;&gt;删除&lt;/h3&gt;
&lt;p&gt;这个操作比较精妙：考虑删除 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;，先将整棵树分裂成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 三棵树，满足：&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 中所有节点值均小于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 中均等于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 中均大于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;。这时候我们发现要删除一个 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 就只需要拿掉 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的根节点就可以了，其等价于直接合并 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左右子树。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;span class=&#34;co&#34;&gt;//按照 val-1 分裂出 x 树&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(y, val, y, z);&lt;span class=&#34;co&#34;&gt;//再按照 val 分裂出 y 和 z&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = merge(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t[y].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//直接拿掉 y 的根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, y), z);&lt;span class=&#34;co&#34;&gt;//再复原就可以了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;排名第-k-大小&#34;&gt;排名/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/小&lt;/h3&gt;
&lt;p&gt;查询排名很类似于删除操作，但只需要分裂出小于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 的树然后返回其大小加一的值即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[x].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然而查询 &lt;span class=&#34;math inline&#34;&gt;\(k\text{th}\)&lt;/span&gt; 时就不能分裂/合并了，老老实实按照大多数平衡树的写法就可以了，建议非递归，常数小一些。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L)&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lsize = t[L].size;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, u = R;&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继&#34;&gt;前驱/后继&lt;/h3&gt;
&lt;p&gt;前驱：小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 且最大的数，所以利用排名和 &lt;span class=&#34;math inline&#34;&gt;\(k\text{th}\)&lt;/span&gt; 即可。查找 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的排名然后输出对应该排名减一的数即可。&lt;/p&gt;
&lt;p&gt;后继：查找 &lt;span class=&#34;math inline&#34;&gt;\(x+1\)&lt;/span&gt; 的排名然后输出该排名对应的数即可&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;普通平衡树的实现&#34;&gt;普通平衡树的实现&lt;/h3&gt;
&lt;p&gt;可以发现代码明显短于一般 Treap 和 Splay，但常数大于 Treap 小于 Splay。&lt;strong&gt;关键是特别好写好背&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6136&#34; title=&#34;洛谷 P6136&#34;&gt;洛谷 P6136&lt;/a&gt; 的代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb18-14&#34;&gt;&lt;a href=&#34;#cb18-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-15&#34;&gt;&lt;a href=&#34;#cb18-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb18-16&#34;&gt;&lt;a href=&#34;#cb18-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-17&#34;&gt;&lt;a href=&#34;#cb18-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-18&#34;&gt;&lt;a href=&#34;#cb18-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb18-19&#34;&gt;&lt;a href=&#34;#cb18-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size;&lt;/span&gt;
&lt;span id=&#34;cb18-20&#34;&gt;&lt;a href=&#34;#cb18-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb18-21&#34;&gt;&lt;a href=&#34;#cb18-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, key;&lt;/span&gt;
&lt;span id=&#34;cb18-22&#34;&gt;&lt;a href=&#34;#cb18-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb18-23&#34;&gt;&lt;a href=&#34;#cb18-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb18-24&#34;&gt;&lt;a href=&#34;#cb18-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-25&#34;&gt;&lt;a href=&#34;#cb18-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-26&#34;&gt;&lt;a href=&#34;#cb18-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb18-27&#34;&gt;&lt;a href=&#34;#cb18-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-28&#34;&gt;&lt;a href=&#34;#cb18-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb18-29&#34;&gt;&lt;a href=&#34;#cb18-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-30&#34;&gt;&lt;a href=&#34;#cb18-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-31&#34;&gt;&lt;a href=&#34;#cb18-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-32&#34;&gt;&lt;a href=&#34;#cb18-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-33&#34;&gt;&lt;a href=&#34;#cb18-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb18-34&#34;&gt;&lt;a href=&#34;#cb18-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb18-35&#34;&gt;&lt;a href=&#34;#cb18-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-36&#34;&gt;&lt;a href=&#34;#cb18-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-37&#34;&gt;&lt;a href=&#34;#cb18-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-38&#34;&gt;&lt;a href=&#34;#cb18-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb18-39&#34;&gt;&lt;a href=&#34;#cb18-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u;&lt;/span&gt;
&lt;span id=&#34;cb18-40&#34;&gt;&lt;a href=&#34;#cb18-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(R, k, R, y);&lt;/span&gt;
&lt;span id=&#34;cb18-41&#34;&gt;&lt;a href=&#34;#cb18-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-42&#34;&gt;&lt;a href=&#34;#cb18-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb18-43&#34;&gt;&lt;a href=&#34;#cb18-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u;&lt;/span&gt;
&lt;span id=&#34;cb18-44&#34;&gt;&lt;a href=&#34;#cb18-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(L, k, x, L);&lt;/span&gt;
&lt;span id=&#34;cb18-45&#34;&gt;&lt;a href=&#34;#cb18-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-46&#34;&gt;&lt;a href=&#34;#cb18-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb18-47&#34;&gt;&lt;a href=&#34;#cb18-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-48&#34;&gt;&lt;a href=&#34;#cb18-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-49&#34;&gt;&lt;a href=&#34;#cb18-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-50&#34;&gt;&lt;a href=&#34;#cb18-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb18-51&#34;&gt;&lt;a href=&#34;#cb18-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y)&lt;/span&gt;
&lt;span id=&#34;cb18-52&#34;&gt;&lt;a href=&#34;#cb18-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb18-53&#34;&gt;&lt;a href=&#34;#cb18-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key) {&lt;/span&gt;
&lt;span id=&#34;cb18-54&#34;&gt;&lt;a href=&#34;#cb18-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb18-55&#34;&gt;&lt;a href=&#34;#cb18-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(x);&lt;/span&gt;
&lt;span id=&#34;cb18-56&#34;&gt;&lt;a href=&#34;#cb18-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb18-57&#34;&gt;&lt;a href=&#34;#cb18-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-58&#34;&gt;&lt;a href=&#34;#cb18-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb18-59&#34;&gt;&lt;a href=&#34;#cb18-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb18-60&#34;&gt;&lt;a href=&#34;#cb18-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(y);&lt;/span&gt;
&lt;span id=&#34;cb18-61&#34;&gt;&lt;a href=&#34;#cb18-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y;&lt;/span&gt;
&lt;span id=&#34;cb18-62&#34;&gt;&lt;a href=&#34;#cb18-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-63&#34;&gt;&lt;a href=&#34;#cb18-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-64&#34;&gt;&lt;a href=&#34;#cb18-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-65&#34;&gt;&lt;a href=&#34;#cb18-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-66&#34;&gt;&lt;a href=&#34;#cb18-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[++cnt].val = val;&lt;/span&gt;
&lt;span id=&#34;cb18-67&#34;&gt;&lt;a href=&#34;#cb18-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].key = rand();&lt;/span&gt;
&lt;span id=&#34;cb18-68&#34;&gt;&lt;a href=&#34;#cb18-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-69&#34;&gt;&lt;a href=&#34;#cb18-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb18-70&#34;&gt;&lt;a href=&#34;#cb18-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-71&#34;&gt;&lt;a href=&#34;#cb18-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, cnt), y);&lt;/span&gt;
&lt;span id=&#34;cb18-72&#34;&gt;&lt;a href=&#34;#cb18-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-73&#34;&gt;&lt;a href=&#34;#cb18-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-74&#34;&gt;&lt;a href=&#34;#cb18-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-75&#34;&gt;&lt;a href=&#34;#cb18-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-76&#34;&gt;&lt;a href=&#34;#cb18-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb18-77&#34;&gt;&lt;a href=&#34;#cb18-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-78&#34;&gt;&lt;a href=&#34;#cb18-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(y, val, y, z);&lt;/span&gt;
&lt;span id=&#34;cb18-79&#34;&gt;&lt;a href=&#34;#cb18-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = merge(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t[y].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb18-80&#34;&gt;&lt;a href=&#34;#cb18-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb18-81&#34;&gt;&lt;a href=&#34;#cb18-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-82&#34;&gt;&lt;a href=&#34;#cb18-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-83&#34;&gt;&lt;a href=&#34;#cb18-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-84&#34;&gt;&lt;a href=&#34;#cb18-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-85&#34;&gt;&lt;a href=&#34;#cb18-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb18-86&#34;&gt;&lt;a href=&#34;#cb18-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-87&#34;&gt;&lt;a href=&#34;#cb18-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[x].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-88&#34;&gt;&lt;a href=&#34;#cb18-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-89&#34;&gt;&lt;a href=&#34;#cb18-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb18-90&#34;&gt;&lt;a href=&#34;#cb18-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-91&#34;&gt;&lt;a href=&#34;#cb18-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-92&#34;&gt;&lt;a href=&#34;#cb18-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb18-93&#34;&gt;&lt;a href=&#34;#cb18-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb18-94&#34;&gt;&lt;a href=&#34;#cb18-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb18-95&#34;&gt;&lt;a href=&#34;#cb18-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-96&#34;&gt;&lt;a href=&#34;#cb18-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L) lsize = t[L].size;&lt;/span&gt;
&lt;span id=&#34;cb18-97&#34;&gt;&lt;a href=&#34;#cb18-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb18-98&#34;&gt;&lt;a href=&#34;#cb18-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb18-99&#34;&gt;&lt;a href=&#34;#cb18-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-100&#34;&gt;&lt;a href=&#34;#cb18-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, u = R;&lt;/span&gt;
&lt;span id=&#34;cb18-101&#34;&gt;&lt;a href=&#34;#cb18-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb18-102&#34;&gt;&lt;a href=&#34;#cb18-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-103&#34;&gt;&lt;a href=&#34;#cb18-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-104&#34;&gt;&lt;a href=&#34;#cb18-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-105&#34;&gt;&lt;a href=&#34;#cb18-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-106&#34;&gt;&lt;a href=&#34;#cb18-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-107&#34;&gt;&lt;a href=&#34;#cb18-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-108&#34;&gt;&lt;a href=&#34;#cb18-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-109&#34;&gt;&lt;a href=&#34;#cb18-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-110&#34;&gt;&lt;a href=&#34;#cb18-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb18-111&#34;&gt;&lt;a href=&#34;#cb18-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-112&#34;&gt;&lt;a href=&#34;#cb18-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-113&#34;&gt;&lt;a href=&#34;#cb18-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb18-114&#34;&gt;&lt;a href=&#34;#cb18-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read(), ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lastans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-115&#34;&gt;&lt;a href=&#34;#cb18-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-116&#34;&gt;&lt;a href=&#34;#cb18-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb18-117&#34;&gt;&lt;a href=&#34;#cb18-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(read());&lt;/span&gt;
&lt;span id=&#34;cb18-118&#34;&gt;&lt;a href=&#34;#cb18-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb18-119&#34;&gt;&lt;a href=&#34;#cb18-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read() ^ lastans;&lt;/span&gt;
&lt;span id=&#34;cb18-120&#34;&gt;&lt;a href=&#34;#cb18-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt) {&lt;/span&gt;
&lt;span id=&#34;cb18-121&#34;&gt;&lt;a href=&#34;#cb18-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-122&#34;&gt;&lt;a href=&#34;#cb18-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x);&lt;/span&gt;
&lt;span id=&#34;cb18-123&#34;&gt;&lt;a href=&#34;#cb18-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-124&#34;&gt;&lt;a href=&#34;#cb18-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-125&#34;&gt;&lt;a href=&#34;#cb18-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(x);&lt;/span&gt;
&lt;span id=&#34;cb18-126&#34;&gt;&lt;a href=&#34;#cb18-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-127&#34;&gt;&lt;a href=&#34;#cb18-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-128&#34;&gt;&lt;a href=&#34;#cb18-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = rank(x));&lt;/span&gt;
&lt;span id=&#34;cb18-129&#34;&gt;&lt;a href=&#34;#cb18-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-130&#34;&gt;&lt;a href=&#34;#cb18-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-131&#34;&gt;&lt;a href=&#34;#cb18-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = kth(x));&lt;/span&gt;
&lt;span id=&#34;cb18-132&#34;&gt;&lt;a href=&#34;#cb18-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-133&#34;&gt;&lt;a href=&#34;#cb18-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-134&#34;&gt;&lt;a href=&#34;#cb18-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = pre(x));&lt;/span&gt;
&lt;span id=&#34;cb18-135&#34;&gt;&lt;a href=&#34;#cb18-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-136&#34;&gt;&lt;a href=&#34;#cb18-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-137&#34;&gt;&lt;a href=&#34;#cb18-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = suc(x));&lt;/span&gt;
&lt;span id=&#34;cb18-138&#34;&gt;&lt;a href=&#34;#cb18-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-139&#34;&gt;&lt;a href=&#34;#cb18-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb18-140&#34;&gt;&lt;a href=&#34;#cb18-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-141&#34;&gt;&lt;a href=&#34;#cb18-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb18-142&#34;&gt;&lt;a href=&#34;#cb18-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-143&#34;&gt;&lt;a href=&#34;#cb18-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;按大小分裂文艺平衡树的实现&#34;&gt;按大小分裂/文艺平衡树的实现&lt;/h3&gt;
&lt;p&gt;FHQ-Treap 还有另外一种分裂方式：按大小分裂，将一棵 FHQ-Treap 分裂成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的大小为给定值。这样子分裂能够让我们更好更方便地处理区间问题，下面以文艺平衡树为例：&lt;/p&gt;
&lt;p&gt;首先是分裂函数：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[L].size &amp;lt; size)&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u, split(R, size - t[L].size - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, R, y);&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb19-10&#34;&gt;&lt;a href=&#34;#cb19-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u, split(L, size, x, L);&lt;/span&gt;
&lt;span id=&#34;cb19-11&#34;&gt;&lt;a href=&#34;#cb19-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb19-12&#34;&gt;&lt;a href=&#34;#cb19-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-13&#34;&gt;&lt;a href=&#34;#cb19-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基本和一般的按值分裂是差不多的，只不过要注意的就是如果要继续分裂右子树，传下去的 &lt;code&gt;size&lt;/code&gt; 值是需要改变的。&lt;/p&gt;
&lt;p&gt;剩下的也没什么了，对于要翻转区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，直接分裂成三棵树。具体地，按照 &lt;span class=&#34;math inline&#34;&gt;\(l-1\)&lt;/span&gt; 分裂成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，再将 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 按照 &lt;span class=&#34;math inline&#34;&gt;\(r-l+1\)&lt;/span&gt; 分裂成 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt;，此时 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 树就是提取出来的区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，打上标记即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现文艺平衡树的时候需要特别注意标记的下传&lt;/strong&gt;，实现如下，比 Splay 简洁且不容易写错。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;100000&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb20-9&#34;&gt;&lt;a href=&#34;#cb20-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-10&#34;&gt;&lt;a href=&#34;#cb20-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-11&#34;&gt;&lt;a href=&#34;#cb20-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb20-12&#34;&gt;&lt;a href=&#34;#cb20-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb20-13&#34;&gt;&lt;a href=&#34;#cb20-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb20-14&#34;&gt;&lt;a href=&#34;#cb20-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb20-15&#34;&gt;&lt;a href=&#34;#cb20-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb20-16&#34;&gt;&lt;a href=&#34;#cb20-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-17&#34;&gt;&lt;a href=&#34;#cb20-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-18&#34;&gt;&lt;a href=&#34;#cb20-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb20-19&#34;&gt;&lt;a href=&#34;#cb20-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb20-20&#34;&gt;&lt;a href=&#34;#cb20-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size;&lt;/span&gt;
&lt;span id=&#34;cb20-21&#34;&gt;&lt;a href=&#34;#cb20-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, key;&lt;/span&gt;
&lt;span id=&#34;cb20-22&#34;&gt;&lt;a href=&#34;#cb20-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; tag;&lt;/span&gt;
&lt;span id=&#34;cb20-23&#34;&gt;&lt;a href=&#34;#cb20-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb20-24&#34;&gt;&lt;a href=&#34;#cb20-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb20-25&#34;&gt;&lt;a href=&#34;#cb20-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb20-26&#34;&gt;&lt;a href=&#34;#cb20-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-27&#34;&gt;&lt;a href=&#34;#cb20-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb20-28&#34;&gt;&lt;a href=&#34;#cb20-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-29&#34;&gt;&lt;a href=&#34;#cb20-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb20-30&#34;&gt;&lt;a href=&#34;#cb20-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-31&#34;&gt;&lt;a href=&#34;#cb20-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-32&#34;&gt;&lt;a href=&#34;#cb20-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-33&#34;&gt;&lt;a href=&#34;#cb20-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-34&#34;&gt;&lt;a href=&#34;#cb20-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushdown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb20-35&#34;&gt;&lt;a href=&#34;#cb20-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].tag) {&lt;/span&gt;
&lt;span id=&#34;cb20-36&#34;&gt;&lt;a href=&#34;#cb20-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = L; L = R; R = tmp;&lt;/span&gt;
&lt;span id=&#34;cb20-37&#34;&gt;&lt;a href=&#34;#cb20-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[L].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[R].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-38&#34;&gt;&lt;a href=&#34;#cb20-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].tag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-39&#34;&gt;&lt;a href=&#34;#cb20-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-40&#34;&gt;&lt;a href=&#34;#cb20-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-41&#34;&gt;&lt;a href=&#34;#cb20-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-42&#34;&gt;&lt;a href=&#34;#cb20-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-43&#34;&gt;&lt;a href=&#34;#cb20-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb20-44&#34;&gt;&lt;a href=&#34;#cb20-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb20-45&#34;&gt;&lt;a href=&#34;#cb20-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-46&#34;&gt;&lt;a href=&#34;#cb20-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-47&#34;&gt;&lt;a href=&#34;#cb20-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-48&#34;&gt;&lt;a href=&#34;#cb20-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb20-49&#34;&gt;&lt;a href=&#34;#cb20-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[L].size &amp;lt; size)&lt;/span&gt;
&lt;span id=&#34;cb20-50&#34;&gt;&lt;a href=&#34;#cb20-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u, split(R, size - t[L].size - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, R, y);&lt;/span&gt;
&lt;span id=&#34;cb20-51&#34;&gt;&lt;a href=&#34;#cb20-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-52&#34;&gt;&lt;a href=&#34;#cb20-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u, split(L, size, x, L);&lt;/span&gt;
&lt;span id=&#34;cb20-53&#34;&gt;&lt;a href=&#34;#cb20-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb20-54&#34;&gt;&lt;a href=&#34;#cb20-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-55&#34;&gt;&lt;a href=&#34;#cb20-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-56&#34;&gt;&lt;a href=&#34;#cb20-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-57&#34;&gt;&lt;a href=&#34;#cb20-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb20-58&#34;&gt;&lt;a href=&#34;#cb20-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y)&lt;/span&gt;
&lt;span id=&#34;cb20-59&#34;&gt;&lt;a href=&#34;#cb20-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb20-60&#34;&gt;&lt;a href=&#34;#cb20-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key)&lt;/span&gt;
&lt;span id=&#34;cb20-61&#34;&gt;&lt;a href=&#34;#cb20-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pushdown(x), t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y), pushup(x), x;&lt;/span&gt;
&lt;span id=&#34;cb20-62&#34;&gt;&lt;a href=&#34;#cb20-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-63&#34;&gt;&lt;a href=&#34;#cb20-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pushdown(y), t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]), pushup(y), y;&lt;/span&gt;
&lt;span id=&#34;cb20-64&#34;&gt;&lt;a href=&#34;#cb20-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-65&#34;&gt;&lt;a href=&#34;#cb20-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-66&#34;&gt;&lt;a href=&#34;#cb20-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; newnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb20-67&#34;&gt;&lt;a href=&#34;#cb20-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[++cnt].val = val;&lt;/span&gt;
&lt;span id=&#34;cb20-68&#34;&gt;&lt;a href=&#34;#cb20-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].key = rand();&lt;/span&gt;
&lt;span id=&#34;cb20-69&#34;&gt;&lt;a href=&#34;#cb20-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-70&#34;&gt;&lt;a href=&#34;#cb20-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cnt;&lt;/span&gt;
&lt;span id=&#34;cb20-71&#34;&gt;&lt;a href=&#34;#cb20-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-72&#34;&gt;&lt;a href=&#34;#cb20-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-73&#34;&gt;&lt;a href=&#34;#cb20-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; reverse(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb20-74&#34;&gt;&lt;a href=&#34;#cb20-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb20-75&#34;&gt;&lt;a href=&#34;#cb20-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb20-76&#34;&gt;&lt;a href=&#34;#cb20-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(y, r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y, z);&lt;/span&gt;
&lt;span id=&#34;cb20-77&#34;&gt;&lt;a href=&#34;#cb20-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[y].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-78&#34;&gt;&lt;a href=&#34;#cb20-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb20-79&#34;&gt;&lt;a href=&#34;#cb20-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-80&#34;&gt;&lt;a href=&#34;#cb20-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-81&#34;&gt;&lt;a href=&#34;#cb20-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-82&#34;&gt;&lt;a href=&#34;#cb20-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb20-83&#34;&gt;&lt;a href=&#34;#cb20-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb20-84&#34;&gt;&lt;a href=&#34;#cb20-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-85&#34;&gt;&lt;a href=&#34;#cb20-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb20-86&#34;&gt;&lt;a href=&#34;#cb20-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(L);&lt;/span&gt;
&lt;span id=&#34;cb20-87&#34;&gt;&lt;a href=&#34;#cb20-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, t[u].val);&lt;/span&gt;
&lt;span id=&#34;cb20-88&#34;&gt;&lt;a href=&#34;#cb20-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(R);&lt;/span&gt;
&lt;span id=&#34;cb20-89&#34;&gt;&lt;a href=&#34;#cb20-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-90&#34;&gt;&lt;a href=&#34;#cb20-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-91&#34;&gt;&lt;a href=&#34;#cb20-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-92&#34;&gt;&lt;a href=&#34;#cb20-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb20-93&#34;&gt;&lt;a href=&#34;#cb20-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb20-94&#34;&gt;&lt;a href=&#34;#cb20-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb20-95&#34;&gt;&lt;a href=&#34;#cb20-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = merge(root, newnode(i));&lt;/span&gt;
&lt;span id=&#34;cb20-96&#34;&gt;&lt;a href=&#34;#cb20-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb20-97&#34;&gt;&lt;a href=&#34;#cb20-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = read(), r = read();&lt;/span&gt;
&lt;span id=&#34;cb20-98&#34;&gt;&lt;a href=&#34;#cb20-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        reverse(l, r);&lt;/span&gt;
&lt;span id=&#34;cb20-99&#34;&gt;&lt;a href=&#34;#cb20-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-100&#34;&gt;&lt;a href=&#34;#cb20-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(root);&lt;/span&gt;
&lt;span id=&#34;cb20-101&#34;&gt;&lt;a href=&#34;#cb20-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-102&#34;&gt;&lt;a href=&#34;#cb20-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可见 &lt;span class=&#34;math inline&#34;&gt;\(100\)&lt;/span&gt; 行出头就写完了，比 Splay 好写太多了。&lt;/p&gt;
&lt;h3 id=&#34;维护区间时的一个-trick&#34;&gt;维护区间时的一个 trick&lt;/h3&gt;
&lt;p&gt;当我们在使用 FHQ-Treap 维护一段序列时，有时需要快速找出某元素在序列中的位置，怎么办呢？&lt;/p&gt;
&lt;p&gt;此时可以在建树时记录下这个元素在树中的节点编号，然后在找寻其排名时自底而上记录在它左边的节点个数。具体可以这样：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getrank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa)&lt;/span&gt;
&lt;span id=&#34;cb21-5&#34;&gt;&lt;a href=&#34;#cb21-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb21-6&#34;&gt;&lt;a href=&#34;#cb21-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u)&lt;/span&gt;
&lt;span id=&#34;cb21-7&#34;&gt;&lt;a href=&#34;#cb21-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret += t[t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-8&#34;&gt;&lt;a href=&#34;#cb21-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].fa;&lt;/span&gt;
&lt;span id=&#34;cb21-9&#34;&gt;&lt;a href=&#34;#cb21-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-10&#34;&gt;&lt;a href=&#34;#cb21-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb21-11&#34;&gt;&lt;a href=&#34;#cb21-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于一个节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，首先它的排名就是其左子树大小加一，然后往上跳，在跳的过程中判断一下它是父亲节点的左儿子还是右儿子，如果是右儿子的话，&lt;strong&gt;父亲本身和其兄弟节点都会产生贡献&lt;/strong&gt;，一路搜到根即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同时 pushup 的时候要更新父亲&lt;/strong&gt;，pushup 一个节点的时候顺带更新其两个儿子的父亲（需要判断是否存在）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-4&#34;&gt;&lt;a href=&#34;#cb22-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L)&lt;/span&gt;
&lt;span id=&#34;cb22-5&#34;&gt;&lt;a href=&#34;#cb22-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size += t[L].size, t[L].fa = u;&lt;/span&gt;
&lt;span id=&#34;cb22-6&#34;&gt;&lt;a href=&#34;#cb22-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (R)&lt;/span&gt;
&lt;span id=&#34;cb22-7&#34;&gt;&lt;a href=&#34;#cb22-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size += t[R].size, t[R].fa = u;&lt;/span&gt;
&lt;span id=&#34;cb22-8&#34;&gt;&lt;a href=&#34;#cb22-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-9&#34;&gt;&lt;a href=&#34;#cb22-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相关题目 &lt;a href=&#34;https://www.luogu.com.cn/problem/P2596&#34;&gt;[ZJOI2006]书架&lt;/a&gt;、&lt;a href=&#34;https://www.luogu.com.cn/problem/P3165&#34;&gt;[CQOI2014]排序机械臂&lt;/a&gt;，当然这些题都可以用 Splay 解决。&lt;/p&gt;
&lt;h3 id=&#34;启发式合并&#34;&gt;启发式合并&lt;/h3&gt;
&lt;p&gt;此处的合并与之前的 merge 操作不同，此处合并的两棵树就是两棵一般的树，不能简单地直接 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 合并。此时我们能做的就是将小树暴力递归加入到大树中，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(\log^2 n)\)&lt;/span&gt;。具体实现如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) { &lt;span class=&#34;co&#34;&gt;//表示将 u 节点加入 root 为根的新树中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb23-3&#34;&gt;&lt;a href=&#34;#cb23-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb23-4&#34;&gt;&lt;a href=&#34;#cb23-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;/span&gt;
&lt;span id=&#34;cb23-5&#34;&gt;&lt;a href=&#34;#cb23-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, u), y);&lt;/span&gt;
&lt;span id=&#34;cb23-6&#34;&gt;&lt;a href=&#34;#cb23-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-7&#34;&gt;&lt;a href=&#34;#cb23-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb23-8&#34;&gt;&lt;a href=&#34;#cb23-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-9&#34;&gt;&lt;a href=&#34;#cb23-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root) { &lt;span class=&#34;co&#34;&gt;//这个 root 的引用是新树的树根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-10&#34;&gt;&lt;a href=&#34;#cb23-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb23-11&#34;&gt;&lt;a href=&#34;#cb23-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-12&#34;&gt;&lt;a href=&#34;#cb23-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(L, root);&lt;span class=&#34;co&#34;&gt;//先把左子树加入&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-13&#34;&gt;&lt;a href=&#34;#cb23-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(R, root);&lt;span class=&#34;co&#34;&gt;//加入右子树&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-14&#34;&gt;&lt;a href=&#34;#cb23-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    L = R = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//清空儿子，这一步不写会出问题&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-15&#34;&gt;&lt;a href=&#34;#cb23-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(root, u);&lt;span class=&#34;co&#34;&gt;//再加入自己&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-16&#34;&gt;&lt;a href=&#34;#cb23-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-17&#34;&gt;&lt;a href=&#34;#cb23-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb23-18&#34;&gt;&lt;a href=&#34;#cb23-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-19&#34;&gt;&lt;a href=&#34;#cb23-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; join(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb23-20&#34;&gt;&lt;a href=&#34;#cb23-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].size &amp;gt; t[y].size)&lt;/span&gt;
&lt;span id=&#34;cb23-21&#34;&gt;&lt;a href=&#34;#cb23-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        swap(x, y);&lt;/span&gt;
&lt;span id=&#34;cb23-22&#34;&gt;&lt;a href=&#34;#cb23-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(x, y);&lt;span class=&#34;co&#34;&gt;//使 x 成为小树然后递归加入 y 中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-23&#34;&gt;&lt;a href=&#34;#cb23-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y;&lt;span class=&#34;co&#34;&gt;//返回新的根 y&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-24&#34;&gt;&lt;a href=&#34;#cb23-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相关试题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P3224&#34;&gt;[HNOI2012]永无乡&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;易错点&#34;&gt;易错点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分裂代码不背错就行&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;涉及到分裂完合并的时候&lt;strong&gt;一定记得更新根！！&lt;/strong&gt;即 &lt;code&gt;root = merge(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;类似第二点，删除节点过程中合并 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左右子树的时候&lt;strong&gt;千万记得更新 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;涉及到子树的操作千万&lt;strong&gt;提前 pushdown&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;splay&#34;&gt;Splay&lt;/h2&gt;
&lt;h3 id=&#34;简介initialization&#34;&gt;简介/Initialization&lt;/h3&gt;
&lt;p&gt;相较于两种 Treap，Splay（伸展树）则稍微难写一点，Splay 的核心操作就是 splay：即把一个节点旋转到根的位置，以此维护树的平衡。它相较于 Treap 的优点就是可以处理区间信息以及快速合并/分裂（虽然 fhqTreap 也能做到）。&lt;/p&gt;
&lt;p&gt;Splay 具有一切 BST 具有的性质，其相较于 Treap 的区别就是它是双旋的，这样可以保证均摊复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;（证明要用势能分析，我太菜暂时不会）。首先看下结构体如何定义：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;span class=&#34;co&#34;&gt;//与 treap 不同之处在于 splay 需要记录父亲节点的编号&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, size;&lt;/span&gt;
&lt;span id=&#34;cb24-5&#34;&gt;&lt;a href=&#34;#cb24-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val;&lt;/span&gt;
&lt;span id=&#34;cb24-6&#34;&gt;&lt;a href=&#34;#cb24-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;处理旋转的时候是需要知道这个节点是父亲的左儿子还是右儿子的，如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb25-2&#34;&gt;&lt;a href=&#34;#cb25-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb25-3&#34;&gt;&lt;a href=&#34;#cb25-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb25-4&#34;&gt;&lt;a href=&#34;#cb25-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;旋转后与 Treap 一样需要维护 size&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;旋转伸展splay&#34;&gt;旋转/伸展（Splay）&lt;/h3&gt;
&lt;p&gt;接下来就是该死的旋转操作了：考虑将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 节点旋转到 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的位置，（令 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的父节点为 &lt;span class=&#34;math inline&#34;&gt;\(gfa\)&lt;/span&gt;）图示如下：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r1.png&#34; title=&#34;step 1&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这是一开始的情况，首先判断 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是其父亲的哪个儿子，定义 &lt;span class=&#34;math inline&#34;&gt;\(d_1\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 表示是左儿子，&lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为右儿子，然后把其父亲的 &lt;span class=&#34;math inline&#34;&gt;\(d_1\)&lt;/span&gt; 儿子变成 &lt;code&gt;t[x].ch[d1^1]&lt;/code&gt;，如下，此时由于 &lt;span class=&#34;math inline&#34;&gt;\(d_1=0\)&lt;/span&gt;，所以 &lt;code&gt;d1^1&lt;/code&gt; 为右儿子：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r2.png&#34; title=&#34;step 2&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来用 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 连接 &lt;span class=&#34;math inline&#34;&gt;\(gfa\)&lt;/span&gt;，代替 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的位置&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r3.png&#34; title=&#34;step 3&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;最后把 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 接起来就可以了（即 &lt;code&gt;t[x].ch[d1^1]=fa&lt;/code&gt;）&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r4.png&#34; title=&#34;step 4&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 4&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这样，一次旋转操作就完成了，它完成的就是将一个节点往上旋转到其父亲的位置。代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb27-6&#34;&gt;&lt;a href=&#34;#cb27-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa)&lt;/span&gt;
&lt;span id=&#34;cb27-7&#34;&gt;&lt;a href=&#34;#cb27-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[gfa].ch[d2] = u;&lt;/span&gt;
&lt;span id=&#34;cb27-8&#34;&gt;&lt;a href=&#34;#cb27-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb27-9&#34;&gt;&lt;a href=&#34;#cb27-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u, t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb27-10&#34;&gt;&lt;a href=&#34;#cb27-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;span class=&#34;co&#34;&gt;//最后不忘维护，注意先维护 fa，理由同 treap&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-11&#34;&gt;&lt;a href=&#34;#cb27-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb27-12&#34;&gt;&lt;a href=&#34;#cb27-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来就是 splay 过程了，&lt;strong&gt;splay 操作的目的就是将指定节点旋转到根节点&lt;/strong&gt;，一次操作分为六种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的父亲为根，则旋转一次&lt;/li&gt;
&lt;li&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的父亲不为根，且 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的儿子类型相同（即“三点共线”，代码中就是 &lt;code&gt;get()&lt;/code&gt; 函数返回值相同），那么首先左/右旋 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt;，再左/右旋 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;（两次单旋的方向相同）&lt;/li&gt;
&lt;li&gt;如果在第二种情况种，&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的儿子类型不同，则将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 旋转两次，先左/右再右/左旋（两次单旋的方向不同）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;”三点共线“的情况见下图：&lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(gfa\)&lt;/span&gt;。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s1.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;可见我们先右旋 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt;，得到如下结果：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s2.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来再右旋 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，得到：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s3.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;三点不共线的情况如下图：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s4.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;此时 &lt;span class=&#34;math inline&#34;&gt;\(x=6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(fa=4\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(gfa=2\)&lt;/span&gt;，现在对 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 先进行一次右旋：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s5.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;再对 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 进行一次左旋：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s6.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;反复执行如上操作，直到 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 成为根后，整个 splay 过程就结束了。&lt;/p&gt;
&lt;p&gt;下面的 &lt;code&gt;splay(u,goal)&lt;/code&gt; 意为把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点伸展到 &lt;span class=&#34;math inline&#34;&gt;\(goal\)&lt;/span&gt; 节点的儿子处（&lt;span class=&#34;math inline&#34;&gt;\(goal=0\)&lt;/span&gt; 就是使 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 变成根节点）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;span class=&#34;co&#34;&gt;//一直伸展&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;span class=&#34;co&#34;&gt;//找到父亲和爷爷&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;span class=&#34;co&#34;&gt;//找到 u 是什么儿子，fa 是什么儿子。左0右1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;span class=&#34;co&#34;&gt;//如果爷爷不是根，则需要旋转两次，下面是旋转第一次&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-6&#34;&gt;&lt;a href=&#34;#cb28-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;span class=&#34;co&#34;&gt;//如果三点共线&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-7&#34;&gt;&lt;a href=&#34;#cb28-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;span class=&#34;co&#34;&gt;//先旋转 fa&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-8&#34;&gt;&lt;a href=&#34;#cb28-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-9&#34;&gt;&lt;a href=&#34;#cb28-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(u);&lt;span class=&#34;co&#34;&gt;//否则先旋转 u&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-10&#34;&gt;&lt;a href=&#34;#cb28-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb28-11&#34;&gt;&lt;a href=&#34;#cb28-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;span class=&#34;co&#34;&gt;//第二次旋转&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-12&#34;&gt;&lt;a href=&#34;#cb28-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-13&#34;&gt;&lt;a href=&#34;#cb28-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (goal == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//如果 u 成为根了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-14&#34;&gt;&lt;a href=&#34;#cb28-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;span class=&#34;co&#34;&gt;//更新根的值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-15&#34;&gt;&lt;a href=&#34;#cb28-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;插入-1&#34;&gt;插入&lt;/h3&gt;
&lt;p&gt;插入操作就比较简单了，由于 Splay 的形态是可以改变的，所以不需要递归。&lt;strong&gt;每插入一个元素都进行一次 Splay 操作让其变为根&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb29&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb29-1&#34;&gt;&lt;a href=&#34;#cb29-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb29-2&#34;&gt;&lt;a href=&#34;#cb29-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root, fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-3&#34;&gt;&lt;a href=&#34;#cb29-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u &amp;amp;&amp;amp; t[u].val != val)&lt;/span&gt;
&lt;span id=&#34;cb29-4&#34;&gt;&lt;a href=&#34;#cb29-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fa = u, u = t[u].ch[t[u].val &amp;lt; val];&lt;span class=&#34;co&#34;&gt;//往下走&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-5&#34;&gt;&lt;a href=&#34;#cb29-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u)&lt;span class=&#34;co&#34;&gt;//如果节点已经存在&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-6&#34;&gt;&lt;a href=&#34;#cb29-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb29-7&#34;&gt;&lt;a href=&#34;#cb29-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb29-8&#34;&gt;&lt;a href=&#34;#cb29-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;span class=&#34;co&#34;&gt;//否则新开节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-9&#34;&gt;&lt;a href=&#34;#cb29-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa)&lt;span class=&#34;co&#34;&gt;//如果自己不是根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-10&#34;&gt;&lt;a href=&#34;#cb29-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa].ch[t[fa].val &amp;lt; val] = u;&lt;/span&gt;
&lt;span id=&#34;cb29-11&#34;&gt;&lt;a href=&#34;#cb29-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb29-12&#34;&gt;&lt;a href=&#34;#cb29-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-13&#34;&gt;&lt;a href=&#34;#cb29-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb29-14&#34;&gt;&lt;a href=&#34;#cb29-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb29-15&#34;&gt;&lt;a href=&#34;#cb29-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//为了降低均摊复杂度，需要将新插入的节点 splay 到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-16&#34;&gt;&lt;a href=&#34;#cb29-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;排名第-k-小大&#34;&gt;排名/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小/大&lt;/h3&gt;
&lt;p&gt;由于 Splay 的形态可以改变，因此在查询排名的时候可以直接将其 splay 到树根，然后统计左子树大小再 +1 就可以了。当然首先需要找到对应的数在哪里，下面先实现 &lt;code&gt;find(int val)&lt;/code&gt; 函数，它返回刚好等于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 的节点的编号（如果存在的话），不存在则返回一个叶子节点（&lt;strong&gt;手玩一下便知它返回的要么是前驱要么是后继，但不一定是与 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 的值最接近的节点，但是一定可以保证返回的排名是正确的&lt;/strong&gt;）。然后 &lt;code&gt;rank()&lt;/code&gt; 函数的实现就相当简单了：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb30&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb30-1&#34;&gt;&lt;a href=&#34;#cb30-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb30-2&#34;&gt;&lt;a href=&#34;#cb30-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb30-3&#34;&gt;&lt;a href=&#34;#cb30-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].val != val &amp;amp;&amp;amp; t[u].ch[t[u].val &amp;lt; val])&lt;/span&gt;
&lt;span id=&#34;cb30-4&#34;&gt;&lt;a href=&#34;#cb30-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb30-5&#34;&gt;&lt;a href=&#34;#cb30-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb30-6&#34;&gt;&lt;a href=&#34;#cb30-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb30-7&#34;&gt;&lt;a href=&#34;#cb30-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb30-8&#34;&gt;&lt;a href=&#34;#cb30-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//先把对应节点旋转到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-9&#34;&gt;&lt;a href=&#34;#cb30-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//直接根的左子树大小加 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-10&#34;&gt;&lt;a href=&#34;#cb30-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;需要注意的是如果查询排名的数不存在的话会出一些奇奇怪怪的问题，所以在写加强版模板的时候推荐使用下面的写法：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb31&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb31-1&#34;&gt;&lt;a href=&#34;#cb31-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb31-2&#34;&gt;&lt;a href=&#34;#cb31-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb31-3&#34;&gt;&lt;a href=&#34;#cb31-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-4&#34;&gt;&lt;a href=&#34;#cb31-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb31-5&#34;&gt;&lt;a href=&#34;#cb31-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb31-6&#34;&gt;&lt;a href=&#34;#cb31-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小。类似递归的查找即可，注意查询右子树的时候要减去本身和左子树的贡献：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb32&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb32-1&#34;&gt;&lt;a href=&#34;#cb32-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb32-2&#34;&gt;&lt;a href=&#34;#cb32-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb32-3&#34;&gt;&lt;a href=&#34;#cb32-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb32-4&#34;&gt;&lt;a href=&#34;#cb32-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size)&lt;span class=&#34;co&#34;&gt;//如果第 k 小在左子树中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-5&#34;&gt;&lt;a href=&#34;#cb32-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb32-6&#34;&gt;&lt;a href=&#34;#cb32-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; t[L].size + t[u].cnt) { &lt;span class=&#34;co&#34;&gt;//如果第 k 小在右子树中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-7&#34;&gt;&lt;a href=&#34;#cb32-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= t[L].size + t[u].cnt;&lt;span class=&#34;co&#34;&gt;//减去 L 和 u 产生的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-8&#34;&gt;&lt;a href=&#34;#cb32-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb32-9&#34;&gt;&lt;a href=&#34;#cb32-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;span class=&#34;co&#34;&gt;//否则就是自己了，返回即可&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-10&#34;&gt;&lt;a href=&#34;#cb32-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb32-11&#34;&gt;&lt;a href=&#34;#cb32-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继删除&#34;&gt;前驱后继/删除&lt;/h3&gt;
&lt;p&gt;同排名操作，考虑直接把 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 节点翻到根。此时&lt;strong&gt;前驱要么就是根节点，要么就是左子树中最靠右的节点&lt;/strong&gt;。由 &lt;code&gt;find()&lt;/code&gt; 函数的性质，如果 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 存在，则前驱一定在左子树里面的最右边，如果 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 不存在，则翻上来的点要么是前驱要么是后继，如果小于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 就直接返回，大于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 则和第一种情况一样，在左子树里面的最右边。&lt;/p&gt;
&lt;p&gt;而后继几乎同理。不难写出如下代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb33&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb33-1&#34;&gt;&lt;a href=&#34;#cb33-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;span class=&#34;co&#34;&gt;//opt=0 是前驱，1 是后继&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-2&#34;&gt;&lt;a href=&#34;#cb33-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//先把对应节点翻到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-3&#34;&gt;&lt;a href=&#34;#cb33-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb33-4&#34;&gt;&lt;a href=&#34;#cb33-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt; val &amp;amp;&amp;amp; (!opt))&lt;span class=&#34;co&#34;&gt;//如果要找前驱并且根就是前驱，直接返回即可&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-5&#34;&gt;&lt;a href=&#34;#cb33-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb33-6&#34;&gt;&lt;a href=&#34;#cb33-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;gt; val &amp;amp;&amp;amp; opt)&lt;span class=&#34;co&#34;&gt;//同理，要查找后继并且根就是后继&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-7&#34;&gt;&lt;a href=&#34;#cb33-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb33-8&#34;&gt;&lt;a href=&#34;#cb33-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[opt];&lt;span class=&#34;co&#34;&gt;//否则到左/右子树查找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-9&#34;&gt;&lt;a href=&#34;#cb33-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;span class=&#34;co&#34;&gt;//查找最右/左边的节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-10&#34;&gt;&lt;a href=&#34;#cb33-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb33-11&#34;&gt;&lt;a href=&#34;#cb33-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb33-12&#34;&gt;&lt;a href=&#34;#cb33-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意这个函数返回的是前驱/后继在树中的编号，为什么要这样呢，为了下面的删除操作。&lt;/p&gt;
&lt;p&gt;删除一个数时，注意我们如果将其 splay 到根的话，会发现左右子树不好处理。怎么办呢，&lt;strong&gt;把前驱旋转到根，然后把后继翻到前驱的下面&lt;/strong&gt;，此时 &lt;code&gt;splay()&lt;/code&gt; 函数的 &lt;span class=&#34;math inline&#34;&gt;\(goal\)&lt;/span&gt; 参数就体现出它的作用了。&lt;/p&gt;
&lt;p&gt;不难发现，此时 &lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 一定是后继节点的左儿子&lt;/strong&gt;，如图（回想一下前驱和后继的定义，你会发现确实是这样的）：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_del.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;证明很简单，可以自己思考思考&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;问题现在就很简单了，只需要删除掉 &lt;span class=&#34;math inline&#34;&gt;\(suc\)&lt;/span&gt; 的左儿子就可以了，如果有多个那就 &lt;code&gt;cnt--&lt;/code&gt; 并把对应节点 splay 到根，只有一个就把 &lt;span class=&#34;math inline&#34;&gt;\(suc\)&lt;/span&gt; 的左儿子设为空即可。&lt;strong&gt;现在知道为什么上面前驱和后继的函数返回的是节点编号了吧&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb34&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb34-1&#34;&gt;&lt;a href=&#34;#cb34-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb34-2&#34;&gt;&lt;a href=&#34;#cb34-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre = getnxt(val, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-3&#34;&gt;&lt;a href=&#34;#cb34-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc = getnxt(val, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-4&#34;&gt;&lt;a href=&#34;#cb34-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(pre, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-5&#34;&gt;&lt;a href=&#34;#cb34-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(suc, pre);&lt;span class=&#34;co&#34;&gt;//把后继旋转到前驱的儿子&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-6&#34;&gt;&lt;a href=&#34;#cb34-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb34-7&#34;&gt;&lt;a href=&#34;#cb34-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb34-8&#34;&gt;&lt;a href=&#34;#cb34-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//不忘再splay一次&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-9&#34;&gt;&lt;a href=&#34;#cb34-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-10&#34;&gt;&lt;a href=&#34;#cb34-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-11&#34;&gt;&lt;a href=&#34;#cb34-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;普通平衡树的实现-1&#34;&gt;普通平衡树的实现&lt;/h3&gt;
&lt;p&gt;唯一要注意的就是一开始需要先插入正负无穷，然后算出来的排名要减一，查询的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 要加一&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb35&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb35-1&#34;&gt;&lt;a href=&#34;#cb35-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-2&#34;&gt;&lt;a href=&#34;#cb35-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-3&#34;&gt;&lt;a href=&#34;#cb35-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb35-4&#34;&gt;&lt;a href=&#34;#cb35-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb35-5&#34;&gt;&lt;a href=&#34;#cb35-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-6&#34;&gt;&lt;a href=&#34;#cb35-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb35-7&#34;&gt;&lt;a href=&#34;#cb35-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb35-8&#34;&gt;&lt;a href=&#34;#cb35-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-9&#34;&gt;&lt;a href=&#34;#cb35-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-10&#34;&gt;&lt;a href=&#34;#cb35-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb35-11&#34;&gt;&lt;a href=&#34;#cb35-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb35-12&#34;&gt;&lt;a href=&#34;#cb35-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb35-13&#34;&gt;&lt;a href=&#34;#cb35-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb35-14&#34;&gt;&lt;a href=&#34;#cb35-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb35-15&#34;&gt;&lt;a href=&#34;#cb35-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-16&#34;&gt;&lt;a href=&#34;#cb35-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-17&#34;&gt;&lt;a href=&#34;#cb35-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb35-18&#34;&gt;&lt;a href=&#34;#cb35-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb35-19&#34;&gt;&lt;a href=&#34;#cb35-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-20&#34;&gt;&lt;a href=&#34;#cb35-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, inf = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-21&#34;&gt;&lt;a href=&#34;#cb35-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb35-22&#34;&gt;&lt;a href=&#34;#cb35-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-23&#34;&gt;&lt;a href=&#34;#cb35-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay {&lt;/span&gt;
&lt;span id=&#34;cb35-24&#34;&gt;&lt;a href=&#34;#cb35-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;/span&gt;
&lt;span id=&#34;cb35-25&#34;&gt;&lt;a href=&#34;#cb35-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, size;&lt;/span&gt;
&lt;span id=&#34;cb35-26&#34;&gt;&lt;a href=&#34;#cb35-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val;&lt;/span&gt;
&lt;span id=&#34;cb35-27&#34;&gt;&lt;a href=&#34;#cb35-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb35-28&#34;&gt;&lt;a href=&#34;#cb35-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-29&#34;&gt;&lt;a href=&#34;#cb35-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb35-30&#34;&gt;&lt;a href=&#34;#cb35-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb35-31&#34;&gt;&lt;a href=&#34;#cb35-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-32&#34;&gt;&lt;a href=&#34;#cb35-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-33&#34;&gt;&lt;a href=&#34;#cb35-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb35-34&#34;&gt;&lt;a href=&#34;#cb35-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb35-35&#34;&gt;&lt;a href=&#34;#cb35-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-36&#34;&gt;&lt;a href=&#34;#cb35-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-37&#34;&gt;&lt;a href=&#34;#cb35-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-38&#34;&gt;&lt;a href=&#34;#cb35-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb35-39&#34;&gt;&lt;a href=&#34;#cb35-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb35-40&#34;&gt;&lt;a href=&#34;#cb35-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-41&#34;&gt;&lt;a href=&#34;#cb35-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb35-42&#34;&gt;&lt;a href=&#34;#cb35-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[gfa].ch[d2] = u, t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb35-43&#34;&gt;&lt;a href=&#34;#cb35-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u, t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb35-44&#34;&gt;&lt;a href=&#34;#cb35-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-45&#34;&gt;&lt;a href=&#34;#cb35-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb35-46&#34;&gt;&lt;a href=&#34;#cb35-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-47&#34;&gt;&lt;a href=&#34;#cb35-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-48&#34;&gt;&lt;a href=&#34;#cb35-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb35-49&#34;&gt;&lt;a href=&#34;#cb35-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb35-50&#34;&gt;&lt;a href=&#34;#cb35-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb35-51&#34;&gt;&lt;a href=&#34;#cb35-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-52&#34;&gt;&lt;a href=&#34;#cb35-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb35-53&#34;&gt;&lt;a href=&#34;#cb35-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;/span&gt;
&lt;span id=&#34;cb35-54&#34;&gt;&lt;a href=&#34;#cb35-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-55&#34;&gt;&lt;a href=&#34;#cb35-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-56&#34;&gt;&lt;a href=&#34;#cb35-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb35-57&#34;&gt;&lt;a href=&#34;#cb35-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb35-58&#34;&gt;&lt;a href=&#34;#cb35-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb35-59&#34;&gt;&lt;a href=&#34;#cb35-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-60&#34;&gt;&lt;a href=&#34;#cb35-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (goal == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb35-61&#34;&gt;&lt;a href=&#34;#cb35-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;/span&gt;
&lt;span id=&#34;cb35-62&#34;&gt;&lt;a href=&#34;#cb35-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-63&#34;&gt;&lt;a href=&#34;#cb35-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-64&#34;&gt;&lt;a href=&#34;#cb35-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-65&#34;&gt;&lt;a href=&#34;#cb35-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root, fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-66&#34;&gt;&lt;a href=&#34;#cb35-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u &amp;amp;&amp;amp; t[u].val != val)&lt;/span&gt;
&lt;span id=&#34;cb35-67&#34;&gt;&lt;a href=&#34;#cb35-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fa = u, u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb35-68&#34;&gt;&lt;a href=&#34;#cb35-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u)&lt;/span&gt;
&lt;span id=&#34;cb35-69&#34;&gt;&lt;a href=&#34;#cb35-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb35-70&#34;&gt;&lt;a href=&#34;#cb35-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb35-71&#34;&gt;&lt;a href=&#34;#cb35-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb35-72&#34;&gt;&lt;a href=&#34;#cb35-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa)&lt;/span&gt;
&lt;span id=&#34;cb35-73&#34;&gt;&lt;a href=&#34;#cb35-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa].ch[t[fa].val &amp;lt; val] = u;&lt;/span&gt;
&lt;span id=&#34;cb35-74&#34;&gt;&lt;a href=&#34;#cb35-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb35-75&#34;&gt;&lt;a href=&#34;#cb35-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-76&#34;&gt;&lt;a href=&#34;#cb35-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb35-77&#34;&gt;&lt;a href=&#34;#cb35-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-78&#34;&gt;&lt;a href=&#34;#cb35-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-79&#34;&gt;&lt;a href=&#34;#cb35-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-80&#34;&gt;&lt;a href=&#34;#cb35-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-81&#34;&gt;&lt;a href=&#34;#cb35-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-82&#34;&gt;&lt;a href=&#34;#cb35-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb35-83&#34;&gt;&lt;a href=&#34;#cb35-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].val != val &amp;amp;&amp;amp; t[u].ch[t[u].val &amp;lt; val])&lt;/span&gt;
&lt;span id=&#34;cb35-84&#34;&gt;&lt;a href=&#34;#cb35-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb35-85&#34;&gt;&lt;a href=&#34;#cb35-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-86&#34;&gt;&lt;a href=&#34;#cb35-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-87&#34;&gt;&lt;a href=&#34;#cb35-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-88&#34;&gt;&lt;a href=&#34;#cb35-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-89&#34;&gt;&lt;a href=&#34;#cb35-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-90&#34;&gt;&lt;a href=&#34;#cb35-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-91&#34;&gt;&lt;a href=&#34;#cb35-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-92&#34;&gt;&lt;a href=&#34;#cb35-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-93&#34;&gt;&lt;a href=&#34;#cb35-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb35-94&#34;&gt;&lt;a href=&#34;#cb35-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb35-95&#34;&gt;&lt;a href=&#34;#cb35-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb35-96&#34;&gt;&lt;a href=&#34;#cb35-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb35-97&#34;&gt;&lt;a href=&#34;#cb35-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb35-98&#34;&gt;&lt;a href=&#34;#cb35-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; t[L].size + t[u].cnt) {&lt;/span&gt;
&lt;span id=&#34;cb35-99&#34;&gt;&lt;a href=&#34;#cb35-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= t[L].size + t[u].cnt;&lt;/span&gt;
&lt;span id=&#34;cb35-100&#34;&gt;&lt;a href=&#34;#cb35-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb35-101&#34;&gt;&lt;a href=&#34;#cb35-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb35-102&#34;&gt;&lt;a href=&#34;#cb35-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-103&#34;&gt;&lt;a href=&#34;#cb35-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb35-104&#34;&gt;&lt;a href=&#34;#cb35-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-105&#34;&gt;&lt;a href=&#34;#cb35-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-106&#34;&gt;&lt;a href=&#34;#cb35-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-107&#34;&gt;&lt;a href=&#34;#cb35-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;/span&gt;
&lt;span id=&#34;cb35-108&#34;&gt;&lt;a href=&#34;#cb35-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-109&#34;&gt;&lt;a href=&#34;#cb35-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb35-110&#34;&gt;&lt;a href=&#34;#cb35-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt; val &amp;amp;&amp;amp; (!opt))&lt;/span&gt;
&lt;span id=&#34;cb35-111&#34;&gt;&lt;a href=&#34;#cb35-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-112&#34;&gt;&lt;a href=&#34;#cb35-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;gt; val &amp;amp;&amp;amp; opt)&lt;/span&gt;
&lt;span id=&#34;cb35-113&#34;&gt;&lt;a href=&#34;#cb35-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-114&#34;&gt;&lt;a href=&#34;#cb35-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[opt];&lt;/span&gt;
&lt;span id=&#34;cb35-115&#34;&gt;&lt;a href=&#34;#cb35-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb35-116&#34;&gt;&lt;a href=&#34;#cb35-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb35-117&#34;&gt;&lt;a href=&#34;#cb35-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-118&#34;&gt;&lt;a href=&#34;#cb35-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-119&#34;&gt;&lt;a href=&#34;#cb35-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-120&#34;&gt;&lt;a href=&#34;#cb35-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-121&#34;&gt;&lt;a href=&#34;#cb35-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre = getnxt(val, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-122&#34;&gt;&lt;a href=&#34;#cb35-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc = getnxt(val, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-123&#34;&gt;&lt;a href=&#34;#cb35-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(pre, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-124&#34;&gt;&lt;a href=&#34;#cb35-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(suc, pre);&lt;/span&gt;
&lt;span id=&#34;cb35-125&#34;&gt;&lt;a href=&#34;#cb35-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb35-126&#34;&gt;&lt;a href=&#34;#cb35-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb35-127&#34;&gt;&lt;a href=&#34;#cb35-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-128&#34;&gt;&lt;a href=&#34;#cb35-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-129&#34;&gt;&lt;a href=&#34;#cb35-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-130&#34;&gt;&lt;a href=&#34;#cb35-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-131&#34;&gt;&lt;a href=&#34;#cb35-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-132&#34;&gt;&lt;a href=&#34;#cb35-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-133&#34;&gt;&lt;a href=&#34;#cb35-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb35-134&#34;&gt;&lt;a href=&#34;#cb35-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(inf), insert(-inf);&lt;/span&gt;
&lt;span id=&#34;cb35-135&#34;&gt;&lt;a href=&#34;#cb35-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read();&lt;/span&gt;
&lt;span id=&#34;cb35-136&#34;&gt;&lt;a href=&#34;#cb35-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--) {&lt;/span&gt;
&lt;span id=&#34;cb35-137&#34;&gt;&lt;a href=&#34;#cb35-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read();&lt;/span&gt;
&lt;span id=&#34;cb35-138&#34;&gt;&lt;a href=&#34;#cb35-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt) {&lt;/span&gt;
&lt;span id=&#34;cb35-139&#34;&gt;&lt;a href=&#34;#cb35-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-140&#34;&gt;&lt;a href=&#34;#cb35-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x);&lt;/span&gt;
&lt;span id=&#34;cb35-141&#34;&gt;&lt;a href=&#34;#cb35-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-142&#34;&gt;&lt;a href=&#34;#cb35-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-143&#34;&gt;&lt;a href=&#34;#cb35-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(x);&lt;/span&gt;
&lt;span id=&#34;cb35-144&#34;&gt;&lt;a href=&#34;#cb35-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-145&#34;&gt;&lt;a href=&#34;#cb35-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-146&#34;&gt;&lt;a href=&#34;#cb35-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, rank(x) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-147&#34;&gt;&lt;a href=&#34;#cb35-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-148&#34;&gt;&lt;a href=&#34;#cb35-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-149&#34;&gt;&lt;a href=&#34;#cb35-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, kth(x+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb35-150&#34;&gt;&lt;a href=&#34;#cb35-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-151&#34;&gt;&lt;a href=&#34;#cb35-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-152&#34;&gt;&lt;a href=&#34;#cb35-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t[getnxt(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)].val);&lt;/span&gt;
&lt;span id=&#34;cb35-153&#34;&gt;&lt;a href=&#34;#cb35-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-154&#34;&gt;&lt;a href=&#34;#cb35-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-155&#34;&gt;&lt;a href=&#34;#cb35-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t[getnxt(x, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)].val);&lt;/span&gt;
&lt;span id=&#34;cb35-156&#34;&gt;&lt;a href=&#34;#cb35-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-157&#34;&gt;&lt;a href=&#34;#cb35-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb35-158&#34;&gt;&lt;a href=&#34;#cb35-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-159&#34;&gt;&lt;a href=&#34;#cb35-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-160&#34;&gt;&lt;a href=&#34;#cb35-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继删除操作的另一种实现&#34;&gt;前驱后继/删除操作的另一种实现&lt;/h3&gt;
&lt;p&gt;其实对于查询前驱/后继，我们也可以先插入 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;（插入后它就会被 splay 成根），然后在其左/右子树中查询前驱/后继，最后完事了删除 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 就行了（&lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 工具人表示很淦）。&lt;/p&gt;
&lt;p&gt;但问题是，删除怎么办，此时要完成前驱后继操作就需要先学会删除。&lt;/p&gt;
&lt;p&gt;此处不妨把 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; splay 到根，然后分两种情况讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果左/右子树至少有一个是空的话，直接让不空的那个节点当根就可以了（如果删干净了就删干净了吧）&lt;/li&gt;
&lt;li&gt;如果左右子树都不为空，则相当于要合并两棵 Splay，怎么办呢，考虑怎么维护 Splay 的性质：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们可以将左子树最大的节点 Splay 到最上方，然后注意到&lt;strong&gt;此时根的左儿子肯定没有右儿子了&lt;/strong&gt;。所以直接把根的右子树接到根的左儿子的右儿子上，然后让左儿子当根，根就直接滚蛋了。觉得抽象的可以看一下下面的图：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_del1.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;将待删除节点 splay 到根后&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这是将待删除节点 splay 到根后，然后我们把左子树的最大值 splay 到左子树的根，这样左子树就不存在右子树了，将原来根的右子树接上去即可。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_del2.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;完成之后&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;原来的根节点就可以丢掉不要了，同时不要忘记再更新根的值。&lt;/p&gt;
&lt;p&gt;代码如下：（此时 &lt;code&gt;getnxt()&lt;/code&gt; 返回的是答案了）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb36&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb36-1&#34;&gt;&lt;a href=&#34;#cb36-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb36-2&#34;&gt;&lt;a href=&#34;#cb36-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//把待删除节点旋转到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-3&#34;&gt;&lt;a href=&#34;#cb36-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].val != val)&lt;/span&gt;
&lt;span id=&#34;cb36-4&#34;&gt;&lt;a href=&#34;#cb36-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-5&#34;&gt;&lt;a href=&#34;#cb36-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb36-6&#34;&gt;&lt;a href=&#34;#cb36-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb36-7&#34;&gt;&lt;a href=&#34;#cb36-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb36-8&#34;&gt;&lt;a href=&#34;#cb36-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].size--;&lt;/span&gt;
&lt;span id=&#34;cb36-9&#34;&gt;&lt;a href=&#34;#cb36-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-10&#34;&gt;&lt;a href=&#34;#cb36-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-11&#34;&gt;&lt;a href=&#34;#cb36-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((!t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) || (!t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))&lt;/span&gt;
&lt;span id=&#34;cb36-12&#34;&gt;&lt;a href=&#34;#cb36-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-13&#34;&gt;&lt;a href=&#34;#cb36-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb36-14&#34;&gt;&lt;a href=&#34;#cb36-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lmax = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-15&#34;&gt;&lt;a href=&#34;#cb36-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb36-16&#34;&gt;&lt;a href=&#34;#cb36-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lmax = t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-17&#34;&gt;&lt;a href=&#34;#cb36-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(lmax, root);&lt;/span&gt;
&lt;span id=&#34;cb36-18&#34;&gt;&lt;a href=&#34;#cb36-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = lmax;&lt;/span&gt;
&lt;span id=&#34;cb36-19&#34;&gt;&lt;a href=&#34;#cb36-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-20&#34;&gt;&lt;a href=&#34;#cb36-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(root = lmax);&lt;/span&gt;
&lt;span id=&#34;cb36-21&#34;&gt;&lt;a href=&#34;#cb36-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-22&#34;&gt;&lt;a href=&#34;#cb36-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[root].fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//千万不要忘记把根的 fa 设为 0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-23&#34;&gt;&lt;a href=&#34;#cb36-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-24&#34;&gt;&lt;a href=&#34;#cb36-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-25&#34;&gt;&lt;a href=&#34;#cb36-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-26&#34;&gt;&lt;a href=&#34;#cb36-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;/span&gt;
&lt;span id=&#34;cb36-27&#34;&gt;&lt;a href=&#34;#cb36-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb36-28&#34;&gt;&lt;a href=&#34;#cb36-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[opt], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb36-29&#34;&gt;&lt;a href=&#34;#cb36-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb36-30&#34;&gt;&lt;a href=&#34;#cb36-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb36-31&#34;&gt;&lt;a href=&#34;#cb36-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb36-32&#34;&gt;&lt;a href=&#34;#cb36-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb36-33&#34;&gt;&lt;a href=&#34;#cb36-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;普通平衡树的另外一种实现&#34;&gt;普通平衡树的另外一种实现&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6136&#34;&gt;洛谷P6136&lt;/a&gt; 的实现：&lt;strong&gt;这个版本可以较好的处理查询前驱/后继/排名时待查询数不存在的情况&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb37&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb37-1&#34;&gt;&lt;a href=&#34;#cb37-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-2&#34;&gt;&lt;a href=&#34;#cb37-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-3&#34;&gt;&lt;a href=&#34;#cb37-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb37-4&#34;&gt;&lt;a href=&#34;#cb37-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb37-5&#34;&gt;&lt;a href=&#34;#cb37-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-6&#34;&gt;&lt;a href=&#34;#cb37-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb37-7&#34;&gt;&lt;a href=&#34;#cb37-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb37-8&#34;&gt;&lt;a href=&#34;#cb37-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-9&#34;&gt;&lt;a href=&#34;#cb37-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-10&#34;&gt;&lt;a href=&#34;#cb37-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb37-11&#34;&gt;&lt;a href=&#34;#cb37-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb37-12&#34;&gt;&lt;a href=&#34;#cb37-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb37-13&#34;&gt;&lt;a href=&#34;#cb37-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb37-14&#34;&gt;&lt;a href=&#34;#cb37-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb37-15&#34;&gt;&lt;a href=&#34;#cb37-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-16&#34;&gt;&lt;a href=&#34;#cb37-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-17&#34;&gt;&lt;a href=&#34;#cb37-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb37-18&#34;&gt;&lt;a href=&#34;#cb37-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb37-19&#34;&gt;&lt;a href=&#34;#cb37-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-20&#34;&gt;&lt;a href=&#34;#cb37-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, inf = &lt;span class=&#34;dv&#34;&gt;2147483647&lt;/span&gt; - &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-21&#34;&gt;&lt;a href=&#34;#cb37-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb37-22&#34;&gt;&lt;a href=&#34;#cb37-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-23&#34;&gt;&lt;a href=&#34;#cb37-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay {&lt;/span&gt;
&lt;span id=&#34;cb37-24&#34;&gt;&lt;a href=&#34;#cb37-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;/span&gt;
&lt;span id=&#34;cb37-25&#34;&gt;&lt;a href=&#34;#cb37-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, size;&lt;/span&gt;
&lt;span id=&#34;cb37-26&#34;&gt;&lt;a href=&#34;#cb37-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val;&lt;/span&gt;
&lt;span id=&#34;cb37-27&#34;&gt;&lt;a href=&#34;#cb37-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-28&#34;&gt;&lt;a href=&#34;#cb37-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-29&#34;&gt;&lt;a href=&#34;#cb37-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb37-30&#34;&gt;&lt;a href=&#34;#cb37-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb37-31&#34;&gt;&lt;a href=&#34;#cb37-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-32&#34;&gt;&lt;a href=&#34;#cb37-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-33&#34;&gt;&lt;a href=&#34;#cb37-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb37-34&#34;&gt;&lt;a href=&#34;#cb37-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb37-35&#34;&gt;&lt;a href=&#34;#cb37-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-36&#34;&gt;&lt;a href=&#34;#cb37-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-37&#34;&gt;&lt;a href=&#34;#cb37-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-38&#34;&gt;&lt;a href=&#34;#cb37-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb37-39&#34;&gt;&lt;a href=&#34;#cb37-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb37-40&#34;&gt;&lt;a href=&#34;#cb37-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-41&#34;&gt;&lt;a href=&#34;#cb37-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb37-42&#34;&gt;&lt;a href=&#34;#cb37-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa)&lt;/span&gt;
&lt;span id=&#34;cb37-43&#34;&gt;&lt;a href=&#34;#cb37-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[gfa].ch[d2] = u;&lt;/span&gt;
&lt;span id=&#34;cb37-44&#34;&gt;&lt;a href=&#34;#cb37-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb37-45&#34;&gt;&lt;a href=&#34;#cb37-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u, t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb37-46&#34;&gt;&lt;a href=&#34;#cb37-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-47&#34;&gt;&lt;a href=&#34;#cb37-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb37-48&#34;&gt;&lt;a href=&#34;#cb37-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-49&#34;&gt;&lt;a href=&#34;#cb37-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-50&#34;&gt;&lt;a href=&#34;#cb37-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb37-51&#34;&gt;&lt;a href=&#34;#cb37-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb37-52&#34;&gt;&lt;a href=&#34;#cb37-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb37-53&#34;&gt;&lt;a href=&#34;#cb37-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-54&#34;&gt;&lt;a href=&#34;#cb37-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb37-55&#34;&gt;&lt;a href=&#34;#cb37-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;/span&gt;
&lt;span id=&#34;cb37-56&#34;&gt;&lt;a href=&#34;#cb37-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-57&#34;&gt;&lt;a href=&#34;#cb37-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-58&#34;&gt;&lt;a href=&#34;#cb37-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb37-59&#34;&gt;&lt;a href=&#34;#cb37-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-60&#34;&gt;&lt;a href=&#34;#cb37-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb37-61&#34;&gt;&lt;a href=&#34;#cb37-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-62&#34;&gt;&lt;a href=&#34;#cb37-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (goal == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb37-63&#34;&gt;&lt;a href=&#34;#cb37-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;/span&gt;
&lt;span id=&#34;cb37-64&#34;&gt;&lt;a href=&#34;#cb37-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-65&#34;&gt;&lt;a href=&#34;#cb37-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-66&#34;&gt;&lt;a href=&#34;#cb37-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-67&#34;&gt;&lt;a href=&#34;#cb37-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root, fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-68&#34;&gt;&lt;a href=&#34;#cb37-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u &amp;amp;&amp;amp; t[u].val != val)&lt;/span&gt;
&lt;span id=&#34;cb37-69&#34;&gt;&lt;a href=&#34;#cb37-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fa = u, u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb37-70&#34;&gt;&lt;a href=&#34;#cb37-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u)&lt;/span&gt;
&lt;span id=&#34;cb37-71&#34;&gt;&lt;a href=&#34;#cb37-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb37-72&#34;&gt;&lt;a href=&#34;#cb37-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb37-73&#34;&gt;&lt;a href=&#34;#cb37-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb37-74&#34;&gt;&lt;a href=&#34;#cb37-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa)&lt;/span&gt;
&lt;span id=&#34;cb37-75&#34;&gt;&lt;a href=&#34;#cb37-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa].ch[t[fa].val &amp;lt; val] = u;&lt;/span&gt;
&lt;span id=&#34;cb37-76&#34;&gt;&lt;a href=&#34;#cb37-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb37-77&#34;&gt;&lt;a href=&#34;#cb37-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-78&#34;&gt;&lt;a href=&#34;#cb37-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb37-79&#34;&gt;&lt;a href=&#34;#cb37-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-80&#34;&gt;&lt;a href=&#34;#cb37-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-81&#34;&gt;&lt;a href=&#34;#cb37-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-82&#34;&gt;&lt;a href=&#34;#cb37-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-83&#34;&gt;&lt;a href=&#34;#cb37-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-84&#34;&gt;&lt;a href=&#34;#cb37-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb37-85&#34;&gt;&lt;a href=&#34;#cb37-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].val != val &amp;amp;&amp;amp; t[u].ch[t[u].val &amp;lt; val])&lt;/span&gt;
&lt;span id=&#34;cb37-86&#34;&gt;&lt;a href=&#34;#cb37-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb37-87&#34;&gt;&lt;a href=&#34;#cb37-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb37-88&#34;&gt;&lt;a href=&#34;#cb37-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-89&#34;&gt;&lt;a href=&#34;#cb37-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-90&#34;&gt;&lt;a href=&#34;#cb37-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb37-91&#34;&gt;&lt;a href=&#34;#cb37-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb37-92&#34;&gt;&lt;a href=&#34;#cb37-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb37-93&#34;&gt;&lt;a href=&#34;#cb37-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb37-94&#34;&gt;&lt;a href=&#34;#cb37-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb37-95&#34;&gt;&lt;a href=&#34;#cb37-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; t[L].size + t[u].cnt) {&lt;/span&gt;
&lt;span id=&#34;cb37-96&#34;&gt;&lt;a href=&#34;#cb37-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= t[L].size + t[u].cnt;&lt;/span&gt;
&lt;span id=&#34;cb37-97&#34;&gt;&lt;a href=&#34;#cb37-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb37-98&#34;&gt;&lt;a href=&#34;#cb37-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-99&#34;&gt;&lt;a href=&#34;#cb37-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-100&#34;&gt;&lt;a href=&#34;#cb37-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb37-101&#34;&gt;&lt;a href=&#34;#cb37-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-102&#34;&gt;&lt;a href=&#34;#cb37-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-103&#34;&gt;&lt;a href=&#34;#cb37-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-104&#34;&gt;&lt;a href=&#34;#cb37-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-105&#34;&gt;&lt;a href=&#34;#cb37-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-106&#34;&gt;&lt;a href=&#34;#cb37-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].val != val)&lt;/span&gt;
&lt;span id=&#34;cb37-107&#34;&gt;&lt;a href=&#34;#cb37-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-108&#34;&gt;&lt;a href=&#34;#cb37-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb37-109&#34;&gt;&lt;a href=&#34;#cb37-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb37-110&#34;&gt;&lt;a href=&#34;#cb37-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].size--;&lt;/span&gt;
&lt;span id=&#34;cb37-111&#34;&gt;&lt;a href=&#34;#cb37-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-112&#34;&gt;&lt;a href=&#34;#cb37-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-113&#34;&gt;&lt;a href=&#34;#cb37-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((!t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) || (!t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))&lt;/span&gt;
&lt;span id=&#34;cb37-114&#34;&gt;&lt;a href=&#34;#cb37-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-115&#34;&gt;&lt;a href=&#34;#cb37-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb37-116&#34;&gt;&lt;a href=&#34;#cb37-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lmax = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-117&#34;&gt;&lt;a href=&#34;#cb37-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb37-118&#34;&gt;&lt;a href=&#34;#cb37-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lmax = t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-119&#34;&gt;&lt;a href=&#34;#cb37-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(lmax, root);&lt;/span&gt;
&lt;span id=&#34;cb37-120&#34;&gt;&lt;a href=&#34;#cb37-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = lmax;&lt;/span&gt;
&lt;span id=&#34;cb37-121&#34;&gt;&lt;a href=&#34;#cb37-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-122&#34;&gt;&lt;a href=&#34;#cb37-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(root = lmax);&lt;/span&gt;
&lt;span id=&#34;cb37-123&#34;&gt;&lt;a href=&#34;#cb37-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-124&#34;&gt;&lt;a href=&#34;#cb37-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[root].fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-125&#34;&gt;&lt;a href=&#34;#cb37-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-126&#34;&gt;&lt;a href=&#34;#cb37-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-127&#34;&gt;&lt;a href=&#34;#cb37-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-128&#34;&gt;&lt;a href=&#34;#cb37-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-129&#34;&gt;&lt;a href=&#34;#cb37-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb37-130&#34;&gt;&lt;a href=&#34;#cb37-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-131&#34;&gt;&lt;a href=&#34;#cb37-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb37-132&#34;&gt;&lt;a href=&#34;#cb37-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb37-133&#34;&gt;&lt;a href=&#34;#cb37-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-134&#34;&gt;&lt;a href=&#34;#cb37-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-135&#34;&gt;&lt;a href=&#34;#cb37-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;/span&gt;
&lt;span id=&#34;cb37-136&#34;&gt;&lt;a href=&#34;#cb37-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb37-137&#34;&gt;&lt;a href=&#34;#cb37-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[opt], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb37-138&#34;&gt;&lt;a href=&#34;#cb37-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb37-139&#34;&gt;&lt;a href=&#34;#cb37-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb37-140&#34;&gt;&lt;a href=&#34;#cb37-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb37-141&#34;&gt;&lt;a href=&#34;#cb37-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb37-142&#34;&gt;&lt;a href=&#34;#cb37-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-143&#34;&gt;&lt;a href=&#34;#cb37-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-144&#34;&gt;&lt;a href=&#34;#cb37-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb37-145&#34;&gt;&lt;a href=&#34;#cb37-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(inf), insert(-inf);&lt;/span&gt;
&lt;span id=&#34;cb37-146&#34;&gt;&lt;a href=&#34;#cb37-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb37-147&#34;&gt;&lt;a href=&#34;#cb37-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb37-148&#34;&gt;&lt;a href=&#34;#cb37-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(read());&lt;/span&gt;
&lt;span id=&#34;cb37-149&#34;&gt;&lt;a href=&#34;#cb37-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, last = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-150&#34;&gt;&lt;a href=&#34;#cb37-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb37-151&#34;&gt;&lt;a href=&#34;#cb37-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read() ^ last;&lt;/span&gt;
&lt;span id=&#34;cb37-152&#34;&gt;&lt;a href=&#34;#cb37-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt) {&lt;/span&gt;
&lt;span id=&#34;cb37-153&#34;&gt;&lt;a href=&#34;#cb37-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-154&#34;&gt;&lt;a href=&#34;#cb37-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x);&lt;/span&gt;
&lt;span id=&#34;cb37-155&#34;&gt;&lt;a href=&#34;#cb37-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-156&#34;&gt;&lt;a href=&#34;#cb37-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-157&#34;&gt;&lt;a href=&#34;#cb37-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(x);&lt;/span&gt;
&lt;span id=&#34;cb37-158&#34;&gt;&lt;a href=&#34;#cb37-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-159&#34;&gt;&lt;a href=&#34;#cb37-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-160&#34;&gt;&lt;a href=&#34;#cb37-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = rank(x) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-161&#34;&gt;&lt;a href=&#34;#cb37-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-162&#34;&gt;&lt;a href=&#34;#cb37-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-163&#34;&gt;&lt;a href=&#34;#cb37-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = kth(x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb37-164&#34;&gt;&lt;a href=&#34;#cb37-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-165&#34;&gt;&lt;a href=&#34;#cb37-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-166&#34;&gt;&lt;a href=&#34;#cb37-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = getnxt(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb37-167&#34;&gt;&lt;a href=&#34;#cb37-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-168&#34;&gt;&lt;a href=&#34;#cb37-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-169&#34;&gt;&lt;a href=&#34;#cb37-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = getnxt(x, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb37-170&#34;&gt;&lt;a href=&#34;#cb37-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-171&#34;&gt;&lt;a href=&#34;#cb37-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-172&#34;&gt;&lt;a href=&#34;#cb37-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-173&#34;&gt;&lt;a href=&#34;#cb37-173&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-174&#34;&gt;&lt;a href=&#34;#cb37-174&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb37-175&#34;&gt;&lt;a href=&#34;#cb37-175&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-176&#34;&gt;&lt;a href=&#34;#cb37-176&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;文艺平衡树的实现&#34;&gt;文艺平衡树的实现&lt;/h3&gt;
&lt;p&gt;文艺平衡树，可实现快速区间翻转，主要得益于 Splay 的区间操作功能。具体地，我们对序列 &lt;span class=&#34;math inline&#34;&gt;\(1 - n\)&lt;/span&gt; 建一棵 Splay，这棵 Splay 的中序遍历即为我们的序列。然后如果要对 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 翻转，就需要先把 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 区间独立出来成单独一个子树然后打标记。我们可以考虑先把在 Splay 中排名为 &lt;span class=&#34;math inline&#34;&gt;\(l-1\)&lt;/span&gt; 的点 splay 到根，然后将排名为 &lt;span class=&#34;math inline&#34;&gt;\(r+1\)&lt;/span&gt; 的点 splay 到根下方，由 BST 的性质我们可以知道此时 &lt;span class=&#34;math inline&#34;&gt;\(r+1\)&lt;/span&gt; 的左子树就是我们的 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;找到之后打标记即可，注意旋转和 Splay 以及找节点的时候千万记得&lt;strong&gt;下放标记&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb38&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb38-1&#34;&gt;&lt;a href=&#34;#cb38-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushdown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb38-2&#34;&gt;&lt;a href=&#34;#cb38-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].mark &amp;amp;&amp;amp; u) {&lt;/span&gt;
&lt;span id=&#34;cb38-3&#34;&gt;&lt;a href=&#34;#cb38-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        swap(L, R);&lt;/span&gt;
&lt;span id=&#34;cb38-4&#34;&gt;&lt;a href=&#34;#cb38-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[L].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-5&#34;&gt;&lt;a href=&#34;#cb38-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[R].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-6&#34;&gt;&lt;a href=&#34;#cb38-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].mark = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-7&#34;&gt;&lt;a href=&#34;#cb38-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-8&#34;&gt;&lt;a href=&#34;#cb38-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-9&#34;&gt;&lt;a href=&#34;#cb38-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后是翻转函数的实现。&lt;strong&gt;注意由于 &lt;span class=&#34;math inline&#34;&gt;\(l-1\)&lt;/span&gt; 可能等于 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/strong&gt;，所以需要提前插入正无穷和负无穷节点，同时读入的 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 要各自自增 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;strong&gt;同时注意此处 &lt;code&gt;find()&lt;/code&gt; 函数与之前的区别&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb39&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb39-1&#34;&gt;&lt;a href=&#34;#cb39-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb39-2&#34;&gt;&lt;a href=&#34;#cb39-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb39-3&#34;&gt;&lt;a href=&#34;#cb39-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-4&#34;&gt;&lt;a href=&#34;#cb39-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb39-5&#34;&gt;&lt;a href=&#34;#cb39-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb39-6&#34;&gt;&lt;a href=&#34;#cb39-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb39-7&#34;&gt;&lt;a href=&#34;#cb39-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb39-8&#34;&gt;&lt;a href=&#34;#cb39-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val -= t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-9&#34;&gt;&lt;a href=&#34;#cb39-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!val)&lt;/span&gt;
&lt;span id=&#34;cb39-10&#34;&gt;&lt;a href=&#34;#cb39-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb39-11&#34;&gt;&lt;a href=&#34;#cb39-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb39-12&#34;&gt;&lt;a href=&#34;#cb39-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-13&#34;&gt;&lt;a href=&#34;#cb39-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-14&#34;&gt;&lt;a href=&#34;#cb39-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-15&#34;&gt;&lt;a href=&#34;#cb39-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-16&#34;&gt;&lt;a href=&#34;#cb39-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; reverse(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb39-17&#34;&gt;&lt;a href=&#34;#cb39-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-18&#34;&gt;&lt;a href=&#34;#cb39-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), root);&lt;/span&gt;
&lt;span id=&#34;cb39-19&#34;&gt;&lt;a href=&#34;#cb39-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb39-20&#34;&gt;&lt;a href=&#34;#cb39-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb39-21&#34;&gt;&lt;a href=&#34;#cb39-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-22&#34;&gt;&lt;a href=&#34;#cb39-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-23&#34;&gt;&lt;a href=&#34;#cb39-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;全部具体实现如下：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3391&#34;&gt;洛谷P3391&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb40&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb40-1&#34;&gt;&lt;a href=&#34;#cb40-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb40-2&#34;&gt;&lt;a href=&#34;#cb40-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb40-3&#34;&gt;&lt;a href=&#34;#cb40-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;...&lt;/span&gt;
&lt;span id=&#34;cb40-4&#34;&gt;&lt;a href=&#34;#cb40-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay {&lt;/span&gt;
&lt;span id=&#34;cb40-5&#34;&gt;&lt;a href=&#34;#cb40-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;/span&gt;
&lt;span id=&#34;cb40-6&#34;&gt;&lt;a href=&#34;#cb40-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, val;&lt;/span&gt;
&lt;span id=&#34;cb40-7&#34;&gt;&lt;a href=&#34;#cb40-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mark;&lt;/span&gt;
&lt;span id=&#34;cb40-8&#34;&gt;&lt;a href=&#34;#cb40-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb40-9&#34;&gt;&lt;a href=&#34;#cb40-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-10&#34;&gt;&lt;a href=&#34;#cb40-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; root, cnt, n, m;&lt;/span&gt;
&lt;span id=&#34;cb40-11&#34;&gt;&lt;a href=&#34;#cb40-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-12&#34;&gt;&lt;a href=&#34;#cb40-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-13&#34;&gt;&lt;a href=&#34;#cb40-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-14&#34;&gt;&lt;a href=&#34;#cb40-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-15&#34;&gt;&lt;a href=&#34;#cb40-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-16&#34;&gt;&lt;a href=&#34;#cb40-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-17&#34;&gt;&lt;a href=&#34;#cb40-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-18&#34;&gt;&lt;a href=&#34;#cb40-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb40-19&#34;&gt;&lt;a href=&#34;#cb40-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-20&#34;&gt;&lt;a href=&#34;#cb40-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-21&#34;&gt;&lt;a href=&#34;#cb40-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushdown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-22&#34;&gt;&lt;a href=&#34;#cb40-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].mark &amp;amp;&amp;amp; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-23&#34;&gt;&lt;a href=&#34;#cb40-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        swap(L, R);&lt;/span&gt;
&lt;span id=&#34;cb40-24&#34;&gt;&lt;a href=&#34;#cb40-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[L].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-25&#34;&gt;&lt;a href=&#34;#cb40-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[R].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-26&#34;&gt;&lt;a href=&#34;#cb40-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].mark = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-27&#34;&gt;&lt;a href=&#34;#cb40-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-28&#34;&gt;&lt;a href=&#34;#cb40-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-29&#34;&gt;&lt;a href=&#34;#cb40-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-30&#34;&gt;&lt;a href=&#34;#cb40-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-31&#34;&gt;&lt;a href=&#34;#cb40-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-32&#34;&gt;&lt;a href=&#34;#cb40-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb40-33&#34;&gt;&lt;a href=&#34;#cb40-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(fa); pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-34&#34;&gt;&lt;a href=&#34;#cb40-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-35&#34;&gt;&lt;a href=&#34;#cb40-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb40-36&#34;&gt;&lt;a href=&#34;#cb40-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb40-37&#34;&gt;&lt;a href=&#34;#cb40-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb40-38&#34;&gt;&lt;a href=&#34;#cb40-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u;&lt;/span&gt;
&lt;span id=&#34;cb40-39&#34;&gt;&lt;a href=&#34;#cb40-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa)&lt;/span&gt;
&lt;span id=&#34;cb40-40&#34;&gt;&lt;a href=&#34;#cb40-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[gfa].ch[d2] = u;&lt;/span&gt;
&lt;span id=&#34;cb40-41&#34;&gt;&lt;a href=&#34;#cb40-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb40-42&#34;&gt;&lt;a href=&#34;#cb40-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-43&#34;&gt;&lt;a href=&#34;#cb40-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb40-44&#34;&gt;&lt;a href=&#34;#cb40-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-45&#34;&gt;&lt;a href=&#34;#cb40-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-46&#34;&gt;&lt;a href=&#34;#cb40-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-47&#34;&gt;&lt;a href=&#34;#cb40-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb40-48&#34;&gt;&lt;a href=&#34;#cb40-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-49&#34;&gt;&lt;a href=&#34;#cb40-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb40-50&#34;&gt;&lt;a href=&#34;#cb40-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb40-51&#34;&gt;&lt;a href=&#34;#cb40-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-52&#34;&gt;&lt;a href=&#34;#cb40-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb40-53&#34;&gt;&lt;a href=&#34;#cb40-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;/span&gt;
&lt;span id=&#34;cb40-54&#34;&gt;&lt;a href=&#34;#cb40-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-55&#34;&gt;&lt;a href=&#34;#cb40-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb40-56&#34;&gt;&lt;a href=&#34;#cb40-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-57&#34;&gt;&lt;a href=&#34;#cb40-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb40-58&#34;&gt;&lt;a href=&#34;#cb40-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-59&#34;&gt;&lt;a href=&#34;#cb40-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!goal)&lt;/span&gt;
&lt;span id=&#34;cb40-60&#34;&gt;&lt;a href=&#34;#cb40-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;/span&gt;
&lt;span id=&#34;cb40-61&#34;&gt;&lt;a href=&#34;#cb40-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-62&#34;&gt;&lt;a href=&#34;#cb40-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-63&#34;&gt;&lt;a href=&#34;#cb40-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-64&#34;&gt;&lt;a href=&#34;#cb40-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb40-65&#34;&gt;&lt;a href=&#34;#cb40-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cur = (i + j) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-66&#34;&gt;&lt;a href=&#34;#cb40-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb40-67&#34;&gt;&lt;a href=&#34;#cb40-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb40-68&#34;&gt;&lt;a href=&#34;#cb40-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-69&#34;&gt;&lt;a href=&#34;#cb40-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-70&#34;&gt;&lt;a href=&#34;#cb40-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = -(maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-71&#34;&gt;&lt;a href=&#34;#cb40-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur == n + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-72&#34;&gt;&lt;a href=&#34;#cb40-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-73&#34;&gt;&lt;a href=&#34;#cb40-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-74&#34;&gt;&lt;a href=&#34;#cb40-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = cur - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-75&#34;&gt;&lt;a href=&#34;#cb40-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur &amp;gt; i)&lt;/span&gt;
&lt;span id=&#34;cb40-76&#34;&gt;&lt;a href=&#34;#cb40-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(i, cur - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], u);&lt;/span&gt;
&lt;span id=&#34;cb40-77&#34;&gt;&lt;a href=&#34;#cb40-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur &amp;lt; j)&lt;/span&gt;
&lt;span id=&#34;cb40-78&#34;&gt;&lt;a href=&#34;#cb40-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(cur + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], u);&lt;/span&gt;
&lt;span id=&#34;cb40-79&#34;&gt;&lt;a href=&#34;#cb40-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb40-80&#34;&gt;&lt;a href=&#34;#cb40-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-81&#34;&gt;&lt;a href=&#34;#cb40-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-82&#34;&gt;&lt;a href=&#34;#cb40-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-83&#34;&gt;&lt;a href=&#34;#cb40-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb40-84&#34;&gt;&lt;a href=&#34;#cb40-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb40-85&#34;&gt;&lt;a href=&#34;#cb40-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-86&#34;&gt;&lt;a href=&#34;#cb40-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-87&#34;&gt;&lt;a href=&#34;#cb40-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb40-88&#34;&gt;&lt;a href=&#34;#cb40-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb40-89&#34;&gt;&lt;a href=&#34;#cb40-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb40-90&#34;&gt;&lt;a href=&#34;#cb40-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val -= t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-91&#34;&gt;&lt;a href=&#34;#cb40-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!val)&lt;/span&gt;
&lt;span id=&#34;cb40-92&#34;&gt;&lt;a href=&#34;#cb40-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb40-93&#34;&gt;&lt;a href=&#34;#cb40-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb40-94&#34;&gt;&lt;a href=&#34;#cb40-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-95&#34;&gt;&lt;a href=&#34;#cb40-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-96&#34;&gt;&lt;a href=&#34;#cb40-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-97&#34;&gt;&lt;a href=&#34;#cb40-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-98&#34;&gt;&lt;a href=&#34;#cb40-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; reverse(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb40-99&#34;&gt;&lt;a href=&#34;#cb40-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-100&#34;&gt;&lt;a href=&#34;#cb40-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), root);&lt;/span&gt;
&lt;span id=&#34;cb40-101&#34;&gt;&lt;a href=&#34;#cb40-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb40-102&#34;&gt;&lt;a href=&#34;#cb40-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb40-103&#34;&gt;&lt;a href=&#34;#cb40-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-104&#34;&gt;&lt;a href=&#34;#cb40-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-105&#34;&gt;&lt;a href=&#34;#cb40-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-106&#34;&gt;&lt;a href=&#34;#cb40-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-107&#34;&gt;&lt;a href=&#34;#cb40-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-108&#34;&gt;&lt;a href=&#34;#cb40-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb40-109&#34;&gt;&lt;a href=&#34;#cb40-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-110&#34;&gt;&lt;a href=&#34;#cb40-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-111&#34;&gt;&lt;a href=&#34;#cb40-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(L);&lt;/span&gt;
&lt;span id=&#34;cb40-112&#34;&gt;&lt;a href=&#34;#cb40-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || t[u].val &amp;gt; n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-113&#34;&gt;&lt;a href=&#34;#cb40-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-114&#34;&gt;&lt;a href=&#34;#cb40-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, t[u].val);&lt;/span&gt;
&lt;span id=&#34;cb40-115&#34;&gt;&lt;a href=&#34;#cb40-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(R);&lt;/span&gt;
&lt;span id=&#34;cb40-116&#34;&gt;&lt;a href=&#34;#cb40-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-117&#34;&gt;&lt;a href=&#34;#cb40-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-118&#34;&gt;&lt;a href=&#34;#cb40-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-119&#34;&gt;&lt;a href=&#34;#cb40-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb40-120&#34;&gt;&lt;a href=&#34;#cb40-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb40-121&#34;&gt;&lt;a href=&#34;#cb40-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, root, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-122&#34;&gt;&lt;a href=&#34;#cb40-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb40-123&#34;&gt;&lt;a href=&#34;#cb40-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = read() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = read() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-124&#34;&gt;&lt;a href=&#34;#cb40-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        reverse(l, r);&lt;/span&gt;
&lt;span id=&#34;cb40-125&#34;&gt;&lt;a href=&#34;#cb40-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-126&#34;&gt;&lt;a href=&#34;#cb40-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(root);&lt;/span&gt;
&lt;span id=&#34;cb40-127&#34;&gt;&lt;a href=&#34;#cb40-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-128&#34;&gt;&lt;a href=&#34;#cb40-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;易错点-1&#34;&gt;易错点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一开始记得&lt;strong&gt;插入正负无穷&lt;/strong&gt;，然后在&lt;strong&gt;计算排名和第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大的时候要考虑其影响&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;旋转操作完成后务必 pushup&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果涉及到标记下传，&lt;strong&gt;需要在可能改变树形的时候或者向下遍历节点的时候先 pushdown&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;插入完成一个节点之后要将其 splay 到根&lt;/strong&gt;，否则可能 &lt;strong&gt;TLE&lt;/strong&gt; 或者&lt;strong&gt;导致其父亲的 &lt;code&gt;size&lt;/code&gt; 计算错误&lt;/strong&gt;（因为 splay 时会一路更新 &lt;code&gt;size&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;splay 一个节点到根之后&lt;strong&gt;务必更新 &lt;code&gt;root&lt;/code&gt; 变量&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于任何操作，如果该改变了节点的父子关系，一定记得既要更改儿子的，也要更改父亲的&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样，最基础的平衡树就学习完了，当然平衡树还有很多其他品种，如红黑树、AVL、替罪羊树、SBT 等等，但事实上 FHQ-Treap 和 Splay 已经基本能解决大多数问题了，所以就不再继续深入了。祝大家 debug 快乐。&lt;/p&gt;
&lt;h2 id=&#34;可持久化平衡树&#34;&gt;可持久化平衡树&lt;/h2&gt;
&lt;h3 id=&#34;简介-1&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;与可持久化线段树类似，可持久化平衡树支持普通平衡树的基本操作，同时支持在某个历史版本的基础上进行查询和修改。&lt;/p&gt;
&lt;p&gt;鉴于 splay 是均摊数据结构，形态多变，不好进行可持久化；而 fhq-treap 只涉及分裂/合并，且不旋转，容易实现，所以一般的“可持久化平衡树”均指“可持久化 fhq-treap”&lt;/p&gt;
&lt;p&gt;前置知识：主席树，fhq-treap&lt;/p&gt;
&lt;h3 id=&#34;做法&#34;&gt;做法&lt;/h3&gt;
&lt;p&gt;对于 merge 和 split 操作，我们可以通过对这些过程经过的节点进行复制以达到可持久化的效果。&lt;/p&gt;
&lt;p&gt;其相比普通的平衡树，是没有什么改变的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb41&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb41-1&#34;&gt;&lt;a href=&#34;#cb41-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb41-2&#34;&gt;&lt;a href=&#34;#cb41-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb41-3&#34;&gt;&lt;a href=&#34;#cb41-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-4&#34;&gt;&lt;a href=&#34;#cb41-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-5&#34;&gt;&lt;a href=&#34;#cb41-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-6&#34;&gt;&lt;a href=&#34;#cb41-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb41-7&#34;&gt;&lt;a href=&#34;#cb41-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = clone(u);&lt;span class=&#34;co&#34;&gt;//*****************&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-8&#34;&gt;&lt;a href=&#34;#cb41-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k, t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb41-9&#34;&gt;&lt;a href=&#34;#cb41-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(x);&lt;/span&gt;
&lt;span id=&#34;cb41-10&#34;&gt;&lt;a href=&#34;#cb41-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb41-11&#34;&gt;&lt;a href=&#34;#cb41-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = clone(u);&lt;span class=&#34;co&#34;&gt;//*****************&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-12&#34;&gt;&lt;a href=&#34;#cb41-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k, x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb41-13&#34;&gt;&lt;a href=&#34;#cb41-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(y);&lt;/span&gt;
&lt;span id=&#34;cb41-14&#34;&gt;&lt;a href=&#34;#cb41-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-15&#34;&gt;&lt;a href=&#34;#cb41-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-16&#34;&gt;&lt;a href=&#34;#cb41-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对比一下普通版的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb42&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb42-1&#34;&gt;&lt;a href=&#34;#cb42-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb42-2&#34;&gt;&lt;a href=&#34;#cb42-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb42-3&#34;&gt;&lt;a href=&#34;#cb42-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-4&#34;&gt;&lt;a href=&#34;#cb42-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-5&#34;&gt;&lt;a href=&#34;#cb42-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-6&#34;&gt;&lt;a href=&#34;#cb42-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k)&lt;/span&gt;
&lt;span id=&#34;cb42-7&#34;&gt;&lt;a href=&#34;#cb42-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u, split(R, k, R, y);&lt;/span&gt;
&lt;span id=&#34;cb42-8&#34;&gt;&lt;a href=&#34;#cb42-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-9&#34;&gt;&lt;a href=&#34;#cb42-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u, split(L, k, x, L);&lt;/span&gt;
&lt;span id=&#34;cb42-10&#34;&gt;&lt;a href=&#34;#cb42-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb42-11&#34;&gt;&lt;a href=&#34;#cb42-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-12&#34;&gt;&lt;a href=&#34;#cb42-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意一下星号的几行。其本质也就是对进行了修改的节点进行增加并且复制。&lt;/p&gt;
&lt;p&gt;由于我们进行修改的时候，split 和 merge 是成对存在的，所以在 merge 的时候就不需要再复制一遍节点了。&lt;/p&gt;
&lt;p&gt;容易出错的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果存在 pushdown 操作，那么 pushdown 的时候也要复制一遍节点&lt;/li&gt;
&lt;li&gt;注意哪里要 pushdown 以及哪里不要 pushdown&lt;/li&gt;
&lt;li&gt;思考清楚各个数据间被调用的先后顺序及关系&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;普通平衡树的实现-2&#34;&gt;普通平衡树的实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb43&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb43-1&#34;&gt;&lt;a href=&#34;#cb43-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-2&#34;&gt;&lt;a href=&#34;#cb43-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-3&#34;&gt;&lt;a href=&#34;#cb43-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-4&#34;&gt;&lt;a href=&#34;#cb43-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-5&#34;&gt;&lt;a href=&#34;#cb43-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb43-6&#34;&gt;&lt;a href=&#34;#cb43-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb43-7&#34;&gt;&lt;a href=&#34;#cb43-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-8&#34;&gt;&lt;a href=&#34;#cb43-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb43-9&#34;&gt;&lt;a href=&#34;#cb43-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;21&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-10&#34;&gt;&lt;a href=&#34;#cb43-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], * __p1 = ibuf, * __p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb43-11&#34;&gt;&lt;a href=&#34;#cb43-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++; }&lt;/span&gt;
&lt;span id=&#34;cb43-12&#34;&gt;&lt;a href=&#34;#cb43-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T&amp;amp; n) {&lt;/span&gt;
&lt;span id=&#34;cb43-13&#34;&gt;&lt;a href=&#34;#cb43-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-14&#34;&gt;&lt;a href=&#34;#cb43-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb43-15&#34;&gt;&lt;a href=&#34;#cb43-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb43-16&#34;&gt;&lt;a href=&#34;#cb43-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb43-17&#34;&gt;&lt;a href=&#34;#cb43-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb43-18&#34;&gt;&lt;a href=&#34;#cb43-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb43-19&#34;&gt;&lt;a href=&#34;#cb43-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb43-20&#34;&gt;&lt;a href=&#34;#cb43-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-21&#34;&gt;&lt;a href=&#34;#cb43-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; obuf[maxc], * __pO = obuf;&lt;/span&gt;
&lt;span id=&#34;cb43-22&#34;&gt;&lt;a href=&#34;#cb43-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; putchar(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) { *__pO++ = c; }&lt;/span&gt;
&lt;span id=&#34;cb43-23&#34;&gt;&lt;a href=&#34;#cb43-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(T x) {&lt;/span&gt;
&lt;span id=&#34;cb43-24&#34;&gt;&lt;a href=&#34;#cb43-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), print(-x);&lt;/span&gt;
&lt;span id=&#34;cb43-25&#34;&gt;&lt;a href=&#34;#cb43-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb43-26&#34;&gt;&lt;a href=&#34;#cb43-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-27&#34;&gt;&lt;a href=&#34;#cb43-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-28&#34;&gt;&lt;a href=&#34;#cb43-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb43-29&#34;&gt;&lt;a href=&#34;#cb43-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-30&#34;&gt;&lt;a href=&#34;#cb43-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-31&#34;&gt;&lt;a href=&#34;#cb43-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; output() { fwrite(obuf, __pO - obuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, stdout); }&lt;/span&gt;
&lt;span id=&#34;cb43-32&#34;&gt;&lt;a href=&#34;#cb43-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-33&#34;&gt;&lt;a href=&#34;#cb43-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-34&#34;&gt;&lt;a href=&#34;#cb43-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb43-35&#34;&gt;&lt;a href=&#34;#cb43-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-36&#34;&gt;&lt;a href=&#34;#cb43-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-37&#34;&gt;&lt;a href=&#34;#cb43-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-38&#34;&gt;&lt;a href=&#34;#cb43-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; root[maxn], cnt;&lt;/span&gt;
&lt;span id=&#34;cb43-39&#34;&gt;&lt;a href=&#34;#cb43-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-40&#34;&gt;&lt;a href=&#34;#cb43-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb43-41&#34;&gt;&lt;a href=&#34;#cb43-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], size, val, key;&lt;/span&gt;
&lt;span id=&#34;cb43-42&#34;&gt;&lt;a href=&#34;#cb43-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; clear() {ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = size = val = key = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb43-43&#34;&gt;&lt;a href=&#34;#cb43-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn * &lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb43-44&#34;&gt;&lt;a href=&#34;#cb43-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-45&#34;&gt;&lt;a href=&#34;#cb43-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb43-46&#34;&gt;&lt;a href=&#34;#cb43-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb43-47&#34;&gt;&lt;a href=&#34;#cb43-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-48&#34;&gt;&lt;a href=&#34;#cb43-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) { t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb43-49&#34;&gt;&lt;a href=&#34;#cb43-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-50&#34;&gt;&lt;a href=&#34;#cb43-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; newnode() { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ++cnt; }&lt;/span&gt;
&lt;span id=&#34;cb43-51&#34;&gt;&lt;a href=&#34;#cb43-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-52&#34;&gt;&lt;a href=&#34;#cb43-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; newnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-53&#34;&gt;&lt;a href=&#34;#cb43-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = newnode();&lt;/span&gt;
&lt;span id=&#34;cb43-54&#34;&gt;&lt;a href=&#34;#cb43-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t[u].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[u].val = val, t[u].key = rand();&lt;/span&gt;
&lt;span id=&#34;cb43-55&#34;&gt;&lt;a href=&#34;#cb43-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb43-56&#34;&gt;&lt;a href=&#34;#cb43-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-57&#34;&gt;&lt;a href=&#34;#cb43-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-58&#34;&gt;&lt;a href=&#34;#cb43-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-59&#34;&gt;&lt;a href=&#34;#cb43-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ^ y;&lt;/span&gt;
&lt;span id=&#34;cb43-60&#34;&gt;&lt;a href=&#34;#cb43-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key)&lt;/span&gt;
&lt;span id=&#34;cb43-61&#34;&gt;&lt;a href=&#34;#cb43-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y), pushup(x), x;&lt;/span&gt;
&lt;span id=&#34;cb43-62&#34;&gt;&lt;a href=&#34;#cb43-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]), pushup(y), y;&lt;/span&gt;
&lt;span id=&#34;cb43-63&#34;&gt;&lt;a href=&#34;#cb43-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-64&#34;&gt;&lt;a href=&#34;#cb43-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-65&#34;&gt;&lt;a href=&#34;#cb43-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-66&#34;&gt;&lt;a href=&#34;#cb43-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb43-67&#34;&gt;&lt;a href=&#34;#cb43-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-68&#34;&gt;&lt;a href=&#34;#cb43-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-69&#34;&gt;&lt;a href=&#34;#cb43-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-70&#34;&gt;&lt;a href=&#34;#cb43-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb43-71&#34;&gt;&lt;a href=&#34;#cb43-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = newnode(), t[x] = t[u];&lt;/span&gt;
&lt;span id=&#34;cb43-72&#34;&gt;&lt;a href=&#34;#cb43-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k, t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb43-73&#34;&gt;&lt;a href=&#34;#cb43-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(x);&lt;/span&gt;
&lt;span id=&#34;cb43-74&#34;&gt;&lt;a href=&#34;#cb43-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb43-75&#34;&gt;&lt;a href=&#34;#cb43-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = newnode(), t[y] = t[u];&lt;/span&gt;
&lt;span id=&#34;cb43-76&#34;&gt;&lt;a href=&#34;#cb43-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k, x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb43-77&#34;&gt;&lt;a href=&#34;#cb43-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(y);&lt;/span&gt;
&lt;span id=&#34;cb43-78&#34;&gt;&lt;a href=&#34;#cb43-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-79&#34;&gt;&lt;a href=&#34;#cb43-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-80&#34;&gt;&lt;a href=&#34;#cb43-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-81&#34;&gt;&lt;a href=&#34;#cb43-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-82&#34;&gt;&lt;a href=&#34;#cb43-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-83&#34;&gt;&lt;a href=&#34;#cb43-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb43-84&#34;&gt;&lt;a href=&#34;#cb43-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(u, val, x, z);&lt;/span&gt;
&lt;span id=&#34;cb43-85&#34;&gt;&lt;a href=&#34;#cb43-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = newnode(val);&lt;/span&gt;
&lt;span id=&#34;cb43-86&#34;&gt;&lt;a href=&#34;#cb43-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb43-87&#34;&gt;&lt;a href=&#34;#cb43-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-88&#34;&gt;&lt;a href=&#34;#cb43-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-89&#34;&gt;&lt;a href=&#34;#cb43-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-90&#34;&gt;&lt;a href=&#34;#cb43-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delNode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-91&#34;&gt;&lt;a href=&#34;#cb43-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb43-92&#34;&gt;&lt;a href=&#34;#cb43-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(u, val, x, z);&lt;/span&gt;
&lt;span id=&#34;cb43-93&#34;&gt;&lt;a href=&#34;#cb43-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(x, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-94&#34;&gt;&lt;a href=&#34;#cb43-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = merge(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t[y].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb43-95&#34;&gt;&lt;a href=&#34;#cb43-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb43-96&#34;&gt;&lt;a href=&#34;#cb43-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-97&#34;&gt;&lt;a href=&#34;#cb43-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-98&#34;&gt;&lt;a href=&#34;#cb43-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-99&#34;&gt;&lt;a href=&#34;#cb43-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getRank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-100&#34;&gt;&lt;a href=&#34;#cb43-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb43-101&#34;&gt;&lt;a href=&#34;#cb43-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(u, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-102&#34;&gt;&lt;a href=&#34;#cb43-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[x].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-103&#34;&gt;&lt;a href=&#34;#cb43-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-104&#34;&gt;&lt;a href=&#34;#cb43-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb43-105&#34;&gt;&lt;a href=&#34;#cb43-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-106&#34;&gt;&lt;a href=&#34;#cb43-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-107&#34;&gt;&lt;a href=&#34;#cb43-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getKth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb43-108&#34;&gt;&lt;a href=&#34;#cb43-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb43-109&#34;&gt;&lt;a href=&#34;#cb43-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; getKth(L, k);&lt;/span&gt;
&lt;span id=&#34;cb43-110&#34;&gt;&lt;a href=&#34;#cb43-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; getKth(R, k - t[L].size - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-111&#34;&gt;&lt;a href=&#34;#cb43-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-112&#34;&gt;&lt;a href=&#34;#cb43-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-113&#34;&gt;&lt;a href=&#34;#cb43-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getPre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-114&#34;&gt;&lt;a href=&#34;#cb43-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, ans;&lt;/span&gt;
&lt;span id=&#34;cb43-115&#34;&gt;&lt;a href=&#34;#cb43-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-116&#34;&gt;&lt;a href=&#34;#cb43-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;2147483647&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-117&#34;&gt;&lt;a href=&#34;#cb43-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = getKth(x, t[x].size);&lt;/span&gt;
&lt;span id=&#34;cb43-118&#34;&gt;&lt;a href=&#34;#cb43-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-119&#34;&gt;&lt;a href=&#34;#cb43-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb43-120&#34;&gt;&lt;a href=&#34;#cb43-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-121&#34;&gt;&lt;a href=&#34;#cb43-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-122&#34;&gt;&lt;a href=&#34;#cb43-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getSuc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-123&#34;&gt;&lt;a href=&#34;#cb43-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, ans;&lt;/span&gt;
&lt;span id=&#34;cb43-124&#34;&gt;&lt;a href=&#34;#cb43-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-125&#34;&gt;&lt;a href=&#34;#cb43-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2147483647&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-126&#34;&gt;&lt;a href=&#34;#cb43-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = getKth(y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-127&#34;&gt;&lt;a href=&#34;#cb43-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-128&#34;&gt;&lt;a href=&#34;#cb43-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb43-129&#34;&gt;&lt;a href=&#34;#cb43-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-130&#34;&gt;&lt;a href=&#34;#cb43-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-131&#34;&gt;&lt;a href=&#34;#cb43-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb43-132&#34;&gt;&lt;a href=&#34;#cb43-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-133&#34;&gt;&lt;a href=&#34;#cb43-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; read(n);&lt;/span&gt;
&lt;span id=&#34;cb43-134&#34;&gt;&lt;a href=&#34;#cb43-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb43-135&#34;&gt;&lt;a href=&#34;#cb43-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, op, val; read(v), read(op), read(val);&lt;/span&gt;
&lt;span id=&#34;cb43-136&#34;&gt;&lt;a href=&#34;#cb43-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root[i] = root[v];&lt;/span&gt;
&lt;span id=&#34;cb43-137&#34;&gt;&lt;a href=&#34;#cb43-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) insert(root[i], val);&lt;/span&gt;
&lt;span id=&#34;cb43-138&#34;&gt;&lt;a href=&#34;#cb43-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) delNode(root[i], val);&lt;/span&gt;
&lt;span id=&#34;cb43-139&#34;&gt;&lt;a href=&#34;#cb43-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) print(getRank(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-140&#34;&gt;&lt;a href=&#34;#cb43-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) print(getKth(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-141&#34;&gt;&lt;a href=&#34;#cb43-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;) print(getPre(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-142&#34;&gt;&lt;a href=&#34;#cb43-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) print(getSuc(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-143&#34;&gt;&lt;a href=&#34;#cb43-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-144&#34;&gt;&lt;a href=&#34;#cb43-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-145&#34;&gt;&lt;a href=&#34;#cb43-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        
    </channel>
</rss>

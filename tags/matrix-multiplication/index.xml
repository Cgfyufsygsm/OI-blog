<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>矩阵乘法 on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/matrix-multiplication/</link>
        <description>Recent content in 矩阵乘法 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Sat, 19 Feb 2022 12:20:49 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/matrix-multiplication/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>P2144 [FJOI2007]轮状病毒</title>
        <link>https://oi.imyangty.com/sol-luogu-p2144/</link>
        <pubDate>Sat, 19 Feb 2022 12:20:49 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p2144/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg39.webp" alt="Featured image of post P2144 [FJOI2007]轮状病毒" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;轮状病毒有很多变种。许多轮状病毒都是由一个轮状基产生。一个n轮状基由圆环上n个不同的基原子和圆心的一个核原子构成。2个原子之间的边表示这2个原子之间的信息通道，如图1。&lt;/p&gt;
&lt;p&gt;n轮状病毒的产生规律是在n轮状基中删除若干边，使各原子之间有唯一一条信息通道。例如，共有16个不同的3轮状病毒，入图2所示。&lt;/p&gt;
&lt;p&gt;给定n(N&amp;lt;=100)，编程计算有多少个不同的n轮状病毒。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;一看就是统计生成树个数，上矩阵树定理。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 轮状病毒的 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 阶 Kirchhoff 矩阵应为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
n &amp;amp; -1 &amp;amp; -1 &amp;amp; -1 &amp;amp; \cdots &amp;amp; -1 &amp;amp; -1\\
-1 &amp;amp; 3 &amp;amp; -1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; -1\\
-1 &amp;amp; -1 &amp;amp; 3 &amp;amp; -1 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
-1 &amp;amp; 0 &amp;amp; -1 &amp;amp; 3 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
\vdots &amp;amp;\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots\\
-1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 3 &amp;amp; -1\\
-1 &amp;amp; -1 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; -1 &amp;amp; 3
\end{bmatrix}
\]&lt;/span&gt; 但是这个矩阵不是很好直接高斯消元求 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 阶子式的值，因为高精度运算比较麻烦，我们尝试观察性质。&lt;/p&gt;
&lt;p&gt;发现第一行和第一列删掉之后长得很漂亮： &lt;span class=&#34;math display&#34;&gt;\[
\boldsymbol M _n = \begin{bmatrix}
3 &amp;amp; -1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; -1\\
-1 &amp;amp; 3 &amp;amp; -1 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
0 &amp;amp; -1 &amp;amp; 3 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots\\
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 3 &amp;amp; -1\\
-1 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; -1 &amp;amp; 3
\end{bmatrix}
\]&lt;/span&gt; 把他按照第一列展开之后可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\det\boldsymbol M_n = 3\det\begin{bmatrix}
3 &amp;amp; -1 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
-1 &amp;amp; 3 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots\\
0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 3 &amp;amp; -1\\
0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; -1 &amp;amp; 3
\end{bmatrix}
+ \det\begin{bmatrix}
-1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; -1\\
-1 &amp;amp; 3 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots\\
0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 3 &amp;amp; -1\\
0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; -1 &amp;amp; 3
\end{bmatrix}
 \\+ (-1)^n\det\begin{bmatrix}
 -1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; -1\\
3 &amp;amp; -1 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
-1 &amp;amp; 3 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0\\
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots\\
0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 3 &amp;amp; -1\\
 \end{bmatrix}
\]&lt;/span&gt; 将其记作 &lt;span class=&#34;math display&#34;&gt;\[
\det\boldsymbol M_n = 3d_{n - 1} + a_{n - 1} + (-1)^nb_{n-1}
\]&lt;/span&gt; 由于 &lt;span class=&#34;math inline&#34;&gt;\(d_{n}\)&lt;/span&gt; 是三对角行列式，所以展开 &lt;span class=&#34;math inline&#34;&gt;\(d_{n}\)&lt;/span&gt; 可以得到 &lt;span class=&#34;math inline&#34;&gt;\(d_{n} = 3d_{n - 1} - d_{n - 2}\)&lt;/span&gt;。展开 &lt;span class=&#34;math inline&#34;&gt;\(a_n\)&lt;/span&gt; 可以得到 &lt;span class=&#34;math inline&#34;&gt;\(a_n = -d_{n - 1} -1\)&lt;/span&gt;，按第一行展开 &lt;span class=&#34;math inline&#34;&gt;\(b_n\)&lt;/span&gt; 可得到 &lt;span class=&#34;math inline&#34;&gt;\((-1)^nb_{n} = -d_{n - 1} - 1\)&lt;/span&gt;。代入上面公式可得到 &lt;span class=&#34;math display&#34;&gt;\[
\det\boldsymbol M_n = 3d_{n - 1} - 2d_{n - 2} - 2
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(d_n = 3d_{n - 1} - d_{n - 2}\)&lt;/span&gt;，所以待定系数法一波可以推出 &lt;span class=&#34;math display&#34;&gt;\[
\det\boldsymbol M_n = 3\det\boldsymbol M_{n - 1} - \det\boldsymbol M_{n - 2} + 2
\]&lt;/span&gt; 可以直接递推也可以直接矩阵快速幂。&lt;/p&gt;
&lt;p&gt;需要高精度，不放代码了。&lt;/p&gt;
&lt;p&gt;过程：设 &lt;span class=&#34;math inline&#34;&gt;\(\det\boldsymbol M_n = f_n\)&lt;/span&gt;，则设 &lt;span class=&#34;math inline&#34;&gt;\(f_n = \alpha f_{n - 1} + \beta f_{n - 2} + \gamma\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
3d_{n - 1} - 2d_{n - 2} - 2 = \alpha(3d_{n - 2} - 2d_{n - 3} - 2) + \beta(3d_{n - 3} - 2d_{n - 4} - 2) + \gamma\\
d_n = 3d_{n - 1} - d_{n - 2}
\end{cases}
\]&lt;/span&gt; 化简一下左侧 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
3d_{n-1}-2d_{n-2}-2&amp;amp;=3(3d_{n-2}-d_{n-3}) - 2(3d_{n-3} - d_{n - 4})-2\\
&amp;amp;= 3(3(3d_{n - 3} - d_{n - 4}) - d_{n - 3}) - 2(3d_{n - 3} - d_{n - 4})-2\\
&amp;amp;= 7(3d_{n-3} -d_{n - 4})  -3d_{n-3}-2\\
&amp;amp;= 18d_{n-3} - 7d_{n-4}-2
\end{aligned}
\]&lt;/span&gt; 化简右侧： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\alpha(3d_{n - 2} - 2d_{n - 3} - 2) + \beta(3d_{n - 3} - 2d_{n - 4} - 2) + \gamma\\
=&amp;amp;\alpha(7d_{n-3} - 3d_{n-4} - 2) + \beta(3d_{n - 3} - 2d_{n - 4} - 2) + \gamma\\
=&amp;amp;(7\alpha + 3\beta)d_{n - 3} - (3\alpha + 2\beta)d_{n - 4} - 2\alpha - 2\beta + \gamma
\end{aligned}
\]&lt;/span&gt; 于是有了 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
7\alpha + 3\beta = 18\\
3\alpha + 2\beta = 7\\
2\alpha + 2\beta - \gamma = 2
\end{cases}
\]&lt;/span&gt; 解出来 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
\alpha = 3\\
\beta = -1\\
\gamma = 2
\end{cases}
\]&lt;/span&gt; &lt;del&gt;真恶心&lt;/del&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>NOI Online 题目选做</title>
        <link>https://oi.imyangty.com/sol-noiol/</link>
        <pubDate>Thu, 30 Sep 2021 16:14:50 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-noiol/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg32.webp" alt="Featured image of post NOI Online 题目选做" /&gt;&lt;h2 id=&#34;noi-online-1-入门组&#34;&gt;NOI Online #1 入门组&lt;/h2&gt;
&lt;h3 id=&#34;a-文具订购&#34;&gt;A 文具订购&lt;/h3&gt;
&lt;p&gt;暴力枚举。&lt;/p&gt;
&lt;h3 id=&#34;b-跑步&#34;&gt;B 跑步&lt;/h3&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^5\)&lt;/span&gt;）的拆分数。由于是入门组所以不考虑五边形数定理这些高端做法。&lt;/p&gt;
&lt;p&gt;显然，当 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 足够小时，可以考虑完全背包：&lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 表示前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个数加出 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数。 &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = f_{i - 1, j - i} + f_{i, j - i}
\]&lt;/span&gt; 然后就有 &lt;span class=&#34;math inline&#34;&gt;\(70\)&lt;/span&gt; 分了。然而 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 很大，故考虑根号分治。令 &lt;span class=&#34;math inline&#34;&gt;\(m = \sqrt n\)&lt;/span&gt;，则对于小于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的，我们使用完全背包，对于大于等于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的，则需要使用另外一种 dp。我们知道，对于大于等于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的数，其最多也就只能出现 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个。所以考虑如下的 dp：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(g_{i, j}\)&lt;/span&gt; 为使用 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个大于等于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的数，加出 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数。&lt;/p&gt;
&lt;p&gt;则 &lt;span class=&#34;math display&#34;&gt;\[
g_{i, j} = g_{i - 1, j - m} + g_{i, j - i}
\]&lt;/span&gt; 这个转移方程的意义为，&lt;span class=&#34;math inline&#34;&gt;\(g_{i - 1, j - m}\)&lt;/span&gt; 表示在拆分序列中加上一个 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g_{i, j - i}\)&lt;/span&gt; 表示把拆分序列中每个数加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，这样子操作序列和拆分方案是唯一对应的。&lt;/p&gt;
&lt;p&gt;算答案的时候，合并两部分： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 0}^n\left(f_{m - 1, i}\times \sum_{j = 0}^mg_{j, n - i}\right)
\]&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h3 id=&#34;c-魔法&#34;&gt;C 魔法&lt;/h3&gt;
&lt;p&gt;挺不错的矩阵快速幂 + Floyd。&lt;/p&gt;
&lt;h2 id=&#34;noi-online-2-入门组&#34;&gt;NOI Online #2 入门组&lt;/h2&gt;
&lt;h3 id=&#34;a-未了&#34;&gt;A 未了&lt;/h3&gt;
&lt;p&gt;忘了是啥了，签到题。&lt;/p&gt;
&lt;h3 id=&#34;b-荆轲刺秦王&#34;&gt;B 荆轲刺秦王&lt;/h3&gt;
&lt;p&gt;忘了怎么做了，是个搜素。&lt;/p&gt;
&lt;h3 id=&#34;c-建设城市&#34;&gt;C 建设城市&lt;/h3&gt;
&lt;p&gt;题意：问满足以下条件的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a_{1,\cdots, 2n}\)&lt;/span&gt; 的数量，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(1\le n,m\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, 2n], a_i\in[1,m]\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;前 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素不降，后 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素不增。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_x = a_y\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt; 的 dp 不难设计。&lt;/p&gt;
&lt;p&gt;先忽略 &lt;span class=&#34;math inline&#34;&gt;\(a_x = a_y\)&lt;/span&gt; 的限制，考虑构造一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，值域在 &lt;span class=&#34;math inline&#34;&gt;\([1, m]\)&lt;/span&gt; 内的不降数列（不增的同理）。考虑长度为 &lt;span class=&#34;math inline&#34;&gt;\(n + m - 1\)&lt;/span&gt; 的操作序列，其中包含给 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 加一和将 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 加到当前序列末尾两个操作。不难发现一个操作序列唯一对应一个不降数列，然后随便想一下发现操作序列的总数为 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m) = \dbinom{n + m - 1}{n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后将 &lt;span class=&#34;math inline&#34;&gt;\(a_x = a_y\)&lt;/span&gt; 的限制考虑进来之后，不妨枚举 &lt;span class=&#34;math inline&#34;&gt;\(h = a_x\)&lt;/span&gt;。然后要按 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的关系分类讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x \le n&amp;lt;y\le 2n\)&lt;/span&gt;。分为四段考虑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一段 &lt;span class=&#34;math inline&#34;&gt;\([1, x - 1]\)&lt;/span&gt; 的为 &lt;span class=&#34;math inline&#34;&gt;\(f(x - 1, h)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;第二段 &lt;span class=&#34;math inline&#34;&gt;\([x + 1, n]\)&lt;/span&gt; 的为 &lt;span class=&#34;math inline&#34;&gt;\(f(n - x, m - h + 1)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;第三段 &lt;span class=&#34;math inline&#34;&gt;\([n + 1, y - 1]\)&lt;/span&gt; 的为 &lt;span class=&#34;math inline&#34;&gt;\(f(y - 1 - n, m - h + 1)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;第四段 &lt;span class=&#34;math inline&#34;&gt;\([y + 1, 2n]\)&lt;/span&gt; 的为 &lt;span class=&#34;math inline&#34;&gt;\(f(2n - y, h)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le x&amp;lt;y\le n\)&lt;/span&gt;。同样是分为四段考虑，只不过是同时钦定了 &lt;span class=&#34;math inline&#34;&gt;\(a_x\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(a_y\)&lt;/span&gt; 之间的元素。&lt;/p&gt;
&lt;p&gt;答案为 &lt;span class=&#34;math inline&#34;&gt;\(f(x - 1, h)\times f(n - y + 1, m - h + 1)\times f(n, h)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n + 1\le x&amp;lt;y\le 2n\)&lt;/span&gt;。同理，答案为 &lt;span class=&#34;math inline&#34;&gt;\(f(n,h)\times f(x - n - 1, m - h + 1)\times f(2n - y, h)\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是对于后两种情况，还有一个思路：不妨直接将 &lt;span class=&#34;math inline&#34;&gt;\(a_x\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(a_y\)&lt;/span&gt; 之间的元素缩在一起。然后你就发现答案为 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m)\times f(n - (y - x), m)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;于是 &lt;span class=&#34;math inline&#34;&gt;\(O(n + m)\)&lt;/span&gt; 解决此题。&lt;/p&gt;
&lt;h2 id=&#34;noi-online-2-提高组&#34;&gt;NOI Online #2 提高组&lt;/h2&gt;
&lt;h3 id=&#34;c-游戏&#34;&gt;C 游戏&lt;/h3&gt;
&lt;p&gt;有一棵 &lt;span class=&#34;math inline&#34;&gt;\(n = 2m\)&lt;/span&gt; 个点的有根树，两人初始各有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个点。一共 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 轮游戏，每轮游戏两人各选一个点，若两人选的点间构成祖先关系，则这轮会决出胜负。对于 &lt;span class=&#34;math inline&#34;&gt;\(k = 0, 1, 2,\cdots, m\)&lt;/span&gt; 求出恰有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 轮决出胜负的方案数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 5000\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这个题面长得就很二项式反演。不妨考虑至少有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 轮决出胜负的方案数。即我们会钦定 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 对祖先关系。找这个东西考虑 dp。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{u, k}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为根的子树中选了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 对的方案数。&lt;/p&gt;
&lt;p&gt;最后令 &lt;span class=&#34;math inline&#34;&gt;\(g_k\)&lt;/span&gt; 为答案，则有 &lt;span class=&#34;math display&#34;&gt;\[
g_k = \sum_{i = k}^{n / 2}(-1)^{i - k}\binom i kf_{1, i}(m - i)!
\]&lt;/span&gt; dp 大概是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的。树形背包式瞎转移转移就可以了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;5005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnte;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size[maxn], cnt1[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; str[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f[maxn][maxn], tmp[maxn], fac[maxn], invfac[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint binom(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n &amp;lt; m ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : fac[n] * invfac[m] * invfac[n - m];}&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt1[u] = str[u] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v = to[i];&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (size[u] + size[v]) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) tmp[j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, size[u] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, size[v] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                tmp[j + k] += f[u][j] * f[v][k];&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (size[u] + size[v]) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[u][j] = tmp[j];&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v], cnt1[u] += cnt1[v];&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, min(cnt1[u], size[u] - cnt1[u]), &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (str[u] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;) f[u][i] += f[u][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (size[u] - cnt1[u] - (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; f[u][i] += f[u][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (cnt1[u] - (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fac[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5000&lt;/span&gt;) fac[i] = fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    invfac[&lt;span class=&#34;dv&#34;&gt;5000&lt;/span&gt;] = qPow(fac[&lt;span class=&#34;dv&#34;&gt;5000&lt;/span&gt;], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;4999&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) invfac[i] = (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * invfac[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(str + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u), read(v);&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v), add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modint res = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, k, n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            modint tmp = binom(i, k) * f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i] * fac[n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; - i];&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((i - k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) res -= tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; res += tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(res, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;noi-online-2022-提高组&#34;&gt;NOI Online 2022 提高组&lt;/h2&gt;
&lt;h3 id=&#34;a-丹钓战&#34;&gt;A 丹钓战&lt;/h3&gt;
&lt;p&gt;发现可以离线。&lt;/p&gt;
&lt;p&gt;然后二维数点即可。&lt;/p&gt;
&lt;h3 id=&#34;b-讨论&#34;&gt;B 讨论&lt;/h3&gt;
&lt;p&gt;多测，给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个集合 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;，问是否存在 &lt;span class=&#34;math inline&#34;&gt;\(x\ne y\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(S_x\cap S_y \ne \varnothing\land S_x\not\subseteq S_y\land S_y\not\subseteq S_x\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(\sum n\le 10^6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\sum |S_i|\le 2\times 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有一个暴力做法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于每道题 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，将会 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的人拎出来按照 &lt;span class=&#34;math inline&#34;&gt;\(|S|\)&lt;/span&gt; 排序，然后检查相邻的人是否能讨论即可。&lt;/p&gt;
&lt;p&gt;正确性证明：假设 &lt;span class=&#34;math inline&#34;&gt;\(|S_x|\le|S_y|\le|S_z|\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 之间，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 之间都不能相互讨论，则说明 &lt;span class=&#34;math inline&#34;&gt;\(S_x\subseteq S_y\subseteq S_z\)&lt;/span&gt;，那么 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 也不会相互讨论。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑优化。首先将所有人按照 &lt;span class=&#34;math inline&#34;&gt;\(|S|\)&lt;/span&gt; 排序，依次插入。&lt;/p&gt;
&lt;p&gt;然后记录会 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 题的上一个人 &lt;span class=&#34;math inline&#34;&gt;\(l_i\)&lt;/span&gt;，那么每次插入 &lt;span class=&#34;math inline&#34;&gt;\(S_x\)&lt;/span&gt; 的时候考虑 &lt;span class=&#34;math inline&#34;&gt;\(i\in S_x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(S_{l_i}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(S_x\)&lt;/span&gt; 是否合法。但是由于每个 &lt;span class=&#34;math inline&#34;&gt;\(S_x\)&lt;/span&gt; 会被多次检查，复杂度还是不对。&lt;/p&gt;
&lt;p&gt;而遍历 &lt;span class=&#34;math inline&#34;&gt;\(S_x\)&lt;/span&gt; 的时候，可以顺便求出 &lt;span class=&#34;math inline&#34;&gt;\(S_x\)&lt;/span&gt; 与所有 &lt;span class=&#34;math inline&#34;&gt;\(S_{l_i}\)&lt;/span&gt; 的交集大小，这样就可以直接通过交集大小来判断两个集合是否包含。&lt;/p&gt;
&lt;p&gt;所以对于一个测，时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n + \sum |S_i|)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; fastIO::is;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; fastIO::os;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k[maxn], a[maxn], vis[maxn], cnt[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve() {&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    is &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        is &amp;gt;&amp;gt; k[i];&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[i] = cnt[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(p[i]);&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k[i]) {&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; is &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[i].push_back(x);&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, [](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; k[x] &amp;lt; k[y];});&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(t, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = a[t];&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!k[i]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ++cnt[vis[p[i][u]]];&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; g = vis[p[i][u]];&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g &amp;amp;&amp;amp; cnt[g] &amp;lt; k[g] &amp;amp;&amp;amp; cnt[g] &amp;lt; k[i]) {&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                os &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;YES&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                os &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; g &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) --cnt[vis[p[i][u]]], vis[p[i][u]] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    os &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;NO&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; is &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) solve();&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;c-如何正确的排序&#34;&gt;C 如何正确的排序&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>CF696D Legen...</title>
        <link>https://oi.imyangty.com/sol-cf696d/</link>
        <pubDate>Fri, 03 Sep 2021 13:14:56 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-cf696d/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg2.webp" alt="Featured image of post CF696D Legen..." /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定若干模板串 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;，每个模板串有价值 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;（不保证 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt; 两两不同）。定义一个字符串 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的价值为 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt; 出现次数乘上 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的和，问一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 的字符串能达到的最大价值。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum|S_i|\le 200\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(l\le 10^{14}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;显然的 AC 自动机 DP。先合并相同字符串的价值。&lt;/p&gt;
&lt;p&gt;不妨令 &lt;span class=&#34;math inline&#34;&gt;\(f_{j, i}\)&lt;/span&gt; 为匹配到 ACAM 上 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 节点，长度为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的最大价值。&lt;/p&gt;
&lt;p&gt;转移： &lt;span class=&#34;math display&#34;&gt;\[
f_{j, i} = \max_{(j&amp;#39;, j)\text{ exists}}\{\operatorname{val}(j) + f_{j&amp;#39;, i - 1}\}
\]&lt;/span&gt; 然后就会发现问题不太对：&lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 的范围是 &lt;span class=&#34;math inline&#34;&gt;\(10^{14}\)&lt;/span&gt; 级别的，朴素的来做是做不了的。但这个式子和 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 的范围让我们联想到了矩阵快速幂，而 &lt;span class=&#34;math inline&#34;&gt;\(\sum|S|\)&lt;/span&gt; 的范围为 &lt;span class=&#34;math inline&#34;&gt;\(200\)&lt;/span&gt;，于是考虑构造矩阵。首先先写一下一个向量： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
f_{0, i}\\
f_{1, i}\\
f_{2, i}\\
\vdots\\
f_{tot, i}
\end{bmatrix}
\]&lt;/span&gt; 看一下施加一下上面的变换，我们的转移矩阵应该是什么样的。令 &lt;span class=&#34;math display&#34;&gt;\[
g_{a, b} = 
\begin{cases}
\operatorname{val}(b)&amp;amp;,(b,a)\text{ exists}\\
-\infty&amp;amp;,\text{otherwise}
\end{cases}
\]&lt;/span&gt; 然后 &lt;span class=&#34;math display&#34;&gt;\[
f_{j, i} = \max_k\{g_{j, k} + f_{k, i - 1}\}
\]&lt;/span&gt; 这个明显和 DDP 是一个形式。建立出 &lt;span class=&#34;math inline&#34;&gt;\(g^L\)&lt;/span&gt; 然后乘上初始向量即可。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T min(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T max(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix {&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix() {memset(ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ele);}&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il ll* &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;[](&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ele[a];}&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; a, Matrix&amp;lt;n, p&amp;gt; b) {&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ret[i][j] = max(ret[i][j], a[i][k] + b[k][j]);&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n&amp;gt; Matrix&amp;lt;n, n&amp;gt; qPow(Matrix&amp;lt;n, n&amp;gt; mat, ll exp) {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;n, n&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret.ele[i][i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mat = mat * mat)&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = ret * mat;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;], fail;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll val;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[&lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; *s, ll val) {&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, len = strlen(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, len) {&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!t[u].ch[c]) t[u].ch[c] = ++tot;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[c];&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].val += val;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build() {&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[&lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;], qhead = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, qtail = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;].ch[c]) q[++qtail] = t[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;].ch[c];&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (qhead &amp;lt;= qtail) {&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q[qhead++];&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val += t[t[u].fail].val;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].ch[c]) t[t[u].ch[c]].fail = t[t[u].fail].ch[c], q[++qtail] = t[u].ch[c];&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; t[u].ch[c] = t[t[u].fail].ch[c];&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; str[&lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll l, v0[&lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;l);&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, v0 + i);&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, str + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(str, v0[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build();&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;&amp;gt; trans;&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    v[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, tot)&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            trans[t[u].ch[c]][u] = max(trans[t[u].ch[c]][u], t[t[u].ch[c]].val);&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    v = qPow(trans, l) * v;&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, tot) ans = max(ans, v[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P7848 「dWoi R2」FFT / 狒狒贴</title>
        <link>https://oi.imyangty.com/sol-luogu-p7848/</link>
        <pubDate>Fri, 27 Aug 2021 10:46:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p7848/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg28.webp" alt="Featured image of post P7848 「dWoi R2」FFT / 狒狒贴" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\le 2^{17}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\le 10^{18}\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; NTT &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次后的结果。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;做一次 DFT 相当就是给 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 向量左乘一个范德蒙矩阵，考虑范德蒙矩阵平方之后是什么样： &lt;span class=&#34;math display&#34;&gt;\[
V^2_{i,j} = \sum_{k = 0}^{n - 1} \omega^{ik+kj}=\omega^{i +j}\sum_{k = 0}^{n - 1}\omega^k
\]&lt;/span&gt; 注意一下，只有 &lt;span class=&#34;math inline&#34;&gt;\(i + j = 0\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(i + j = n\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(V_{i, j} = n\)&lt;/span&gt;，否则一定有 &lt;span class=&#34;math inline&#34;&gt;\(V_{i, j} = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后分析这个 &lt;span class=&#34;math inline&#34;&gt;\(V^2\)&lt;/span&gt; 左乘一个向量会带来什么：很明显是所有元素乘以 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 然后把后 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 个元素反转。那么把 &lt;span class=&#34;math inline&#34;&gt;\(V^4\)&lt;/span&gt; 乘给一个向量就是所有元素乘 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以，把所有元素乘上 &lt;span class=&#34;math inline&#34;&gt;\((n^2)^{\lfloor k / 4\rfloor}\)&lt;/span&gt;，然后再做 &lt;span class=&#34;math inline&#34;&gt;\(k\bmod 4\)&lt;/span&gt; 次 NTT 就可以得到答案。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll n, k; read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; &amp;lt;&amp;lt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll tmp = qPow(n * n, k / &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * tmp % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k % &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) DFT(f, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(f[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>组合数求法小记</title>
        <link>https://oi.imyangty.com/note-comb-number/</link>
        <pubDate>Tue, 29 Jun 2021 19:29:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-comb-number/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg10.webp" alt="Featured image of post 组合数求法小记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;记录一下常见的求组合数的几种方法&lt;/p&gt;
&lt;h2 id=&#34;暴力&#34;&gt;暴力&lt;/h2&gt;
&lt;p&gt;利用 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \frac{n!}{(n - m)!m!}
\]&lt;/span&gt; 直接做，复杂度与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 相关，且很容易爆 &lt;code&gt;long long&lt;/code&gt;。但是 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 很小的时候很实用！&lt;/p&gt;
&lt;h2 id=&#34;递推&#34;&gt;递推&lt;/h2&gt;
&lt;p&gt;利用 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \binom{n - 1}{m} + \binom{n - 1}{m - 1}
\]&lt;/span&gt; 来进行递推，时空复杂度均为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;c[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = c[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    c[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[i][j] = (c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + c[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;适用于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 较小的情况，需要注意边界条件，当 &lt;span class=&#34;math inline&#34;&gt;\(m = 0\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom n m = 1\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;lucas-定理&#34;&gt;Lucas 定理&lt;/h3&gt;
&lt;p&gt;见 &lt;a href=&#34;https://oi.imyangty.com/note-lucas/&#34;&gt;Lucas 定理学习笔记&lt;/a&gt;。适用于模数较小，而 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 均很大的情况。&lt;/p&gt;
&lt;h3 id=&#34;乘法逆元&#34;&gt;乘法逆元&lt;/h3&gt;
&lt;p&gt;利用 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \frac{n!}{(n - m)!m!}
\]&lt;/span&gt; 来做。要求模数为质数。&lt;/p&gt;
&lt;p&gt;求出 &lt;span class=&#34;math inline&#34;&gt;\((n - m)!m!\)&lt;/span&gt; 的逆元，然后直接与 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 相乘即可。适用于模数为质数，且只求少量组合数的情况。&lt;/p&gt;
&lt;h3 id=&#34;矩阵快速幂&#34;&gt;矩阵快速幂&lt;/h3&gt;
&lt;p&gt;本篇博客的重点。&lt;/p&gt;
&lt;p&gt;有些时候（如 &lt;a href=&#34;https://loj.ac/p/6069&#34;&gt;LOJ6069&lt;/a&gt;），题目会要求我们求很大的组合数，比如此题要求我们求所有的 &lt;span class=&#34;math display&#34;&gt;\[
\binom{a}{b}
\]&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^9\)&lt;/span&gt; 级别，&lt;span class=&#34;math inline&#34;&gt;\(b\in[0, n]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 很小。此时就需要利用组合数的递推来构造转移矩阵使用矩阵快速幂求解。&lt;/p&gt;
&lt;p&gt;由于递推式是这个样子的： &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \binom{n - 1}{m} + \binom{n - 1}{m - 1}
\]&lt;/span&gt; 所以我们的矩阵应该长这个样子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
C_{i, 0}\\
C_{i, 1}\\
\vdots\\
C_{n, 1}
\end{bmatrix}
\]&lt;/span&gt; 然后不难构造出转移矩阵 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0\\
1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0\\
0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 1 &amp;amp; \cdots &amp;amp; 0\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots\\
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt; 于是就可以用矩阵快速幂求解。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; matrix&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; id()&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix() {memset(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; a);}&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;matrix &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; matrix &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; matrix &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                add(ret.a[i][j], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.a[i][k] * b.a[k][j] % mod);&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;matrix ksm(matrix base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.id();&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base)&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = base * ret;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init()&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix trans;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    trans.a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        trans.a[i][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = trans.a[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret = ksm(trans, l);&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) c[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = ret.a[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r)&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[i - l][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(c[i - l][j], c[i - l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + c[i - l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>LOJ#6069. 「2017 山东一轮集训 Day4」塔</title>
        <link>https://oi.imyangty.com/sol-loj6069/</link>
        <pubDate>Tue, 29 Jun 2021 17:06:09 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-loj6069/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg26.webp" alt="Featured image of post LOJ#6069. 「2017 山东一轮集训 Day4」塔" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;有一条 &lt;span class=&#34;math inline&#34;&gt;\([1, L]\)&lt;/span&gt; 的数轴，要在上面的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个不同整点处造塔。塔有编号，编号为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的塔的高度为 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt;。每座塔距离它前面/后面塔的距离大于等于自身的高度，问有多少建造方案，答案对 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;h3 id=&#34;排列&#34;&gt;排列&lt;/h3&gt;
&lt;p&gt;注意到摆塔一定就是摆出一个排列。&lt;/p&gt;
&lt;p&gt;比如说 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 3, 2, 4, 5\}\)&lt;/span&gt;，则相邻之间的最小距离即为 &lt;span class=&#34;math inline&#34;&gt;\(\{3, 3, 4, 5\}\)&lt;/span&gt;。于是可以直接把 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 减去这些距离和，用插板法进行求解。&lt;/p&gt;
&lt;p&gt;具体地，设得到的排列为 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(S = \sum\max\{P_i, P_{i -1}\}\)&lt;/span&gt;，则摆下所有的塔一定会占据 &lt;span class=&#34;math inline&#34;&gt;\(S + 1\)&lt;/span&gt; 个格子，还剩下 &lt;span class=&#34;math inline&#34;&gt;\(L - (s +1)\)&lt;/span&gt; 个剩下的格子。把这些格子放在 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 个空里面，方案数为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{L - S - 1 + n}{n}\)&lt;/span&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;dp-求排列个数&#34;&gt;DP 求排列个数&lt;/h3&gt;
&lt;p&gt;现在的问题就是求出 &lt;span class=&#34;math inline&#34;&gt;\(S = k\)&lt;/span&gt; 的排列 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 有多少种。&lt;/p&gt;
&lt;p&gt;这里有一个值得注意的想法：&lt;strong&gt;从小到大加数字 dp&lt;/strong&gt;。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, k}\)&lt;/span&gt; 为加到数字 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个连通块（后面解释），当前的 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 为 $ k$ 的方案数。连通块的意思就是已经确定了中间不再插入数字的块。例如：&lt;span class=&#34;math inline&#34;&gt;\(\{1, 2, 3\},\{5, 4\}\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 2, 3\}\)&lt;/span&gt; 是一个整体，不能往里面加了。如果要加 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 的话可以在最左边/最右边或者中间加，也可以加出新的连通块或者选择和连通块合并，具体的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以自己做一个连通块，这样子对 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 无任何贡献，因为后面加进来的数一定是比 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 大的。&lt;/li&gt;
&lt;li&gt;可以让其贴在某个连通块的一侧，此时对 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 产生 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的贡献，连通块数目不变。&lt;/li&gt;
&lt;li&gt;把两个连通块连接起来，此时对 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 贡献为 &lt;span class=&#34;math inline&#34;&gt;\(2i\)&lt;/span&gt;，连通块数目减一。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样的状态个数为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^4)\)&lt;/span&gt;，因为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的。而转移显然为 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt;，所以 dp 的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^4)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;统计答案&#34;&gt;统计答案&lt;/h3&gt;
&lt;p&gt;这个 dp 的答案为 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, 1, S}\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(S\in[0, n(n + 1)]\)&lt;/span&gt;）。答案即为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{S}f_{n, 1, S} \times\binom{L - S - 1 + n}{ n}
\]&lt;/span&gt; 问题就在于求这个组合数。注意到 &lt;span class=&#34;math inline&#34;&gt;\(S \in[0, n(n + 1)]\)&lt;/span&gt;，所以组合数上面的上界为 &lt;span class=&#34;math inline&#34;&gt;\(r = L - 1 + n\)&lt;/span&gt;，下界为 &lt;span class=&#34;math inline&#34;&gt;\(l = \max\{L - n^2 - 1, n\}\)&lt;/span&gt;。所以可以直接用矩阵快速幂求出 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom l i\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(i\in[0, n]\)&lt;/span&gt;，然后利用递推式把剩下所有需要的组合数都求出来。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;105&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, L, mod, l, r;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn][maxn][maxn * (maxn + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)], c[maxn * (maxn + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][maxn * maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {x = (x + y) % mod;}&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; matrix&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; id()&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix() {memset(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; a);}&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;matrix &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; matrix &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; matrix &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                add(ret.a[i][j], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.a[i][k] * b.a[k][j] % mod);&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;matrix ksm(matrix base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.id();&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base)&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = base * ret;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init()&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix trans;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    trans.a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        trans.a[i - ][i] = trans.a[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret = ksm(trans, l);&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) c[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = ret.a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i];&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r)&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[i - l][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(c[i - l][j], c[i - l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] + c[i - l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), L = read(), mod = read();&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, mx)&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                add(f[i][k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][j] * (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod);&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                add(f[i][k][j + i], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][j] * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * k % mod);&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    add(f[i][k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * i], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][j] * (k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod);&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mx += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * i;&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    l = max(L - mx - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + n, n), r = L - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + n;&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    init();&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(S, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, mx)&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (S + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt; L) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(ans, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[n][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][S] * c[L - S - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + n - l][n] % mod);&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>动态 DP 学习笔记</title>
        <link>https://oi.imyangty.com/note-ddp/</link>
        <pubDate>Sat, 05 Jun 2021 17:52:20 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-ddp/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg12.webp" alt="Featured image of post 动态 DP 学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;动态 dp 一般用来解决树上的 dp 问题，同时需要支持修改点权/边权的操作。&lt;/p&gt;
&lt;p&gt;前置知识：矩阵乘法，树链剖分&lt;/p&gt;
&lt;h2 id=&#34;模板题&#34;&gt;模板题&lt;/h2&gt;
&lt;h3 id=&#34;题意&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4719&#34;&gt;洛谷 P4719 【模板】动态 DP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;带修改点权的树上最大独立集，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 点，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次操作&lt;/p&gt;
&lt;h3 id=&#34;不带修改操作&#34;&gt;不带修改操作&lt;/h3&gt;
&lt;p&gt;没有上司的舞会嘛不就是。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,0}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 子树内不选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 点所构成的最大独立集点权之和，&lt;span class=&#34;math inline&#34;&gt;\(f_{i, 1}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 子树选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 点构成的最大独立集点权之和。则易得转移： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{u, 0} = \sum_{v\in\operatorname{son}(u)} \max\{f_{v, 0}, f_{v, 1}\}\\
f_{u, 1} = \operatorname{val}_u + \sum_{v\in\operatorname{son}(u) f_{v, 0}}
\end{cases}
\]&lt;/span&gt; 答案即为 &lt;span class=&#34;math inline&#34;&gt;\(\max\{f_{\mathrm{root}, 0}, f_{\mathrm{root}, 1}\}\)&lt;/span&gt;。这是普及组的内容。&lt;/p&gt;
&lt;h3 id=&#34;朴素的暴力&#34;&gt;朴素的暴力&lt;/h3&gt;
&lt;p&gt;我们注意到，如果带上了修改点权的操作，则只会有从根到该节点的一条链上会产生 dp 值的变化。这是相当重要的一个思考过程。这样的暴力的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;（最坏情况下一次操作 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;思考一下这个过程：对链进行操作，无非就是树剖。所以我们考虑使用树链剖分解决这个问题。&lt;/p&gt;
&lt;h3 id=&#34;树链剖分&#34;&gt;树链剖分&lt;/h3&gt;
&lt;p&gt;树剖的原理是使用线段树或者其他的数据结构来维护一条重链。故其维护的信息必须满足结合律。什么是结合律呢？加法显然就是满足结合律的： &lt;span class=&#34;math display&#34;&gt;\[
(A + B) + C = A + (B + C)
\]&lt;/span&gt; 然而这个 dp 值一看就不是很好维护出什么结合律的样子。。。&lt;/p&gt;
&lt;p&gt;怎么办？&lt;strong&gt;矩阵&lt;/strong&gt;。矩阵乘法是满足结合律的。所以我们来看看如何利用矩阵来解决这个问题。&lt;/p&gt;
&lt;h3 id=&#34;矩阵乘法&#34;&gt;矩阵乘法&lt;/h3&gt;
&lt;p&gt;首先对这个 dp 式子进行一下修改。由于每次都要对所有儿子求个和太慢了，所以定义一个 &lt;span class=&#34;math inline&#34;&gt;\(g_{i, 0/1}\)&lt;/span&gt; 来简化 dp 的式子。具体地，&lt;span class=&#34;math inline&#34;&gt;\(g_{i, 0}\)&lt;/span&gt; 表示不选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 且只可以选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的轻儿子所在子树的答案，&lt;span class=&#34;math inline&#34;&gt;\(g_{i, 1}\)&lt;/span&gt; 表示选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的最大答案。令 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点的重儿子，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{u, 0} = g_{u, 0} + \max\{f_{x, 0}, f_{x, 1}\}\\
f_{u, 1} = g_{u, 1} + f_{x, 0}
\end{cases}
\]&lt;/span&gt; 统一一下形式，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{u, 0} = \max\{g_{u, 0} + f_{x, 0}, g_{u, 0} + f_{x, 1}\}\\
f_{u, 1} = \max\{g_{u, 1} + f_{x, 0}, g_{u, 1} -\infty \}
\end{cases}
\]&lt;/span&gt; 如是，我们可构造矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}f_{u, 0}\\ f_{u, 1}\end{bmatrix}\)&lt;/span&gt;。然后定义广义矩阵乘法，使得 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
g_{u, 0} &amp;amp; g_{u, 0}\\
g_{u, 1} &amp;amp; -\infty
\end{bmatrix}
\otimes
\begin{bmatrix}
f_{x, 0}\\
f_{x, 1}
\end{bmatrix}
 = 
\begin{bmatrix}
f_{u, 0}\\
f_{u, 1}
\end{bmatrix}
\]&lt;/span&gt; 这里的广义矩阵乘法实际就是 &lt;span class=&#34;math display&#34;&gt;\[
C_{i, j} = \max_{k = 1}^n(A_{i,k} + B_{k, j})
\]&lt;/span&gt; 不难发现这样的矩阵乘法也是满足结合律的。&lt;/p&gt;
&lt;p&gt;于是我们的矩阵乘法就定义好了。这里将矩阵封装起来就是下面这个样子：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _c = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : r(_r), c(_c) {}&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define RET &lt;/span&gt;ret.ele&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M1 &lt;/span&gt;m1.ele&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M2 &lt;/span&gt;m2.ele&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                RET[i][j] = max(RET[i][j], M1[i][k] + M2[k][j]);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef RET&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意到这样子的单位矩阵应为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
0 &amp;amp; -\infty\\
-\infty &amp;amp; 0
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;查询节点的-dp-值&#34;&gt;查询节点的 dp 值&lt;/h3&gt;
&lt;p&gt;现在回顾一下处理流程。&lt;/p&gt;
&lt;p&gt;假设现在要求出 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 节点的 dp 值，怎么办呢？&lt;/p&gt;
&lt;p&gt;明确一点：每个节点的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 值根本就不重要，完全可以现算现用。我们需要记录的是每个节点的转移矩阵，并用线段树维护转移矩阵的乘积。&lt;/p&gt;
&lt;p&gt;于是乎，只需要知道 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 所在重链的底部叶子节点 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{end}(x)\)&lt;/span&gt; 的编号，然后获取 &lt;span class=&#34;math inline&#34;&gt;\(f_{\operatorname{end}(x)} = \begin{bmatrix}0\\ \operatorname{val}_{\operatorname{end}(x)}\end{bmatrix}\)&lt;/span&gt;，然后连乘上转移矩阵到 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 处就可以了。也就是 &lt;code&gt;query(dfn[x], dfn[end[x]]) * Matrix&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;h3 id=&#34;修改点权&#34;&gt;修改点权&lt;/h3&gt;
&lt;p&gt;首先对于转移矩阵，只需要把含 &lt;span class=&#34;math inline&#34;&gt;\(g_{u, 1}\)&lt;/span&gt; 的地方加上 &lt;span class=&#34;math inline&#34;&gt;\(\Delta\mathrm{val}_u\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;但是，这样一来，祖先的 dp 值就会发生改变，而对于 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的链顶节点，其一定为另一节点的轻儿子，所以 &lt;code&gt;fa[top[u]]&lt;/code&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 值是会发生变化的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fa[top[u]]&lt;/code&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 值由链顶节点的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 值产生，所以就需要查询出链顶的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 值。&lt;/p&gt;
&lt;p&gt;但这样一来，就又需要一条条链往上的一直修改了。。。&lt;/p&gt;
&lt;p&gt;总结一下流程吧：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;把矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}g_{u, 0} &amp;amp; g_{u, 0}\\ g_{u, 1} &amp;amp; -\infty\end{bmatrix}\)&lt;/span&gt; 的左下角加上 &lt;span class=&#34;math inline&#34;&gt;\(\Delta\mathrm{val}_u\)&lt;/span&gt;，记录到矩阵 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 中。&lt;/li&gt;
&lt;li&gt;在修改之前，查询一个 &lt;span class=&#34;math inline&#34;&gt;\(F = \begin{bmatrix}f_{\operatorname{top}(u), 0}\\f_{\operatorname{top}(u), 1}\end{bmatrix}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;线段树上修改 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点的矩阵为 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，然后查询 &lt;span class=&#34;math inline&#34;&gt;\(F&amp;#39; = \begin{bmatrix}f_{\operatorname{top}(u), 0}\\f_{\operatorname{top}(u), 1}\end{bmatrix}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(u\leftarrow \mathrm{fa}(\mathrm{top}(u))\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(u = 0\)&lt;/span&gt;，结束流程&lt;/li&gt;
&lt;li&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的矩阵第一行减去 &lt;span class=&#34;math inline&#34;&gt;\(\max\{F\}\)&lt;/span&gt; 加上 &lt;span class=&#34;math inline&#34;&gt;\(\max\{F&amp;#39;\}\)&lt;/span&gt;，左下角减去 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{top}(u), 1}\)&lt;/span&gt; 加上 &lt;span class=&#34;math inline&#34;&gt;\(F&amp;#39;\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{top}(u), 1}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;回到第二步&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;具体实现&#34;&gt;具体实现&lt;/h3&gt;
&lt;p&gt;遇到的坑点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线段树的查询函数可能会遇到查询 &lt;span class=&#34;math inline&#34;&gt;\([0, 0]\)&lt;/span&gt; 的情况，故需要在线段树结构体中记录下一个节点对应的区间，避免死循环。&lt;/li&gt;
&lt;li&gt;单位矩阵的初始化不要弄错或者忘记。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码还是相当长的，内含注释。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意，这段代码里面使用了重载了 &lt;code&gt;operator()&lt;/code&gt; 运算符来访问矩阵内部元素的封装，请在自己编写时老老实实写宏定义或者不要偷懒。这种写法在不开 &lt;code&gt;-O2&lt;/code&gt; 的情况下常数极大。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;head[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i];&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;nxt[i],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i])&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, INF = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnte;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;&lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;()(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ele[a][b];}&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ret(i, j) = max(ret(i, j), m1(i, k) + m2(k, j));&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ID, g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, val[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa[maxn], dep[maxn], size[maxn], son[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f)&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fa[u] = f, size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dep[u] = dep[f] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == f) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (size[v] &amp;gt; size[son[u]]) son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;//正常的树剖dfs1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfnClock, dfn[maxn], nfd[maxn], top[maxn], end[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-75&#34;&gt;&lt;a href=&#34;#cb2-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; topf)&lt;/span&gt;
&lt;span id=&#34;cb2-76&#34;&gt;&lt;a href=&#34;#cb2-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-77&#34;&gt;&lt;a href=&#34;#cb2-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    top[u] = topf, dfn[u] = ++dfnClock, nfd[dfnClock] = u;&lt;span class=&#34;co&#34;&gt;//记录nfd是方便下面的线段树操作&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-78&#34;&gt;&lt;a href=&#34;#cb2-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!son[u])&lt;span class=&#34;co&#34;&gt;//叶子节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-79&#34;&gt;&lt;a href=&#34;#cb2-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-80&#34;&gt;&lt;a href=&#34;#cb2-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = val[u];&lt;span class=&#34;co&#34;&gt;//f值很容易得到&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-81&#34;&gt;&lt;a href=&#34;#cb2-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u] = ID;&lt;span class=&#34;co&#34;&gt;//g矩阵赋为单位矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-82&#34;&gt;&lt;a href=&#34;#cb2-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        end[u] = u;&lt;span class=&#34;co&#34;&gt;//记录链底部&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-83&#34;&gt;&lt;a href=&#34;#cb2-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-84&#34;&gt;&lt;a href=&#34;#cb2-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-85&#34;&gt;&lt;a href=&#34;#cb2-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = val[u], g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;span class=&#34;co&#34;&gt;//初始化g矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-86&#34;&gt;&lt;a href=&#34;#cb2-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(son[u], topf);&lt;/span&gt;
&lt;span id=&#34;cb2-87&#34;&gt;&lt;a href=&#34;#cb2-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    end[u] = end[son[u]];&lt;span class=&#34;co&#34;&gt;//更新链底&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-88&#34;&gt;&lt;a href=&#34;#cb2-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb2-89&#34;&gt;&lt;a href=&#34;#cb2-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-90&#34;&gt;&lt;a href=&#34;#cb2-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa[u] || v == son[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-91&#34;&gt;&lt;a href=&#34;#cb2-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(v, v);&lt;/span&gt;
&lt;span id=&#34;cb2-92&#34;&gt;&lt;a href=&#34;#cb2-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = g[u](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) += max(f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[v][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-93&#34;&gt;&lt;a href=&#34;#cb2-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) += f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-94&#34;&gt;&lt;a href=&#34;#cb2-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-95&#34;&gt;&lt;a href=&#34;#cb2-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = g[u](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) + max(f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[son[u]][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//利用g更新f，以计算父亲的g和f&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-96&#34;&gt;&lt;a href=&#34;#cb2-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = g[u](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) + f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-97&#34;&gt;&lt;a href=&#34;#cb2-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-98&#34;&gt;&lt;a href=&#34;#cb2-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-99&#34;&gt;&lt;a href=&#34;#cb2-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-100&#34;&gt;&lt;a href=&#34;#cb2-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb2-101&#34;&gt;&lt;a href=&#34;#cb2-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-102&#34;&gt;&lt;a href=&#34;#cb2-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r;&lt;span class=&#34;co&#34;&gt;//不记录l和r的话对于查询区间为[0,0] 的情况会死循环&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-103&#34;&gt;&lt;a href=&#34;#cb2-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; val;&lt;/span&gt;
&lt;span id=&#34;cb2-104&#34;&gt;&lt;a href=&#34;#cb2-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} tree[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-105&#34;&gt;&lt;a href=&#34;#cb2-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-106&#34;&gt;&lt;a href=&#34;#cb2-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-107&#34;&gt;&lt;a href=&#34;#cb2-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-108&#34;&gt;&lt;a href=&#34;#cb2-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-109&#34;&gt;&lt;a href=&#34;#cb2-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-110&#34;&gt;&lt;a href=&#34;#cb2-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb2-111&#34;&gt;&lt;a href=&#34;#cb2-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-112&#34;&gt;&lt;a href=&#34;#cb2-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].val = tree[L].val * tree[R].val;&lt;/span&gt;
&lt;span id=&#34;cb2-113&#34;&gt;&lt;a href=&#34;#cb2-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-114&#34;&gt;&lt;a href=&#34;#cb2-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-115&#34;&gt;&lt;a href=&#34;#cb2-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-116&#34;&gt;&lt;a href=&#34;#cb2-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb2-117&#34;&gt;&lt;a href=&#34;#cb2-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-118&#34;&gt;&lt;a href=&#34;#cb2-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].l = i, tree[k].r = j;&lt;/span&gt;
&lt;span id=&#34;cb2-119&#34;&gt;&lt;a href=&#34;#cb2-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb2-120&#34;&gt;&lt;a href=&#34;#cb2-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-121&#34;&gt;&lt;a href=&#34;#cb2-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[nfd[i]];&lt;span class=&#34;co&#34;&gt;//此处即为nfd的作用&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-122&#34;&gt;&lt;a href=&#34;#cb2-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-123&#34;&gt;&lt;a href=&#34;#cb2-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-124&#34;&gt;&lt;a href=&#34;#cb2-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb2-125&#34;&gt;&lt;a href=&#34;#cb2-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb2-126&#34;&gt;&lt;a href=&#34;#cb2-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb2-127&#34;&gt;&lt;a href=&#34;#cb2-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-128&#34;&gt;&lt;a href=&#34;#cb2-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-129&#34;&gt;&lt;a href=&#34;#cb2-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-130&#34;&gt;&lt;a href=&#34;#cb2-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;span class=&#34;co&#34;&gt;//查询操作，查询[x, y] 的矩阵连乘积&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-131&#34;&gt;&lt;a href=&#34;#cb2-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-132&#34;&gt;&lt;a href=&#34;#cb2-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb2-133&#34;&gt;&lt;a href=&#34;#cb2-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tree[k].val;&lt;/span&gt;
&lt;span id=&#34;cb2-134&#34;&gt;&lt;a href=&#34;#cb2-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ret = ID;&lt;/span&gt;
&lt;span id=&#34;cb2-135&#34;&gt;&lt;a href=&#34;#cb2-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = query(L, x, y);&lt;/span&gt;
&lt;span id=&#34;cb2-136&#34;&gt;&lt;a href=&#34;#cb2-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) ret = ret * query(R, x, y);&lt;span class=&#34;co&#34;&gt;//注意乘的先后&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-137&#34;&gt;&lt;a href=&#34;#cb2-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-138&#34;&gt;&lt;a href=&#34;#cb2-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-139&#34;&gt;&lt;a href=&#34;#cb2-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-140&#34;&gt;&lt;a href=&#34;#cb2-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;span class=&#34;co&#34;&gt;//把线段树 x 点上的值赋为 p 的矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-141&#34;&gt;&lt;a href=&#34;#cb2-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-142&#34;&gt;&lt;a href=&#34;#cb2-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb2-143&#34;&gt;&lt;a href=&#34;#cb2-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb2-144&#34;&gt;&lt;a href=&#34;#cb2-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-145&#34;&gt;&lt;a href=&#34;#cb2-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[p];&lt;/span&gt;
&lt;span id=&#34;cb2-146&#34;&gt;&lt;a href=&#34;#cb2-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-147&#34;&gt;&lt;a href=&#34;#cb2-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-148&#34;&gt;&lt;a href=&#34;#cb2-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(L, x, p);&lt;/span&gt;
&lt;span id=&#34;cb2-149&#34;&gt;&lt;a href=&#34;#cb2-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(R, x, p);&lt;/span&gt;
&lt;span id=&#34;cb2-150&#34;&gt;&lt;a href=&#34;#cb2-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb2-151&#34;&gt;&lt;a href=&#34;#cb2-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-152&#34;&gt;&lt;a href=&#34;#cb2-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-153&#34;&gt;&lt;a href=&#34;#cb2-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-154&#34;&gt;&lt;a href=&#34;#cb2-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;span class=&#34;co&#34;&gt;//查询 x 点的 dp 值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-155&#34;&gt;&lt;a href=&#34;#cb2-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-156&#34;&gt;&lt;a href=&#34;#cb2-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb2-157&#34;&gt;&lt;a href=&#34;#cb2-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tmp(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, tmp(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = val[end[x]];&lt;span class=&#34;co&#34;&gt;//最右边，初始化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-158&#34;&gt;&lt;a href=&#34;#cb2-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], dfn[end[x]]) * tmp;&lt;span class=&#34;co&#34;&gt;//连乘给上去&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-159&#34;&gt;&lt;a href=&#34;#cb2-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-160&#34;&gt;&lt;a href=&#34;#cb2-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-161&#34;&gt;&lt;a href=&#34;#cb2-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;span class=&#34;co&#34;&gt;//将 x 的点权修改为 y&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-162&#34;&gt;&lt;a href=&#34;#cb2-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-163&#34;&gt;&lt;a href=&#34;#cb2-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; F0, F1;&lt;/span&gt;
&lt;span id=&#34;cb2-164&#34;&gt;&lt;a href=&#34;#cb2-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[x](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) += y - val[x];&lt;/span&gt;
&lt;span id=&#34;cb2-165&#34;&gt;&lt;a href=&#34;#cb2-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    F0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb2-166&#34;&gt;&lt;a href=&#34;#cb2-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    val[x] = y;&lt;/span&gt;
&lt;span id=&#34;cb2-167&#34;&gt;&lt;a href=&#34;#cb2-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (x)&lt;/span&gt;
&lt;span id=&#34;cb2-168&#34;&gt;&lt;a href=&#34;#cb2-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-169&#34;&gt;&lt;a href=&#34;#cb2-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], x);&lt;span class=&#34;co&#34;&gt;//把线段树上修改了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-170&#34;&gt;&lt;a href=&#34;#cb2-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        F1 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb2-171&#34;&gt;&lt;a href=&#34;#cb2-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = fa[top[x]];&lt;/span&gt;
&lt;span id=&#34;cb2-172&#34;&gt;&lt;a href=&#34;#cb2-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[x](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = g[x](&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) += max(F1(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), F1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)) - max(F0(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), F0(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb2-173&#34;&gt;&lt;a href=&#34;#cb2-173&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[x](&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) += F1(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) - F0(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-174&#34;&gt;&lt;a href=&#34;#cb2-174&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        F0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb2-175&#34;&gt;&lt;a href=&#34;#cb2-175&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-176&#34;&gt;&lt;a href=&#34;#cb2-176&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-177&#34;&gt;&lt;a href=&#34;#cb2-177&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-178&#34;&gt;&lt;a href=&#34;#cb2-178&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-179&#34;&gt;&lt;a href=&#34;#cb2-179&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-180&#34;&gt;&lt;a href=&#34;#cb2-180&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-181&#34;&gt;&lt;a href=&#34;#cb2-181&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ID(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;span class=&#34;co&#34;&gt;//单位矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-182&#34;&gt;&lt;a href=&#34;#cb2-182&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb2-183&#34;&gt;&lt;a href=&#34;#cb2-183&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) val[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb2-184&#34;&gt;&lt;a href=&#34;#cb2-184&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-185&#34;&gt;&lt;a href=&#34;#cb2-185&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-186&#34;&gt;&lt;a href=&#34;#cb2-186&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = read(), v = read();&lt;/span&gt;
&lt;span id=&#34;cb2-187&#34;&gt;&lt;a href=&#34;#cb2-187&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v), add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb2-188&#34;&gt;&lt;a href=&#34;#cb2-188&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-189&#34;&gt;&lt;a href=&#34;#cb2-189&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-190&#34;&gt;&lt;a href=&#34;#cb2-190&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-191&#34;&gt;&lt;a href=&#34;#cb2-191&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-192&#34;&gt;&lt;a href=&#34;#cb2-192&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--)&lt;/span&gt;
&lt;span id=&#34;cb2-193&#34;&gt;&lt;a href=&#34;#cb2-193&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-194&#34;&gt;&lt;a href=&#34;#cb2-194&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb2-195&#34;&gt;&lt;a href=&#34;#cb2-195&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(x, y);&lt;/span&gt;
&lt;span id=&#34;cb2-196&#34;&gt;&lt;a href=&#34;#cb2-196&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ans = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-197&#34;&gt;&lt;a href=&#34;#cb2-197&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, max(ans(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), ans(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)));&lt;/span&gt;
&lt;span id=&#34;cb2-198&#34;&gt;&lt;a href=&#34;#cb2-198&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-199&#34;&gt;&lt;a href=&#34;#cb2-199&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-200&#34;&gt;&lt;a href=&#34;#cb2-200&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;序列上的动态-dp&#34;&gt;序列上的动态 dp&lt;/h2&gt;
&lt;h3 id=&#34;题意-1&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP1716&#34;&gt;SPOJ GSS3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个数，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次操作，&lt;span class=&#34;math inline&#34;&gt;\(n,m\le 50000\)&lt;/span&gt;。每次操作要么修改 &lt;span class=&#34;math inline&#34;&gt;\(A_x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，要么询问 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 的最大连续子段和。&lt;span class=&#34;math inline&#34;&gt;\(|A_i|\le 10000\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;其他的解法&#34;&gt;其他的解法&lt;/h3&gt;
&lt;p&gt;使用线段树来记录区间和，区间最大子段和，区间最大前/后缀和，然后直接做。&lt;/p&gt;
&lt;p&gt;其实这确实是一道线段树的好题，可以和 GSS1 一起食用。&lt;/p&gt;
&lt;p&gt;这里不考虑这些做法。&lt;/p&gt;
&lt;h3 id=&#34;从-dp-方程说起&#34;&gt;从 dp 方程说起&lt;/h3&gt;
&lt;p&gt;众所周知，我们可以这样定义 dp 的状态：设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾的最大子段和，&lt;span class=&#34;math inline&#34;&gt;\(g_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1,i]\)&lt;/span&gt; 的最大子段和，则方程易得： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_i = \max\{f_{i - 1} + a_i, a_i\}\\
g_i = \max\{f_i, g_{i - 1}\}
\end{cases}
\]&lt;/span&gt; 然后我们尝试构造一下矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}f_i\\g_i\end{bmatrix}\)&lt;/span&gt;，但是发现转移写不出来，故加一行：&lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}f_i\\g_i\\0\end{bmatrix}\)&lt;/span&gt;则转移就有了： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
a_i &amp;amp; -\infty &amp;amp; a_i\\
a_i &amp;amp; 0 &amp;amp; a_i\\
-\infty &amp;amp; -\infty &amp;amp; 0 &amp;amp;
\end{bmatrix}
\otimes
\begin{bmatrix}
f_{i - 1}\\
g_{i - 1}\\
0
\end{bmatrix}
=
\begin{bmatrix}
f_{i}\\
g_i\\
0
\end{bmatrix}
\]&lt;/span&gt; 这里的 &lt;span class=&#34;math inline&#34;&gt;\(\otimes\)&lt;/span&gt; 和上文是一样的，都表示 &lt;span class=&#34;math inline&#34;&gt;\(C_{i,j} = \max_{k = 1}^n\{A_{i, k} + B_{k, j}\}\)&lt;/span&gt;。具体的构造其实不难，自己手玩一下就可以构造出来。&lt;/p&gt;
&lt;p&gt;于是我们就用线段树来维护转移矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}a_i &amp;amp; -\infty &amp;amp; a_i\\a_i &amp;amp; 0 &amp;amp; a_i\\-\infty &amp;amp; -\infty &amp;amp; 0 &amp;amp;\end{bmatrix}\)&lt;/span&gt; 的连乘积（但是一定要注意是从右往左乘），每次修改操作就修改矩阵就可以了。查询操作就初始化一下 ，最右边的矩阵肯定是 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}a_l\\a_l\\0\end{bmatrix}\)&lt;/span&gt;，查询出 &lt;span class=&#34;math inline&#34;&gt;\([l + 1, r]\)&lt;/span&gt; 的连乘积再左乘给初始矩阵就得解了。&lt;/p&gt;
&lt;p&gt;单位矩阵易构造为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
0 &amp;amp; -\infty &amp;amp; -\infty\\
-\infty &amp;amp; 0 &amp;amp; -\infty\\
-\infty &amp;amp; -\infty &amp;amp; 0
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;注意，这段代码里面使用了重载了 &lt;code&gt;operator()&lt;/code&gt; 运算符来访问矩阵内部元素的封装，请在自己编写时老老实实写宏定义或者不要偷懒。这种写法在不开 &lt;code&gt;-O2&lt;/code&gt; 的情况下常数极大。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, INF = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix() {}&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;&lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;()(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ele[a][b];}&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ret(i, j) = max(ret(i, j), m1(i, k) + m2(k, j));&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r;&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; val;&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} tree[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; ID;&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].val = tree[R].val * tree[L].val;&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; makeMat(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = x;&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-71&#34;&gt;&lt;a href=&#34;#cb3-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].l = i, tree[k].r = j;&lt;/span&gt;
&lt;span id=&#34;cb3-72&#34;&gt;&lt;a href=&#34;#cb3-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb3-73&#34;&gt;&lt;a href=&#34;#cb3-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-74&#34;&gt;&lt;a href=&#34;#cb3-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = makeMat(a[i] = read());&lt;/span&gt;
&lt;span id=&#34;cb3-75&#34;&gt;&lt;a href=&#34;#cb3-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-76&#34;&gt;&lt;a href=&#34;#cb3-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-77&#34;&gt;&lt;a href=&#34;#cb3-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb3-78&#34;&gt;&lt;a href=&#34;#cb3-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb3-79&#34;&gt;&lt;a href=&#34;#cb3-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb3-80&#34;&gt;&lt;a href=&#34;#cb3-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-81&#34;&gt;&lt;a href=&#34;#cb3-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-82&#34;&gt;&lt;a href=&#34;#cb3-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-83&#34;&gt;&lt;a href=&#34;#cb3-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;
&lt;span id=&#34;cb3-84&#34;&gt;&lt;a href=&#34;#cb3-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-85&#34;&gt;&lt;a href=&#34;#cb3-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ID;&lt;/span&gt;
&lt;span id=&#34;cb3-86&#34;&gt;&lt;a href=&#34;#cb3-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb3-87&#34;&gt;&lt;a href=&#34;#cb3-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tree[k].val;&lt;/span&gt;
&lt;span id=&#34;cb3-88&#34;&gt;&lt;a href=&#34;#cb3-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&amp;gt; ret = ID;&lt;/span&gt;
&lt;span id=&#34;cb3-89&#34;&gt;&lt;a href=&#34;#cb3-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = query(L, x, y);&lt;/span&gt;
&lt;span id=&#34;cb3-90&#34;&gt;&lt;a href=&#34;#cb3-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) ret = query(R, x, y) * ret;&lt;/span&gt;
&lt;span id=&#34;cb3-91&#34;&gt;&lt;a href=&#34;#cb3-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-92&#34;&gt;&lt;a href=&#34;#cb3-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-93&#34;&gt;&lt;a href=&#34;#cb3-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-94&#34;&gt;&lt;a href=&#34;#cb3-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; z)&lt;/span&gt;
&lt;span id=&#34;cb3-95&#34;&gt;&lt;a href=&#34;#cb3-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-96&#34;&gt;&lt;a href=&#34;#cb3-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb3-97&#34;&gt;&lt;a href=&#34;#cb3-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb3-98&#34;&gt;&lt;a href=&#34;#cb3-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-99&#34;&gt;&lt;a href=&#34;#cb3-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = makeMat(a[i] = z);&lt;/span&gt;
&lt;span id=&#34;cb3-100&#34;&gt;&lt;a href=&#34;#cb3-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-101&#34;&gt;&lt;a href=&#34;#cb3-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-102&#34;&gt;&lt;a href=&#34;#cb3-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(L, x, z);&lt;/span&gt;
&lt;span id=&#34;cb3-103&#34;&gt;&lt;a href=&#34;#cb3-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(R, x, z);&lt;/span&gt;
&lt;span id=&#34;cb3-104&#34;&gt;&lt;a href=&#34;#cb3-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb3-105&#34;&gt;&lt;a href=&#34;#cb3-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-106&#34;&gt;&lt;a href=&#34;#cb3-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-107&#34;&gt;&lt;a href=&#34;#cb3-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-108&#34;&gt;&lt;a href=&#34;#cb3-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb3-109&#34;&gt;&lt;a href=&#34;#cb3-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-110&#34;&gt;&lt;a href=&#34;#cb3-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ID(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ID(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) = -INF;&lt;/span&gt;
&lt;span id=&#34;cb3-111&#34;&gt;&lt;a href=&#34;#cb3-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read();&lt;/span&gt;
&lt;span id=&#34;cb3-112&#34;&gt;&lt;a href=&#34;#cb3-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-113&#34;&gt;&lt;a href=&#34;#cb3-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q = read();&lt;/span&gt;
&lt;span id=&#34;cb3-114&#34;&gt;&lt;a href=&#34;#cb3-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--)&lt;/span&gt;
&lt;span id=&#34;cb3-115&#34;&gt;&lt;a href=&#34;#cb3-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-116&#34;&gt;&lt;a href=&#34;#cb3-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op = read(), x = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb3-117&#34;&gt;&lt;a href=&#34;#cb3-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!op) modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb3-118&#34;&gt;&lt;a href=&#34;#cb3-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-119&#34;&gt;&lt;a href=&#34;#cb3-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb3-120&#34;&gt;&lt;a href=&#34;#cb3-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-121&#34;&gt;&lt;a href=&#34;#cb3-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = a[x], ret(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-122&#34;&gt;&lt;a href=&#34;#cb3-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y) * ret;&lt;/span&gt;
&lt;span id=&#34;cb3-123&#34;&gt;&lt;a href=&#34;#cb3-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ret(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb3-124&#34;&gt;&lt;a href=&#34;#cb3-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-125&#34;&gt;&lt;a href=&#34;#cb3-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-126&#34;&gt;&lt;a href=&#34;#cb3-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-127&#34;&gt;&lt;a href=&#34;#cb3-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然也有另一种实现，就是只获取所有矩阵的连乘积，然后取 &lt;span class=&#34;math inline&#34;&gt;\((1, 2)\)&lt;/span&gt; 位置上的元素，不难发现 &lt;span class=&#34;math inline&#34;&gt;\((1, 2)\)&lt;/span&gt; 上的元素就是 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt;。实际上都可以 AC。&lt;/p&gt;
&lt;h2 id=&#34;noip2018-d2t3-保卫王国&#34;&gt;NOIP2018 D2T3 保卫王国&lt;/h2&gt;
&lt;h3 id=&#34;题意-2&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5024&#34;&gt;题面&lt;/a&gt;。给定一棵有点权的树，每次操作选定两个点强制选或不选，问这次操作下整棵树的最小点覆盖。&lt;/p&gt;
&lt;h3 id=&#34;动态-dp-的思路&#34;&gt;动态 DP 的思路&lt;/h3&gt;
&lt;p&gt;总点权 = 最大独立集 + 最小点覆盖。直接用求最大独立集的方法做就行了。&lt;/p&gt;
&lt;p&gt;强制选一个点即为这个点不能在最大独立集中出现，将点权设为 &lt;span class=&#34;math inline&#34;&gt;\(-\infty\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;强制不选某个点即为这个点必须在最大独立集中出现，将点权设为 &lt;span class=&#34;math inline&#34;&gt;\(+\infty\)&lt;/span&gt; 并让总点权也加上 &lt;span class=&#34;math inline&#34;&gt;\(+\infty\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;剩下的就是注意常数了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;head[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i];&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;nxt[i],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i])&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;fl&#34;&gt;1e15&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll max(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; row, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col&amp;gt;&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ele[row][col];&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix() {}&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p&amp;gt; Matrix&amp;lt;m, p&amp;gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(Matrix&amp;lt;m, n&amp;gt; m1, Matrix&amp;lt;n, p&amp;gt; m2)&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;m, p&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define RET &lt;/span&gt;ret.ele&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M1 &lt;/span&gt;m1.ele&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M2 &lt;/span&gt;m2.ele&lt;/span&gt;
&lt;span id=&#34;cb4-51&#34;&gt;&lt;a href=&#34;#cb4-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(ret.ele, &lt;span class=&#34;bn&#34;&gt;0xcf&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; ret.ele);&lt;/span&gt;
&lt;span id=&#34;cb4-52&#34;&gt;&lt;a href=&#34;#cb4-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-53&#34;&gt;&lt;a href=&#34;#cb4-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-54&#34;&gt;&lt;a href=&#34;#cb4-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-55&#34;&gt;&lt;a href=&#34;#cb4-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                RET[i][j] = max(RET[i][j], M1[i][k] + M2[k][j]);&lt;/span&gt;
&lt;span id=&#34;cb4-56&#34;&gt;&lt;a href=&#34;#cb4-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-57&#34;&gt;&lt;a href=&#34;#cb4-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef RET&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-58&#34;&gt;&lt;a href=&#34;#cb4-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-59&#34;&gt;&lt;a href=&#34;#cb4-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef m2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-60&#34;&gt;&lt;a href=&#34;#cb4-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-61&#34;&gt;&lt;a href=&#34;#cb4-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-62&#34;&gt;&lt;a href=&#34;#cb4-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ID, g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-63&#34;&gt;&lt;a href=&#34;#cb4-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-64&#34;&gt;&lt;a href=&#34;#cb4-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb4-65&#34;&gt;&lt;a href=&#34;#cb4-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll p[maxn], sump;&lt;/span&gt;
&lt;span id=&#34;cb4-66&#34;&gt;&lt;a href=&#34;#cb4-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-67&#34;&gt;&lt;a href=&#34;#cb4-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dep[maxn], fa[maxn], size[maxn], son[maxn]; &lt;/span&gt;
&lt;span id=&#34;cb4-68&#34;&gt;&lt;a href=&#34;#cb4-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-69&#34;&gt;&lt;a href=&#34;#cb4-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f)&lt;/span&gt;
&lt;span id=&#34;cb4-70&#34;&gt;&lt;a href=&#34;#cb4-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-71&#34;&gt;&lt;a href=&#34;#cb4-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dep[u] = dep[f] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fa[u] = f, size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-72&#34;&gt;&lt;a href=&#34;#cb4-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb4-73&#34;&gt;&lt;a href=&#34;#cb4-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-74&#34;&gt;&lt;a href=&#34;#cb4-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == f) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-75&#34;&gt;&lt;a href=&#34;#cb4-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-76&#34;&gt;&lt;a href=&#34;#cb4-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb4-77&#34;&gt;&lt;a href=&#34;#cb4-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (size[v] &amp;gt; size[son[u]]) son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb4-78&#34;&gt;&lt;a href=&#34;#cb4-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-79&#34;&gt;&lt;a href=&#34;#cb4-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-80&#34;&gt;&lt;a href=&#34;#cb4-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-81&#34;&gt;&lt;a href=&#34;#cb4-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-82&#34;&gt;&lt;a href=&#34;#cb4-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top[maxn], end[maxn], dfn[maxn], nfd[maxn], dfnClock;&lt;/span&gt;
&lt;span id=&#34;cb4-83&#34;&gt;&lt;a href=&#34;#cb4-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-84&#34;&gt;&lt;a href=&#34;#cb4-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-85&#34;&gt;&lt;a href=&#34;#cb4-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; topf)&lt;/span&gt;
&lt;span id=&#34;cb4-86&#34;&gt;&lt;a href=&#34;#cb4-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-87&#34;&gt;&lt;a href=&#34;#cb4-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    top[u] = topf, dfn[u] = ++dfnClock, nfd[dfnClock] = u;&lt;span class=&#34;co&#34;&gt;//记录nfd是方便下面的线段树操作&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-88&#34;&gt;&lt;a href=&#34;#cb4-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!son[u])&lt;span class=&#34;co&#34;&gt;//叶子节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-89&#34;&gt;&lt;a href=&#34;#cb4-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-90&#34;&gt;&lt;a href=&#34;#cb4-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = p[u];&lt;span class=&#34;co&#34;&gt;//f值很容易得到&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-91&#34;&gt;&lt;a href=&#34;#cb4-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[u] = ID;&lt;span class=&#34;co&#34;&gt;//g矩阵赋为单位矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-92&#34;&gt;&lt;a href=&#34;#cb4-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        end[u] = u;&lt;span class=&#34;co&#34;&gt;//记录链底部&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-93&#34;&gt;&lt;a href=&#34;#cb4-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-94&#34;&gt;&lt;a href=&#34;#cb4-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-95&#34;&gt;&lt;a href=&#34;#cb4-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define G &lt;/span&gt;g[u].ele&lt;/span&gt;
&lt;span id=&#34;cb4-96&#34;&gt;&lt;a href=&#34;#cb4-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = p[u], G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = -INF;&lt;span class=&#34;co&#34;&gt;//初始化g矩阵&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-97&#34;&gt;&lt;a href=&#34;#cb4-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(son[u], topf);&lt;/span&gt;
&lt;span id=&#34;cb4-98&#34;&gt;&lt;a href=&#34;#cb4-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    end[u] = end[son[u]];&lt;span class=&#34;co&#34;&gt;//更新链底&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-99&#34;&gt;&lt;a href=&#34;#cb4-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb4-100&#34;&gt;&lt;a href=&#34;#cb4-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-101&#34;&gt;&lt;a href=&#34;#cb4-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa[u] || v == son[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-102&#34;&gt;&lt;a href=&#34;#cb4-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(v, v);&lt;/span&gt;
&lt;span id=&#34;cb4-103&#34;&gt;&lt;a href=&#34;#cb4-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] += max(f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[v][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-104&#34;&gt;&lt;a href=&#34;#cb4-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] += f[v][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//更新g&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-105&#34;&gt;&lt;a href=&#34;#cb4-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-106&#34;&gt;&lt;a href=&#34;#cb4-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + max(f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], f[son[u]][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//利用g更新f，以计算父亲的g和f&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-107&#34;&gt;&lt;a href=&#34;#cb4-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + f[son[u]][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-108&#34;&gt;&lt;a href=&#34;#cb4-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-109&#34;&gt;&lt;a href=&#34;#cb4-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef G&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-110&#34;&gt;&lt;a href=&#34;#cb4-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-111&#34;&gt;&lt;a href=&#34;#cb4-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-112&#34;&gt;&lt;a href=&#34;#cb4-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb4-113&#34;&gt;&lt;a href=&#34;#cb4-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-114&#34;&gt;&lt;a href=&#34;#cb4-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r;&lt;/span&gt;
&lt;span id=&#34;cb4-115&#34;&gt;&lt;a href=&#34;#cb4-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; val;&lt;/span&gt;
&lt;span id=&#34;cb4-116&#34;&gt;&lt;a href=&#34;#cb4-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} tree[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-117&#34;&gt;&lt;a href=&#34;#cb4-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-118&#34;&gt;&lt;a href=&#34;#cb4-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-119&#34;&gt;&lt;a href=&#34;#cb4-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-120&#34;&gt;&lt;a href=&#34;#cb4-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-121&#34;&gt;&lt;a href=&#34;#cb4-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-122&#34;&gt;&lt;a href=&#34;#cb4-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb4-123&#34;&gt;&lt;a href=&#34;#cb4-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-124&#34;&gt;&lt;a href=&#34;#cb4-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].val = tree[L].val * tree[R].val;&lt;/span&gt;
&lt;span id=&#34;cb4-125&#34;&gt;&lt;a href=&#34;#cb4-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-126&#34;&gt;&lt;a href=&#34;#cb4-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-127&#34;&gt;&lt;a href=&#34;#cb4-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-128&#34;&gt;&lt;a href=&#34;#cb4-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb4-129&#34;&gt;&lt;a href=&#34;#cb4-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-130&#34;&gt;&lt;a href=&#34;#cb4-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tree[k].l = i, tree[k].r = j;&lt;/span&gt;
&lt;span id=&#34;cb4-131&#34;&gt;&lt;a href=&#34;#cb4-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb4-132&#34;&gt;&lt;a href=&#34;#cb4-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-133&#34;&gt;&lt;a href=&#34;#cb4-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[nfd[i]];&lt;/span&gt;
&lt;span id=&#34;cb4-134&#34;&gt;&lt;a href=&#34;#cb4-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-135&#34;&gt;&lt;a href=&#34;#cb4-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-136&#34;&gt;&lt;a href=&#34;#cb4-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb4-137&#34;&gt;&lt;a href=&#34;#cb4-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb4-138&#34;&gt;&lt;a href=&#34;#cb4-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb4-139&#34;&gt;&lt;a href=&#34;#cb4-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-140&#34;&gt;&lt;a href=&#34;#cb4-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-141&#34;&gt;&lt;a href=&#34;#cb4-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-142&#34;&gt;&lt;a href=&#34;#cb4-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt;
&lt;span id=&#34;cb4-143&#34;&gt;&lt;a href=&#34;#cb4-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-144&#34;&gt;&lt;a href=&#34;#cb4-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb4-145&#34;&gt;&lt;a href=&#34;#cb4-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tree[k].val;&lt;/span&gt;
&lt;span id=&#34;cb4-146&#34;&gt;&lt;a href=&#34;#cb4-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&amp;gt; ret = ID;&lt;/span&gt;
&lt;span id=&#34;cb4-147&#34;&gt;&lt;a href=&#34;#cb4-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) ret = query(L, x, y);&lt;/span&gt;
&lt;span id=&#34;cb4-148&#34;&gt;&lt;a href=&#34;#cb4-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) ret = ret * query(R, x, y);&lt;/span&gt;
&lt;span id=&#34;cb4-149&#34;&gt;&lt;a href=&#34;#cb4-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-150&#34;&gt;&lt;a href=&#34;#cb4-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-151&#34;&gt;&lt;a href=&#34;#cb4-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-152&#34;&gt;&lt;a href=&#34;#cb4-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb4-153&#34;&gt;&lt;a href=&#34;#cb4-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-154&#34;&gt;&lt;a href=&#34;#cb4-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = tree[k].l, j = tree[k].r;&lt;/span&gt;
&lt;span id=&#34;cb4-155&#34;&gt;&lt;a href=&#34;#cb4-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb4-156&#34;&gt;&lt;a href=&#34;#cb4-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-157&#34;&gt;&lt;a href=&#34;#cb4-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[k].val = g[p];&lt;/span&gt;
&lt;span id=&#34;cb4-158&#34;&gt;&lt;a href=&#34;#cb4-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-159&#34;&gt;&lt;a href=&#34;#cb4-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-160&#34;&gt;&lt;a href=&#34;#cb4-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(L, x, p);&lt;/span&gt;
&lt;span id=&#34;cb4-161&#34;&gt;&lt;a href=&#34;#cb4-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(R, x, p);&lt;/span&gt;
&lt;span id=&#34;cb4-162&#34;&gt;&lt;a href=&#34;#cb4-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(k);&lt;/span&gt;
&lt;span id=&#34;cb4-163&#34;&gt;&lt;a href=&#34;#cb4-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-164&#34;&gt;&lt;a href=&#34;#cb4-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-165&#34;&gt;&lt;a href=&#34;#cb4-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-166&#34;&gt;&lt;a href=&#34;#cb4-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb4-167&#34;&gt;&lt;a href=&#34;#cb4-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-168&#34;&gt;&lt;a href=&#34;#cb4-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-169&#34;&gt;&lt;a href=&#34;#cb4-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define RET &lt;/span&gt;ret.ele&lt;/span&gt;
&lt;span id=&#34;cb4-170&#34;&gt;&lt;a href=&#34;#cb4-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    RET[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, RET[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = p[end[x]];&lt;/span&gt;
&lt;span id=&#34;cb4-171&#34;&gt;&lt;a href=&#34;#cb4-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], dfn[end[x]]) * ret;&lt;/span&gt;
&lt;span id=&#34;cb4-172&#34;&gt;&lt;a href=&#34;#cb4-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef RET&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-173&#34;&gt;&lt;a href=&#34;#cb4-173&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-174&#34;&gt;&lt;a href=&#34;#cb4-174&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-175&#34;&gt;&lt;a href=&#34;#cb4-175&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, ll y)&lt;/span&gt;
&lt;span id=&#34;cb4-176&#34;&gt;&lt;a href=&#34;#cb4-176&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-177&#34;&gt;&lt;a href=&#34;#cb4-177&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; f0, f1;&lt;/span&gt;
&lt;span id=&#34;cb4-178&#34;&gt;&lt;a href=&#34;#cb4-178&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define G &lt;/span&gt;g[x].ele&lt;/span&gt;
&lt;span id=&#34;cb4-179&#34;&gt;&lt;a href=&#34;#cb4-179&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define F0 &lt;/span&gt;f0.ele&lt;/span&gt;
&lt;span id=&#34;cb4-180&#34;&gt;&lt;a href=&#34;#cb4-180&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define F1 &lt;/span&gt;f1.ele&lt;/span&gt;
&lt;span id=&#34;cb4-181&#34;&gt;&lt;a href=&#34;#cb4-181&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] += y - p[x];&lt;/span&gt;
&lt;span id=&#34;cb4-182&#34;&gt;&lt;a href=&#34;#cb4-182&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb4-183&#34;&gt;&lt;a href=&#34;#cb4-183&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[x] = y;&lt;/span&gt;
&lt;span id=&#34;cb4-184&#34;&gt;&lt;a href=&#34;#cb4-184&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (x)&lt;/span&gt;
&lt;span id=&#34;cb4-185&#34;&gt;&lt;a href=&#34;#cb4-185&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-186&#34;&gt;&lt;a href=&#34;#cb4-186&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, dfn[x], x);&lt;/span&gt;
&lt;span id=&#34;cb4-187&#34;&gt;&lt;a href=&#34;#cb4-187&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f1 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb4-188&#34;&gt;&lt;a href=&#34;#cb4-188&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = fa[top[x]];&lt;/span&gt;
&lt;span id=&#34;cb4-189&#34;&gt;&lt;a href=&#34;#cb4-189&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = G[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] += max(F1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], F1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) - max(F0[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], F0[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb4-190&#34;&gt;&lt;a href=&#34;#cb4-190&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] += F1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] - F0[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-191&#34;&gt;&lt;a href=&#34;#cb4-191&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f0 = query(top[x]);&lt;/span&gt;
&lt;span id=&#34;cb4-192&#34;&gt;&lt;a href=&#34;#cb4-192&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-193&#34;&gt;&lt;a href=&#34;#cb4-193&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-194&#34;&gt;&lt;a href=&#34;#cb4-194&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef G&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-195&#34;&gt;&lt;a href=&#34;#cb4-195&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef F0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-196&#34;&gt;&lt;a href=&#34;#cb4-196&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef F1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-197&#34;&gt;&lt;a href=&#34;#cb4-197&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-198&#34;&gt;&lt;a href=&#34;#cb4-198&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-199&#34;&gt;&lt;a href=&#34;#cb4-199&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb4-200&#34;&gt;&lt;a href=&#34;#cb4-200&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-201&#34;&gt;&lt;a href=&#34;#cb4-201&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ID.ele[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = ID.ele[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = -INF;&lt;/span&gt;
&lt;span id=&#34;cb4-202&#34;&gt;&lt;a href=&#34;#cb4-202&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read(), read();&lt;/span&gt;
&lt;span id=&#34;cb4-203&#34;&gt;&lt;a href=&#34;#cb4-203&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) p[i] = read(), sump += p[i];&lt;/span&gt;
&lt;span id=&#34;cb4-204&#34;&gt;&lt;a href=&#34;#cb4-204&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-205&#34;&gt;&lt;a href=&#34;#cb4-205&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-206&#34;&gt;&lt;a href=&#34;#cb4-206&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = read(), v = read();&lt;/span&gt;
&lt;span id=&#34;cb4-207&#34;&gt;&lt;a href=&#34;#cb4-207&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(u, v), add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb4-208&#34;&gt;&lt;a href=&#34;#cb4-208&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-209&#34;&gt;&lt;a href=&#34;#cb4-209&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-210&#34;&gt;&lt;a href=&#34;#cb4-210&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-211&#34;&gt;&lt;a href=&#34;#cb4-211&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-212&#34;&gt;&lt;a href=&#34;#cb4-212&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb4-213&#34;&gt;&lt;a href=&#34;#cb4-213&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-214&#34;&gt;&lt;a href=&#34;#cb4-214&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = read(), x = read(), b = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb4-215&#34;&gt;&lt;a href=&#34;#cb4-215&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x &amp;amp;&amp;amp; !y &amp;amp;&amp;amp; (fa[a] == b || fa[b] == a))&lt;/span&gt;
&lt;span id=&#34;cb4-216&#34;&gt;&lt;a href=&#34;#cb4-216&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-217&#34;&gt;&lt;a href=&#34;#cb4-217&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;-1&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-218&#34;&gt;&lt;a href=&#34;#cb4-218&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-219&#34;&gt;&lt;a href=&#34;#cb4-219&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-220&#34;&gt;&lt;a href=&#34;#cb4-220&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll a0 = p[a], b0 = p[b], tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-221&#34;&gt;&lt;a href=&#34;#cb4-221&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x) modify(a, INF), tmp += INF - a0; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(a, -INF);&lt;/span&gt;
&lt;span id=&#34;cb4-222&#34;&gt;&lt;a href=&#34;#cb4-222&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!y) modify(b, INF), tmp += INF - b0; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(b, -INF);&lt;/span&gt;
&lt;span id=&#34;cb4-223&#34;&gt;&lt;a href=&#34;#cb4-223&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Matrix&amp;lt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&amp;gt; ans = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-224&#34;&gt;&lt;a href=&#34;#cb4-224&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ANS &lt;/span&gt;ans.ele&lt;/span&gt;
&lt;span id=&#34;cb4-225&#34;&gt;&lt;a href=&#34;#cb4-225&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, sump - max(ANS[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], ANS[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) + tmp);&lt;/span&gt;
&lt;span id=&#34;cb4-226&#34;&gt;&lt;a href=&#34;#cb4-226&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(a, a0), modify(b, b0);&lt;/span&gt;
&lt;span id=&#34;cb4-227&#34;&gt;&lt;a href=&#34;#cb4-227&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef ANS&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-228&#34;&gt;&lt;a href=&#34;#cb4-228&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-229&#34;&gt;&lt;a href=&#34;#cb4-229&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-230&#34;&gt;&lt;a href=&#34;#cb4-230&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;其他做法&#34;&gt;其他做法&lt;/h3&gt;
&lt;p&gt;不会，先咕咕咕。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>BZOJ1009/洛谷P3193 [HNOI2008]GT考试</title>
        <link>https://oi.imyangty.com/sol-luogu-p3193/</link>
        <pubDate>Sat, 06 Mar 2021 21:59:58 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p3193/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg52.webp" alt="Featured image of post BZOJ1009/洛谷P3193 [HNOI2008]GT考试" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;求构造出长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的满足不出现 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的字符串的方案数。字符集为数字，&lt;span class=&#34;math inline&#34;&gt;\(A\le 20\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^9\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;考虑 dp。 定义状态 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 表示构造到第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，匹配到 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 位的方案数。不难发现答案即为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{j = 1}^{m - 1} f_{n, j}\)&lt;/span&gt;。我们可以列出如下的转移方程： &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j} = \sum_{0\le k\le 9 }f_{i - 1, p}\)&lt;/span&gt; 其中这个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 比较离谱，我们需要不断跳 fail 来找到这个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。 乍一看这个式子貌似不太好优化的样子，我们换一种思路：考虑 &lt;span class=&#34;math inline&#34;&gt;\([1, j - 1]\)&lt;/span&gt; 匹配之后怎么匹配到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;： &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j} = \sum_{k = 1}^{m - 1}f_{i - 1, k} \times g_{k, j}\)&lt;/span&gt; 这个式子的意思就是：假设前 &lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt; 位的后缀为 &lt;span class=&#34;math inline&#34;&gt;\(A_{1\cdots k}\)&lt;/span&gt;，考虑有多少种加数字的方法可以使匹配了的 &lt;span class=&#34;math inline&#34;&gt;\(A_{1\cdots k}\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(A_{1\cdots j}\)&lt;/span&gt;，方法数即为 &lt;span class=&#34;math inline&#34;&gt;\(g_{k,j}\)&lt;/span&gt;。注意到一定有 &lt;span class=&#34;math inline&#34;&gt;\(k &amp;gt; j\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(A_{1\cdots j}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(A_{1\cdots k} + n\)&lt;/span&gt; 的后缀，其中 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为加上的数。 那么这个 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 怎么求呢？我们可以在每一位 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 枚举添加的数 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，然后跳 fail 直到找到合法的位置 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，让 &lt;span class=&#34;math inline&#34;&gt;\(g_{i,p}\)&lt;/span&gt; 加一即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; ++i)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;; j &amp;lt;= &lt;span class=&#34;ch&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = i;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p &amp;amp;&amp;amp; s[p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] != j)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p = fail[p];&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == j) ++p;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++g.a[i][p];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来我们把所有的 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 看成一个列向量 &lt;span class=&#34;math inline&#34;&gt;\(F_i\)&lt;/span&gt;，我们只需要每次 &lt;span class=&#34;math inline&#34;&gt;\(F_{i} = F_{i - 1}\times G\)&lt;/span&gt; 就可以了。&lt;span class=&#34;math inline&#34;&gt;\(F_{0,0} = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxm = &lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, mod, fail[maxm];&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxm];&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; matrix&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxm][maxm];&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix()&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; a);&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(matrix &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; m; ++j)&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; m; ++k)&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    ret.a[i][j] = (ret.a[i][j] + &lt;span class=&#34;kw&#34;&gt;this&lt;/span&gt;-&amp;gt;a[i][k] * b.a[k][j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;matrix pow(matrix a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= m; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.a[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = ret * a;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a = a * a;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m, &amp;amp;mod);&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    matrix f, g;&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= m; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (j &amp;amp;&amp;amp; s[j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] != s[i])&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            j = fail[j];&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == s[i])&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++j;&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fail[i] = j;&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;; j &amp;lt;= &lt;span class=&#34;ch&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = i;&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p &amp;amp;&amp;amp; s[p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] != j)&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                p = fail[p];&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == j) ++p;&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++g.a[i][p];&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = f * (g = pow(g, n));&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        (ans += f.a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i]) %= mod;&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>解题报告 BZOJ2973 石子游戏</title>
        <link>https://oi.imyangty.com/sol-bzoj2973/</link>
        <pubDate>Wed, 13 Jan 2021 22:42:25 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-bzoj2973/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg48.webp" alt="Featured image of post 解题报告 BZOJ2973 石子游戏" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;石头游戏的规则是这样的。 石头游戏在一个n行m列的方格阵上进行。每个格子对应了一个编号在0~9之间的操作序列。 操作序列是一个长度不超过6且循环执行、每秒执行一个字符的字符串。它包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字 0 ~ 9：拿0 ~ 9个石头到该格子。&lt;/li&gt;
&lt;li&gt;NWSE：把这个格子内所有的石头推到相邻的格子。&lt;/li&gt;
&lt;li&gt;D：拿走这个格子的石头。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;石头游戏的问题是：当这个石头游戏进行了t秒之后，所有方格中最多的格子有多少个石头。 注意：所有格子的操作同时执行。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;考虑构造只有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 行 &lt;span class=&#34;math inline&#34;&gt;\(n\times m + 1\)&lt;/span&gt; 列的状态矩阵 &lt;span class=&#34;math inline&#34;&gt;\(F\)&lt;/span&gt;，然后给原方阵中 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 行 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 列的元素标号 &lt;span class=&#34;math inline&#34;&gt;\(f(i, j) = (i - 1)m + j\)&lt;/span&gt;。然后由于所有操作序列长度不超过 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;，所以最多 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}(1, 2, 3, 4, 5 ,6) = 60\)&lt;/span&gt; 次之后就会出现循环，所以考虑 &lt;span class=&#34;math inline&#34;&gt;\(t = 60q + r,r\in[0, 60)\)&lt;/span&gt;。然后构造 &lt;span class=&#34;math inline&#34;&gt;\(t\in[1, 60]\)&lt;/span&gt; 中每个时间的转移矩阵 &lt;span class=&#34;math inline&#34;&gt;\(A_k\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(A_0 = \prod A_k\)&lt;/span&gt;，则答案为 &lt;span class=&#34;math inline&#34;&gt;\(F_0 \times A_0^q +\times \prod_{k = 1}^rA_k\)&lt;/span&gt; 转移矩阵的构造想通了就很简单了： &lt;span class=&#34;math inline&#34;&gt;\(A_k\)&lt;/span&gt; 的左上角赋为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，如果操作为数字那就 &lt;span class=&#34;math inline&#34;&gt;\(A_k[0, f(i,j)] = opt, A_k[f(i,j),f(i,j)] = 1\)&lt;/span&gt;，如果是移动的话那就 &lt;span class=&#34;math inline&#34;&gt;\(A_k[f(i, j),f(i&amp;#39;,j&amp;#39;)] = 1\)&lt;/span&gt;。 但是要注意细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;矩阵初始化问题&lt;/li&gt;
&lt;li&gt;乘千万不要写成 &lt;span class=&#34;math inline&#34;&gt;\(A_0\times F\)&lt;/span&gt; 了，是错的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long long&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;&lt;span class=&#34;at&#34;&gt;register&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(R&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define dbg &lt;/span&gt;printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;debug&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; act[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;], org[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; actlen[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, acts, t;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[&lt;span class=&#34;dv&#34;&gt;81&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; num(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j)&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + j;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Matrix&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, c, a[&lt;span class=&#34;dv&#34;&gt;81&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;81&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _c)&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = _r, c = _c;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max_element()&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = -&lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r)&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, c)&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ret = max(ret, a[i][j]);&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix()&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memset(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; a);&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} ans, A[&lt;span class=&#34;dv&#34;&gt;61&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Matrix &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Matrix &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Matrix &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Matrix ret;&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.init(a.r, b.c);&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r = ret.r, c = ret.c, p = a.c;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r)&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, c)&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ret.a[i][j] += a.a[i][k] * b.a[k][j];&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m, &amp;amp;t, &amp;amp;acts);&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;org[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a[num(i, j)] = org[i][j] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, acts - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;act[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]), actlen[i] = strlen(&amp;amp;act[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]), act[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = act[i][actlen[i]];&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N = n * m;&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.init(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, N);&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;60&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        A[k].init(N, N);&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;60&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        A[k].a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; idx = k % actlen[a[num(i, j)]];&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; opt = act[a[num(i, j)]][idx];&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (isdigit(opt))&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    A[k].a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][num(i, j)] = opt - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, A[k].a[num(i, j)][num(i, j)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                {&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;ch&#34;&gt;&amp;#39;N&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        A[k].a[num(i, j)][num(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;ch&#34;&gt;&amp;#39;E&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= m)&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        A[k].a[num(i, j)][num(i, j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;ch&#34;&gt;&amp;#39;S&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= n)&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        A[k].a[num(i, j)][num(i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;ch&#34;&gt;&amp;#39;W&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        A[k].a[num(i, j)][num(i, j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = A[k];&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] * A[k];&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q = t / &lt;span class=&#34;dv&#34;&gt;60&lt;/span&gt;, r = t % &lt;span class=&#34;dv&#34;&gt;60&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; q; q &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (q &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans * A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] * A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r)&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = ans * A[i];&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans.max_element());&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        
    </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>LCT on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/LCT/</link>
        <description>Recent content in LCT on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Fri, 16 Apr 2021 19:57:23 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/LCT/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Link-Cut Tree 学习笔记</title>
        <link>https://oi.imyangty.com/note-lct/</link>
        <pubDate>Fri, 16 Apr 2021 19:57:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-lct/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg17.webp" alt="Featured image of post Link-Cut Tree 学习笔记" /&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;https://www.zybuluo.com/xzyxzy/note/1027479&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/candy99/p/6271344.html&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/flashhu/p/8324551.html&lt;/p&gt;
&lt;p&gt;https://oi-wiki.org/ds/lct/&lt;/p&gt;
&lt;p&gt;鸣谢以上博客的作者们。&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;Link/Cut Tree（简称 LCT），是一种可以解决动态树问题的数据结构。具体地，它可以维护一个动态的森林，实现如下操作（洛谷模板题）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;询问 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 上路径的异或和&lt;/li&gt;
&lt;li&gt;连接 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;删除边 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;更改 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的权值为 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学习 LCT 之前，首先需要对树链剖分有一定的认识，然后需要熟练掌握 Splay。因为 LCT 是一种十分精巧的数据结构，生来就是需要和 Splay 配合（如果使用别的平衡树时间复杂度会多一个 log，使用 Splay 的话均摊下来还是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的）。&lt;/p&gt;
&lt;h2 id=&#34;实链剖分&#34;&gt;实链剖分&lt;/h2&gt;
&lt;p&gt;上述操作如果没有连接和删除操作的话，就是一个裸的树剖题。我们回想一下树剖是怎么做的：把整棵树按照子树大小剖分成若干条链，并重新标号使得这些链上面的标号连续，然后使用数据结构（线段树等）在这些链上搞事情。&lt;/p&gt;
&lt;p&gt;至于现在的动态树问题，假设我们能把需要的路径抽出来，然后直接进行序列操作，岂不美哉。所以我们考虑&lt;strong&gt;动态地进行剖分&lt;/strong&gt;，即&lt;strong&gt;实链剖分&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个点有若干连向儿子的边，&lt;strong&gt;我们自己选择一条边进行剖分&lt;/strong&gt;（即自己选定“重儿子”），这条被选择的边就称为&lt;strong&gt;实边&lt;/strong&gt;，其他边称为&lt;strong&gt;虚边&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;实边连接的儿子称为&lt;strong&gt;实儿子&lt;/strong&gt;（类似于重链剖分中的重儿子）&lt;/li&gt;
&lt;li&gt;实边组合成的链称为&lt;strong&gt;实链&lt;/strong&gt;（类似于重链和长链）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择实链剖分的好处就是&lt;strong&gt;实和虚可以互相进行转化&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;虚者实之，实者虚之。——《东周列国志》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;针对这样灵活多变的实链，我们使用 &lt;strong&gt;Splay&lt;/strong&gt; 进行维护。&lt;/p&gt;
&lt;h2 id=&#34;主要性质&#34;&gt;主要性质&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;每一棵 Splay 维护的是一条实链&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每棵 Splay 中序遍历得到的点在原树中深度单调递增&lt;/strong&gt;（即对应这条实链从上往下走）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虚边由一棵 Splay 指向另外一棵 Splay&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的性质告诉我们，LCT 其实本质上是一个森林，我们可以把组成这个森林的树称为&lt;strong&gt;辅助树&lt;/strong&gt;，一定要搞清楚辅助树和原树的关系，否则极其容易想错问题。&lt;/p&gt;
&lt;p&gt;我们可以知道&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原树与辅助树中的节点一一对应&lt;/li&gt;
&lt;li&gt;若干棵 Splay 组成了一棵辅助树&lt;/li&gt;
&lt;li&gt;辅助树中的 Splay 不是互相独立的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常来说，一棵 Splay 的根的父亲节点应该为空，但是在 LCT 中一棵 Splay 的根的父亲节点指向原树中&lt;strong&gt;这棵 Splay 维护的实链的父亲节点&lt;/strong&gt;（即链顶的父节点），对应了原树中的一条&lt;strong&gt;虚边&lt;/strong&gt;。其具有&lt;strong&gt;认父不认子&lt;/strong&gt;的特点，即儿子存储了父亲，但是父亲不存储儿子。&lt;/p&gt;
&lt;p&gt;所以所有的操作都可以在辅助树上进行而不需要动原树。&lt;/p&gt;
&lt;p&gt;上面这样说可能有些抽象，我们看看图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/LCT1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上图是一棵剖好了的原树，虚线代表虚边，实线代表实边，可见图中有两条实链：&lt;span class=&#34;math inline&#34;&gt;\(\{1,2,4\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{5,6\}\)&lt;/span&gt;。现在我们按照这样子建出来的 LCT 应该是如下的样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/LCT2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;每个绿色圈内是一棵 Splay，每棵 Splay 内的红边对应了原图的实边。黑色的单向边对应了原图的虚边，在 Splay 中的体现就是 &lt;code&gt;fa[5] = 1&lt;/code&gt;，而 &lt;code&gt;ch[1][0]&lt;/code&gt; 和 &lt;code&gt;ch[1][1]&lt;/code&gt; 都不等于 &lt;code&gt;5&lt;/code&gt;，在 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 号点上也有体现：其左/右儿子都储存有值，但是 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 的父亲指向了 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。而且我们发现每棵 Splay 的中序遍历在原图中都是深度单调递增的。&lt;/p&gt;
&lt;p&gt;了解了上述性质之后，就可以开始学习如何写出一棵 LCT 了。&lt;/p&gt;
&lt;h2 id=&#34;代码基础定义&#34;&gt;代码基础定义&lt;/h2&gt;
&lt;p&gt;以下代码均以&lt;a href=&#34;https://www.luogu.com.cn/problem/P3690&#34;&gt;洛谷模板题&lt;/a&gt;（维护路径异或和）为例进行讲解。&lt;/p&gt;
&lt;h3 id=&#34;变量宏声明&#34;&gt;变量/宏声明&lt;/h3&gt;
&lt;p&gt;首先是 Splay 的结构体：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa, size, tag, val, res;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分别维护左/右儿子，父亲，子树大小，&lt;strong&gt;翻转标记&lt;/strong&gt;，节点的值，路径权值和。&lt;/p&gt;
&lt;p&gt;然后是一些宏定义：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来需要用到的函数如下：&lt;/p&gt;
&lt;h3 id=&#34;基础函数字面意思&#34;&gt;基础函数（字面意思）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;void pushUp(int u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void pushDown(int u)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不解释，分别是合并信息和懒标记下传。&lt;/p&gt;
&lt;h3 id=&#34;splay-的基础函数&#34;&gt;Splay 的基础函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;void rotate(int u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void splay(int u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int get(int u)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rotate()&lt;/code&gt; 和 &lt;code&gt;splay()&lt;/code&gt; 是&lt;strong&gt;经过魔改&lt;/strong&gt;了的版本，下面会进行说明。&lt;/p&gt;
&lt;h3 id=&#34;lct-的特有函数&#34;&gt;LCT 的特有函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int isRoot(int u)&lt;/code&gt; 判断 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 是否为根&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void pushAll(int u)&lt;/code&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 一直到根的路径上的点的标记全部下传&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void access(int u)&lt;/code&gt; 打通根到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的一条实链&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void makeRoot(int u)&lt;/code&gt; 将原树换根为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int findRoot(int u)&lt;/code&gt; 找到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 所在的树的根节点的编号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void link(int u, int v)&lt;/code&gt; 连边 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void cut(int u, int v)&lt;/code&gt; 删边 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void split(int u, int v)&lt;/code&gt; 提取出 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的路径以方便进行区间操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;函数讲解&#34;&gt;函数讲解&lt;/h2&gt;
&lt;p&gt;从简单的开始：&lt;/p&gt;
&lt;h3 id=&#34;pushup-和-pushdown-和-pushall&#34;&gt;&lt;code&gt;pushUp()&lt;/code&gt; 和 &lt;code&gt;pushDown()&lt;/code&gt; 和 &lt;code&gt;pushAll()&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushUp(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[ls(u)].size + t[rs(u)].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].res = t[ls(u)].res ^ t[rs(u)].res ^ t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushDown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].tag)&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ls(u)) t[ls(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(ls(u)), rs(ls(u)));&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (rs(u)) t[rs(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(rs(u)), rs(rs(u)));&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushAll(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(u)) pushAll(t[u].fa);&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushDown(u);&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时 &lt;code&gt;pushup()&lt;/code&gt; 维护异或和，&lt;code&gt;pushdown()&lt;/code&gt; 维护翻转标记。&lt;/p&gt;
&lt;h3 id=&#34;splay-和-rotate&#34;&gt;&lt;code&gt;splay()&lt;/code&gt; 和 &lt;code&gt;rotate()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;和普通 Splay 的有些不一样：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define get&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;==&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define isRoot&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ls(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushAll(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(u)) pushAll(t[u].fa);&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushDown(u);&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa, k1 = get(u), k2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa)) t[gfa].ch[k2] = u;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[k1] = t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa, t[fa].fa = u, t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(fa), pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushAll(u);&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa; fa = t[u].fa, !isRoot(u); rotate(u))&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa))&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rotate(get(fa) == get(u) ? fa : u);&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要注意的就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rotate&lt;/code&gt; 的时候一定要先判断 &lt;code&gt;fa&lt;/code&gt; 是不是根在进行下一步操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splay&lt;/code&gt; 只需要传入一个参数，因为不存在要把某个点旋转到另一个点下面这种操作了。而且进行之前要把其到根上的懒标记先全部下传。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;access&#34;&gt;&lt;code&gt;access()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这个操作的目的是打通从原树的树根到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点的一条实链，代码很短但是不太好理解：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; access(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; u; p = u, u = t[u].fa)&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(u), rs(u) = p, pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总的来说，操作分为下面几个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把当前的节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 旋转到当前 Splay 的根（&lt;code&gt;splay(u)&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的右儿子替换成之前的节点 &lt;code&gt;rs(u) = p&lt;/code&gt;（对应了”化实为虚“的过程）&lt;/li&gt;
&lt;li&gt;更新当前点的信息 &lt;code&gt;pushup(u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重复以上步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解释一下：我们要拉通这条实链的话，是自底而上逐步更新 Splay 来进行操作的。首先肯定是把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 旋转到 Splay 的根，然后注意到这个 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; （可能）有两个实儿子，以及一个父亲（一条虚边），现在我们既然要打通实链，那么肯定有虚实的转化，注意到&lt;strong&gt;认父不认子&lt;/strong&gt;的特点，我们可以直接把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的右儿子更新为之前更新过的点 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，然后 &lt;code&gt;pushup&lt;/code&gt;，再更新 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 更新为其父亲，继续进行操作。&lt;/p&gt;
&lt;h3 id=&#34;makeroot&#34;&gt;&lt;code&gt;makeRoot()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;makeRoot(int u)&lt;/code&gt; 是把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点设为该连通块的根节点。&lt;/p&gt;
&lt;p&gt;步骤&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;access(u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splay(u)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;反转整棵 Splay&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一步之后，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点会在当前连通块根节点所在 Splay 的最右下角（因为深度最大），第二步我们把它提到根节点之后就可以注意到其右儿子为空（仍是由于深度最大），第三步把 Splay 反转之后 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点变到了最左端，这样子整棵树的深度就完全倒过来了，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点变为了深度最浅的点。这样就达到了我们把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 变成根的目的。&lt;/p&gt;
&lt;p&gt;至于下面的这种实现，结合上面的代码可以发现 &lt;code&gt;access()&lt;/code&gt; 的返回值就是这棵 Splay 的根，所以我们直接对其进行操作即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; makeRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = access(u);&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(ls(u), rs(u));&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;finroot&#34;&gt;&lt;code&gt;finRoot()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;findRoot(int u)&lt;/code&gt; 是寻找 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点所在的连通块的根节点。可以判断两个点的连通性，&lt;code&gt;findRoot(x) == findRoot(y)&lt;/code&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 联通。具体来说，我们需要把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的实链打通，然后将其搞到 Splay 的根，再一路向左下不停走，就能找到我们可爱的根节点了。&lt;strong&gt;找到之后一定要 Splay 一下以保证复杂度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;走的时候一定要一路 &lt;code&gt;pushDown&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; findRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(u), splay(u);&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (ls(u)) pushDown(u), u = ls(u);&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;link&#34;&gt;&lt;code&gt;link()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;link(int u, int v)&lt;/code&gt; 的作用是连接一条边 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt;，当然前提是 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 不联通。&lt;/p&gt;
&lt;p&gt;首先需要让 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 成为该连通块的根并 Splay 到辅助树的根（不难发现其肯定没有向上的虚边），然后暴力把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的父亲设成 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 即可（连一条虚边）。&lt;/p&gt;
&lt;p&gt;至于判断，只需在 &lt;code&gt;makeRoot()&lt;/code&gt; 之后 &lt;code&gt;findRoot(v) == u&lt;/code&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; link(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) == u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = v;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;cut&#34;&gt;&lt;code&gt;cut()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cut(int u, int v)&lt;/code&gt; 的作用是切断原有的边 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt;。当然数据有可能不合法， 当数据不合法的时候我们就需要进行判断。&lt;/p&gt;
&lt;p&gt;如果数据保证合法，就先把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 设为连通块的根，然后 &lt;code&gt;access(v)&lt;/code&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 拉通一条实链，再 &lt;code&gt;splay(u)&lt;/code&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 拉到根处。不难发现如果 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 有连边而且&lt;strong&gt;相邻&lt;/strong&gt;的话 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 一定是 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的右儿子，所以双向断开 &lt;code&gt;t[v].fa = rs(u) = 0&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;但是如果数据不合法，我们就需要思考一下数据怎么样能合法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 在同一连通块内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;makeRoot(u)&lt;/code&gt; 之后，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的&lt;strong&gt;直接&lt;/strong&gt;父亲&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 没有左儿子（想一下为什么不可以）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; cut(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) != u || t[v].fa != u || ls(v)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[v].fa = rs(u) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 有左儿子，那么按照中序遍历的原则，&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的深度差就不是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;p&gt;最后更不更新信息都无所谓其实。但是既然右边的儿子都没了，还是上传一下标记比较好。&lt;/p&gt;
&lt;h3 id=&#34;split&#34;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;split(int u, int v)&lt;/code&gt; 可以把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的路径抽出来变成一条实链（即放进一棵 Splay 里面）方便我们进行处理。代码很简单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 成为根&lt;/li&gt;
&lt;li&gt;打通 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;（此时的根）到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的实链&lt;/li&gt;
&lt;li&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 变成 Splay 的树根方便进行处理&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(v);&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(v);&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;总的实现&#34;&gt;总的实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; swap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b, b = t;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa, size, tag, val, res;&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-37&#34;&gt;&lt;a href=&#34;#cb11-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushUp(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-38&#34;&gt;&lt;a href=&#34;#cb11-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-39&#34;&gt;&lt;a href=&#34;#cb11-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[ls(u)].size + t[rs(u)].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-40&#34;&gt;&lt;a href=&#34;#cb11-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].res = t[ls(u)].res ^ t[rs(u)].res ^ t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb11-41&#34;&gt;&lt;a href=&#34;#cb11-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-42&#34;&gt;&lt;a href=&#34;#cb11-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-43&#34;&gt;&lt;a href=&#34;#cb11-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-44&#34;&gt;&lt;a href=&#34;#cb11-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushDown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-45&#34;&gt;&lt;a href=&#34;#cb11-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-46&#34;&gt;&lt;a href=&#34;#cb11-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].tag)&lt;/span&gt;
&lt;span id=&#34;cb11-47&#34;&gt;&lt;a href=&#34;#cb11-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-48&#34;&gt;&lt;a href=&#34;#cb11-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ls(u)) t[ls(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(ls(u)), rs(ls(u)));&lt;/span&gt;
&lt;span id=&#34;cb11-49&#34;&gt;&lt;a href=&#34;#cb11-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (rs(u)) t[rs(u)].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, swap(ls(rs(u)), rs(rs(u)));&lt;/span&gt;
&lt;span id=&#34;cb11-50&#34;&gt;&lt;a href=&#34;#cb11-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-51&#34;&gt;&lt;a href=&#34;#cb11-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-52&#34;&gt;&lt;a href=&#34;#cb11-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-53&#34;&gt;&lt;a href=&#34;#cb11-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-54&#34;&gt;&lt;a href=&#34;#cb11-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-55&#34;&gt;&lt;a href=&#34;#cb11-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define get&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;==&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb11-56&#34;&gt;&lt;a href=&#34;#cb11-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define isRoot&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(ls(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;rs(t[u].fa)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;!=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;u)&lt;/span&gt;
&lt;span id=&#34;cb11-57&#34;&gt;&lt;a href=&#34;#cb11-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-58&#34;&gt;&lt;a href=&#34;#cb11-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushAll(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-59&#34;&gt;&lt;a href=&#34;#cb11-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-60&#34;&gt;&lt;a href=&#34;#cb11-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(u)) pushAll(t[u].fa);&lt;/span&gt;
&lt;span id=&#34;cb11-61&#34;&gt;&lt;a href=&#34;#cb11-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushDown(u);&lt;/span&gt;
&lt;span id=&#34;cb11-62&#34;&gt;&lt;a href=&#34;#cb11-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-63&#34;&gt;&lt;a href=&#34;#cb11-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-64&#34;&gt;&lt;a href=&#34;#cb11-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-65&#34;&gt;&lt;a href=&#34;#cb11-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-66&#34;&gt;&lt;a href=&#34;#cb11-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-67&#34;&gt;&lt;a href=&#34;#cb11-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa, k1 = get(u), k2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb11-68&#34;&gt;&lt;a href=&#34;#cb11-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa)) t[gfa].ch[k2] = u;&lt;/span&gt;
&lt;span id=&#34;cb11-69&#34;&gt;&lt;a href=&#34;#cb11-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[k1] = t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb11-70&#34;&gt;&lt;a href=&#34;#cb11-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa, t[fa].fa = u, t[u].ch[k1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb11-71&#34;&gt;&lt;a href=&#34;#cb11-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(fa), pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb11-72&#34;&gt;&lt;a href=&#34;#cb11-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-73&#34;&gt;&lt;a href=&#34;#cb11-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-74&#34;&gt;&lt;a href=&#34;#cb11-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-75&#34;&gt;&lt;a href=&#34;#cb11-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-76&#34;&gt;&lt;a href=&#34;#cb11-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-77&#34;&gt;&lt;a href=&#34;#cb11-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushAll(u);&lt;/span&gt;
&lt;span id=&#34;cb11-78&#34;&gt;&lt;a href=&#34;#cb11-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa; fa = t[u].fa, !isRoot(u); rotate(u))&lt;/span&gt;
&lt;span id=&#34;cb11-79&#34;&gt;&lt;a href=&#34;#cb11-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-80&#34;&gt;&lt;a href=&#34;#cb11-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isRoot(fa))&lt;/span&gt;
&lt;span id=&#34;cb11-81&#34;&gt;&lt;a href=&#34;#cb11-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rotate(get(fa) == get(u) ? fa : u);&lt;/span&gt;
&lt;span id=&#34;cb11-82&#34;&gt;&lt;a href=&#34;#cb11-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-83&#34;&gt;&lt;a href=&#34;#cb11-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-84&#34;&gt;&lt;a href=&#34;#cb11-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-85&#34;&gt;&lt;a href=&#34;#cb11-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-86&#34;&gt;&lt;a href=&#34;#cb11-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; access(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-87&#34;&gt;&lt;a href=&#34;#cb11-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-88&#34;&gt;&lt;a href=&#34;#cb11-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb11-89&#34;&gt;&lt;a href=&#34;#cb11-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; u; p = u, u = t[u].fa)&lt;/span&gt;
&lt;span id=&#34;cb11-90&#34;&gt;&lt;a href=&#34;#cb11-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(u), rs(u) = p, pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb11-91&#34;&gt;&lt;a href=&#34;#cb11-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p;&lt;/span&gt;
&lt;span id=&#34;cb11-92&#34;&gt;&lt;a href=&#34;#cb11-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-93&#34;&gt;&lt;a href=&#34;#cb11-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-94&#34;&gt;&lt;a href=&#34;#cb11-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; makeRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-95&#34;&gt;&lt;a href=&#34;#cb11-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-96&#34;&gt;&lt;a href=&#34;#cb11-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = access(u);&lt;/span&gt;
&lt;span id=&#34;cb11-97&#34;&gt;&lt;a href=&#34;#cb11-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(ls(u), rs(u));&lt;/span&gt;
&lt;span id=&#34;cb11-98&#34;&gt;&lt;a href=&#34;#cb11-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-99&#34;&gt;&lt;a href=&#34;#cb11-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-100&#34;&gt;&lt;a href=&#34;#cb11-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-101&#34;&gt;&lt;a href=&#34;#cb11-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-102&#34;&gt;&lt;a href=&#34;#cb11-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; findRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb11-103&#34;&gt;&lt;a href=&#34;#cb11-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-104&#34;&gt;&lt;a href=&#34;#cb11-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(u), splay(u);&lt;/span&gt;
&lt;span id=&#34;cb11-105&#34;&gt;&lt;a href=&#34;#cb11-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (ls(u)) pushDown(u), u = ls(u);&lt;/span&gt;
&lt;span id=&#34;cb11-106&#34;&gt;&lt;a href=&#34;#cb11-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb11-107&#34;&gt;&lt;a href=&#34;#cb11-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb11-108&#34;&gt;&lt;a href=&#34;#cb11-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-109&#34;&gt;&lt;a href=&#34;#cb11-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-110&#34;&gt;&lt;a href=&#34;#cb11-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; link(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb11-111&#34;&gt;&lt;a href=&#34;#cb11-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-112&#34;&gt;&lt;a href=&#34;#cb11-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb11-113&#34;&gt;&lt;a href=&#34;#cb11-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) == u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-114&#34;&gt;&lt;a href=&#34;#cb11-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u);&lt;/span&gt;
&lt;span id=&#34;cb11-115&#34;&gt;&lt;a href=&#34;#cb11-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = v;&lt;/span&gt;
&lt;span id=&#34;cb11-116&#34;&gt;&lt;a href=&#34;#cb11-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-117&#34;&gt;&lt;a href=&#34;#cb11-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-118&#34;&gt;&lt;a href=&#34;#cb11-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-119&#34;&gt;&lt;a href=&#34;#cb11-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; cut(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb11-120&#34;&gt;&lt;a href=&#34;#cb11-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-121&#34;&gt;&lt;a href=&#34;#cb11-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb11-122&#34;&gt;&lt;a href=&#34;#cb11-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (findRoot(v) != u || t[v].fa != u || ls(v)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-123&#34;&gt;&lt;a href=&#34;#cb11-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[v].fa = rs(u) = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-124&#34;&gt;&lt;a href=&#34;#cb11-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushUp(u);&lt;/span&gt;
&lt;span id=&#34;cb11-125&#34;&gt;&lt;a href=&#34;#cb11-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-126&#34;&gt;&lt;a href=&#34;#cb11-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-127&#34;&gt;&lt;a href=&#34;#cb11-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-128&#34;&gt;&lt;a href=&#34;#cb11-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v)&lt;/span&gt;
&lt;span id=&#34;cb11-129&#34;&gt;&lt;a href=&#34;#cb11-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-130&#34;&gt;&lt;a href=&#34;#cb11-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    makeRoot(u);&lt;/span&gt;
&lt;span id=&#34;cb11-131&#34;&gt;&lt;a href=&#34;#cb11-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    access(v);&lt;/span&gt;
&lt;span id=&#34;cb11-132&#34;&gt;&lt;a href=&#34;#cb11-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(v);&lt;/span&gt;
&lt;span id=&#34;cb11-133&#34;&gt;&lt;a href=&#34;#cb11-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-134&#34;&gt;&lt;a href=&#34;#cb11-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-135&#34;&gt;&lt;a href=&#34;#cb11-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-136&#34;&gt;&lt;a href=&#34;#cb11-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb11-137&#34;&gt;&lt;a href=&#34;#cb11-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-138&#34;&gt;&lt;a href=&#34;#cb11-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb11-139&#34;&gt;&lt;a href=&#34;#cb11-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb11-140&#34;&gt;&lt;a href=&#34;#cb11-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[i].val = read();&lt;/span&gt;
&lt;span id=&#34;cb11-141&#34;&gt;&lt;a href=&#34;#cb11-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--)&lt;/span&gt;
&lt;span id=&#34;cb11-142&#34;&gt;&lt;a href=&#34;#cb11-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-143&#34;&gt;&lt;a href=&#34;#cb11-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read(), y = read();&lt;/span&gt;
&lt;span id=&#34;cb11-144&#34;&gt;&lt;a href=&#34;#cb11-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-145&#34;&gt;&lt;a href=&#34;#cb11-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            split(x, y), printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t[y].res);&lt;/span&gt;
&lt;span id=&#34;cb11-146&#34;&gt;&lt;a href=&#34;#cb11-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-147&#34;&gt;&lt;a href=&#34;#cb11-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            link(x, y);&lt;/span&gt;
&lt;span id=&#34;cb11-148&#34;&gt;&lt;a href=&#34;#cb11-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-149&#34;&gt;&lt;a href=&#34;#cb11-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cut(x, y);&lt;/span&gt;
&lt;span id=&#34;cb11-150&#34;&gt;&lt;a href=&#34;#cb11-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (opt == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-151&#34;&gt;&lt;a href=&#34;#cb11-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            splay(x), t[x].val = y, pushUp(x);&lt;/span&gt;
&lt;span id=&#34;cb11-152&#34;&gt;&lt;a href=&#34;#cb11-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-153&#34;&gt;&lt;a href=&#34;#cb11-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-154&#34;&gt;&lt;a href=&#34;#cb11-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;p&gt;https://www.cnblogs.com/flashhu/p/9498517.html&lt;/p&gt;
&lt;p&gt;https://www.zybuluo.com/xzyxzy/note/1027479&lt;/p&gt;
&lt;p&gt;https://www.luogu.com.cn/blog/command-block/lct-xiao-ji&lt;/p&gt;
&lt;h3 id=&#34;维护&#34;&gt;维护&lt;/h3&gt;
</description>
        </item>
        
    </channel>
</rss>

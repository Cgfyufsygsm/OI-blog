<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>构造 on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/constructive/</link>
        <description>Recent content in 构造 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Wed, 17 Aug 2022 22:52:06 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/constructive/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>AtCoder 比赛日记</title>
        <link>https://oi.imyangty.com/summary-atcoder/</link>
        <pubDate>Fri, 23 Apr 2021 12:38:59 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-atcoder/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg70.webp" alt="Featured image of post AtCoder 比赛日记" /&gt;&lt;h2 id=&#34;abc&#34;&gt;ABC&lt;/h2&gt;
&lt;h3 id=&#34;补题表&#34;&gt;补题表&lt;/h3&gt;
&lt;p&gt;近期目标：ABC 稳定 30min 过 4 题，争取赛时过 G，尽量补全套 ABC。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Round&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;Rank&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;Perf&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;Sol&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;th&gt;G&lt;/th&gt;
&lt;th&gt;H&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC202&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc202/standings?watching=YangTY&#34;&gt;1095&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1437&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC207&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc207/standings?watching=YangTY&#34;&gt;956&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1484&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC210&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc210/standings?watching=YangTY&#34;&gt;485&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1823&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC212&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc212/standings?watching=YangTY&#34;&gt;856&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1536&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC213&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc213/standings?watching=YangTY&#34;&gt;1031&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1485&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC214&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc214/standings?watching=YangTY&#34;&gt;742&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1647&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC217&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc217/standings?watching=Cgfyufsygsm&#34;&gt;1320&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1383&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC219&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc219/standings?watching=YangTY&#34;&gt;1153&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1375&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC222&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc222/standings?watching=YangTY&#34;&gt;425&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1880&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC223&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc223/standings?watching=Cgfyufsygsm&#34;&gt;1573&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1074&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC224&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc224/standings?watching=YangTY&#34;&gt;426&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1828&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC231&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc231/standings?watching=Cgfyufsygsm&#34;&gt;571&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1665&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC232&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc232/standings?watching=YangTY&#34;&gt;762&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1518&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC233&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc233/standings?watching=YangTY&#34;&gt;659&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1660&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC234&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc234/standings?watching=YangTY&#34;&gt;1553&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1224&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC235&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc235/standings?watching=YangTY&#34;&gt;913&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1525&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC237&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc237/standings?watching=YangTY&#34;&gt;534&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1790&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC244&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc244/standings?watching=YangTY&#34;&gt;333&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1788&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ABC246&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc246/standings?watching=YangTY&#34;&gt;703&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1656&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;5&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ABC247&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc247/standings?watching=YangTY&#34;&gt;640&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1703&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;6&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;一些新见到的-trick&#34;&gt;一些新见到的 trick&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ABC212E：补集思想优化 dp。&lt;/li&gt;
&lt;li&gt;ABC212H：FWT 的线性性。&lt;/li&gt;
&lt;li&gt;ABC219E：网格很小所以直接将护城河的状态和格子双射。&lt;/li&gt;
&lt;li&gt;ABC231G：期望线性性推大式子。&lt;/li&gt;
&lt;li&gt;ABC232G：对于模 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 类问题建环。&lt;/li&gt;
&lt;li&gt;ABC233Ex：曼哈顿转切比雪夫然后主席树二维数点。&lt;/li&gt;
&lt;li&gt;ABC235G：逆向考虑问题→二项式反演→&lt;strong&gt;棋盘路径计数的递推&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;ABC237E：点高度直接满足势能性质→直接 Dijkstra。&lt;/li&gt;
&lt;li&gt;ABC237Ex：串的包含关系转为偏序关系👉求最大反链。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;abc212&#34;&gt;ABC212&lt;/h3&gt;
&lt;p&gt;A + B + C + D + E。A - D 略。&lt;/p&gt;
&lt;h4 id=&#34;abc212e---safety-journey&#34;&gt;ABC212E - Safety Journey&lt;/h4&gt;
&lt;p&gt;补集思想优化 DP ： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \sum_{j&amp;#39;\text{ is connected with j}}f_{i - 1, j&amp;#39;}
\]&lt;/span&gt; 可以转化为 &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \sum_{j&amp;#39; = 1}^n f_{i - 1, j&amp;#39;} - \sum_{j&amp;#39;\text{ isn&amp;#39;t connected with j}}f_{i - 1, j&amp;#39;}
\]&lt;/span&gt; 没连边的数量是总共 &lt;span class=&#34;math inline&#34;&gt;\(O(m)\)&lt;/span&gt; 的，总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O((n + m)k)\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;abc212f---greedy-takahashi&#34;&gt;ABC212F - Greedy Takahashi&lt;/h4&gt;
&lt;p&gt;建模成森林然后直接树上倍增求解。码力要求较高。&lt;/p&gt;
&lt;h4 id=&#34;abc212g---power-pair&#34;&gt;ABC212G - Power Pair&lt;/h4&gt;
&lt;p&gt;给定质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，问数对 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 的个数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\le x, y\le p - 1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\exists n, x^n\equiv y\pmod p\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le p\le 10^{12}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;回顾原根的概念。&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的原根当且仅当最小的使得 &lt;span class=&#34;math inline&#34;&gt;\(r^e\equiv 1\pmod p\)&lt;/span&gt; 的正整数为 &lt;span class=&#34;math inline&#34;&gt;\(e = p - 1\)&lt;/span&gt;。本题需要用到的性质：&lt;span class=&#34;math inline&#34;&gt;\(r^i\bmod p, i\in[0, p - 1]\)&lt;/span&gt; 的值两两不同，且对于一个质数，一定有原根存在。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(x\equiv r^a\pmod p\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\equiv r^b\pmod p\)&lt;/span&gt;，不难发现 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 总能有一个 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 与之对应。于是就有 &lt;span class=&#34;math inline&#34;&gt;\(an\equiv b\pmod{p - 1}\)&lt;/span&gt;。现在就是需要找满足上式的 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 的数量。&lt;/p&gt;
&lt;p&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，则上式有解的条件是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1)\mid b\)&lt;/span&gt;（裴蜀定理）。那对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 就可以写成： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{a = 1}^{p - 1}\frac{p - 1}{\gcd(a, p - 1)}
\]&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(O(p)\)&lt;/span&gt; 是过不去的，要考虑优化。优化它的方法明显是寻找 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1)\)&lt;/span&gt; 相同的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的个数。根据 &lt;span class=&#34;math inline&#34;&gt;\(p - 1\)&lt;/span&gt; 的因数个数 为 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p)\)&lt;/span&gt; 的，故这些 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 也只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p)\)&lt;/span&gt; 个。我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1) = g\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{g\mid p - 1}\frac{p - 1}{g}\times\phi\left(\frac{p - 1}{g}\right)
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\phi(n)\)&lt;/span&gt; 可以暴力计算。&lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p\log p)\)&lt;/span&gt;，因为 $$ 的上界很松，轻松通过。&lt;/p&gt;
&lt;h4 id=&#34;abc212h---nim-counting&#34;&gt;ABC212H - Nim Counting&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((A_1, \cdots, A_k)\)&lt;/span&gt;。可以如下安排石子：每堆石子数量必须是 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 之一，且石子堆数量小等于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。问安排石子使得先手 Nim 必胜的方案数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k, A_i\le 2^{17}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 两两不同。&lt;/p&gt;
&lt;p&gt;不难发现问题转化为求 &lt;span class=&#34;math inline&#34;&gt;\(\bigoplus_{i = 1}^m B_i\not=0\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt; 的方案数，其中 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为石子个数。&lt;/p&gt;
&lt;p&gt;先考虑固定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。则构造序列 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(C_i = [\exist j, A_j = i]\)&lt;/span&gt;，定义卷积 &lt;span class=&#34;math inline&#34;&gt;\(*\)&lt;/span&gt; 为异或卷积，则 &lt;span class=&#34;math inline&#34;&gt;\(C * C * \cdots * C\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;）的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 项系数即为异或和为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的方案数。这个过程是可以 FWT 做的，具体地，给 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{FWT}(C)_i\)&lt;/span&gt; 的每一项做一下快速幂再 IFWT 回去，把除了第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 项之外的求个和，就得到了石子堆数为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的答案。&lt;/p&gt;
&lt;p&gt;然后，不固定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 怎么做呢？因为 FWT 是线性变换，而我们需要求的是 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{IFWT}(\operatorname{FWT}(C)_i + \operatorname{FWT}(C)_i^2 + \operatorname{FWT}(C)_i^3 + \cdots \operatorname{FWT}(C)_i^n)\)&lt;/span&gt;，所以定义 &lt;span class=&#34;math inline&#34;&gt;\(C&amp;#39;_i = \operatorname{FWT}(C)_i\)&lt;/span&gt;，然后求出 &lt;span class=&#34;math inline&#34;&gt;\(D_i = C_i&amp;#39; + C_i&amp;#39;^2 + \cdots + C_i&amp;#39;^n\)&lt;/span&gt; 再求 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{IFWT}(D)\)&lt;/span&gt; 把除了第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 项外的系数累加即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint calc(modint x, modint n) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x * (qPow(x, n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * qPow(x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) read(tmp), maxa = tmp &amp;gt; maxa ? tmp : maxa, f[tmp] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ++maxa;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; lim &amp;lt;= maxa; lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    XOR(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = calc(f[i], n);&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    XOR(f, lim, inv2);&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans += f[i];&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;abc213&#34;&gt;ABC213&lt;/h3&gt;
&lt;p&gt;A + B + C + D + F&lt;/p&gt;
&lt;h4 id=&#34;abc213e---stronger-takahashi&#34;&gt;ABC213E - Stronger Takahashi&lt;/h4&gt;
&lt;p&gt;0-1 bfs，因为边权只为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc213f---common-prefixes&#34;&gt;ABC213F - Common Prefixes&lt;/h4&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{LCP}(S_i, S_j)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 开头子串和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 开头子串的最长公共前缀。对每个 &lt;span class=&#34;math inline&#34;&gt;\(k\in[1, n]\)&lt;/span&gt; 求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\operatorname{LCP}(S_k, S_i)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;SA 板子。&lt;/p&gt;
&lt;h4 id=&#34;abc213g---connectivity-2&#34;&gt;ABC213G - Connectivity 2&lt;/h4&gt;
&lt;p&gt;对于每个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 联通的子图个数。&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 17\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 很小。&lt;/p&gt;
&lt;p&gt;状压 dp。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(g(S)\)&lt;/span&gt; 表示点集 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中有连边的数量。这可以 &lt;span class=&#34;math inline&#34;&gt;\(O(2^nm)\)&lt;/span&gt; 的时间内完成。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f(S)\)&lt;/span&gt; 为保证 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 内点联通的连边方案数，则我们可以考虑容斥，随便选一个点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，然后考虑这个点所在的连通分量 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(T\subset S\)&lt;/span&gt;。则有如下转移 &lt;span class=&#34;math display&#34;&gt;\[
f(S) = g(S) - \sum_{x\in T, T\subset S} f(T)
\]&lt;/span&gt; 然后对于答案，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 号点的答案即为： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{1\in S, k\in S} f(S)
\]&lt;/span&gt; 这题就做完了。&lt;/p&gt;
&lt;h4 id=&#34;abc213h---stroll&#34;&gt;ABC213H - Stroll&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 对点 &lt;span class=&#34;math inline&#34;&gt;\((a_i, b_i)\)&lt;/span&gt; 间有连边，长度为 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的有 &lt;span class=&#34;math inline&#34;&gt;\(p_{i, d}\)&lt;/span&gt; 条。问从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 点出发，在 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 点结束的长度为 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的路径方案数。&lt;/p&gt;
&lt;p&gt;先把最朴素的 DP 方程写出来：设 &lt;span class=&#34;math inline&#34;&gt;\(f_{u, s}\)&lt;/span&gt; 为结束点为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，长度为 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 的路径条数。&lt;/p&gt;
&lt;p&gt;则最朴素的方程：对于每条边进行转移 &lt;span class=&#34;math display&#34;&gt;\[
f_{u_i, s} := f_{u_i, s} + \sum_{t = 0}^sf_{v_i, t}p_{i, t}
\]&lt;/span&gt; 写成生成函数的形式就是 &lt;span class=&#34;math display&#34;&gt;\[
F_{u_i}(x) := F_{u_i}(x) + F_{v_i}(x)P_i(x)
\]&lt;/span&gt; 这个东西看似可以 NTT 优化，但是你会发现存在反复横跳的情况。所以直接去做肯定是不行的。&lt;/p&gt;
&lt;p&gt;考虑在长度的维度分治。考虑当前分治区间为 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，然后首先处理一下 &lt;span class=&#34;math inline&#34;&gt;\([l, mid]\)&lt;/span&gt; 内部，把这些算完，然后处理 &lt;span class=&#34;math inline&#34;&gt;\([l, mid]\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\([mid + 1, r]\)&lt;/span&gt; 的贡献。即 &lt;span class=&#34;math display&#34;&gt;\[
f_{u_i, s} := f_{u_i, s} + \sum_{t = l}^{mid}f_{v_i, t}p_{i, s - t}\quad s\in[mid + 1, r]
\]&lt;/span&gt; 类似分治 NTT 处理即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;], p[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;], t1, t2;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, T, u[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;], v[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(Poly &amp;amp;f, Poly &amp;amp;g, Poly &amp;amp;ret, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t1 = {f.begin() + l, f.begin() + mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t2 = {g.begin() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, g.begin() + r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t1 = t1 * t2;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r) ret[i] = (ret[i] + t1[i - l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(l, mid);&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        solve(f[u[i]], p[i], f[v[i]], l, r);&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        solve(f[v[i]], p[i], f[u[i]], l, r);&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r);&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m), read(T);&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lim = T + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(u[i]), read(v[i]);&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        p[i].resize(T + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, T) read(p[i][j]);&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) f[i].resize(T + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, T);&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][T]);&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;abc217&#34;&gt;ABC217&lt;/h3&gt;
&lt;p&gt;A + B + C + D + E&lt;/p&gt;
&lt;h4 id=&#34;abc217f---make-pair&#34;&gt;ABC217F - Make Pair&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 个学生，其中只有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 对关系好。每次选择相邻两个关系好的进行配对并从序列中删除，问把所有学生配对的方案。&lt;/p&gt;
&lt;p&gt;一眼就是区间 dp。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{l, r}\)&lt;/span&gt; 为将 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 里面的人配对的方案数。&lt;/p&gt;
&lt;p&gt;然后至于转移，考虑 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 与谁配对，设其为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。则首先， &lt;span class=&#34;math inline&#34;&gt;\([l, x]\)&lt;/span&gt; 的长度一定是偶数，并且 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的关系好。然后我们需要的就是 &lt;span class=&#34;math inline&#34;&gt;\(f_{l + 1, x - 1}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_{x + 1, r}\)&lt;/span&gt;。注意到移除 &lt;span class=&#34;math inline&#34;&gt;\([l + 1, x - 1]\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\([x + 1, r]\)&lt;/span&gt; 是两个独立的过程，并且 &lt;span class=&#34;math inline&#34;&gt;\([l + 1, x - 1]\)&lt;/span&gt; 必须在配对 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 之前完成。&lt;/p&gt;
&lt;p&gt;现在的问题就是，合并 &lt;span class=&#34;math inline&#34;&gt;\([l, x]\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\([x + 1, r]\)&lt;/span&gt; 是两个独立的过程，所以考虑一共进行了 &lt;span class=&#34;math inline&#34;&gt;\((r - l + 1) / 2\)&lt;/span&gt; 次合并，而我们需要确定有哪几次是 &lt;span class=&#34;math inline&#34;&gt;\([x + 1, r]\)&lt;/span&gt; 里面的在做，不难发现就是 &lt;span class=&#34;math display&#34;&gt;\[
\binom{(r - l + 1) / 2}{(r - x) / 2}
\]&lt;/span&gt; 转移的时候乘上这个系数即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc217/submissions/25628059&#34;&gt;代码&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc217g---groups&#34;&gt;ABC217G - Groups&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个数，要求划分成 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个非空组，若 &lt;span class=&#34;math inline&#34;&gt;\(i\equiv j\pmod m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 不能在一组。对于 &lt;span class=&#34;math inline&#34;&gt;\(k = 1,\cdots, n\)&lt;/span&gt; 输出方案数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 的结果。&lt;/p&gt;
&lt;p&gt;原来的组是非空且无标号的，方案数设为 &lt;span class=&#34;math inline&#34;&gt;\(f(k)\)&lt;/span&gt;，先考虑可以为空并且有标号的情况，设为 &lt;span class=&#34;math inline&#34;&gt;\(g(k)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的余数为 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 的数字构成的集合，则对于每个 &lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt;，我们都要将其划分在 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个不同的组里面去，每个组里面最多 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个数。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(P(n, m) = \displaystyle\frac{n!}{(n - m)!}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 选 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的排列数： &lt;span class=&#34;math display&#34;&gt;\[
g(k) = \prod_{i = 0}^{m - 1 }P(k, |S_i|)
\]&lt;/span&gt; 这是不要求放满的。而如果知道恰好放满的，除以 &lt;span class=&#34;math inline&#34;&gt;\(k!\)&lt;/span&gt; 就是不带标号的了。&lt;/p&gt;
&lt;p&gt;恰好放满可以用容斥。去掉的是 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{p = 0}^{k - 1}\binom kpf(p)p!
\]&lt;/span&gt; 即为有序非空组数不到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的，所以 &lt;span class=&#34;math display&#34;&gt;\[
f(k) = \frac{\prod_{i = 0}^{m - 1}P(k, |S_i|) - \sum_{p = 0}^{k - 1}\binom k p f(p)p!}{k!}
\]&lt;/span&gt; 递推可做，前面那一段可以快速预处理然后用快速幂 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 来算。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc217/submissions/25641347/&#34;&gt;代码&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;abc219&#34;&gt;ABC219&lt;/h3&gt;
&lt;p&gt;状态差。A + B + C + D。&lt;/p&gt;
&lt;h4 id=&#34;abc219e---moat&#34;&gt;ABC219E - Moat&lt;/h4&gt;
&lt;p&gt;一个 &lt;span class=&#34;math inline&#34;&gt;\(4\times 4\)&lt;/span&gt; 的网格，要求在网格边上修一个护城河，使得护城河是一个合法多边形并且包含了所有的村庄。&lt;/p&gt;
&lt;p&gt;比较神奇的思路，鉴于网格只有 &lt;span class=&#34;math inline&#34;&gt;\(16\)&lt;/span&gt; 个，而且一个护城河必定和一种状态（一个格子有没有被包含）一一对应，所以可以直接枚举这 &lt;span class=&#34;math inline&#34;&gt;\(O(2^{16})\)&lt;/span&gt; 个状态然后判断网格是否合法。&lt;/p&gt;
&lt;p&gt;判断网格是否合法这个，首先需要判断每个村庄是不是被包含，其次需要避免中间被挖空的情况，然后要避免 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的格子被割裂开的情况，综上即整张图（把边界外的考虑进去）只能有两个连通块，dfs 染色即可。&lt;/p&gt;
&lt;h3 id=&#34;abc222&#34;&gt;ABC222&lt;/h3&gt;
&lt;p&gt;A + B + C + D + G，rk 425。&lt;/p&gt;
&lt;h4 id=&#34;abc222e---red-and-blue-tree&#34;&gt;ABC222E - Red and Blue Tree&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 条树上路径，每次会覆盖若干边。&lt;/p&gt;
&lt;p&gt;如果我设第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 条边的被覆盖次数为 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 的话，那么我们每次都会给途径的 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 增加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;要求覆盖完之后访问红边的次数-访问蓝边的次数=&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，问染色方案数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 很小，所以可以暴力给边染色。&lt;/p&gt;
&lt;p&gt;染完之后不难发现 &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 是确定的。所以直接背包一下就可以了。&lt;/p&gt;
&lt;h4 id=&#34;abc222f---expensive-expense&#34;&gt;ABC222F - Expensive Expense&lt;/h4&gt;
&lt;p&gt;树，定义 &lt;span class=&#34;math inline&#34;&gt;\(E_{i, j}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 路径上边权和加上 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的点权，对于每个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 找到最大的 &lt;span class=&#34;math inline&#34;&gt;\(E_{i, j}\)&lt;/span&gt;，点数在 &lt;span class=&#34;math inline&#34;&gt;\(2\times 10^5\)&lt;/span&gt; 级别。&lt;/p&gt;
&lt;p&gt;简单换根 dp。&lt;/p&gt;
&lt;h3 id=&#34;abc231&#34;&gt;ABC231&lt;/h3&gt;
&lt;p&gt;A + B + C + D + F，rk571&lt;/p&gt;
&lt;h4 id=&#34;abc231e---minimal-payments&#34;&gt;ABC231E - Minimal payments&lt;/h4&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(A_{i - 1}\mid A_i\)&lt;/span&gt;，所以对于一个 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 可以只考虑两种方案：用这个 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 尽可能凑，或者用更大的面值付然后要找零。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[&lt;span class=&#34;dv&#34;&gt;65&lt;/span&gt;], x, ans;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;unordered_map&amp;lt;ll, unordered_map&amp;lt;ll, ll&amp;gt; &amp;gt; f;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll dfs(ll x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now) {&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[x][now] &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[x][now];&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll r = x % a[now], q = x / a[now], p = a[now] - r;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; q;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll w1 = q + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; + dfs(p, now - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll w2 = q + dfs(r, now - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[x][now] = min(w1, w2);&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, x);&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = x;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(dfs(x, n));&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc231g---balls-in-boxes&#34;&gt;ABC231G - Balls in Boxes&lt;/h4&gt;
&lt;p&gt;期望牛逼题。大体思路就是拆开期望的式子，利用线性性进行化简。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个盒子，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个盒子一开始有 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 个球，&lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 次操作，每次操作随机选一个盒子加一个球，最后每个盒子有 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt; 个球，问 &lt;span class=&#34;math inline&#34;&gt;\(S = \prod B_i\)&lt;/span&gt; 的期望，对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;p&gt;答案为 &lt;span class=&#34;math inline&#34;&gt;\(E[S]\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(X_i\)&lt;/span&gt; 为表示第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个盒子被选中次数的随机变量，则我们要的最终答案就是 &lt;span class=&#34;math inline&#34;&gt;\(E[\prod_i(A_i + X_i)]\)&lt;/span&gt;。考虑 &lt;span class=&#34;math inline&#34;&gt;\(N = 2\)&lt;/span&gt; 的情况，即为 &lt;span class=&#34;math inline&#34;&gt;\(E[(A_1 + X_1)(A_2 + X_2)] = E[A_1A_2] + E[A_1X_2] + E[A_2X_1] + E[X_1X_2]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;推而广之，对于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个不一样的下标 &lt;span class=&#34;math inline&#34;&gt;\(i_1,\cdots, i_n\)&lt;/span&gt;，容易知道 &lt;span class=&#34;math inline&#34;&gt;\(E[\prod_{j = 1}^n X_{i_j}] = E[\prod_{i = 1}^nX_i]\)&lt;/span&gt;。所以提出这个公因式，有 &lt;span class=&#34;math display&#34;&gt;\[
E\left[\prod_{i =1}^N(A_i + X_i)\right] = \sum_{n = 0}^NS_{N, n}(A_1,\cdots, A_N)E\left[\prod_{i =1}^{N - n}X_i\right]
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(S_{N, n}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个变量的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次对称多项式。&lt;/p&gt;
&lt;p&gt;现在只需要对于每个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 算出 &lt;span class=&#34;math inline&#34;&gt;\(S_{N, n}(A_1,\cdots, A_N)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(E[\prod_{i = 1}^nX_i]\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;前者，&lt;span class=&#34;math inline&#34;&gt;\(S_{N, n}(A_1,\cdots, A_N) = [x^n]\prod_{i =1}^N(A_ix + 1)\)&lt;/span&gt;。这个东西一个分治 NTT 碾过去应该是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;p&gt;然后是后者。我们考虑随机变量 &lt;span class=&#34;math inline&#34;&gt;\(X_{i, j}\)&lt;/span&gt; 表示第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个盒子在第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 次操作是否会被选中（0/1）。则 &lt;span class=&#34;math inline&#34;&gt;\(X_i = \sum_{j = 1}^KX_{i, j}\)&lt;/span&gt;。枚举一下下标，发现 &lt;span class=&#34;math display&#34;&gt;\[
E\left[\prod_{i = 1}^n X_i \right] = \sum_{j_1, j_2,\cdots, j_n}E\left[\prod_{i = 1}^nX_{i, j_i}\right]
\]&lt;/span&gt; 然后当 &lt;span class=&#34;math inline&#34;&gt;\(i_1\not= i_2\)&lt;/span&gt; 的时候，显然 &lt;span class=&#34;math inline&#34;&gt;\(X_{i_1, j}X_{i_2, j} = 0\)&lt;/span&gt;。故 &lt;span class=&#34;math display&#34;&gt;\[
E\left[\prod_{i = 1}^nX_{i, j_i}\right] =
\begin{cases}
\left(\frac 1N\right)^n \quad&amp;amp; \text{if }j_i\text{ are pairwise different}\\
0\quad&amp;amp; \text{otherwise}
\end{cases}
\]&lt;/span&gt; 于是 &lt;span class=&#34;math display&#34;&gt;\[
E\left[\prod_{i = 1}^n X_i \right] = \left(\prod_{i = 1}^n(K + 1 - i)\right)\left(\frac1N\right)^n
\]&lt;/span&gt; 这个可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 算，于是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 解决了。&lt;/p&gt;
&lt;h3 id=&#34;abc232&#34;&gt;ABC232&lt;/h3&gt;
&lt;p&gt;A，B 略。&lt;/p&gt;
&lt;p&gt;C 建出一张图的邻接矩阵然后用 &lt;code&gt;next_permutation&lt;/code&gt; 枚举排列判断是否能建立映射即可。&lt;/p&gt;
&lt;p&gt;D 简单网格 dp，注意边界条件。&lt;/p&gt;
&lt;h4 id=&#34;abc232e---rook-path&#34;&gt;ABC232E - Rook Path&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(H \times W\)&lt;/span&gt; 的网格，你初始在 &lt;span class=&#34;math inline&#34;&gt;\((x_1, y_1)\)&lt;/span&gt;，要求做 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 次操作后位置变为 &lt;span class=&#34;math inline&#34;&gt;\((x_2, y_2)\)&lt;/span&gt;。每次操作形如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移动横坐标，从 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 移动到 &lt;span class=&#34;math inline&#34;&gt;\((x&amp;#39;, y)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(1\le x&amp;#39;\le H\land x&amp;#39;\neq x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;移动纵坐标，从 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 移动到 &lt;span class=&#34;math inline&#34;&gt;\((x, y&amp;#39;)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(1\le y&amp;#39;\le W\land y&amp;#39;\neq y\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（就是车的移动方式）问有多少种可能的操作方案，两种操作方案不同当且仅当中间某一步经过的点不同。答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;p&gt;根据套路，这个东西的横向移动和纵向移动是可以分开来考虑的。即，我们可以考虑横向上走 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 步的方案，再乘上纵向上走 &lt;span class=&#34;math inline&#34;&gt;\(K - m\)&lt;/span&gt; 步的方案，再乘上组合系数 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom K m\)&lt;/span&gt;。考虑计算在一个方向上走 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 步的方案数。&lt;/p&gt;
&lt;p&gt;可以 DP，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{0/1, i}\)&lt;/span&gt; 表示横向移动（纵向的类似）回到出发点与否，走 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 步的方案数，其中初始边界是 &lt;span class=&#34;math inline&#34;&gt;\(f_{1,0} = 1\)&lt;/span&gt;，即走 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 步，终点在原点的方案数为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。转移如下： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{1, i} = (H - 1)f_{1, i - 1}\\
f_{0, i} = f_{1, i - 1} + (H - 2)f_{0, i - 1}
\end{cases}
\]&lt;/span&gt; 转移的意义还是很显然的。于是我们 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 求出 dp 数组，这题就做完了，&lt;a href=&#34;https://atcoder.jp/contests/abc232/submissions/28029224&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc232f---simple-operations-on-sequence&#34;&gt;ABC232F - Simple Operations on Sequence&lt;/h4&gt;
&lt;p&gt;给定两个长度为 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(2\le N\le 18\)&lt;/span&gt;）：&lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le A_i, B_i\le 10^8\)&lt;/span&gt;）。可以进行如下两种操作，问最小的使得 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 的操作代价：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 加一/减一，代价为 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le X\le 10^8\)&lt;/span&gt;）&lt;/li&gt;
&lt;li&gt;交换 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中的相邻元素，代价为 &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le Y\le 10^{16}\)&lt;/span&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;毫无疑问，两个操作是相互独立的，可以分开考虑。如果我们先交换，出一个 &lt;span class=&#34;math inline&#34;&gt;\(P_1, P_2,\cdots,P_N\)&lt;/span&gt; 的排列，然后再统计第一个的答案。令 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{inv}(P)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 的逆序对数，则总代价为： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^N|A_{P_i} - B_i|\cdot X + \operatorname{inv}(P)\cdot Y
\]&lt;/span&gt; 把逆序对的这个关于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的贡献拆开，则我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^N(|A_{P_i} - B_i|\cdot X + |\{p:p\in\{1,2,\cdots, N\} \backslash \{P_1, \cdots, P_{i - 1}\}, p &amp;lt; P_i\}|\cdot Y)
\]&lt;/span&gt; 然后会发现一个很关键的地方：后面那个东西只和 &lt;span class=&#34;math inline&#34;&gt;\(\{P_1, \cdots, P_i\}\)&lt;/span&gt; 这个集合有关，而这个集合很小，所以不妨考虑将其状压起来，令 &lt;span class=&#34;math inline&#34;&gt;\(f(x, S)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(|p:p\in\{1, \cdots, N\}\backslash S, p &amp;lt; x|\)&lt;/span&gt;。然后式子改写为： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^N(|A_{P_i} - B_i|\cdot X + f(P_i, \{P_1, \cdots, P_{i - 1}\})\cdot Y)
\]&lt;/span&gt; 于是发现，这个东西可以状压 dp，具体地，设 &lt;span class=&#34;math inline&#34;&gt;\(dp_S\)&lt;/span&gt; 表示排列的前 &lt;span class=&#34;math inline&#34;&gt;\(|S|\)&lt;/span&gt; 项是 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 内的元素，则转移应该是很好转移的。这题就做完了，&lt;a href=&#34;https://atcoder.jp/contests/abc232/submissions/28032712&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc232g---modulo-shortest-path&#34;&gt;ABC232G - Modulo Shortest Path&lt;/h4&gt;
&lt;p&gt;给定一张 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个点的有向完全图，其中，&lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的有向边边权为 &lt;span class=&#34;math inline&#34;&gt;\((A_i + B_j)\bmod M\)&lt;/span&gt;。问 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 的最短路。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le N\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\le M\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先如果我们直接连边跑 Dij，那么必然会寄，边数是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 级别的，要想办法少下来。&lt;/p&gt;
&lt;p&gt;考虑一个技巧，建一张新图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建 &lt;span class=&#34;math inline&#34;&gt;\([0, M)\)&lt;/span&gt; 的虚点 &lt;span class=&#34;math inline&#34;&gt;\(\overline{0},\overline 1,\cdots,\overline{M - 1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;然后 &lt;span class=&#34;math inline&#34;&gt;\(\forall k\in[0, M - 1)\)&lt;/span&gt;，连边 &lt;span class=&#34;math inline&#34;&gt;\(\overline k\to \overline{k + 1}\)&lt;/span&gt;，边权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in [1, N]\)&lt;/span&gt;，连边 &lt;span class=&#34;math inline&#34;&gt;\(i\to \overline{-A_i\bmod M}\)&lt;/span&gt;，边权为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in [1, N]\)&lt;/span&gt;，连边 &lt;span class=&#34;math inline&#34;&gt;\(\overline{B_i}\)&lt;/span&gt;，边权为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样一来，从 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 就相当于，从 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\(\overline{-A_i\bmod M}\)&lt;/span&gt;，然后一步步走到 &lt;span class=&#34;math inline&#34;&gt;\(\overline{B_j}\)&lt;/span&gt;，再走到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。发现中间的路程刚好就是 &lt;span class=&#34;math inline&#34;&gt;\((A_i + B_j)\bmod M\)&lt;/span&gt;，于是问题就得到了转化，我们求新图上 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 的最短路即可。&lt;/p&gt;
&lt;p&gt;可是，&lt;span class=&#34;math inline&#34;&gt;\(O(n + m)\)&lt;/span&gt; 似乎也必死无疑。&lt;/p&gt;
&lt;p&gt;然而我们可以发现，环上的很多点是没有用的，我们可以将其缩起来，会和原来的点连接的虚点只有 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 个，这样子点数和边数就都控制在了 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 级别，直接跑 Dij 便可通过，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;，&lt;a href=&#34;https://atcoder.jp/contests/abc232/submissions/28035096&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc232h---kings-tour&#34;&gt;ABC232H - King’s Tour&lt;/h4&gt;
&lt;p&gt;不知道组题人怎么想的。。。这个题居然放在 H。&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(H\times W\)&lt;/span&gt; 棋盘，一个国王初始在 &lt;span class=&#34;math inline&#34;&gt;\((1, 1)\)&lt;/span&gt;。国王每步可以走到与其八连通的格子，请构造一个方案使得国王不重复地走完了每个格子，且终点为 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(2\le H, W\le 100\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((a, b)\neq (1, 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们考虑减治构造。考虑如下几种情况：&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(H = 2\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(W = 2\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(H = 2\)&lt;/span&gt;，那么就可以像下面这样构造方案（图源 AtCoder 官方题解）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.atcoder.jp/ghi/45d400563f38eb01ffea2e66239b9664.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;即，轨迹为：&lt;span class=&#34;math inline&#34;&gt;\((1, 1)\to (2, 1)\to\cdots\to(1, b)\to (1, b + 1)\to \cdots \to(1, W)\to (2, W)\to \cdots\to (2, b)\)&lt;/span&gt;。如果 &lt;span class=&#34;math inline&#34;&gt;\(W= 2\)&lt;/span&gt;，那么将行列调换之后是一样的。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(H &amp;gt; 2\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(W &amp;gt; 2\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;考虑下面这个方案：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.atcoder.jp/ghi/6a11b9fe7eebca4ddd44a12826580c99.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;绿色圈出来的点集为 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，分类讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\((a, b)\notin S\)&lt;/span&gt;，则我们可以走完 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 内的点，然后垂直翻转一下坐标系，就变成了一个一模一样的子问题，递归处理即可。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\((a, b)\in S\)&lt;/span&gt;，则我们交换行列之后，就变成了 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\notin S\)&lt;/span&gt; 的情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后就可以递归地去解决这道题了。这种代码写的很巧妙：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt; &lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pii&amp;gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; h, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; w, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;pii&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (h == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, b - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret.push_back(pii(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i)), ret.push_back(pii(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, i));&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back(pii(&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; - a, b));&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, b + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, w) ret.push_back(pii(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i));&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, w, b + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret.push_back(pii(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, i));&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back(pii(a, b));&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((h &amp;gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;amp;&amp;amp; w == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) || b == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || (a == h &amp;amp;&amp;amp; b == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)) {&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = solve(w, h, b, a);&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : ret) myswap(p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, h) ret.push_back(pii(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; res = solve(h, w - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, h + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - a, b - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : res) p.first = h + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - p.first, ++p.second;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.insert(ret.end(), res.begin(), res.end());&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt; &lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; h, w, a, b; read(h, w, a, b);&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; ans = solve(h, w, a, b);&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; p : ans) print(p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;abc233&#34;&gt;ABC233&lt;/h3&gt;
&lt;h4 id=&#34;abc233f---swap-and-sort&#34;&gt;ABC233F - Swap and Sort&lt;/h4&gt;
&lt;p&gt;简要题意：给定排列 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\le 1000\)&lt;/span&gt;。同时给定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 组关系 &lt;span class=&#34;math inline&#34;&gt;\((a_i, b_i)\)&lt;/span&gt;，每次可以交换 &lt;span class=&#34;math inline&#34;&gt;\(P_{a_i}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(P_{b_i}\)&lt;/span&gt;。构造一个最多 &lt;span class=&#34;math inline&#34;&gt;\(5\times 10^5\)&lt;/span&gt; 步的方案使得 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为升序。&lt;/p&gt;
&lt;p&gt;整个问题可以抽象成一张图。然后可以发现，当且仅当数字 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 和点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 在一个连通分量内时整个问题有解，这个问题可以写一个并查集之类的东西判断一下。&lt;/p&gt;
&lt;p&gt;然后构造方案。由于不要求最优性，所以我们可以直接考虑建出一个生成树，然后从点度为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的点开始逐个复位并删点。操作次数最多为 &lt;span class=&#34;math inline&#34;&gt;\(999 + 998 + \cdots + 1 = 499500\)&lt;/span&gt;。&lt;a href=&#34;https://atcoder.jp/contests/abc233/submissions/28192989&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc233g---strongest-takahashi&#34;&gt;ABC233G - Strongest Takahashi&lt;/h4&gt;
&lt;p&gt;简要题意：给定一张 &lt;span class=&#34;math inline&#34;&gt;\(N\times N\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le N\le 50\)&lt;/span&gt;）网格，里面若干个格子有障碍。每次可以选择一个 &lt;span class=&#34;math inline&#34;&gt;\(D\times D\)&lt;/span&gt; 的区域然后消耗 &lt;span class=&#34;math inline&#34;&gt;\(D\)&lt;/span&gt; 点体力将其中的障碍消去。问将所有障碍消去的最小体力消耗。&lt;/p&gt;
&lt;p&gt;这种高维度的 dp 一直是我的弱点。。。考虑一个 &lt;span class=&#34;math inline&#34;&gt;\(A\times B\)&lt;/span&gt; 的矩形区域（子问题），我们显然需要 &lt;span class=&#34;math inline&#34;&gt;\(C = \max(A,B)\)&lt;/span&gt; 的体力来覆盖整个矩形。然而可能存在更少的体力消耗就能覆盖。具体地，当存在一个空行/空列时，我们就可以考虑将子矩形划开，变成两个独立子问题，看一下有没有更优解。&lt;/p&gt;
&lt;p&gt;所以设一个 &lt;span class=&#34;math inline&#34;&gt;\(f_{l,u,r,d}\)&lt;/span&gt; 来进行 dp（使用记搜转移）即可，转移复杂度似乎是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^5)\)&lt;/span&gt; 的，&lt;a href=&#34;https://atcoder.jp/contests/abc233/submissions/28194586&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc233ex---manhattan-christmas-tree&#34;&gt;ABC233Ex - Manhattan Christmas Tree&lt;/h4&gt;
&lt;p&gt;简要题意：给定平面内 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点，&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问到 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 近的点到 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 的距离，这里的距离指曼哈顿距离。&lt;span class=&#34;math inline&#34;&gt;\(5\times 10^5\)&lt;/span&gt;，7s。&lt;/p&gt;
&lt;p&gt;首先我们发现曼哈顿距离很不好处理第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 近之类的问题，因为既要考虑两个维度又有绝对值。所以考虑将每个点 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\((x + y, x - y)\)&lt;/span&gt;，这样原图的曼哈顿距离就可以被转化为切比雪夫距离。&lt;/p&gt;
&lt;p&gt;于是我们对于每个询问就可以二分一下第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 近的距离，查询有多少个点到 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\)&lt;/span&gt; 的切比雪夫距离 &lt;span class=&#34;math inline&#34;&gt;\(\le d\)&lt;/span&gt;，这个查询其实就是一个二维数点（查询矩形和），可以通过写一个主席树来实现。复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O((n + Q)\log^2X)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 为点的值域。主席树写着有点心烦，要注意细节，&lt;a href=&#34;https://atcoder.jp/contests/abc233/submissions/28193992&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;abc234&#34;&gt;ABC234&lt;/h3&gt;
&lt;p&gt;A，B 略。&lt;/p&gt;
&lt;p&gt;C 考虑将 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 二进制表示下的每个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 换成 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;D 维护一个小根堆在线维护前 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 大元素即可。&lt;/p&gt;
&lt;p&gt;E 发现首项只可能是 &lt;span class=&#34;math inline&#34;&gt;\(a_1\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + 1\)&lt;/span&gt;，随后枚举公差判断是否可行即可，细节略多。&lt;/p&gt;
&lt;h4 id=&#34;abc234f---reordering&#34;&gt;ABC234F - Reordering&lt;/h4&gt;
&lt;p&gt;题意：给定一个字符串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，问选出里面的部分字母并重排后能得到多少种不同字符串。&lt;span class=&#34;math inline&#34;&gt;\(|S|\le 5000\)&lt;/span&gt;，模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑能构成的字符串只与字符集合有关。我们不妨从 &lt;span class=&#34;math inline&#34;&gt;\(\texttt a\)&lt;/span&gt; 开始，一个个的加字符。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 表示前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 种字符中，填满了 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个格子的方案数。转移的时候考虑第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个字符我们填 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个进去，就相当于是 &lt;span class=&#34;math inline&#34;&gt;\(j - k + 1\)&lt;/span&gt; 个不同的桶里面放 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个相同球，可以有空桶，所以转移如下： &lt;span class=&#34;math display&#34;&gt;\[
f_{i,j} = \sum_{k = 0}^{\min(j, g(i))}\binom k jf_{i- 1, j - k}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(g(i)\)&lt;/span&gt; 为第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 种字符在原串中的出现次数。&lt;/p&gt;
&lt;p&gt;那么 &lt;span class=&#34;math inline&#34;&gt;\(\sum f_{26, i}\)&lt;/span&gt; 就是答案。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;5005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f[&lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;][maxn], fac[maxn], ifac[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; buc[&lt;span class=&#34;dv&#34;&gt;27&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint binom(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fac[n] * ifac[m] * ifac[n - m];}&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = strlen(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ++buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fac[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) fac[i] = i * fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ifac[n] = qPow(fac[n], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) ifac[i] = (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * ifac[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, buc[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][j] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, min(buc[i], j)) {&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j] += binom(j, k) * f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - k];&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ans += f[&lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;][j];&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc234g---divide-a-sequence&#34;&gt;ABC234G - Divide a Sequence&lt;/h4&gt;
&lt;p&gt;给定长为 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 的数列 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(2^{N - 1}\)&lt;/span&gt; 种方法将其划分为若干个非空序列 &lt;span class=&#34;math inline&#34;&gt;\(B_1,\cdots, B_k\)&lt;/span&gt;，求出对于每种划分方式，下面这个式子的和，对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模，&lt;span class=&#34;math inline&#34;&gt;\(N\le 3\times 10^5\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\prod_{i = 1}^k(\max\{B_i\} - \min\{B_i\})
\]&lt;/span&gt; 考虑一个 dp：&lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(A_1, \cdots, A_i\)&lt;/span&gt; 的答案，边界为 &lt;span class=&#34;math inline&#34;&gt;\(f_0 = 1\)&lt;/span&gt;。则我们可以知道： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \sum_{j = 0}^{i - 1}f_j(\max_{k = j + 1}^i\{A_i\} - \min_{k = j + 1}^i\{A_i\})
\]&lt;/span&gt; 这个式子看似是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，拆开来： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \sum_{j = 0}^{i - 1}f_j\max_{k = j + 1}^i\{A_i\} - \sum_{j = 0}^{i - 1}f_j\min_{k = j + 1}^i\{A_i\}
\]&lt;/span&gt; 然后我们维护一下 &lt;span class=&#34;math inline&#34;&gt;\(\max_{k = j + 1}^i\{A_k\}\)&lt;/span&gt;，以及对应的 dp 值之和，使用单调栈就可以完成这题了。答案即为 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt;，实现细节见代码。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn], n;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint v;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} st1[maxn], st2[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top1, top2;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint maxsum = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, minsum = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modint sumv = f[i];&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top1 &amp;amp;&amp;amp; st1[top1].a &amp;lt; a[i]) {&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            maxsum -= st1[top1].a * st1[top1].v;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            sumv += st1[top1].v;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --top1;&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxsum += sumv * a[i];&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++top1, st1[top1] = {a[i], sumv};&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sumv = f[i];&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top2 &amp;amp;&amp;amp; st2[top2].a &amp;gt; a[i]) {&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            minsum -= st2[top2].a * st2[top2].v;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            sumv += st2[top2].v;&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --top2;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        minsum += sumv * a[i];&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++top2, st2[top2] = {a[i], sumv};&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = maxsum - minsum;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc234ex---enumerate-pairs&#34;&gt;ABC234Ex - Enumerate Pairs&lt;/h4&gt;
&lt;p&gt;给定二维平面上的 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\((x_i, y_i)\)&lt;/span&gt; 和一个正整数 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;。请列出所有欧几里得距离小于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的点对。&lt;span class=&#34;math inline&#34;&gt;\(1\le N\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le K\le 1.5\times 10^9\)&lt;/span&gt;。保证最多 &lt;span class=&#34;math inline&#34;&gt;\(4\times 10^5\)&lt;/span&gt; 对点对将被枚举。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下题解参考了 AtCoder 官方题解&lt;/strong&gt;，&lt;a href=&#34;https://atcoder.jp/contests/abc234/editorial/3235&#34;&gt;传送门&lt;/a&gt;。神仙结论题，先给出结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于每个点 &lt;span class=&#34;math inline&#34;&gt;\((x_i, y_i)\)&lt;/span&gt;，将其分配到集合 &lt;span class=&#34;math inline&#34;&gt;\((\lfloor x_i/K\rfloor, \lfloor y_i/K\rfloor)\)&lt;/span&gt; 中。&lt;/li&gt;
&lt;li&gt;然后对于任意一个点，若其被分配到了 &lt;span class=&#34;math inline&#34;&gt;\((X, Y)\)&lt;/span&gt; 集合中，则能与其配对的点一定在 &lt;span class=&#34;math inline&#34;&gt;\((X + m, Y + l)\)&lt;/span&gt; 集合中，其中 &lt;span class=&#34;math inline&#34;&gt;\(-1\le m,l\le 1\)&lt;/span&gt;。直接枚举即可得到答案。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后，其时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(N + M)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 为输出的答案个数（忽略了使用数据结构产生的 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;）。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pll = pair&amp;lt;ll, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll big = &lt;span class=&#34;dv&#34;&gt;2000000000&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; ll K;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pll p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;ll, vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; &amp;gt; mp;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;ll&amp;gt; delta = {-big - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -big, -big + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, big - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, big, big + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, K);&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(p[i].first, p[i].second);&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll id = (p[i].first / K) * big + (p[i].second / K);&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mp[id].push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;pii&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll id = (p[i].first / K) * big + (p[i].second / K);&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;d : delta) {&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll curid = id + d;&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;j : mp[curid]) {&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;gt;= i) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll dis = (p[i].first - p[j].first) * (p[i].first - p[j].first) + (p[i].second - p[j].second) * (p[i].second - p[j].second);&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis &amp;lt;= K * K) ans.push_back(pii(j, i));&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-30&#34;&gt;&lt;a href=&#34;#cb7-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(ans.begin(), ans.end());&lt;/span&gt;
&lt;span id=&#34;cb7-31&#34;&gt;&lt;a href=&#34;#cb7-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans.size());&lt;/span&gt;
&lt;span id=&#34;cb7-32&#34;&gt;&lt;a href=&#34;#cb7-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : ans) print(p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb7-33&#34;&gt;&lt;a href=&#34;#cb7-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-34&#34;&gt;&lt;a href=&#34;#cb7-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上述做法得解的正确性较为显然，这里不说明。下面对时间复杂度给出证明。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(B_{X, Y}\)&lt;/span&gt; 为集合 &lt;span class=&#34;math inline&#34;&gt;\((X,Y)\)&lt;/span&gt; 中的点的数量，&lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 为“含 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 个点的集合内最少的距离小于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的点对数”。&lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的上界显然为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;，下面证明其下界为 &lt;span class=&#34;math inline&#34;&gt;\(\Omega(n^2)\)&lt;/span&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在一个边长小于 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{K}{\sqrt 2}\)&lt;/span&gt; 的子正方形区域中，每一对点对的距离都小于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;。而一个 &lt;span class=&#34;math inline&#34;&gt;\(K\times K\)&lt;/span&gt; 的正方形区域能由 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 个小的边长为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{K}{\sqrt 2}\)&lt;/span&gt; 的小正方形覆盖。考虑往大区域中放 &lt;span class=&#34;math inline&#34;&gt;\(4n\)&lt;/span&gt; 个点，则至少一个小区域包含至少 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点。该小区域有 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{n(n - 1)}{2}\)&lt;/span&gt; 个点对，所以 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的下界为 &lt;span class=&#34;math inline&#34;&gt;\(\Omega(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{X,Y}f(B_{X,Y}) \le M\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{X,Y}B^2_{X,Y}\)&lt;/span&gt; 的上界为 &lt;span class=&#34;math inline&#34;&gt;\(O(N + M)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后我们的算法里面，要枚举的点对数为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{X,Y}\sum_{m = -1}^1\sum_{l = -1}^1B_{X,Y}B_{X+m,Y+l}\)&lt;/span&gt;。因为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{X,Y}B^2_{X,Y}\)&lt;/span&gt; 的上界为 &lt;span class=&#34;math inline&#34;&gt;\(O(N + M)\)&lt;/span&gt;，然后，根据均值不等式，&lt;span class=&#34;math inline&#34;&gt;\(B_{X,Y}B_{X + m,Y+l}\le \dfrac12(B_{X,Y}^2 + B_{X + m, Y + l}^2)\)&lt;/span&gt;，所以整体的上界也是 &lt;span class=&#34;math inline&#34;&gt;\(O(N + M)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证毕。&lt;/p&gt;
&lt;h3 id=&#34;abc235&#34;&gt;ABC235&lt;/h3&gt;
&lt;p&gt;A, B, C 略。&lt;/p&gt;
&lt;p&gt;D 考虑一个 BFS，每次变换看作一次转移，由于有效状态最多 &lt;span class=&#34;math inline&#34;&gt;\(10^7\)&lt;/span&gt; 个，所以是正确的。&lt;/p&gt;
&lt;h4 id=&#34;abc235f---variety-of-digits&#34;&gt;ABC235F - Variety of Digits&lt;/h4&gt;
&lt;p&gt;给 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个数位 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;，问 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中十进制下包含了全部 &lt;span class=&#34;math inline&#34;&gt;\(c_1,\cdots, c_m\)&lt;/span&gt; 数位的整数的和（前导 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 不算），答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^{10^4}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le 10\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le c_1&amp;lt;\cdots&amp;lt;c_m\le 9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;数位 DP。考虑到我们可以将数位集合压起来，所以设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, S}\)&lt;/span&gt; 表示从低到高第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，从高到低已经选的数位集合为 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的数字个数和数字和（注意这两个东西需要同时维护）。&lt;/p&gt;
&lt;p&gt;那么转移应该是比较好想的，注意前导 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 不应计算在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 内。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, c[&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;], S0, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pair&amp;lt;modint, modint&amp;gt; f[maxn][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint pow10[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[maxn][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pair&amp;lt;modint, modint&amp;gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; S, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; zero) {&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (pos == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((S &amp;amp; S0) == S0) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!lim &amp;amp;&amp;amp; !zero &amp;amp;&amp;amp; vis[pos][S]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[pos][S];&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; up = lim ? a[pos] : &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pair&amp;lt;modint, modint&amp;gt; ret = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, up) {&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pair&amp;lt;modint, modint&amp;gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (zero &amp;amp;&amp;amp; !i) tmp = dfs(pos - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, S, lim &amp;amp;&amp;amp; i == up, zero);&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; tmp = dfs(pos - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, S | (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i), lim &amp;amp;&amp;amp; i == up, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.first += tmp.first;&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.second += tmp.second + tmp.first * pow10[pos] * i;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!lim &amp;amp;&amp;amp; !zero) vis[pos][S] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f[pos][S] = ret;&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), n = strlen(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pow10[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = s[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, pow10[i] = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * pow10[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(m);&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) read(c[i]), S0 |= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; c[i]);&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(dfs(n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;).second);&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc235g---gardens&#34;&gt;ABC235G - Gardens&lt;/h4&gt;
&lt;p&gt;三种颜色的球分别有 &lt;span class=&#34;math inline&#34;&gt;\(A, B, C\)&lt;/span&gt; 个，同种颜色的球不区分，现将其放入 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个有标号的箱子内，要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个箱子至少有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个球。&lt;/li&gt;
&lt;li&gt;每个箱子内至多有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个同种球。&lt;/li&gt;
&lt;li&gt;不必放完所有的球。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求方案数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le N\le 5\times 10^6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le A,B,C\le N\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;朴素的 DP 容易想到，&lt;span class=&#34;math inline&#34;&gt;\(O(NABC) = O(N^4)\)&lt;/span&gt;，铁定过不去。不妨反着考虑问题，发现“为空”比“不为空”要好想得多，考虑对于一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，计算“至少有 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个箱子为空”的方案数，不难发现其就为 &lt;span class=&#34;math display&#34;&gt;\[
\binom{N}{i}\left(\sum_{a=0}^{\min\{N-  i, A\}}\binom{N - i}{a}\right)\left(\sum_{b=0}^{\min\{N-  i, B\}}\binom{N - i}{b}\right)\left(\sum_{c=0}^{\min\{N-  i, C\}}\binom{N - i}{c}\right)
\]&lt;/span&gt; 解释：首先选 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个一定为空的箱子，然后分别枚举三种颜色的球放的个数并放入 &lt;span class=&#34;math inline&#34;&gt;\(N - i\)&lt;/span&gt; 个可能不为空的箱子。&lt;/p&gt;
&lt;p&gt;答案为“恰好有 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 个箱子为空”，二项式反演一下（中间推导过程省略，就是一个简单容斥）得到答案为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=0}^N(-1)^i\binom{N}{i}\left(\sum_{a=0}^{\min\{N-  i, A\}}\binom{N - i}{a}\right)\left(\sum_{b=0}^{\min\{N-  i, B\}}\binom{N - i}{b}\right)\left(\sum_{c=0}^{\min\{N-  i, C\}}\binom{N - i}{c}\right)
\]&lt;/span&gt; 化的好看点就是 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=0}^N(-1)^{N - i}\binom{N}{i}\left(\sum_{a=0}^{\min\{i, A\}}\binom{i}{a}\right)\left(\sum_{b=0}^{\min\{i, B\}}\binom{i}{b}\right)\left(\sum_{c=0}^{\min\{i, C\}}\binom{i}{c}\right)
\]&lt;/span&gt; 然而直接计算还是需要 &lt;span class=&#34;math inline&#34;&gt;\(O(N^2)\)&lt;/span&gt;，继续优化计算过程。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_{M}(N) = \displaystyle\sum_{i=0}^{\min\{N, M\}}\binom N i\)&lt;/span&gt;，则答案可以改写为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=0}^N(-1)^{N-i}\binom Ni f_{A}(i)f_{B}(i)f_C(i)
\]&lt;/span&gt; 如果我们知道了 &lt;span class=&#34;math inline&#34;&gt;\(f_M(N)\)&lt;/span&gt; 的值后能 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 推出 &lt;span class=&#34;math inline&#34;&gt;\(f_{M}(N + 1)\)&lt;/span&gt; 的值，整个问题就可以 &lt;span class=&#34;math inline&#34;&gt;\(O(N)\)&lt;/span&gt; 解决了。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(N+ 1\le M\)&lt;/span&gt; 的时候，&lt;span class=&#34;math inline&#34;&gt;\(\min\{N+1,M\} = N+1\)&lt;/span&gt;，所以根据二项式定理，&lt;span class=&#34;math inline&#34;&gt;\(f_{M}(N+1)=2f_M(N)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;下面的解法参考 &lt;a href=&#34;https://atcoder.jp/contests/abc235/editorial/3262&#34;&gt;AtCoder 官方题解&lt;/a&gt;，推荐去学习一下这个思想。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.atcoder.jp/ghi/d93c643497867d310c6255fb673d9682.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;实际上，&lt;span class=&#34;math inline&#34;&gt;\(f_M(N)\)&lt;/span&gt; 就可以看作从左下角出发，每一步往上/右走一格，走到橙色点的方案数（总步数都是 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;，我们枚举了横向走的步数 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 而已）。&lt;/p&gt;
&lt;p&gt;于是 &lt;span class=&#34;math inline&#34;&gt;\(f_M(N)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(f_M(N + 1)\)&lt;/span&gt; 的关系就变成了求走到橙色点的方案数与走到蓝色点的方案数之间的关系。发现，我们在一个橙色点的时候总可以往上/右走一格到达蓝色点，除去最右下角那个点即可。所以 &lt;span class=&#34;math display&#34;&gt;\[
f_M(N+ 1) = 2f_M(N) - \binom{N}{M}
\]&lt;/span&gt; 发现对于上面的情况，只需定义 &lt;span class=&#34;math inline&#34;&gt;\(N&amp;lt;M\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom NM\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，下面的公式也是完全适用的。&lt;span class=&#34;math inline&#34;&gt;\(f_M(0) = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;于是这道题 &lt;span class=&#34;math inline&#34;&gt;\(O(N)\)&lt;/span&gt; 解决了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint fac[maxn], ifac[maxn];&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, A, B, C;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint binom(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fac[n] * ifac[m] * ifac[n - m];&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, A, B, C);&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fac[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) fac[i] = fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i;&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ifac[n] = qPow(fac[n], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) ifac[i] = (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * ifac[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, a = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, b = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modint tmp = ((n - i) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp *= binom(n, i);&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * a - binom(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, A);&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            b = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * b - binom(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, B);&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            c = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * c - binom(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, C);&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp *= a * b * c;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += tmp;&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb9-29&#34;&gt;&lt;a href=&#34;#cb9-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-30&#34;&gt;&lt;a href=&#34;#cb9-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc235ex---painting-weighted-graph&#34;&gt;ABC235Ex - Painting Weighted Graph&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 点 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 边带边权无向图，&lt;span class=&#34;math inline&#34;&gt;\(2\le N\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le M\le 10^5\)&lt;/span&gt;。一开始，每个节点上涂黑色，可以进行如下操作至多 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 次：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;选择一个节点 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 和一个数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，将所有的从 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 出发，不经过任何权值大于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的边能到达的点涂为红色。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;问可能的红色点集的数量，模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;。图可能有重边和自环。&lt;/p&gt;
&lt;p&gt;咕，以后有空来补。&lt;/p&gt;
&lt;h3 id=&#34;abc237&#34;&gt;ABC237&lt;/h3&gt;
&lt;p&gt;A 可以投机取巧一下强制转为 &lt;code&gt;int&lt;/code&gt; 之后是否与原来相等。&lt;/p&gt;
&lt;p&gt;B 略，C 随便观察一下即可，略。D 可以实现一个 &lt;code&gt;deque&lt;/code&gt; 或者倒序考虑问题，略。&lt;/p&gt;
&lt;p&gt;E 建出图后发现是一个带有负权边的最短路模型，跑个 SPFA 可以过，略。&lt;/p&gt;
&lt;h4 id=&#34;abc237e---skiing&#34;&gt;ABC237E - Skiing&lt;/h4&gt;
&lt;p&gt;滑雪场有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个地点，有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个坡，保证图连通。每个节点有高度 &lt;span class=&#34;math inline&#34;&gt;\(h_u\)&lt;/span&gt;。当从边 &lt;span class=&#34;math inline&#34;&gt;\(u\to v\)&lt;/span&gt; 通过时，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(h_u &amp;gt; h_v\)&lt;/span&gt;，则快乐指数增加 &lt;span class=&#34;math inline&#34;&gt;\(h_u - h_v\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;否则，快乐指数减小 &lt;span class=&#34;math inline&#34;&gt;\(2(h_v - h_u)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 出发，初始快乐指数为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，问能达到的最大快乐指数。&lt;span class=&#34;math inline&#34;&gt;\(n, m\)&lt;/span&gt; 均为 &lt;span class=&#34;math inline&#34;&gt;\(2\times 10^5\)&lt;/span&gt; 级别。&lt;/p&gt;
&lt;p&gt;首先对边权取相反数建模成最短路模型，发现其有负权边，无法直接使用 Dijkstra，而数据范围又极有可能卡死 SPFA（事实证明 SPFA 能过）。&lt;/p&gt;
&lt;p&gt;考虑势能 Dijkstra，为每个点增加一个势能 &lt;span class=&#34;math inline&#34;&gt;\(h_u\)&lt;/span&gt;，然后对边 &lt;span class=&#34;math inline&#34;&gt;\(u\to v\)&lt;/span&gt; 的权值加上 &lt;span class=&#34;math inline&#34;&gt;\(h_u - h_v\)&lt;/span&gt;，使得所有边权非负，最后每个点的答案就为 &lt;span class=&#34;math inline&#34;&gt;\(d_u + h_u - h_1\)&lt;/span&gt;。但是求势能的过程仍然需要 SPFA，怎么办呢？&lt;/p&gt;
&lt;p&gt;注意到本题中的“高度”就是一个现成的势能，满足了势能之差只和相对高度有关这一性质，所以直接将其当作势能来做就可以了，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log n)\)&lt;/span&gt;，&lt;a href=&#34;https://atcoder.jp/contests/abc237/submissions/29219115&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc237f---lis-3&#34;&gt;ABC237F - |LIS| = 3&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;，求满足以下条件的正整数序列的个数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;长度为 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;，每个元素 &lt;span class=&#34;math inline&#34;&gt;\(\in[1, M]\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;其 LIS 的长度恰好为 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(3\le N\le 1000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(3\le M\le 10\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑经典的 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的 LIS 的做法，发现 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为“长度为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的 LIS 的最小结尾数字”，而 DP 数组的长度即为 LIS 的长度，所以干脆考虑令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, a, b, c}\)&lt;/span&gt; 表示当前考虑到 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt;，LIS 的 DP 数组为 &lt;span class=&#34;math inline&#34;&gt;\(a, b, c\)&lt;/span&gt; 的序列个数。不难发现这个状态是没有后效性的，转移就考虑当前填什么数，然后仿照 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; LIS 的转移方式进行转移。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(NM^4)\)&lt;/span&gt;，可以通过。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f[&lt;span class=&#34;dv&#34;&gt;1005&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) FOR(k, j, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) FOR(l, k, m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) FOR(t, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t &amp;lt;= j) f[i][t][k][l] += f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j][k][l];&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t &amp;lt;= k) f[i][j][t][l] += f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j][k][l];&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t &amp;lt;= l) f[i][j][k][t] += f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j][k][l];&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) FOR(k, j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) ans += f[n][i][j][k];&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc237g---range-sort-query&#34;&gt;ABC237G - Range Sort Query&lt;/h4&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 的排列，&lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt; 次操作，操作为选定一区间 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 然后升序/降序排序，问元素 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 最后的下标在哪里。&lt;span class=&#34;math inline&#34;&gt;\(1\le N, Q\le 2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这是一个经典问题（HEOI 排序）的变式。最强大的解法显然为线段树合并/分裂，但是在这里不需要。&lt;/p&gt;
&lt;p&gt;注意到，0-1 序列的区间排序很好使用线段树来完成，只需要实现区间染色和区间求和。所以我们考虑将其转为 0-1 序列。&lt;/p&gt;
&lt;p&gt;具体地，将 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; X\)&lt;/span&gt; 的元素变为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，其他变为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，操作，得到一个结果。将 &lt;span class=&#34;math inline&#34;&gt;\(\le X\)&lt;/span&gt; 的元素变为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，其他变为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，操作，得到另一个结果，然后然后然后发现这两个序列唯一一个不一样的地方显然就是 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 最后的位置。&lt;/p&gt;
&lt;p&gt;所以复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(N\log N)\)&lt;/span&gt;，视 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt; 同阶。&lt;a href=&#34;https://atcoder.jp/contests/abc237/submissions/29158241&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;abc237ex---hakata&#34;&gt;ABC237Ex - Hakata&lt;/h4&gt;
&lt;p&gt;给定长度 &lt;span class=&#34;math inline&#34;&gt;\(\le 200\)&lt;/span&gt; 的字符串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，问最多能从里面选出多少个&lt;strong&gt;回文子段&lt;/strong&gt;，使得一个子段不是另一个子段的子段。子段指连续的。&lt;/p&gt;
&lt;p&gt;我们发现，不同回文子串的个数 &lt;span class=&#34;math inline&#34;&gt;\(\le |S|\)&lt;/span&gt;，然后子串间的包含关系是一种偏序关系，可以形成一个 DAG，而原问题问的就是其的最大反链。&lt;/p&gt;
&lt;p&gt;复习一下 &lt;a href=&#34;https://www.luogu.com.cn/problem/P4298&#34;&gt;P4298 [CTSC2008]祭祀&lt;/a&gt; 便知道最大反链 = 最小链覆盖（Dilworth 引理），而最小链覆盖可以通过拆点二分图匹配来求。&lt;/p&gt;
&lt;p&gt;放到本题里面，就对于每个不同回文子段（这部分顶天 &lt;span class=&#34;math inline&#34;&gt;\(O(|S|^3)\)&lt;/span&gt;），为其标号，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的子串，连边 &lt;span class=&#34;math inline&#34;&gt;\(i_{\mathrm {left}}\to j_{\mathrm{right}}\)&lt;/span&gt;，然后跑二分图最大匹配，用回文串数量减去匹配即得到答案。时间复杂度就不分析了，&lt;span class=&#34;math inline&#34;&gt;\(400\)&lt;/span&gt; 个点的二分图匹配并不慢，&lt;a href=&#34;https://atcoder.jp/contests/abc237/submissions/29158769&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;abc244&#34;&gt;ABC244&lt;/h3&gt;
&lt;h4 id=&#34;abc244d---swap-hats&#34;&gt;ABC244D - Swap Hats&lt;/h4&gt;
&lt;p&gt;&lt;del&gt;大胆猜结论&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;发现若相同的位置有 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个或 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 个时为 Yes，否则为 No，下面给出简要说明。&lt;/p&gt;
&lt;p&gt;为 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个的时候就把两个反复横跳即可，为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 个的话可以构造方案在操作两次后转化为 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个一样的情况。&lt;/p&gt;
&lt;p&gt;否则相同的位置只可能有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个，做任意一次交换后都会变成上面两种情况，所以寄了。&lt;/p&gt;
&lt;h4 id=&#34;abc244f---shortest-good-path&#34;&gt;ABC244F - Shortest Good Path&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 点 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 边无向图，令长度为 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的路径 &lt;span class=&#34;math inline&#34;&gt;\(A_{1,\cdots, K}\)&lt;/span&gt; 对长度为 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的 0-1 串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 为合法的当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的出现次数模 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 后等于 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;。对于 &lt;span class=&#34;math inline&#34;&gt;\(2^n\)&lt;/span&gt; 种不同的 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，求出最小的合法的路径的 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 之和。&lt;span class=&#34;math inline&#34;&gt;\(n\le 17\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;范围让我们想到状压 dp。&lt;/p&gt;
&lt;p&gt;对于这种图上有链的，就令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,S}\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾，点集为 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的链的什么什么。然后注意到这个状态是没法转移的，因为接上一个在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 里面存在的点之后，&lt;span class=&#34;math inline&#34;&gt;\(S&amp;#39;\)&lt;/span&gt; 是小于 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;p&gt;那就考虑翻转一下状态和值，令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,k,S}\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾，长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，点集为 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的链是否存在。然后转移就很好做到了，毛估估复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^32^n)\)&lt;/span&gt;，有点勉强但是实现的好的话可以通过。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;解释一下为什么长度上界是 &lt;span class=&#34;math inline&#34;&gt;\(4n\)&lt;/span&gt;，因为 G 题说了上界是 &lt;span class=&#34;math inline&#34;&gt;\(4n\)&lt;/span&gt;&lt;/em&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;18&lt;/span&gt;, maxS = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;) | &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, G[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; f[maxn][&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt; * maxn][maxS];&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxS];&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u, v);&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u][v] = G[v][u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(vis, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; vis);&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) f[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; vis[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt; * n) { &lt;span class=&#34;co&#34;&gt;// length&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(S, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G[i][j]) {&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[i][k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][S] |= f[j][k][S ^ (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))];&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[i][k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][S]) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmin(vis[S], f[i][k][S] ? k : (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans += vis[i];&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是这还不是最优的，而且这个拿结论来推的想法很不优美。我们注意到，若将 dp 状态 &lt;span class=&#34;math inline&#34;&gt;\((i, S)\)&lt;/span&gt; 看作点，转移看作边，那么问题就变成了最短路。&lt;/p&gt;
&lt;p&gt;时间复杂度会少一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(O(n^22^n)\)&lt;/span&gt; 跑的还是很快的，而且少了 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 倍常数。&lt;/p&gt;
&lt;h4 id=&#34;abc244g---construct-good-path&#34;&gt;ABC244G - Construct Good Path&lt;/h4&gt;
&lt;p&gt;全部继承 F 的定义，将范围改成 &lt;span class=&#34;math inline&#34;&gt;\(N\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(M\le 2\times 10^5\)&lt;/span&gt;，并给定 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 然后让你构造一个合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;。要求长度不超过 &lt;span class=&#34;math inline&#34;&gt;\(4N\)&lt;/span&gt;，保证有解。&lt;/p&gt;
&lt;p&gt;首先将这个问题放到生成树上。然后就从根节点往下走。对于 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，若从他的子树出来后还是不对头，那就反复横跳一次。&lt;/p&gt;
&lt;p&gt;对于根节点特判一下即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, vis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn], ans;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.push_back(u), ++vis[u];&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v);&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((vis[v] &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) != s[v] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back(u), ++vis[u], ans.push_back(v), ++vis[v];&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans.push_back(u), ++vis[u];&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-18&#34;&gt;&lt;a href=&#34;#cb12-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb12-19&#34;&gt;&lt;a href=&#34;#cb12-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb12-20&#34;&gt;&lt;a href=&#34;#cb12-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb12-21&#34;&gt;&lt;a href=&#34;#cb12-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u, v);&lt;/span&gt;
&lt;span id=&#34;cb12-22&#34;&gt;&lt;a href=&#34;#cb12-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb12-23&#34;&gt;&lt;a href=&#34;#cb12-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-24&#34;&gt;&lt;a href=&#34;#cb12-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-25&#34;&gt;&lt;a href=&#34;#cb12-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-26&#34;&gt;&lt;a href=&#34;#cb12-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((vis[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) != s[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) ans.pop_back();&lt;/span&gt;
&lt;span id=&#34;cb12-27&#34;&gt;&lt;a href=&#34;#cb12-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans.size());&lt;/span&gt;
&lt;span id=&#34;cb12-28&#34;&gt;&lt;a href=&#34;#cb12-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x : ans) print(x, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-29&#34;&gt;&lt;a href=&#34;#cb12-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-30&#34;&gt;&lt;a href=&#34;#cb12-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc244ex---linear-maximization未写代码&#34;&gt;ABC244Ex - Linear Maximization（未写代码）&lt;/h4&gt;
&lt;p&gt;维护二维平面上的点集 &lt;span class=&#34;math inline&#34;&gt;\(S = \{(x, y)\}\)&lt;/span&gt;，初始为空。下面进行 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt; 次操作，每次往 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中加入点 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 并给定 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 并查询 &lt;span class=&#34;math inline&#34;&gt;\(\max_{(x,y)\in S}\{ax + by\}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(Q\le 2\times 10^5\)&lt;/span&gt;，坐标绝对值 &lt;span class=&#34;math inline&#34;&gt;\(\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;解法 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：考虑 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = b(\frac ab\cdot x + y)\)&lt;/span&gt;，看出一次函数的形式之后无脑李超树即可。但是需要注意特判符号，&lt;span class=&#34;math inline&#34;&gt;\(b=0\)&lt;/span&gt; 等情况。而且浮点误差似乎有点心烦所以我没写。&lt;/p&gt;
&lt;p&gt;解法 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：拿平衡树维护动态凸包，然后在凸包上三分查询。&lt;/p&gt;
&lt;p&gt;不想写代码了。&lt;/p&gt;
&lt;h3 id=&#34;abc246&#34;&gt;ABC246&lt;/h3&gt;
&lt;p&gt;A 直接随便做。&lt;/p&gt;
&lt;p&gt;B 输出 &lt;span class=&#34;math inline&#34;&gt;\(\cos(\theta)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\sin(\theta)\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;C 先按照物品大小贪一次心，然后再将剩下部分（&lt;span class=&#34;math inline&#34;&gt;\(a_i\bmod x\)&lt;/span&gt; 的部分）重新排序再做一次贪心。容易说明其正确性。&lt;/p&gt;
&lt;p&gt;D 发现 &lt;span class=&#34;math inline&#34;&gt;\((a+b)(a^2+b^2)\le 10^{18}\)&lt;/span&gt;，钦定 &lt;span class=&#34;math inline&#34;&gt;\(a\ge b\)&lt;/span&gt; 的话发现 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的上界只能为 &lt;span class=&#34;math inline&#34;&gt;\(10^6\)&lt;/span&gt;，所以枚举 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 然后二分 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h4 id=&#34;abc246e---bishop-2&#34;&gt;ABC246E - Bishop 2&lt;/h4&gt;
&lt;p&gt;场上调这题调到最后都寄了。。。&lt;/p&gt;
&lt;p&gt;发现整个就是一个 0-1 bfs 的模型，每次看成走一格，同向走相当于比边权为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，转向相当于边权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;复杂度就是 bfs 的复杂度，容易说明其为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1505&lt;/span&gt;, fx[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;}, fy[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;queue&amp;lt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; mp[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, sx, sy, tx, ty, f[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; sx &amp;gt;&amp;gt; sy &amp;gt;&amp;gt; tx &amp;gt;&amp;gt; ty;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; &amp;amp;mp[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[sx][sy] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, q.push({sx, sy});&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; check = [](&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; x &amp;lt;= n &amp;amp;&amp;amp; y &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; y &amp;lt;= n &amp;amp;&amp;amp; mp[x][y] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;;};&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; now = q.front(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = now.first, y = now.second;&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                x += fx[k], y += fy[k];&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!check(x, y)) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-22&#34;&gt;&lt;a href=&#34;#cb13-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!f[x][y]) f[x][y] = f[now.first][now.second] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, q.push({x, y});&lt;/span&gt;
&lt;span id=&#34;cb13-23&#34;&gt;&lt;a href=&#34;#cb13-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[x][y] &amp;lt;= f[now.first][now.second]) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-24&#34;&gt;&lt;a href=&#34;#cb13-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb13-25&#34;&gt;&lt;a href=&#34;#cb13-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-26&#34;&gt;&lt;a href=&#34;#cb13-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-27&#34;&gt;&lt;a href=&#34;#cb13-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; f[tx][ty] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb13-28&#34;&gt;&lt;a href=&#34;#cb13-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-29&#34;&gt;&lt;a href=&#34;#cb13-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;abc246f---typewriter&#34;&gt;ABC246F - typewriter&lt;/h4&gt;
&lt;p&gt;考虑对单个串我们怎么计数，不难发现是 &lt;span class=&#34;math inline&#34;&gt;\(\text{字母个数}^L\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么多个串来了，我们就需要去重。具体地，我们取两个串字母的交，然后扣掉这一部分的答案。&lt;/p&gt;
&lt;p&gt;那么扩展一下就是最基本的容斥，看到 &lt;span class=&#34;math inline&#34;&gt;\(n\le 18\)&lt;/span&gt; 就枚举所有串的子集，算其交的答案，贡献乘上容斥系数 &lt;span class=&#34;math inline&#34;&gt;\((-1)^{|S|}\)&lt;/span&gt;。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(2^nc)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 为某和字符集大小有关的常数（&lt;del&gt;懒得分析了&lt;/del&gt;）。&lt;/p&gt;
&lt;h4 id=&#34;abc246g---game-on-tree-3&#34;&gt;ABC246G - Game on Tree 3&lt;/h4&gt;
&lt;p&gt;点带权 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 根树，初始有一个指针在 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 点，每轮游戏中先青木选择一个非根点并将其权置零，然后高桥将指针移向其所在位置的任意儿子。高桥可以在任意时刻结束游戏（但当指针移到叶子节点后游戏强制结束）。分数为指针最后指向的点的权。青木想最小化分数，高桥想最大化分数，两人绝顶聪明，问最后的分数。&lt;/p&gt;
&lt;p&gt;直接做似乎不太可能，我们考虑二分答案，即“最优策略下，高桥能否至少拿到 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 分”。&lt;/p&gt;
&lt;p&gt;下面是一个转化：将 &lt;span class=&#34;math inline&#34;&gt;\(\ge c\)&lt;/span&gt; 的权看作 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; c\)&lt;/span&gt; 的权看作 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，然后发现，只要高桥君走到了一个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 点，那么他就赢了，否则输了。&lt;/p&gt;
&lt;p&gt;那么，显然，若高桥将指针移向一个点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 后，青木会选择在 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树内将一个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。树形 dp，设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树内高桥君能走到的 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 点个数，则 &lt;span class=&#34;math inline&#34;&gt;\(f_u = \max(\sum f_v - 1, 0) + [a_u\ge c]\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(f_1 &amp;gt; 0\)&lt;/span&gt; 时合法。&lt;/p&gt;
&lt;h4 id=&#34;abc246ex---01-queries&#34;&gt;ABC246Ex - 01? Queries&lt;/h4&gt;
&lt;p&gt;给定长为 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^5\)&lt;/span&gt; 的包含 &lt;code&gt;0&lt;/code&gt;，&lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;?&lt;/code&gt; 的串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，以及 &lt;span class=&#34;math inline&#34;&gt;\(q\le 10^5\)&lt;/span&gt; 次操作 &lt;span class=&#34;math inline&#34;&gt;\((x_i, c_i)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 为下标，&lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 为字符集中的某字符。按照 &lt;span class=&#34;math inline&#34;&gt;\(1,\cdots, q\)&lt;/span&gt; 的顺序，每次将 &lt;span class=&#34;math inline&#34;&gt;\(S_{x_i}\leftarrow c_i\)&lt;/span&gt;，然后计算 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的 0-1 子串个数（&lt;code&gt;?&lt;/code&gt; 视为通配符），答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;p&gt;先思考对于一个固定的 0-1 串如何计数。&lt;/p&gt;
&lt;p&gt;可以设计一个 dp 状态 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,0/1}\)&lt;/span&gt; 表示考虑 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt;，结尾为 &lt;span class=&#34;math inline&#34;&gt;\(0/1\)&lt;/span&gt; 的子序列数量，则答案显然为 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, 0} + f_{n,1}\)&lt;/span&gt;，现在考虑转移：发现可以对于 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 为 &lt;code&gt;0&lt;/code&gt;，&lt;code&gt;1&lt;/code&gt; 还是 &lt;code&gt;?&lt;/code&gt; 分类讨论： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_{i,0} &amp;amp;=
\begin{cases}
f_{i - 1, 0} + (f_{i - 1, 1} + 1) &amp;amp; S_i = \texttt 0\lor S_i = \texttt{?}\\
f_{i - 1, 0} &amp;amp; S_i = \texttt 1\\
\end{cases}
\\
f_{i,1} &amp;amp;= 
\begin{cases}
f_{i - 1, 1} + (f_{i - 1, 0} + 1) &amp;amp; S_i = \texttt 1 \lor S_i = \texttt{?}\\
f_{i - 1, 1} &amp;amp; S_i = \texttt 0
\end{cases}
\end{aligned}
\]&lt;/span&gt; 那么我们会发现，dp 数组的转移是很有规律的，而且我们每次修改都是修改一个点处的转移方式，而且询问 &lt;span class=&#34;math inline&#34;&gt;\(f_{n,0} + f_{n, 1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这让你想到什么！动态 dp。具体地，令向量 &lt;span class=&#34;math display&#34;&gt;\[
\boldsymbol F_i = \begin{bmatrix}
f_{i, 0}\\
f_{i, 1}\\
1
\end{bmatrix}
\]&lt;/span&gt; （最下面的 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 是因为常数项需要转移）那么就可以写出三个转移矩阵： &lt;span class=&#34;math display&#34;&gt;\[
\boldsymbol A_{\texttt 0} = \begin{bmatrix}
1 &amp;amp; 1 &amp;amp; 1\\
0 &amp;amp; 1 &amp;amp; 0\\
0 &amp;amp; 0 &amp;amp; 1
\end{bmatrix}, \boldsymbol A_{\texttt 1} = \begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 0\\
1 &amp;amp; 1 &amp;amp; 1\\
0 &amp;amp; 0 &amp;amp; 1
\end{bmatrix}, A_{\texttt{?}} = \begin{bmatrix}
1 &amp;amp; 1 &amp;amp; 1\\
1 &amp;amp; 1 &amp;amp; 1\\
0 &amp;amp; 0 &amp;amp; 1
\end{bmatrix}
\]&lt;/span&gt; 于是就有 &lt;span class=&#34;math display&#34;&gt;\[
\boldsymbol F_i = \boldsymbol A_{S_i}\times \boldsymbol F_{i - 1} = A_{S_i}A_{S_{i-1}}\cdots \boldsymbol F_0
\]&lt;/span&gt; 线段树维护矩阵连乘积，单点修改一下。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O((n + q)\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;abc247&#34;&gt;ABC247&lt;/h3&gt;
&lt;h4 id=&#34;abc247ex---rearranging-problem&#34;&gt;ABC247Ex - Rearranging Problem&lt;/h4&gt;
&lt;p&gt;题意：给定值域为 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;，进行 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次操作：每次选定任意 &lt;span class=&#34;math inline&#34;&gt;\(i\ne j\)&lt;/span&gt; 然后交换 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(c_j\)&lt;/span&gt;。显然这样会得到一个下标的新排列，问有多少种这样的排列使得最后的序列和原来的 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 相同。&lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;应该是比较经典但我不会的计数套路。发现其实最后相当于只在相同的 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 形成的连通块内部做交换，即排列的每个置换环内 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 要相同。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lemma 1：交换两个数，置换环的个数会 &lt;span class=&#34;math inline&#34;&gt;\(+1/-1\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个引理应该不难证明（随便画图分讨一下即可），而且貌似是个经典结论。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lemma 2：一个排列能在交换 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次后得到当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(n - c\le k\land (n - c)\equiv k\pmod 2\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 为置换环个数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个引理可以用 Lemma 1 证明。注意到到一开始有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个环，然后奇偶性讨论一下即可。&lt;/p&gt;
&lt;p&gt;所以我们现在要求的就是对于每个合法的 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 求出合法的置换个数。&lt;/p&gt;
&lt;p&gt;可以 dp，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 为考虑 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt; 的排列，置换环个数为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的合法排列个数。转移的话考虑添加 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的时候其是形成了新环还是塞入了某个老环。 &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = f_{i, j - 1} + f_{i - 1, j}\times |\{x\mid 1\le x&amp;lt; i, c_i = c_x\}|
\]&lt;/span&gt; 这个东西类似于第一类斯特林数的转移，所以可以分治 NTT，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;del&gt;偷懒用了他给的 NTT。&lt;/del&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;atcoder/modint&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;atcoder/convolution&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; mint = atcoder::modint998244353;&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; atcoder::convolution;&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;vector&amp;lt;mint&amp;gt;&amp;gt; P;&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt[maxn], n, k;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; k;&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        P.push_back({cnt[x]++, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (P.size() &amp;gt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;decltype&lt;/span&gt;(P) nxt;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; P.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) nxt.push_back(convolution(P[i], P[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]));&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (P.size() &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) nxt.push_back(P.back());&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        nxt.swap(P);&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;f = P.front();&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)f.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n - c &amp;lt;= k &amp;amp;&amp;amp; ((n - c) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) == (k &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) ans += f[c];&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans.val() &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;arc&#34;&gt;ARC&lt;/h2&gt;
&lt;h3 id=&#34;arc-补题表&#34;&gt;ARC 补题表&lt;/h3&gt;
&lt;p&gt;近期目标：ARC 稳定做出 3 题，尽力补完 A-D。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Round&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;Rank&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;Perf&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;Sol&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC116&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;vp&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;vp&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ARC117&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc117/standings?watching=YangTY&#34;&gt;597&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1736&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC118&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc118/standings?watching=YangTY&#34;&gt;1679&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;807&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ARC119&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc119/standings?watching=YangTY&#34;&gt;1141&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1180&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC120&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc120/standings?watching=YangTY&#34;&gt;785&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1345&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ARC123&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc123/standings?watching=YangTY&#34;&gt;608&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1756&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC124&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc124/standings?watching=YangTY&#34;&gt;1276&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1004&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ARC125&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc125/standings?watching=Cgfyufsygsm&#34;&gt;463&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1850&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC126&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc126/standings?watching=YangTY&#34;&gt;876&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1371&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ARC128&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc128/standings?watching=YangTY&#34;&gt;340&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1998&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC131&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc131/standings?watching=YangTY&#34;&gt;220&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2230&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ARC132&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc132/standings?watching=YangTY&#34;&gt;566&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1728&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC134&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc134/standings?watching=YangTY&#34;&gt;877&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;1538&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ARC137&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc137/standings?watching=YangTY&#34;&gt;281&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2148&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;3&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;ARC138&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc138/standings?watching=YangTY&#34;&gt;246&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;2242&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;4&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;一些新见到的-trick-1&#34;&gt;一些新见到的 trick&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ARC116B：将 &lt;span class=&#34;math inline&#34;&gt;\(\max\times \min\)&lt;/span&gt; 拆开贡献。&lt;/li&gt;
&lt;li&gt;ARC125D：子序列自动机 dp。&lt;/li&gt;
&lt;li&gt;ARC128C：线性规划的最值一定在边界取到。&lt;/li&gt;
&lt;li&gt;ARC134C：&lt;strong&gt;某种元素至少占一半&lt;/strong&gt;，考虑先强行配对，然后正常做。&lt;/li&gt;
&lt;li&gt;ARC137D：模 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 意义下的 Lucas → 高维前缀和。&lt;/li&gt;
&lt;li&gt;ARC137E：最小费用循环流的建图。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;arc116&#34;&gt;ARC116&lt;/h3&gt;
&lt;p&gt;VP。&lt;/p&gt;
&lt;h4 id=&#34;arc116a---odd-vs-even&#34;&gt;ARC116A - Odd vs Even&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(T\le 2\times 10^5\)&lt;/span&gt;）个正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^{18}\)&lt;/span&gt;），问 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的奇约数多还是偶约数多。（约数均为正约数）&lt;/p&gt;
&lt;p&gt;很明显，如果 &lt;span class=&#34;math inline&#34;&gt;\(n\bmod 2 = 1\)&lt;/span&gt;，则答案为奇约数多。&lt;/p&gt;
&lt;p&gt;否则考察约数们怎么来的。对于一个偶数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 我们总能将其这样拆分：&lt;span class=&#34;math inline&#34;&gt;\(n = 2^k\times p\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为奇数）。那么如果 &lt;span class=&#34;math inline&#34;&gt;\(k = 1\)&lt;/span&gt;，则不难发现奇偶约数一样多，否则肯定是偶约数多。&lt;/p&gt;
&lt;h4 id=&#34;arc116b---products-of-min-max&#34;&gt;ARC116B - Products of Min-Max&lt;/h4&gt;
&lt;p&gt;给定一含正整数的集合 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{S\subseteq A}\max_{a\in S}\lbrace a\rbrace\min_{a\in S}\lbrace a\rbrace\bmod{998244353}
\]&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;比较妙的题。&lt;/p&gt;
&lt;p&gt;首先考虑把最大值和最小值拎出来考虑贡献：将其 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 从小到大排序。&lt;/p&gt;
&lt;p&gt;然后假设此时 &lt;span class=&#34;math inline&#34;&gt;\(i&amp;lt;j\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a_i\le a_j\)&lt;/span&gt;，这一对元素贡献的子集个数为 &lt;span class=&#34;math inline&#34;&gt;\(2^{j - i - 1}\)&lt;/span&gt;。所以答案就为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^{n - 1}\sum_{j = i + 1}^na_ia_j\cdot2^{j - i} + \sum_{i = 1}^na_i^2
\]&lt;/span&gt; 化简下来可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^{n - 1}\left(a_i\cdot 2^{-i}\sum_{j = i + 1}^na_j\cdot2^{j - 1}\right) + \sum_{i = 1}^na_i^2
\]&lt;/span&gt; 预处理 &lt;span class=&#34;math inline&#34;&gt;\(a_i2^{i - 1}\)&lt;/span&gt; 的后缀和就可以直接做了，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;arc116c---multiple-sequences&#34;&gt;ARC116C - Multiple Sequences&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n,m\le 2\times 10^5\)&lt;/span&gt;），求满足下列条件的长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的整数序列 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的个数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le A_i\le m\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(A_{i + 1}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 的整数倍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;很妙的计数题。&lt;/p&gt;
&lt;p&gt;考虑从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 枚举 &lt;span class=&#34;math inline&#34;&gt;\(A_n\)&lt;/span&gt; 的值。我们可以发现其就是把 &lt;span class=&#34;math inline&#34;&gt;\(A_n\)&lt;/span&gt; 每个质因子给安排在 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个不同的位置上，求方案数。但是此时需要对每个质因子分开考虑，假设 &lt;span class=&#34;math inline&#34;&gt;\(A_n = \prod p_i^{c_i}\)&lt;/span&gt;，则我们需要对每个质因子都用插板法然后再乘起来得到总方案，即 &lt;span class=&#34;math display&#34;&gt;\[
f(A_n) = \prod\binom{n + c_i - 1}{c_i}
\]&lt;/span&gt; 最后把所有的结果加起来即为答案。&lt;/p&gt;
&lt;h3 id=&#34;arc117&#34;&gt;ARC117&lt;/h3&gt;
&lt;p&gt;A + B + C + D&lt;/p&gt;
&lt;h4 id=&#34;arc117c---tricolor-pyramid&#34;&gt;ARC117C - Tricolor Pyramid&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc117/tasks/arc117_c&#34;&gt;题目&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比较妙的题。首先把颜色分别看成 &lt;span class=&#34;math inline&#34;&gt;\(0,1,2\)&lt;/span&gt;，那么上一层的方块就由 &lt;span class=&#34;math inline&#34;&gt;\(-(a_1 + a_2) \bmod 3\)&lt;/span&gt; 可以得到。把所有的一直累加上去就是杨辉三角的形式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.atcoder.jp/arc117/6d089e1cdfb0ed3c0bf6daee87fc198e.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;图源 AtCoder 官方题解。&lt;/p&gt;
&lt;p&gt;所以求二项式系数即可，使用 Lucas 定理。&lt;/p&gt;
&lt;h4 id=&#34;arc117d---miracle-tree&#34;&gt;ARC117D - Miracle Tree&lt;/h4&gt;
&lt;p&gt;给一棵树的每个顶点标号，满足 &lt;span class=&#34;math inline&#34;&gt;\(E_i \ge 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(|E_i - E_j|\le \operatorname{dist}(i, j)\)&lt;/span&gt;。寻找一种最大标号最小的方案并输出。&lt;/p&gt;
&lt;p&gt;相当好的思维题。&lt;/p&gt;
&lt;p&gt;首先考虑随便标一个图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.atcoder.jp/arc117/a4103a74b2e0196e17a1a389f8fad851.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;图源 AtCoder 官方题解。&lt;/p&gt;
&lt;p&gt;不难发现我们标的号应该为：&lt;span class=&#34;math inline&#34;&gt;\(\lbrace1, 2, 3, 5, 8, 9\rbrace\)&lt;/span&gt; 是最优的。相当于就是遇到一个点，首先走一条子链，然后回溯回来的时候仍然需要统计回溯链长，然后加到下一条子链的贡献里面去（因为要 &lt;span class=&#34;math inline&#34;&gt;\(|E_i - E_j|\le \operatorname{dist}(i, j)\)&lt;/span&gt;）。我们自然希望的是尽可能回溯的少，所以做的时候从直径的一端开始走，然后遇到分叉就优先走非直径的边。&lt;/p&gt;
&lt;h3 id=&#34;arc118&#34;&gt;ARC118&lt;/h3&gt;
&lt;p&gt;A&lt;/p&gt;
&lt;h4 id=&#34;arc118a---tax-included-price&#34;&gt;ARC118A - Tax Included Price&lt;/h4&gt;
&lt;p&gt;打表可做。&lt;/p&gt;
&lt;h4 id=&#34;arc118b---village-of-m-people&#34;&gt;ARC118B - Village of M People&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 以及 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt;，构造 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(\sum B_i = M\)&lt;/span&gt; 且 &lt;span class=&#34;math display&#34;&gt;\[
\max_i\left|\frac{B_i}{M} - \frac{A_i}{N}\right|
\]&lt;/span&gt; 最小。&lt;/p&gt;
&lt;p&gt;“最大的最小”，二分答案即可。&lt;/p&gt;
&lt;p&gt;要让 &lt;span class=&#34;math inline&#34;&gt;\(\max_i\left|\frac{B_i}{M} - \frac{A_i}{N}\right|\)&lt;/span&gt; 最小，即为让 &lt;span class=&#34;math inline&#34;&gt;\(\max_i|B_iN - A_iM|\)&lt;/span&gt; 最小，设为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;然后我们可以得到 &lt;span class=&#34;math inline&#34;&gt;\(\forall i, \left\lceil \frac{MA_i-x}{N}\right\rceil\leq B_i\leq \left\lfloor\frac{MA_i+x}{N}\right\rfloor\)&lt;/span&gt;。这样子 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt; 的上界和下界就出来了，设为 &lt;span class=&#34;math inline&#34;&gt;\(L_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(R_i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后，如果 &lt;span class=&#34;math inline&#34;&gt;\(\sum L_i\le M\le \sum R_i\)&lt;/span&gt;，则答案一定是可以被构造出来的。这样子我们就可以完成对于一个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的 check。&lt;/p&gt;
&lt;p&gt;如何构造这个答案呢？把所有的 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt; 设为 &lt;span class=&#34;math inline&#34;&gt;\(L_i\)&lt;/span&gt;，然后依次上调来补齐余量 &lt;span class=&#34;math inline&#34;&gt;\(M - \sum L_i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这题就做完了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb15-11&#34;&gt;&lt;a href=&#34;#cb15-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb15-12&#34;&gt;&lt;a href=&#34;#cb15-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-13&#34;&gt;&lt;a href=&#34;#cb15-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb15-14&#34;&gt;&lt;a href=&#34;#cb15-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb15-15&#34;&gt;&lt;a href=&#34;#cb15-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb15-16&#34;&gt;&lt;a href=&#34;#cb15-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb15-17&#34;&gt;&lt;a href=&#34;#cb15-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb15-18&#34;&gt;&lt;a href=&#34;#cb15-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb15-19&#34;&gt;&lt;a href=&#34;#cb15-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb15-20&#34;&gt;&lt;a href=&#34;#cb15-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-21&#34;&gt;&lt;a href=&#34;#cb15-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, a[maxn], n, m;&lt;/span&gt;
&lt;span id=&#34;cb15-22&#34;&gt;&lt;a href=&#34;#cb15-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; L[maxn], R[maxn], suml, sumr;&lt;/span&gt;
&lt;span id=&#34;cb15-23&#34;&gt;&lt;a href=&#34;#cb15-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-24&#34;&gt;&lt;a href=&#34;#cb15-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb15-25&#34;&gt;&lt;a href=&#34;#cb15-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb15-26&#34;&gt;&lt;a href=&#34;#cb15-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-27&#34;&gt;&lt;a href=&#34;#cb15-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb15-28&#34;&gt;&lt;a href=&#34;#cb15-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb15-29&#34;&gt;&lt;a href=&#34;#cb15-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(L, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; L), memset(R, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; R);&lt;/span&gt;
&lt;span id=&#34;cb15-30&#34;&gt;&lt;a href=&#34;#cb15-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    suml = sumr = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-31&#34;&gt;&lt;a href=&#34;#cb15-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k)&lt;/span&gt;
&lt;span id=&#34;cb15-32&#34;&gt;&lt;a href=&#34;#cb15-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb15-33&#34;&gt;&lt;a href=&#34;#cb15-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        L[i] = max(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (m * a[i] - x + n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / n);&lt;/span&gt;
&lt;span id=&#34;cb15-34&#34;&gt;&lt;a href=&#34;#cb15-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        R[i] = (m * a[i] + x) / n;&lt;/span&gt;
&lt;span id=&#34;cb15-35&#34;&gt;&lt;a href=&#34;#cb15-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        suml += L[i], sumr += R[i];&lt;/span&gt;
&lt;span id=&#34;cb15-36&#34;&gt;&lt;a href=&#34;#cb15-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-37&#34;&gt;&lt;a href=&#34;#cb15-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; suml &amp;lt;= m &amp;amp;&amp;amp; m &amp;lt;= sumr;&lt;/span&gt;
&lt;span id=&#34;cb15-38&#34;&gt;&lt;a href=&#34;#cb15-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb15-39&#34;&gt;&lt;a href=&#34;#cb15-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-40&#34;&gt;&lt;a href=&#34;#cb15-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb15-41&#34;&gt;&lt;a href=&#34;#cb15-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb15-42&#34;&gt;&lt;a href=&#34;#cb15-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    k = read(), n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb15-43&#34;&gt;&lt;a href=&#34;#cb15-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) a[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb15-44&#34;&gt;&lt;a href=&#34;#cb15-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = n * m, x;&lt;/span&gt;
&lt;span id=&#34;cb15-45&#34;&gt;&lt;a href=&#34;#cb15-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r)&lt;/span&gt;
&lt;span id=&#34;cb15-46&#34;&gt;&lt;a href=&#34;#cb15-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb15-47&#34;&gt;&lt;a href=&#34;#cb15-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-48&#34;&gt;&lt;a href=&#34;#cb15-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (check(mid)) x = mid, r = mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-49&#34;&gt;&lt;a href=&#34;#cb15-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-50&#34;&gt;&lt;a href=&#34;#cb15-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-51&#34;&gt;&lt;a href=&#34;#cb15-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    check(x);&lt;/span&gt;
&lt;span id=&#34;cb15-52&#34;&gt;&lt;a href=&#34;#cb15-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sumb = suml;&lt;/span&gt;
&lt;span id=&#34;cb15-53&#34;&gt;&lt;a href=&#34;#cb15-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k)&lt;/span&gt;
&lt;span id=&#34;cb15-54&#34;&gt;&lt;a href=&#34;#cb15-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb15-55&#34;&gt;&lt;a href=&#34;#cb15-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = min(R[i] - L[i], m - sumb);&lt;/span&gt;
&lt;span id=&#34;cb15-56&#34;&gt;&lt;a href=&#34;#cb15-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sumb += x;&lt;/span&gt;
&lt;span id=&#34;cb15-57&#34;&gt;&lt;a href=&#34;#cb15-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, x + L[i]);&lt;/span&gt;
&lt;span id=&#34;cb15-58&#34;&gt;&lt;a href=&#34;#cb15-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-59&#34;&gt;&lt;a href=&#34;#cb15-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-60&#34;&gt;&lt;a href=&#34;#cb15-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;arc118c---coprime-set&#34;&gt;ARC118C - Coprime Set&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(3\le N\le 2500\)&lt;/span&gt;），构造 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个正整数 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 使得：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 互不相同且 &lt;span class=&#34;math inline&#34;&gt;\(A_i\in[1, 10000]\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i \not= j, \gcd(A_i, A_j) &amp;gt; 1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd_i\{A_i\} = 1\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个题需要一个引理：对于一系列已经满足条件的 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt;，将任意 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 的倍数加进去，新得到的集合也是满足条件的。&lt;/p&gt;
&lt;p&gt;正确性比较显然，不证。所以从 &lt;span class=&#34;math inline&#34;&gt;\(\{6, 10, 15\}\)&lt;/span&gt; 出发，就可以构造出所有的合法答案。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[&lt;span class=&#34;dv&#34;&gt;10005&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n);&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt; &amp;lt;= &lt;span class=&#34;dv&#34;&gt;10000&lt;/span&gt;; ++i) vis[i * &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; &amp;lt;= &lt;span class=&#34;dv&#34;&gt;10000&lt;/span&gt;; ++i) vis[i * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt; &amp;lt;= &lt;span class=&#34;dv&#34;&gt;10000&lt;/span&gt;; ++i) vis[i * &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;), vis[&lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;] = vis[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;] = vis[&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;dv&#34;&gt;10000&lt;/span&gt; &amp;amp;&amp;amp; cnt &amp;lt;= n; ++i) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, i), ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;arc119&#34;&gt;ARC119&lt;/h3&gt;
&lt;p&gt;A + B&lt;/p&gt;
&lt;h4 id=&#34;arc119b---electric-board&#34;&gt;ARC119B - Electric Board&lt;/h4&gt;
&lt;p&gt;给定两个 01 串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，每次对 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的操作可以选取 &lt;span class=&#34;math inline&#34;&gt;\((l,r)\)&lt;/span&gt;，满足&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(S_l = 0\land S_{l+ 1} = S_{l + 2} = \cdots = S_{r} = 1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(S_l = S_{l + 1} = \cdots = S_{r - 1} = 1 \land S_r = 0\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后交换 &lt;span class=&#34;math inline&#34;&gt;\(S_l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt;。问最少多少次操作之后可以将 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们不妨将每次操作看为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的移动操作，因为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 是连续动的，不好考虑。那么就只需要从左往右进行贪心，把 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的每个 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 依次往右移直到与 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 对应。记录下每个 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的位置然后直接贪心就可以了。&lt;/p&gt;
&lt;h4 id=&#34;arc119c---arc-wrecker-2&#34;&gt;ARC119C - ARC Wrecker 2&lt;/h4&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt;，对于区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，每次可选择 &lt;span class=&#34;math inline&#34;&gt;\([l, r - 1]\)&lt;/span&gt; 间的一个整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(A_x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(A_{x + 1}\)&lt;/span&gt; 同时加一或减一。问有多少个 &lt;span class=&#34;math inline&#34;&gt;\([l,r ]\)&lt;/span&gt; 可以在有限次操作之后变为全 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;比较妙的思路。&lt;/p&gt;
&lt;p&gt;每次操作相当于是给奇数下标的数和偶数下标的数同时加减 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，所以为了最后得到全 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，一开始选的区间中奇下标和偶下标数的和必须相等。&lt;/p&gt;
&lt;p&gt;注意到这条性质之后记录一下前缀和，然后用 &lt;code&gt;map&lt;/code&gt; 随便记录以下就可以做了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll ans, a[maxn], s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;map&amp;lt;ll, ll&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb17-8&#34;&gt;&lt;a href=&#34;#cb17-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb17-9&#34;&gt;&lt;a href=&#34;#cb17-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read();&lt;/span&gt;
&lt;span id=&#34;cb17-10&#34;&gt;&lt;a href=&#34;#cb17-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) a[i] = read() * ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-11&#34;&gt;&lt;a href=&#34;#cb17-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) s[i] = a[i] + s[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ++m[s[i]];&lt;/span&gt;
&lt;span id=&#34;cb17-12&#34;&gt;&lt;a href=&#34;#cb17-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ++m[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb17-13&#34;&gt;&lt;a href=&#34;#cb17-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;map&amp;lt;ll, ll&amp;gt;::iterator it = m.begin(); it != m.end(); ++it)&lt;/span&gt;
&lt;span id=&#34;cb17-14&#34;&gt;&lt;a href=&#34;#cb17-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += (*it).second * ((*it).second - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-15&#34;&gt;&lt;a href=&#34;#cb17-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb17-16&#34;&gt;&lt;a href=&#34;#cb17-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-17&#34;&gt;&lt;a href=&#34;#cb17-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;答案的上界是会爆 &lt;code&gt;int&lt;/code&gt;，要开 &lt;code&gt;long long&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;arc119d---grid-repainting-3&#34;&gt;ARC119D - Grid Repainting 3&lt;/h4&gt;
&lt;p&gt;给定一 &lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 行 &lt;span class=&#34;math inline&#34;&gt;\(W\)&lt;/span&gt; 列的方格，每个方格一开始涂了红色或者蓝色。进行如下操作：对于当前的每个红色格子，可以选择它并将其所在的一行或一列全部涂满白色。问最后最多多少个格子可以是白色并构造方案。&lt;/p&gt;
&lt;p&gt;对于这种方格并且操作是对于整行或整列的题，很容易想到构建一张二分图来解决问题。左部的点代表每行，右部的点代表每列，一个红格子代表一条边。&lt;/p&gt;
&lt;p&gt;然后我们分析这个涂色方案。涂掉一整行/列相当于废掉这一个点，同时把这个点相关的所有边全部废掉（即为废掉在这行/列上的红格子）。当然废掉这个点的条件是它能引出至少一条边（即必须有至少一个红格子在这行/列上面）。依据这个想法，我们肯定希望一个连通分量内，废掉的点（即涂掉的行/列）越多越好，考虑如何使它最多。&lt;/p&gt;
&lt;p&gt;注意到，一个连通分量删到最后一定会剩下一个点（至于为什么可以自己思考一下）。我们尝试构造一下方案：假设我们剩点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，那么就可以从 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 构建这个连通分量的 dfs 生成树，然后从叶子节点往上删点，这样一定可以保证是合法而且除了 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，其他的点会被删干净。&lt;/p&gt;
&lt;p&gt;一张图是有很多个连通分量的，而我们需要对每个连通分量进行决策：留下哪个点最优。我们要涂白的格子最多，假设涂了 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 行 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 列，则剩下的蓝格子为 &lt;span class=&#34;math inline&#34;&gt;\((h - r)(w - c)\)&lt;/span&gt; 个，我们需要将其最小化。不难发现我们可以直接枚举留下来的行点和列点的个数，然后找到最优解就直接决策每个连通分量剩下行还是列（反正哪一行哪一列不重要），这题就做完了。&lt;/p&gt;
&lt;p&gt;主要的流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;染色标记连通分量&lt;/li&gt;
&lt;li&gt;决策剩下多少列点和多少行点&lt;/li&gt;
&lt;li&gt;dfs 记录答案&lt;/li&gt;
&lt;li&gt;输出&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;arc120&#34;&gt;ARC120&lt;/h3&gt;
&lt;p&gt;A + B&lt;/p&gt;
&lt;h4 id=&#34;arc120b---uniformly-distributed&#34;&gt;ARC120B - Uniformly Distributed&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(H \times W\)&lt;/span&gt; 的方格，其中一些涂了红色，一些涂了蓝色，一些什么都没涂。问对于剩余的格子，有多少种涂色的方案使得从 &lt;span class=&#34;math inline&#34;&gt;\((1,1)\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\((H,W)\)&lt;/span&gt; 上的所有路径经过的红格子数量都相等。&lt;/p&gt;
&lt;p&gt;不难发现，对于一个从右上到左下的副对角线，其要么全为红色，要么全为蓝色。大体的理由如下：（非严格证明）&lt;/p&gt;
&lt;p&gt;从 &lt;span class=&#34;math inline&#34;&gt;\((1,1)\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\((H,W)\)&lt;/span&gt; 一定是会经过 &lt;span class=&#34;math inline&#34;&gt;\(H + W - 1\)&lt;/span&gt; 条如上面这样的副对角线的，所以我们一定要保证无论怎么穿过一条副对角线，其经过的红格子数量都是相同的。&lt;/p&gt;
&lt;p&gt;所以直接做就行了，对于一条有红格子的副对角线，其对答案的贡献是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;；对于一条全空的副对角线，其对答案的贡献为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;（两种涂色方案）；对于既有蓝色又有红色的副对角线，其对答案的贡献为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。把这些贡献用乘法原理合并即可。&lt;/p&gt;
&lt;h4 id=&#34;arc120c---swaps-2&#34;&gt;ARC120C - Swaps 2&lt;/h4&gt;
&lt;p&gt;给定两个长度为 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;。问对 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 进行有限次如下操作后能否使 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择一个正整数 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(1\le i\lt N\)&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;交换 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(A_{i+ 1}\)&lt;/span&gt; 的值&lt;/li&gt;
&lt;li&gt;使 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 加一&lt;/li&gt;
&lt;li&gt;使 &lt;span class=&#34;math inline&#34;&gt;\(A_{i + 1}\)&lt;/span&gt; 减一&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果能，问最少操作步数。&lt;/p&gt;
&lt;p&gt;先考虑解的存在性。&lt;/p&gt;
&lt;p&gt;我们观察一个数移动的情况：显然是往右走就减小，往左走就增大。设 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 的新位置为 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt;，则必然有： &lt;span class=&#34;math display&#34;&gt;\[
B_{D_i} = A_i + i - D_i
\]&lt;/span&gt; 移项， &lt;span class=&#34;math display&#34;&gt;\[
B_{D_i} + D_i = A_i + i
\]&lt;/span&gt; 发现两边的形式很像，所以我们只需要建立两个新序列 &lt;span class=&#34;math inline&#34;&gt;\(\{A_i + i\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{B_i + i\}\)&lt;/span&gt; 然后将其值排序判断其能不能一一对应就可以判断有没有解了。&lt;/p&gt;
&lt;p&gt;然后考虑解的最优性。&lt;/p&gt;
&lt;p&gt;刚才的排序中，若按照值为第一关键字排序，原下标为第二关键字排序，则我们不难证明，此时一一对应的结果是最优的。这样子 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt; 就找到了。&lt;/p&gt;
&lt;p&gt;然后我们把 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 移到 &lt;span class=&#34;math inline&#34;&gt;\(A_{D_i}\)&lt;/span&gt; 的过程很像冒泡排序，用线段树维护一下 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中元素的下标就可以做了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-14&#34;&gt;&lt;a href=&#34;#cb18-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb18-15&#34;&gt;&lt;a href=&#34;#cb18-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-16&#34;&gt;&lt;a href=&#34;#cb18-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb18-17&#34;&gt;&lt;a href=&#34;#cb18-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-18&#34;&gt;&lt;a href=&#34;#cb18-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb18-19&#34;&gt;&lt;a href=&#34;#cb18-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-20&#34;&gt;&lt;a href=&#34;#cb18-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-21&#34;&gt;&lt;a href=&#34;#cb18-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node&lt;/span&gt;
&lt;span id=&#34;cb18-22&#34;&gt;&lt;a href=&#34;#cb18-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-23&#34;&gt;&lt;a href=&#34;#cb18-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, id;&lt;/span&gt;
&lt;span id=&#34;cb18-24&#34;&gt;&lt;a href=&#34;#cb18-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;lt;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; node &amp;amp;b)&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-25&#34;&gt;&lt;a href=&#34;#cb18-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb18-26&#34;&gt;&lt;a href=&#34;#cb18-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val == b.val ? id &amp;lt; b.id : val &amp;lt; b.val;&lt;/span&gt;
&lt;span id=&#34;cb18-27&#34;&gt;&lt;a href=&#34;#cb18-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-28&#34;&gt;&lt;a href=&#34;#cb18-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} ai[maxn], bi[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-29&#34;&gt;&lt;a href=&#34;#cb18-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-30&#34;&gt;&lt;a href=&#34;#cb18-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn], b[maxn], n;&lt;/span&gt;
&lt;span id=&#34;cb18-31&#34;&gt;&lt;a href=&#34;#cb18-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-32&#34;&gt;&lt;a href=&#34;#cb18-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; myabs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb18-33&#34;&gt;&lt;a href=&#34;#cb18-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-34&#34;&gt;&lt;a href=&#34;#cb18-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ? x : -x;&lt;/span&gt;
&lt;span id=&#34;cb18-35&#34;&gt;&lt;a href=&#34;#cb18-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-36&#34;&gt;&lt;a href=&#34;#cb18-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-37&#34;&gt;&lt;a href=&#34;#cb18-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], tag[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], d[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-38&#34;&gt;&lt;a href=&#34;#cb18-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-39&#34;&gt;&lt;a href=&#34;#cb18-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-40&#34;&gt;&lt;a href=&#34;#cb18-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-41&#34;&gt;&lt;a href=&#34;#cb18-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-42&#34;&gt;&lt;a href=&#34;#cb18-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-43&#34;&gt;&lt;a href=&#34;#cb18-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb18-44&#34;&gt;&lt;a href=&#34;#cb18-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-45&#34;&gt;&lt;a href=&#34;#cb18-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb18-46&#34;&gt;&lt;a href=&#34;#cb18-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;(f[k] = i);&lt;/span&gt;
&lt;span id=&#34;cb18-47&#34;&gt;&lt;a href=&#34;#cb18-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(i, M, L);&lt;/span&gt;
&lt;span id=&#34;cb18-48&#34;&gt;&lt;a href=&#34;#cb18-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R);&lt;/span&gt;
&lt;span id=&#34;cb18-49&#34;&gt;&lt;a href=&#34;#cb18-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[k] = f[L] + f[R];&lt;/span&gt;
&lt;span id=&#34;cb18-50&#34;&gt;&lt;a href=&#34;#cb18-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-51&#34;&gt;&lt;a href=&#34;#cb18-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-52&#34;&gt;&lt;a href=&#34;#cb18-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-53&#34;&gt;&lt;a href=&#34;#cb18-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushdown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb18-54&#34;&gt;&lt;a href=&#34;#cb18-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-55&#34;&gt;&lt;a href=&#34;#cb18-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tag[L] += tag[k], tag[R] += tag[k];&lt;/span&gt;
&lt;span id=&#34;cb18-56&#34;&gt;&lt;a href=&#34;#cb18-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[L] += (M - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * tag[k];&lt;/span&gt;
&lt;span id=&#34;cb18-57&#34;&gt;&lt;a href=&#34;#cb18-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[R] += (j - M) * tag[k];&lt;/span&gt;
&lt;span id=&#34;cb18-58&#34;&gt;&lt;a href=&#34;#cb18-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tag[k] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-59&#34;&gt;&lt;a href=&#34;#cb18-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-60&#34;&gt;&lt;a href=&#34;#cb18-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-61&#34;&gt;&lt;a href=&#34;#cb18-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-62&#34;&gt;&lt;a href=&#34;#cb18-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d)&lt;/span&gt;
&lt;span id=&#34;cb18-63&#34;&gt;&lt;a href=&#34;#cb18-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-64&#34;&gt;&lt;a href=&#34;#cb18-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-65&#34;&gt;&lt;a href=&#34;#cb18-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;gt;= x &amp;amp;&amp;amp; j &amp;lt;= y)&lt;/span&gt;
&lt;span id=&#34;cb18-66&#34;&gt;&lt;a href=&#34;#cb18-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb18-67&#34;&gt;&lt;a href=&#34;#cb18-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[k] += d * (j - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-68&#34;&gt;&lt;a href=&#34;#cb18-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tag[k] += d;&lt;/span&gt;
&lt;span id=&#34;cb18-69&#34;&gt;&lt;a href=&#34;#cb18-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-70&#34;&gt;&lt;a href=&#34;#cb18-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-71&#34;&gt;&lt;a href=&#34;#cb18-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(i, j, k);&lt;/span&gt;
&lt;span id=&#34;cb18-72&#34;&gt;&lt;a href=&#34;#cb18-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(i, M, L, x, y, d);&lt;/span&gt;
&lt;span id=&#34;cb18-73&#34;&gt;&lt;a href=&#34;#cb18-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) modify(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, y, d);&lt;/span&gt;
&lt;span id=&#34;cb18-74&#34;&gt;&lt;a href=&#34;#cb18-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[k] = f[L] + f[R];&lt;/span&gt;
&lt;span id=&#34;cb18-75&#34;&gt;&lt;a href=&#34;#cb18-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-76&#34;&gt;&lt;a href=&#34;#cb18-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-77&#34;&gt;&lt;a href=&#34;#cb18-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-78&#34;&gt;&lt;a href=&#34;#cb18-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb18-79&#34;&gt;&lt;a href=&#34;#cb18-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-80&#34;&gt;&lt;a href=&#34;#cb18-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[k];&lt;/span&gt;
&lt;span id=&#34;cb18-81&#34;&gt;&lt;a href=&#34;#cb18-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(i, j, k);&lt;/span&gt;
&lt;span id=&#34;cb18-82&#34;&gt;&lt;a href=&#34;#cb18-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(i, M, L, x);&lt;/span&gt;
&lt;span id=&#34;cb18-83&#34;&gt;&lt;a href=&#34;#cb18-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x);&lt;/span&gt;
&lt;span id=&#34;cb18-84&#34;&gt;&lt;a href=&#34;#cb18-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-85&#34;&gt;&lt;a href=&#34;#cb18-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-86&#34;&gt;&lt;a href=&#34;#cb18-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb18-87&#34;&gt;&lt;a href=&#34;#cb18-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb18-88&#34;&gt;&lt;a href=&#34;#cb18-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read();&lt;/span&gt;
&lt;span id=&#34;cb18-89&#34;&gt;&lt;a href=&#34;#cb18-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) a[i] = read(), ai[i].val = a[i] + i, ai[i].id = i;&lt;/span&gt;
&lt;span id=&#34;cb18-90&#34;&gt;&lt;a href=&#34;#cb18-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) b[i] = read(), bi[i].val = b[i] + i, bi[i].id = i;&lt;/span&gt;
&lt;span id=&#34;cb18-91&#34;&gt;&lt;a href=&#34;#cb18-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(ai + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ai + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-92&#34;&gt;&lt;a href=&#34;#cb18-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(bi + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, bi + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-93&#34;&gt;&lt;a href=&#34;#cb18-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb18-94&#34;&gt;&lt;a href=&#34;#cb18-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ai[i].val != bi[i].val) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;-1&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-95&#34;&gt;&lt;a href=&#34;#cb18-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; d[bi[i].id] = ai[i].id;&lt;/span&gt;
&lt;span id=&#34;cb18-96&#34;&gt;&lt;a href=&#34;#cb18-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-97&#34;&gt;&lt;a href=&#34;#cb18-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-98&#34;&gt;&lt;a href=&#34;#cb18-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb18-99&#34;&gt;&lt;a href=&#34;#cb18-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb18-100&#34;&gt;&lt;a href=&#34;#cb18-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += abs(query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d[i]) - i);&lt;/span&gt;
&lt;span id=&#34;cb18-101&#34;&gt;&lt;a href=&#34;#cb18-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d[i], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-102&#34;&gt;&lt;a href=&#34;#cb18-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-103&#34;&gt;&lt;a href=&#34;#cb18-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb18-104&#34;&gt;&lt;a href=&#34;#cb18-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-105&#34;&gt;&lt;a href=&#34;#cb18-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;arc120d---bracket-score-2&#34;&gt;ARC120D - Bracket Score 2&lt;/h4&gt;
&lt;p&gt;给定一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(2N\)&lt;/span&gt; 的整数序列 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt;，依照其构造一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(2N\)&lt;/span&gt; 的合法括号序列，使得其分数最大，分数的计算方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于每一对匹配的括号 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(S_j\)&lt;/span&gt;，其贡献为 &lt;span class=&#34;math inline&#34;&gt;\(|A_j - A_i|\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;将每一对匹配的括号的分数加起来得到总分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;眼前一亮的构造。&lt;/p&gt;
&lt;p&gt;不难发现，让大的尽量大，小的尽量小就可以使得总分最大。因此选出最大的 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt;，标记为黑色，剩余的标记为白色。然后根据一黑一白配对的原则直接构造括号序列即可。&lt;/p&gt;
&lt;h3 id=&#34;arc123&#34;&gt;ARC123&lt;/h3&gt;
&lt;p&gt;A + B + C&lt;/p&gt;
&lt;h4 id=&#34;arc123b---increasing-triples&#34;&gt;ARC123&lt;strong&gt;B - Increasing Triples&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(10^5\)&lt;/span&gt; 级别的序列，可以任意排列，问最多能有多少 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(A_i &amp;lt; B_i &amp;lt; C_i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;用堆实现的贪心。&lt;/p&gt;
&lt;h4 id=&#34;arc123c---1-2-3---decomposition&#34;&gt;ARC123C - 1, 2, 3 - Decomposition&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，需要求出最小的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 使得存在长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(\{A_i\}\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\sum A_i = n\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 的每个数位都为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 之一。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; （&lt;span class=&#34;math inline&#34;&gt;\(1000\)&lt;/span&gt;）组数据，&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{18}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑数位 dp。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; solve() {&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(f, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = strlen(a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[i][j][k]) {&lt;/span&gt;
&lt;span id=&#34;cb19-10&#34;&gt;&lt;a href=&#34;#cb19-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    FOR(l, max((j + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, k), min(j, a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb19-11&#34;&gt;&lt;a href=&#34;#cb19-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;][l] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-12&#34;&gt;&lt;a href=&#34;#cb19-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    FOR(l, max((j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, k), min(j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb19-13&#34;&gt;&lt;a href=&#34;#cb19-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;][l] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-14&#34;&gt;&lt;a href=&#34;#cb19-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb19-15&#34;&gt;&lt;a href=&#34;#cb19-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb19-16&#34;&gt;&lt;a href=&#34;#cb19-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb19-17&#34;&gt;&lt;a href=&#34;#cb19-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb19-18&#34;&gt;&lt;a href=&#34;#cb19-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-19&#34;&gt;&lt;a href=&#34;#cb19-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb19-20&#34;&gt;&lt;a href=&#34;#cb19-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb19-21&#34;&gt;&lt;a href=&#34;#cb19-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[n][i][j])&lt;/span&gt;
&lt;span id=&#34;cb19-22&#34;&gt;&lt;a href=&#34;#cb19-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans = min(ans, max((i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, j));&lt;/span&gt;
&lt;span id=&#34;cb19-23&#34;&gt;&lt;a href=&#34;#cb19-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb19-24&#34;&gt;&lt;a href=&#34;#cb19-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;arc124&#34;&gt;ARC124&lt;/h3&gt;
&lt;p&gt;状态很差 A + B&lt;/p&gt;
&lt;h3 id=&#34;arc125&#34;&gt;ARC125&lt;/h3&gt;
&lt;p&gt;A + B + C&lt;/p&gt;
&lt;h4 id=&#34;arc125a---dial-up&#34;&gt;ARC125A - Dial Up&lt;/h4&gt;
&lt;p&gt;直接贪心即可，细节略多。&lt;/p&gt;
&lt;h4 id=&#34;arc125b---squares&#34;&gt;ARC125B - Squares&lt;/h4&gt;
&lt;p&gt;求有序数对 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le x, y\le n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{12}\)&lt;/span&gt;）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(x^2 - y\)&lt;/span&gt; 为完全平方数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;的数量模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;考虑令 &lt;span class=&#34;math inline&#34;&gt;\(x^2 - y = z^2\)&lt;/span&gt;，然后平方差怼过去就是 &lt;span class=&#34;math inline&#34;&gt;\((x + z)(x - z) = y\)&lt;/span&gt;。令 &lt;span class=&#34;math inline&#34;&gt;\(x + z = p\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x - z = q\)&lt;/span&gt;。则问题化为求 &lt;span class=&#34;math inline&#34;&gt;\((p, q)\)&lt;/span&gt; 的数量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p\ge q\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(x = \dfrac{p + q}{2}\)&lt;/span&gt; 为整数；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le x = \dfrac{p + q}{2}\le n\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1 \le y = pq\le n\)&lt;/span&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 枚举 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;，然后 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 要满足 &lt;span class=&#34;math inline&#34;&gt;\(q\le p\le n\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(p\equiv q\pmod 2\)&lt;/span&gt;。这个东西可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 算。于是总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;arc125c---lis-to-original-sequence&#34;&gt;ARC125C - LIS to Original Sequence&lt;/h4&gt;
&lt;p&gt;构造题。&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个单调增整数 &lt;span class=&#34;math inline&#34;&gt;\(\{a_1, \cdots, a_k\}\)&lt;/span&gt;，构造字典序最小的排列 &lt;span class=&#34;math inline&#34;&gt;\(\{p_1, \cdots, p_n\}\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(\{p_i\}\)&lt;/span&gt; 的 LIS 之一。&lt;/p&gt;
&lt;p&gt;考虑子问题。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(k = 1\)&lt;/span&gt; 时，答案显然为 &lt;span class=&#34;math inline&#34;&gt;\(\{n, n - 1, n - 2, \cdots, 1\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(k \ge 2\)&lt;/span&gt; 时，考虑到 LIS 的性质，&lt;span class=&#34;math inline&#34;&gt;\(p_1 = a_1\)&lt;/span&gt;，然后如果 &lt;span class=&#34;math inline&#34;&gt;\(p_1\not= 1\)&lt;/span&gt;，为了使得字典序最小且不破坏最长 LIS 的性质，&lt;span class=&#34;math inline&#34;&gt;\(p_2 = 1\)&lt;/span&gt;。然后就可以依次类推下去推导。&lt;/p&gt;
&lt;p&gt;结论是，对于 &lt;span class=&#34;math inline&#34;&gt;\(1\le i\le k - 1\)&lt;/span&gt;，可以在 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(a_{i + 1}\)&lt;/span&gt; 中插入至多一个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(x &amp;lt; a_i\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x &amp;lt; a_{i + 1}\)&lt;/span&gt;。最后的所有元素降序排列即可。&lt;/p&gt;
&lt;h4 id=&#34;arc125d---unique-subsequence&#34;&gt;ARC125D - Unique Subsequence&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(\{a_1, \cdots, a_n\}\)&lt;/span&gt;，问出现次数为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的子序列的数量。&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(a_0 = 0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_{n + 1} = n + 1\)&lt;/span&gt;，然后设计一个 dp 状态 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(\{a_0, \cdots, a_i\}\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 强制选的答案，则最终答案为所有数字最后出现位置的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 之和。&lt;/p&gt;
&lt;p&gt;注意到我们一定不能让 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 上一个出现的位置 &lt;span class=&#34;math inline&#34;&gt;\(lst_i\)&lt;/span&gt; 前的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 产生贡献，否则选取子序列的方式就不唯一了。然后一定要保证是最后一个出现的数产生贡献，所以用一个 BIT 维护就行了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        last[i] = now[a[i]];&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        now[a[i]] = i;&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    add(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb20-9&#34;&gt;&lt;a href=&#34;#cb20-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb20-10&#34;&gt;&lt;a href=&#34;#cb20-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = sum(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - sum(last[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb20-11&#34;&gt;&lt;a href=&#34;#cb20-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(last[i], -f[last[i]]);&lt;/span&gt;
&lt;span id=&#34;cb20-12&#34;&gt;&lt;a href=&#34;#cb20-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(i, f[i]);&lt;/span&gt;
&lt;span id=&#34;cb20-13&#34;&gt;&lt;a href=&#34;#cb20-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-14&#34;&gt;&lt;a href=&#34;#cb20-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-15&#34;&gt;&lt;a href=&#34;#cb20-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb20-16&#34;&gt;&lt;a href=&#34;#cb20-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now[i])&lt;/span&gt;
&lt;span id=&#34;cb20-17&#34;&gt;&lt;a href=&#34;#cb20-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += f[now[i]];&lt;/span&gt;
&lt;span id=&#34;cb20-18&#34;&gt;&lt;a href=&#34;#cb20-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb20-19&#34;&gt;&lt;a href=&#34;#cb20-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-20&#34;&gt;&lt;a href=&#34;#cb20-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;arc126&#34;&gt;ARC126&lt;/h3&gt;
&lt;p&gt;状态差。A + B。&lt;/p&gt;
&lt;h4 id=&#34;arc126c---maximize-gcd&#34;&gt;ARC126C - Maximize GCD&lt;/h4&gt;
&lt;p&gt;给定一个正整数序列 &lt;span class=&#34;math inline&#34;&gt;\((A_1, \cdots, A_n)\)&lt;/span&gt;，每次操作可以选择一个 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(A_i\gets A_i + 1\)&lt;/span&gt;，问最多 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次操作之后能达到的最大的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd_i\{A_i\}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(1\le A_i, n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 10^{18}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑从 &lt;span class=&#34;math inline&#34;&gt;\([1, A_{\max}]\)&lt;/span&gt; 先枚举这个 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{A_i\}\)&lt;/span&gt;，那么我们要做的就是计算对于每个 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 要进行多少次操作。&lt;/p&gt;
&lt;p&gt;不妨设当前这个 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，则我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，对于 &lt;span class=&#34;math inline&#34;&gt;\((k - 1)x &amp;lt; A_i \le kx\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt;，这个代价是很好算的，随便前缀和优化一下就可以了。所以对于一个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，计算其操作次数的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(A_{\max} / x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;如果到了最后每个数都变成 &lt;span class=&#34;math inline&#34;&gt;\(A_{\max}\)&lt;/span&gt; 了，还有剩余的操作次数，则考虑继续往上走 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor k / n\rfloor\)&lt;/span&gt; 个。总时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n + A_{\max}\ln A_{\max})\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;arc128&#34;&gt;ARC128&lt;/h3&gt;
&lt;p&gt;A + B + C，rk 340。&lt;/p&gt;
&lt;h4 id=&#34;arc128c---max-dot&#34;&gt;ARC128C - Max Dot&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\text{maximize } \sum_{i = 1}^nA_ix_i\\
\text{s.t. } \begin{cases}
0\le x_1\le x_2\\
0\le x_2\le x_3\\
\cdots\\
0\le x_n\le m\\
x_1 + x_2 + \cdots x_n = S
\end{cases}
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;考虑线性规划的解一定在可行域的端点处取到。所以前几个取 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，后几个取 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，中间几个取平均数。枚举前后缀端点即可。&lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;arc131&#34;&gt;ARC131&lt;/h3&gt;
&lt;p&gt;A + B + C + E，rk220。&lt;/p&gt;
&lt;h4 id=&#34;arc131b---grid-repainting-4&#34;&gt;ARC131B - Grid Repainting 4&lt;/h4&gt;
&lt;p&gt;由四色定理知直接构造即可。&lt;/p&gt;
&lt;h4 id=&#34;arc131c---zero-xor&#34;&gt;ARC131C - Zero XOR&lt;/h4&gt;
&lt;p&gt;牛逼题。给定一数集，两人博弈，一步可以删除一个数字。删到剩下数集的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 时获胜。两人都最优方案，问先手是否必胜。&lt;/p&gt;
&lt;p&gt;结论：所有数字异或和 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 若 &lt;span class=&#34;math inline&#34;&gt;\(\in S\)&lt;/span&gt;，则先手必胜，否则若 &lt;span class=&#34;math inline&#34;&gt;\(n \equiv 1\pmod 2\)&lt;/span&gt;，先手必胜，否则后手必胜。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\in S\)&lt;/span&gt; 的情况非常好理解，先手只需要取出 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;否则，游戏将在两人取完所有数字之后结束。最后一个取的人将为赢家。&lt;/p&gt;
&lt;h4 id=&#34;arc131e---christmas-wreath&#34;&gt;ARC131E - Christmas Wreath&lt;/h4&gt;
&lt;p&gt;题意：给完全图的边染色 &lt;span class=&#34;math inline&#34;&gt;\((R,B,W)\)&lt;/span&gt;，要求三种颜色出现的频率相等，且任意一个三元环不能出现三边颜色不一样，求构造方案或输出无解。&lt;/p&gt;
&lt;p&gt;考虑邻接矩阵，发现每一行颜色相同就能满足第二个条件。&lt;/p&gt;
&lt;p&gt;第一个条件就随便构造即可。&lt;/p&gt;
&lt;h3 id=&#34;arc132&#34;&gt;ARC132&lt;/h3&gt;
&lt;h4 id=&#34;arc132a---permutation-grid&#34;&gt;ARC132A - Permutation Grid&lt;/h4&gt;
&lt;p&gt;比较妙的思路。考虑初始构造出一个状态然后根据排列变换。结论为 &lt;span class=&#34;math inline&#34;&gt;\(R_x +C_y\ge n\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;arc132b---shift-and-reverse&#34;&gt;ARC132B - Shift and Reverse&lt;/h4&gt;
&lt;p&gt;可以注意到翻转操作至多进行两次。&lt;/p&gt;
&lt;p&gt;直接分类讨论然后做做就行了。&lt;/p&gt;
&lt;h4 id=&#34;arc132c---almost-sorted&#34;&gt;ARC132C - Almost Sorted&lt;/h4&gt;
&lt;p&gt;比较好的状压题。&lt;/p&gt;
&lt;p&gt;给定一个序列 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_i\in\{-1, 1, 2, 3,\cdots, n\}\)&lt;/span&gt;，和一个整数 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;。问满足如下条件的排列 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 的个数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p_1,\cdots,p_n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1,n]\)&lt;/span&gt; 排列。&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ne -1\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(p_i = a_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(|p_i - i|\le d\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le d\le 5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(d &amp;lt; n\le 500\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先我们注意到，&lt;span class=&#34;math inline&#34;&gt;\(p_i\in[i - d, i + d]\)&lt;/span&gt;，值域区间长度最大为 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt;，所以可以考虑状压起来。我们令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, S}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\([i - d, i + d]\)&lt;/span&gt; 的值域区间的占用情况为 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的方案数。&lt;/p&gt;
&lt;p&gt;然后我们就可以进行转移了，每次就枚举第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 格填的数，细节比较多，参见如下代码。时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(4^ddn)\)&lt;/span&gt;，可以通过本题。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;505&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn], n, d, vis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f[maxn][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-5&#34;&gt;&lt;a href=&#34;#cb21-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getfirst() {&lt;/span&gt;
&lt;span id=&#34;cb21-6&#34;&gt;&lt;a href=&#34;#cb21-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-7&#34;&gt;&lt;a href=&#34;#cb21-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d) {&lt;/span&gt;
&lt;span id=&#34;cb21-8&#34;&gt;&lt;a href=&#34;#cb21-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans |= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i + d)) * vis[i];&lt;/span&gt;
&lt;span id=&#34;cb21-9&#34;&gt;&lt;a href=&#34;#cb21-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-10&#34;&gt;&lt;a href=&#34;#cb21-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb21-11&#34;&gt;&lt;a href=&#34;#cb21-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-12&#34;&gt;&lt;a href=&#34;#cb21-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-13&#34;&gt;&lt;a href=&#34;#cb21-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb21-14&#34;&gt;&lt;a href=&#34;#cb21-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, d);&lt;/span&gt;
&lt;span id=&#34;cb21-15&#34;&gt;&lt;a href=&#34;#cb21-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb21-16&#34;&gt;&lt;a href=&#34;#cb21-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] == j) vis[j] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-17&#34;&gt;&lt;a href=&#34;#cb21-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][getfirst()] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-18&#34;&gt;&lt;a href=&#34;#cb21-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb21-19&#34;&gt;&lt;a href=&#34;#cb21-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(S, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * d + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb21-20&#34;&gt;&lt;a href=&#34;#cb21-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = (S &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | (vis[i + d] &amp;lt;&amp;lt; (&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * d));&lt;/span&gt;
&lt;span id=&#34;cb21-21&#34;&gt;&lt;a href=&#34;#cb21-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~a[i]) f[i][now] += f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][S];&lt;/span&gt;
&lt;span id=&#34;cb21-22&#34;&gt;&lt;a href=&#34;#cb21-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; FOR(j, -d, d) {&lt;/span&gt;
&lt;span id=&#34;cb21-23&#34;&gt;&lt;a href=&#34;#cb21-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i + j &amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || i + j &amp;gt; n || now &amp;amp; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (j + d))) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-24&#34;&gt;&lt;a href=&#34;#cb21-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][now | (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (j + d))] += f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][S];&lt;/span&gt;
&lt;span id=&#34;cb21-25&#34;&gt;&lt;a href=&#34;#cb21-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb21-26&#34;&gt;&lt;a href=&#34;#cb21-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-27&#34;&gt;&lt;a href=&#34;#cb21-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-28&#34;&gt;&lt;a href=&#34;#cb21-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f[n][(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (d + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb21-29&#34;&gt;&lt;a href=&#34;#cb21-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-30&#34;&gt;&lt;a href=&#34;#cb21-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;arc132d---between-two-binary-strings&#34;&gt;ARC132D - Between Two Binary Strings&lt;/h4&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(S_{n,m}\)&lt;/span&gt; 为所有的长度为 &lt;span class=&#34;math inline&#34;&gt;\(n+ m\)&lt;/span&gt;，且包含恰好 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个 &lt;code&gt;0&lt;/code&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个 &lt;code&gt;1&lt;/code&gt; 的字符串的集合。定义一个字符串的美丽程度为相邻两位相同的个数，定义 &lt;span class=&#34;math inline&#34;&gt;\(S_1\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(S_2\)&lt;/span&gt; 的编辑距离 &lt;span class=&#34;math inline&#34;&gt;\(d_{S_1, S_2}\)&lt;/span&gt; 为将 &lt;span class=&#34;math inline&#34;&gt;\(S_1\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(S_2\)&lt;/span&gt; 的操作次数，其中每次操作能交换相邻的两个字符，且 &lt;span class=&#34;math inline&#34;&gt;\(S_1, S_2\in S_{n,m}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(S_2\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(S_1\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(S_3\)&lt;/span&gt; 间当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(d_{S_1, S_3} = d_{S_1, S_2} + d_{S_2, S_3}\)&lt;/span&gt;。给定 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，问在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 间的字符串的最大美丽程度。&lt;/p&gt;
&lt;p&gt;这题是一道比较妙的结论题：当确定第一个字母时，整个字符串可以贪心的进行构造，只需保证&lt;strong&gt;前 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 个里面 &lt;code&gt;1&lt;/code&gt; 的个数处于 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的中间&lt;/strong&gt;。然后我们又要最大化美丽值，依此构造即可。&lt;/p&gt;
&lt;p&gt;证明：考虑一个字符串就是二维平面上一条从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt; 的路径。某一位是 &lt;code&gt;1&lt;/code&gt; 表示向上走一格，某一位是 &lt;code&gt;0&lt;/code&gt; 表示向右走一格。同时，一个字符串的美丽值就是长度减一再减拐点个数。&lt;/p&gt;
&lt;p&gt;而我们发现，交换两个相邻的 &lt;code&gt;01&lt;/code&gt; 相当于是将一个拐点翻折，故在平面上处于 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 中间的路径都是可行的。那么我们其实就是，能不拐就不拐。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn], t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb22-4&#34;&gt;&lt;a href=&#34;#cb22-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-5&#34;&gt;&lt;a href=&#34;#cb22-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb22-6&#34;&gt;&lt;a href=&#34;#cb22-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb22-7&#34;&gt;&lt;a href=&#34;#cb22-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), read(t + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-8&#34;&gt;&lt;a href=&#34;#cb22-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, len = n + m;&lt;/span&gt;
&lt;span id=&#34;cb22-9&#34;&gt;&lt;a href=&#34;#cb22-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(init, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-10&#34;&gt;&lt;a href=&#34;#cb22-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s0 = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t0 = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x0 = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-11&#34;&gt;&lt;a href=&#34;#cb22-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (init != s[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; init != t[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-12&#34;&gt;&lt;a href=&#34;#cb22-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-13&#34;&gt;&lt;a href=&#34;#cb22-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = init;&lt;/span&gt;
&lt;span id=&#34;cb22-14&#34;&gt;&lt;a href=&#34;#cb22-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, len) {&lt;/span&gt;
&lt;span id=&#34;cb22-15&#34;&gt;&lt;a href=&#34;#cb22-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s0 += (s[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;), t0 += (t[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-16&#34;&gt;&lt;a href=&#34;#cb22-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-17&#34;&gt;&lt;a href=&#34;#cb22-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x0 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= max(s0, t0)) ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb22-18&#34;&gt;&lt;a href=&#34;#cb22-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; now = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-19&#34;&gt;&lt;a href=&#34;#cb22-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb22-20&#34;&gt;&lt;a href=&#34;#cb22-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x0 &amp;gt;= min(s0, t0)) ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb22-21&#34;&gt;&lt;a href=&#34;#cb22-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; now = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-22&#34;&gt;&lt;a href=&#34;#cb22-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb22-23&#34;&gt;&lt;a href=&#34;#cb22-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) ++x0;&lt;/span&gt;
&lt;span id=&#34;cb22-24&#34;&gt;&lt;a href=&#34;#cb22-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb22-25&#34;&gt;&lt;a href=&#34;#cb22-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        chkmax(ans, cnt - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-26&#34;&gt;&lt;a href=&#34;#cb22-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb22-27&#34;&gt;&lt;a href=&#34;#cb22-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb22-28&#34;&gt;&lt;a href=&#34;#cb22-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-29&#34;&gt;&lt;a href=&#34;#cb22-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;arc134&#34;&gt;ARC134&lt;/h3&gt;
&lt;h4 id=&#34;arc134c---the-majority&#34;&gt;ARC134C - The Majority&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 个有标号盒子，初始全为空。有 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 种颜色的球，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 种颜色有 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 个球，同种颜色的球不区分。现要将所有球放入盒子里，要求每个盒子里面，颜色 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的球的个数要占到一半以上（严格）。问方案数。&lt;/p&gt;
&lt;p&gt;比较巧妙的计数套路（雾），即我们考虑将 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 颜色的球和其他的球一一配对，即将 &lt;span class=&#34;math inline&#34;&gt;\(a_1:=a_1 - \sum_{i = 2}^na_i\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\([2, n]\)&lt;/span&gt; 颜色的球放入 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 个盒子里（可以有空盒），求出方案数，然后再乘上将 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 颜色的球放入 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 个盒子的方案数（不允许有空盒），即 &lt;span class=&#34;math display&#34;&gt;\[
\binom{a_1 - \sum_{i = 2}^na_i}{K + 1}\prod_{i=2}^n\binom{a_i + K + 1}{K+1}
\]&lt;/span&gt; 正确性显然，思想较为重要，marked。&lt;/p&gt;
&lt;h4 id=&#34;arc134d---concatenate-subsequences&#34;&gt;ARC134D - Concatenate Subsequences&lt;/h4&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(2N\)&lt;/span&gt; 的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;。现要构造 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的一个子序列，方案为：从 &lt;span class=&#34;math inline&#34;&gt;\(1, 2, \cdots, N\)&lt;/span&gt; 中取出一个子序列 &lt;span class=&#34;math inline&#34;&gt;\(x_1, \cdots, x_k\)&lt;/span&gt;，然后取出 &lt;span class=&#34;math inline&#34;&gt;\(a_{x_1}, a_{x_2},\cdots, a_{x_k}, a_{x_1 + N}, a_{x_2 +N},\cdots, a_{x_k + N}\)&lt;/span&gt;。要求构造出来的这个序列字典序最小，输出这个序列。&lt;/p&gt;
&lt;p&gt;字典序问题一般考虑贪心。我们令 &lt;span class=&#34;math inline&#34;&gt;\(A = a_1, a_2, \cdots, a_N\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B = a_{N+ 1},\cdots, a_{2N}\)&lt;/span&gt;，取 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中的最小值为 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;则如果存在一个 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(A_i = X\land B_i\le A_i\)&lt;/span&gt;，则把只最小的 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt; 取走就一定是最优的。&lt;/p&gt;
&lt;p&gt;下面我们假设对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(A_i = X\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(A_i&amp;lt;B_i\)&lt;/span&gt;，可以证明把他们全部取走是最优的，而后就需要考虑取剩下的元素了。令所有 &lt;span class=&#34;math inline&#34;&gt;\(A_i = X\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 升序构成序列 &lt;span class=&#34;math inline&#34;&gt;\(y_1,\cdots, y_k\)&lt;/span&gt;。接下来考虑的就是满足 &lt;span class=&#34;math inline&#34;&gt;\(y_k&amp;lt;j\le N\land A_j\le B_{y_1}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可以发现，将其按照 &lt;span class=&#34;math inline&#34;&gt;\((A_j, j)\)&lt;/span&gt; 升序排序之后，我们会优先取走所有的 &lt;span class=&#34;math inline&#34;&gt;\(A_j &amp;lt; B_{y_1}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，最后就是考虑 &lt;span class=&#34;math inline&#34;&gt;\(A_j = B_{y_1}\)&lt;/span&gt; 的情况，这时候就需要考虑第一个 &lt;span class=&#34;math inline&#34;&gt;\(B_{y_m}\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B_{y_m}\ne B_{y_1}\)&lt;/span&gt;，即如果加进去能使得字典序更小，那就加，否则就不要加。&lt;/p&gt;
&lt;p&gt;于是这题就做完了，细节有点烦，&lt;a href=&#34;https://atcoder.jp/contests/arc134/submissions/29161132&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;arc137&#34;&gt;ARC137&lt;/h3&gt;
&lt;p&gt;A + B + D，rk281。&lt;/p&gt;
&lt;h4 id=&#34;arc137a---coprime-pair&#34;&gt;ARC137A - Coprime Pair&lt;/h4&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le L &amp;lt; R\le 10^{18}\)&lt;/span&gt;，求一对 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(L\le x\le y\le R\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x,y) = 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;由于在题目约束下，素数间隔至多为 &lt;span class=&#34;math inline&#34;&gt;\(K= 1500\)&lt;/span&gt; 左右，所以直接从 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; 右边和 &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; 左边暴力找答案即可。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(K^2\log R)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然而这个东西似乎有更紧的界，但是 atcoder 官方题解我看不懂。&lt;/p&gt;
&lt;h4 id=&#34;arc137b---count-1s&#34;&gt;ARC137B - Count 1’s&lt;/h4&gt;
&lt;p&gt;题意：给定一个 0-1 串，可以将一个子段翻转一次，问最后能达到多少种不同的 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先可以观察到最后达到的 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数肯定是连续的一段。&lt;/p&gt;
&lt;p&gt;所以考虑求出 &lt;em&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的个数减 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数&lt;/em&gt; 的最大值和最小值。发现 &lt;span class=&#34;math inline&#34;&gt;\(\max + \min + 1\)&lt;/span&gt; 即为答案。&lt;/p&gt;
&lt;h4 id=&#34;arc137c---distinct-numbers&#34;&gt;ARC137C - Distinct Numbers&lt;/h4&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 个元素的数集 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，保证元素两两不同。先手后手博弈，轮到每人操作时，将最大的数取出，换成一个更小的非负整数再塞回去，需保证元素两两不同的性质不被破坏。第一个没办法进行操作的玩家输。问赢家。&lt;/p&gt;
&lt;p&gt;结论题（？）。分类讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_n - a_{n-1}&amp;gt;1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(a_1, a_2,\cdots, a_{n-1}, a_{n-1} +1\)&lt;/span&gt; 的局面。&lt;/p&gt;
&lt;p&gt;若其为必胜态，那么其可以转移到一个必败态，原序列也可以直接转移到那个必败态。&lt;/p&gt;
&lt;p&gt;若其为必败态，那么原序列可以直接转移到他。&lt;/p&gt;
&lt;p&gt;所以 Alice 必胜。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_n - a_{n-1} = 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;发现双方都要尽可能维持这个状态，否则就变成对手必胜。&lt;/p&gt;
&lt;p&gt;每次操作的时候 &lt;span class=&#34;math inline&#34;&gt;\(a_{n} - a_{n-1}\)&lt;/span&gt; 都是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。每次操作后会发现原来的次大值变成了新的最大值。判断 &lt;span class=&#34;math inline&#34;&gt;\(a_n - n\)&lt;/span&gt; 的奇偶性即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn], n;&lt;/span&gt;
&lt;span id=&#34;cb23-3&#34;&gt;&lt;a href=&#34;#cb23-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-4&#34;&gt;&lt;a href=&#34;#cb23-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb23-5&#34;&gt;&lt;a href=&#34;#cb23-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb23-6&#34;&gt;&lt;a href=&#34;#cb23-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb23-7&#34;&gt;&lt;a href=&#34;#cb23-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[n] - a[n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(&lt;span class=&#34;st&#34;&gt;&amp;quot;Alice&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb23-8&#34;&gt;&lt;a href=&#34;#cb23-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((n + a[n] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) print(&lt;span class=&#34;st&#34;&gt;&amp;quot;Alice&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb23-9&#34;&gt;&lt;a href=&#34;#cb23-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(&lt;span class=&#34;st&#34;&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb23-10&#34;&gt;&lt;a href=&#34;#cb23-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-11&#34;&gt;&lt;a href=&#34;#cb23-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;arc137d---prefix-xors&#34;&gt;ARC137D - Prefix XORs&lt;/h4&gt;
&lt;p&gt;题意：给定整数序列 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(N\le 10^6\)&lt;/span&gt;，以及整数 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。对每个 &lt;span class=&#34;math inline&#34;&gt;\(k=1,2,\cdots, m\)&lt;/span&gt;，求出经过下面操作 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次之后 &lt;span class=&#34;math inline&#34;&gt;\(A_n\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于每个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(B_i = \displaystyle\bigoplus_{i=1}^i A_i\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(\oplus\)&lt;/span&gt; 代表异或。&lt;/li&gt;
&lt;li&gt;然后令 &lt;span class=&#34;math inline&#34;&gt;\(A = B\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么很显然，我们可以考虑对于一个固定的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(A_n\)&lt;/span&gt; 贡献了多少次，下面假定 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 开始编号。&lt;/p&gt;
&lt;p&gt;然后你发现 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(A_n\)&lt;/span&gt; 会贡献 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n - i + k - 1}{k - 1}\)&lt;/span&gt; 次。你会注意到我们只需要知道他的奇偶性，其为奇数就会产生贡献。&lt;/p&gt;
&lt;p&gt;考虑卢卡斯定理的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制形式，发现当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(n - i + k - 1\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 在二进制表示下的超集时，Lucas 的式子里面才不会有 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 项，才会产生 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n - i + k - 1}{k - 1}\)&lt;/span&gt; 的贡献。&lt;/p&gt;
&lt;p&gt;然后注意到，因为 &lt;span class=&#34;math inline&#34;&gt;\(n - i + k - 1\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 的超集，所以 &lt;span class=&#34;math inline&#34;&gt;\(n - i\)&lt;/span&gt; 按位与上 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 必然是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。那么就考虑做一个高维前缀和，然后对每个 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 查询的时候把 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 取补集即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) | &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn], n, m;&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb24-5&#34;&gt;&lt;a href=&#34;#cb24-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb24-6&#34;&gt;&lt;a href=&#34;#cb24-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb24-7&#34;&gt;&lt;a href=&#34;#cb24-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    reverse(a, a + n);&lt;/span&gt;
&lt;span id=&#34;cb24-8&#34;&gt;&lt;a href=&#34;#cb24-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;) FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;amp; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j)) a[i] ^= a[i ^ (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j)];&lt;/span&gt;
&lt;span id=&#34;cb24-9&#34;&gt;&lt;a href=&#34;#cb24-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) print(a[(k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ^ ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)], &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb24-10&#34;&gt;&lt;a href=&#34;#cb24-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-11&#34;&gt;&lt;a href=&#34;#cb24-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;arc137e---bakery&#34;&gt;ARC137E - Bakery&lt;/h4&gt;
&lt;p&gt;题意：规划面包店，天数为 &lt;span class=&#34;math inline&#34;&gt;\(1,2,\cdots, N\)&lt;/span&gt;。有 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 个面包师，编号从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;，雇用 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的开支是 &lt;span class=&#34;math inline&#34;&gt;\(C_i\)&lt;/span&gt;，然后其会在 &lt;span class=&#34;math inline&#34;&gt;\(L_i,\cdots, R_i\)&lt;/span&gt; 每天做一个面包。第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天面包师一共做了 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 个面包的话，售出的就是 &lt;span class=&#34;math inline&#34;&gt;\(\min(A_i,x_i)\)&lt;/span&gt; 个面包。每个面包获利 &lt;span class=&#34;math inline&#34;&gt;\(D\)&lt;/span&gt;，求最大利润（售出面包的获利减去雇佣面包师的开支）&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le N,M\le 2000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le D,C_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;第一眼考虑建费用流，然而用面包来流似乎不好处理面包师的开支。&lt;/p&gt;
&lt;p&gt;那么只能拿面包师来流了，对于面包的贡献，就考虑在天数之间流。具体地：建立图，编号从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(j\to(j - 1)\)&lt;/span&gt;，流量 &lt;span class=&#34;math inline&#34;&gt;\(A_j\)&lt;/span&gt;，费用 &lt;span class=&#34;math inline&#34;&gt;\(-D\)&lt;/span&gt;。这部分处理产生贡献的面包。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(j\to (j-1)\)&lt;/span&gt;，流量 &lt;span class=&#34;math inline&#34;&gt;\(M - A_j\)&lt;/span&gt;，费用 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。这部分要让剩下产生不了贡献的流过去。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\((L_{i} - 1)\to R_i\)&lt;/span&gt;，流量 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，费用 &lt;span class=&#34;math inline&#34;&gt;\(C_i\)&lt;/span&gt;。这部分处理面包师的费用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上图的&lt;strong&gt;最小费用循环流&lt;/strong&gt;的费用就是答案。然而我们不会直球做费用循环流，所以考虑一下怎么转化。&lt;/p&gt;
&lt;p&gt;首先，选一个面包师相当于选了一个环，我们肯定是会选&lt;strong&gt;负环&lt;/strong&gt;（否则不如不选）。那么就对所有的负权边 &lt;span class=&#34;math inline&#34;&gt;\((u,v,w,c)\)&lt;/span&gt; 进行如下处理：加边 &lt;span class=&#34;math inline&#34;&gt;\((s, v, w, 0)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((u, t, w, 0)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((v, u, w, -c)\)&lt;/span&gt;，然后费用预先加上 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;。剩下的正权和 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 权边照旧不变，然后跑一个&lt;strong&gt;流量为 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 的最小费用流&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这样做的正确性是：先假设负权边全部流满，然后若流了 &lt;span class=&#34;math inline&#34;&gt;\(s\to v\to u\to t\)&lt;/span&gt; 相当于退掉原来的流。剩下就是和正权边连环计算了。&lt;/p&gt;
&lt;p&gt;具体地，在本题里面，由于图结构的特殊性，&lt;span class=&#34;math inline&#34;&gt;\((s,v,w,0)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((u,t,w,0)\)&lt;/span&gt; 是没必要加的，因为对于一个点，其一定会同时连 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;，最小费用最大流告诉我们会优先流满 &lt;span class=&#34;math inline&#34;&gt;\(s\to u\to t\)&lt;/span&gt;，对费用不产生影响。所以我们甚至可以丢掉超级源汇。&lt;/p&gt;
&lt;p&gt;综上，连边方式如下：对每个天连 &lt;span class=&#34;math inline&#34;&gt;\((j-1,j,A_j,D)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((j-1,j,M - A_j,0)\)&lt;/span&gt;，再对每个面包师连 &lt;span class=&#34;math inline&#34;&gt;\((L_i - 1, R_i, 1, C_i)\)&lt;/span&gt;，跑 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 的流量为 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 的最小费用流即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本题卡朴素的 EK + SPFA 费用流，正解是原始对偶算法，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(N^2\log N)\)&lt;/span&gt;，视 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 同阶。如果你是和我一样的懒狗的话可以用一下 ACL 官方的费用流，用的就是原始对偶，很快。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-2&#34;&gt;&lt;a href=&#34;#cb25-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;2005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-3&#34;&gt;&lt;a href=&#34;#cb25-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N, M, D;&lt;/span&gt;
&lt;span id=&#34;cb25-4&#34;&gt;&lt;a href=&#34;#cb25-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-5&#34;&gt;&lt;a href=&#34;#cb25-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb25-6&#34;&gt;&lt;a href=&#34;#cb25-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(N, M, D);&lt;/span&gt;
&lt;span id=&#34;cb25-7&#34;&gt;&lt;a href=&#34;#cb25-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    atcoder::mcf_graph&amp;lt;ll, ll&amp;gt; G(N + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb25-8&#34;&gt;&lt;a href=&#34;#cb25-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-9&#34;&gt;&lt;a href=&#34;#cb25-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, N) {&lt;/span&gt;
&lt;span id=&#34;cb25-10&#34;&gt;&lt;a href=&#34;#cb25-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a; read(a);&lt;/span&gt;
&lt;span id=&#34;cb25-11&#34;&gt;&lt;a href=&#34;#cb25-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G.add_edge(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i, a, D), G.add_edge(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i, M - a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb25-12&#34;&gt;&lt;a href=&#34;#cb25-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * D * a;&lt;/span&gt;
&lt;span id=&#34;cb25-13&#34;&gt;&lt;a href=&#34;#cb25-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb25-14&#34;&gt;&lt;a href=&#34;#cb25-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, M) {&lt;/span&gt;
&lt;span id=&#34;cb25-15&#34;&gt;&lt;a href=&#34;#cb25-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r, c; read(l, r, c);&lt;/span&gt;
&lt;span id=&#34;cb25-16&#34;&gt;&lt;a href=&#34;#cb25-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G.add_edge(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c);&lt;/span&gt;
&lt;span id=&#34;cb25-17&#34;&gt;&lt;a href=&#34;#cb25-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb25-18&#34;&gt;&lt;a href=&#34;#cb25-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans - G.flow(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, N, M).second);&lt;/span&gt;
&lt;span id=&#34;cb25-19&#34;&gt;&lt;a href=&#34;#cb25-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-20&#34;&gt;&lt;a href=&#34;#cb25-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;arc138&#34;&gt;ARC138&lt;/h3&gt;
&lt;h4 id=&#34;arc138c---rotate-and-play-game&#34;&gt;ARC138C - Rotate and Play Game&lt;/h4&gt;
&lt;p&gt;第一步通过观察大样例发现，Snuke 一定会取走最大的 &lt;span class=&#34;math inline&#34;&gt;\(n / 2\)&lt;/span&gt; 个元素。&lt;/p&gt;
&lt;p&gt;那么我们考虑对于一个静态的序列，Snuke 如何能够成功取走最大的 &lt;span class=&#34;math inline&#34;&gt;\(n/2\)&lt;/span&gt; 个元素。&lt;/p&gt;
&lt;p&gt;发现若视最大的（要取走的） &lt;span class=&#34;math inline&#34;&gt;\(n/2\)&lt;/span&gt; 个元素为 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;，剩余的为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的话，相当于对于每一个位置，前缀和都不能为负（虽然只是充分，但不必要）。证明：每一轮中，Snuke 取走最靠前的 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;（肯定要避免他被抢走），然后 Mr. Min 照常取一个 &lt;span class=&#34;math inline&#34;&gt;\(+1\)&lt;/span&gt;，于是乎原序列前缀和的性质肯定还是满足的。&lt;/p&gt;
&lt;p&gt;现在问题就变为如何求循环位移的偏移量。注意到根据括号序列的性质，其一定有解。&lt;/p&gt;
&lt;p&gt;那么就将这个序列复制一份，然后看 &lt;span class=&#34;math inline&#34;&gt;\([i, i + n - 1]\)&lt;/span&gt; 中的前缀和最小值是否 &lt;span class=&#34;math inline&#34;&gt;\(\ge S_i\)&lt;/span&gt; 即可。可以使用 ST 表或者滑动窗口一类的来做。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb26-6&#34;&gt;&lt;a href=&#34;#cb26-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-7&#34;&gt;&lt;a href=&#34;#cb26-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-8&#34;&gt;&lt;a href=&#34;#cb26-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, st[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;][maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], lg[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb26-9&#34;&gt;&lt;a href=&#34;#cb26-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb26-10&#34;&gt;&lt;a href=&#34;#cb26-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node {&lt;/span&gt;
&lt;span id=&#34;cb26-11&#34;&gt;&lt;a href=&#34;#cb26-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll val; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; id;&lt;/span&gt;
&lt;span id=&#34;cb26-12&#34;&gt;&lt;a href=&#34;#cb26-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb26-13&#34;&gt;&lt;a href=&#34;#cb26-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb26-14&#34;&gt;&lt;a href=&#34;#cb26-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb26-15&#34;&gt;&lt;a href=&#34;#cb26-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb26-16&#34;&gt;&lt;a href=&#34;#cb26-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; a[i].val, a[i].id = i;&lt;/span&gt;
&lt;span id=&#34;cb26-17&#34;&gt;&lt;a href=&#34;#cb26-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, [](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.val &amp;gt; b.val;});&lt;/span&gt;
&lt;span id=&#34;cb26-18&#34;&gt;&lt;a href=&#34;#cb26-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll sum = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, tmp = a[n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].val;&lt;/span&gt;
&lt;span id=&#34;cb26-19&#34;&gt;&lt;a href=&#34;#cb26-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sum += a[i].val, a[i].val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-20&#34;&gt;&lt;a href=&#34;#cb26-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, (n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) a[i].val = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-21&#34;&gt;&lt;a href=&#34;#cb26-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, [](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.id &amp;lt; b.id;});&lt;/span&gt;
&lt;span id=&#34;cb26-22&#34;&gt;&lt;a href=&#34;#cb26-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) a[n + i] = a[i];&lt;/span&gt;
&lt;span id=&#34;cb26-23&#34;&gt;&lt;a href=&#34;#cb26-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lg[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-24&#34;&gt;&lt;a href=&#34;#cb26-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) st[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = st[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + a[i].val, lg[i] = lg[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-25&#34;&gt;&lt;a href=&#34;#cb26-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;) FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, (n &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) st[j][i] = max(st[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i], st[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i + (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))]);&lt;/span&gt;
&lt;span id=&#34;cb26-26&#34;&gt;&lt;a href=&#34;#cb26-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;31&lt;/span&gt; - &lt;span class=&#34;fu&#34;&gt;__builtin_clz&lt;/span&gt;(n);&lt;/span&gt;
&lt;span id=&#34;cb26-27&#34;&gt;&lt;a href=&#34;#cb26-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i].val == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb26-28&#34;&gt;&lt;a href=&#34;#cb26-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = max(st[s][i], st[s][i + n - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; s)]);&lt;/span&gt;
&lt;span id=&#34;cb26-29&#34;&gt;&lt;a href=&#34;#cb26-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ret &amp;lt;= st[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cout &amp;lt;&amp;lt; i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-30&#34;&gt;&lt;a href=&#34;#cb26-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb26-31&#34;&gt;&lt;a href=&#34;#cb26-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-32&#34;&gt;&lt;a href=&#34;#cb26-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意代码里面的 &lt;span class=&#34;math inline&#34;&gt;\(\pm 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\min/\max\)&lt;/span&gt; 性似乎和题解相反（反正是对称的，不管了）。&lt;/p&gt;
&lt;h4 id=&#34;arc138d---differ-by-k-bits&#34;&gt;ARC138D - Differ by K bits&lt;/h4&gt;
&lt;p&gt;撞了洛谷原题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P7949&#34;&gt;P7949&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本题中，暴力的复杂度貌似是对的，具体原因不详。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-6&#34;&gt;&lt;a href=&#34;#cb27-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-7&#34;&gt;&lt;a href=&#34;#cb27-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, vis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb27-8&#34;&gt;&lt;a href=&#34;#cb27-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; a, b;&lt;/span&gt;
&lt;span id=&#34;cb27-9&#34;&gt;&lt;a href=&#34;#cb27-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-10&#34;&gt;&lt;a href=&#34;#cb27-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb27-11&#34;&gt;&lt;a href=&#34;#cb27-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a.push_back(x); vis[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-12&#34;&gt;&lt;a href=&#34;#cb27-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a.size() == (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n)) {&lt;/span&gt;
&lt;span id=&#34;cb27-13&#34;&gt;&lt;a href=&#34;#cb27-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;Yes&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb27-14&#34;&gt;&lt;a href=&#34;#cb27-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : a)&lt;/span&gt;
&lt;span id=&#34;cb27-15&#34;&gt;&lt;a href=&#34;#cb27-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;; exit(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb27-16&#34;&gt;&lt;a href=&#34;#cb27-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb27-17&#34;&gt;&lt;a href=&#34;#cb27-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;c : b) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[c ^ x]) dfs(c ^ x);&lt;/span&gt;
&lt;span id=&#34;cb27-18&#34;&gt;&lt;a href=&#34;#cb27-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-19&#34;&gt;&lt;a href=&#34;#cb27-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb27-20&#34;&gt;&lt;a href=&#34;#cb27-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-21&#34;&gt;&lt;a href=&#34;#cb27-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb27-22&#34;&gt;&lt;a href=&#34;#cb27-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; k;&lt;/span&gt;
&lt;span id=&#34;cb27-23&#34;&gt;&lt;a href=&#34;#cb27-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k % &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;No&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-24&#34;&gt;&lt;a href=&#34;#cb27-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;__builtin_popcount&lt;/span&gt;(i) == k) b.push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb27-25&#34;&gt;&lt;a href=&#34;#cb27-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb27-26&#34;&gt;&lt;a href=&#34;#cb27-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;No&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-27&#34;&gt;&lt;a href=&#34;#cb27-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;考虑正解：首先我们注意到，若 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为偶数，其一定无解。因为不可能所有数的 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{popcount}\)&lt;/span&gt; 都是偶数。且 &lt;span class=&#34;math inline&#34;&gt;\(k = n\)&lt;/span&gt; 的情况也无解。&lt;/p&gt;
&lt;p&gt;而我们若是将 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{popcount}(x) = k\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 插入线性基 &lt;span class=&#34;math inline&#34;&gt;\(\mathfrak B\)&lt;/span&gt;，则可以将成功插入的数看作一组基底，而若 &lt;span class=&#34;math inline&#34;&gt;\(|\mathfrak B|&amp;lt;n\)&lt;/span&gt; 显然也无解。否则我们总能构造出答案：只需要满足构成相邻两个数的线性组合中，有一项不一样即可，具体这个可以用格雷码实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb28-6&#34;&gt;&lt;a href=&#34;#cb28-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-7&#34;&gt;&lt;a href=&#34;#cb28-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, a[&lt;span class=&#34;dv&#34;&gt;22&lt;/span&gt;], p[&lt;span class=&#34;dv&#34;&gt;22&lt;/span&gt;], cnt;&lt;/span&gt;
&lt;span id=&#34;cb28-8&#34;&gt;&lt;a href=&#34;#cb28-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-9&#34;&gt;&lt;a href=&#34;#cb28-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x0) {&lt;/span&gt;
&lt;span id=&#34;cb28-10&#34;&gt;&lt;a href=&#34;#cb28-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = x0;&lt;/span&gt;
&lt;span id=&#34;cb28-11&#34;&gt;&lt;a href=&#34;#cb28-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(j, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((x &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb28-12&#34;&gt;&lt;a href=&#34;#cb28-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!p[j]) {&lt;/span&gt;
&lt;span id=&#34;cb28-13&#34;&gt;&lt;a href=&#34;#cb28-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[j] = x, a[cnt++] = x0;&lt;/span&gt;
&lt;span id=&#34;cb28-14&#34;&gt;&lt;a href=&#34;#cb28-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-15&#34;&gt;&lt;a href=&#34;#cb28-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; x ^= p[j];&lt;/span&gt;
&lt;span id=&#34;cb28-16&#34;&gt;&lt;a href=&#34;#cb28-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-17&#34;&gt;&lt;a href=&#34;#cb28-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-18&#34;&gt;&lt;a href=&#34;#cb28-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb28-19&#34;&gt;&lt;a href=&#34;#cb28-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-20&#34;&gt;&lt;a href=&#34;#cb28-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb28-21&#34;&gt;&lt;a href=&#34;#cb28-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; k;&lt;/span&gt;
&lt;span id=&#34;cb28-22&#34;&gt;&lt;a href=&#34;#cb28-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;__builtin_popcount&lt;/span&gt;(i) == k) insert(i);&lt;/span&gt;
&lt;span id=&#34;cb28-23&#34;&gt;&lt;a href=&#34;#cb28-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt &amp;lt; n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;No&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-24&#34;&gt;&lt;a href=&#34;#cb28-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb28-25&#34;&gt;&lt;a href=&#34;#cb28-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb28-26&#34;&gt;&lt;a href=&#34;#cb28-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; g = i ^ (i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), now = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-27&#34;&gt;&lt;a href=&#34;#cb28-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((g &amp;gt;&amp;gt; j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) now ^= a[j];&lt;/span&gt;
&lt;span id=&#34;cb28-28&#34;&gt;&lt;a href=&#34;#cb28-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; now &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-29&#34;&gt;&lt;a href=&#34;#cb28-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-30&#34;&gt;&lt;a href=&#34;#cb28-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-31&#34;&gt;&lt;a href=&#34;#cb28-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Codeforces 比赛日记</title>
        <link>https://oi.imyangty.com/summary-codeforces/</link>
        <pubDate>Wed, 17 Feb 2021 18:11:15 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-codeforces/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg1.webp" alt="Featured image of post Codeforces 比赛日记" /&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Round&lt;/th&gt;
&lt;th&gt;div&lt;/th&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;sol&lt;/th&gt;
&lt;th&gt;rk&lt;/th&gt;
&lt;th&gt;perf&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;th&gt;G&lt;/th&gt;
&lt;th&gt;H&lt;/th&gt;
&lt;th&gt;I&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R670&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1406&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;9207&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R695&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1467&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;6299&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R697&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1475&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R698&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1478&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4882&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R698&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1477&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;EDU103&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1476&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4551&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R699&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1481&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2113&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R700&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1480&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;6974&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R700&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1479&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R701&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1485&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU104&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1487&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4964&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R702&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1490&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1352&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R705&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1493&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;869&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R706&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1496&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1792&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R706&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1495&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R707&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1501&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1320&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R707&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R712&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1504&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;8171&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R712&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1503&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R718&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1517&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;HSSC21&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1553&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R733&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1530&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R736&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1549&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;373&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R736&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1548&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R737&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1557&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;463&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R738&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1559&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1780&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R740&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1561&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1738&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R740&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1558&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R741&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1562&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3894&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;DR 2021&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1556&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R742&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1567&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2622&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R743&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1573&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R743&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1572&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;EDU113&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1569&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;8249&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;GR17&lt;/td&gt;
&lt;td&gt;gr&lt;/td&gt;
&lt;td&gt;1566&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4019&lt;/td&gt;
&lt;td&gt;1330&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;EDU114&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1574&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1807&lt;/td&gt;
&lt;td&gt;1585&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R745&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1581&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;279&lt;/td&gt;
&lt;td&gt;1886&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R745&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1580&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R746&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1592&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;550&lt;/td&gt;
&lt;td&gt;1928&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R747&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1594&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;605&lt;/td&gt;
&lt;td&gt;1825&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU115&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1598&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;581&lt;/td&gt;
&lt;td&gt;1825&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R749&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1586&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;349&lt;/td&gt;
&lt;td&gt;2284&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R750&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1582&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1738&lt;/td&gt;
&lt;td&gt;1514&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R754&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1605&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;869&lt;/td&gt;
&lt;td&gt;1787&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R755&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1588&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;451&lt;/td&gt;
&lt;td&gt;1933&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R758&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1608&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;522&lt;/td&gt;
&lt;td&gt;2059&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;GR18&lt;/td&gt;
&lt;td&gt;gr&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;816&lt;/td&gt;
&lt;td&gt;2031&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Hello2022&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1621&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;skip&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R765&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1625&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;2191&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R766&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1627&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1275&lt;/td&gt;
&lt;td&gt;1678&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU121&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1626&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R767&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1629&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;td&gt;1988&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R767&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1628&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R768&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1631&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2765&lt;/td&gt;
&lt;td&gt;1435&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R768&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1630&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R769&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1632&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1620&lt;/td&gt;
&lt;td&gt;1661&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU122&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1633&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;GR19&lt;/td&gt;
&lt;td&gt;gr&lt;/td&gt;
&lt;td&gt;1637&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1047&lt;/td&gt;
&lt;td&gt;1975&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R771&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1638&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;521&lt;/td&gt;
&lt;td&gt;1936&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R772&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1635&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;2204&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU123&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1644&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;365&lt;/td&gt;
&lt;td&gt;1968&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R773&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1641&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;689&lt;/td&gt;
&lt;td&gt;1884&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R777&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1647&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;549&lt;/td&gt;
&lt;td&gt;1908&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R781&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1665&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3461&lt;/td&gt;
&lt;td&gt;1276&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU126&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1661&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;311&lt;/td&gt;
&lt;td&gt;2001&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R785&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1673&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1368&lt;/td&gt;
&lt;td&gt;1624&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU128&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1680&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;958&lt;/td&gt;
&lt;td&gt;1742&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R796&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1687&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R796&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1688&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;181&lt;/td&gt;
&lt;td&gt;2034&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R801&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1695&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;332&lt;/td&gt;
&lt;td&gt;2038&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R802&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;2044&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R807&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1705&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;2206&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;TON R2&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1704&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;424&lt;/td&gt;
&lt;td&gt;2303&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R812&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1713&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;226&lt;/td&gt;
&lt;td&gt;2138&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R813&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;td&gt;2318&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R815&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1720&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;287&lt;/td&gt;
&lt;td&gt;2042&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;codeforces-round-670-div.-2&#34;&gt;Codeforces Round #670 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打的第一场 CF 然而一题都没做出来。&lt;/p&gt;
&lt;h3 id=&#34;d---three-sequences&#34;&gt;1406D - Three Sequences&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，要求构造一个不减序列 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 和一个不增序列 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a_i = b_i + c_i\)&lt;/span&gt;。请最小化 &lt;span class=&#34;math inline&#34;&gt;\(\max\{b_i, c_i\}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次操作，每次可以对 &lt;span class=&#34;math inline&#34;&gt;\(a_l, a_{l + 1},\cdots , a_r\)&lt;/span&gt; 加上 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。问每次修改后的最小的 &lt;span class=&#34;math inline&#34;&gt;\(\max\{b_i, c_i\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;一个比较奇妙的贪心。我们注意到答案为 &lt;span class=&#34;math inline&#34;&gt;\(\max(b_n, c_1)\)&lt;/span&gt;。而我们发现，对于 &lt;span class=&#34;math inline&#34;&gt;\(a_{i + 1} &amp;gt; a_i\)&lt;/span&gt;，我们若是调整在 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 上，则不优；但如若调整 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，则因为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 递增，所以令 &lt;span class=&#34;math inline&#34;&gt;\(b_{i + 1} = b_i + a_{i + 1} - a_i\)&lt;/span&gt; 是最优的。而 &lt;span class=&#34;math inline&#34;&gt;\(a_{i + 1} &amp;lt; a_i\)&lt;/span&gt; 时，我们若是调整 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(c_{i + 1} = c_i + a_{i +1} - a_i\)&lt;/span&gt; 是最优的。&lt;/p&gt;
&lt;p&gt;好，那么我们可以知道，&lt;span class=&#34;math inline&#34;&gt;\(a_1 = b_1 + c_1 = b_n - \sum_{i = 2}^n(b_i - b_{i - 1}) + c_1\)&lt;/span&gt;。故令 &lt;span class=&#34;math inline&#34;&gt;\(b_n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(c_1\)&lt;/span&gt; 尽量接近最优。答案为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\lceil\frac{a_1 + \sum_{i = 2}^n(b_i - b_{i - 1})}{2}\rceil\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = 2}^n(b_i - b_{i - 1}) = \sum_{i = 2}^n(a_i - a_{i - 1})\cdot[a_i &amp;gt; a_{i - 1}]\)&lt;/span&gt;。这个东西应该是可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 维护的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, q;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], d[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), d[i] = a[i] - a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll sum = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d[i] &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) sum += d[i];&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print((ll)ceil((sum + d[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q; read(q);&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--) {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r; ll x;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(l, r, x), ++r;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll dl = d[l], dr = d[r];&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        d[l] += x, d[r] -= x;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l != &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sum += max(d[l], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) - max(dl, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r != n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sum += max(d[r], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) - max(dr, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print((ll)ceil((sum + d[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---deleting-numbers&#34;&gt;1406E - Deleting Numbers&lt;/h3&gt;
&lt;p&gt;交互题。交互库给定一个数字 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，要你猜一个数字 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le x\le n\)&lt;/span&gt;）。一开始你有一个集合 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 2,\cdots, n\}\)&lt;/span&gt;，你可以进行至多 &lt;span class=&#34;math inline&#34;&gt;\(10000\)&lt;/span&gt; 次操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A a&lt;/code&gt;：询问当前集合中有多少数为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;B a&lt;/code&gt;：询问当前集合中有多少数为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的倍数，并将他们全部删掉。&lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 不会被删掉。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C a&lt;/code&gt;：告诉交互库答案为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le x\le n\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先，有一种很朴素的想法是枚举每个质数，删除其倍数然后判断 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是否有这一个质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，然后就依次枚举 &lt;span class=&#34;math inline&#34;&gt;\(p^k\)&lt;/span&gt; 并询问 &lt;code&gt;A p^k&lt;/code&gt; 直到收到的答案为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 就有一部分 &lt;span class=&#34;math inline&#34;&gt;\(p^{k - 1}\)&lt;/span&gt;，根据唯一分解定理，我们这样子就能确定 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(\tau(n)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中质数的幂的数量，&lt;span class=&#34;math inline&#34;&gt;\(\pi(n)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中质数个数。发现 &lt;span class=&#34;math inline&#34;&gt;\(\pi(10^5) = 9592\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\tau(10^5) = 9700\)&lt;/span&gt;。上面这个做法的询问次数为 &lt;span class=&#34;math inline&#34;&gt;\(\pi(n) + \tau(n) + 1\)&lt;/span&gt;，显然要寄。&lt;/p&gt;
&lt;p&gt;考虑优化。一个很常见的结论是，考虑根号分治，将质因子分为 &lt;span class=&#34;math inline&#34;&gt;\(\le \sqrt n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt;\sqrt n\)&lt;/span&gt; 两部分，则 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; \sqrt n\)&lt;/span&gt; 的一定只有一个。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\le \sqrt n\)&lt;/span&gt; 的部分，我们直接用上面的方法暴力，操作次数为 &lt;span class=&#34;math inline&#34;&gt;\(\pi(\sqrt n) + \tau(\sqrt n)\le 238\)&lt;/span&gt;。对于 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; \sqrt n\)&lt;/span&gt; 的部分，我们考虑分块，每次删 &lt;span class=&#34;math inline&#34;&gt;\(100\)&lt;/span&gt; 个质数，删了之后询问被删掉的数是否为 &lt;span class=&#34;math inline&#34;&gt;\(100\)&lt;/span&gt; 个，如果不是，那么直接暴力找这个 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt;\sqrt n\)&lt;/span&gt; 的质因子就能得到答案了。&lt;/p&gt;
&lt;p&gt;细节有点烦人，一定要小心。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], p[maxn], tot, n;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ask(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; c &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl &amp;lt;&amp;lt; flush;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * p[j] &amp;lt;= n; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; B = (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)ceil(sqrt(&lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt;)), ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= tot &amp;amp;&amp;amp; p[i] &amp;lt;= B; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ask(p[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = p[i], flag = ask(p[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (flag &amp;amp;&amp;amp; (tmp *= p[i]) &amp;lt;= n) flag = ask(tmp, &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans *= tmp / p[i];&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (i; i &amp;lt;= tot; i += &lt;span class=&#34;dv&#34;&gt;98&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt0 = ask(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;), r = min(i + &lt;span class=&#34;dv&#34;&gt;97&lt;/span&gt;, tot);&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, i, r) cnt0 -= ask(p[j], &lt;span class=&#34;ch&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt1 = ask(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt0 != cnt1) {&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, i, r) {&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ask(p[j], &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;)) {&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    ans *= p[j];&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;C &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; endl &amp;lt;&amp;lt; flush;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-698&#34;&gt;Codeforces Round 698&lt;/h2&gt;
&lt;h3 id=&#34;a---nezzar-and-board&#34;&gt;1477A - Nezzar and Board&lt;/h3&gt;
&lt;p&gt;一开始黑板上写着 &lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt; 个不同整数，给定 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，一次操作可以任意选两个（不一定互异的数）&lt;span class=&#34;math inline&#34;&gt;\(x,y\)&lt;/span&gt; 然后在黑板上加上 &lt;span class=&#34;math inline&#34;&gt;\(2x-y\)&lt;/span&gt;，问有限次操作后能否得到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。值域 &lt;span class=&#34;math inline&#34;&gt;\([-10^{18}, 10^{18}]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;发现最后形式很像是一个判断满足某种条件的线性组合能不能得到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的问题，即裴蜀定理。&lt;/p&gt;
&lt;p&gt;发现当 &lt;span class=&#34;math inline&#34;&gt;\(x_1 = 0\)&lt;/span&gt; 的时候，我们可以任意构造 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 的倍数，所以当 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x_2,\cdots, x_n)\mid k\)&lt;/span&gt; 的时候有解。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(x_1\ne 0\)&lt;/span&gt; 的情况，就将 &lt;span class=&#34;math inline&#34;&gt;\(x_2,\cdots, x_n, k\)&lt;/span&gt; 全部减去 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;，根据 &lt;span class=&#34;math inline&#34;&gt;\(2x-y\)&lt;/span&gt; 的过程会发现 &lt;span class=&#34;math inline&#34;&gt;\(-x_1\)&lt;/span&gt; 的偏移量是一直带着走的，没有影响。&lt;/p&gt;
&lt;p&gt;当然 Asd_Okuu 教育了另一种思路：考虑 &lt;span class=&#34;math inline&#34;&gt;\(z = 2x - y\)&lt;/span&gt; 的过程是在数轴上做轴对称（钦定 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;gt;x\)&lt;/span&gt;），那么一定有 &lt;span class=&#34;math inline&#34;&gt;\(z\equiv x\pmod{(y-x)}\)&lt;/span&gt;，即我们可以用长度为 &lt;span class=&#34;math inline&#34;&gt;\(y-x\)&lt;/span&gt; 的段来覆盖。所以若存在两个段的长度分别为 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b) = 1\)&lt;/span&gt;，那么这些段线性组合起来是可以把数轴上所有点干碎的，其实也就是裴蜀定理了。&lt;/p&gt;
&lt;p&gt;所以将所有数排个序，将差分做 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;，发现这样是充分的，搞定了。&lt;/p&gt;
&lt;h3 id=&#34;b---nezzar-and-binary-string&#34;&gt;1477B - Nezzar and Binary String&lt;/h3&gt;
&lt;p&gt;一个 0-1 串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，需要满足第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天时 &lt;span class=&#34;math inline&#34;&gt;\([l_i,r_i]\)&lt;/span&gt; 内不同时含 0 和 1，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天结束时可以改变里面&lt;strong&gt;少于&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\((r_i - l_1 + 1) / 2\)&lt;/span&gt; 个字符，同时需要 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 天结束后变成 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，问能否达成。数据范围 &lt;span class=&#34;math inline&#34;&gt;\(2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;正着做太难了，倒着来吧。倒着来就相当于是填平区间，若里面 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 个数等于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个数就不可以，否则往改动少的那个去改，就完事了。。。。。拿个分块或者线段树维护就行了。&lt;/p&gt;
&lt;h3 id=&#34;c---nezzar-and-nice-beatmap&#34;&gt;1477C - Nezzar and Nice Beatmap&lt;/h3&gt;
&lt;p&gt;给定平面直角坐标系上的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\(A_1,A_2,\dots,A_n\)&lt;/span&gt; ，求一个排列 &lt;span class=&#34;math inline&#34;&gt;\(p_1,p_2,\dots,p_n\)&lt;/span&gt; 使得对于任意一个 $i(1,n),i$ 都有 &lt;span class=&#34;math inline&#34;&gt;\(\angle A_{p_i-1} A_{p_i} A_{p_i+1} &amp;lt; \dfrac{\pi}{2}\)&lt;/span&gt; 。若无解，输出 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; ，若有多个答案，输出任意一个即可。&lt;span class=&#34;math inline&#34;&gt;\(3 \leq n \leq 5000,\ -10^9\leq x_i,y_i \leq 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;手玩一下发现解一定存在，而且似乎每次选最远的点就可以了，结果真的就是这样，选出钝角的时候我们总可以通过选更长的边来解决钝角的问题。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-700&#34;&gt;Codeforces Round 700&lt;/h2&gt;
&lt;h3 id=&#34;b---painting-the-array&#34;&gt;1479B - Painting the Array&lt;/h3&gt;
&lt;p&gt;给定数组 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，你将将 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 染成 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 色，其中 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 为你指定的 &lt;span class=&#34;math inline&#34;&gt;\(0/1\)&lt;/span&gt; 数组，将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 中被染成 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 色的数字取出来按原顺序排成 &lt;span class=&#34;math inline&#34;&gt;\(a^{(0)}\)&lt;/span&gt;，染成 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 色的排成 &lt;span class=&#34;math inline&#34;&gt;\(a^{(1)}\)&lt;/span&gt;，定义 &lt;span class=&#34;math inline&#34;&gt;\(seg(a)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 中连续段的个数，求 &lt;span class=&#34;math inline&#34;&gt;\(seg(a^{(0)}) + seg(a^{(1)})\)&lt;/span&gt; 的最大值/最小值（分别对应 B1/B2），数据范围 &lt;span class=&#34;math inline&#34;&gt;\(10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;高妙贪心真的不是很玩得起，考虑 dp。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,a,b}\)&lt;/span&gt; 表示填了 &lt;span class=&#34;math inline&#34;&gt;\([1,i]\)&lt;/span&gt;，第一个序列末尾为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，第二个序列末尾为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最大/最小答案。发现可以干掉一维因为必然有一维是 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;。于是变成了 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,x}\)&lt;/span&gt; 表示填完 &lt;span class=&#34;math inline&#34;&gt;\([1,i]\)&lt;/span&gt;，分别的末尾为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，能达到的最大/最小答案。&lt;/p&gt;
&lt;p&gt;那么有转移 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_{i, a_{i-1}} &amp;amp;\leftarrow f_{i-1,x} + 1&amp;amp;a_i \ne x\\
f_{i,a_{i-1}}&amp;amp;\leftarrow f_{i-1,x}&amp;amp;a_i=x\\
f_{i,x}&amp;amp;\leftarrow f_{i-1,x} + 1&amp;amp;a_i\ne a_{i-1}\\
f_{i,x}&amp;amp;\leftarrow f_{i-1,x}&amp;amp;a_i=a_{i-1}
\end{aligned}
\]&lt;/span&gt; 这个东西可以使用线段树维护，大部分的转移都是平凡的 &lt;span class=&#34;math inline&#34;&gt;\(+1\)&lt;/span&gt;，写一个区间加区间最值的线段树即可，&lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 带走。&lt;/p&gt;
&lt;p&gt;当然高妙贪心也是有意思的——看根据两边队尾的 &lt;span class=&#34;math inline&#34;&gt;\(nxt\)&lt;/span&gt; 来选择，感觉非常的牛逼。&lt;/p&gt;
&lt;h3 id=&#34;c---continuous-city&#34;&gt;1479C - Continuous City&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le L\le R\le 10^6\)&lt;/span&gt;，构造一个有向带权图。要求 &lt;span class=&#34;math inline&#34;&gt;\(n\le 32\)&lt;/span&gt;，且所有边都从编号小的点指向编号大的点，此外还要求 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的所有路径权值都在 &lt;span class=&#34;math inline&#34;&gt;\([L, R]\)&lt;/span&gt; 内且不存在 &lt;span class=&#34;math inline&#34;&gt;\(x\in[L,R]\)&lt;/span&gt; 使得不存在或多于一条 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的路径的权值为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。或说明无解。&lt;/p&gt;
&lt;p&gt;说人话就是 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的路径需要恰好有 &lt;span class=&#34;math inline&#34;&gt;\(R - L + 1\)&lt;/span&gt; 条并且权值刚好覆盖了 &lt;span class=&#34;math inline&#34;&gt;\([L,R]\)&lt;/span&gt; 的区间。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 32\)&lt;/span&gt; 有点二进制的意思？考虑构造 &lt;span class=&#34;math inline&#34;&gt;\([1, 2^{k}]\)&lt;/span&gt; 的答案，令经过 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点表示选上 &lt;span class=&#34;math inline&#34;&gt;\(2^{i-2}\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点向后面所有边连上权为 &lt;span class=&#34;math inline&#34;&gt;\(2^{i-2}\)&lt;/span&gt; 的边，再从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 向后面所有点连权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的边，那么从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(k+2\)&lt;/span&gt; 的所有路径就都对应了 &lt;span class=&#34;math inline&#34;&gt;\([1,2^k]\)&lt;/span&gt; 里面的每一个数。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(R\ne 2^k\)&lt;/span&gt; 的情况，令其为 &lt;span class=&#34;math inline&#34;&gt;\(2^k + t\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(2^{k+1}&amp;gt;R\)&lt;/span&gt;。刚才的图中有一个性质，就是对于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点（&lt;span class=&#34;math inline&#34;&gt;\(i&amp;gt;1\)&lt;/span&gt;），&lt;span class=&#34;math inline&#34;&gt;\(1\to i\)&lt;/span&gt; 的所有路径里面是恰好覆盖了 &lt;span class=&#34;math inline&#34;&gt;\([1, 2^{i-2}]\)&lt;/span&gt; 的。并且若我们令 &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; 的二进制表示为 &lt;span class=&#34;math inline&#34;&gt;\((R_kR_{k-1}\cdots R_1R_0)_2\)&lt;/span&gt;，则对于 &lt;span class=&#34;math inline&#34;&gt;\(R_j=1\)&lt;/span&gt;，将该位设为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的话低位就可以任意覆盖的。&lt;/p&gt;
&lt;p&gt;就例如 &lt;span class=&#34;math inline&#34;&gt;\(R = (111010)_2\)&lt;/span&gt;，关注 &lt;span class=&#34;math inline&#34;&gt;\(R_3 = 1\)&lt;/span&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\([(110000)_2, (110111)_2]\)&lt;/span&gt; 都是可以取到的（第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 位任意取），这启发我们从 &lt;span class=&#34;math inline&#34;&gt;\(j+2\)&lt;/span&gt; 号点连边向一个新点 &lt;span class=&#34;math inline&#34;&gt;\(k+3\)&lt;/span&gt;，边权为更高位上的值之类的想法。但是这样会出现一些细节上的遗漏，因为形如 &lt;span class=&#34;math inline&#34;&gt;\((110000)_2\)&lt;/span&gt; 就是没能覆盖到的，因为 &lt;span class=&#34;math inline&#34;&gt;\(j+2\)&lt;/span&gt; 号点覆盖的是 &lt;span class=&#34;math inline&#34;&gt;\([1, 2^{j}]\)&lt;/span&gt;，有一个 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的下界没被覆盖，而 &lt;span class=&#34;math inline&#34;&gt;\(2^{j}\)&lt;/span&gt; 的上界又恰好多覆盖了一位。&lt;/p&gt;
&lt;p&gt;这启发我们 &lt;span class=&#34;math inline&#34;&gt;\(R\leftarrow R - 1\)&lt;/span&gt;，这样子就刚好把上述问题全部修复了，&lt;span class=&#34;math inline&#34;&gt;\(1\to k+3\)&lt;/span&gt; 的所有路径就能覆盖整个区间了。而对于 &lt;span class=&#34;math inline&#34;&gt;\(L\ne 1\)&lt;/span&gt;，直接平移 &lt;span class=&#34;math inline&#34;&gt;\(L - 1\)&lt;/span&gt;，新开一个节点再接上去即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;tuple&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r, n;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; l &amp;gt;&amp;gt; r;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    r = r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;31&lt;/span&gt; - &lt;span class=&#34;fu&#34;&gt;__builtin_clz&lt;/span&gt;(r); &lt;span class=&#34;co&#34;&gt;// 最高位&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) ans.emplace_back(i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, j + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) ans.emplace_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;__builtin_popcount&lt;/span&gt;(r) &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --r, ans.emplace_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i) &amp;amp; r) {&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) tmp |= ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j) &amp;amp; r);&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.emplace_back(i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + tmp);&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l != &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans.emplace_back(n, n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), ++n;&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;YES&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; ans.size() &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : ans) {&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, j, k; tie(i, j, k) = x;&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; j &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; k &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---odd-mineral-resource&#34;&gt;1479D - Odd Mineral Resource&lt;/h3&gt;
&lt;p&gt;给定一棵树，每个点有颜色 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;。多次查询，给定 &lt;span class=&#34;math inline&#34;&gt;\(u,v,l,r\)&lt;/span&gt;，求一个颜色 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(x\in[l,r]\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 在路径 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 上出现了奇数次。数据范围 &lt;span class=&#34;math inline&#34;&gt;\(3\times 10^5\)&lt;/span&gt;，5s。&lt;/p&gt;
&lt;p&gt;根号做法见&lt;a href=&#34;https://oi.imyangty.com/summary-ds4/&#34;&gt;这里&lt;/a&gt;，这里说一下随机化的单 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 算法。&lt;/p&gt;
&lt;p&gt;考虑到出现偶数次不考虑的限制很像异或，那么如果设路径 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 上 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 颜色的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(f(u,v,l,r)\)&lt;/span&gt; 的话，若其异或起来为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 能描述路径上没有出现奇数次的话，那我们就可以使用主席树 + 二分来单 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 查询。&lt;/p&gt;
&lt;p&gt;所以考虑将每种颜色在 &lt;span class=&#34;math inline&#34;&gt;\([0,2^{64})\)&lt;/span&gt; 内随机重新赋值，这样子出错的概率极低（为 &lt;span class=&#34;math inline&#34;&gt;\(2^{-64}q\)&lt;/span&gt;，接近为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;套路地，将 &lt;span class=&#34;math inline&#34;&gt;\(f(u,v,l,r)\)&lt;/span&gt; 拆分为 &lt;span class=&#34;math inline&#34;&gt;\(f(1,u,l,r)\oplus f(1,v,l,r)\oplus f(1,\mathrm{LCA}, l,r)\oplus f(1,\mathrm{fa}_{\mathrm{LCA}}, l, r)\)&lt;/span&gt;，使用主席树维护 &lt;span class=&#34;math inline&#34;&gt;\(f(1, u, l, r)\)&lt;/span&gt; 然后四路同时二分即可。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-701-div.-2&#34;&gt;Codeforces Round #701 (Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/14。A + C + D。&lt;/p&gt;
&lt;h3 id=&#34;e---move-and-swap&#34;&gt;1485E - Move and Swap&lt;/h3&gt;
&lt;p&gt;有一棵树，以 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为根，叶子结点深度相同,结点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有权值 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;。现在有红蓝两颗棋子，每一步可以进行如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把红色棋子移动到它的子节点；&lt;/li&gt;
&lt;li&gt;把蓝色棋子移动到它下一层的任何一个结点；&lt;/li&gt;
&lt;li&gt;选择交换或不交换红子与蓝子的位置；&lt;/li&gt;
&lt;li&gt;计算得分为 &lt;span class=&#34;math inline&#34;&gt;\(|a_{red}-a_{blue}|\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问最大的得分和。&lt;/p&gt;
&lt;p&gt;将点分层考虑，主要考虑到红点比较固定而蓝点四处乱飞，所以设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为操作完后红点在 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 时的答案（发现蓝点的位置是无关紧要的）。考虑转移：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不交换的时候，设 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{fa}_u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的父亲，则 &lt;span class=&#34;math display&#34;&gt;\[
f_u = f_{\mathrm{fa}_u} + \max_v\{|a_u - a_v|\}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 就是蓝点下落的位置，不难发现只能是最大的或最小的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交换的话，那么红点就是任意飘了，设交换前红点位于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
f_u = \max_k\{|a_u - a_k| + f_{\mathrm{fa}_k}\}
\]&lt;/span&gt; 套路地拆绝对值得到 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{fa}_k} - a_k + a_u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{fa}_k} + a_k - a_u\)&lt;/span&gt;。考虑维护 &lt;span class=&#34;math inline&#34;&gt;\(\max\{f_{\mathrm{fa}_k} + a_k\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\max\{f_{\mathrm{fa}_k} - a_k\}\)&lt;/span&gt; 即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;f---copy-or-prefix-sum&#34;&gt;1485F - Copy or Prefix Sum&lt;/h3&gt;
&lt;p&gt;给定一个 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 数组，一个 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 是合法的指对于每一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(b_i=a_i\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(b_i=\sum\limits_{j=1}^{i}a_j\)&lt;/span&gt; 。问合法的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 有多少个。答案对 &lt;span class=&#34;math inline&#34;&gt;\(10^9+7\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(1\le t\le 10^4,1\le \sum n\le 2\times 10^5,-10^9\le b_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑使用 dp 求解，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,S}\)&lt;/span&gt; 为填了前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，&lt;span class=&#34;math inline&#34;&gt;\(a_i = S\)&lt;/span&gt; 的方案数。根据是满足 &lt;span class=&#34;math inline&#34;&gt;\(b_i = a_i\)&lt;/span&gt; 还是 &lt;span class=&#34;math inline&#34;&gt;\(b_i = \sum a_j\)&lt;/span&gt; 分为两种转移：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i, j + b_i} = f_{i - 1, j}\)&lt;/span&gt;，此时是 &lt;span class=&#34;math inline&#34;&gt;\(b_i = a_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i, b_i} = \sum f_{i - 1, j}\)&lt;/span&gt;，此时是 &lt;span class=&#34;math inline&#34;&gt;\(b_i = a_i\)&lt;/span&gt; 的情况，但是需要与上面 &lt;span class=&#34;math inline&#34;&gt;\(j = 0\)&lt;/span&gt; 的情况去一下重。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发现第一种转移实际上就是数组平移，第二种转移是在做全局和。开一个小标记记录第一种操作的全局平移量，再开一个 &lt;span class=&#34;math inline&#34;&gt;\(ans\)&lt;/span&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, b_i}= ans + ans - f_{i - 1, b_i}\)&lt;/span&gt;（因为新的 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, b_i}\)&lt;/span&gt; 就是 &lt;span class=&#34;math inline&#34;&gt;\(ans\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;拿 &lt;code&gt;map&lt;/code&gt; 随缘维护一下就行了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-706&#34;&gt;Codeforces Round 706&lt;/h2&gt;
&lt;h3 id=&#34;a---diamond-miner&#34;&gt;1495A - Diamond Miner&lt;/h3&gt;
&lt;p&gt;在 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 轴上有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个钻石矿，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 轴上有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个矿工，保证所有的矿工和钻石都不在原点。需要建立每个矿工与每个钻石矿的一一对应关系使得每对矿工和矿的距离之和最小。&lt;/p&gt;
&lt;p&gt;要么是贪心要么是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的 dp，先考虑两对矿工和钻石的情况：（由于正负其实不影响，所以我们把所有的钻石和矿的坐标都取绝对值，在正半轴上考虑问题。两对点的情况无非就是交叉着连（蓝线）和平行着连（红线）。所以考虑哪个要大一些，即比较 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{a^2 + d^2} + \sqrt{b^2 + c^2}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{a^2 + c^2} + \sqrt{b^2 + d^2}\)&lt;/span&gt; 的大小。&lt;/p&gt;
&lt;p&gt;两边同时平方：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^2 + b^2 + c^2 + d^2 + \sqrt{(a^2 + d^2)(b^2 + c^2)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^2 + b^2 + c^2 + d^ 2+ \sqrt{(a^2 + c^2)(b^2 + d^2)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以只需要考虑 &lt;span class=&#34;math inline&#34;&gt;\((a + d)(b+ c)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\((a + c)(b + d)\)&lt;/span&gt; 的大小即可，化简之后不难发现&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
(a + d)(b + c)\ge(a + c)(b + d)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以&lt;strong&gt;平行的连法一定是最优的&lt;/strong&gt;。将所有的点取绝对值后排序然后依次累加答案就搞定了。&lt;/p&gt;
&lt;h3 id=&#34;b---lets-go-hiking&#34;&gt;1495B - Let’s Go Hiking&lt;/h3&gt;
&lt;p&gt;题意：给定一个 &lt;span class=&#34;math inline&#34;&gt;\(1-n\)&lt;/span&gt; 的排列 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，Qingshan 和 Daniel 在草稿纸上按照如下规则进行远足游戏。 首先 Qingshan 选定一个数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; &lt;strong&gt;并告诉 Daniel&lt;/strong&gt;，接下来 Daniel 选定另一个数 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le x, y\le n\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x\not=y\)&lt;/span&gt;。然后他们轮流进行游戏，Qingshan 为先手：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果轮到 Qingshan，则 Qingshan 只能把 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 移动到 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;#39;\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;#39; - x = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;#39; \neq y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p_x\gt p_{x&amp;#39;}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;如果轮到 Daniel，则 Daniel 只能把 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 移动到 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;#39;\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;#39; - y = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;#39;\neq x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p_y\lt p_{y&amp;#39;}\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果轮到某一方时无路可走了，则另一方胜利。 假设双方都足够聪明，那么判断有多少个初始的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 可以让 Qingshan 一定取胜。&lt;/p&gt;
&lt;p&gt;题解：首先发掘这个游戏的性质：每个人只能往一个方向走，不能回头。注意到这个性质之后不难发现如果 Qingshan 要赢，那么 Daniel 必须被 Qingshan 卡死或者自己被卡死。&lt;/p&gt;
&lt;p&gt;因为两方都足够聪明，所以我们把问题范围缩小到最长单调序列上面来，因为这样可以最大化双方的移动步数。&lt;/p&gt;
&lt;p&gt;可以证明的是，&lt;strong&gt;Qingshan 一开始选的点在最长单调序列的顶端是他能赢的必要条件&lt;/strong&gt;。至于为什么呢？如果 Qingshan 选的不是最长单调序列的顶端，那么 Daniel 就可以选最长单调序列的底端进行游戏，那么 Qingshan 肯定先被卡死。&lt;/p&gt;
&lt;p&gt;并且如果有多条不相交的最长单调序列，&lt;strong&gt;Qingshan 必输&lt;/strong&gt;。因为这样 Daniel 可以选择另外一条序列的底端，而 Qingshan 是先手，所以 Qingshan &lt;strong&gt;肯定先被卡死&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果只有一条最长单调序列，还是 &lt;strong&gt;Qingshan 必输&lt;/strong&gt;，因为 Qingshan 是先手，Daniel 选择的位置但凡与 Qingshan 的初始位置成的链长为&lt;strong&gt;偶数&lt;/strong&gt;，&lt;strong&gt;那么 Daniel 肯定可以卡死 Qingshan&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;剩下的两种情况就是同时有两条最长单调序列，要么成“V”形要么成山峰形。对于“V”形的情况&lt;strong&gt;还是 Qingshan 必输&lt;/strong&gt;，因为 Daniel 可以往与 Qingshan 相反的方向跑走，那么当 Qingshan 最后到达谷底的时候就 GG 了。对于山峰形的情况，Qingshan 肯定是选峰顶，接下来分最长单调序列长度的奇偶性讨论：&lt;/p&gt;
&lt;p&gt;奇数：如果 Daniel 选了坡底，&lt;strong&gt;那么 Qingshan 只要往 Daniel 的方向走那么就必然可以卡死 Daniel&lt;/strong&gt;；如果不选坡底，&lt;strong&gt;那么 Qingshan 只要往另一个方向走就可以让 Daniel 先无路可走&lt;/strong&gt;，所以此时答案为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，Qingshan 唯一的必胜策略就是选择山顶。&lt;/p&gt;
&lt;p&gt;偶数：类似上面的分析方法，不难发现&lt;strong&gt;要么 Daniel 卡死 Qingshan，要么 Qingshan 先无路可走&lt;/strong&gt;，所以 Qingshan &lt;strong&gt;必败&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分析到这里我们就发现了&lt;strong&gt;答案为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 当且仅当有两条最长单调序列并且他们共享一个最高点，否则答案为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/strong&gt;。&lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 直接扫就可以过了。&lt;/p&gt;
&lt;h3 id=&#34;c---garden-of-the-sun&#34;&gt;1495C - Garden of the Sun&lt;/h3&gt;
&lt;p&gt;题意：给定一个 &lt;span class=&#34;math inline&#34;&gt;\(n\times m\)&lt;/span&gt; 矩阵，里面含有字符 &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;X&lt;/code&gt;。保证所有 &lt;code&gt;X&lt;/code&gt; 之间无公共点（即不联通），请将一部分 &lt;code&gt;.&lt;/code&gt; 替换成 &lt;code&gt;X&lt;/code&gt; 使得这些 &lt;code&gt;X&lt;/code&gt; 形成一棵树（要求四联通，即两个 &lt;code&gt;X&lt;/code&gt; 之间有一公共边，不能有环）。&lt;/p&gt;
&lt;p&gt;首先&lt;strong&gt;所有 &lt;code&gt;X&lt;/code&gt; 之间无公共点&lt;/strong&gt;是一个特别好的性质，这保证了下面填充列的方法的正确性。&lt;/p&gt;
&lt;p&gt;具体地，考虑 &lt;span class=&#34;math inline&#34;&gt;\(3\mid m\)&lt;/span&gt; 的情况，不妨直接将 &lt;span class=&#34;math inline&#34;&gt;\(2,5,8,\cdots\)&lt;/span&gt; 列全部填成 &lt;code&gt;X&lt;/code&gt;，不难发现这样&lt;strong&gt;隔两列填一列的方式是不会出现环的&lt;/strong&gt;，然后再将 &lt;span class=&#34;math inline&#34;&gt;\(3, 6, 9, \cdots\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(4,7,10,\cdots\)&lt;/span&gt; 等列构造成联通的就可以了，最简单的方法就是只考虑第一行和第二行，如果合法就直接连。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(3\not\mid m\)&lt;/span&gt;，那么只需要变一下，把 &lt;span class=&#34;math inline&#34;&gt;\(1, 4, 7,\cdots\)&lt;/span&gt; 填成 &lt;code&gt;X&lt;/code&gt;，剩余操作类似。至于为什么填的列改变了则可以考虑画一下图自己模拟一下，会发现如果选 &lt;span class=&#34;math inline&#34;&gt;\(2, 5, 8,\cdots\)&lt;/span&gt; 的话在 &lt;span class=&#34;math inline&#34;&gt;\(m = 3k + 1\)&lt;/span&gt; 的时候会多出一个需要单独考虑的列，所以不如简化问题。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-707-div.2-based-on-moscow-open-olympiad-in-informatics&#34;&gt;Codeforces Round 707 Div.2 based on moscow open olympiad in informatics&lt;/h2&gt;
&lt;h3 id=&#34;a---going-home&#34;&gt;1500A - Going Home&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(4\le n\le 2\times10^5\)&lt;/span&gt; 并且 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1,n],1\le a_i\le 2.5\times10^6\)&lt;/span&gt;，求四个不同的下标 &lt;span class=&#34;math inline&#34;&gt;\(x,y,z,w\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a_x + a_y = a_z + a_w\)&lt;/span&gt;。 有解则打印解，无解输出 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{NO}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到我们的和 &lt;span class=&#34;math inline&#34;&gt;\(a_i + a_j\le 5\times 10^6\)&lt;/span&gt;，这个是解决问题的关键。 所以我们直接大力枚举 &lt;span class=&#34;math inline&#34;&gt;\(S = a_i + a_j\)&lt;/span&gt;，记录一下加出来的这个 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，如果同样的 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 出现了第二次则直接输出答案就好。根据&lt;strong&gt;鸽巢原理&lt;/strong&gt;，我们如果枚举的次数超过了值域，那么就肯定不存在解。&lt;/p&gt;
&lt;h2 id=&#34;contest-2050-and-codeforces-round-718-div.1-div.2&#34;&gt;Contest 2050 and Codeforces Round #718 (Div.1 + Div.2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/14&lt;/p&gt;
&lt;h3 id=&#34;e---group-photo&#34;&gt;1517E - Group Photo&lt;/h3&gt;
&lt;p&gt;将正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 划分成两部分，下标分别为 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt;，要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(c_i - c_{i-1} \le c_{i+1} - c_i\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p_i - p_{i-1}\ge p_{i+1}-p_i\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{x\in C}a_x &amp;lt; \sum\limits_{y\in P}a_y\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问方案数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 二十万，&lt;span class=&#34;math inline&#34;&gt;\(a_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的限制是前松后紧和前紧后松，而一个紧对应着另一个必须松，有点诈骗的感觉，所以能出现的划分也就只有如下两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;P...PC...C&lt;/code&gt;，正则表达式 &lt;code&gt;P+C+&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PC...CPC...PCP...PC&lt;/code&gt;，正则表达式 &lt;code&gt;P?C+(PC)*P+C?&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意到第二种里面 &lt;code&gt;C..&lt;/code&gt; 的部分和 &lt;code&gt;P..&lt;/code&gt; 的部分必须至少一个 &lt;code&gt;C&lt;/code&gt; 和一个 &lt;code&gt;P&lt;/code&gt;，否则会退化成第一种。&lt;/p&gt;
&lt;p&gt;第一种很容易使用前缀和统计。第二种枚举 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 种头尾选/不选的 case，然后枚举 &lt;code&gt;C&lt;/code&gt; 的个数，由于其显然关于 &lt;code&gt;PC&lt;/code&gt; 的个数有单调性，所以二分即可，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;f---reunion&#34;&gt;1517F - Reunion&lt;/h3&gt;
&lt;p&gt;大会有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个志愿者 , 他们之间的关系可以用一棵 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的点的树描述 . 第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个结点代表第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个志愿者 . 定义树上两点间距离 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{dis}(u,v)\)&lt;/span&gt; 为为他们之间的最短路径所经过的边数。&lt;/p&gt;
&lt;p&gt;现在他们想进行一场聚会 , 一些志愿者有空参加 , 而其它的正忙 . 在这种情况下 , 对于某个志愿者 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和非负整数 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; , 如果所有与 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的距离不超过 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 的志愿者&lt;strong&gt;全部&lt;/strong&gt;有空参加 , 那么可以召开一场以 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为中心 , 半径为 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 的聚会 . 这场聚会的等级定义为所有可能的半径 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 中的&lt;strong&gt;最大值&lt;/strong&gt; .&lt;/p&gt;
&lt;p&gt;每一个志愿者都有 &lt;span class=&#34;math inline&#34;&gt;\(\frac12\)&lt;/span&gt; 的概率有空参加或者正忙 . 现在请你求出所有情况下聚会等级的&lt;strong&gt;期望&lt;/strong&gt;对 &lt;span class=&#34;math inline&#34;&gt;\(998\ 244\ 353\)&lt;/span&gt; 取模的结果 . 特别的 , 当所有志愿者都正忙时 , 该聚会的等级为 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; ; 当所有志愿者都有空参加时 , 该聚会的等级为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le300\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;期望题基本没做过几道，不埋怨自己了。&lt;/p&gt;
&lt;p&gt;对每个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 去寻找答案是困难的，考虑通过每个 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 求方案数来算期望。&lt;/p&gt;
&lt;p&gt;而正面地考虑&lt;strong&gt;存在&lt;/strong&gt;一个节点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 使得与其距离 &lt;span class=&#34;math inline&#34;&gt;\(\le r\)&lt;/span&gt; 的人都有空是困难的，逆向地来看，不妨令不能参加的染成黑色，定义 &lt;span class=&#34;math inline&#34;&gt;\(B_{u,r} = \{v:dis(u,v)\le r\}\)&lt;/span&gt;，那么对于所有染色了的 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B_{u,r}\)&lt;/span&gt; 都是被干掉了的。&lt;/p&gt;
&lt;p&gt;那么，若所有 &lt;span class=&#34;math inline&#34;&gt;\(B_{u,r}\)&lt;/span&gt; 的并包含了所有点，则说明该情况下合法的半径一定 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt;r\)&lt;/span&gt;，如果我们能对于所有 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 算出 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; r\)&lt;/span&gt; 的情况，简单差分一下也就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(=r\)&lt;/span&gt; 的情况了。&lt;/p&gt;
&lt;p&gt;所以问题转化为对于一个 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;，求染色方案数，使得 &lt;span class=&#34;math inline&#34;&gt;\(B_{u,r}\)&lt;/span&gt; 的并能将所有点包含。考虑 dp。&lt;/p&gt;
&lt;h2 id=&#34;harbour.space-scholarship-contest-2021-2022-open-for-everyone-rated-div.-1-div.-2&#34;&gt;Harbour.Space Scholarship Contest 2021-2022 (open for everyone, rated, Div. 1 + Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 21/10/18. A + B + C + D + F。&lt;/p&gt;
&lt;h3 id=&#34;e---permutation-shift&#34;&gt;1553E - Permutation Shift&lt;/h3&gt;
&lt;p&gt;初始有排列 &lt;span class=&#34;math inline&#34;&gt;\((1, 2, \cdots, n)\)&lt;/span&gt;，现给定排列 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 和正整数 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，求出所有满足下列条件的整数 &lt;span class=&#34;math inline&#34;&gt;\(k\in[0, n- 1]\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将初始排列向右循环移位 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个单位后，能经过不超过 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次交换元素的操作后得到 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le m\le \dfrac n3\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可以考虑枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 然后判断这个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 是否可行。但是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 显然会爆炸。考虑由于我们一次交换最多改变两个数的位置，所以位置不用改变的数字至少有 &lt;span class=&#34;math inline&#34;&gt;\(n - 2m\)&lt;/span&gt; 个，令 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 表示循环移位 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次后不用动的数字个数，一定有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 0}^{n - 1}x_i = n\)&lt;/span&gt;，而且由 &lt;span class=&#34;math inline&#34;&gt;\(m\le \dfrac n 3\)&lt;/span&gt; 得知 &lt;span class=&#34;math inline&#34;&gt;\(x_k\ge \dfrac n 3\)&lt;/span&gt; 恒成立。这样满足条件的 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 至多有 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个。所以我们预处理一下所有的 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 然后每次找 &lt;span class=&#34;math inline&#34;&gt;\(\ge n - 2m\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 找环即可，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;f---pairwise-modulo&#34;&gt;1553F - Pairwise Modulo&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{a_n\}\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le 2\times 10^5\)&lt;/span&gt;），对每个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 求出 &lt;span class=&#34;math inline&#34;&gt;\(f_k = \displaystyle\sum_{1\le i,j\le k}a_i\bmod a_j\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑新加进来一个 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 时产生的贡献，将这部分贡献与 &lt;span class=&#34;math inline&#34;&gt;\(f_{i - 1}\)&lt;/span&gt; 相加即得到 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;。其分为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum_j a_j\bmod a_i\)&lt;/span&gt;。这部分比较好办，树状数组直接扫便是，俩 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum_j a_i\bmod a_j\)&lt;/span&gt;。这部分不太好直接去算。考虑 &lt;span class=&#34;math inline&#34;&gt;\(a_i\bmod a_j = a_i - a_j\lfloor a_i/a_j\rfloor\)&lt;/span&gt;，故可以在计算之前的 &lt;span class=&#34;math inline&#34;&gt;\(a_j\)&lt;/span&gt; 的时候顺便更新一下它能更新到的区间。区间加，单点查，依然可以树状数组。还是俩 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 解决掉了。比 E 不知道简单到哪里去了。&lt;/p&gt;
&lt;h3 id=&#34;g---common-divisor-graph&#34;&gt;1553G - Common Divisor Graph&lt;/h3&gt;
&lt;p&gt;给定一个包含 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的图。第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个节点都有权值 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，没有两个节点权值相同。节点 &lt;span class=&#34;math inline&#34;&gt;\(i,j\)&lt;/span&gt; 之间有一条无向边仅当 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_i,a_j)&amp;gt;1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问，每次包含整数 &lt;span class=&#34;math inline&#34;&gt;\(s,t\)&lt;/span&gt; 表示你希望从节点 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到达节点 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;。为了到达那个节点，你可以进行下列操作任意次：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选定一个节点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;。创造一个新的节点，该节点的权值为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\times(a_i+1)\)&lt;/span&gt;，并按照上述规则连边。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于每次询问，你都需要求出，至少需要多少次操作才能使节点 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 能到达节点 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;。询问互相独立。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(a_s(a_s + 1)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(a_t(a_t + 1)\)&lt;/span&gt; 必然有公约数 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 所以连通。所以答案至多为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑一开始先用并查集连好已经有了的边，查询的时候若已经连通，则答案为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。然后考虑什么时候答案为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，显然，当 &lt;span class=&#34;math inline&#34;&gt;\(a_s + 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(a_t\)&lt;/span&gt; 所在集合连通或者 &lt;span class=&#34;math inline&#34;&gt;\(a_s\)&lt;/span&gt; 所在集合和 &lt;span class=&#34;math inline&#34;&gt;\(a_t + 1\)&lt;/span&gt; 连通时答案就为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。这个可以预处理一下。&lt;/p&gt;
&lt;p&gt;时间复杂度大抵是 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 级别的，能过。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-737-div.-2&#34;&gt;Codeforces Round #737 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;c.-moamen-and-xor&#34;&gt;1557C. Moamen and XOR&lt;/h3&gt;
&lt;p&gt;拆开位来考虑。处理一下组合数。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-738-div.-2&#34;&gt;Codeforces Round #738 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;d1.-mocha-and-diana-easy-version&#34;&gt;1559D1. Mocha and Diana (Easy Version)&lt;/h3&gt;
&lt;p&gt;暴力给两个森林加边，&lt;span class=&#34;math inline&#34;&gt;\(O(n^2\log n)\)&lt;/span&gt; 可过。&lt;/p&gt;
&lt;h3 id=&#34;d2.-mocha-and-diana-hard-version&#34;&gt;1559D2. Mocha and Diana (Hard Version)&lt;/h3&gt;
&lt;p&gt;考虑延续上题的性质。&lt;/p&gt;
&lt;p&gt;贪心的把 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 能连的边连了，然后会出现两类点：只在 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 图中与 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 相连以及只在 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 图中与 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 相连。然后显然可以在两个集合中挑点出来连边。直接连就行了，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e.-mocha-and-stars&#34;&gt;1559E. Mocha and Stars&lt;/h3&gt;
&lt;p&gt;求满足如下条件的序列 &lt;span class=&#34;math inline&#34;&gt;\((a_1, a_2, \cdots , a_n)\)&lt;/span&gt; 的数量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, n], a_i\in[l_i, r_i]\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum a_i\le m\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1, a_2, \cdots, a_n) = 1\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 50\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le 10^5\)&lt;/span&gt;，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;p&gt;不考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，发现其为一个背包。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品，背包容量为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数，则有转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \sum_{k = l_i}^{r_i}f_{i - 1, j - k}
\]&lt;/span&gt; 这样直接去做是 &lt;span class=&#34;math inline&#34;&gt;\(O(nm^2)\)&lt;/span&gt; 的，发现转移可以使用前缀和优化，具体设 &lt;span class=&#34;math inline&#34;&gt;\(s_{i, j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math display&#34;&gt;\[
s_{i, j} = \sum_{k = 0}^jf_{i, k}
\]&lt;/span&gt; 然后就有了转移方程 &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = s_{i - 1, j - l_i} - s_{i - 1, j - r_i - 1}
\]&lt;/span&gt; 背包部分的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，这类套路问题使用莫比乌斯反演即可。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}[\gcd(a_1,\cdots,a_n)=1]\left[\sum_{i = 1}^na_i\le m\right]\\
=&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d \mid \gcd(a_1,\cdots,a_n)}\mu(d)\\ =&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d\mid a_1,\cdots,d \mid a_n}\mu(d)\\
=&amp;amp;\sum_{d=1}^M\mu(d)\sum_{a_1=\lceil\frac{l_1}{d}\rceil}^{\lfloor\frac{r_1}{d}\rfloor}\sum_{a_2=\lceil\frac{l_2}{d}\rceil}^{\lfloor\frac{r_2}{d}\rfloor}\cdots\sum_{a_n=\lceil\frac{l_n}{d}\rceil}^{\lfloor\frac{r_n}{d}\rfloor}\left[\sum_{i = 1}^na_i\le \left\lfloor\frac m d\right\rfloor\right]
\end{aligned}
\]&lt;/span&gt; 总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nm\log m)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    init();&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(L[i]), read(R[i]);&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(d, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (mu[d] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m / d) sum[j] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            l[i] = (L[i] + d - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / d, r[i] = R[i] / d;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m / d) f[j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, l[i], m / d) {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[j] = sum[j - l[i]];&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j - r[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) f[j] -= sum[j - r[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            sum[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m / d) sum[j] = f[j] + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += sum[m / d] * mu[d];&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;vk-cup-2021-final-engine-and-codeforces-round-740&#34;&gt;VK Cup 2021 — Final (Engine) and Codeforces Round #740&lt;/h2&gt;
&lt;h3 id=&#34;a.-simply-strange-sort&#34;&gt;1561A. Simply Strange Sort&lt;/h3&gt;
&lt;p&gt;模拟&lt;/p&gt;
&lt;h3 id=&#34;a.-charmed-by-the-game&#34;&gt;1558A. Charmed by the Game&lt;/h3&gt;
&lt;p&gt;直接枚举 A 先手 B 赢比赛的次数，分 &lt;span class=&#34;math inline&#34;&gt;\(a + b\)&lt;/span&gt; 的奇偶性讨论即可。&lt;/p&gt;
&lt;h3 id=&#34;c.-deep-down-below&#34;&gt;1561C. Deep Down Below&lt;/h3&gt;
&lt;p&gt;二分答案，水。&lt;/p&gt;
&lt;h3 id=&#34;b.-up-the-strip&#34;&gt;1558B. Up the Strip&lt;/h3&gt;
&lt;p&gt;一个点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 可以通过以下两种方式到别的格子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减法操作：到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le y &amp;lt; x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;除法操作：到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y = \lfloor x / d\rfloor\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(d\ge 2\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp，首先最朴素的做法可以通过前缀和和整除分块实现，总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 对后面产生的贡献。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(j = qi + r\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le r &amp;lt; q\)&lt;/span&gt;，则不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor j / q\rfloor = i\)&lt;/span&gt;，所以一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 对于每个 &lt;span class=&#34;math inline&#34;&gt;\(q\ge 2\)&lt;/span&gt;，会对 &lt;span class=&#34;math inline&#34;&gt;\([qi, q(i + 1))\)&lt;/span&gt; 产生贡献。&lt;/p&gt;
&lt;p&gt;差分维护一下即可，复杂度调和 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-741-div.-2&#34;&gt;Codeforces Round 741 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A + C&lt;/p&gt;
&lt;h3 id=&#34;c---rings&#34;&gt;1562C - Rings&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(10^5\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(01\)&lt;/span&gt; 串，要求选出两不同的长度大于 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor \frac n2\rfloor\)&lt;/span&gt; 的子段，要求一个为另一个的倍数，保证有解。&lt;/p&gt;
&lt;p&gt;注意到一个二进制数后面添一个 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 相当于就是乘上 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。而本题中前导零也不影响，所以直接找串中的 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 即可。特判全 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 串。&lt;/p&gt;
&lt;h2 id=&#34;deltix-round-summer-2021-open-for-everyone-rated-div.-1-div.-2&#34;&gt;Deltix Round, Summer 2021 (open for everyone, rated, Div. 1 + Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;c---compressed-bracket-sequence&#34;&gt;1556C - Compressed Bracket Sequence&lt;/h3&gt;
&lt;p&gt;考虑如果我们遇到了一串连续的右括号，统计他们的贡献。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果左边的左括号比他多，则贡献为右括号的个数。&lt;/li&gt;
&lt;li&gt;如果左边的左括号和他一样多，则贡献为右括号的数量加上左边相邻合法括号串的数量。&lt;/li&gt;
&lt;li&gt;如果左边的左括号比他少，则贡献为右括号的数量加上左边相邻合法括号串的数量，但是还剩若干右括号没有匹配，往左枚举左括号重复上述三种情况即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要维护一个点结尾处合法括号串的数量。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll sum[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= n; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot = a[i];&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j -= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!tot) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a[j]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tot &amp;lt; a[j]) {&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += tot;&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] -= tot;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++sum[i];&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tot == a[j]) {&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += tot + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                sum[i] += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                tot -= a[j];&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += a[j] + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---take-a-guess&#34;&gt;1556D - Take a Guess&lt;/h3&gt;
&lt;p&gt;有一个很关键的结论是 &lt;span class=&#34;math inline&#34;&gt;\(a + b = (a\land b) + (a\lor b)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以直接询问 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + a_i\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(i\le [2, n]\)&lt;/span&gt;），然后再询问 &lt;span class=&#34;math inline&#34;&gt;\(a_2 + a_3\)&lt;/span&gt;，就可以刚好在 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 次询问里面得到答案。&lt;/p&gt;
&lt;h3 id=&#34;e---equilibrium&#34;&gt;1556E - Equilibrium&lt;/h3&gt;
&lt;p&gt;首先，令 &lt;span class=&#34;math inline&#34;&gt;\(c_i = b_i - a_i\)&lt;/span&gt;，则一次操作变为在 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 的某些位置上加一，某些位置上减一，目标变为使某一段 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 全部变为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可行性：会发现这个操作有点类似括号匹配，故 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 上的任意位置的前缀和不可小于零而且总和要为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。即 &lt;span class=&#34;math inline&#34;&gt;\(\min\{s_j\}\ge s_{l - 1}\)&lt;/span&gt;。需要一个 RMQ。&lt;/p&gt;
&lt;p&gt;构造答案：将加减法两两配对之后多组的一起完成。即为嵌套最深的括号，相当于爬山爬的最高峰，查一下爬山的最高峰即可。也需要一个 RMQ。直接上就行了。&lt;/p&gt;
&lt;h3 id=&#34;f---sports-betting&#34;&gt;1556F - Sports Betting&lt;/h3&gt;
&lt;h3 id=&#34;g---gates-to-another-world&#34;&gt;1556G - Gates to Another World&lt;/h3&gt;
&lt;h2 id=&#34;codeforces-round-742-div.-2&#34;&gt;Codeforces Round #742 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A + B + C&lt;/p&gt;
&lt;h3 id=&#34;c---carrying-conundrum&#34;&gt;1567C - Carrying Conundrum&lt;/h3&gt;
&lt;p&gt;题意：定义 Alice 的加法为 &lt;span class=&#34;math inline&#34;&gt;\(a + b\)&lt;/span&gt; 竖式下进位进到前面两位去。问有多少种有序正整数对 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a + b = n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可以考虑 DP，注意到只有当前位和后面一位有后效性，所以可以令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k_0, k_1}\)&lt;/span&gt; 表示从低到高第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，当前位及上一位有没有产生进位，转移易得，答案为 &lt;span class=&#34;math inline&#34;&gt;\(f_{len, 0, 0}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意需要去除 &lt;span class=&#34;math inline&#34;&gt;\((n, 0)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((0, n)\)&lt;/span&gt;。&lt;a href=&#34;https://codeforces.com/contest/1567/submission/127974617&#34;&gt;评测记录#127974617&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d---expression-evaluation-error&#34;&gt;1567D - Expression Evaluation Error&lt;/h3&gt;
&lt;p&gt;题意：给定一个数 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;，要求划分成 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个数 &lt;span class=&#34;math inline&#34;&gt;\(n_1,\cdots n_s\)&lt;/span&gt;，要求把这些数看成 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt; 进制的然后按照 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt; 进制加起来使得结果最大。构造方案。&lt;/p&gt;
&lt;p&gt;首先考虑按位贪心：让最高位最大是显然的，让其等于 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 的最高位一定是最优的。然后我们会发现这个构造出的最大结果一定不会大于 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 看成 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt; 进制表示的结果。&lt;/p&gt;
&lt;p&gt;最优的做法是尽量让 Alice 不要进位：将 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 表示成 &lt;span class=&#34;math inline&#34;&gt;\(10^k\)&lt;/span&gt; 之和，例如 &lt;span class=&#34;math inline&#34;&gt;\(25\)&lt;/span&gt; 就可以被表示为 &lt;span class=&#34;math inline&#34;&gt;\(10 + 10 + 1 + 1 + 1 + 1 + 1\)&lt;/span&gt;。但是难免有划分数量多的时候，那么就从高位往低位贪，让高位尽量不要进位即可。&lt;/p&gt;
&lt;p&gt;所以从最高位往最低位依次划分即可。&lt;/p&gt;
&lt;h3 id=&#34;e---non-decreasing-dilemma&#34;&gt;1567E - Non-Decreasing Dilemma&lt;/h3&gt;
&lt;p&gt;单点修改序列，区间查询不降子段个数。&lt;/p&gt;
&lt;p&gt;线段树维护每个区间的答案，左端的不降子段长度，右端的不降子段长度。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;pushup&lt;/code&gt; 即可。&lt;a href=&#34;https://codeforces.com/contest/1567/submission/127985171&#34;&gt;评测记录&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;f---one-four-overload&#34;&gt;1567F - One-Four Overload&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(n\times m\)&lt;/span&gt; 的方格，有 &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;X&lt;/code&gt; 两种点，要求在 &lt;code&gt;.&lt;/code&gt; 中填入 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;，&lt;code&gt;X&lt;/code&gt; 点中填入 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 的倍数满足其为与其四联通的 &lt;code&gt;.&lt;/code&gt; 中数字之和。输出无解或构造方案。&lt;/p&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
1&amp;amp;\equiv 1&amp;amp;\pmod 5\\
4&amp;amp;\equiv -1&amp;amp;\pmod 5
\end{aligned}
\]&lt;/span&gt; 所以，不难发现一个 &lt;code&gt;X&lt;/code&gt; 点旁边必须具有数量相等的 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;。对于形如 &lt;code&gt;.X.&lt;/code&gt; 的情况，只需要建边然后二分图染色一下就好了。关键是对于“十”字形的我们怎么处理。&lt;/p&gt;
&lt;p&gt;在纸上手玩几个发现对面的填相同颜色的是最优的，这样子能方便其他的构造方案：如&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;.1..
4X41
.1XX
.1X4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果我们这样&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;.1..
1X4.
.4XX
..X.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;发现构造不出来。按照上述方法构造二分图（为什么是二分图应该挺显然的）然后就可以通过了。&lt;a href=&#34;https://codeforces.com/contest/1567/submission/128134089&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-global-round-16&#34;&gt;Codeforces Global Round 16&lt;/h2&gt;
&lt;p&gt;A + B + C + D1。D2 已补，水。&lt;/p&gt;
&lt;h3 id=&#34;e---buds-re-hanging&#34;&gt;1566E - Buds Re-hanging&lt;/h3&gt;
&lt;p&gt;定义一棵有根树的一个节点为 bud 当且仅当其有至少一个儿子且其所有儿子都为叶节点。&lt;/p&gt;
&lt;p&gt;每次操作可以提出一个 bud 及其儿子然后接在任意一个节点下面。&lt;/p&gt;
&lt;p&gt;问若干次操作之后叶子节点最少为多少个。&lt;/p&gt;
&lt;p&gt;一个 bud 接在一个叶子下之后会使得叶子节点至多减 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;（如果 bud 上面是根则会减 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;）。而且移动 bud 的过程可逆，不妨将所有的 bud 找出来接在根上，设树节点为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，bud 有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个，则叶子节点数肯定为 &lt;span class=&#34;math inline&#34;&gt;\(n - k - 1\)&lt;/span&gt;（总结点减去根和每个 bud）。&lt;/p&gt;
&lt;p&gt;然后考虑如果根上至少连有一个叶子节点，则把所有的 bud 依次接上去，一共会接 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次，答案为 &lt;span class=&#34;math inline&#34;&gt;\(n - 2k - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;如果根上没有直接连的叶子节点，则把每个 bud 依次合并，接 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 次，答案为 &lt;span class=&#34;math inline&#34;&gt;\(n - k - 1 - (k -1) = n - 2k\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnte, d[maxn], k;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = to[i];&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d[v] == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) flag = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa) {&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (flag) ++k, d[u] = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; d[u] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) head[i] = d[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u), read(v);&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(u, v), add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb8-36&#34;&gt;&lt;a href=&#34;#cb8-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb8-37&#34;&gt;&lt;a href=&#34;#cb8-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-38&#34;&gt;&lt;a href=&#34;#cb8-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-39&#34;&gt;&lt;a href=&#34;#cb8-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb8-40&#34;&gt;&lt;a href=&#34;#cb8-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d[to[i]] == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {s = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb8-41&#34;&gt;&lt;a href=&#34;#cb8-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * k - s), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-42&#34;&gt;&lt;a href=&#34;#cb8-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-43&#34;&gt;&lt;a href=&#34;#cb8-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-44&#34;&gt;&lt;a href=&#34;#cb8-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-743-div.-12&#34;&gt;Codeforces Round #743 (Div. 1/2)&lt;/h2&gt;
&lt;p&gt;VP on 21/10/09。D2A + D2B + D1A + D1B。&lt;/p&gt;
&lt;h3 id=&#34;b---xor-of-3&#34;&gt;1572B - Xor of 3&lt;/h3&gt;
&lt;p&gt;首先有解的必要条件是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数为偶数个，因为每次操作是不会改变 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数的奇偶性的。&lt;/p&gt;
&lt;p&gt;然后考虑构造，若 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为奇数，那么执行 &lt;span class=&#34;math inline&#34;&gt;\(n - 2, \cdots, 3, 1\)&lt;/span&gt;，这样子之后 &lt;span class=&#34;math inline&#34;&gt;\(a_1 = 0\)&lt;/span&gt;，然后再执行一遍 &lt;span class=&#34;math inline&#34;&gt;\(1, 3, \cdots, n - 2\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为偶数的情况将其拆成两段长度为奇数的含偶数个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的然后分开做就行了。&lt;/p&gt;
&lt;h3 id=&#34;c---paint&#34;&gt;1572C - Paint&lt;/h3&gt;
&lt;p&gt;题意：给定一个最多含 &lt;span class=&#34;math inline&#34;&gt;\(20\)&lt;/span&gt; 种颜色的序列，每次操作可以把一段颜色相同的区间染成一种颜色，问将所有颜色染成同一种的最小操作次数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 3000\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑区间 dp。&lt;/p&gt;
&lt;p&gt;首先肯定将相邻的同色缩起来。&lt;/p&gt;
&lt;p&gt;然后设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为&lt;strong&gt;将 &lt;span class=&#34;math inline&#34;&gt;\([i, j]\)&lt;/span&gt; 染成 &lt;span class=&#34;math inline&#34;&gt;\(c_j\)&lt;/span&gt; 的最小代价&lt;/strong&gt;。为什么这样定义状态是因为一定存在一种方案使得最后的颜色为 &lt;span class=&#34;math inline&#34;&gt;\(c_j\)&lt;/span&gt;，容易发现将 &lt;span class=&#34;math inline&#34;&gt;\([1, j - 1]\)&lt;/span&gt; 同色之后再和 &lt;span class=&#34;math inline&#34;&gt;\(c_j\)&lt;/span&gt; 统一是不会更劣的。&lt;/p&gt;
&lt;p&gt;首先有 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j} = \min\{f_{i + 1, j}, f_{i, j - 1} \} + 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;其次，如果存在 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(i\le k &amp;lt; j\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(c_k = c_j\)&lt;/span&gt;，那么我们也可以从 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k} + f_{k + 1, j}\)&lt;/span&gt; 转移过来。记录一下上一个与 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 颜色相同的点就可以了。答案为 &lt;span class=&#34;math inline&#34;&gt;\(f_{1, n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d---bridge-club&#34;&gt;1572D - Bridge Club&lt;/h3&gt;
&lt;p&gt;显然，图为二分图，按照二进制表示下 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数即可分为左部和右部，中间连权为 &lt;span class=&#34;math inline&#34;&gt;\(a_i + a_j\)&lt;/span&gt; 的边。&lt;/p&gt;
&lt;p&gt;但是直接费用流或者 KM 都会死掉，因为点数为 &lt;span class=&#34;math inline&#34;&gt;\(O(2^n)\)&lt;/span&gt; 级别，边数为 &lt;span class=&#34;math inline&#34;&gt;\(O(n2^n)\)&lt;/span&gt; 级别，必死无疑。但是注意到这个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 是很小的，我们需要从 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 上下手。&lt;/p&gt;
&lt;p&gt;不难发现，每个点会连出去 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 条边，如果我们选择了一个匹配，那么剩下能匹配的方案数就会减少 &lt;span class=&#34;math inline&#34;&gt;\(2(n - 1)\)&lt;/span&gt;，所以我们选了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个匹配后最多只会减少 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 个匹配方式，即我们选了 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 个匹配就会至少存在 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个匹配。&lt;/p&gt;
&lt;p&gt;所以我们只需要选出最大的 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 条边，然后跑费用流就行了，不难发现一定有最优的方案存在在这最大的 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 条边里面，证明可用反证法。&lt;/p&gt;
&lt;p&gt;具体实现中，选出最大的 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 条边我们使用 STL 的 &lt;code&gt;nth_element()&lt;/code&gt; 函数，其复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\text{length of the seq})\)&lt;/span&gt;，本题中为 &lt;span class=&#34;math inline&#34;&gt;\(n2^n\)&lt;/span&gt;，然后注意加边的时候不要给每个 &lt;span class=&#34;math inline&#34;&gt;\([0, 2^n - 1]\)&lt;/span&gt; 的球员都加边，否则会 TLE。&lt;/p&gt;
&lt;h3 id=&#34;e---polygon&#34;&gt;1572E - Polygon&lt;/h3&gt;
&lt;p&gt;给定一个严格凸多边形，最大化划 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 刀后的最小面积，&lt;span class=&#34;math inline&#34;&gt;\(3\le n\le 200, 0\le k\le n - 3\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;二分这个最小面积。现在我们就需要划出来的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个区域的面积都大于等于 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;只考虑划分 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 这个区间的点，有个贪心就是我们尽可能多划分，而 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 相邻的这部分有可能面积不大于 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，我们要让其尽可能大。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_{l, r} = (K, M)\)&lt;/span&gt; 表示最多划分出了 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 块合法的区域，&lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 相邻部分这块三角形的最大面积为 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;。转移易得，枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\in(l, r)\)&lt;/span&gt; 然后考虑合并 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;只要 &lt;span class=&#34;math inline&#34;&gt;\(f_{1, n}\ge k + 1\)&lt;/span&gt;，就说明二分出来这个面积是合法的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;ll, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll x[maxn], y[maxn];&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pii f[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll S(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x[j] - x[i]) * (y[k] - y[i]) - (y[j] - y[i]) * (x[k] - x[i]);}&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(ll mid) {&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(len, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j = i + len - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= n; ++i, ++j) {&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i][j] = pii(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll K = f[i][k].first + f[k][j].first;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll M = f[i][k].second + f[k][j].second + S(i, k, j);&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (M &amp;gt;= mid) f[i][j] = max(f[i][j], pii(K + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; f[i][j] = max(f[i][j], pii(K, M));&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][n].first &amp;gt; k;&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(x[i]), read(y[i]);&lt;/span&gt;
&lt;span id=&#34;cb9-29&#34;&gt;&lt;a href=&#34;#cb9-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = &lt;span class=&#34;fl&#34;&gt;4e18&lt;/span&gt;, ans;&lt;/span&gt;
&lt;span id=&#34;cb9-30&#34;&gt;&lt;a href=&#34;#cb9-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r) {&lt;/span&gt;
&lt;span id=&#34;cb9-31&#34;&gt;&lt;a href=&#34;#cb9-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-32&#34;&gt;&lt;a href=&#34;#cb9-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (check(mid)) ans = mid, l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-33&#34;&gt;&lt;a href=&#34;#cb9-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-34&#34;&gt;&lt;a href=&#34;#cb9-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-35&#34;&gt;&lt;a href=&#34;#cb9-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-36&#34;&gt;&lt;a href=&#34;#cb9-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-37&#34;&gt;&lt;a href=&#34;#cb9-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-745-div.-12&#34;&gt;Codeforces Round #745 (Div. 1/2)&lt;/h2&gt;
&lt;p&gt;真的很毒瘤的场。Terrible Round。&lt;/p&gt;
&lt;h3 id=&#34;d---subsequence&#34;&gt;1580D - Subsequence&lt;/h3&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，所有元素两两不同。需要选择一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的子序列 &lt;span class=&#34;math inline&#34;&gt;\(a_{b_1}, a_{b_2},\cdots, a_{b_m}\)&lt;/span&gt;，要使得其代价最大。&lt;/p&gt;
&lt;p&gt;子序列的价值被定义为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^m(m\cdot a_{b_i}) - \sum_{i=1}^m\sum_{j=1}^mf(\min(b_i, b_j), \max(b_i, b_j))
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(f(x, y)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(\min_{x\le i\le y}\{a_i \}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 4000\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;化出式子： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^m(m - 1)a_{b_i} - 2\sum_{i=1}^{m-1}\sum_{j=i+1}^mf(b_i, b_j)
\]&lt;/span&gt; 然后像 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 这种一脸 RMQ 样的东西考虑放到笛卡尔树上，然后再化好看一点： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^{m-1}\sum_{j=i+1}^m a_{b_i} + a_{b_j} - 2f(b_i, b_j)
\]&lt;/span&gt; 那就是 &lt;span class=&#34;math inline&#34;&gt;\(a_{b_i} + a_{b_j}\)&lt;/span&gt; 再减去两倍他们的 LCA 的值，很像两点间的树上距离。考虑树形 dp &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 子树里面选了 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个元素的最大代价，容易知道时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;4005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, ls[maxn], rs[maxn], stk[maxn], top;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], size[maxn], f[maxn][maxn], w[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ls[u]) {&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(ls[u]), w[ls[u]] = a[ls[u]] - a[u];&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, size[u], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(j, size[ls[u]], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(f[u][i + j], f[u][i] + f[ls[u]][j] + j * (m - j) * w[ls[u]]);&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[ls[u]];&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (rs[u]) {&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(rs[u]), w[rs[u]] = a[rs[u]] - a[u];&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, size[u], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(j, size[rs[u]], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(f[u][i + j], f[u][i] + f[rs[u]][j] + j * (m - j) * w[rs[u]]);&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[rs[u]];&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    stk[top = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;amp;&amp;amp; a[stk[top]] &amp;gt; a[i]) --top;&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!top) ls[i] = stk[top + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ls[i] = rs[stk[top]], rs[stk[top]] = i;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        stk[++top] = i;&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(stk[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb10-36&#34;&gt;&lt;a href=&#34;#cb10-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f[stk[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]][m]);&lt;/span&gt;
&lt;span id=&#34;cb10-37&#34;&gt;&lt;a href=&#34;#cb10-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-38&#34;&gt;&lt;a href=&#34;#cb10-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-746-div.-2&#34;&gt;Codeforces Round #746 (Div. 2)&lt;/h2&gt;
&lt;p&gt;题目出得不错。&lt;/p&gt;
&lt;h3 id=&#34;c---bakry-and-partitioning&#34;&gt;1592C - Bakry and Partitioning&lt;/h3&gt;
&lt;p&gt;问将一棵树划分为最多 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个连通块，要求这些连通块内点权的异或和相等，问是否有解。&lt;/p&gt;
&lt;p&gt;首先发现，如果所有的点权异或和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则必然有解，而且断掉任意一条边都是可以的。&lt;/p&gt;
&lt;p&gt;然而异或和可能不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，我们不妨设其为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。而根据异或的性质，我们知道划分出来的各个连通块的异或和只能为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，而且连通块的个数为奇数。&lt;/p&gt;
&lt;p&gt;这是为什么？考虑划分为三个连通块的情况：既要异或起来为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 又要两两相等，不难发现只能为三个 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。然后我们又会发现，但凡有解，一定能划分为这样的三个连通块。&lt;/p&gt;
&lt;p&gt;现在问题就转化为了找到三个连通块使得他们的异或和都为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。dfs 扫描一遍即可。如果遇到一个节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 有两个子树 &lt;span class=&#34;math inline&#34;&gt;\(v_1,v_2\)&lt;/span&gt; 内含异或和为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的子树，则一定有解。而且，如果当前子树 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，且存在一个包含在 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 内的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的子树，则也一定有解。&lt;/p&gt;
&lt;p&gt;稍加分析可知上面两种涵盖了所有的情况。&lt;/p&gt;
&lt;h3 id=&#34;d---hemose-in-icpc&#34;&gt;1592D - Hemose in ICPC ?&lt;/h3&gt;
&lt;p&gt;点数为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(n \le 1000\)&lt;/span&gt;）的树，最多 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 次查询，每次查询给定一个点集，返回最大的 &lt;span class=&#34;math inline&#34;&gt;\(Dist(u, v)\)&lt;/span&gt;，代表 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的简单路径上的边权的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;。要求找到 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 最大的 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 只会减小，不会增大，因此 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(u, v)\)&lt;/span&gt; 最大时一定是 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 相连，相当于我们要找这棵树的最大边权。&lt;/p&gt;
&lt;p&gt;如何去找？这个查询次数和数据范围很明显的暗示了我们要二分一个点集，可是我们如何保证二分出来的两个点集是联通的呢？&lt;/p&gt;
&lt;p&gt;不妨考虑这棵树的欧拉序，将欧拉序建出来后会发现两两之间一定是有边的，所以在欧拉序上二分找最大值就可以了，可以保证查询次数最多为 &lt;span class=&#34;math inline&#34;&gt;\(1 + \log(2n - 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;实现起来很简单。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-747-div.-2&#34;&gt;Codeforces Round #747 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A + B + C + D + E1。rk 606。补完了，好耶。&lt;/p&gt;
&lt;h3 id=&#34;e2---rubiks-cube-coloring-hard-version&#34;&gt;1594E2 - Rubik’s Cube Coloring (hard version)&lt;/h3&gt;
&lt;p&gt;题意：&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 层的满二叉树，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点已经被染色，颜色来自魔方的六种颜色。要求树上相邻的节点染的颜色不能为魔方上不 相邻的颜色，问将整棵树涂满的方案数。&lt;/p&gt;
&lt;p&gt;继承一下 E1 的做法，没有预先钦定的颜色那么答案为 &lt;span class=&#34;math inline&#34;&gt;\(6\times 4^{2^k - 2}\)&lt;/span&gt;。我们发现，已经钦定好的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点会影响其到根的一条路径，把这条路径抽出来 dp 即可。然后令没有被影响的点有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个，答案乘上 &lt;span class=&#34;math inline&#34;&gt;\(4^m\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;string, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; st;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;ll, modint&amp;gt; f[&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; mp;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;ll, set&amp;lt;ll&amp;gt; &amp;gt; G;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll k, n;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(ll u) {&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) dfs(v);&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~mp[u] &amp;amp;&amp;amp; c ^ mp[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[c][u] = ~mp[u] ? &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u])&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[c][u] *= (f[(c + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;][v] + f[(c + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) % &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;][v]);&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin.tie(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; k &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    st[&lt;span class=&#34;st&#34;&gt;&amp;quot;white&amp;quot;&lt;/span&gt;] = st[&lt;span class=&#34;st&#34;&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    st[&lt;span class=&#34;st&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;] = st[&lt;span class=&#34;st&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    st[&lt;span class=&#34;st&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;] = st[&lt;span class=&#34;st&#34;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll u;&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        string s;&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; s;&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mp[u] = st[s];&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!mp.count(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) mp[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; mp0 = mp;&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; p : mp0) {&lt;/span&gt;
&lt;span id=&#34;cb11-37&#34;&gt;&lt;a href=&#34;#cb11-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll u = p.first;&lt;/span&gt;
&lt;span id=&#34;cb11-38&#34;&gt;&lt;a href=&#34;#cb11-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb11-39&#34;&gt;&lt;a href=&#34;#cb11-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;].insert(u);&lt;/span&gt;
&lt;span id=&#34;cb11-40&#34;&gt;&lt;a href=&#34;#cb11-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!mp.count(u)) mp[u] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-41&#34;&gt;&lt;a href=&#34;#cb11-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-42&#34;&gt;&lt;a href=&#34;#cb11-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-43&#34;&gt;&lt;a href=&#34;#cb11-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-44&#34;&gt;&lt;a href=&#34;#cb11-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-45&#34;&gt;&lt;a href=&#34;#cb11-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = (f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + f[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * qPow(&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;, ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; &amp;lt;&amp;lt; k) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - mp.size()) % (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb11-46&#34;&gt;&lt;a href=&#34;#cb11-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans.val &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb11-47&#34;&gt;&lt;a href=&#34;#cb11-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-48&#34;&gt;&lt;a href=&#34;#cb11-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还是挺好的一道题，提出有用的点来进行树形 dp。&lt;/p&gt;
&lt;h3 id=&#34;f---ideal-farm&#34;&gt;1594F - Ideal Farm&lt;/h3&gt;
&lt;p&gt;给出 &lt;span class=&#34;math inline&#34;&gt;\(n, s, k\)&lt;/span&gt;，问是否所有的长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的和为 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 的正整数序列都有一段长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的区间。&lt;/p&gt;
&lt;p&gt;考虑构造一个无解的情况。即要求没有两个前缀和的差为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，构造的时候即 &lt;span class=&#34;math inline&#34;&gt;\(1, 1,1,\cdots, k + 1, 1, 1, \cdots\)&lt;/span&gt; 如是构造。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n &amp;lt; k\)&lt;/span&gt; 的时候特判一下。蠢得要死。。。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll s, n, k;&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(s), read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; k) {&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s == k) puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll w = n / k * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k + n % k;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s &amp;lt; w ? puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt;) : puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-115&#34;&gt;Educational Codeforces Round 115&lt;/h2&gt;
&lt;p&gt;A + B + C + D。&lt;/p&gt;
&lt;h3 id=&#34;e---staircases&#34;&gt;1598E - Staircases&lt;/h3&gt;
&lt;p&gt;注意到其实就这两种楼梯，要么结束位置是两个横着的，要么是两个竖着的。所以可以 dp，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, 0/1}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt; 结束，最后位置为横/竖的方案数，则有转移 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{i, j, 0} :=f_{i, j, 0} + f_{i - 1, j, 1}\\
f_{i, j, 1} := f_{i ,j , 1} + f_{i, j - 1. 0}
\end{cases}
\]&lt;/span&gt; 初始条件为 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, 0/1} = 1\)&lt;/span&gt;，因为一个格子也算楼梯。但是会算重，所以需要特判一下。&lt;/p&gt;
&lt;p&gt;然后是修改操作。我们需要知道，一次修改操作能影响的 dp 值是有限的。手玩一下发现最多影响 &lt;span class=&#34;math inline&#34;&gt;\(3n\)&lt;/span&gt; 个格子。故总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2 + nq)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;代码就不放了。&lt;/p&gt;
&lt;h3 id=&#34;f---rbs&#34;&gt;1598F - RBS&lt;/h3&gt;
&lt;p&gt;括号匹配 + 状压 dp 好题。&lt;/p&gt;
&lt;p&gt;定义合法的括号串，给出 &lt;span class=&#34;math inline&#34;&gt;\(n\le 20\)&lt;/span&gt; 个总长不超过 &lt;span class=&#34;math inline&#34;&gt;\(4\times 10^5\)&lt;/span&gt; 的括号串 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt;，问将所有 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 按照一定顺序拼接起来后最多有多少个前缀为合法括号串。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 20\)&lt;/span&gt; 这个限制就很灵性，考虑状压 dp。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{S}\)&lt;/span&gt; 为集合 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 内字符串拼起来的答案。&lt;/p&gt;
&lt;p&gt;思考转移。假设 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 在加上一个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 后变成 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，并假定 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 被接在末尾。&lt;/p&gt;
&lt;p&gt;考虑括号串的性质，我们令 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{&amp;#39;(&amp;#39;} = 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\texttt{&amp;#39;)&amp;#39;} = -1\)&lt;/span&gt;，然后一个括号串将为合法当且仅当其每个前缀和都为非负且整个的前缀和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。那么不妨处理出每个串的前缀和以及每个状态的串的前缀和之和。&lt;/p&gt;
&lt;p&gt;而遍历一个字符串 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 将会形成一个“爬山”的过程，若这个过程中前缀和接触到了 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么合法的答案将会增加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，若这个过程中前缀和变为了负数，那么这个状态就废掉了——答案不可能再增加。&lt;/p&gt;
&lt;p&gt;所以对于每个串，我们需要记录一下其向下“穿过”了每个平面几次。然后在 dp 转移的时候就可以判定了。如果从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的高度走向 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 会走到若干次 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么答案对应累计，若会穿到 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 下面去，说明这个状态就废掉了，判掉即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;22&lt;/span&gt;, maxs = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;21&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; String {&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; minp, sum;&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; H;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; L;&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; delta;&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init(string s) {&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        minp = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt;&amp;gt; no;&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)s.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;) ++p;&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; --p;&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-22&#34;&gt;&lt;a href=&#34;#cb13-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!no[p]) ++H[p];&lt;/span&gt;
&lt;span id=&#34;cb13-23&#34;&gt;&lt;a href=&#34;#cb13-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; no[p] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-24&#34;&gt;&lt;a href=&#34;#cb13-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            minp = min(minp, p);&lt;/span&gt;
&lt;span id=&#34;cb13-25&#34;&gt;&lt;a href=&#34;#cb13-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-26&#34;&gt;&lt;a href=&#34;#cb13-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sum = p;&lt;/span&gt;
&lt;span id=&#34;cb13-27&#34;&gt;&lt;a href=&#34;#cb13-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (H.empty()) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-28&#34;&gt;&lt;a href=&#34;#cb13-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        delta = H.begin()-&amp;gt;first;&lt;/span&gt;
&lt;span id=&#34;cb13-29&#34;&gt;&lt;a href=&#34;#cb13-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; R = H.rbegin()-&amp;gt;first;&lt;/span&gt;
&lt;span id=&#34;cb13-30&#34;&gt;&lt;a href=&#34;#cb13-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        L.resize(R - delta + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-31&#34;&gt;&lt;a href=&#34;#cb13-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; p : H) L[p.first - delta] = p.second;&lt;/span&gt;
&lt;span id=&#34;cb13-32&#34;&gt;&lt;a href=&#34;#cb13-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-33&#34;&gt;&lt;a href=&#34;#cb13-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-34&#34;&gt;&lt;a href=&#34;#cb13-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb13-35&#34;&gt;&lt;a href=&#34;#cb13-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x -= delta;&lt;/span&gt;
&lt;span id=&#34;cb13-36&#34;&gt;&lt;a href=&#34;#cb13-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || x &amp;gt;= (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)L.size()) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-37&#34;&gt;&lt;a href=&#34;#cb13-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; L[x];&lt;/span&gt;
&lt;span id=&#34;cb13-38&#34;&gt;&lt;a href=&#34;#cb13-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-39&#34;&gt;&lt;a href=&#34;#cb13-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} s[&lt;span class=&#34;dv&#34;&gt;22&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb13-40&#34;&gt;&lt;a href=&#34;#cb13-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-41&#34;&gt;&lt;a href=&#34;#cb13-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dp[maxs], sum[maxs], n;&lt;/span&gt;
&lt;span id=&#34;cb13-42&#34;&gt;&lt;a href=&#34;#cb13-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-43&#34;&gt;&lt;a href=&#34;#cb13-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb13-44&#34;&gt;&lt;a href=&#34;#cb13-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-45&#34;&gt;&lt;a href=&#34;#cb13-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin.tie(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-46&#34;&gt;&lt;a href=&#34;#cb13-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb13-47&#34;&gt;&lt;a href=&#34;#cb13-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb13-48&#34;&gt;&lt;a href=&#34;#cb13-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        string str; cin &amp;gt;&amp;gt; str;&lt;/span&gt;
&lt;span id=&#34;cb13-49&#34;&gt;&lt;a href=&#34;#cb13-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s[i].init(str);&lt;/span&gt;
&lt;span id=&#34;cb13-50&#34;&gt;&lt;a href=&#34;#cb13-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-51&#34;&gt;&lt;a href=&#34;#cb13-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(S, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &amp;amp; S) sum[S] += s[i].sum;&lt;/span&gt;
&lt;span id=&#34;cb13-52&#34;&gt;&lt;a href=&#34;#cb13-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(dp, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; dp);&lt;/span&gt;
&lt;span id=&#34;cb13-53&#34;&gt;&lt;a href=&#34;#cb13-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-54&#34;&gt;&lt;a href=&#34;#cb13-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-55&#34;&gt;&lt;a href=&#34;#cb13-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(S, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-56&#34;&gt;&lt;a href=&#34;#cb13-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (S &amp;amp; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))) {&lt;/span&gt;
&lt;span id=&#34;cb13-57&#34;&gt;&lt;a href=&#34;#cb13-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; F = S ^ (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb13-58&#34;&gt;&lt;a href=&#34;#cb13-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dp[F] == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-59&#34;&gt;&lt;a href=&#34;#cb13-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; nows = sum[F], cur = dp[F] + s[i].query(-nows);&lt;/span&gt;
&lt;span id=&#34;cb13-60&#34;&gt;&lt;a href=&#34;#cb13-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = max(ans, cur);&lt;/span&gt;
&lt;span id=&#34;cb13-61&#34;&gt;&lt;a href=&#34;#cb13-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (nows + s[i].minp &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-62&#34;&gt;&lt;a href=&#34;#cb13-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dp[S] = max(dp[S], cur);&lt;/span&gt;
&lt;span id=&#34;cb13-63&#34;&gt;&lt;a href=&#34;#cb13-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-64&#34;&gt;&lt;a href=&#34;#cb13-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-65&#34;&gt;&lt;a href=&#34;#cb13-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-66&#34;&gt;&lt;a href=&#34;#cb13-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-67&#34;&gt;&lt;a href=&#34;#cb13-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;technocup-2022-elimination-round-1-and-codeforces-round-749-div.-1div.-2&#34;&gt;Technocup 2022 — Elimination Round 1 and Codeforces Round #749 (Div. 1+Div. 2)&lt;/h2&gt;
&lt;p&gt;A + B + C + D + F，rk 352，上 CM 了。&lt;/p&gt;
&lt;h3 id=&#34;d---omkar-and-the-meaning-of-life&#34;&gt;1583D - Omkar and the Meaning of Life&lt;/h3&gt;
&lt;p&gt;考虑寻找每个元素在排列中的下一个数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于每个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，询问 &lt;span class=&#34;math inline&#34;&gt;\(a_i = 2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_j=1\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(j\neq i\)&lt;/span&gt;，如果找到了一个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{nxt}(k) = i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;询问 &lt;span class=&#34;math inline&#34;&gt;\(a_i = 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_j = 2\)&lt;/span&gt; 的情况同理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后一个拓扑排序就可以求出整个排列。询问次数正好为 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e---момент-цветения&#34;&gt;1583E - Момент цветения&lt;/h3&gt;
&lt;p&gt;在一张无向图上构造 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 条始末点给定的路径，使得每条边都被覆盖偶数次，输出构造方案或者输出还需要多少条路径才有解。&lt;/p&gt;
&lt;p&gt;考虑一张新图：将所有的点保留，为 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 点连边，若这张图中的各个连通分量都能形成欧拉回路，则一定有解。为什么？考虑原图的 dfs 生成树，每次在新图上走一条边相当于在原图上通过某种方式从 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，而欧拉回路代表着我最终又走回了一开始的起点，其每条边的经过次数必然是偶数。&lt;/p&gt;
&lt;p&gt;构造就直接在 dfs 生成树上找路径就行了，倍增即可。&lt;/p&gt;
&lt;h3 id=&#34;f---defender-of-childhood-dreams&#34;&gt;1586F - Defender of Childhood Dreams&lt;/h3&gt;
&lt;p&gt;给定一张竞赛图，其中边永远从编号小的点连向编号大的，用最少的颜色染这些边使得任何长度 &lt;span class=&#34;math inline&#34;&gt;\(\ge k\)&lt;/span&gt; 的路径至少有两种颜色的边。&lt;/p&gt;
&lt;p&gt;据说是 ZR CSP 七连的原题，亏。&lt;/p&gt;
&lt;p&gt;考虑分块。将所有点每 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个分为一小块，每 &lt;span class=&#34;math inline&#34;&gt;\(k^2\)&lt;/span&gt; 个分为一大块……依此类推，大小为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的块内部连一种颜色的边，大小为 &lt;span class=&#34;math inline&#34;&gt;\(k^2\)&lt;/span&gt; 的块内部连一种颜色的边……依此类推。所以一共有 &lt;span class=&#34;math inline&#34;&gt;\(\lceil\log_k n \rceil\)&lt;/span&gt; 种颜色，代码很短。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k;&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getans(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = k, ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; ((x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / now != (y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / now) now *= k, ++ret;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print((&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)ceil(log(n) / log(k)), &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) print(getans(i, j), &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;绝绝子了属于是。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-750-div.2&#34;&gt;Codeforces Round #750 (Div.2)&lt;/h2&gt;
&lt;h3 id=&#34;d---vupsen-pupsen-and-0&#34;&gt;1582D - Vupsen, Pupsen and 0&lt;/h3&gt;
&lt;p&gt;给定向量 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，求一个向量 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a\cdot b = 0\)&lt;/span&gt;，其中向量维数 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|a_i|\le 10^4\)&lt;/span&gt;，要求 &lt;span class=&#34;math inline&#34;&gt;\(\sum|b_i|\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑两两配对，最后三个特判一下。&lt;/p&gt;
&lt;h3 id=&#34;e---pchelyonok-and-segments&#34;&gt;1582E - Pchelyonok and Segments&lt;/h3&gt;
&lt;p&gt;重点：找到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的范围然后直接 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 暴力。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{k(k + 1)}{2}\le n\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(k\le \sqrt{2n}\le 447\)&lt;/span&gt;。然后就可以设计一个 dp：令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为当前考虑了 &lt;span class=&#34;math inline&#34;&gt;\([i, n]\)&lt;/span&gt;，最前面的选的一段长度为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，最大的和。（类似 LIS 的贪心设计）然后转移就随便转移一下。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, sqrtn = &lt;span class=&#34;dv&#34;&gt;500&lt;/span&gt;, INF = &lt;span class=&#34;fl&#34;&gt;2e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll sum[maxn], f[maxn][sqrtn];&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), sum[i] = sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + a[i];&lt;/span&gt;
&lt;span id=&#34;cb15-11&#34;&gt;&lt;a href=&#34;#cb15-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-12&#34;&gt;&lt;a href=&#34;#cb15-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (k * (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;lt;= n) ++k;&lt;/span&gt;
&lt;span id=&#34;cb15-13&#34;&gt;&lt;a href=&#34;#cb15-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --k;&lt;/span&gt;
&lt;span id=&#34;cb15-14&#34;&gt;&lt;a href=&#34;#cb15-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) f[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] = -INF;&lt;/span&gt;
&lt;span id=&#34;cb15-15&#34;&gt;&lt;a href=&#34;#cb15-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = INF;&lt;/span&gt;
&lt;span id=&#34;cb15-16&#34;&gt;&lt;a href=&#34;#cb15-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb15-17&#34;&gt;&lt;a href=&#34;#cb15-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb15-18&#34;&gt;&lt;a href=&#34;#cb15-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j] = f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j];&lt;/span&gt;
&lt;span id=&#34;cb15-19&#34;&gt;&lt;a href=&#34;#cb15-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;amp;&amp;amp; i + j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= n &amp;amp;&amp;amp; sum[i + j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt; f[i + j][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb15-20&#34;&gt;&lt;a href=&#34;#cb15-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    chkmax(f[i][j], sum[i + j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb15-21&#34;&gt;&lt;a href=&#34;#cb15-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb15-22&#34;&gt;&lt;a href=&#34;#cb15-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb15-23&#34;&gt;&lt;a href=&#34;#cb15-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-24&#34;&gt;&lt;a href=&#34;#cb15-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) ans = j;&lt;/span&gt;
&lt;span id=&#34;cb15-25&#34;&gt;&lt;a href=&#34;#cb15-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-26&#34;&gt;&lt;a href=&#34;#cb15-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-27&#34;&gt;&lt;a href=&#34;#cb15-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-28&#34;&gt;&lt;a href=&#34;#cb15-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-754-div.-2&#34;&gt;Codeforces Round #754 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打的有点差劲，A + B + C。&lt;/p&gt;
&lt;h3 id=&#34;d---treelabeling&#34;&gt;1605D - Treelabeling&lt;/h3&gt;
&lt;p&gt;给定一棵未标号的树，求一个标号方式使得相邻的 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的最高位与 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的最高位不同。&lt;/p&gt;
&lt;p&gt;原题意易被翻译成如上，现在考虑如何构造。令 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 在二进制表示下的最高位（从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 开始编号）。&lt;/p&gt;
&lt;p&gt;先给树二分图染色，然后令黑点个数为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，白点个数为 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt;，不妨假设 &lt;span class=&#34;math inline&#34;&gt;\(w \le b\)&lt;/span&gt;，则显然 &lt;span class=&#34;math inline&#34;&gt;\(w\le \lfloor n / 2\rfloor\)&lt;/span&gt;。所以可以得到 &lt;span class=&#34;math inline&#34;&gt;\(f(w) \le f(n) - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后还有一个很好的性质，就是满足 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 一共有 &lt;span class=&#34;math inline&#34;&gt;\(2^i\)&lt;/span&gt; 个，因此直接考虑 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 的每一位，若第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，则直接将满足 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 分配给白点，剩余的分配给黑点。&lt;/p&gt;
&lt;p&gt;于是这样就构造完了，正确性应该是十分显然的。&lt;/p&gt;
&lt;h3 id=&#34;e---array-equalizer&#34;&gt;1605E - Array Equalizer&lt;/h3&gt;
&lt;p&gt;给定两个序列 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{b_i\}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 是给定的，&lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 除了 &lt;span class=&#34;math inline&#34;&gt;\(b_1\)&lt;/span&gt; 其余都给出。一次操作可以选定一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 然后对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(i\mid j\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b_j\)&lt;/span&gt; 加上或减去 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。对于 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(b_1\)&lt;/span&gt;，问将 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 变为 &lt;span class=&#34;math inline&#34;&gt;\(\{b_i\}\)&lt;/span&gt; 的最小操作次数。&lt;/p&gt;
&lt;p&gt;首先令 &lt;span class=&#34;math inline&#34;&gt;\(b_i = b_i - a_i\)&lt;/span&gt;，然后问题就变为将 &lt;span class=&#34;math inline&#34;&gt;\(\{0\}\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(\{b_i\}\)&lt;/span&gt; 的最小操作次数。然后首先考虑只有一个 &lt;span class=&#34;math inline&#34;&gt;\(b_1\)&lt;/span&gt; 的时候，如何解决这个问题。&lt;/p&gt;
&lt;p&gt;然后不难发现，只需要从小到大考虑即可。模拟一下操作：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_2\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_3\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_4\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_5\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdots\)&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdots\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Add&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_2 - B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_3 - B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_4 - B_2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_5 - B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdots\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(B_1 = x\)&lt;/span&gt; 的话，每次操作加上的数都形如 &lt;span class=&#34;math inline&#34;&gt;\(cx + d\)&lt;/span&gt;，对操作次数的贡献即为 &lt;span class=&#34;math inline&#34;&gt;\(|cx + d|\)&lt;/span&gt;。这个 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 是可以提前预处理出来的。然后的话，现在的目标就是求出一坨 &lt;span class=&#34;math inline&#34;&gt;\(|cx + d|\)&lt;/span&gt; 的和，发现这个可能不太好做，我们拆开绝对值，分类讨论一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(cx + d &amp;gt; 0\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(x &amp;gt; -\dfrac dc\)&lt;/span&gt;，贡献就为 &lt;span class=&#34;math inline&#34;&gt;\(cx + d\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(cx + d&amp;lt; 0\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;lt;-\dfrac dc\)&lt;/span&gt;，贡献为 &lt;span class=&#34;math inline&#34;&gt;\(-cx - d\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，上述条件当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(c &amp;gt; 0\)&lt;/span&gt; 时成立，对于 &lt;span class=&#34;math inline&#34;&gt;\(c &amp;lt; 0\)&lt;/span&gt; 的情况，直接乘个 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; 转换成 &lt;span class=&#34;math inline&#34;&gt;\(c &amp;gt; 0\)&lt;/span&gt; 即可。而 &lt;span class=&#34;math inline&#34;&gt;\(c = 0\)&lt;/span&gt; 的时候，直接统计 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的贡献即可。所以我们按照 &lt;span class=&#34;math inline&#34;&gt;\(-\dfrac dc\)&lt;/span&gt; 排序，存储这些一次函数，然后就可以预处理一下前缀和和后缀和，每次二分一下就可以的解了。&lt;/p&gt;
&lt;p&gt;事实上，&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 就是 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;。所以问题可以得到简化很多。&lt;/p&gt;
&lt;h2 id=&#34;technocup-2022-elimination-round-2-and-codeforces-round-755-div.-1-div.-2&#34;&gt;Technocup 2022 — Elimination Round 2 and Codeforces Round #755 (Div. 1, Div. 2)&lt;/h2&gt;
&lt;p&gt;div 1. A + B。&lt;/p&gt;
&lt;h3 id=&#34;b---guess-the-permutation&#34;&gt;1588B - Guess the Permutation&lt;/h3&gt;
&lt;p&gt;给定一个 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的有序排列（&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^9\)&lt;/span&gt; 级别），翻转了 &lt;span class=&#34;math inline&#34;&gt;\([i, j - 1]\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\([j, k]\)&lt;/span&gt;。最多 &lt;span class=&#34;math inline&#34;&gt;\(40\)&lt;/span&gt; 次询问，一次询问一个区间的逆序对数，要求最后给出 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;不难发现 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 可以通过二分得到，而 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 似乎也可以二分，但是 &lt;span class=&#34;math inline&#34;&gt;\(2\log n\)&lt;/span&gt; 就会爆炸。所以只考虑二分出 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后考虑 &lt;span class=&#34;math inline&#34;&gt;\([i, k]\)&lt;/span&gt; 中逆序对的贡献，令两端的长度为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，则有 &lt;span class=&#34;math inline&#34;&gt;\(f(i, k) = (a - 1)a / 2 + (b - 1)b/2\)&lt;/span&gt;，所以我们询问一下 &lt;span class=&#34;math inline&#34;&gt;\([i + 1, n]\)&lt;/span&gt;，就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的值，具体地，&lt;span class=&#34;math inline&#34;&gt;\(a = f(i, k) - f(i - 1, k) + 1\)&lt;/span&gt;，证明考虑逆序对的性质。&lt;/p&gt;
&lt;p&gt;然后不难二分出 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的值，这题就做完了。&lt;/p&gt;
&lt;h3 id=&#34;c---game-with-stones&#34;&gt;1588C - Game with Stones&lt;/h3&gt;
&lt;h2 id=&#34;codeforces-round-758-div.1-div.-2&#34;&gt;Codeforces Round #758 (Div.1 + Div. 2)&lt;/h2&gt;
&lt;p&gt;terrible round。A + B + C，rk522。&lt;/p&gt;
&lt;h3 id=&#34;d---dominoes&#34;&gt;1608D - Dominoes&lt;/h3&gt;
&lt;p&gt;首先我们知道，一个染色方案合法当且仅当 W 和 B 的数量相同，以及 WW 和 BB 的数量相同。计算 W 和 B 的数量，若其大于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，则显然无解。&lt;/p&gt;
&lt;p&gt;否则，无解的情况就是 WB 和 BW 同时存在却没有 WW 或 BB。其他都为合法情况，方案大家可以在草稿纸上尝试进行构造。设问号有 &lt;span class=&#34;math inline&#34;&gt;\(c_0\)&lt;/span&gt; 个，W 有 &lt;span class=&#34;math inline&#34;&gt;\(c_B\)&lt;/span&gt; 个，则显然总染色方案数为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{c_0}{n - c_B}\)&lt;/span&gt;。然后处理一下无解的情况。&lt;/p&gt;
&lt;p&gt;同时存在 WB 和 BW 却没有 WW 或 BB 的方案数其实就是用 &lt;strong&gt;不存在 WW 和 BB 的方案数&lt;/strong&gt; 减去 &lt;strong&gt;全是 WB&lt;/strong&gt; 和 &lt;strong&gt;全是 BW&lt;/strong&gt; 的情况。设 ?? 有 &lt;span class=&#34;math inline&#34;&gt;\(c_P\)&lt;/span&gt; 个，则对于第一个“不存在 WW 和 BB 的”的方案数就是 &lt;span class=&#34;math inline&#34;&gt;\(2^{c_P}\)&lt;/span&gt;，且不存在 BB 或 WW；对于全是 WB 的至多一种，且不能存在 Bx 或 Wx，全是 BW 同理。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-global-round-18&#34;&gt;Codeforces Global Round 18&lt;/h2&gt;
&lt;p&gt;tiring and difficult round. A + B + C。&lt;/p&gt;
&lt;h3 id=&#34;c---menorah&#34;&gt;1615C - Menorah&lt;/h3&gt;
&lt;p&gt;比较巧妙的题。注意到一次对 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的操作可以视为改变 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后打上全局标记。&lt;/p&gt;
&lt;p&gt;之后我们注意到，第一次操作要操作一开始为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的，第二次操作就必须操作一开始为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的。之后肯定是 &lt;span class=&#34;math inline&#34;&gt;\(1010\cdots\)&lt;/span&gt; 交替操作。&lt;/p&gt;
&lt;p&gt;预处理一下 &lt;span class=&#34;math inline&#34;&gt;\(same_{i, j}\)&lt;/span&gt; 数组表示 &lt;span class=&#34;math inline&#34;&gt;\(a_k = i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\([a_k = b_k] = j\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的数量（即 &lt;span class=&#34;math inline&#34;&gt;\(a = 1/0\)&lt;/span&gt;，与 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 相同/不同的数量），则我们可以发现，一次对 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 同的操作会使得 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 同减一，同时 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 不同加一。&lt;/p&gt;
&lt;p&gt;若果我们进行奇数次操作，那么全局翻转标记是有的，要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1/0, 1} = 0\)&lt;/span&gt;。所以一共要进行 &lt;span class=&#34;math inline&#34;&gt;\(same_{1, 1} + same_{0, 1}\)&lt;/span&gt; 次操作将所有的相同变为不同，然后因为有翻转，所以我们就能得到答案。这样做的前提条件是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1,1} - same_{0, 1} = 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么若进行偶数次操作，同理，没有全局翻转标记，要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1/0, 0} = 0\)&lt;/span&gt;。所以一共要进行 &lt;span class=&#34;math inline&#34;&gt;\(same_{1, 0} + same_{0,0}\)&lt;/span&gt; 次操作将所有的不同变为相同，答案就能得到了。这样做的前提条件是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1, 0} = same_{0, 0}\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s1[maxn], s2[maxn];&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n), read(s1 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), read(s2 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; same[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++same[s1[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;][s1[i] == s2[i]];&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans = same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) chkmin(ans, same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans &amp;gt; n ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : ans);&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-17&#34;&gt;&lt;a href=&#34;#cb16-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-18&#34;&gt;&lt;a href=&#34;#cb16-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---xor-mas-tree&#34;&gt;1615D - X(or)-mas Tree&lt;/h3&gt;
&lt;p&gt;题意：给定一棵边带权树，有些边权未确定。给定形如 &lt;span class=&#34;math inline&#34;&gt;\((a, b, c)\)&lt;/span&gt; 的限制表示 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 路径上的边权异或和的 popcount 的奇偶性为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;。构造一个给未定权边定权的方案。&lt;/p&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{parity}(x)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{popcount}(x)\bmod 2\)&lt;/span&gt;，则我们可以知道 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{parity}(x\oplus y) = \operatorname{parity}(x)\oplus \operatorname{parity}(y)\)&lt;/span&gt;。所以干脆直接先将树上的所有边权 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 先变成 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{parity}(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令树上前缀异或和为 &lt;span class=&#34;math inline&#34;&gt;\(r_u\)&lt;/span&gt;，则我们注意到，&lt;span class=&#34;math inline&#34;&gt;\((a,b)\)&lt;/span&gt; 路径的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(r_a\oplus r_b\)&lt;/span&gt;。所以我们现在就有了若干条形如 &lt;span class=&#34;math inline&#34;&gt;\(r_a\oplus r_b = c\)&lt;/span&gt; 的限制（对于树上已有的边 &lt;span class=&#34;math inline&#34;&gt;\((u,v, x)\)&lt;/span&gt; 可以看作是 &lt;span class=&#34;math inline&#34;&gt;\(r_u\oplus r_v = x\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;对于每个限制 &lt;span class=&#34;math inline&#34;&gt;\(r_a\oplus r_b = c\)&lt;/span&gt;，在新图上建一条边 &lt;span class=&#34;math inline&#34;&gt;\((a, b, c)\)&lt;/span&gt;，然后考虑二分图染色（一开始钦定一个 &lt;span class=&#34;math inline&#34;&gt;\(r_1\)&lt;/span&gt;），这样子就可以求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(r_u\)&lt;/span&gt; 并且判断矛盾。&lt;/p&gt;
&lt;h3 id=&#34;e---purple-crayon&#34;&gt;1615E - Purple Crayon&lt;/h3&gt;
&lt;p&gt;题意：红蓝双方在一棵 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为根的树上涂色。红先涂，每次可以选择一个子树内的点涂成红色，但涂的个数不能超过 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。然后蓝涂，每次可以选择一个子树内的点涂成蓝色，但该子树内不能有红色节点。设最后白、红、蓝三种颜色的点各有 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt;、&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 个，则分数定义为 &lt;span class=&#34;math inline&#34;&gt;\(w(r - b)\)&lt;/span&gt;。红方想最大化分数，蓝方想最小化分数。双方都绝顶聪明，问最后的分数。&lt;/p&gt;
&lt;p&gt;拆开式子：&lt;span class=&#34;math inline&#34;&gt;\(w(r- b) = (n - r - b)(r - b) = r(n - r) - b(n - b)\)&lt;/span&gt;。所以对于红方，他想要做的就是最大化 &lt;span class=&#34;math inline&#34;&gt;\(r(n - r)\)&lt;/span&gt; 和最小化 &lt;span class=&#34;math inline&#34;&gt;\(b(n - b)\)&lt;/span&gt;。到了蓝方这里，他一定是想最大化 &lt;span class=&#34;math inline&#34;&gt;\(b(n - b)\)&lt;/span&gt;，其在 &lt;span class=&#34;math inline&#34;&gt;\(b = \lfloor n / 2\rfloor\)&lt;/span&gt; 处有最大值。&lt;/p&gt;
&lt;p&gt;另外我们可以发现，红方选择了 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树意味着 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 上的点都不能被蓝方涂色，相当于控制了一条链。为了使得蓝方能达到的最大的 &lt;span class=&#34;math inline&#34;&gt;\(b(n - b)\)&lt;/span&gt; 最小，红方的最优策略一定是尽可能最小化 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最大值。所以说，&lt;strong&gt;红方尽可能多控制点，一定是最优的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而且，为了尽可能多控制点，&lt;strong&gt;红方选的一定是叶子节点&lt;/strong&gt;，若选的不是叶子，则选一个儿子节点能控制的节点肯定更多。&lt;/p&gt;
&lt;p&gt;所以，我们从大到小取 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 根长链，取的时候算一下蓝方还能涂多少个 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(b &amp;gt; \lfloor n / 2\rfloor\)&lt;/span&gt; 则取 &lt;span class=&#34;math inline&#34;&gt;\(b = \lfloor n / 2\rfloor\)&lt;/span&gt;。依此计算答案。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, son[maxn], h[maxn], fa[maxn], len[maxn], cnt;&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre) {&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fa[u] = pre;&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb17-8&#34;&gt;&lt;a href=&#34;#cb17-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == pre) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-9&#34;&gt;&lt;a href=&#34;#cb17-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb17-10&#34;&gt;&lt;a href=&#34;#cb17-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (h[v] &amp;gt; h[son[u]])&lt;/span&gt;
&lt;span id=&#34;cb17-11&#34;&gt;&lt;a href=&#34;#cb17-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb17-12&#34;&gt;&lt;a href=&#34;#cb17-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-13&#34;&gt;&lt;a href=&#34;#cb17-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    h[u] = h[son[u]] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-14&#34;&gt;&lt;a href=&#34;#cb17-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-15&#34;&gt;&lt;a href=&#34;#cb17-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-16&#34;&gt;&lt;a href=&#34;#cb17-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-17&#34;&gt;&lt;a href=&#34;#cb17-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; topf) {&lt;/span&gt;
&lt;span id=&#34;cb17-18&#34;&gt;&lt;a href=&#34;#cb17-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!son[u]) {&lt;/span&gt;
&lt;span id=&#34;cb17-19&#34;&gt;&lt;a href=&#34;#cb17-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        len[++cnt] = h[topf];&lt;/span&gt;
&lt;span id=&#34;cb17-20&#34;&gt;&lt;a href=&#34;#cb17-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-21&#34;&gt;&lt;a href=&#34;#cb17-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-22&#34;&gt;&lt;a href=&#34;#cb17-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(son[u], topf);&lt;/span&gt;
&lt;span id=&#34;cb17-23&#34;&gt;&lt;a href=&#34;#cb17-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb17-24&#34;&gt;&lt;a href=&#34;#cb17-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == son[u] || v == fa[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-25&#34;&gt;&lt;a href=&#34;#cb17-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(v, v);&lt;/span&gt;
&lt;span id=&#34;cb17-26&#34;&gt;&lt;a href=&#34;#cb17-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-27&#34;&gt;&lt;a href=&#34;#cb17-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-28&#34;&gt;&lt;a href=&#34;#cb17-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-29&#34;&gt;&lt;a href=&#34;#cb17-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-30&#34;&gt;&lt;a href=&#34;#cb17-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb17-31&#34;&gt;&lt;a href=&#34;#cb17-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, k);&lt;/span&gt;
&lt;span id=&#34;cb17-32&#34;&gt;&lt;a href=&#34;#cb17-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb17-33&#34;&gt;&lt;a href=&#34;#cb17-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u, v);&lt;/span&gt;
&lt;span id=&#34;cb17-34&#34;&gt;&lt;a href=&#34;#cb17-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb17-35&#34;&gt;&lt;a href=&#34;#cb17-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-36&#34;&gt;&lt;a href=&#34;#cb17-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-37&#34;&gt;&lt;a href=&#34;#cb17-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(len + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, len + cnt + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, greater&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;());&lt;/span&gt;
&lt;span id=&#34;cb17-38&#34;&gt;&lt;a href=&#34;#cb17-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ans = -&lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-39&#34;&gt;&lt;a href=&#34;#cb17-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b = n;&lt;/span&gt;
&lt;span id=&#34;cb17-40&#34;&gt;&lt;a href=&#34;#cb17-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb17-41&#34;&gt;&lt;a href=&#34;#cb17-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = min(n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, b -= len[a]);&lt;/span&gt;
&lt;span id=&#34;cb17-42&#34;&gt;&lt;a href=&#34;#cb17-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        chkmax(ans, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (n - a - x) * (a - x));&lt;/span&gt;
&lt;span id=&#34;cb17-43&#34;&gt;&lt;a href=&#34;#cb17-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-44&#34;&gt;&lt;a href=&#34;#cb17-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb17-45&#34;&gt;&lt;a href=&#34;#cb17-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-46&#34;&gt;&lt;a href=&#34;#cb17-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;hello-2022&#34;&gt;Hello 2022&lt;/h2&gt;
&lt;h3 id=&#34;c---hidden-permutations&#34;&gt;1621C - Hidden Permutations&lt;/h3&gt;
&lt;p&gt;交互题，猜一个排列 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(n\le 10000\)&lt;/span&gt;）。初始有一个排列 &lt;span class=&#34;math inline&#34;&gt;\(q_i = i\)&lt;/span&gt;，每次可以询问一个 &lt;span class=&#34;math inline&#34;&gt;\(q_i\)&lt;/span&gt; 的值，交互库回答你的询问之后会将 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 替换成 &lt;span class=&#34;math inline&#34;&gt;\(q_i&amp;#39; = q_{p_i}\)&lt;/span&gt;。最多 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 次询问，求出 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们注意到，对 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 施加 &lt;span class=&#34;math inline&#34;&gt;\(q_i = q_{p_i}\)&lt;/span&gt; 的变换这一过程的本质是一个置换。不妨盯着一个 &lt;span class=&#34;math inline&#34;&gt;\(q_i\)&lt;/span&gt; 不放，我们发现其变换下去之后会为 &lt;span class=&#34;math inline&#34;&gt;\(p_i, p_{p_i}, p_{p_{p_i}},\cdots\)&lt;/span&gt; 会形成一个环，环上 &lt;span class=&#34;math inline&#34;&gt;\(u\to v\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(p_u = v\)&lt;/span&gt;。那么我们就可以每次盯着一个没有求出答案的下标询问，把这部分环找到，这题就解决了。&lt;/p&gt;
&lt;p&gt;询问次数的上界刚好为 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt;，卡的很准。&lt;/p&gt;
&lt;h3 id=&#34;d---the-winter-hike&#34;&gt;1621D - The Winter Hike&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(2n\times 2n\)&lt;/span&gt; 的棋盘，初始有 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; 个人在左上角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 正方形内（每个格子里面 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 人）。现要将这 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; 个人通过如下方式移动到右下角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 正方形内（每个格子 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 人）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选定一行，将其里面所有的人循环往左/右移一格。即对于有人的 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y)\)&lt;/span&gt;，我们施变换 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y)\to (x_0, y + 1)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y)\to(x_0, y - 1)\)&lt;/span&gt;。在 &lt;span class=&#34;math inline&#34;&gt;\((x_0, 2n)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((x_0, 1)\)&lt;/span&gt; 的特判。&lt;/li&gt;
&lt;li&gt;选定一列，将其里面所有的人循环往上/下移一格。即对于有人的 &lt;span class=&#34;math inline&#34;&gt;\((x, y_0)\)&lt;/span&gt;，我们施变换 &lt;span class=&#34;math inline&#34;&gt;\((x, y_0)\to (x + 1, y_0)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\((x, y_0)\to(x - 1, y_0)\)&lt;/span&gt;。在 &lt;span class=&#34;math inline&#34;&gt;\((2n, y_0)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((1, y_0)\)&lt;/span&gt; 的特判。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作可以进行任意次。同时有些格子里面有障碍，人不能经过，除掉 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 的障碍需要花费 &lt;span class=&#34;math inline&#34;&gt;\(c_{x, y}\)&lt;/span&gt;，可除掉的障碍数不限。问最小花费。&lt;/p&gt;
&lt;p&gt;是一道非常巧妙的构造。&lt;/p&gt;
&lt;p&gt;首先我们观察一下，发现右下角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 区域是必须除掉的。然后观察一下样例 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;，发现右下角的权值和为 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt;，说明我们只扣掉了一个多余的 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。然后注意到挖掉 &lt;span class=&#34;math inline&#34;&gt;\((2, 3)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((3, 2)\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\((1, 4)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((4, 1)\)&lt;/span&gt; 都是可以的。方案可以自行尝试构造。&lt;/p&gt;
&lt;p&gt;然后我们就发现，我们除了右下角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 要抠掉，只需要在两块 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 区域四角的交界格点处抠掉一个点就可以了。至于方案构造，就考虑一行行/一列列的移入右下角的区域，可以自行想象一下。这些点一共有 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt; 个，分别是：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\((1, 2n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((2n, 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((1, n + 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n + 1, 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n, n + 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n + 1, n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n, 2n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((2n, n)\)&lt;/span&gt;。于是这题就做完了。非常妙。&lt;/p&gt;
&lt;h3 id=&#34;e---new-school&#34;&gt;1621E - New School&lt;/h3&gt;
&lt;p&gt;要开办学校。&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个老师，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 组学生。第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 组学生有 &lt;span class=&#34;math inline&#34;&gt;\(k_i\)&lt;/span&gt; 人。老师的年龄分别为 &lt;span class=&#34;math inline&#34;&gt;\(a_1, \cdots, a_n\)&lt;/span&gt;，学生的年龄分别为 &lt;span class=&#34;math inline&#34;&gt;\(b_{i, 1},\cdots, b_{i, k_i}\)&lt;/span&gt;。要求安排老师到每组学生，满足&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每组学生都恰好有一个老师。&lt;/li&gt;
&lt;li&gt;一个老师最多带一个组。&lt;/li&gt;
&lt;li&gt;一组内，学生的平均年龄不超过老师的年龄。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于每个学生，求出若其不来上课，课程能否被安排。&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i,b_{i,j}\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\le k_i\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\sum k_i\le 2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑将所有学生组和所有老师降序排序。则有解当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\forall 1\le i\le m\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(avr_i\le a_i\)&lt;/span&gt;，该情况下我们将其一一对应即可。&lt;/p&gt;
&lt;p&gt;而当一个学生不来时，其只会影响一个组 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的平均年龄 &lt;span class=&#34;math inline&#34;&gt;\(avr_i\)&lt;/span&gt;。对于每一个学生 &lt;span class=&#34;math inline&#34;&gt;\(b_{i, x}\)&lt;/span&gt;，都可以二分找出没有他之后，整组人的新的位置 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。这样一来，&lt;span class=&#34;math inline&#34;&gt;\([j, i)\)&lt;/span&gt; 内的组都会往 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的方向平移一格。我们需要知道的，就是改变后的局面是否合法。&lt;/p&gt;
&lt;p&gt;至于改变之后是否合法，可以记三个前缀和数组（分别维护当前位置，当前位置往左/右平移一格后是否合法）来实现，详见代码。实现较为复杂恶心。同时，需要避开浮点误差。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pli = pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ok[maxn], ok_suf[maxn], ok_pre[maxn], pos0[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pair&amp;lt;pli, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; B[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pli a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; c[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;gt;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; pli &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; pli &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.first * b.second &amp;gt; b.first * a.second;}&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve() {&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m; read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i].first), a[i].second = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-14&#34;&gt;&lt;a href=&#34;#cb18-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb18-15&#34;&gt;&lt;a href=&#34;#cb18-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k; read(k); ll sum = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-16&#34;&gt;&lt;a href=&#34;#cb18-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[i].resize(k);&lt;/span&gt;
&lt;span id=&#34;cb18-17&#34;&gt;&lt;a href=&#34;#cb18-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(c[i][j]), sum += c[i][j];&lt;/span&gt;
&lt;span id=&#34;cb18-18&#34;&gt;&lt;a href=&#34;#cb18-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B[i] = make_pair(pli(sum, k), i);&lt;/span&gt;
&lt;span id=&#34;cb18-19&#34;&gt;&lt;a href=&#34;#cb18-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-20&#34;&gt;&lt;a href=&#34;#cb18-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-21&#34;&gt;&lt;a href=&#34;#cb18-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; cmp = [](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.first &amp;gt; b.first;};&lt;/span&gt;
&lt;span id=&#34;cb18-22&#34;&gt;&lt;a href=&#34;#cb18-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(B + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, B + m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cmp);&lt;/span&gt;
&lt;span id=&#34;cb18-23&#34;&gt;&lt;a href=&#34;#cb18-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb18-24&#34;&gt;&lt;a href=&#34;#cb18-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ok[i] = ok[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (B[i].first &amp;gt; a[i]);&lt;span class=&#34;co&#34;&gt;//记录不合法的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-25&#34;&gt;&lt;a href=&#34;#cb18-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ok_pre[i] = ok_pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (B[i].first &amp;gt; a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//记录不合法的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-26&#34;&gt;&lt;a href=&#34;#cb18-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ok_suf[i] = ok_suf[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (B[i].first &amp;gt; a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//记录不合法的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-27&#34;&gt;&lt;a href=&#34;#cb18-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pos0[B[i].second] = i;&lt;/span&gt;
&lt;span id=&#34;cb18-28&#34;&gt;&lt;a href=&#34;#cb18-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-29&#34;&gt;&lt;a href=&#34;#cb18-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb18-30&#34;&gt;&lt;a href=&#34;#cb18-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : c[i]) {&lt;/span&gt;
&lt;span id=&#34;cb18-31&#34;&gt;&lt;a href=&#34;#cb18-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            pli now(B[pos0[i]].first.first - x, B[pos0[i]].first.second - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-32&#34;&gt;&lt;a href=&#34;#cb18-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to = lower_bound(B + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, B + m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, make_pair(now, i), cmp) - B;&lt;/span&gt;
&lt;span id=&#34;cb18-33&#34;&gt;&lt;a href=&#34;#cb18-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to &amp;gt; pos0[i])&lt;/span&gt;
&lt;span id=&#34;cb18-34&#34;&gt;&lt;a href=&#34;#cb18-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                putchar((now &amp;gt; a[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] || ok[pos0[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + ok_pre[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - ok_pre[pos0[i]] + ok[m] - ok[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ? &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; : &lt;span class=&#34;ch&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-35&#34;&gt;&lt;a href=&#34;#cb18-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; putchar((now &amp;gt; a[to] || ok[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + ok_suf[pos0[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - ok_suf[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + ok[m] - ok[pos0[i]]) ? &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; : &lt;span class=&#34;ch&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-36&#34;&gt;&lt;a href=&#34;#cb18-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb18-37&#34;&gt;&lt;a href=&#34;#cb18-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-38&#34;&gt;&lt;a href=&#34;#cb18-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-39&#34;&gt;&lt;a href=&#34;#cb18-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-40&#34;&gt;&lt;a href=&#34;#cb18-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-41&#34;&gt;&lt;a href=&#34;#cb18-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-42&#34;&gt;&lt;a href=&#34;#cb18-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb18-43&#34;&gt;&lt;a href=&#34;#cb18-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb18-44&#34;&gt;&lt;a href=&#34;#cb18-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) solve();&lt;/span&gt;
&lt;span id=&#34;cb18-45&#34;&gt;&lt;a href=&#34;#cb18-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-46&#34;&gt;&lt;a href=&#34;#cb18-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-764-div.-3&#34;&gt;Codeforces Round #764 (Div. 3)&lt;/h2&gt;
&lt;p&gt;随缘来做做。&lt;/p&gt;
&lt;h3 id=&#34;f---interacdive-problem&#34;&gt;1624F - Interacdive Problem&lt;/h3&gt;
&lt;p&gt;交互题，猜数字。给定一个正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(2 &amp;lt; n\le 1000\)&lt;/span&gt;），要猜一个整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(1\le x &amp;lt; n\)&lt;/span&gt;。可以进行如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;`+ c`，使得 &lt;span class=&#34;math inline&#34;&gt;\(x:=x + c\)&lt;/span&gt;，然后交互器返回 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{x}{n}\right\rfloor\)&lt;/span&gt; 的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;! x&lt;/code&gt;，输出答案，&lt;strong&gt;当前的&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最多 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 次询问。&lt;/p&gt;
&lt;p&gt;直觉告诉我们，&lt;span class=&#34;math inline&#34;&gt;\(2^{10} = 1024\)&lt;/span&gt;，所以我们考虑二分出这个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，我们只需要每次对二分左右端点同时加上我们给交互库加上的 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 就可以了。我们的思路是尽可能把当前的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 往其上面的第一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的倍数去凑，所以每次二分的时候加上的都是 &lt;span class=&#34;math inline&#34;&gt;\(n - mid\bmod n\)&lt;/span&gt;。然后就可以根据交互库返回的值来一步步框死范围。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;+ &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; res; cin &amp;gt;&amp;gt; res;&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = n;&lt;/span&gt;
&lt;span id=&#34;cb19-10&#34;&gt;&lt;a href=&#34;#cb19-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt; r - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-11&#34;&gt;&lt;a href=&#34;#cb19-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-12&#34;&gt;&lt;a href=&#34;#cb19-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = n - mid % n;&lt;/span&gt;
&lt;span id=&#34;cb19-13&#34;&gt;&lt;a href=&#34;#cb19-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; res = add(a);&lt;/span&gt;
&lt;span id=&#34;cb19-14&#34;&gt;&lt;a href=&#34;#cb19-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        l += a, r += a, mid += a;&lt;/span&gt;
&lt;span id=&#34;cb19-15&#34;&gt;&lt;a href=&#34;#cb19-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (res == l / n) r = mid;&lt;/span&gt;
&lt;span id=&#34;cb19-16&#34;&gt;&lt;a href=&#34;#cb19-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; l = mid; &lt;/span&gt;
&lt;span id=&#34;cb19-17&#34;&gt;&lt;a href=&#34;#cb19-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb19-18&#34;&gt;&lt;a href=&#34;#cb19-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;! &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; l &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb19-19&#34;&gt;&lt;a href=&#34;#cb19-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-20&#34;&gt;&lt;a href=&#34;#cb19-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;g---minor-tree&#34;&gt;1624G - MinOr Tree&lt;/h3&gt;
&lt;p&gt;给定一张无向图，定义其生成树的边权为 OR 和，问最小生成树的边权 OR 和。&lt;/p&gt;
&lt;p&gt;考虑从高到低按位贪心，用并查集判断该位是不是必须取，不是的话就不取。具体地，令 &lt;span class=&#34;math inline&#34;&gt;\(ans = 2^{30} - 1\)&lt;/span&gt;，然后每次先将 &lt;span class=&#34;math inline&#34;&gt;\(ans\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 位去掉，看能否满足存在生成树，若能存在则第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 位不取。&lt;/p&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log a\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge {&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v, w;&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxn];&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, fa[maxn];&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fa[u] == u ? u : fa[u] = find(fa[u]);}&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-9&#34;&gt;&lt;a href=&#34;#cb20-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb20-10&#34;&gt;&lt;a href=&#34;#cb20-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = find(u), v = find(v);&lt;/span&gt;
&lt;span id=&#34;cb20-11&#34;&gt;&lt;a href=&#34;#cb20-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u == v) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-12&#34;&gt;&lt;a href=&#34;#cb20-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fa[u] = v, &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-13&#34;&gt;&lt;a href=&#34;#cb20-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-14&#34;&gt;&lt;a href=&#34;#cb20-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-15&#34;&gt;&lt;a href=&#34;#cb20-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mask) {&lt;/span&gt;
&lt;span id=&#34;cb20-16&#34;&gt;&lt;a href=&#34;#cb20-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) fa[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb20-17&#34;&gt;&lt;a href=&#34;#cb20-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size = n;&lt;/span&gt;
&lt;span id=&#34;cb20-18&#34;&gt;&lt;a href=&#34;#cb20-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb20-19&#34;&gt;&lt;a href=&#34;#cb20-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((e[i].w | mask) != mask) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-20&#34;&gt;&lt;a href=&#34;#cb20-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (merge(e[i].u, e[i].v)) --size;&lt;/span&gt;
&lt;span id=&#34;cb20-21&#34;&gt;&lt;a href=&#34;#cb20-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-22&#34;&gt;&lt;a href=&#34;#cb20-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; size == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-23&#34;&gt;&lt;a href=&#34;#cb20-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-24&#34;&gt;&lt;a href=&#34;#cb20-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-25&#34;&gt;&lt;a href=&#34;#cb20-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb20-26&#34;&gt;&lt;a href=&#34;#cb20-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb20-27&#34;&gt;&lt;a href=&#34;#cb20-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb20-28&#34;&gt;&lt;a href=&#34;#cb20-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb20-29&#34;&gt;&lt;a href=&#34;#cb20-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) read(e[i].u, e[i].v, e[i].w);&lt;/span&gt;
&lt;span id=&#34;cb20-30&#34;&gt;&lt;a href=&#34;#cb20-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-31&#34;&gt;&lt;a href=&#34;#cb20-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, &lt;span class=&#34;dv&#34;&gt;29&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb20-32&#34;&gt;&lt;a href=&#34;#cb20-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb20-33&#34;&gt;&lt;a href=&#34;#cb20-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!check(ans)) ans ^= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb20-34&#34;&gt;&lt;a href=&#34;#cb20-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb20-35&#34;&gt;&lt;a href=&#34;#cb20-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans);&lt;/span&gt;
&lt;span id=&#34;cb20-36&#34;&gt;&lt;a href=&#34;#cb20-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-37&#34;&gt;&lt;a href=&#34;#cb20-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-38&#34;&gt;&lt;a href=&#34;#cb20-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-765-div.-2&#34;&gt;Codeforces Round #765 (Div. 2)&lt;/h2&gt;
&lt;p&gt;补完了！&lt;/p&gt;
&lt;h3 id=&#34;d---binary-spiders&#34;&gt;1625D - Binary Spiders&lt;/h3&gt;
&lt;p&gt;题意：给定一个数集 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，大小 &lt;span class=&#34;math inline&#34;&gt;\(n\le 3\times 10^5\)&lt;/span&gt;，要求选出一个大小最大的子集 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，使得其中元素两两异或的值都大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;。构造方案。&lt;/p&gt;
&lt;p&gt;我们发现两个数字异或起来大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的一个必要条件是其二进制表示下，最高的不相同的位大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的最高位。即他们在 Trie 上的 LCA 大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的最高位。下面令这个第 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 位为 &lt;span class=&#34;math inline&#34;&gt;\(up\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;在 Trie 上递归求解问题。点对分为在左右子树内部和跨越该节点两种情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前 Trie 表示的位数大于 &lt;span class=&#34;math inline&#34;&gt;\(up\)&lt;/span&gt;，此时左右子树内部的点对都有希望异或大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;，而跨越该节点的铁定大于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;，所以递归下去做然后把两边答案合并。&lt;/li&gt;
&lt;li&gt;当前 Trie 表示的位数等于 &lt;span class=&#34;math inline&#34;&gt;\(up\)&lt;/span&gt;，此时我们要么在该子树中选出一个大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的元素，要么找一对跨越左右子树的异或大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的数对，然后就不用递归下去了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个过程应该是自证明的。找大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的元素很简单，一直往右子树找最大的即可。找异或大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的也很简单，将一个子树内的所有数字提出来，挨个在右边查最大异或对，就可以找到了。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(K = 0\)&lt;/span&gt; 的情况需要特判。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, K, a[maxn], up;&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[maxn * &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], val[maxn * &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;], tot, root;&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-5&#34;&gt;&lt;a href=&#34;#cb21-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; id, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb21-6&#34;&gt;&lt;a href=&#34;#cb21-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) u = ++tot;&lt;/span&gt;
&lt;span id=&#34;cb21-7&#34;&gt;&lt;a href=&#34;#cb21-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val[u] = id, &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb21-8&#34;&gt;&lt;a href=&#34;#cb21-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = (x &amp;gt;&amp;gt; k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-9&#34;&gt;&lt;a href=&#34;#cb21-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(ch[u][c], id, x, k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-10&#34;&gt;&lt;a href=&#34;#cb21-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-11&#34;&gt;&lt;a href=&#34;#cb21-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-12&#34;&gt;&lt;a href=&#34;#cb21-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-13&#34;&gt;&lt;a href=&#34;#cb21-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; getval(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb21-14&#34;&gt;&lt;a href=&#34;#cb21-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;();&lt;/span&gt;
&lt;span id=&#34;cb21-15&#34;&gt;&lt;a href=&#34;#cb21-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;{val[u]};&lt;/span&gt;
&lt;span id=&#34;cb21-16&#34;&gt;&lt;a href=&#34;#cb21-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; r1 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), r2 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-17&#34;&gt;&lt;a href=&#34;#cb21-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; xx : r2) r1.push_back(xx);&lt;/span&gt;
&lt;span id=&#34;cb21-18&#34;&gt;&lt;a href=&#34;#cb21-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; r1;&lt;/span&gt;
&lt;span id=&#34;cb21-19&#34;&gt;&lt;a href=&#34;#cb21-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-20&#34;&gt;&lt;a href=&#34;#cb21-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-21&#34;&gt;&lt;a href=&#34;#cb21-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb21-22&#34;&gt;&lt;a href=&#34;#cb21-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val[u];&lt;/span&gt;
&lt;span id=&#34;cb21-23&#34;&gt;&lt;a href=&#34;#cb21-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = ((x &amp;gt;&amp;gt; k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-24&#34;&gt;&lt;a href=&#34;#cb21-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ch[u][c]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(ch[u][c ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x);&lt;/span&gt;
&lt;span id=&#34;cb21-25&#34;&gt;&lt;a href=&#34;#cb21-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(ch[u][c], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x);&lt;/span&gt;
&lt;span id=&#34;cb21-26&#34;&gt;&lt;a href=&#34;#cb21-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-27&#34;&gt;&lt;a href=&#34;#cb21-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-28&#34;&gt;&lt;a href=&#34;#cb21-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb21-29&#34;&gt;&lt;a href=&#34;#cb21-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; up || !u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;();&lt;/span&gt;
&lt;span id=&#34;cb21-30&#34;&gt;&lt;a href=&#34;#cb21-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; up) {&lt;/span&gt;
&lt;span id=&#34;cb21-31&#34;&gt;&lt;a href=&#34;#cb21-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; r1 = solve(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), r2 = solve(ch[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-32&#34;&gt;&lt;a href=&#34;#cb21-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; xx : r2) r1.push_back(xx);&lt;/span&gt;
&lt;span id=&#34;cb21-33&#34;&gt;&lt;a href=&#34;#cb21-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; r1;&lt;/span&gt;
&lt;span id=&#34;cb21-34&#34;&gt;&lt;a href=&#34;#cb21-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == up) {&lt;/span&gt;
&lt;span id=&#34;cb21-35&#34;&gt;&lt;a href=&#34;#cb21-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; vec1 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), vec2 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), ans;&lt;/span&gt;
&lt;span id=&#34;cb21-36&#34;&gt;&lt;a href=&#34;#cb21-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vec1.size()) {&lt;/span&gt;
&lt;span id=&#34;cb21-37&#34;&gt;&lt;a href=&#34;#cb21-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[vec2.back()] &amp;gt;= K) ans.push_back(vec2.back());&lt;/span&gt;
&lt;span id=&#34;cb21-38&#34;&gt;&lt;a href=&#34;#cb21-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb21-39&#34;&gt;&lt;a href=&#34;#cb21-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-40&#34;&gt;&lt;a href=&#34;#cb21-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vec2.size()) {&lt;/span&gt;
&lt;span id=&#34;cb21-41&#34;&gt;&lt;a href=&#34;#cb21-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[vec1.back()] &amp;gt;= K) ans.push_back(vec1.back());&lt;/span&gt;
&lt;span id=&#34;cb21-42&#34;&gt;&lt;a href=&#34;#cb21-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb21-43&#34;&gt;&lt;a href=&#34;#cb21-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-44&#34;&gt;&lt;a href=&#34;#cb21-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-45&#34;&gt;&lt;a href=&#34;#cb21-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x1 : vec1) {&lt;/span&gt;
&lt;span id=&#34;cb21-46&#34;&gt;&lt;a href=&#34;#cb21-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x2 = query(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a[x1]);&lt;/span&gt;
&lt;span id=&#34;cb21-47&#34;&gt;&lt;a href=&#34;#cb21-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((a[x1] ^ a[x2]) &amp;gt;= K) {&lt;/span&gt;
&lt;span id=&#34;cb21-48&#34;&gt;&lt;a href=&#34;#cb21-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                flag = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-49&#34;&gt;&lt;a href=&#34;#cb21-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back(x1), ans.push_back(x2);&lt;/span&gt;
&lt;span id=&#34;cb21-50&#34;&gt;&lt;a href=&#34;#cb21-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-51&#34;&gt;&lt;a href=&#34;#cb21-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb21-52&#34;&gt;&lt;a href=&#34;#cb21-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-53&#34;&gt;&lt;a href=&#34;#cb21-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flag) {&lt;/span&gt;
&lt;span id=&#34;cb21-54&#34;&gt;&lt;a href=&#34;#cb21-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[vec1.back()] &amp;gt;= K) ans.push_back(vec1.back());&lt;/span&gt;
&lt;span id=&#34;cb21-55&#34;&gt;&lt;a href=&#34;#cb21-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-56&#34;&gt;&lt;a href=&#34;#cb21-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb21-57&#34;&gt;&lt;a href=&#34;#cb21-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-58&#34;&gt;&lt;a href=&#34;#cb21-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-59&#34;&gt;&lt;a href=&#34;#cb21-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-60&#34;&gt;&lt;a href=&#34;#cb21-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb21-61&#34;&gt;&lt;a href=&#34;#cb21-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, K);&lt;/span&gt;
&lt;span id=&#34;cb21-62&#34;&gt;&lt;a href=&#34;#cb21-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((K &amp;gt;&amp;gt; i) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb21-63&#34;&gt;&lt;a href=&#34;#cb21-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        up = i;&lt;/span&gt;
&lt;span id=&#34;cb21-64&#34;&gt;&lt;a href=&#34;#cb21-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-65&#34;&gt;&lt;a href=&#34;#cb21-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-66&#34;&gt;&lt;a href=&#34;#cb21-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (K == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb21-67&#34;&gt;&lt;a href=&#34;#cb21-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(n);&lt;/span&gt;
&lt;span id=&#34;cb21-68&#34;&gt;&lt;a href=&#34;#cb21-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) print(i, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-69&#34;&gt;&lt;a href=&#34;#cb21-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-70&#34;&gt;&lt;a href=&#34;#cb21-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-71&#34;&gt;&lt;a href=&#34;#cb21-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), insert(root, i, a[i], &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-72&#34;&gt;&lt;a href=&#34;#cb21-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; ans = solve(root, &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-73&#34;&gt;&lt;a href=&#34;#cb21-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ans.size()) print(-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-74&#34;&gt;&lt;a href=&#34;#cb21-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb21-75&#34;&gt;&lt;a href=&#34;#cb21-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans.size());&lt;/span&gt;
&lt;span id=&#34;cb21-76&#34;&gt;&lt;a href=&#34;#cb21-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : ans) print(x, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-77&#34;&gt;&lt;a href=&#34;#cb21-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-78&#34;&gt;&lt;a href=&#34;#cb21-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-79&#34;&gt;&lt;a href=&#34;#cb21-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e1---cats-on-the-upgrade-easy-version&#34;&gt;1625E1 - Cats on the Upgrade (easy version)&lt;/h3&gt;
&lt;p&gt;给出如下定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义一个字符串是合法的括号序列（RBS）当且仅当其能通过每次去掉一个 &lt;code&gt;.&lt;/code&gt; 或者一个连续的 &lt;code&gt;()&lt;/code&gt; 变成空串。&lt;/li&gt;
&lt;li&gt;一个 RBS 被称为“简单的”当且仅当其开头和结尾均不为&lt;code&gt;.&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后给定一个长为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的只包含字符 &lt;code&gt;(&lt;/code&gt; 和 &lt;code&gt;)&lt;/code&gt; 的字符串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;。要求完成如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(l, r\)&lt;/span&gt;，保证 &lt;span class=&#34;math inline&#34;&gt;\(S_l\)&lt;/span&gt; 为 &lt;code&gt;(&lt;/code&gt;，&lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 为 &lt;code&gt;)&lt;/code&gt;，其中间的字符均为 &lt;code&gt;.&lt;/code&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(S_l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 设为 &lt;code&gt;.&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(l, r\)&lt;/span&gt;，询问 &lt;span class=&#34;math inline&#34;&gt;\(S_{[l\cdots r]}\)&lt;/span&gt; 有多少连续子段为简单的 RBS，保证 &lt;span class=&#34;math inline&#34;&gt;\(S_{[l\cdots r]}\)&lt;/span&gt; 为简单 RBS。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le q\le 3\times10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;easy version 无修改操作。&lt;/p&gt;
&lt;p&gt;静态问题的话我们不妨记 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾的 RBS 的数量，这个东西很好 DP 出来，然后做个前缀和 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;，然后会发现 &lt;span class=&#34;math inline&#34;&gt;\(S_r - S_{l}\)&lt;/span&gt; 算重了某些信息。&lt;/p&gt;
&lt;p&gt;具体地，多算 RBS 的左端点应该在 &lt;span class=&#34;math inline&#34;&gt;\([1, l - 1]\)&lt;/span&gt;，右端点应该在 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，这些东西需要减掉。而，我们知道，设这样的 RBS 为 &lt;span class=&#34;math inline&#34;&gt;\([i,j]\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\([i, l - 1]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\([l, j]\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\([j + 1, r]\)&lt;/span&gt; 都应该是 RBS。所以这些形如 &lt;span class=&#34;math inline&#34;&gt;\([i,j]\)&lt;/span&gt; 的 RBS 的数量应该是形如 &lt;span class=&#34;math inline&#34;&gt;\([i, l -1]\)&lt;/span&gt; 的 RBS 的数量乘上形如 &lt;span class=&#34;math inline&#34;&gt;\([l, j]\)&lt;/span&gt; 的 RBS 的数量，即为 &lt;span class=&#34;math inline&#34;&gt;\(p_{l - 1}\times (p_r - p_{l - 1})\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e2---cats-on-the-upgrade-hard-version&#34;&gt;1625E2 - Cats on the Upgrade (hard version)&lt;/h3&gt;
&lt;p&gt;hard version 带上修改操作。&lt;/p&gt;
&lt;p&gt;上面这种做法的扩展性应该是不太好的。考虑建出括号树（或者说，森林，那些不合法的字符就直接扔掉），一对左右括号是一个节点，类似下面这张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s4.ax1x.com/2022/01/28/7zM1Ej.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后我们注意到，每次询问肯定都是询问树上一个节点或者若干个同层相邻节点的信息，并且每次操作都是删除叶子节点。我们考虑如何对于一个节点计算&lt;strong&gt;只选其儿子能构成 RBS 的数量&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(g_u\)&lt;/span&gt;，发现其就是选择 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个儿子、两个相邻儿子、三个相邻儿子……，设 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 个儿子的话，&lt;span class=&#34;math inline&#34;&gt;\(g_u = x(x+1)/2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而我们考虑一个节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 代表的 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 内的 RBS 数量的话，其明显为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{u是v祖先} g_v + g_u\)&lt;/span&gt;。所以，对于一次询问的 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，其肯定包含了一个同层的点集 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，其答案就再加上 &lt;span class=&#34;math inline&#34;&gt;\(|A|\times (|A| + 1) / 2\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;那么对于一次修改操作，我们思考其改变了什么：无非就是父亲节点的儿子数量减小，我们需要维护每个节点的 &lt;span class=&#34;math inline&#34;&gt;\(g_u\)&lt;/span&gt;，支持单修区查；然后维护每个点的儿子，同样是单修区查，用树状数组就可以了。&lt;/p&gt;
&lt;p&gt;这应该是最简洁的做法了。具体看代码，目前为 CF 最优解。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb22-4&#34;&gt;&lt;a href=&#34;#cb22-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, q;&lt;/span&gt;
&lt;span id=&#34;cb22-5&#34;&gt;&lt;a href=&#34;#cb22-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-6&#34;&gt;&lt;a href=&#34;#cb22-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; bit {&lt;/span&gt;
&lt;span id=&#34;cb22-7&#34;&gt;&lt;a href=&#34;#cb22-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;ll&amp;gt; s; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sz;&lt;/span&gt;
&lt;span id=&#34;cb22-8&#34;&gt;&lt;a href=&#34;#cb22-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; SZ) {sz = SZ + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, s.resize(sz); &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb22-9&#34;&gt;&lt;a href=&#34;#cb22-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, ll v) {&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x &amp;lt; sz; x += (x &amp;amp; -x)) s[x] += v; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb22-10&#34;&gt;&lt;a href=&#34;#cb22-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x; x -= (x &amp;amp; -x)) ret += s[x]; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;}&lt;/span&gt;
&lt;span id=&#34;cb22-11&#34;&gt;&lt;a href=&#34;#cb22-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} T, t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb22-12&#34;&gt;&lt;a href=&#34;#cb22-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-13&#34;&gt;&lt;a href=&#34;#cb22-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; son[maxn], fa[maxn], bel[maxn], ord[maxn], size[maxn];&lt;/span&gt;
&lt;span id=&#34;cb22-14&#34;&gt;&lt;a href=&#34;#cb22-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-15&#34;&gt;&lt;a href=&#34;#cb22-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb22-16&#34;&gt;&lt;a href=&#34;#cb22-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, q);&lt;/span&gt;
&lt;span id=&#34;cb22-17&#34;&gt;&lt;a href=&#34;#cb22-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-18&#34;&gt;&lt;a href=&#34;#cb22-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, now = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-19&#34;&gt;&lt;a href=&#34;#cb22-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb22-20&#34;&gt;&lt;a href=&#34;#cb22-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-21&#34;&gt;&lt;a href=&#34;#cb22-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ord[++cnt] = ++son[now];&lt;/span&gt;
&lt;span id=&#34;cb22-22&#34;&gt;&lt;a href=&#34;#cb22-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            fa[cnt] = now, bel[i] = cnt, now = cnt;&lt;/span&gt;
&lt;span id=&#34;cb22-23&#34;&gt;&lt;a href=&#34;#cb22-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now != &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-24&#34;&gt;&lt;a href=&#34;#cb22-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            bel[i] = now;&lt;/span&gt;
&lt;span id=&#34;cb22-25&#34;&gt;&lt;a href=&#34;#cb22-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now = fa[now];&lt;/span&gt;
&lt;span id=&#34;cb22-26&#34;&gt;&lt;a href=&#34;#cb22-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb22-27&#34;&gt;&lt;a href=&#34;#cb22-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb22-28&#34;&gt;&lt;a href=&#34;#cb22-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T.build(cnt);&lt;/span&gt;
&lt;span id=&#34;cb22-29&#34;&gt;&lt;a href=&#34;#cb22-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) {&lt;/span&gt;
&lt;span id=&#34;cb22-30&#34;&gt;&lt;a href=&#34;#cb22-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        T.add(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * son[i] * (son[i] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-31&#34;&gt;&lt;a href=&#34;#cb22-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[i].build(son[i]);&lt;/span&gt;
&lt;span id=&#34;cb22-32&#34;&gt;&lt;a href=&#34;#cb22-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb22-33&#34;&gt;&lt;a href=&#34;#cb22-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, cnt, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) size[fa[i]] += (++size[i]);&lt;/span&gt;
&lt;span id=&#34;cb22-34&#34;&gt;&lt;a href=&#34;#cb22-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--) {&lt;/span&gt;
&lt;span id=&#34;cb22-35&#34;&gt;&lt;a href=&#34;#cb22-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op, l, r; read(op, l, r);&lt;/span&gt;
&lt;span id=&#34;cb22-36&#34;&gt;&lt;a href=&#34;#cb22-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-37&#34;&gt;&lt;a href=&#34;#cb22-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = bel[l];&lt;/span&gt;
&lt;span id=&#34;cb22-38&#34;&gt;&lt;a href=&#34;#cb22-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa[now]].add(ord[now], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-39&#34;&gt;&lt;a href=&#34;#cb22-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            T.add(fa[now], -son[fa[now]]--);&lt;/span&gt;
&lt;span id=&#34;cb22-40&#34;&gt;&lt;a href=&#34;#cb22-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb22-41&#34;&gt;&lt;a href=&#34;#cb22-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            l = bel[l], r = bel[r];&lt;/span&gt;
&lt;span id=&#34;cb22-42&#34;&gt;&lt;a href=&#34;#cb22-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll ans = T.query(r + size[r] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - T.query(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-43&#34;&gt;&lt;a href=&#34;#cb22-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll cnt = ord[r] - ord[l] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - t[fa[l]].query(ord[r]) + t[fa[l]].query(ord[l] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-44&#34;&gt;&lt;a href=&#34;#cb22-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += cnt * (cnt + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-45&#34;&gt;&lt;a href=&#34;#cb22-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(ans);&lt;/span&gt;
&lt;span id=&#34;cb22-46&#34;&gt;&lt;a href=&#34;#cb22-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb22-47&#34;&gt;&lt;a href=&#34;#cb22-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb22-48&#34;&gt;&lt;a href=&#34;#cb22-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-49&#34;&gt;&lt;a href=&#34;#cb22-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-766-div.-2&#34;&gt;Codeforces Round #766 (Div. 2)&lt;/h2&gt;
&lt;p&gt;补完了，好！&lt;/p&gt;
&lt;h3 id=&#34;d---not-adding&#34;&gt;1627D - Not Adding&lt;/h3&gt;
&lt;p&gt;注意到所谓的加入数字的顺序其实无关紧要，为了尽可能多的加数，我们从大到小枚举加的这个数字。&lt;/p&gt;
&lt;p&gt;假设其为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后枚举倍数 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。我们只需要保证数组内有满足 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], n, maxx, ans;&lt;/span&gt;
&lt;span id=&#34;cb23-3&#34;&gt;&lt;a href=&#34;#cb23-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-4&#34;&gt;&lt;a href=&#34;#cb23-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b ? gcd(b, a % b) : a;}&lt;/span&gt;
&lt;span id=&#34;cb23-5&#34;&gt;&lt;a href=&#34;#cb23-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-6&#34;&gt;&lt;a href=&#34;#cb23-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb23-7&#34;&gt;&lt;a href=&#34;#cb23-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb23-8&#34;&gt;&lt;a href=&#34;#cb23-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb23-9&#34;&gt;&lt;a href=&#34;#cb23-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; read(x);&lt;/span&gt;
&lt;span id=&#34;cb23-10&#34;&gt;&lt;a href=&#34;#cb23-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-11&#34;&gt;&lt;a href=&#34;#cb23-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        chkmax(maxx, x);&lt;/span&gt;
&lt;span id=&#34;cb23-12&#34;&gt;&lt;a href=&#34;#cb23-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb23-13&#34;&gt;&lt;a href=&#34;#cb23-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, maxx, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb23-14&#34;&gt;&lt;a href=&#34;#cb23-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-15&#34;&gt;&lt;a href=&#34;#cb23-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, f = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-16&#34;&gt;&lt;a href=&#34;#cb23-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * i; j &amp;lt;= N; j += i) {&lt;/span&gt;
&lt;span id=&#34;cb23-17&#34;&gt;&lt;a href=&#34;#cb23-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[j]) {&lt;/span&gt;
&lt;span id=&#34;cb23-18&#34;&gt;&lt;a href=&#34;#cb23-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb23-19&#34;&gt;&lt;a href=&#34;#cb23-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f = j / i;&lt;/span&gt;
&lt;span id=&#34;cb23-20&#34;&gt;&lt;a href=&#34;#cb23-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; f = gcd(f, j / i);&lt;/span&gt;
&lt;span id=&#34;cb23-21&#34;&gt;&lt;a href=&#34;#cb23-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb23-22&#34;&gt;&lt;a href=&#34;#cb23-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb23-23&#34;&gt;&lt;a href=&#34;#cb23-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; f == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) vis[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++ans;&lt;/span&gt;
&lt;span id=&#34;cb23-24&#34;&gt;&lt;a href=&#34;#cb23-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb23-25&#34;&gt;&lt;a href=&#34;#cb23-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb23-26&#34;&gt;&lt;a href=&#34;#cb23-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-27&#34;&gt;&lt;a href=&#34;#cb23-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---not-escaping&#34;&gt;1627E - Not Escaping&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 层楼，每层楼有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个房间，要求从 &lt;span class=&#34;math inline&#34;&gt;\((1,1)\to(n,m)\)&lt;/span&gt;。走法有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在同一楼层平移，如 &lt;span class=&#34;math inline&#34;&gt;\((i, j_1)\to(i, j_2)\)&lt;/span&gt;，代价为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\cdot|j_2 - j_1|\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;通过梯子从 &lt;span class=&#34;math inline&#34;&gt;\((a_i,b_i)\to(c_i,d_i)\)&lt;/span&gt;，代价为 &lt;span class=&#34;math inline&#34;&gt;\(-h_i\)&lt;/span&gt;。保证有 &lt;span class=&#34;math inline&#34;&gt;\(a_i&amp;lt;c_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问最小代价或者输出无解。&lt;span class=&#34;math inline&#34;&gt;\(2\le n,m\le 10^5\)&lt;/span&gt;，梯子总数 &lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le x_i,h_i\le 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;实际上会发现，有用的点不超过 &lt;span class=&#34;math inline&#34;&gt;\(2k + 2\)&lt;/span&gt; 个（起点，终点和梯子的端点），并且梯子都是自下而上的。&lt;/p&gt;
&lt;p&gt;因此我们从下往上一层一层的 dp，用当前层的 dp 值更新当前层，然后有梯子的就往上更新。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pil = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-5&#34;&gt;&lt;a href=&#34;#cb24-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll x[maxn], dp[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-6&#34;&gt;&lt;a href=&#34;#cb24-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; ladder {&lt;/span&gt;
&lt;span id=&#34;cb24-7&#34;&gt;&lt;a href=&#34;#cb24-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, b, c, d, h;&lt;/span&gt;
&lt;span id=&#34;cb24-8&#34;&gt;&lt;a href=&#34;#cb24-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ladder() {}&lt;/span&gt;
&lt;span id=&#34;cb24-9&#34;&gt;&lt;a href=&#34;#cb24-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ladder(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _c, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _d, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _h) : a(_a), b(_b), c(_c), d(_d), h(_h) {}&lt;/span&gt;
&lt;span id=&#34;cb24-10&#34;&gt;&lt;a href=&#34;#cb24-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb24-11&#34;&gt;&lt;a href=&#34;#cb24-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;ladder&amp;gt; lad[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-12&#34;&gt;&lt;a href=&#34;#cb24-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, ll&amp;gt; row[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-13&#34;&gt;&lt;a href=&#34;#cb24-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-14&#34;&gt;&lt;a href=&#34;#cb24-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve() {&lt;/span&gt;
&lt;span id=&#34;cb24-15&#34;&gt;&lt;a href=&#34;#cb24-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, k; read(n, m, k);&lt;/span&gt;
&lt;span id=&#34;cb24-16&#34;&gt;&lt;a href=&#34;#cb24-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(x[i]), vector&amp;lt;ladder&amp;gt;().swap(lad[i]), map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, ll&amp;gt;().swap(row[i]);&lt;/span&gt;
&lt;span id=&#34;cb24-17&#34;&gt;&lt;a href=&#34;#cb24-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb24-18&#34;&gt;&lt;a href=&#34;#cb24-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, b, c, d, h; read(a, b, c, d, h);&lt;/span&gt;
&lt;span id=&#34;cb24-19&#34;&gt;&lt;a href=&#34;#cb24-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        lad[a].push_back(ladder(a, b, c, d, h));&lt;/span&gt;
&lt;span id=&#34;cb24-20&#34;&gt;&lt;a href=&#34;#cb24-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        row[a][b] = INF, row[c][d] = INF;&lt;/span&gt;
&lt;span id=&#34;cb24-21&#34;&gt;&lt;a href=&#34;#cb24-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb24-22&#34;&gt;&lt;a href=&#34;#cb24-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    row[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, row[n][m] = INF;&lt;/span&gt;
&lt;span id=&#34;cb24-23&#34;&gt;&lt;a href=&#34;#cb24-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb24-24&#34;&gt;&lt;a href=&#34;#cb24-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (row[i].size() &amp;gt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb24-25&#34;&gt;&lt;a href=&#34;#cb24-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            pil last = *row[i].begin();&lt;/span&gt;
&lt;span id=&#34;cb24-26&#34;&gt;&lt;a href=&#34;#cb24-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = ++(row[i].begin()); it != row[i].end(); last = *it++)&lt;/span&gt;
&lt;span id=&#34;cb24-27&#34;&gt;&lt;a href=&#34;#cb24-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmin(it-&amp;gt;second, last.second + x[i] * myabs(last.first - it-&amp;gt;first));&lt;/span&gt;
&lt;span id=&#34;cb24-28&#34;&gt;&lt;a href=&#34;#cb24-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            last = *row[i].rbegin();&lt;/span&gt;
&lt;span id=&#34;cb24-29&#34;&gt;&lt;a href=&#34;#cb24-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = ++(row[i].rbegin()); it != row[i].rend(); last = *it++)&lt;/span&gt;
&lt;span id=&#34;cb24-30&#34;&gt;&lt;a href=&#34;#cb24-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmin(it-&amp;gt;second, last.second + x[i] * myabs(last.first - it-&amp;gt;first));&lt;/span&gt;
&lt;span id=&#34;cb24-31&#34;&gt;&lt;a href=&#34;#cb24-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb24-32&#34;&gt;&lt;a href=&#34;#cb24-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; ld : lad[i])&lt;/span&gt;
&lt;span id=&#34;cb24-33&#34;&gt;&lt;a href=&#34;#cb24-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (row[ld.a][ld.b] &amp;lt; INF) chkmin(row[ld.c][ld.d], row[ld.a][ld.b] - ld.h);&lt;/span&gt;
&lt;span id=&#34;cb24-34&#34;&gt;&lt;a href=&#34;#cb24-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb24-35&#34;&gt;&lt;a href=&#34;#cb24-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (row[n][m] &amp;lt; INF) print(row[n][m]);&lt;/span&gt;
&lt;span id=&#34;cb24-36&#34;&gt;&lt;a href=&#34;#cb24-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO ESCAPE&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb24-37&#34;&gt;&lt;a href=&#34;#cb24-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb24-38&#34;&gt;&lt;a href=&#34;#cb24-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-39&#34;&gt;&lt;a href=&#34;#cb24-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb24-40&#34;&gt;&lt;a href=&#34;#cb24-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb24-41&#34;&gt;&lt;a href=&#34;#cb24-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) solve();&lt;/span&gt;
&lt;span id=&#34;cb24-42&#34;&gt;&lt;a href=&#34;#cb24-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-43&#34;&gt;&lt;a href=&#34;#cb24-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;f---not-splitting&#34;&gt;1627F - Not Splitting&lt;/h3&gt;
&lt;p&gt;给定一个 &lt;span class=&#34;math inline&#34;&gt;\(k\times k\)&lt;/span&gt; 的方格（&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为不超过 &lt;span class=&#34;math inline&#34;&gt;\(500\)&lt;/span&gt; 的偶数），并给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^5\)&lt;/span&gt;）对相邻点对 &lt;span class=&#34;math inline&#34;&gt;\((r_{i,1}, c_{i,1})\leftrightarrow (r_{i,2}, c_{i,2})\)&lt;/span&gt;。然后将这个 &lt;span class=&#34;math inline&#34;&gt;\(k\times k\)&lt;/span&gt; 方格切分为全等的两块，使得最多的约束条件能被满足（即点对中的两个点在一块上）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://espresso.codeforces.com/0012ed54311c86b8968d6963561d937ba08d1737.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后我们会发现，这个切分的痕迹应该是关于方格中心对称的。&lt;/p&gt;
&lt;p&gt;不妨将其看成一个最短路模型。将其视作一个网格图，若其有限制条件，则边权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;之后就从 &lt;span class=&#34;math inline&#34;&gt;\((k/2, k/2)\)&lt;/span&gt; 出发，以四周为终点，跑最短路即可。需要注意的的是我们认为经过了 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 就等同于经过了 &lt;span class=&#34;math inline&#34;&gt;\((k - x, k - y)\)&lt;/span&gt;，因为要关于方格中心对称。&lt;/p&gt;
&lt;p&gt;是一道非常有意思的题！&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define mktp &lt;/span&gt;make_tuple&lt;/span&gt;
&lt;span id=&#34;cb25-2&#34;&gt;&lt;a href=&#34;#cb25-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-3&#34;&gt;&lt;a href=&#34;#cb25-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb25-4&#34;&gt;&lt;a href=&#34;#cb25-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, w;&lt;/span&gt;
&lt;span id=&#34;cb25-5&#34;&gt;&lt;a href=&#34;#cb25-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    node() {}&lt;/span&gt;
&lt;span id=&#34;cb25-6&#34;&gt;&lt;a href=&#34;#cb25-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    node(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; xx, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; yy, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ww) : x(xx), y(yy), w(ww) {}&lt;/span&gt;
&lt;span id=&#34;cb25-7&#34;&gt;&lt;a href=&#34;#cb25-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;lt;(node rhs) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb25-8&#34;&gt;&lt;a href=&#34;#cb25-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; w &amp;gt; rhs.w;&lt;/span&gt;
&lt;span id=&#34;cb25-9&#34;&gt;&lt;a href=&#34;#cb25-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb25-10&#34;&gt;&lt;a href=&#34;#cb25-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb25-11&#34;&gt;&lt;a href=&#34;#cb25-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-12&#34;&gt;&lt;a href=&#34;#cb25-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;tuple&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; mp;&lt;/span&gt;
&lt;span id=&#34;cb25-13&#34;&gt;&lt;a href=&#34;#cb25-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-14&#34;&gt;&lt;a href=&#34;#cb25-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fx[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb25-15&#34;&gt;&lt;a href=&#34;#cb25-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fy[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb25-16&#34;&gt;&lt;a href=&#34;#cb25-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[&lt;span class=&#34;dv&#34;&gt;510&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;510&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb25-17&#34;&gt;&lt;a href=&#34;#cb25-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-18&#34;&gt;&lt;a href=&#34;#cb25-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb25-19&#34;&gt;&lt;a href=&#34;#cb25-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb25-20&#34;&gt;&lt;a href=&#34;#cb25-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb25-21&#34;&gt;&lt;a href=&#34;#cb25-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k; read(n, k);&lt;/span&gt;
&lt;span id=&#34;cb25-22&#34;&gt;&lt;a href=&#34;#cb25-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        map&amp;lt;tuple&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(mp);&lt;/span&gt;
&lt;span id=&#34;cb25-23&#34;&gt;&lt;a href=&#34;#cb25-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) vis[i][j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-24&#34;&gt;&lt;a href=&#34;#cb25-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb25-25&#34;&gt;&lt;a href=&#34;#cb25-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r1, c1, r2, c2; read(r1, c1, r2, c2);&lt;/span&gt;
&lt;span id=&#34;cb25-26&#34;&gt;&lt;a href=&#34;#cb25-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r1 &amp;gt; r2) myswap(r1, r2);&lt;/span&gt;
&lt;span id=&#34;cb25-27&#34;&gt;&lt;a href=&#34;#cb25-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (c1 &amp;gt; c2) myswap(c1, c2);&lt;/span&gt;
&lt;span id=&#34;cb25-28&#34;&gt;&lt;a href=&#34;#cb25-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r1 == r2) mp[mktp(r1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c1, r1, c1)]++, mp[mktp(r1, c1, r1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c1)]++;&lt;/span&gt;
&lt;span id=&#34;cb25-29&#34;&gt;&lt;a href=&#34;#cb25-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (c1 == c2) mp[mktp(r1, c1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r1, c1)]++, mp[mktp(r1, c1, r1, c1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)]++;&lt;/span&gt;
&lt;span id=&#34;cb25-30&#34;&gt;&lt;a href=&#34;#cb25-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb25-31&#34;&gt;&lt;a href=&#34;#cb25-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        priority_queue&amp;lt;node&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb25-32&#34;&gt;&lt;a href=&#34;#cb25-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q.push(node(k &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb25-33&#34;&gt;&lt;a href=&#34;#cb25-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb25-34&#34;&gt;&lt;a href=&#34;#cb25-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; now = q.top(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb25-35&#34;&gt;&lt;a href=&#34;#cb25-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[now.x][now.y]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-36&#34;&gt;&lt;a href=&#34;#cb25-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[now.x][now.y] = vis[k - now.x][k - now.y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-37&#34;&gt;&lt;a href=&#34;#cb25-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!now.x || now.x == k || !now.y || now.y == k) {&lt;/span&gt;
&lt;span id=&#34;cb25-38&#34;&gt;&lt;a href=&#34;#cb25-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                print(n - now.w);&lt;/span&gt;
&lt;span id=&#34;cb25-39&#34;&gt;&lt;a href=&#34;#cb25-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-40&#34;&gt;&lt;a href=&#34;#cb25-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb25-41&#34;&gt;&lt;a href=&#34;#cb25-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(d, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb25-42&#34;&gt;&lt;a href=&#34;#cb25-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tx = now.x + fx[d], ty = now.y + fy[d];&lt;/span&gt;
&lt;span id=&#34;cb25-43&#34;&gt;&lt;a href=&#34;#cb25-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tx &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || tx &amp;gt; k || ty &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || ty &amp;gt; k) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-44&#34;&gt;&lt;a href=&#34;#cb25-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[tx][ty]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-45&#34;&gt;&lt;a href=&#34;#cb25-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q.push(node(tx, ty, now.w + mp[mktp(now.x, now.y, tx, ty)] + mp[mktp(k - now.x, k - now.y, k - tx, k - ty)]));&lt;/span&gt;
&lt;span id=&#34;cb25-46&#34;&gt;&lt;a href=&#34;#cb25-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb25-47&#34;&gt;&lt;a href=&#34;#cb25-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb25-48&#34;&gt;&lt;a href=&#34;#cb25-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb25-49&#34;&gt;&lt;a href=&#34;#cb25-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-50&#34;&gt;&lt;a href=&#34;#cb25-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-121-rated-for-div.-2&#34;&gt;Educational Codeforces Round 121 (Rated for Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/15，A + B + C + D。&lt;/p&gt;
&lt;h3 id=&#34;f---a-random-code-problem&#34;&gt;1626F - A Random Code Problem&lt;/h3&gt;
&lt;p&gt;给定整数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和数组 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，执行下面的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= k; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; idx = rnd.next(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans += a[idx];&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[idx] -= (a[idx] % i);&lt;/span&gt;
&lt;span id=&#34;cb26-6&#34;&gt;&lt;a href=&#34;#cb26-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;求 &lt;code&gt;ans&lt;/code&gt; 的期望。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 满足递推关系 &lt;span class=&#34;math inline&#34;&gt;\(a_i = (xa_{i-1} + y)\bmod M\)&lt;/span&gt;，输出期望乘上 &lt;span class=&#34;math inline&#34;&gt;\(n^k\)&lt;/span&gt; 后对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模的结果。&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^7; 1\le k\le 17\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;乘上 &lt;span class=&#34;math inline&#34;&gt;\(n^k\)&lt;/span&gt; 本质上要我们求的就是每个下标序列 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 产生的贡献之和。&lt;/p&gt;
&lt;p&gt;不妨先不考虑难以处理的 &lt;code&gt;a[idx] -= (a[idx] % i);&lt;/code&gt; 这句，只考虑随机下标产生的贡献，发现即为 &lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{i=1}^k\sum\limits_{j=0}^{n-1}a_jn^{i-1}n^{k-i} = n^{k-1}k\sum a_i\)&lt;/span&gt;，而每个位置似乎又是可以独立考虑的。&lt;/p&gt;
&lt;p&gt;并且，设 &lt;span class=&#34;math inline&#34;&gt;\(L = \operatorname{lcm}(1,2,\cdots, k)\)&lt;/span&gt;，会发现 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 最多就减到 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor a_i/L\rfloor L\)&lt;/span&gt;，不妨设 &lt;span class=&#34;math inline&#34;&gt;\(a_i = x\times L + y\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(xL\)&lt;/span&gt; 是一定会被统计入答案的，所以根据上面的想法，答案总要加上 &lt;span class=&#34;math inline&#34;&gt;\(n^{k-1}kL\sum\lfloor a_i/L\rfloor\)&lt;/span&gt;。接下来就处理 &lt;span class=&#34;math inline&#34;&gt;\(y = a_i\bmod L\)&lt;/span&gt; 的贡献。&lt;/p&gt;
&lt;p&gt;考虑 dp：设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 为选了 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 次，&lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的出现次数，此时两维的大小分别是 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt;，是足够的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i+1,j}\leftarrow f_{i+1, j} + (n-1)f_{i,j}\)&lt;/span&gt;，对应的是这次不选 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i+1, j - j\bmod i}\leftarrow f_{i+1, j - j \bmod i} + f_{i,j}\)&lt;/span&gt;，对应的是选了 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，考虑 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 产生的贡献，不难发现是 &lt;span class=&#34;math inline&#34;&gt;\(n^{k-i}\times f_{i,j}\times j\)&lt;/span&gt;，所以对应累加一下即可。初始条件是 &lt;span class=&#34;math inline&#34;&gt;\(f_{1, j}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的出现次数。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-767-div.-1-and-div.-2&#34;&gt;Codeforces Round #767 (Div. 1 and Div. 2)&lt;/h2&gt;
&lt;p&gt;能补的补完了。&lt;/p&gt;
&lt;h3 id=&#34;c---xor-сетка&#34;&gt;1628C - XOR-сетка&lt;/h3&gt;
&lt;p&gt;一个很明显的转化就是每个格子内的数都要贡献奇数次，然后考虑构造。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, vis[maxn][maxn], a[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fx[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ,&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fy[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ,&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb27-6&#34;&gt;&lt;a href=&#34;#cb27-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-7&#34;&gt;&lt;a href=&#34;#cb27-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb27-8&#34;&gt;&lt;a href=&#34;#cb27-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb27-9&#34;&gt;&lt;a href=&#34;#cb27-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb27-10&#34;&gt;&lt;a href=&#34;#cb27-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb27-11&#34;&gt;&lt;a href=&#34;#cb27-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-12&#34;&gt;&lt;a href=&#34;#cb27-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i][j]), vis[i][j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-13&#34;&gt;&lt;a href=&#34;#cb27-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb27-14&#34;&gt;&lt;a href=&#34;#cb27-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]) {&lt;/span&gt;
&lt;span id=&#34;cb27-15&#34;&gt;&lt;a href=&#34;#cb27-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans ^= a[i][j];&lt;/span&gt;
&lt;span id=&#34;cb27-16&#34;&gt;&lt;a href=&#34;#cb27-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;; ++k) {&lt;/span&gt;
&lt;span id=&#34;cb27-17&#34;&gt;&lt;a href=&#34;#cb27-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tx = i + fx[k], ty = j + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb27-18&#34;&gt;&lt;a href=&#34;#cb27-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tx &amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || ty &amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || tx &amp;gt; n || ty &amp;gt; n) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-19&#34;&gt;&lt;a href=&#34;#cb27-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    vis[tx][ty] ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-20&#34;&gt;&lt;a href=&#34;#cb27-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb27-21&#34;&gt;&lt;a href=&#34;#cb27-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb27-22&#34;&gt;&lt;a href=&#34;#cb27-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb27-23&#34;&gt;&lt;a href=&#34;#cb27-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans);&lt;/span&gt;
&lt;span id=&#34;cb27-24&#34;&gt;&lt;a href=&#34;#cb27-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb27-25&#34;&gt;&lt;a href=&#34;#cb27-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-26&#34;&gt;&lt;a href=&#34;#cb27-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这个构造的方法就是从第二行开始遍历每个点 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt;，如果遇到 &lt;span class=&#34;math inline&#34;&gt;\((i - 1, j)\)&lt;/span&gt; 只被覆盖了偶数次，则我们贪心的直接选上 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt; 让其被覆盖奇数次。可以发现后面的过程中 &lt;span class=&#34;math inline&#34;&gt;\((i - 1, j)\)&lt;/span&gt; 不会再被访问。于是这个构造方法的正确性被成功说明。&lt;/p&gt;
&lt;h3 id=&#34;d1---game-on-sum-easy-version&#34;&gt;1628D1 - Game on Sum (Easy Version)&lt;/h3&gt;
&lt;p&gt;Alice 和 Bob 在玩一个游戏，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 轮，他们轮流对 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 操作，已知 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 初始为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。每个回合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alice 先选择一个实数 &lt;span class=&#34;math inline&#34;&gt;\(t\in[0, k]\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;Bob 选择让 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 变为 &lt;span class=&#34;math inline&#34;&gt;\(x+t\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(x-t\)&lt;/span&gt;，但是至少要有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个回合选择 &lt;span class=&#34;math inline&#34;&gt;\(x + t\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alice 想最大化 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，Bob 想最小化 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。双方绝顶聪明，问最终的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模的结果。&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 2000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 10^9 + 7\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;显然 Bob 会选恰好 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次增加操作。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, m}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 轮游戏中 Bob 选了 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次增加操作后最终的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;假设 Alice 当前选了 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;，则 Bob 要选使得分数最小的一种方案，即 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, m}= \min\{f_{n - 1, m} - t, f_{n - 1, m - 1} + t\}\)&lt;/span&gt;。而 Alice 为了使得 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, m}\)&lt;/span&gt; 最大化，故其会选择一个最优的 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;。这里发现 &lt;span class=&#34;math inline&#34;&gt;\(f_{n - 1, m} - t = f_{n - 1, m - 1} + t\)&lt;/span&gt; 时会最优，故 &lt;span class=&#34;math inline&#34;&gt;\(t = \dfrac{f_{n - 1, m} - f_{n - 1, m - 1}}{2}\)&lt;/span&gt;。所以转移方程如下： &lt;span class=&#34;math display&#34;&gt;\[
f_{n, m} = \frac{f_{n - 1, m} + f_{n - 1, m - 1}}{2}
\]&lt;/span&gt; 边界条件是 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, n} = nk\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_{n, 0} = 0\)&lt;/span&gt;。直接 DP 即可，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d2---game-on-sum-hard-version&#34;&gt;1628D2 - Game on Sum (Hard Version)&lt;/h3&gt;
&lt;p&gt;将上面的条件改为 &lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 10^6\)&lt;/span&gt;，剩余不变。&lt;/p&gt;
&lt;p&gt;上面那个东西给了我们什么启示呢？可以单独考虑每个 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, i}\)&lt;/span&gt; 产生的贡献！这个 &lt;span class=&#34;math inline&#34;&gt;\(ik\)&lt;/span&gt; 一看就是一层层往下面像杨辉三角一样扩散。随便推一下式子就可以得到 &lt;span class=&#34;math display&#34;&gt;\[
f_{n,m} = \sum_{i = 1}^m\frac{ki}{2^{n - i}}\binom{n - i - 1}{m - i}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 解决了。需要特判一下 &lt;span class=&#34;math inline&#34;&gt;\(n = m\)&lt;/span&gt; 的情况，需要直接输出 &lt;span class=&#34;math inline&#34;&gt;\(nk\)&lt;/span&gt;，代码就不放了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-768-div.-1-and-div.-2&#34;&gt;Codeforces Round #768 (Div. 1 and Div. 2)&lt;/h2&gt;
&lt;p&gt;打得好像有点差的离谱。&lt;/p&gt;
&lt;h3 id=&#34;b---range-and-partition&#34;&gt;1630B - Range and Partition&lt;/h3&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 和正整数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，要求找到一个长度最短的区间 &lt;span class=&#34;math inline&#34;&gt;\([x, y]\)&lt;/span&gt; 使得能将 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 恰好分为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 段，使得每一段中 &lt;span class=&#34;math inline&#34;&gt;\(\in[x,y]\)&lt;/span&gt; 的元素数量严格大于 &lt;span class=&#34;math inline&#34;&gt;\(\notin [x,y]\)&lt;/span&gt; 的元素数量。&lt;span class=&#34;math inline&#34;&gt;\(1&amp;lt;k\le n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们先考虑如何判断一个区间 &lt;span class=&#34;math inline&#34;&gt;\([x, y]\)&lt;/span&gt; 是否合法。不妨设 &lt;span class=&#34;math inline&#34;&gt;\(b_i = \begin{cases}1&amp;amp;a_i\in[x,y]\\-1&amp;amp;a_i\notin[x,y\end{cases}\)&lt;/span&gt;，然后求出 &lt;span class=&#34;math inline&#34;&gt;\(S = \sum_{i = 1}^n b_i\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(S \ge k\)&lt;/span&gt; 时合法。为什么呢？因为划分出的每一段内，&lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 的和都至少为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，所以总体的 &lt;span class=&#34;math inline&#34;&gt;\(S\ge k\)&lt;/span&gt; 时就是合法的。&lt;/p&gt;
&lt;p&gt;这个区间我们就可以通过二分或者双指针求出来，然后随便构造一下分段方式就有了。&lt;/p&gt;
&lt;h3 id=&#34;c---paint-the-middle&#34;&gt;1630C - Paint the Middle&lt;/h3&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，一开始 &lt;span class=&#34;math inline&#34;&gt;\(c_i = 0\)&lt;/span&gt;。可以进行如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择 &lt;span class=&#34;math inline&#34;&gt;\(1\le i &amp;lt; j &amp;lt; k\le n\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(c_i = c_j = c_k = 0\land a_i = a_k\)&lt;/span&gt;，然后 &lt;span class=&#34;math inline&#34;&gt;\(c_j:=1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问若干次操作之后最大的 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = 1}^nc_i\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(3\le n\le 2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;该做法来自&lt;a href=&#34;https://codeforces.com/blog/entry/99384?#comment-881614&#34;&gt;评论区&lt;/a&gt;。DP，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为区间 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt; 的答案，显然 &lt;span class=&#34;math inline&#34;&gt;\(f_1 = 0\)&lt;/span&gt;。有如下 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 种转移到 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 的办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(a_j\)&lt;/span&gt; 出现过（&lt;span class=&#34;math inline&#34;&gt;\(j &amp;lt; i\)&lt;/span&gt;），考虑将 &lt;span class=&#34;math inline&#34;&gt;\((j, i)\)&lt;/span&gt; 全部涂色，则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_j + (i - j - 1)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(a_k\)&lt;/span&gt; 出现过（&lt;span class=&#34;math inline&#34;&gt;\(k &amp;lt; j &amp;lt; i\)&lt;/span&gt;），考虑取 &lt;span class=&#34;math inline&#34;&gt;\(f_j\)&lt;/span&gt; 的最优解但是留下 &lt;span class=&#34;math inline&#34;&gt;\(c_k\)&lt;/span&gt; 不涂，然后再涂上 &lt;span class=&#34;math inline&#34;&gt;\([j, i)\)&lt;/span&gt;，同样有 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_j + i - j - 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;直接继承 &lt;span class=&#34;math inline&#34;&gt;\(f_{i - 1}\)&lt;/span&gt;，写规范一点就是 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_{i - 1} + (i - (i - 1) - 1)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是若我们令 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm {first}(a_i)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 第一次出现时的下标，则转移方程就有了： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \max_{\mathrm{first}(a_i)\le j &amp;lt; i}\{f_{j} - j \} + i - 1
\]&lt;/span&gt; 此时这个做法是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，需要优化。改写转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f_i - i = \max_{\mathrm{first}(a_i)\le j &amp;lt; i\lor j = i - 1}\{f_{j} - j \} - 1
\]&lt;/span&gt; 不难发现这可以拿一个维护 &lt;span class=&#34;math inline&#34;&gt;\(f_i - i\)&lt;/span&gt; 的最大值的线段树来优化，于是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。代码太弱智不放了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-769-div.-2&#34;&gt;Codeforces Round #769 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打的很差。&lt;/p&gt;
&lt;h3 id=&#34;d---new-year-concert&#34;&gt;1632D - New Year Concert&lt;/h3&gt;
&lt;p&gt;给定一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的正整数组 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;。对于一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的正整数组 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，定义 &lt;span class=&#34;math inline&#34;&gt;\(f(b_1,b_2,\cdots,b_k)\)&lt;/span&gt; 为使得对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(1\leq l\le r\le k\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{b_l,b_{l+1},\dots,b_r\}\neq r-l+1\)&lt;/span&gt; 的最少操作次数，其中一次操作可以将数组中的一个数改为任意正整数。现在，请求出 &lt;span class=&#34;math inline&#34;&gt;\(f(a_1),f(a_1,a_2),\cdots,f(a_1,a_2,\cdots,a_n)\)&lt;/span&gt; 的值。&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们一个个来处理。设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt; 的答案，若不存在 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{a_l, \cdots, a_i\} = i - l + 1\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_{i - 1}\)&lt;/span&gt;，否则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_{i - 1} + 1\)&lt;/span&gt;，并且需要修改 &lt;span class=&#34;math inline&#34;&gt;\(a_l\)&lt;/span&gt; 为一大质数。&lt;/p&gt;
&lt;p&gt;考虑查找 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt;，根据后缀 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的单调不增性，且不同后缀 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\log)\)&lt;/span&gt; 种，所以可以二分。这里使用 ST 表来查询区间 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn], f[maxn], st[&lt;span class=&#34;dv&#34;&gt;21&lt;/span&gt;][maxn], lg[maxn];&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b ? gcd(b, a % b) : a;}&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-6&#34;&gt;&lt;a href=&#34;#cb28-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb28-7&#34;&gt;&lt;a href=&#34;#cb28-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = lg[r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb28-8&#34;&gt;&lt;a href=&#34;#cb28-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; gcd(st[len][l], st[len][r - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; len) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb28-9&#34;&gt;&lt;a href=&#34;#cb28-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb28-10&#34;&gt;&lt;a href=&#34;#cb28-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-11&#34;&gt;&lt;a href=&#34;#cb28-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb28-12&#34;&gt;&lt;a href=&#34;#cb28-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb28-13&#34;&gt;&lt;a href=&#34;#cb28-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), lg[i] = i &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ? lg[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, st[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = a[i];&lt;/span&gt;
&lt;span id=&#34;cb28-14&#34;&gt;&lt;a href=&#34;#cb28-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, lg[n]) FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j)) st[j][i] = gcd(st[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i], st[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i + (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))]);&lt;/span&gt;
&lt;span id=&#34;cb28-15&#34;&gt;&lt;a href=&#34;#cb28-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb28-16&#34;&gt;&lt;a href=&#34;#cb28-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb28-17&#34;&gt;&lt;a href=&#34;#cb28-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i; j &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; ) {&lt;/span&gt;
&lt;span id=&#34;cb28-18&#34;&gt;&lt;a href=&#34;#cb28-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; g = query(j, i), now = j;&lt;/span&gt;
&lt;span id=&#34;cb28-19&#34;&gt;&lt;a href=&#34;#cb28-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(k, lg[n], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; k) &amp;amp;&amp;amp; query(j - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; k), i) == g)&lt;/span&gt;
&lt;span id=&#34;cb28-20&#34;&gt;&lt;a href=&#34;#cb28-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                j -= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; k);&lt;/span&gt;
&lt;span id=&#34;cb28-21&#34;&gt;&lt;a href=&#34;#cb28-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g &amp;lt;= i - j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; g &amp;gt;= i - now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb28-22&#34;&gt;&lt;a href=&#34;#cb28-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i] = f[i - g] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-23&#34;&gt;&lt;a href=&#34;#cb28-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-24&#34;&gt;&lt;a href=&#34;#cb28-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb28-25&#34;&gt;&lt;a href=&#34;#cb28-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --j;&lt;/span&gt;
&lt;span id=&#34;cb28-26&#34;&gt;&lt;a href=&#34;#cb28-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb28-27&#34;&gt;&lt;a href=&#34;#cb28-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(f[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb28-28&#34;&gt;&lt;a href=&#34;#cb28-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-29&#34;&gt;&lt;a href=&#34;#cb28-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-30&#34;&gt;&lt;a href=&#34;#cb28-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---distance-tree&#34;&gt;1632E - Distance Tree&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的树，每条边权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(d(v)\)&lt;/span&gt; 为节点 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的距离。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 为在任意两点 &lt;span class=&#34;math inline&#34;&gt;\(a, b\)&lt;/span&gt; 间添加一条权为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的边后，&lt;span class=&#34;math inline&#34;&gt;\(\max_{1\le v\le n}\{d(v)\}\)&lt;/span&gt; 的最小值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\forall x\in[1, n]\)&lt;/span&gt;，求出 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;。&lt;del&gt;Easy ver. &lt;span class=&#34;math inline&#34;&gt;\(2\le n,\sum n\le 3000\)&lt;/span&gt;​&lt;/del&gt;。Hard ver. &lt;span class=&#34;math inline&#34;&gt;\(2\le n,\sum n\le 3\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;通过简单观察可以发现加的这条边的一个端点一定是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 号点，可以反证。接下来钦定 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为根。&lt;/p&gt;
&lt;p&gt;之后会发现正着做似乎有点难搞。不妨思考一下如果给定了一个距离 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 然后反推边权 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的范围，首先发现连边一定连深度大于 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的边。&lt;/p&gt;
&lt;p&gt;然后，设这些点构成的点集为 &lt;span class=&#34;math inline&#34;&gt;\(K(y)\)&lt;/span&gt;，则考虑从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 连哪个 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 能够使得最大的距离尽量小。发现连 &lt;span class=&#34;math inline&#34;&gt;\(K(y)\)&lt;/span&gt; 的直径中点是最优的，因为需要满足 &lt;span class=&#34;math inline&#34;&gt;\(x + \operatorname{dis}(v, u)\le y\)&lt;/span&gt;。而 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dis}(v, u)\)&lt;/span&gt; 的最大值在当 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 为直径中点时取到最小，为 &lt;span class=&#34;math inline&#34;&gt;\(\lceil \mathrm{diameter} / 2 \rceil\)&lt;/span&gt;，不妨设其为 &lt;span class=&#34;math inline&#34;&gt;\(f(y)\)&lt;/span&gt;，然后我们可以通过一个 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的树形 dp 来求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(f(y)\)&lt;/span&gt;，然后由于 &lt;span class=&#34;math inline&#34;&gt;\(f(y)\)&lt;/span&gt; 随 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的增大而单调不增，所以可以双指针 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 求出答案。&lt;/p&gt;
&lt;p&gt;DP 的流程如下：对于每个节点，找到两个深度最大的儿子（即长链），设两个链底的深度分别为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\ge b\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(f(b - 1)\)&lt;/span&gt; 就可以用 &lt;span class=&#34;math inline&#34;&gt;\(a + b - 2d_u\)&lt;/span&gt; 来更新了，代码中写的不太一样。然后再对所有的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 来一个后缀最大值就可以了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb29&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb29-1&#34;&gt;&lt;a href=&#34;#cb29-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-2&#34;&gt;&lt;a href=&#34;#cb29-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb29-3&#34;&gt;&lt;a href=&#34;#cb29-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb29-4&#34;&gt;&lt;a href=&#34;#cb29-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-5&#34;&gt;&lt;a href=&#34;#cb29-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d) {&lt;/span&gt;
&lt;span id=&#34;cb29-6&#34;&gt;&lt;a href=&#34;#cb29-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, b = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-7&#34;&gt;&lt;a href=&#34;#cb29-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb29-8&#34;&gt;&lt;a href=&#34;#cb29-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-9&#34;&gt;&lt;a href=&#34;#cb29-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = dfs(v, u, d + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-10&#34;&gt;&lt;a href=&#34;#cb29-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (c &amp;gt; a) b = a, a = c;&lt;/span&gt;
&lt;span id=&#34;cb29-11&#34;&gt;&lt;a href=&#34;#cb29-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; chkmax(b, c);&lt;/span&gt;
&lt;span id=&#34;cb29-12&#34;&gt;&lt;a href=&#34;#cb29-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb29-13&#34;&gt;&lt;a href=&#34;#cb29-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b + d) chkmax(f[b + d - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], (a + b + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb29-14&#34;&gt;&lt;a href=&#34;#cb29-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a;&lt;/span&gt;
&lt;span id=&#34;cb29-15&#34;&gt;&lt;a href=&#34;#cb29-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb29-16&#34;&gt;&lt;a href=&#34;#cb29-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-17&#34;&gt;&lt;a href=&#34;#cb29-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb29-18&#34;&gt;&lt;a href=&#34;#cb29-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb29-19&#34;&gt;&lt;a href=&#34;#cb29-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb29-20&#34;&gt;&lt;a href=&#34;#cb29-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb29-21&#34;&gt;&lt;a href=&#34;#cb29-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]), f[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-22&#34;&gt;&lt;a href=&#34;#cb29-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb29-23&#34;&gt;&lt;a href=&#34;#cb29-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u, v);&lt;/span&gt;
&lt;span id=&#34;cb29-24&#34;&gt;&lt;a href=&#34;#cb29-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb29-25&#34;&gt;&lt;a href=&#34;#cb29-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb29-26&#34;&gt;&lt;a href=&#34;#cb29-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb29-27&#34;&gt;&lt;a href=&#34;#cb29-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) chkmax(f[i], f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb29-28&#34;&gt;&lt;a href=&#34;#cb29-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-29&#34;&gt;&lt;a href=&#34;#cb29-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb29-30&#34;&gt;&lt;a href=&#34;#cb29-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (i + f[ans] &amp;gt; ans) ++ans;&lt;/span&gt;
&lt;span id=&#34;cb29-31&#34;&gt;&lt;a href=&#34;#cb29-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(min(ans, lim), &lt;span class=&#34;st&#34;&gt;&amp;quot; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;[i == n]);&lt;/span&gt;
&lt;span id=&#34;cb29-32&#34;&gt;&lt;a href=&#34;#cb29-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb29-33&#34;&gt;&lt;a href=&#34;#cb29-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb29-34&#34;&gt;&lt;a href=&#34;#cb29-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-35&#34;&gt;&lt;a href=&#34;#cb29-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-122-rated-for-div.-2&#34;&gt;Educational Codeforces Round 122 (Rated for Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/15。&lt;/p&gt;
&lt;h3 id=&#34;e---spanning-tree-queries&#34;&gt;1633E - Spanning Tree Queries&lt;/h3&gt;
&lt;p&gt;VP 时想到正解了，但是没写出来。说几个细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分界点为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{w_i+w_j}{2}\)&lt;/span&gt;，避免小数点出问题，考虑直接 &lt;span class=&#34;math inline&#34;&gt;\(w_i\leftarrow 2w_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;为了保证选的尽可能多减函数防止出锅，Kruskal 给边排序的时候第二关键字是原边权降序。&lt;/li&gt;
&lt;li&gt;最后使用 &lt;code&gt;upper_bound&lt;/code&gt; 查找对应的分界点。&lt;/li&gt;
&lt;li&gt;同时 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt; 作为转折点本身也要加进去，所有分界点要去重。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;f---perfect-matching&#34;&gt;1633F - Perfect Matching&lt;/h3&gt;
&lt;p&gt;题意：交互题，初始根为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，动态添加叶子，问有无完美匹配，不超过 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 次要求构造。&lt;/p&gt;
&lt;p&gt;首先树不变的话，匹配一定是从叶子开始匹配的，然后隔一条选一条。那么维护 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 连接其父亲的边有没有被选，使用树剖 + 线段树维护，搞一个取反 + 区间和即可，最后看下边的数量是不是点数 &lt;span class=&#34;math inline&#34;&gt;\(/2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而这个题动态添加叶子，所以直接做就行了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-global-round-19&#34;&gt;Codeforces Global Round 19&lt;/h2&gt;
&lt;h3 id=&#34;d---yet-another-minimization-problem&#34;&gt;1637D - Yet Another Minimization Problem&lt;/h3&gt;
&lt;p&gt;值域很小，拆分贡献之后发现可以定义 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, s_1}\)&lt;/span&gt;，然后就可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; dp 了。&lt;/p&gt;
&lt;h3 id=&#34;e---best-pair&#34;&gt;1637E - Best Pair&lt;/h3&gt;
&lt;p&gt;首先这题有一个非常关键的性质就是，&lt;strong&gt;不同的 &lt;span class=&#34;math inline&#34;&gt;\(cnt_i\)&lt;/span&gt; 只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 种&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因此我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(cnt_x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(cnt_y\le cnt_x\)&lt;/span&gt;，这样子复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的，从大到小找到第一个不和 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 形成 bad pair 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;（可以用 &lt;code&gt;set&lt;/code&gt; 维护，&lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;），这样的复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;h3 id=&#34;f---towers&#34;&gt;1637F - Towers&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的树，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个点的高度为 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt;。可以在 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点上建任意多个塔，对于每个塔可以指定其能量 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 和其所在点的编号。建立能量为 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 的塔消耗 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 枚金币。&lt;/p&gt;
&lt;p&gt;一个点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 接收到信号当且仅当存在信号塔在点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和点 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;（允许 &lt;span class=&#34;math inline&#34;&gt;\(x = u\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(x = v\)&lt;/span&gt;，但是 &lt;span class=&#34;math inline&#34;&gt;\(u\ne v\)&lt;/span&gt;），满足 &lt;span class=&#34;math inline&#34;&gt;\(\min(e_u, e_v)\ge h_x\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 在链 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 上。&lt;/p&gt;
&lt;p&gt;求一个让所有点接收到信号的最小代价。&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le h_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;比较牛逼的贪心。经过观察可知只有叶子节点放信号塔是最优的，否则一定可以调整到只放叶子节点。&lt;/p&gt;
&lt;p&gt;然后，不妨令 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 值最大的为根，那么我们就可以选择两个叶子 &lt;span class=&#34;math inline&#34;&gt;\(x, y\)&lt;/span&gt; 放上 &lt;span class=&#34;math inline&#34;&gt;\(h_{\max}\)&lt;/span&gt; 的塔，然后 &lt;span class=&#34;math inline&#34;&gt;\(x, y\)&lt;/span&gt; 链上所有的点都会被覆盖掉。于是，剩下的所有点都只需要有某个子树的信号塔大于等于 &lt;span class=&#34;math inline&#34;&gt;\(h_u\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;考虑贪心，令 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树内 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 的最大值，然后对于叶子节点，答案加上 &lt;span class=&#34;math inline&#34;&gt;\(h_u\)&lt;/span&gt;，对于非叶子节点，若其不是根，答案加上 &lt;span class=&#34;math inline&#34;&gt;\(\max(0, h_u - \max_{v\in son(u)} f_v)\)&lt;/span&gt;，若其是根，答案加上 &lt;span class=&#34;math inline&#34;&gt;\(2h_u\)&lt;/span&gt; 减去子树内最大的两个 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 值。&lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;，很优秀。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-771-div.-2&#34;&gt;Codeforces Round #771 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;d---big-brush&#34;&gt;1638D - Big Brush&lt;/h3&gt;
&lt;p&gt;给定一个染了色的网格，要求构造方案从空白染成这样。&lt;/p&gt;
&lt;p&gt;一次可以涂一个 &lt;span class=&#34;math inline&#34;&gt;\(2\times 2\)&lt;/span&gt;，可以覆盖，&lt;span class=&#34;math inline&#34;&gt;\(n,m\le 1000\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑时光倒流，别人涂色我们刮刮乐。我们可以从若干个 &lt;span class=&#34;math inline&#34;&gt;\(2\times 2\)&lt;/span&gt; 为起点来进行操作，没有 &lt;span class=&#34;math inline&#34;&gt;\(2\times 2\)&lt;/span&gt; 就说明无解。然后就 bfs 即可。&lt;/p&gt;
&lt;h3 id=&#34;e---colorful-operations&#34;&gt;1638E - Colorful Operations&lt;/h3&gt;
&lt;p&gt;给定一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列，初始时所有元素的值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; ，颜色为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。你需要实现以下三种操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Color l r c&lt;/code&gt; ：把 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 这段的元素颜色改为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Add c x&lt;/code&gt;：把所有颜色为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 的元素值都加上 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Query i&lt;/code&gt;：输出元素 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n,q\le 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;颜色段均摊傻逼题，技不如人甘拜下风。&lt;/p&gt;
&lt;p&gt;考虑对于修改同种颜色的操作，对其维护一个全局加标记。并用一个线段树维护一下所有的元素的值，输出的时候就输出单点修改 + tag 值。&lt;/p&gt;
&lt;p&gt;然后，修改颜色的操作就硬递归，找到一段相同颜色的段之后加上原来的 tag 再减去新的 tag。由于一次染色操作最多添加一次连续段，所以一次操作均摊复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;总 &lt;span class=&#34;math inline&#34;&gt;\(O((n + q)\log n)\)&lt;/span&gt;，随便维护一下就行了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-772-div.-2&#34;&gt;Codeforces Round #772 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打出了有史以来最高的 perf，A + B + C + D + E。&lt;/p&gt;
&lt;h3 id=&#34;f---closest-pair&#34;&gt;1635F - Closest Pair&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个二元组 &lt;span class=&#34;math inline&#34;&gt;\((x_i, w_i)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|x_i|,w_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 升序。&lt;span class=&#34;math inline&#34;&gt;\(q\le 3\times 10^5\)&lt;/span&gt; 次询问，给出 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\min_{l\le i&amp;lt;j\le r}|x_i - x_j|(w_i + w_j)
\]&lt;/span&gt; 一眼数据结构题，静态询问考虑离线。&lt;/p&gt;
&lt;p&gt;考虑哪些 &lt;span class=&#34;math inline&#34;&gt;\((i,j)\)&lt;/span&gt; 是不优的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若存在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(x_p &amp;lt; x_q\land w_p &amp;gt; w_q\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 作为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 一定比 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 优。&lt;/li&gt;
&lt;li&gt;若存在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(x_p &amp;lt; x_q\land w_p&amp;lt;w_q\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 作为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 一定比 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 优。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是，令 &lt;span class=&#34;math inline&#34;&gt;\(L_i = \max\{j:j&amp;lt;i\land w_j\le w_i\}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(R_i = \min\{j:j&amp;gt;i\land w_j\le w_i\}\)&lt;/span&gt;，答案就只能取形如 &lt;span class=&#34;math inline&#34;&gt;\([i, R_i]\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\([L_i, i]\)&lt;/span&gt; 的区间。这样的区间一共有 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;先用单调栈求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(L_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(R_i\)&lt;/span&gt;，再计算出这 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 个区间 &lt;span class=&#34;math inline&#34;&gt;\([l_i, r_i]\)&lt;/span&gt; 的价值 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;，在每个 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt; 上挂上标记 &lt;span class=&#34;math inline&#34;&gt;\((l_i, c_i)\)&lt;/span&gt;，在每个询问 &lt;span class=&#34;math inline&#34;&gt;\((i, ql, qr)\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(qr\)&lt;/span&gt; 上挂上标记 &lt;span class=&#34;math inline&#34;&gt;\((ql, i)\)&lt;/span&gt;。然后扫描线扫右端点，线段树或者树状数组维护一下 RMQ 和单点修改，这题就做完了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb30&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb30-1&#34;&gt;&lt;a href=&#34;#cb30-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-2&#34;&gt;&lt;a href=&#34;#cb30-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pll = pair&amp;lt;ll, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-3&#34;&gt;&lt;a href=&#34;#cb30-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-4&#34;&gt;&lt;a href=&#34;#cb30-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, L[maxn], R[maxn], stk[maxn], top;&lt;/span&gt;
&lt;span id=&#34;cb30-5&#34;&gt;&lt;a href=&#34;#cb30-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-6&#34;&gt;&lt;a href=&#34;#cb30-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pll a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-7&#34;&gt;&lt;a href=&#34;#cb30-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pll&amp;gt; op[maxn], q[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-8&#34;&gt;&lt;a href=&#34;#cb30-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-9&#34;&gt;&lt;a href=&#34;#cb30-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; myabs(a[i].first - a[j].first) * (a[i].second + a[j].second);}&lt;/span&gt;
&lt;span id=&#34;cb30-10&#34;&gt;&lt;a href=&#34;#cb30-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-11&#34;&gt;&lt;a href=&#34;#cb30-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb30-12&#34;&gt;&lt;a href=&#34;#cb30-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb30-13&#34;&gt;&lt;a href=&#34;#cb30-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb30-14&#34;&gt;&lt;a href=&#34;#cb30-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-15&#34;&gt;&lt;a href=&#34;#cb30-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, ll v) {&lt;/span&gt;
&lt;span id=&#34;cb30-16&#34;&gt;&lt;a href=&#34;#cb30-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) {&lt;/span&gt;
&lt;span id=&#34;cb30-17&#34;&gt;&lt;a href=&#34;#cb30-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        chkmin(t[k], v);&lt;/span&gt;
&lt;span id=&#34;cb30-18&#34;&gt;&lt;a href=&#34;#cb30-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-19&#34;&gt;&lt;a href=&#34;#cb30-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-20&#34;&gt;&lt;a href=&#34;#cb30-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(i, M, L, x, v);&lt;/span&gt;
&lt;span id=&#34;cb30-21&#34;&gt;&lt;a href=&#34;#cb30-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, v);&lt;/span&gt;
&lt;span id=&#34;cb30-22&#34;&gt;&lt;a href=&#34;#cb30-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[k] = min(t[L], t[R]);&lt;/span&gt;
&lt;span id=&#34;cb30-23&#34;&gt;&lt;a href=&#34;#cb30-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-24&#34;&gt;&lt;a href=&#34;#cb30-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb30-25&#34;&gt;&lt;a href=&#34;#cb30-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-26&#34;&gt;&lt;a href=&#34;#cb30-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb30-27&#34;&gt;&lt;a href=&#34;#cb30-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[k];&lt;/span&gt;
&lt;span id=&#34;cb30-28&#34;&gt;&lt;a href=&#34;#cb30-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;fl&#34;&gt;2e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-29&#34;&gt;&lt;a href=&#34;#cb30-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) chkmin(ret, query(i, M, L, x, y));&lt;/span&gt;
&lt;span id=&#34;cb30-30&#34;&gt;&lt;a href=&#34;#cb30-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) chkmin(ret, query(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, y));&lt;/span&gt;
&lt;span id=&#34;cb30-31&#34;&gt;&lt;a href=&#34;#cb30-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb30-32&#34;&gt;&lt;a href=&#34;#cb30-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb30-33&#34;&gt;&lt;a href=&#34;#cb30-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-34&#34;&gt;&lt;a href=&#34;#cb30-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef L&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-35&#34;&gt;&lt;a href=&#34;#cb30-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef R&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-36&#34;&gt;&lt;a href=&#34;#cb30-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef M&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-37&#34;&gt;&lt;a href=&#34;#cb30-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-38&#34;&gt;&lt;a href=&#34;#cb30-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb30-39&#34;&gt;&lt;a href=&#34;#cb30-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb30-40&#34;&gt;&lt;a href=&#34;#cb30-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i].first, a[i].second);&lt;/span&gt;
&lt;span id=&#34;cb30-41&#34;&gt;&lt;a href=&#34;#cb30-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb30-42&#34;&gt;&lt;a href=&#34;#cb30-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r; read(l, r);&lt;/span&gt;
&lt;span id=&#34;cb30-43&#34;&gt;&lt;a href=&#34;#cb30-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[r].push_back({l, i});&lt;/span&gt;
&lt;span id=&#34;cb30-44&#34;&gt;&lt;a href=&#34;#cb30-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-45&#34;&gt;&lt;a href=&#34;#cb30-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb30-46&#34;&gt;&lt;a href=&#34;#cb30-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; a[stk[top]].second &amp;gt; a[i].second) --top;&lt;/span&gt;
&lt;span id=&#34;cb30-47&#34;&gt;&lt;a href=&#34;#cb30-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        L[i] = stk[top], stk[++top] = i;&lt;/span&gt;
&lt;span id=&#34;cb30-48&#34;&gt;&lt;a href=&#34;#cb30-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-49&#34;&gt;&lt;a href=&#34;#cb30-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    top = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-50&#34;&gt;&lt;a href=&#34;#cb30-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb30-51&#34;&gt;&lt;a href=&#34;#cb30-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; a[stk[top]].second &amp;gt; a[i].second) --top;&lt;/span&gt;
&lt;span id=&#34;cb30-52&#34;&gt;&lt;a href=&#34;#cb30-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        R[i] = stk[top], stk[++top] = i;&lt;/span&gt;
&lt;span id=&#34;cb30-53&#34;&gt;&lt;a href=&#34;#cb30-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-54&#34;&gt;&lt;a href=&#34;#cb30-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb30-55&#34;&gt;&lt;a href=&#34;#cb30-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L[i]) op[i].push_back({L[i], calc(L[i], i)});&lt;/span&gt;
&lt;span id=&#34;cb30-56&#34;&gt;&lt;a href=&#34;#cb30-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (R[i]) op[R[i]].push_back({i, calc(i, R[i])});&lt;/span&gt;
&lt;span id=&#34;cb30-57&#34;&gt;&lt;a href=&#34;#cb30-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-58&#34;&gt;&lt;a href=&#34;#cb30-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-59&#34;&gt;&lt;a href=&#34;#cb30-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(t, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; t);&lt;/span&gt;
&lt;span id=&#34;cb30-60&#34;&gt;&lt;a href=&#34;#cb30-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb30-61&#34;&gt;&lt;a href=&#34;#cb30-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : op[i]) modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb30-62&#34;&gt;&lt;a href=&#34;#cb30-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : q[i]) ans[p.second] = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p.first, i);&lt;/span&gt;
&lt;span id=&#34;cb30-63&#34;&gt;&lt;a href=&#34;#cb30-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-64&#34;&gt;&lt;a href=&#34;#cb30-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) print(ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb30-65&#34;&gt;&lt;a href=&#34;#cb30-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-66&#34;&gt;&lt;a href=&#34;#cb30-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-123-rated-for-div.-2&#34;&gt;Educational Codeforces Round 123 (Rated for Div. 2)&lt;/h2&gt;
&lt;p&gt;下小分场。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-773-div.-1&#34;&gt;Codeforces Round #773 (Div. 1)&lt;/h2&gt;
&lt;h3 id=&#34;b---repetitions-decoding&#34;&gt;1641B - Repetitions Decoding&lt;/h3&gt;
&lt;p&gt;其实这题出的很不错来着，但是毒瘤是真的毒瘤。&lt;/p&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 500\)&lt;/span&gt;）的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，可以进行形如 &lt;span class=&#34;math inline&#34;&gt;\((x, c)\)&lt;/span&gt; 的操作：在 &lt;span class=&#34;math inline&#34;&gt;\(a_x\)&lt;/span&gt; 后面插入&lt;strong&gt;两个连续的&lt;/strong&gt;正整数 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(x\in[0, \text{the length of }a]\)&lt;/span&gt;）。构造操作方案使得 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 最后可以拆分为若干个连续的子段，这些子段满足：长度为 &lt;span class=&#34;math inline&#34;&gt;\(2k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为任意正整数，且 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in [1, k]\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(a_i = a_{i + k}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;保证 &lt;span class=&#34;math inline&#34;&gt;\(\sum n^2\le 2.5\times 10^5\)&lt;/span&gt;，操作次数需 &lt;span class=&#34;math inline&#34;&gt;\(\le 2n^2\)&lt;/span&gt;，若无解则报告之。&lt;/p&gt;
&lt;p&gt;首先，注意到每种数字的出现次数必须为偶数次，因为添加数字一定是给某种数字添加两个，若存在出现了奇数次的数字则无论如何都没办法找到与之配对的数，所以无解。&lt;/p&gt;
&lt;p&gt;然后可以注意到，我们可以对一个前缀做翻转操作，具体地，看下面的例子：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;1 2 3 1 3 2
1 2 3 - 1 2 3 3 2 1 - 1 3 2 // 这一步可以通过 3 次操作实现
(1 2 3 | 1 2 3) - 3 2 1 1 3 2 // 即我们构造一个回文串，然后将前面的合并到一段，前缀就成功被翻转了。&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而通过这样，我们就可以将两个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 放在一起，再反转一下：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;(1 2 3 | 1 2 3) - (3 2 1 1 | 3 2 1 1) - 1 1 2 3 - 3 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后两个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 就顺理成章的在一起了，可以放在一段消掉了。&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;(1 2 3 | 1 2 3) - (3 2 1 1 | 3 2 1 1) - (1 | 1) 2 3 3 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来就解决 &lt;code&gt;2 3 3 2&lt;/code&gt; 就行了，思路是一样的。&lt;/p&gt;
&lt;p&gt;通过这样的操作，我们就能在 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的操作次数下，将两个数“两两合并”，解决这道题目。&lt;/p&gt;
&lt;p&gt;输出方案比较毒瘤，大家写的时候需要注意细节。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb34&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb34-1&#34;&gt;&lt;a href=&#34;#cb34-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-2&#34;&gt;&lt;a href=&#34;#cb34-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;505&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-3&#34;&gt;&lt;a href=&#34;#cb34-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn], alreadyLen, now;&lt;/span&gt;
&lt;span id=&#34;cb34-4&#34;&gt;&lt;a href=&#34;#cb34-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pii&amp;gt; op;&lt;/span&gt;
&lt;span id=&#34;cb34-5&#34;&gt;&lt;a href=&#34;#cb34-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb34-6&#34;&gt;&lt;a href=&#34;#cb34-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; vis;&lt;/span&gt;
&lt;span id=&#34;cb34-7&#34;&gt;&lt;a href=&#34;#cb34-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-8&#34;&gt;&lt;a href=&#34;#cb34-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rev(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos) {&lt;/span&gt;
&lt;span id=&#34;cb34-9&#34;&gt;&lt;a href=&#34;#cb34-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pos - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) op.push_back({i - now + alreadyLen + pos - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, a[i]});&lt;/span&gt;
&lt;span id=&#34;cb34-10&#34;&gt;&lt;a href=&#34;#cb34-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.push_back(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (pos - now - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb34-11&#34;&gt;&lt;a href=&#34;#cb34-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    alreadyLen += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (pos - now - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-12&#34;&gt;&lt;a href=&#34;#cb34-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    reverse(a + now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a + pos);&lt;/span&gt;
&lt;span id=&#34;cb34-13&#34;&gt;&lt;a href=&#34;#cb34-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-14&#34;&gt;&lt;a href=&#34;#cb34-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb34-15&#34;&gt;&lt;a href=&#34;#cb34-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-16&#34;&gt;&lt;a href=&#34;#cb34-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb34-17&#34;&gt;&lt;a href=&#34;#cb34-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb34-18&#34;&gt;&lt;a href=&#34;#cb34-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb34-19&#34;&gt;&lt;a href=&#34;#cb34-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb34-20&#34;&gt;&lt;a href=&#34;#cb34-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;decltype&lt;/span&gt;(vis)().swap(vis);&lt;/span&gt;
&lt;span id=&#34;cb34-21&#34;&gt;&lt;a href=&#34;#cb34-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), ++vis[a[i]];&lt;/span&gt;
&lt;span id=&#34;cb34-22&#34;&gt;&lt;a href=&#34;#cb34-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flg = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-23&#34;&gt;&lt;a href=&#34;#cb34-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : vis) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p.second &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) flg = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-24&#34;&gt;&lt;a href=&#34;#cb34-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flg) {&lt;/span&gt;
&lt;span id=&#34;cb34-25&#34;&gt;&lt;a href=&#34;#cb34-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-26&#34;&gt;&lt;a href=&#34;#cb34-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-27&#34;&gt;&lt;a href=&#34;#cb34-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb34-28&#34;&gt;&lt;a href=&#34;#cb34-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;decltype&lt;/span&gt;(op)().swap(op);&lt;/span&gt;
&lt;span id=&#34;cb34-29&#34;&gt;&lt;a href=&#34;#cb34-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;decltype&lt;/span&gt;(ans)().swap(ans);&lt;/span&gt;
&lt;span id=&#34;cb34-30&#34;&gt;&lt;a href=&#34;#cb34-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        alreadyLen = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, now = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-31&#34;&gt;&lt;a href=&#34;#cb34-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-32&#34;&gt;&lt;a href=&#34;#cb34-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (now &amp;lt; n) {&lt;/span&gt;
&lt;span id=&#34;cb34-33&#34;&gt;&lt;a href=&#34;#cb34-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now == n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb34-34&#34;&gt;&lt;a href=&#34;#cb34-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-35&#34;&gt;&lt;a href=&#34;#cb34-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-36&#34;&gt;&lt;a href=&#34;#cb34-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb34-37&#34;&gt;&lt;a href=&#34;#cb34-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-38&#34;&gt;&lt;a href=&#34;#cb34-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, now + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] == a[now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) {&lt;/span&gt;
&lt;span id=&#34;cb34-39&#34;&gt;&lt;a href=&#34;#cb34-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                pos = i;&lt;/span&gt;
&lt;span id=&#34;cb34-40&#34;&gt;&lt;a href=&#34;#cb34-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-41&#34;&gt;&lt;a href=&#34;#cb34-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb34-42&#34;&gt;&lt;a href=&#34;#cb34-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rev(pos), rev(pos + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-43&#34;&gt;&lt;a href=&#34;#cb34-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-44&#34;&gt;&lt;a href=&#34;#cb34-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-45&#34;&gt;&lt;a href=&#34;#cb34-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb34-46&#34;&gt;&lt;a href=&#34;#cb34-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-47&#34;&gt;&lt;a href=&#34;#cb34-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(op.size());&lt;/span&gt;
&lt;span id=&#34;cb34-48&#34;&gt;&lt;a href=&#34;#cb34-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : op) print(p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb34-49&#34;&gt;&lt;a href=&#34;#cb34-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans.size());&lt;/span&gt;
&lt;span id=&#34;cb34-50&#34;&gt;&lt;a href=&#34;#cb34-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : ans) print(x, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-51&#34;&gt;&lt;a href=&#34;#cb34-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-52&#34;&gt;&lt;a href=&#34;#cb34-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb34-53&#34;&gt;&lt;a href=&#34;#cb34-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-54&#34;&gt;&lt;a href=&#34;#cb34-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-781-div.-2&#34;&gt;Codeforces Round #781 (Div. 2)&lt;/h2&gt;
&lt;p&gt;rnm退钱。&lt;/p&gt;
&lt;h3 id=&#34;c---tree-infection&#34;&gt;1665C - Tree Infection&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;读错题就一直想呗，想呗，哈哈。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;直接转化成一个节点的儿子个数的问题。显然从儿子最多的挨个点传染。所以模拟一下这个过程即可。&lt;/p&gt;
&lt;h3 id=&#34;d---gcd-guess&#34;&gt;1665D - GCD Guess&lt;/h3&gt;
&lt;p&gt;猜 &lt;span class=&#34;math inline&#34;&gt;\(1\le x\le 10^9\)&lt;/span&gt;，最多 &lt;span class=&#34;math inline&#34;&gt;\(30\)&lt;/span&gt; 次询问，每次可以查询 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x + a, x + b)\)&lt;/span&gt;。要求 &lt;span class=&#34;math inline&#34;&gt;\(a\ne b,1\le a,b\le 2\times 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(30\)&lt;/span&gt; 次询问非常灵性，相当于明示我们要按位考虑。具体地我们可以思考 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^k\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;首先我们知道 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^0 = 0\)&lt;/span&gt;，考虑如何从 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^k\)&lt;/span&gt; 推得 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^{k+1}\)&lt;/span&gt;。其中间的差值要么是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 要么是 &lt;span class=&#34;math inline&#34;&gt;\(2^k\)&lt;/span&gt;，那么不妨令 &lt;span class=&#34;math inline&#34;&gt;\(x \bmod 2^k = r\)&lt;/span&gt;，则我们询问 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x + 2^k - r, 2^{k + 1})\)&lt;/span&gt;，若结果为 &lt;span class=&#34;math inline&#34;&gt;\(2^{k + 1}\)&lt;/span&gt; 则 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^{k + 1} = r + 2^k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;具体地询问就是问 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x + 2^k - r, x + 2^k + 2^{k+1}-r)\)&lt;/span&gt;，可以发现刚好问 &lt;span class=&#34;math inline&#34;&gt;\(30\)&lt;/span&gt; 次。&lt;/p&gt;
&lt;h3 id=&#34;e---minimizor&#34;&gt;1665E - MinimizOR&lt;/h3&gt;
&lt;p&gt;静态查询区间 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 内 &lt;span class=&#34;math inline&#34;&gt;\(\min_{i\ne j,l\le i,j\le r}\{a_i\lor a_j\}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le a_i&amp;lt; 2^{30}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;牛逼结论题。。结论是 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; 2^k\)&lt;/span&gt; 的数字中的答案只可能从最小的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个数字中产生。于是线段树维护一下区间内最小的 &lt;span class=&#34;math inline&#34;&gt;\(31\)&lt;/span&gt; 个数即可，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;下面用归纳法证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(k = 1\)&lt;/span&gt; 时，所有数都为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，显然成立。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面说明 &lt;span class=&#34;math inline&#34;&gt;\(k\to k + 1\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;若第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位的 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的个数 &lt;span class=&#34;math inline&#34;&gt;\(\le 1\)&lt;/span&gt;，则这一位最后或起来肯定是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，问题变为 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; 2^k\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个数字即可，&lt;span class=&#34;math inline&#34;&gt;\(k + 2\)&lt;/span&gt; 个肯定也可以。&lt;/p&gt;
&lt;p&gt;否则第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位我们贪心地强制其为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，故答案只与第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的数字有关。显然 &lt;span class=&#34;math inline&#34;&gt;\(k + 2\)&lt;/span&gt; 个也能满足需求。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;证毕。&lt;/p&gt;
&lt;h2 id=&#34;educational-codeforces-round-126-rated-for-div.-2&#34;&gt;Educational Codeforces Round 126 (Rated for Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;e---narrow-components&#34;&gt;1661E - Narrow Components&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(3\times n\)&lt;/span&gt; 的 0-1 矩阵，&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问 &lt;span class=&#34;math inline&#34;&gt;\([l_i, r_i]\)&lt;/span&gt; 列内的四连通块个数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 5\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑用线段树维护。在每个区间对应的节点内维护左端点/右端点对应的并查集，然后对应合并即可。&lt;/p&gt;
&lt;p&gt;注意细节，合并的时候要开 12 个节点分别对应左区间/右区间的左右端点。而为了防止有连通块从左边连到右边所以考虑令其并查集编号为 &lt;span class=&#34;math inline&#34;&gt;\(1\sim 6\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb35&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb35-1&#34;&gt;&lt;a href=&#34;#cb35-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node {&lt;/span&gt;
&lt;span id=&#34;cb35-2&#34;&gt;&lt;a href=&#34;#cb35-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], r[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], lc[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], rc[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], sum;&lt;/span&gt;
&lt;span id=&#34;cb35-3&#34;&gt;&lt;a href=&#34;#cb35-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos) {&lt;/span&gt;
&lt;span id=&#34;cb35-4&#34;&gt;&lt;a href=&#34;#cb35-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) lc[i] = rc[i] = a[i][pos] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, sum += lc[i], fa[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb35-5&#34;&gt;&lt;a href=&#34;#cb35-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lc[i] == lc[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;amp;&amp;amp; lc[i]) sum -= merge(i, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-6&#34;&gt;&lt;a href=&#34;#cb35-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) l[i] = r[i] = find(i);&lt;/span&gt;
&lt;span id=&#34;cb35-7&#34;&gt;&lt;a href=&#34;#cb35-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-8&#34;&gt;&lt;a href=&#34;#cb35-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], tmp;&lt;/span&gt;
&lt;span id=&#34;cb35-9&#34;&gt;&lt;a href=&#34;#cb35-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-10&#34;&gt;&lt;a href=&#34;#cb35-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Node merge(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;l, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;r) {&lt;/span&gt;
&lt;span id=&#34;cb35-11&#34;&gt;&lt;a href=&#34;#cb35-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tmp.sum = l.sum + r.sum;&lt;/span&gt;
&lt;span id=&#34;cb35-12&#34;&gt;&lt;a href=&#34;#cb35-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) tmp.lc[i] = l.lc[i], tmp.rc[i] = r.rc[i];&lt;/span&gt;
&lt;span id=&#34;cb35-13&#34;&gt;&lt;a href=&#34;#cb35-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) tmp.l[i] = tmp.r[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-14&#34;&gt;&lt;a href=&#34;#cb35-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-15&#34;&gt;&lt;a href=&#34;#cb35-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m * &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) fa[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb35-16&#34;&gt;&lt;a href=&#34;#cb35-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb35-17&#34;&gt;&lt;a href=&#34;#cb35-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        merge(i, l.l[i]), merge(i + m, l.r[i]);&lt;/span&gt;
&lt;span id=&#34;cb35-18&#34;&gt;&lt;a href=&#34;#cb35-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        merge(i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * m, r.l[i] + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * m), merge(i + &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * m, r.r[i] + m * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-19&#34;&gt;&lt;a href=&#34;#cb35-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-20&#34;&gt;&lt;a href=&#34;#cb35-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l.rc[i] == r.lc[i] &amp;amp;&amp;amp; l.rc[i]) &lt;/span&gt;
&lt;span id=&#34;cb35-21&#34;&gt;&lt;a href=&#34;#cb35-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp.sum -= merge(i + m, i + m * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-22&#34;&gt;&lt;a href=&#34;#cb35-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(b, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; b);&lt;/span&gt;
&lt;span id=&#34;cb35-23&#34;&gt;&lt;a href=&#34;#cb35-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb35-24&#34;&gt;&lt;a href=&#34;#cb35-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b[find(i)]) b[find(i)] = i;&lt;/span&gt;
&lt;span id=&#34;cb35-25&#34;&gt;&lt;a href=&#34;#cb35-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp.l[i] = b[find(i)];&lt;/span&gt;
&lt;span id=&#34;cb35-26&#34;&gt;&lt;a href=&#34;#cb35-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-27&#34;&gt;&lt;a href=&#34;#cb35-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, m * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m * &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb35-28&#34;&gt;&lt;a href=&#34;#cb35-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b[find(i)]) b[find(i)] = i - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * m;&lt;/span&gt;
&lt;span id=&#34;cb35-29&#34;&gt;&lt;a href=&#34;#cb35-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp.r[i - m * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] = b[find(i)];&lt;/span&gt;
&lt;span id=&#34;cb35-30&#34;&gt;&lt;a href=&#34;#cb35-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-31&#34;&gt;&lt;a href=&#34;#cb35-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb35-32&#34;&gt;&lt;a href=&#34;#cb35-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;f---teleporters&#34;&gt;1661F - Teleporters&lt;/h3&gt;
&lt;p&gt;一条直线上有 &lt;span class=&#34;math inline&#34;&gt;\(n+1\)&lt;/span&gt; 个传送机，位于点 &lt;span class=&#34;math inline&#34;&gt;\(0,a_1,a_2,a_3,...,a_n\)&lt;/span&gt;。如果在 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 点和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 点都有传送机，那么可以从 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 点传送到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 点，能量开销为 &lt;span class=&#34;math inline&#34;&gt;\((x-y)^2\)&lt;/span&gt;。现可以在整点安装额外的传送机，要求使得从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 传送到 &lt;span class=&#34;math inline&#34;&gt;\(a_n\)&lt;/span&gt; 的代价 &lt;span class=&#34;math inline&#34;&gt;\(\le m\)&lt;/span&gt;。问最少安装多少额外传送机。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_1&amp;lt;a_2&amp;lt;\cdots&amp;lt;a_n\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_n\le m\le 10^{18}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;根据均值不等式，在最优策略下，我们一定是将传送机尽可能“平均”安排。所以每个 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 分的段可以独立考虑。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(f(x, k)\)&lt;/span&gt; 表示考虑长度为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的一段，放 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个传送机，能达到的最小代价，则我们划分出的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 段的长度肯定要么是 &lt;span class=&#34;math inline&#34;&gt;\(\left\lfloor\dfrac{x}{k + 1}\right\rfloor\)&lt;/span&gt;，要么是 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\dfrac{x}{k + 1}\right\rceil\)&lt;/span&gt;。前者有 &lt;span class=&#34;math inline&#34;&gt;\(k + 1 - x\bmod(k + 1)\)&lt;/span&gt; 段，后者有 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod(k + 1)\)&lt;/span&gt; 段。所以f &lt;span class=&#34;math display&#34;&gt;\[
f(x, k) = (x\bmod(k + 1))\cdot\left\lceil\frac{x}{k + 1}\right\rceil^2 +(k + 1 - x\bmod(k + 1))\cdot\left\lfloor\dfrac{x}{k + 1}\right\rfloor^2
\]&lt;/span&gt; 而如果不考虑整点限制的话，这个 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 是关于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 有凸性的，即每一段每增加一个传送机，代价的减少量是不增的。&lt;/p&gt;
&lt;p&gt;而根据我们的直觉，我们每次都会往能减少最多代价的一段加传送机，所以我们可以二分一个最小的减少量 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，对于每一段，二分求出 &lt;span class=&#34;math inline&#34;&gt;\(f(x, k - 1) - f(x, k)\ge d\)&lt;/span&gt; 的最大的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，并且在这段放 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 个传送机。设这样子的总代价为 &lt;span class=&#34;math inline&#34;&gt;\(g(d)\)&lt;/span&gt;，则我们可以二分出一个刚好 &lt;span class=&#34;math inline&#34;&gt;\(\le m\)&lt;/span&gt; 的最大的 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然而 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 是不一定要全部加进去的，有可能我们可以在 &lt;span class=&#34;math inline&#34;&gt;\(d + 1\)&lt;/span&gt; 的基础上放几个 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 就可以使得总代价 &lt;span class=&#34;math inline&#34;&gt;\(\le m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以先算出 &lt;span class=&#34;math inline&#34;&gt;\(g(d + 1)\)&lt;/span&gt; 然后再放 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\dfrac{g(d + 1) - m}{d}\right\rceil\)&lt;/span&gt; 个传送机就可以了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb36&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb36-1&#34;&gt;&lt;a href=&#34;#cb36-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-2&#34;&gt;&lt;a href=&#34;#cb36-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-3&#34;&gt;&lt;a href=&#34;#cb36-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb36-4&#34;&gt;&lt;a href=&#34;#cb36-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll m;&lt;/span&gt;
&lt;span id=&#34;cb36-5&#34;&gt;&lt;a href=&#34;#cb36-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pll = pair&amp;lt;ll, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-6&#34;&gt;&lt;a href=&#34;#cb36-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-7&#34;&gt;&lt;a href=&#34;#cb36-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll f(ll x, ll k) {&lt;/span&gt;
&lt;span id=&#34;cb36-8&#34;&gt;&lt;a href=&#34;#cb36-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x % (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * ((x + k) / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * ((x + k) / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) + (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - (x % (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))) * (x / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * (x / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb36-9&#34;&gt;&lt;a href=&#34;#cb36-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-10&#34;&gt;&lt;a href=&#34;#cb36-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-11&#34;&gt;&lt;a href=&#34;#cb36-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pll calc(ll x, ll d) {&lt;/span&gt;
&lt;span id=&#34;cb36-12&#34;&gt;&lt;a href=&#34;#cb36-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-13&#34;&gt;&lt;a href=&#34;#cb36-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r) {&lt;/span&gt;
&lt;span id=&#34;cb36-14&#34;&gt;&lt;a href=&#34;#cb36-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-15&#34;&gt;&lt;a href=&#34;#cb36-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f(x, mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - f(x, mid) &amp;gt;= d)&lt;/span&gt;
&lt;span id=&#34;cb36-16&#34;&gt;&lt;a href=&#34;#cb36-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = mid, l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-17&#34;&gt;&lt;a href=&#34;#cb36-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-18&#34;&gt;&lt;a href=&#34;#cb36-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-19&#34;&gt;&lt;a href=&#34;#cb36-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {f(x, ret), ret};&lt;/span&gt;
&lt;span id=&#34;cb36-20&#34;&gt;&lt;a href=&#34;#cb36-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-21&#34;&gt;&lt;a href=&#34;#cb36-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-22&#34;&gt;&lt;a href=&#34;#cb36-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pll check(ll mid) {&lt;/span&gt;
&lt;span id=&#34;cb36-23&#34;&gt;&lt;a href=&#34;#cb36-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pll res;&lt;/span&gt;
&lt;span id=&#34;cb36-24&#34;&gt;&lt;a href=&#34;#cb36-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb36-25&#34;&gt;&lt;a href=&#34;#cb36-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; now = calc(a[i], mid);&lt;/span&gt;
&lt;span id=&#34;cb36-26&#34;&gt;&lt;a href=&#34;#cb36-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        res.first += now.first, res.second += now.second;&lt;/span&gt;
&lt;span id=&#34;cb36-27&#34;&gt;&lt;a href=&#34;#cb36-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-28&#34;&gt;&lt;a href=&#34;#cb36-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb36-29&#34;&gt;&lt;a href=&#34;#cb36-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-30&#34;&gt;&lt;a href=&#34;#cb36-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-31&#34;&gt;&lt;a href=&#34;#cb36-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb36-32&#34;&gt;&lt;a href=&#34;#cb36-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    is &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb36-33&#34;&gt;&lt;a href=&#34;#cb36-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) is &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb36-34&#34;&gt;&lt;a href=&#34;#cb36-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) a[i] -= a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-35&#34;&gt;&lt;a href=&#34;#cb36-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    is &amp;gt;&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb36-36&#34;&gt;&lt;a href=&#34;#cb36-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;, d;&lt;/span&gt;
&lt;span id=&#34;cb36-37&#34;&gt;&lt;a href=&#34;#cb36-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r) {&lt;/span&gt;
&lt;span id=&#34;cb36-38&#34;&gt;&lt;a href=&#34;#cb36-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-39&#34;&gt;&lt;a href=&#34;#cb36-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (check(mid).first &amp;lt;= m) l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d = mid;&lt;/span&gt;
&lt;span id=&#34;cb36-40&#34;&gt;&lt;a href=&#34;#cb36-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-41&#34;&gt;&lt;a href=&#34;#cb36-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-42&#34;&gt;&lt;a href=&#34;#cb36-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; res = check(d + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb36-43&#34;&gt;&lt;a href=&#34;#cb36-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; res.second + (res.first - m + d - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / d;&lt;/span&gt;
&lt;span id=&#34;cb36-44&#34;&gt;&lt;a href=&#34;#cb36-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-45&#34;&gt;&lt;a href=&#34;#cb36-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-796&#34;&gt;Codeforces Round #796&lt;/h2&gt;
&lt;h3 id=&#34;c---sanae-and-giant-robot&#34;&gt;1687C - Sanae and Giant Robot&lt;/h3&gt;
&lt;p&gt;给定数列 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个区间 &lt;span class=&#34;math inline&#34;&gt;\([l_i, r_i]\)&lt;/span&gt;，每次操作的时候可以选择一个区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(\forall l\le i\le r\)&lt;/span&gt; 执行 &lt;span class=&#34;math inline&#34;&gt;\(a_i\leftarrow b_i\)&lt;/span&gt;，当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=l}^r a_i\)&lt;/span&gt; 不变。问能否经过若干次操作将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 转化为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;思考 &lt;span class=&#34;math inline&#34;&gt;\(b_i = 0\)&lt;/span&gt; 的情况。则若我们令 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的前缀和的话，我们每次就可以选择 &lt;span class=&#34;math inline&#34;&gt;\(s_r - s_{l - 1} = 0\)&lt;/span&gt; 的区间 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(s_l,s_{l+1},\cdots,s_{r - 1}\)&lt;/span&gt; 全部赋值为 &lt;span class=&#34;math inline&#34;&gt;\(s_r\)&lt;/span&gt;。而最终的目标是让所有的 &lt;span class=&#34;math inline&#34;&gt;\(s_i = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么我们就每次选择 &lt;span class=&#34;math inline&#34;&gt;\(s_{l-1} = s_r = 0\)&lt;/span&gt; 的区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\([l, r - 1]\)&lt;/span&gt; 内的 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 全部赋值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。可以随便维护一下这个过程（例如使用 &lt;code&gt;set&lt;/code&gt; + bfs）。&lt;/p&gt;
&lt;p&gt;而对于 &lt;span class=&#34;math inline&#34;&gt;\(b_i\ne 0\)&lt;/span&gt; 的情况呢？将 &lt;span class=&#34;math inline&#34;&gt;\(a_i \leftarrow a_i - b_i\)&lt;/span&gt; 之后就能变成和上面一样的问题了。每个点至多被删除一次，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O((n+m)\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb37&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb37-1&#34;&gt;&lt;a href=&#34;#cb37-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-2&#34;&gt;&lt;a href=&#34;#cb37-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;fastio.hpp&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-3&#34;&gt;&lt;a href=&#34;#cb37-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb37-4&#34;&gt;&lt;a href=&#34;#cb37-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-5&#34;&gt;&lt;a href=&#34;#cb37-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb37-6&#34;&gt;&lt;a href=&#34;#cb37-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; YangTY::fastIO::is;&lt;/span&gt;
&lt;span id=&#34;cb37-7&#34;&gt;&lt;a href=&#34;#cb37-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; YangTY::fastIO::os;&lt;/span&gt;
&lt;span id=&#34;cb37-8&#34;&gt;&lt;a href=&#34;#cb37-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-9&#34;&gt;&lt;a href=&#34;#cb37-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-10&#34;&gt;&lt;a href=&#34;#cb37-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, deg[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-11&#34;&gt;&lt;a href=&#34;#cb37-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-12&#34;&gt;&lt;a href=&#34;#cb37-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-13&#34;&gt;&lt;a href=&#34;#cb37-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; e[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-14&#34;&gt;&lt;a href=&#34;#cb37-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-15&#34;&gt;&lt;a href=&#34;#cb37-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb37-16&#34;&gt;&lt;a href=&#34;#cb37-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; is &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb37-17&#34;&gt;&lt;a href=&#34;#cb37-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb37-18&#34;&gt;&lt;a href=&#34;#cb37-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        is &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb37-19&#34;&gt;&lt;a href=&#34;#cb37-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) is &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb37-20&#34;&gt;&lt;a href=&#34;#cb37-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) is &amp;gt;&amp;gt; b[i], a[i] -= b[i], a[i] += a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-21&#34;&gt;&lt;a href=&#34;#cb37-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        set&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; S;&lt;/span&gt;
&lt;span id=&#34;cb37-22&#34;&gt;&lt;a href=&#34;#cb37-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) S.insert(i), vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]);&lt;/span&gt;
&lt;span id=&#34;cb37-23&#34;&gt;&lt;a href=&#34;#cb37-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb37-24&#34;&gt;&lt;a href=&#34;#cb37-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;l = e[i].first, &amp;amp;r = e[i].second;&lt;/span&gt;
&lt;span id=&#34;cb37-25&#34;&gt;&lt;a href=&#34;#cb37-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            is &amp;gt;&amp;gt; l &amp;gt;&amp;gt; r;&lt;/span&gt;
&lt;span id=&#34;cb37-26&#34;&gt;&lt;a href=&#34;#cb37-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].push_back(i), G[r].push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb37-27&#34;&gt;&lt;a href=&#34;#cb37-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            deg[i] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-28&#34;&gt;&lt;a href=&#34;#cb37-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-29&#34;&gt;&lt;a href=&#34;#cb37-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        queue&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb37-30&#34;&gt;&lt;a href=&#34;#cb37-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a[i]) q.push(i), S.erase(i);&lt;/span&gt;
&lt;span id=&#34;cb37-31&#34;&gt;&lt;a href=&#34;#cb37-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb37-32&#34;&gt;&lt;a href=&#34;#cb37-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = q.front(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb37-33&#34;&gt;&lt;a href=&#34;#cb37-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; id : G[x]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!--deg[id]) {&lt;/span&gt;
&lt;span id=&#34;cb37-34&#34;&gt;&lt;a href=&#34;#cb37-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = e[id].first, r = e[id].second;&lt;/span&gt;
&lt;span id=&#34;cb37-35&#34;&gt;&lt;a href=&#34;#cb37-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; lt = S.lower_bound(l), rt = S.upper_bound(r);&lt;/span&gt;
&lt;span id=&#34;cb37-36&#34;&gt;&lt;a href=&#34;#cb37-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = lt; it != rt; ++it) q.push(*it);&lt;/span&gt;
&lt;span id=&#34;cb37-37&#34;&gt;&lt;a href=&#34;#cb37-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                S.erase(lt, rt);&lt;/span&gt;
&lt;span id=&#34;cb37-38&#34;&gt;&lt;a href=&#34;#cb37-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb37-39&#34;&gt;&lt;a href=&#34;#cb37-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-40&#34;&gt;&lt;a href=&#34;#cb37-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        os &amp;lt;&amp;lt; (S.empty() ? &lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-41&#34;&gt;&lt;a href=&#34;#cb37-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-42&#34;&gt;&lt;a href=&#34;#cb37-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-43&#34;&gt;&lt;a href=&#34;#cb37-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---cute-number&#34;&gt;1687D - Cute number&lt;/h3&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 为严格大于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小完全平方数，&lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 为小于等于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最大完全平方数。定义一个正整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是可爱的，当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(x - g(x) &amp;lt; f(x) - x\)&lt;/span&gt;。给定一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，求一个最小的非负整数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall 1\le i\le n\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i + k\)&lt;/span&gt; 为可爱的。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le 2\times 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先大力观察，根据 &lt;span class=&#34;math inline&#34;&gt;\((x^2)&amp;#39; = 2x\)&lt;/span&gt; 得到可爱的数一定在 &lt;span class=&#34;math inline&#34;&gt;\([k^2, k^2 + k]\)&lt;/span&gt; 内，成一段一段的分布，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段可爱的数的长度为 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt;，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段不可爱的数长度为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;。不妨令 &lt;span class=&#34;math inline&#34;&gt;\([k^2, k^2 + k]\)&lt;/span&gt; 为第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 段。&lt;/p&gt;
&lt;p&gt;首先，若 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + k\)&lt;/span&gt; 在第 &lt;span class=&#34;math inline&#34;&gt;\(a_n\)&lt;/span&gt; 段的段头的话，一定是可以的。所以枚举所有 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; a_n\)&lt;/span&gt; 的段判断是否可以就行了。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + k\)&lt;/span&gt; 在第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段，则 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 一共会有 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 个可取的值，而当 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 逐渐变化的时候，某个 &lt;span class=&#34;math inline&#34;&gt;\(a_i + k\)&lt;/span&gt; 可能会从可爱变到不可爱，也有可能从不可爱变得可爱。也即：我们要把所有不可爱的数变得可爱，也不能把任何可爱的数变得不可爱。不难发现这实际上给 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 卡了一个上下界。&lt;/p&gt;
&lt;p&gt;如何计算？初始时令 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + k\)&lt;/span&gt; 为第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段段首，即 &lt;span class=&#34;math inline&#34;&gt;\(k=i^2 - a_1\)&lt;/span&gt;，考虑对于每个不可爱的段，找到里面最小的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，这限制了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的下界；对每个可爱的段找到最大的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，这限制了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的上界。由于每段长度都 &lt;span class=&#34;math inline&#34;&gt;\(\ge i\)&lt;/span&gt;，所以一共只会枚举 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{a_n}{i}\)&lt;/span&gt; 段。所以总时间复杂度调和 &lt;span class=&#34;math inline&#34;&gt;\(a_n\log a_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb38&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb38-1&#34;&gt;&lt;a href=&#34;#cb38-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-2&#34;&gt;&lt;a href=&#34;#cb38-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-3&#34;&gt;&lt;a href=&#34;#cb38-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;4e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;4e6&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-4&#34;&gt;&lt;a href=&#34;#cb38-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn], vis[maxn], pre[maxn], suf[maxn];&lt;/span&gt;
&lt;span id=&#34;cb38-5&#34;&gt;&lt;a href=&#34;#cb38-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-6&#34;&gt;&lt;a href=&#34;#cb38-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb38-7&#34;&gt;&lt;a href=&#34;#cb38-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb38-8&#34;&gt;&lt;a href=&#34;#cb38-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; a[i], vis[a[i] - a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-9&#34;&gt;&lt;a href=&#34;#cb38-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pre[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, suf[N] = N;&lt;/span&gt;
&lt;span id=&#34;cb38-10&#34;&gt;&lt;a href=&#34;#cb38-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, N) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) pre[i] = i; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; pre[i] = pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb38-11&#34;&gt;&lt;a href=&#34;#cb38-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, N - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) suf[i] = i; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; suf[i] = suf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb38-12&#34;&gt;&lt;a href=&#34;#cb38-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a[n]) {&lt;/span&gt;
&lt;span id=&#34;cb38-13&#34;&gt;&lt;a href=&#34;#cb38-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i * (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;lt; a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-14&#34;&gt;&lt;a href=&#34;#cb38-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lb = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, rb = i;&lt;/span&gt;
&lt;span id=&#34;cb38-15&#34;&gt;&lt;a href=&#34;#cb38-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt; i * i) lb = a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - i * i;&lt;/span&gt;
&lt;span id=&#34;cb38-16&#34;&gt;&lt;a href=&#34;#cb38-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = i;&lt;/span&gt;
&lt;span id=&#34;cb38-17&#34;&gt;&lt;a href=&#34;#cb38-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, i, a[n]) {&lt;/span&gt;
&lt;span id=&#34;cb38-18&#34;&gt;&lt;a href=&#34;#cb38-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (pre[r] &amp;gt;= l)&lt;/span&gt;
&lt;span id=&#34;cb38-19&#34;&gt;&lt;a href=&#34;#cb38-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmin(rb, r - pre[r]);&lt;/span&gt;
&lt;span id=&#34;cb38-20&#34;&gt;&lt;a href=&#34;#cb38-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-21&#34;&gt;&lt;a href=&#34;#cb38-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (suf[r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt; l)&lt;/span&gt;
&lt;span id=&#34;cb38-22&#34;&gt;&lt;a href=&#34;#cb38-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(lb, l - suf[r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb38-23&#34;&gt;&lt;a href=&#34;#cb38-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-24&#34;&gt;&lt;a href=&#34;#cb38-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; a[n] - a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-25&#34;&gt;&lt;a href=&#34;#cb38-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb38-26&#34;&gt;&lt;a href=&#34;#cb38-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lb &amp;lt;= rb) {&lt;/span&gt;
&lt;span id=&#34;cb38-27&#34;&gt;&lt;a href=&#34;#cb38-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; i * i + lb - a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb38-28&#34;&gt;&lt;a href=&#34;#cb38-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-29&#34;&gt;&lt;a href=&#34;#cb38-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb38-30&#34;&gt;&lt;a href=&#34;#cb38-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-31&#34;&gt;&lt;a href=&#34;#cb38-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-32&#34;&gt;&lt;a href=&#34;#cb38-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-801-div.-2-and-epic-institute-of-technology-round&#34;&gt;Codeforces Round #801 (Div. 2) and EPIC Institute of Technology Round&lt;/h2&gt;
&lt;h3 id=&#34;d12---tree-queries-hard-version&#34;&gt;1695D1/2 - Tree Queries (Hard Version)&lt;/h3&gt;
&lt;p&gt;原题地址：&lt;a href=&#34;https://atcoder.jp/contests/apc001/tasks/apc001_e&#34;&gt;AtCoder&lt;/a&gt;，&lt;a href=&#34;https://www.luogu.com.cn/problem/AT3912&#34;&gt;洛谷&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;首先对于 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 我们可以特判掉。&lt;/p&gt;
&lt;p&gt;然后是 &lt;span class=&#34;math inline&#34;&gt;\(n\le 2000\)&lt;/span&gt; 的 D1，发现我们可以枚举根然后钦定选择之，之后贪心扫一遍树计算答案。具体地，若遇到了度数 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{deg}(u)\ge 3\)&lt;/span&gt; 的节点（即分叉），则至少要有 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{deg}(u) - 2\)&lt;/span&gt; 个子树内有选择的点（否则无法将所有的子树区分开来）。这个东西可以稍微 dp 一下来做，设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树内有没有选点，则&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb39&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb39-1&#34;&gt;&lt;a href=&#34;#cb39-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-2&#34;&gt;&lt;a href=&#34;#cb39-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-3&#34;&gt;&lt;a href=&#34;#cb39-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb39-4&#34;&gt;&lt;a href=&#34;#cb39-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-5&#34;&gt;&lt;a href=&#34;#cb39-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb39-6&#34;&gt;&lt;a href=&#34;#cb39-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-7&#34;&gt;&lt;a href=&#34;#cb39-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T chkmin(T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a = (b &amp;lt; a ? b : a);}&lt;/span&gt;
&lt;span id=&#34;cb39-8&#34;&gt;&lt;a href=&#34;#cb39-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-9&#34;&gt;&lt;a href=&#34;#cb39-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb39-10&#34;&gt;&lt;a href=&#34;#cb39-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb39-11&#34;&gt;&lt;a href=&#34;#cb39-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-12&#34;&gt;&lt;a href=&#34;#cb39-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb39-13&#34;&gt;&lt;a href=&#34;#cb39-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-14&#34;&gt;&lt;a href=&#34;#cb39-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-15&#34;&gt;&lt;a href=&#34;#cb39-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa) {&lt;/span&gt;
&lt;span id=&#34;cb39-16&#34;&gt;&lt;a href=&#34;#cb39-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb39-17&#34;&gt;&lt;a href=&#34;#cb39-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp += !f[v], f[u] |= f[v];&lt;/span&gt;
&lt;span id=&#34;cb39-18&#34;&gt;&lt;a href=&#34;#cb39-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-19&#34;&gt;&lt;a href=&#34;#cb39-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret += tmp - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-20&#34;&gt;&lt;a href=&#34;#cb39-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb39-21&#34;&gt;&lt;a href=&#34;#cb39-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-22&#34;&gt;&lt;a href=&#34;#cb39-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-23&#34;&gt;&lt;a href=&#34;#cb39-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb39-24&#34;&gt;&lt;a href=&#34;#cb39-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-25&#34;&gt;&lt;a href=&#34;#cb39-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb39-26&#34;&gt;&lt;a href=&#34;#cb39-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb39-27&#34;&gt;&lt;a href=&#34;#cb39-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb39-28&#34;&gt;&lt;a href=&#34;#cb39-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]);&lt;/span&gt;
&lt;span id=&#34;cb39-29&#34;&gt;&lt;a href=&#34;#cb39-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-30&#34;&gt;&lt;a href=&#34;#cb39-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-31&#34;&gt;&lt;a href=&#34;#cb39-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-32&#34;&gt;&lt;a href=&#34;#cb39-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-33&#34;&gt;&lt;a href=&#34;#cb39-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-34&#34;&gt;&lt;a href=&#34;#cb39-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb39-35&#34;&gt;&lt;a href=&#34;#cb39-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb39-36&#34;&gt;&lt;a href=&#34;#cb39-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-37&#34;&gt;&lt;a href=&#34;#cb39-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-38&#34;&gt;&lt;a href=&#34;#cb39-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) chkmin(ans, dfs(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-39&#34;&gt;&lt;a href=&#34;#cb39-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-40&#34;&gt;&lt;a href=&#34;#cb39-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-41&#34;&gt;&lt;a href=&#34;#cb39-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-42&#34;&gt;&lt;a href=&#34;#cb39-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后会发现，我们这样做的本质是，对于一个以 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为根的子树，我们保证了他的外面至少有一个点被选（即至少选了根），以确定 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的位置。而当我们选择一个度数 &lt;span class=&#34;math inline&#34;&gt;\(\ge 3\)&lt;/span&gt; 的点作为根时，我们会发现即使不选根，对于根的每一个子树都可以满足上述性质（子树外面也至少选了一个点），所以随便选一个度数 &lt;span class=&#34;math inline&#34;&gt;\(\ge 3\)&lt;/span&gt; 的根跑一遍这个 dp 就能得到答案（注意这个时候就不选根了）。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb40&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb40-1&#34;&gt;&lt;a href=&#34;#cb40-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-2&#34;&gt;&lt;a href=&#34;#cb40-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb40-3&#34;&gt;&lt;a href=&#34;#cb40-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb40-4&#34;&gt;&lt;a href=&#34;#cb40-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-5&#34;&gt;&lt;a href=&#34;#cb40-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb40-6&#34;&gt;&lt;a href=&#34;#cb40-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-7&#34;&gt;&lt;a href=&#34;#cb40-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, f[maxn], ans;&lt;/span&gt;
&lt;span id=&#34;cb40-8&#34;&gt;&lt;a href=&#34;#cb40-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb40-9&#34;&gt;&lt;a href=&#34;#cb40-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-10&#34;&gt;&lt;a href=&#34;#cb40-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb40-11&#34;&gt;&lt;a href=&#34;#cb40-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-12&#34;&gt;&lt;a href=&#34;#cb40-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa) {&lt;/span&gt;
&lt;span id=&#34;cb40-13&#34;&gt;&lt;a href=&#34;#cb40-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb40-14&#34;&gt;&lt;a href=&#34;#cb40-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp += !f[v], f[u] |= f[v];&lt;/span&gt;
&lt;span id=&#34;cb40-15&#34;&gt;&lt;a href=&#34;#cb40-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-16&#34;&gt;&lt;a href=&#34;#cb40-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans += tmp - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-17&#34;&gt;&lt;a href=&#34;#cb40-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-18&#34;&gt;&lt;a href=&#34;#cb40-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-19&#34;&gt;&lt;a href=&#34;#cb40-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-20&#34;&gt;&lt;a href=&#34;#cb40-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb40-21&#34;&gt;&lt;a href=&#34;#cb40-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-22&#34;&gt;&lt;a href=&#34;#cb40-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb40-23&#34;&gt;&lt;a href=&#34;#cb40-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb40-24&#34;&gt;&lt;a href=&#34;#cb40-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb40-25&#34;&gt;&lt;a href=&#34;#cb40-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]), f[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-26&#34;&gt;&lt;a href=&#34;#cb40-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-27&#34;&gt;&lt;a href=&#34;#cb40-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-28&#34;&gt;&lt;a href=&#34;#cb40-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-29&#34;&gt;&lt;a href=&#34;#cb40-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-30&#34;&gt;&lt;a href=&#34;#cb40-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-31&#34;&gt;&lt;a href=&#34;#cb40-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb40-32&#34;&gt;&lt;a href=&#34;#cb40-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb40-33&#34;&gt;&lt;a href=&#34;#cb40-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-34&#34;&gt;&lt;a href=&#34;#cb40-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-35&#34;&gt;&lt;a href=&#34;#cb40-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G[i].size() &amp;gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-36&#34;&gt;&lt;a href=&#34;#cb40-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rt = i;&lt;/span&gt;
&lt;span id=&#34;cb40-37&#34;&gt;&lt;a href=&#34;#cb40-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-38&#34;&gt;&lt;a href=&#34;#cb40-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-39&#34;&gt;&lt;a href=&#34;#cb40-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-40&#34;&gt;&lt;a href=&#34;#cb40-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!rt) cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-41&#34;&gt;&lt;a href=&#34;#cb40-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; cout &amp;lt;&amp;lt; (dfs(rt, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), ans) &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-42&#34;&gt;&lt;a href=&#34;#cb40-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-43&#34;&gt;&lt;a href=&#34;#cb40-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-44&#34;&gt;&lt;a href=&#34;#cb40-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;p&gt;当然本题还可以从另外一个角度出发，即思考问题的结构。&lt;/p&gt;
&lt;p&gt;首先我们考虑选了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个关键点之后，什么情况下能区分每个点。&lt;/p&gt;
&lt;p&gt;发现若令选出来的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个关键点在树上生成一张“连通子图”，连通子图内部的点是两两可区分的，而则其伸出去的子树中，同一深度的点是不可区分的。所以&lt;strong&gt;连通子图伸出去的部分必须是链&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那么回到原问题，显然我们可以钦定一开始选择所有叶子作为关键点，即将连通子图初始化为整棵树，然后会注意到我们可以删一些原树中从叶子连到内部点的链，同时不破坏上面“伸出去的部分要是链”的性质。&lt;/p&gt;
&lt;p&gt;所以从叶子节点往上搜，搜到度 &lt;span class=&#34;math inline&#34;&gt;\(\ge 3\)&lt;/span&gt; 的节点停下来打标记（意味着这个子树里面可以删掉一条链）。用总叶子数量减去打了标记的点的数量就是答案。注意特判链的情况，下面代码是 APC001E 的，和 CF 的有些许出入。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb41&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb41-1&#34;&gt;&lt;a href=&#34;#cb41-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-2&#34;&gt;&lt;a href=&#34;#cb41-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb41-3&#34;&gt;&lt;a href=&#34;#cb41-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-4&#34;&gt;&lt;a href=&#34;#cb41-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb41-5&#34;&gt;&lt;a href=&#34;#cb41-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-6&#34;&gt;&lt;a href=&#34;#cb41-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, vis[maxn], ans;&lt;/span&gt;
&lt;span id=&#34;cb41-7&#34;&gt;&lt;a href=&#34;#cb41-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb41-8&#34;&gt;&lt;a href=&#34;#cb41-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-9&#34;&gt;&lt;a href=&#34;#cb41-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb41-10&#34;&gt;&lt;a href=&#34;#cb41-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G[u].size() &amp;gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb41-11&#34;&gt;&lt;a href=&#34;#cb41-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb41-12&#34;&gt;&lt;a href=&#34;#cb41-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb41-13&#34;&gt;&lt;a href=&#34;#cb41-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-14&#34;&gt;&lt;a href=&#34;#cb41-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-15&#34;&gt;&lt;a href=&#34;#cb41-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb41-16&#34;&gt;&lt;a href=&#34;#cb41-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb41-17&#34;&gt;&lt;a href=&#34;#cb41-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb41-18&#34;&gt;&lt;a href=&#34;#cb41-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb41-19&#34;&gt;&lt;a href=&#34;#cb41-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb41-20&#34;&gt;&lt;a href=&#34;#cb41-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++u, ++v;&lt;/span&gt;
&lt;span id=&#34;cb41-21&#34;&gt;&lt;a href=&#34;#cb41-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb41-22&#34;&gt;&lt;a href=&#34;#cb41-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-23&#34;&gt;&lt;a href=&#34;#cb41-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G[i].size() == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) vis[dfs(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++ans;&lt;/span&gt;
&lt;span id=&#34;cb41-24&#34;&gt;&lt;a href=&#34;#cb41-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ans -= vis[i];&lt;/span&gt;
&lt;span id=&#34;cb41-25&#34;&gt;&lt;a href=&#34;#cb41-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; (ans ? ans : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb41-26&#34;&gt;&lt;a href=&#34;#cb41-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-27&#34;&gt;&lt;a href=&#34;#cb41-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---ambiguous-dominoes&#34;&gt;1695E - Ambiguous Dominoes&lt;/h3&gt;
&lt;p&gt;题意：有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个多米诺骨牌，每张骨牌上有两个数字，要求构造两个将这 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个骨牌不重叠放入 &lt;span class=&#34;math inline&#34;&gt;\(m\times k = 2n\)&lt;/span&gt; 的棋盘 &lt;span class=&#34;math inline&#34;&gt;\(a_{m\times k}\)&lt;/span&gt; 中的方案，满足对应位置上的数字一样，且要求两种方案中骨牌的位置全部不一样，或报告无解。&lt;span class=&#34;math inline&#34;&gt;\(n\le 3\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有点流氓了哈，牛逼构造。&lt;/p&gt;
&lt;p&gt;对于每张多米诺骨牌 &lt;span class=&#34;math inline&#34;&gt;\((x_i, y_i)\)&lt;/span&gt;，连一条无向边 &lt;span class=&#34;math inline&#34;&gt;\(x\to y\)&lt;/span&gt;。然后会发现，若一个连通分量里面恰好只有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 条边，说明这条边代表的多米诺骨牌只有一种摆法，因此无解。&lt;/p&gt;
&lt;p&gt;否则总能构造出一个 &lt;span class=&#34;math inline&#34;&gt;\(2\times k\)&lt;/span&gt; 的棋盘（&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为连通分量内边数），见下。&lt;/p&gt;
&lt;p&gt;我们随便对这张图进行欧拉遍历（就是 dfs 遍历没有遍历的边，然后将经过的边存下来），然后会发现每条边都恰好在这个欧拉序中出现两次（考虑欧拉序的性质），并且&lt;strong&gt;两次出现的位置的奇偶性不一样&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如何证明？考虑边 &lt;span class=&#34;math inline&#34;&gt;\(e=u\to v\)&lt;/span&gt;，若我们的 dfs 直接返回，则欧拉序列中会形成 &lt;span class=&#34;math inline&#34;&gt;\(e,e\)&lt;/span&gt;，两次出现位置的奇偶性显然不同。如果还要继续遍历，由于我们之后遍历的边一定经历了回溯过程，所以两个 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 中间夹着偶数条边，&lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 出现位置的奇偶性仍然不同。&lt;/p&gt;
&lt;p&gt;如果考虑点的遍历序，则我们得到一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(2k + 1\)&lt;/span&gt; 的首尾相接的序列（还是考虑欧拉序的性质），然后将最后一个元素去掉并将其依次顺时针放入 &lt;span class=&#34;math inline&#34;&gt;\(2\times k\)&lt;/span&gt; 的棋盘中，现在骨牌们对应的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 条边就形成了长 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 的环。因为每张骨牌&lt;strong&gt;出现位置的奇偶性不一样&lt;/strong&gt;，所以下面的两种构造总会是合法的（图源官方题解）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://espresso.codeforces.com/8d975bc11693b0864bbc0b6e19423e4954b1b282.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;于是对于一个连通块我们就搞定了。对于多个连通块的情况，把得到的 &lt;span class=&#34;math inline&#34;&gt;\(2\times k\)&lt;/span&gt; 棋盘们拼一起即可，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://espresso.codeforces.com/211398dfdf9487ee70a6b189aa834b35c0dd601f.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（可能有上面的图更好理解些）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb42&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb42-1&#34;&gt;&lt;a href=&#34;#cb42-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-2&#34;&gt;&lt;a href=&#34;#cb42-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-3&#34;&gt;&lt;a href=&#34;#cb42-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb42-4&#34;&gt;&lt;a href=&#34;#cb42-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb42-5&#34;&gt;&lt;a href=&#34;#cb42-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-6&#34;&gt;&lt;a href=&#34;#cb42-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb42-7&#34;&gt;&lt;a href=&#34;#cb42-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-8&#34;&gt;&lt;a href=&#34;#cb42-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], cnte = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-9&#34;&gt;&lt;a href=&#34;#cb42-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, vis[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], vise[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb42-10&#34;&gt;&lt;a href=&#34;#cb42-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-11&#34;&gt;&lt;a href=&#34;#cb42-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb42-12&#34;&gt;&lt;a href=&#34;#cb42-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb42-13&#34;&gt;&lt;a href=&#34;#cb42-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb42-14&#34;&gt;&lt;a href=&#34;#cb42-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb42-15&#34;&gt;&lt;a href=&#34;#cb42-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-16&#34;&gt;&lt;a href=&#34;#cb42-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-17&#34;&gt;&lt;a href=&#34;#cb42-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-18&#34;&gt;&lt;a href=&#34;#cb42-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; path;&lt;/span&gt;
&lt;span id=&#34;cb42-19&#34;&gt;&lt;a href=&#34;#cb42-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-20&#34;&gt;&lt;a href=&#34;#cb42-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre) {&lt;/span&gt;
&lt;span id=&#34;cb42-21&#34;&gt;&lt;a href=&#34;#cb42-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    path.push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb42-22&#34;&gt;&lt;a href=&#34;#cb42-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[u]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-23&#34;&gt;&lt;a href=&#34;#cb42-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-24&#34;&gt;&lt;a href=&#34;#cb42-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vise[i]) {&lt;/span&gt;
&lt;span id=&#34;cb42-25&#34;&gt;&lt;a href=&#34;#cb42-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vise[i] = vise[i ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-26&#34;&gt;&lt;a href=&#34;#cb42-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(to[i], i);&lt;/span&gt;
&lt;span id=&#34;cb42-27&#34;&gt;&lt;a href=&#34;#cb42-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        path.push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb42-28&#34;&gt;&lt;a href=&#34;#cb42-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-29&#34;&gt;&lt;a href=&#34;#cb42-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-30&#34;&gt;&lt;a href=&#34;#cb42-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-31&#34;&gt;&lt;a href=&#34;#cb42-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-32&#34;&gt;&lt;a href=&#34;#cb42-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn];&lt;/span&gt;
&lt;span id=&#34;cb42-33&#34;&gt;&lt;a href=&#34;#cb42-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; sol1[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn], sol2[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn];&lt;/span&gt;
&lt;span id=&#34;cb42-34&#34;&gt;&lt;a href=&#34;#cb42-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-35&#34;&gt;&lt;a href=&#34;#cb42-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb42-36&#34;&gt;&lt;a href=&#34;#cb42-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-37&#34;&gt;&lt;a href=&#34;#cb42-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb42-38&#34;&gt;&lt;a href=&#34;#cb42-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb42-39&#34;&gt;&lt;a href=&#34;#cb42-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y; cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y;&lt;/span&gt;
&lt;span id=&#34;cb42-40&#34;&gt;&lt;a href=&#34;#cb42-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(x, y), add(y, x);&lt;/span&gt;
&lt;span id=&#34;cb42-41&#34;&gt;&lt;a href=&#34;#cb42-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-42&#34;&gt;&lt;a href=&#34;#cb42-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-43&#34;&gt;&lt;a href=&#34;#cb42-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb42-44&#34;&gt;&lt;a href=&#34;#cb42-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(path);&lt;/span&gt;
&lt;span id=&#34;cb42-45&#34;&gt;&lt;a href=&#34;#cb42-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-46&#34;&gt;&lt;a href=&#34;#cb42-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (path.size() == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;-1&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-47&#34;&gt;&lt;a href=&#34;#cb42-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (path.size() &amp;lt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-48&#34;&gt;&lt;a href=&#34;#cb42-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        path.pop_back();&lt;/span&gt;
&lt;span id=&#34;cb42-49&#34;&gt;&lt;a href=&#34;#cb42-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = path.size() &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-50&#34;&gt;&lt;a href=&#34;#cb42-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = path.begin();&lt;/span&gt;
&lt;span id=&#34;cb42-51&#34;&gt;&lt;a href=&#34;#cb42-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) ans[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i + col] = *it++;&lt;/span&gt;
&lt;span id=&#34;cb42-52&#34;&gt;&lt;a href=&#34;#cb42-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i + col] = *it++;&lt;/span&gt;
&lt;span id=&#34;cb42-53&#34;&gt;&lt;a href=&#34;#cb42-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= k; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) sol1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i] = sol1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;R&amp;#39;&lt;/span&gt;, sol1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = sol1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;L&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-54&#34;&gt;&lt;a href=&#34;#cb42-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;; i &amp;lt;= k; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i] = sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;R&amp;#39;&lt;/span&gt;, sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;L&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-55&#34;&gt;&lt;a href=&#34;#cb42-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sol1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;, sol1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-56&#34;&gt;&lt;a href=&#34;#cb42-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;, sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-57&#34;&gt;&lt;a href=&#34;#cb42-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;, sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-58&#34;&gt;&lt;a href=&#34;#cb42-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        col += k;&lt;/span&gt;
&lt;span id=&#34;cb42-59&#34;&gt;&lt;a href=&#34;#cb42-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-60&#34;&gt;&lt;a href=&#34;#cb42-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; col &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-61&#34;&gt;&lt;a href=&#34;#cb42-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb42-62&#34;&gt;&lt;a href=&#34;#cb42-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, col) cout &amp;lt;&amp;lt; ans[i][j] &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-63&#34;&gt;&lt;a href=&#34;#cb42-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-64&#34;&gt;&lt;a href=&#34;#cb42-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-65&#34;&gt;&lt;a href=&#34;#cb42-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb42-66&#34;&gt;&lt;a href=&#34;#cb42-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, col) cout &amp;lt;&amp;lt; sol1[i][j];&lt;/span&gt;
&lt;span id=&#34;cb42-67&#34;&gt;&lt;a href=&#34;#cb42-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-68&#34;&gt;&lt;a href=&#34;#cb42-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-69&#34;&gt;&lt;a href=&#34;#cb42-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb42-70&#34;&gt;&lt;a href=&#34;#cb42-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, col) cout &amp;lt;&amp;lt; sol2[i][j];&lt;/span&gt;
&lt;span id=&#34;cb42-71&#34;&gt;&lt;a href=&#34;#cb42-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-72&#34;&gt;&lt;a href=&#34;#cb42-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-73&#34;&gt;&lt;a href=&#34;#cb42-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-74&#34;&gt;&lt;a href=&#34;#cb42-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-802-div.-2&#34;&gt;Codeforces Round #802 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;e---serega-the-pirate&#34;&gt;1700E - Serega the Pirate&lt;/h3&gt;
&lt;p&gt;首先 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 容易判，下面考虑如何判断 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 以及对方案计数。&lt;/p&gt;
&lt;p&gt;容易发现整个矩阵可解等价于对于每个 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt;1\)&lt;/span&gt; 的格子都存在权值小于他的格子与其四联通，充分性可使用归纳证明。&lt;/p&gt;
&lt;p&gt;那么我们现在就将那些四周不存在比他小且 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; 1\)&lt;/span&gt; 的格子为坏的。&lt;/p&gt;
&lt;p&gt;一次交换我们最多可以改变 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个格子的状态（两个本身，以及他们四周），所以坏点多于 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个答案必然是 No。&lt;/p&gt;
&lt;p&gt;并且，一次交换的时候，我们交换的其中一个点必然是某个坏点或其旁边的四个格子，一共 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 个格子，考虑枚举之。&lt;/p&gt;
&lt;p&gt;然后 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt; 枚举另一个点，交换的时候我们只需判断&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有的坏点是否被都覆盖到了（最多 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个）；&lt;/li&gt;
&lt;li&gt;交换之后影响到的格子是否合法（最多 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;，带一个 &lt;span class=&#34;math inline&#34;&gt;\(20\times 5\)&lt;/span&gt; 的常数。为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的情况跑的时候顺便就可以计数，如果跑不出来那么就是 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;实际实现需要注意常数问题，以及&lt;strong&gt;跑点对的时候要去重&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb43&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb43-1&#34;&gt;&lt;a href=&#34;#cb43-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-2&#34;&gt;&lt;a href=&#34;#cb43-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-3&#34;&gt;&lt;a href=&#34;#cb43-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb43-4&#34;&gt;&lt;a href=&#34;#cb43-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define szof&lt;/span&gt;(a)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;((&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a).size())&lt;/span&gt;
&lt;span id=&#34;cb43-5&#34;&gt;&lt;a href=&#34;#cb43-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-6&#34;&gt;&lt;a href=&#34;#cb43-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb43-7&#34;&gt;&lt;a href=&#34;#cb43-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-8&#34;&gt;&lt;a href=&#34;#cb43-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, ans;&lt;/span&gt;
&lt;span id=&#34;cb43-9&#34;&gt;&lt;a href=&#34;#cb43-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; &amp;gt; a, vis, val;&lt;/span&gt;
&lt;span id=&#34;cb43-10&#34;&gt;&lt;a href=&#34;#cb43-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pii&amp;gt; bad;&lt;/span&gt;
&lt;span id=&#34;cb43-11&#34;&gt;&lt;a href=&#34;#cb43-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fx[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb43-12&#34;&gt;&lt;a href=&#34;#cb43-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fy[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb43-13&#34;&gt;&lt;a href=&#34;#cb43-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-14&#34;&gt;&lt;a href=&#34;#cb43-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; bound(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-15&#34;&gt;&lt;a href=&#34;#cb43-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x &amp;lt;= n &amp;amp;&amp;amp; y &amp;lt;= m &amp;amp;&amp;amp; x &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; y &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-16&#34;&gt;&lt;a href=&#34;#cb43-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-17&#34;&gt;&lt;a href=&#34;#cb43-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-18&#34;&gt;&lt;a href=&#34;#cb43-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-19&#34;&gt;&lt;a href=&#34;#cb43-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a[x][y] == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ||&lt;/span&gt;
&lt;span id=&#34;cb43-20&#34;&gt;&lt;a href=&#34;#cb43-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= n &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][y]) ||&lt;/span&gt;
&lt;span id=&#34;cb43-21&#34;&gt;&lt;a href=&#34;#cb43-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][y]) ||&lt;/span&gt;
&lt;span id=&#34;cb43-22&#34;&gt;&lt;a href=&#34;#cb43-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= m &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x][y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ||&lt;/span&gt;
&lt;span id=&#34;cb43-23&#34;&gt;&lt;a href=&#34;#cb43-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x][y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb43-24&#34;&gt;&lt;a href=&#34;#cb43-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-25&#34;&gt;&lt;a href=&#34;#cb43-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-26&#34;&gt;&lt;a href=&#34;#cb43-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x1, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y1, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x2, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y2) {&lt;/span&gt;
&lt;span id=&#34;cb43-27&#34;&gt;&lt;a href=&#34;#cb43-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(a[x1][y1], a[x2][y2]);&lt;/span&gt;
&lt;span id=&#34;cb43-28&#34;&gt;&lt;a href=&#34;#cb43-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-29&#34;&gt;&lt;a href=&#34;#cb43-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-30&#34;&gt;&lt;a href=&#34;#cb43-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = x1 + fx[k], y = y1 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-31&#34;&gt;&lt;a href=&#34;#cb43-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!bound(x, y) || vis[x][y]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-32&#34;&gt;&lt;a href=&#34;#cb43-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[x][y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt += val[x][y] - (!check(x, y));&lt;/span&gt;
&lt;span id=&#34;cb43-33&#34;&gt;&lt;a href=&#34;#cb43-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-34&#34;&gt;&lt;a href=&#34;#cb43-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-35&#34;&gt;&lt;a href=&#34;#cb43-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = x2 + fx[k], y = y2 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-36&#34;&gt;&lt;a href=&#34;#cb43-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!bound(x, y) || vis[x][y]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-37&#34;&gt;&lt;a href=&#34;#cb43-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[x][y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt += val[x][y] - (!check(x, y));&lt;/span&gt;
&lt;span id=&#34;cb43-38&#34;&gt;&lt;a href=&#34;#cb43-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-39&#34;&gt;&lt;a href=&#34;#cb43-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-40&#34;&gt;&lt;a href=&#34;#cb43-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = x1 + fx[k], y = y1 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-41&#34;&gt;&lt;a href=&#34;#cb43-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bound(x, y)) vis[x][y] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-42&#34;&gt;&lt;a href=&#34;#cb43-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x2 + fx[k], y = y2 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-43&#34;&gt;&lt;a href=&#34;#cb43-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bound(x, y)) vis[x][y] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-44&#34;&gt;&lt;a href=&#34;#cb43-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-45&#34;&gt;&lt;a href=&#34;#cb43-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(a[x1][y1], a[x2][y2]);&lt;/span&gt;
&lt;span id=&#34;cb43-46&#34;&gt;&lt;a href=&#34;#cb43-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cnt == bad.size();&lt;/span&gt;
&lt;span id=&#34;cb43-47&#34;&gt;&lt;a href=&#34;#cb43-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-48&#34;&gt;&lt;a href=&#34;#cb43-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-49&#34;&gt;&lt;a href=&#34;#cb43-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;unordered_set&amp;lt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&amp;gt; S;&lt;/span&gt;
&lt;span id=&#34;cb43-50&#34;&gt;&lt;a href=&#34;#cb43-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-51&#34;&gt;&lt;a href=&#34;#cb43-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb43-52&#34;&gt;&lt;a href=&#34;#cb43-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-53&#34;&gt;&lt;a href=&#34;#cb43-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb43-54&#34;&gt;&lt;a href=&#34;#cb43-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a.resize(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), vis.resize(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), val.resize(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-55&#34;&gt;&lt;a href=&#34;#cb43-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb43-56&#34;&gt;&lt;a href=&#34;#cb43-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i].resize(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), vis[i].resize(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), val[i].resize(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-57&#34;&gt;&lt;a href=&#34;#cb43-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) cin &amp;gt;&amp;gt; a[i][j];&lt;/span&gt;
&lt;span id=&#34;cb43-58&#34;&gt;&lt;a href=&#34;#cb43-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-59&#34;&gt;&lt;a href=&#34;#cb43-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(x, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!check(x, y)) bad.push_back({x, y}), val[x][y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-60&#34;&gt;&lt;a href=&#34;#cb43-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bad.size() &amp;gt; &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-61&#34;&gt;&lt;a href=&#34;#cb43-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bad.empty()) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-62&#34;&gt;&lt;a href=&#34;#cb43-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-63&#34;&gt;&lt;a href=&#34;#cb43-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = bad[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;].first + fx[k], y = bad[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;].second + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-64&#34;&gt;&lt;a href=&#34;#cb43-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!bound(x, y)) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-65&#34;&gt;&lt;a href=&#34;#cb43-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb43-66&#34;&gt;&lt;a href=&#34;#cb43-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; hsh1 = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + y) * (n * m)) + ((i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + j),&lt;/span&gt;
&lt;span id=&#34;cb43-67&#34;&gt;&lt;a href=&#34;#cb43-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    hsh2 = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + j) * (n * m)) + ((x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + y);&lt;/span&gt;
&lt;span id=&#34;cb43-68&#34;&gt;&lt;a href=&#34;#cb43-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!S.count(hsh1) &amp;amp;&amp;amp; !S.count(hsh2)) ans += check(x, y, i, j), S.insert(hsh1), S.insert(hsh2);&lt;/span&gt;
&lt;span id=&#34;cb43-69&#34;&gt;&lt;a href=&#34;#cb43-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb43-70&#34;&gt;&lt;a href=&#34;#cb43-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-71&#34;&gt;&lt;a href=&#34;#cb43-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ans) puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-72&#34;&gt;&lt;a href=&#34;#cb43-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;1 &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb43-73&#34;&gt;&lt;a href=&#34;#cb43-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-74&#34;&gt;&lt;a href=&#34;#cb43-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-807-div-2.&#34;&gt;Codeforces Round #807 (Div 2.)&lt;/h2&gt;
&lt;h3 id=&#34;f---mark-and-the-online-exam&#34;&gt;1705F - Mark and the Online Exam&lt;/h3&gt;
&lt;p&gt;题意：猜一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\le 1000\)&lt;/span&gt; 的 0-1 序列，最多猜 &lt;span class=&#34;math inline&#34;&gt;\(675\)&lt;/span&gt; 次，交互库会返回猜对的位置数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/T183641&#34;&gt;原题&lt;/a&gt;，&lt;a href=&#34;https://www.luogu.com.cn/problem/P7848&#34;&gt;原题&lt;/a&gt;，&lt;a href=&#34;https://www.luogu.com.cn/blog/1973224568qq/kao-shi-2021-coe-iii-d#&#34;&gt;题解&lt;/a&gt;，其对于 &lt;span class=&#34;math inline&#34;&gt;\(n=5000\)&lt;/span&gt; 的限制为 &lt;span class=&#34;math inline&#34;&gt;\(q\le 1026\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(n / \log n\)&lt;/span&gt; 级别。&lt;/p&gt;
&lt;p&gt;此处浅翻译一下官方题解的 &lt;span class=&#34;math inline&#34;&gt;\(q \approx 2/3n\)&lt;/span&gt; 的做法。&lt;/p&gt;
&lt;p&gt;首先预处理询问 &lt;code&gt;TTT...TTT&lt;/code&gt; 和 &lt;code&gt;TFTFTF...TF&lt;/code&gt;，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(i= 1,2,\cdots, \lfloor n /3\rfloor\)&lt;/span&gt;，我们可以轻松计算 &lt;span class=&#34;math inline&#34;&gt;\(2i - 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(2i\)&lt;/span&gt; 的答案，具体地我们将其设为 &lt;code&gt;F&lt;/code&gt;，其他都是 &lt;code&gt;T&lt;/code&gt;，然后算得的答案和全 &lt;code&gt;T&lt;/code&gt; 的比较：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(+2\)&lt;/span&gt;，则两个都是 &lt;code&gt;F&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;，则两个都是 &lt;code&gt;T&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则要么 &lt;code&gt;FT&lt;/code&gt; 要么 &lt;code&gt;TR&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于另外一种情况，我们可以用一次额外的询问来判断，即将其与 &lt;code&gt;TFTFTF...&lt;/code&gt; 的比较： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm{TFTF}...\mathrm{TF}...\mathrm{T}...\mathrm{TF}\\
\mathrm{TFTF}...\mathrm{\color{red}FT}...\mathrm{\color{red}F}...\mathrm{TF}\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;答案为 &lt;code&gt;TFT&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(-3\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;答案为 &lt;code&gt;TFF&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;答案为 &lt;code&gt;FTT&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(+1\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;答案为 &lt;code&gt;FTF&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(+3\)&lt;/span&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是我们往右边多询问一位就可以得到答案了。解决 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个位置需要两个问题，所以 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 的级别大概是 &lt;span class=&#34;math inline&#34;&gt;\(2/3q\)&lt;/span&gt;，足以通过本题。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb44&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb44-1&#34;&gt;&lt;a href=&#34;#cb44-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-2&#34;&gt;&lt;a href=&#34;#cb44-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb44-3&#34;&gt;&lt;a href=&#34;#cb44-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-4&#34;&gt;&lt;a href=&#34;#cb44-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb44-5&#34;&gt;&lt;a href=&#34;#cb44-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-6&#34;&gt;&lt;a href=&#34;#cb44-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(string s) {&lt;/span&gt;
&lt;span id=&#34;cb44-7&#34;&gt;&lt;a href=&#34;#cb44-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb44-8&#34;&gt;&lt;a href=&#34;#cb44-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout.flush();&lt;/span&gt;
&lt;span id=&#34;cb44-9&#34;&gt;&lt;a href=&#34;#cb44-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb44-10&#34;&gt;&lt;a href=&#34;#cb44-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == n) puts(n &amp;gt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt; ? &lt;span class=&#34;st&#34;&gt;&amp;quot;sb&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;), exit(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb44-11&#34;&gt;&lt;a href=&#34;#cb44-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb44-12&#34;&gt;&lt;a href=&#34;#cb44-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb44-13&#34;&gt;&lt;a href=&#34;#cb44-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-14&#34;&gt;&lt;a href=&#34;#cb44-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb44-15&#34;&gt;&lt;a href=&#34;#cb44-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb44-16&#34;&gt;&lt;a href=&#34;#cb44-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    string allT(n, &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;), ans(n, &lt;span class=&#34;ch&#34;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb44-17&#34;&gt;&lt;a href=&#34;#cb44-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cntT = query(allT);&lt;/span&gt;
&lt;span id=&#34;cb44-18&#34;&gt;&lt;a href=&#34;#cb44-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-19&#34;&gt;&lt;a href=&#34;#cb44-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    string allTF(n, &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb44-20&#34;&gt;&lt;a href=&#34;#cb44-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt; n; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) allTF[i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-21&#34;&gt;&lt;a href=&#34;#cb44-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cntTF = query(allTF);&lt;/span&gt;
&lt;span id=&#34;cb44-22&#34;&gt;&lt;a href=&#34;#cb44-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-23&#34;&gt;&lt;a href=&#34;#cb44-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-24&#34;&gt;&lt;a href=&#34;#cb44-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (r &amp;gt;= l) {&lt;/span&gt;
&lt;span id=&#34;cb44-25&#34;&gt;&lt;a href=&#34;#cb44-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r == l) {&lt;/span&gt;
&lt;span id=&#34;cb44-26&#34;&gt;&lt;a href=&#34;#cb44-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            string s(allT);&lt;/span&gt;
&lt;span id=&#34;cb44-27&#34;&gt;&lt;a href=&#34;#cb44-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-28&#34;&gt;&lt;a href=&#34;#cb44-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s);&lt;/span&gt;
&lt;span id=&#34;cb44-29&#34;&gt;&lt;a href=&#34;#cb44-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; cntT) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-30&#34;&gt;&lt;a href=&#34;#cb44-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-31&#34;&gt;&lt;a href=&#34;#cb44-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++l, --r;&lt;/span&gt;
&lt;span id=&#34;cb44-32&#34;&gt;&lt;a href=&#34;#cb44-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb44-33&#34;&gt;&lt;a href=&#34;#cb44-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            string s(allT);&lt;/span&gt;
&lt;span id=&#34;cb44-34&#34;&gt;&lt;a href=&#34;#cb44-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, s[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-35&#34;&gt;&lt;a href=&#34;#cb44-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s) - cntT;&lt;/span&gt;
&lt;span id=&#34;cb44-36&#34;&gt;&lt;a href=&#34;#cb44-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb44-37&#34;&gt;&lt;a href=&#34;#cb44-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans[l] = ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-38&#34;&gt;&lt;a href=&#34;#cb44-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-39&#34;&gt;&lt;a href=&#34;#cb44-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == -&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb44-40&#34;&gt;&lt;a href=&#34;#cb44-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans[l] = ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-41&#34;&gt;&lt;a href=&#34;#cb44-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-42&#34;&gt;&lt;a href=&#34;#cb44-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb44-43&#34;&gt;&lt;a href=&#34;#cb44-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r == l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb44-44&#34;&gt;&lt;a href=&#34;#cb44-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    s = allT, s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-45&#34;&gt;&lt;a href=&#34;#cb44-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s);&lt;/span&gt;
&lt;span id=&#34;cb44-46&#34;&gt;&lt;a href=&#34;#cb44-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; cntT) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-47&#34;&gt;&lt;a href=&#34;#cb44-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-48&#34;&gt;&lt;a href=&#34;#cb44-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-49&#34;&gt;&lt;a href=&#34;#cb44-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb44-50&#34;&gt;&lt;a href=&#34;#cb44-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    s = allTF;&lt;/span&gt;
&lt;span id=&#34;cb44-51&#34;&gt;&lt;a href=&#34;#cb44-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, s[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-52&#34;&gt;&lt;a href=&#34;#cb44-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[r] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;) s[r] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-53&#34;&gt;&lt;a href=&#34;#cb44-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; s[r] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-54&#34;&gt;&lt;a href=&#34;#cb44-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-55&#34;&gt;&lt;a href=&#34;#cb44-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s) - cntTF;&lt;/span&gt;
&lt;span id=&#34;cb44-56&#34;&gt;&lt;a href=&#34;#cb44-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[r] = s[r];&lt;/span&gt;
&lt;span id=&#34;cb44-57&#34;&gt;&lt;a href=&#34;#cb44-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[r] = allTF[r];&lt;/span&gt;
&lt;span id=&#34;cb44-58&#34;&gt;&lt;a href=&#34;#cb44-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[r] = s[r];&lt;/span&gt;
&lt;span id=&#34;cb44-59&#34;&gt;&lt;a href=&#34;#cb44-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[r] = allTF[r];&lt;/span&gt;
&lt;span id=&#34;cb44-60&#34;&gt;&lt;a href=&#34;#cb44-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-61&#34;&gt;&lt;a href=&#34;#cb44-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, --r;&lt;/span&gt;
&lt;span id=&#34;cb44-62&#34;&gt;&lt;a href=&#34;#cb44-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb44-63&#34;&gt;&lt;a href=&#34;#cb44-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb44-64&#34;&gt;&lt;a href=&#34;#cb44-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb44-65&#34;&gt;&lt;a href=&#34;#cb44-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb44-66&#34;&gt;&lt;a href=&#34;#cb44-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    query(ans);&lt;/span&gt;
&lt;span id=&#34;cb44-67&#34;&gt;&lt;a href=&#34;#cb44-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-68&#34;&gt;&lt;a href=&#34;#cb44-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeton-round-2&#34;&gt;CodeTON Round 2&lt;/h2&gt;
&lt;h3 id=&#34;f---colouring-game&#34;&gt;1704F - Colouring Game&lt;/h3&gt;
&lt;p&gt;在有 &lt;code&gt;RB&lt;/code&gt; 和 &lt;code&gt;BR&lt;/code&gt; 的时候，双方策略都是先直接去消这个，因为这样能尽可能消耗对面的字母。&lt;/p&gt;
&lt;p&gt;然后没有相邻红蓝方格之后，这个肯定就是后手必胜了。所以只考虑第一阶段，公平组合游戏，求 SG，打表&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-813-div.-2&#34;&gt;Codeforces Round #813 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;e2---lcm-sum-hard-version&#34;&gt;1712E2 - LCM Sum (hard version)&lt;/h3&gt;
&lt;p&gt;题意：问满足 &lt;span class=&#34;math inline&#34;&gt;\(l\le i&amp;lt; j &amp;lt; k\le r\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}(i,j,k)\ge i + j + k\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\((i,j,k)\)&lt;/span&gt; 对数。&lt;span class=&#34;math inline&#34;&gt;\(T\le 2\times 10^5\)&lt;/span&gt; 组询问，&lt;span class=&#34;math inline&#34;&gt;\(l,r\le 2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑 E1，即 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 很小的情况。首先转化为数 &lt;span class=&#34;math inline&#34;&gt;\([i,j,k] &amp;lt; i + j +k\)&lt;/span&gt; 的情况，而这样的 &lt;span class=&#34;math inline&#34;&gt;\([i,j,k]\)&lt;/span&gt; 显然 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; 3k\)&lt;/span&gt;，所以取值只能为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(2k\)&lt;/span&gt;。那么考虑枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\([i,j,k] = k\)&lt;/span&gt; 的情况很好处理，即 &lt;span class=&#34;math inline&#34;&gt;\(i,j\)&lt;/span&gt; 需要为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的因数，此时显然 &lt;span class=&#34;math inline&#34;&gt;\(k&amp;lt;i + j + k\)&lt;/span&gt;，可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 计算。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm} = 2k\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(i,j,k\)&lt;/span&gt; 只可能形如 &lt;span class=&#34;math inline&#34;&gt;\(3t,4t,6t\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\(6t, 10t, 15t\)&lt;/span&gt; 的形式（打表可以发现），下面给出证明：&lt;/p&gt;
&lt;p&gt;因为 &lt;span class=&#34;math inline&#34;&gt;\(i+j &amp;gt; k \land i &amp;lt; j\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(j &amp;gt; k / 2\)&lt;/span&gt;，设 &lt;span class=&#34;math inline&#34;&gt;\(2k = j\times p\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(k/2 &amp;lt; 2k/p &amp;lt; k\)&lt;/span&gt;，解得 &lt;span class=&#34;math inline&#34;&gt;\(2&amp;lt;p&amp;lt;4\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(p = 3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(j = 2k/3\)&lt;/span&gt;。由 &lt;span class=&#34;math inline&#34;&gt;\(i + j &amp;gt; k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(i &amp;gt; k / 3\)&lt;/span&gt;，设 &lt;span class=&#34;math inline&#34;&gt;\(2k = i \times q\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(k / 3 &amp;lt; 2k/q &amp;lt; k\)&lt;/span&gt;，解得 &lt;span class=&#34;math inline&#34;&gt;\(3&amp;lt;q&amp;lt;6\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(q= 4\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;，对应的 &lt;span class=&#34;math inline&#34;&gt;\(i = k / 2\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(2k / 5\)&lt;/span&gt;。证毕。&lt;/p&gt;
&lt;p&gt;所以对于 &lt;span class=&#34;math inline&#34;&gt;\(15\mid k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(6\mid k\)&lt;/span&gt; 的时候，特判一下即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb45&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb45-1&#34;&gt;&lt;a href=&#34;#cb45-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-2&#34;&gt;&lt;a href=&#34;#cb45-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-3&#34;&gt;&lt;a href=&#34;#cb45-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb45-4&#34;&gt;&lt;a href=&#34;#cb45-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define szof&lt;/span&gt;(a)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;((&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a).size())&lt;/span&gt;
&lt;span id=&#34;cb45-5&#34;&gt;&lt;a href=&#34;#cb45-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-6&#34;&gt;&lt;a href=&#34;#cb45-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb45-7&#34;&gt;&lt;a href=&#34;#cb45-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-8&#34;&gt;&lt;a href=&#34;#cb45-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;4e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;4e5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-9&#34;&gt;&lt;a href=&#34;#cb45-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; fact[maxn];&lt;/span&gt;
&lt;span id=&#34;cb45-10&#34;&gt;&lt;a href=&#34;#cb45-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-11&#34;&gt;&lt;a href=&#34;#cb45-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll binom(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * n / &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb45-12&#34;&gt;&lt;a href=&#34;#cb45-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-13&#34;&gt;&lt;a href=&#34;#cb45-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) { &lt;span class=&#34;co&#34;&gt;// count lcm(i, j, k) &amp;lt; i + j + k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-14&#34;&gt;&lt;a href=&#34;#cb45-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-15&#34;&gt;&lt;a href=&#34;#cb45-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, l + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r) {&lt;/span&gt;
&lt;span id=&#34;cb45-16&#34;&gt;&lt;a href=&#34;#cb45-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-17&#34;&gt;&lt;a href=&#34;#cb45-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x : fact[k]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt;= l &amp;amp;&amp;amp; x &amp;lt; k) ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb45-18&#34;&gt;&lt;a href=&#34;#cb45-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += cnt * (cnt - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; &lt;span class=&#34;co&#34;&gt;// lcm = k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-19&#34;&gt;&lt;a href=&#34;#cb45-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k % &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; k / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;gt;= l) ++ret;&lt;/span&gt;
&lt;span id=&#34;cb45-20&#34;&gt;&lt;a href=&#34;#cb45-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k % &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; k * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; / &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt; &amp;gt;= l) ++ret; &lt;span class=&#34;co&#34;&gt;// lcm = 2k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-21&#34;&gt;&lt;a href=&#34;#cb45-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb45-22&#34;&gt;&lt;a href=&#34;#cb45-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb45-23&#34;&gt;&lt;a href=&#34;#cb45-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb45-24&#34;&gt;&lt;a href=&#34;#cb45-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-25&#34;&gt;&lt;a href=&#34;#cb45-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb45-26&#34;&gt;&lt;a href=&#34;#cb45-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, N) &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i; j &amp;lt;= N; j += i) fact[j].emplace_back(i);&lt;/span&gt;
&lt;span id=&#34;cb45-27&#34;&gt;&lt;a href=&#34;#cb45-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb45-28&#34;&gt;&lt;a href=&#34;#cb45-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb45-29&#34;&gt;&lt;a href=&#34;#cb45-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r; cin &amp;gt;&amp;gt; l &amp;gt;&amp;gt; r;&lt;/span&gt;
&lt;span id=&#34;cb45-30&#34;&gt;&lt;a href=&#34;#cb45-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; binom(r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - solve(l, r) &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb45-31&#34;&gt;&lt;a href=&#34;#cb45-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb45-32&#34;&gt;&lt;a href=&#34;#cb45-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-33&#34;&gt;&lt;a href=&#34;#cb45-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于 E2，我们将上面这个过程离线下来扫描线即可，倒序枚举 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt;，维护 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 的答案。相当于我们其实需要维护因数集合的大小，发现 &lt;span class=&#34;math inline&#34;&gt;\(x(x-1)/2\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((x+1)x/2\)&lt;/span&gt; 之间相差 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，所以用树状数组还是比较好维护的。而对于 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm} = 2k\)&lt;/span&gt; 的情况，因为我们枚举的是 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，所以在 &lt;span class=&#34;math inline&#34;&gt;\(3\mid i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(6\mid i\)&lt;/span&gt; 的时候判一下就可以了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-815-div.-2&#34;&gt;Codeforces Round #815 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A FST 了，本来能打出 2400+ 的 perf 的 &lt;img src=&#34;https://啧.tk/tuu&#34; /&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e---misha-and-paintings&#34;&gt;1720E - Misha and Paintings&lt;/h3&gt;
&lt;p&gt;有一个 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 的矩阵，&lt;span class=&#34;math inline&#34;&gt;\(n\le 500\)&lt;/span&gt;，每个位置有一个值 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(1\le v\le n^2\)&lt;/span&gt;，每次操作可以选择一个子方阵然后直接染色，要求 &lt;span class=&#34;math inline&#34;&gt;\(1\le x\le n^2\)&lt;/span&gt;。现在给定一个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，问最少多少次操作使得矩阵中不同的数刚好有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;首先，设一开始有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 种不同的数，则若 &lt;span class=&#34;math inline&#34;&gt;\(m \le k\)&lt;/span&gt;，则显然答案为 &lt;span class=&#34;math inline&#34;&gt;\(k - m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在考虑 &lt;span class=&#34;math inline&#34;&gt;\(k &amp;lt; m\)&lt;/span&gt; 的情况，下面给出答案不超过 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的构造证明。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;选一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; 的尽可能大的正方形，将里面全部涂为一个未出现的颜色，使得现在不同的数恰 &lt;span class=&#34;math inline&#34;&gt;\(\ge k\)&lt;/span&gt; 个。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后这个正方形的右下角开始（相当于 &lt;span class=&#34;math inline&#34;&gt;\((L + 1, L + 1)\)&lt;/span&gt; 扩展），涂为一个未出现的颜色，使得现在不同的数恰 &lt;span class=&#34;math inline&#34;&gt;\(\le k\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;容易发现这样相当于一次扩展两格，最后不同的数只可能有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个或 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 个，对于后者我们把涂的颜色变为一个已出现的即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是只需要判断答案是否为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。于是需要对于 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 个正方形找到其完全包含了多少数字，这个可以用二维前缀和什么的处理一下。总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CF715B Complete The Graph</title>
        <link>https://oi.imyangty.com/sol-cf715b/</link>
        <pubDate>Wed, 17 Aug 2022 22:52:06 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-cf715b/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg57.webp" alt="Featured image of post CF715B Complete The Graph" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 点 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 边，&lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 修改 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 条边中边为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的边， 使满足 &lt;span class=&#34;math inline&#34;&gt;\(s\to t\)&lt;/span&gt; 的最短路长度是 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt;，且输出答案的时候边为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的边的权值必须在 &lt;span class=&#34;math inline&#34;&gt;\([1,10^{18}]\)&lt;/span&gt; 内。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 1000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le 10000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le L\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;首先视 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 权边为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，跑一遍 &lt;span class=&#34;math inline&#34;&gt;\(s\to t\)&lt;/span&gt; 最短路，若此时最短路 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt;L\)&lt;/span&gt; 则一定无解。否则我们尝试进行如下构造。&lt;/p&gt;
&lt;p&gt;再跑一遍最短路，设为 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{dis}_1(u)\)&lt;/span&gt;。假设当前在 &lt;span class=&#34;math inline&#34;&gt;\(u\to v\)&lt;/span&gt;，且为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 边，由于我们跑 Dijkstra 是已经确定 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{dis}_1(u)\)&lt;/span&gt; 的，则令边权为 &lt;span class=&#34;math inline&#34;&gt;\(\max(1, L - \mathrm{dis}_0(t) - \mathrm{dis}_1(u) +\mathrm{dis}_0(v))\)&lt;/span&gt;，如果最后跑出来了 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; 则有解，否则无解。&lt;/p&gt;
&lt;p&gt;正确新：考虑我们这样定边权会使得最后 &lt;span class=&#34;math inline&#34;&gt;\(s\to t\)&lt;/span&gt; 的任意含 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 权边的路径长度都 &lt;span class=&#34;math inline&#34;&gt;\(\ge L\)&lt;/span&gt;，最后一次这样赋边权的时候就相当于直接硬点了一条最短路。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1005&lt;/span&gt;, maxm = &lt;span class=&#34;dv&#34;&gt;10005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, S, T, L, vis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll dis[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Edge {&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; ll w;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxm];&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; Dijkstra0(ll (&amp;amp;dis)[maxn]) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    priority_queue&amp;lt;pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, vector&amp;lt;pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt;, greater&amp;lt;pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(dis, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; dis);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(vis, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; vis);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dis[S] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, q.push({&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, S});&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q.top().second; q.pop();&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = p.first; ll w = e[p.second].w;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!w) w = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis[u] + w &amp;lt; dis[v]) {&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                dis[v] = dis[u] + w;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q.push({dis[v], v});&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; Dijkstra1(ll (&amp;amp;dis)[maxn], ll (&amp;amp;d)[maxn]) {&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    priority_queue&amp;lt;pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, vector&amp;lt;pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt;, greater&amp;lt;pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(dis, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; dis);&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(vis, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; vis);&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dis[S] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, q.push({&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, S});&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q.top().second; q.pop();&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = p.first; ll &amp;amp;w = e[p.second].w;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!w) w = max(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;, L - d[T] - dis[u] + d[v]);&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis[u] + w &amp;lt; dis[v]) {&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                dis[v] = dis[u] + w;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q.push({dis[v], v});&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m &amp;gt;&amp;gt; L &amp;gt;&amp;gt; S &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; e[i].u &amp;gt;&amp;gt; e[i].v &amp;gt;&amp;gt; e[i].w;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[e[i].u].emplace_back(e[i].v, i);&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[e[i].v].emplace_back(e[i].u, i);&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Dijkstra0(dis[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][T] &amp;gt; L) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Dijkstra1(dis[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], dis[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dis[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][T] != L) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, e[i].u, e[i].v, e[i].w);&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>AGC027D - Modulo Matrix</title>
        <link>https://oi.imyangty.com/sol-agc027d/</link>
        <pubDate>Wed, 17 Aug 2022 22:02:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-agc027d/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg01.webp" alt="Featured image of post AGC027D - Modulo Matrix" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;构造一个 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 的矩阵，要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有元素互异；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le a_{i,j}\le 10^{15}\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;对于任意两相邻数字 &lt;span class=&#34;math inline&#34;&gt;\(x,y\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(\max(x,y)\bmod \min(x, y)\)&lt;/span&gt; 为定值，且为正整数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 500\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;直觉上来看，我们会让这个值尽可能为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，而矩阵 + 相邻提示我们进行黑白染色。&lt;/p&gt;
&lt;p&gt;那么就有了一个很明显的构造：在所有黑格子里面填上所有的质数，白格子填上四周 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm} + 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;但是前 &lt;span class=&#34;math inline&#34;&gt;\(250000\)&lt;/span&gt; 个质数四个取 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{lcm}\)&lt;/span&gt; 的级别已经会爆掉 &lt;span class=&#34;math inline&#34;&gt;\(10^{15}\)&lt;/span&gt; 的范围，所以需要考虑优化。&lt;/p&gt;
&lt;p&gt;注意到其实我们不需要这么多不同的质数，我们若是将每个主对角线和副对角线分配一个质数，然后令黑格子里面填上对应质数的积，打表发现白格子的上界还是可以符合要求的，事实上有一个非常松的上界。&lt;/p&gt;
&lt;p&gt;于是时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2\log V)\)&lt;/span&gt;。需要特判一下 &lt;span class=&#34;math inline&#34;&gt;\(n = 2\)&lt;/span&gt; 的 case。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N = &lt;span class=&#34;fl&#34;&gt;2e4&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; isp[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], p[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], ptot;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, N) {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) p[++ptot] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= ptot &amp;amp;&amp;amp; i * p[j] &amp;lt;= N; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            isp[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;505&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll p1[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], p2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ans[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll lcm(ll x, ll y) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (!x || !y) ? (x + y) : (x / __gcd(x, y) * y);}&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sieve();&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;4 7&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; 23 10&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; it = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) p1[i] = p[it++];&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - n) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - n : &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; - n; i &amp;lt;= n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) p2[i + n] = p[it++];&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((i + j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[i][j] = p1[i + j] * p2[i - j + n];&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!((i + j) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) ans[i][j] = lcm(lcm(ans[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j], ans[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]), lcm(ans[i][j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ans[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cout &amp;lt;&amp;lt; ans[i][j] &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>CF317C Balance</title>
        <link>https://oi.imyangty.com/sol-cf317c/</link>
        <pubDate>Mon, 04 Jul 2022 14:20:31 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-cf317c/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg7.webp" alt="Featured image of post CF317C Balance" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个水桶编号为 &lt;span class=&#34;math inline&#34;&gt;\(1\sim n\)&lt;/span&gt;，每个水桶的容量为整数 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;。水桶之间有 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 条双向管道（可能重复），一次操作可以从一个水桶通过管道输送任意非负整数量的水到另一个水桶，但要保证任意时刻水桶中的水量不超过容量。现给定一个初始局面 &lt;span class=&#34;math inline&#34;&gt;\(\big&amp;lt;a_i\big&amp;gt;\)&lt;/span&gt;（表示第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个水桶的水量为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; ）和一个目标局面&lt;span class=&#34;math inline&#34;&gt;\(\big&amp;lt;b_i\big&amp;gt;\)&lt;/span&gt;，问是否可以在 &lt;span class=&#34;math inline&#34;&gt;\(2n^2\)&lt;/span&gt; 次操作内从初始局面到达目标局面。如果可以输出方案，否则输出 &lt;code&gt;NO&lt;/code&gt;。&lt;span class=&#34;math inline&#34;&gt;\(1\le n \le300,1\le v \le 10^9,0\le e \le50000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le a_i,b_i\le v\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;那么首先明确，&lt;span class=&#34;math inline&#34;&gt;\(a_i&amp;lt;b_i\)&lt;/span&gt; 的点是需要别的点引入的，而 &lt;span class=&#34;math inline&#34;&gt;\(a_i&amp;gt;b_i\)&lt;/span&gt; 的点是需要供给给别的点的。首先对于每个连通块 &lt;span class=&#34;math inline&#34;&gt;\(\sum a_i\ne \sum b_i\)&lt;/span&gt; 则一定无解。那么我们便可以将问题放在生成树上考虑，因为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的操作次数还是比较松的。&lt;/p&gt;
&lt;p&gt;那么有一个最朴素的思路就是枚举这些 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;lt; b_i\)&lt;/span&gt; 的点，然后让同一连通块内的 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;gt; b_i\)&lt;/span&gt; 点对其进行供给，由于有 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的限制，最多需要进行 &lt;span class=&#34;math inline&#34;&gt;\(2(n-1)\)&lt;/span&gt; 次（一次不行咱就两次）。&lt;/p&gt;
&lt;p&gt;但同时我们也有更优的思路：从叶子节点开始，若其满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;lt; b_i\)&lt;/span&gt;，则从其邻近节点“吸血”以满足自己的条件，若邻近节点不够就递归继续吸，然后满足了这个叶子节点的限制后，删掉这个叶子节点。问题便变成了规模 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; 的子问题（当然前提是有解），而一次这样的调整最多需要 &lt;span class=&#34;math inline&#34;&gt;\(n-1\)&lt;/span&gt; 次操作，所以这样做上界就是 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; 的了（而且感觉比较松）。对于 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;gt; b_i\)&lt;/span&gt; 的点就递归释放即可，思路类似。&lt;/p&gt;
&lt;p&gt;代码细节稍微有一点小多，需要好好实现一下。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define debug&lt;/span&gt;(...)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;fprintf(stderr,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;__VA_ARGS__&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;305&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, V, m, a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn], T[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], deg[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; suma, sumb;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;queue&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Op {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, d;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Op(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _d = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : x(_x), y(_y), d(_d) {}&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;Op&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs0(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    suma += a[u], sumb += b[u];&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[v]) {&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        T[u].push_back(v), T[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++deg[u], ++deg[v];&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs0(v);&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (deg[u] == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) q.push(u);&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; in) { &lt;span class=&#34;co&#34;&gt;// 返回消化了的流量&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ta = a[u] + in, orga = a[u], out = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ta &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; ta &amp;lt;= V) {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[u] = ta;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (in &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) ans.push_back(Op(fa, u, in));&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans.push_back(Op(u, fa, -in));&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; in;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ta &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) { &lt;span class=&#34;co&#34;&gt;// in &amp;lt; 0 fa 吸血 u&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : T[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa &amp;amp;&amp;amp; vis[v] != &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cur = dfs1(v, u, ta);&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ta -= cur, out += cur;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ta &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[u] = max(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, ta);&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans.push_back(Op(u, fa, orga - a[u] - out));&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a[u] - orga + out;&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ta &amp;gt; V) {&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : T[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa &amp;amp;&amp;amp; vis[v] != &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cur = dfs1(v, u, ta - V);&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ta -= cur, out += cur;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ta &amp;lt;= V) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[u] = min(V, ta);&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans.push_back(Op(fa, u, a[u] - orga + out));&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a[u] - orga + out;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; V &amp;gt;&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; b[i];&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v;&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        suma = sumb = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs0(i);&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (suma != sumb) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q.front(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;vv : T[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[vv] != &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                v = vv;&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dfs1(v, u, a[u] - b[u]);&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a[u] = b[u];&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[u] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (--deg[v] == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) q.push(v);&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans.size() &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;o : ans) cout &amp;lt;&amp;lt; o.x &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; o.y &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; o.d &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P3557 [POI2013]GRA-Tower Defense Game</title>
        <link>https://oi.imyangty.com/sol-luogu-p3557/</link>
        <pubDate>Mon, 04 Jul 2022 12:10:26 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p3557/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg25.webp" alt="Featured image of post P3557 [POI2013]GRA-Tower Defense Game" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;有一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 条边的图，每条边距离是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，已知用 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个攻击距离为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的塔可以打到整个地图，让构造一个方案使得用小于等于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个攻击距离为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的塔打到整个地图。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 5\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le m\le 10^6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k\le n\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;。。。乌鱼子乱搞构造牛逼题。&lt;/p&gt;
&lt;p&gt;依次选择未被覆盖的点开始覆盖即可。&lt;/p&gt;
&lt;p&gt;证明：考虑攻击距离是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的时候，每个点都至少与一个攻击塔相连。那么所以我们的选法一定能覆盖这 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个选了的塔。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], n, m, k;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn], ans;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dep) {&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dep &amp;gt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa) dfs(v, u, dep + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m &amp;gt;&amp;gt; k;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans.push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans.size() &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : ans) cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P5884 [IOI2014]game 游戏</title>
        <link>https://oi.imyangty.com/sol-luogu-p5884/</link>
        <pubDate>Sun, 30 Jan 2022 18:04:55 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p5884/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg19.webp" alt="Featured image of post P5884 [IOI2014]game 游戏" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;交互题。&lt;/p&gt;
&lt;p&gt;TW 有航空网，可抽象为 &lt;span class=&#34;math inline&#34;&gt;\(0,\cdots, n - 1\)&lt;/span&gt; 编号点的无向图，A 问 B 这张图是否连通，B 想做游戏来回答他。&lt;/p&gt;
&lt;p&gt;A 可以问 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 边是否存在，B 会立刻回答这个问题。A 一共会问 &lt;span class=&#34;math inline&#34;&gt;\(n(n - 1)/2\)&lt;/span&gt; 个问题，可以知道的是在问完最后一个问题后 A 就会知道其是否连通。B 的目标是动态构造这张图，让 A 在问最后一个问题之前还不知道整张图是否连通。&lt;/p&gt;
&lt;p&gt;具体地，实现 &lt;code&gt;void initialize(int n)&lt;/code&gt; 和 &lt;code&gt;int hasEdge(int u, int v)&lt;/code&gt; 两个函数帮助 B 获胜。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;在询问最后一条边之前图应该是形成了两个连通块，而且两个连通块之间的点都没有任何连边。那么对于非强制在线的情况，只需要构造一张完全图然后把最后一个点抠掉即可。然后这题就做完了。&lt;/p&gt;
&lt;p&gt;但是对于原题，我们是不知道他最后一个询问会是什么的，所以上面这个做法明显行不通。&lt;/p&gt;
&lt;p&gt;我们考虑将这个图构造成一棵树，并且在最后的询问再给出树边。&lt;/p&gt;
&lt;p&gt;也就是说，一个点到其他点中的最后一条边的时候再连上。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;quot;game.h&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1505&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; initialize(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {}&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; hasEdge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ++cnt[max(u, v)] == max(u, v);}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>UOJ#604. 【UER 9】赶路</title>
        <link>https://oi.imyangty.com/sol-uoj604/</link>
        <pubDate>Wed, 26 Jan 2022 13:24:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-uoj604/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg44.webp" alt="Featured image of post UOJ#604. 【UER 9】赶路" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定二维平面上的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点（&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 500\)&lt;/span&gt;），要求构造一条从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的不自交的路径。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;我们不妨考虑分治。考虑 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{solve}(s, t, A)\)&lt;/span&gt; 表示当前要解决从 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;，经过的点集为 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;随便从 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中挑一个点 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 出来，然后从 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 连一条直线，然后将 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中剩下的点按在直线的左侧/右侧划分到 &lt;span class=&#34;math inline&#34;&gt;\(A_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(A_2\)&lt;/span&gt; 中。这里假设 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 在直线右侧，反之同理。然后递归求解 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{solve}(s, p, A_1)\)&lt;/span&gt;，即我们先走左侧的点，中途要经过 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，之后再走右侧的点，即 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{solve}(p, t, A_2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这个过程中，&lt;span class=&#34;math inline&#34;&gt;\(A_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(A_2\)&lt;/span&gt; 中的路径是一定不会有交的，根据我们的构造，发现其一定有解。&lt;/p&gt;
&lt;p&gt;于是就这样做，用叉积判一下方向啥的，就搞定了。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;505&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Point {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Point() {}&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Point(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _y) : x(_x), y(_y) {}&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Point &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Point(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; ll &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;^(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.x * b.y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.y * b.x;}&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ((p[b] - p[a]) ^ (p[c] - p[a])) &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t, vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; a[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)v.size(); ++i) a[check(s, v[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], v[i])].push_back(v[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = check(s, v[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t);&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[k ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].size()) solve(s, v[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], a[k ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(v[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[k].size()) solve(v[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t, a[k]);&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(p[i].x, p[i].y);&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) tmp.push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), solve(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, tmp), print(n, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>GYM103495D. Pattern Lock</title>
        <link>https://oi.imyangty.com/sol-gym103495d/</link>
        <pubDate>Tue, 25 Jan 2022 20:50:33 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-gym103495d/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg15.webp" alt="Featured image of post GYM103495D. Pattern Lock" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\times m\)&lt;/span&gt; 的点阵，&lt;span class=&#34;math inline&#34;&gt;\(2\le n,m\le 500\)&lt;/span&gt;，要求构造一条哈密顿链，使得形成的角都是锐角且边和点仅在端点处相交。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;这题搞了好久错误答案。。。&lt;/p&gt;
&lt;p&gt;需要注意到的是，两列之间的大跨线只能跨一列，不然总有机会碰到中间的点，寄。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s4.ax1x.com/2022/01/25/7bssYQ.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;事实就是，如果 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 不同时为奇数，则可以令 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为偶数，然后两两分组这样来做。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 同时为奇数的就把上面那个魔改一下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s4.ax1x.com/2022/01/25/7b69ET.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pii&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pii&amp;gt; calc() {&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;pii&amp;gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret.push_back({&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;; i &amp;lt;= n; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back({i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back({i, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back({i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back({i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back({i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret.push_back({i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flg = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((m &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;amp;&amp;amp; !(n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) swap(n, m), flg = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) swap(n, m), flg = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, (m &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? m / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : m / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back({n, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(i, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back({i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j});&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back({i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back({n, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j});&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back({&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back({i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j});&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back({i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;});&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back({&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j});&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (m &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vector&amp;lt;pii&amp;gt; tmp = calc();&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : tmp) {&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (m % &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) p.first = n - p.first + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p.second += m - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back(p);&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : ans) {&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flg) print(p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(p.second, p.first);&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>ICPC Shanghai 2019 D Spanning Tree Removal</title>
        <link>https://oi.imyangty.com/sol-nc202122/</link>
        <pubDate>Mon, 01 Nov 2021 10:29:16 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-nc202122/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg31.webp" alt="Featured image of post ICPC Shanghai 2019 D Spanning Tree Removal" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://ac.nowcoder.com/acm/problem/202122&#34;&gt;牛客传送门&lt;/a&gt;。给定一张完全图，每次操作可以选择一棵生成树然后从图中删除。问最多能进行几次这样的操作，并输出方案。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;操作次数显然为 &lt;span class=&#34;math inline&#34;&gt;\(n / 2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑构造出 &lt;span class=&#34;math inline&#34;&gt;\(n / 2\)&lt;/span&gt; 条边不相交的链。&lt;/p&gt;
&lt;p&gt;发现可以 &lt;span class=&#34;math inline&#34;&gt;\(\{x, x + 1, x - 1, x + 2, x - 2, x + 3,\cdots\}\)&lt;/span&gt; 这样构造。循环移位 &lt;span class=&#34;math inline&#34;&gt;\(n / 2\)&lt;/span&gt; 次就可以构造出所有需要的生成树。具体可以看代码。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;T);&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(kase, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, T) {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n);&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;Case #&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, kase, n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = i, sgn = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; nxt = (now + sgn * j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + n) % n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, now, nxt);&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                sgn = -sgn, now = nxt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>CF431D Random Task</title>
        <link>https://oi.imyangty.com/sol-cf431d/</link>
        <pubDate>Sun, 31 Oct 2021 17:21:37 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-cf431d/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg66.webp" alt="Featured image of post CF431D Random Task" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(0\le m\le 10^{18}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 64\)&lt;/span&gt;），求任意一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\([n + 1, 2n]\)&lt;/span&gt; 中恰有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{popcount}(x) = k\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;研究一下性质，令 &lt;span class=&#34;math inline&#34;&gt;\(S(n) = \{n + 1, n + 2, \cdots, 2n\}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(n) = \sum_{x\in S(n)}[\operatorname{popcount}(x) = k]\)&lt;/span&gt;。然后由于 &lt;span class=&#34;math inline&#34;&gt;\(S(n) - S(n - 1) = \{2n - 1, 2n\} - \{n\}\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{popcount}(n) = \operatorname{popcount}(2n)\)&lt;/span&gt;。因此这个 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 是非严格递增的，具有可二分性。&lt;/p&gt;
&lt;p&gt;现在的问题变为给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 如何求 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;貌似可以数位 dp。&lt;/p&gt;
&lt;p&gt;于是这题就解决了。复杂度两个 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll m, k;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[&lt;span class=&#34;dv&#34;&gt;80&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;80&lt;/span&gt;], a[&lt;span class=&#34;dv&#34;&gt;80&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim) {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!now) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (cnt == k);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~f[now][cnt] &amp;amp;&amp;amp; !lim) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[now][cnt];&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; up = lim ? a[now] : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll res = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, up)&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt + (i == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;lt;= k)&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            res += solve(now - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt + (i == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), lim &amp;amp;&amp;amp; (i == up));&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!lim) f[now][cnt] = res;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll check(ll mid) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll x = mid &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;; x; x &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) a[++a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]] = (x &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = solve(a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll x = mid; x; x &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) a[++a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]] = (x &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret -= solve(a[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;m, &amp;amp;k);&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(f, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = (ll)&lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt; r) {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tmp = check(mid);&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp == m)&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, mid), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp &amp;lt; m) l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>NOIP2020 题解</title>
        <link>https://oi.imyangty.com/sol-noip2020/</link>
        <pubDate>Tue, 09 Mar 2021 19:25:17 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-noip2020/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg33.webp" alt="Featured image of post NOIP2020 题解" /&gt;&lt;h2 id=&#34;t1-排水系统&#34;&gt;T1 排水系统&lt;/h2&gt;
&lt;p&gt;不想说什么，拓扑排序即可。&lt;/p&gt;
&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;
&lt;p&gt;实现的时候注意一下，可以直接将所有的分数以 &lt;span class=&#34;math inline&#34;&gt;\(60^{11}\)&lt;/span&gt; 为分母进行运算，然后需要用两个 &lt;code&gt;long long&lt;/code&gt; 来实现一个 &lt;code&gt;Bigint&lt;/code&gt; 类。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], *__p1 = ibuf, *__p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T &amp;amp;n) {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;co&#34;&gt;// namespace fastIO&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Bigint {&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll base = &lt;span class=&#34;fl&#34;&gt;1e15&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll upper, lower;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Bigint(ll u, ll l) : upper(u), lower(l) {}&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Bigint &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Bigint(lhs.upper + rhs.upper + (lhs.lower + rhs.lower) / base, (lhs.lower + rhs.lower) % base);&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Bigint &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Bigint(lhs.upper * rhs + lhs.lower * rhs / base, lhs.lower * rhs % base);&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Bigint &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;/(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Bigint(lhs.upper / rhs, (lhs.lower + lhs.upper % rhs * base) / rhs);&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; ll &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;%(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (lhs.upper % rhs * base + lhs.lower) % rhs;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print() {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (upper) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld%015lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, upper, lower);&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, lower);&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxm = &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt; * maxn;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; prime[] = {&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], to[maxm], nxt[maxm], n, m, cnte;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; oud[maxn], ind[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Frac {&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Bigint upper, lower;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Frac(Bigint x = Bigint(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), Bigint y = Bigint(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) : upper(x), lower(y) {}&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Frac &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Frac &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Frac &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Frac(lhs.upper + rhs.upper, lhs.lower);&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Frac &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;/(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Frac &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Frac(lhs.upper / rhs, lhs.lower);&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], qhead = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, qtail = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Bigint base(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;) base = base * &lt;span class=&#34;dv&#34;&gt;60&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(oud[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, oud[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to; read(to);&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(i, to), ++ind[to];&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = Frac(Bigint(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), base);&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[++qtail] = i, f[i].upper = base;&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (qhead &amp;lt;= qtail) {&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q[qhead++];&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Frac add;&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (oud[u]) add = f[u] / oud[u];&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v = to[i];&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[v] = f[v] + add;&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!--ind[v])&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q[++qtail] = v;&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!oud[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (f[i].upper % prime[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; f[i].lower % prime[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[i].upper = f[i].upper / prime[j], f[i].lower = f[i].lower / prime[j];&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i].upper.print(), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), f[i].lower.print(), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;t2-字符串匹配&#34;&gt;T2 字符串匹配&lt;/h2&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(A^i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 拼接而成的字符串。令 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 为非空字符串，求 &lt;span class=&#34;math inline&#34;&gt;\(S = (AB)^kC\)&lt;/span&gt; 的方案数。其中 &lt;span class=&#34;math inline&#34;&gt;\(F(A)\le F(C)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(F(A)\)&lt;/span&gt; 意为 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中出现次数为奇数的字符数量。&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;直接说 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 做法。字符串下标从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 开始。&lt;/p&gt;
&lt;p&gt;考虑枚举 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 的长度 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，则这个循环前缀的长度为 &lt;span class=&#34;math inline&#34;&gt;\(ik\)&lt;/span&gt;。现在的&lt;strong&gt;第一个问题是不知道有多少个合法的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意到一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的字符串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 有长度为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的循环节的充要条件是 &lt;span class=&#34;math inline&#34;&gt;\(S_{[1, n - m]} = S_{[m + 1, n]}\)&lt;/span&gt;（这是 KMP 相关题目的经典套路）。体现在本题中就是 &lt;span class=&#34;math inline&#34;&gt;\(S_{[1, (k - 1)i]} = S_{i + 1, ki}\)&lt;/span&gt;。即从 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 开始长度为 &lt;span class=&#34;math inline&#34;&gt;\((k - 1)i\)&lt;/span&gt; 的子串与长度为 &lt;span class=&#34;math inline&#34;&gt;\((k - 1)i\)&lt;/span&gt; 的前缀相同。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(S_{[i +1, ki]}\)&lt;/span&gt; 其实即为后缀 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 的前缀。考虑 Z 算法。则如果有 &lt;span class=&#34;math inline&#34;&gt;\((k - 1)i\le Z_{i + 1}\)&lt;/span&gt;，即这个前缀的长度不大于 &lt;span class=&#34;math inline&#34;&gt;\(Z_{i+ 1}\)&lt;/span&gt;，则根据 &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; 的定义，有 &lt;span class=&#34;math inline&#34;&gt;\(S_{[1, (k - 1)i]} = S_{i + 1, ki}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;于是对于一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{Z_{i + 1}}{i} + 1\)&lt;/span&gt; 个合法的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的取值。当然由于 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 要非空，所以 &lt;span class=&#34;math inline&#34;&gt;\(Z_{i + 1}\)&lt;/span&gt; 要与 &lt;span class=&#34;math inline&#34;&gt;\(n - i - 1\)&lt;/span&gt; 取 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt;。至此，合法的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的个数得到了解决。下面的问题就是 &lt;span class=&#34;math inline&#34;&gt;\(F(A)\le F(C)\)&lt;/span&gt; 的限定。&lt;/p&gt;
&lt;p&gt;现在我们考虑 &lt;span class=&#34;math inline&#34;&gt;\(F(C)\)&lt;/span&gt;。很明显，其为整串除掉了长度为 &lt;span class=&#34;math inline&#34;&gt;\(ik\)&lt;/span&gt; 的前缀之后得到的后缀。现在分 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的奇偶性讨论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为奇数时，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(F(C) = F(\mathrm{suf}(i + 1))\)&lt;/span&gt;，因为从第二个重复的 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 一直到第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 是不产生贡献的。这样的 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 一共有 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\dfrac{\frac{Z_{i + 1}}{i} + 1}{2}\right\rceil\)&lt;/span&gt; 个。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为偶数时，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(F(C) = F(S)\)&lt;/span&gt;，因为 &lt;span class=&#34;math inline&#34;&gt;\(F((AB)^k)\)&lt;/span&gt; 必然为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。这样的 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(\left\lfloor\dfrac{\frac{Z_{i + 1}}{i} + 1}{2}\right\rfloor\)&lt;/span&gt; 个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来考虑合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;。其实 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 也就是一个长度小于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的前缀。所以大力分类一波：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为奇数时合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的数量即为 &lt;span class=&#34;math inline&#34;&gt;\(1\le j&amp;lt; i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{pre}(j))\le F(\mathrm{suf}(i + 1))\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的个数。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为偶数时合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的数量即为 &lt;span class=&#34;math inline&#34;&gt;\(1\le j &amp;lt; i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{pre}(j))\le F(S)\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的个数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分别用乘法原理合并即可。然后至于上面提到的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，可以预先处理出所有的 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{suf}(j))\)&lt;/span&gt;，然后边枚举 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 就边计算 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{pre}(j))\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;h3 id=&#34;implementation-1&#34;&gt;Implementation&lt;/h3&gt;
&lt;p&gt;对于查询 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为奇数时合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的数量，这里使用树状数组以减少编写难度。树状数组带来的常数很小，可以忽略不计。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define clr&lt;/span&gt;(a)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memset(a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; z[maxn], n, fsuf[maxn], buc[&lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define lowbit&lt;/span&gt;(x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(x&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;-x)&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t[&lt;span class=&#34;dv&#34;&gt;27&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x &amp;lt;= &lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;; x += lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++t[x];&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x; x -= lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += t[x];&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;T);&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = strlen(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        clr(z), clr(fsuf), clr(buc);&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        z[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = n;&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt;= r) z[i] = min(z[i - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], r - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (i + z[i] &amp;lt;= n &amp;amp;&amp;amp; s[i + z[i]] == s[z[i] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ++z[i];&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i + z[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt; r) l = i, r = i + z[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;//计算 z 数组&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;] &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) fsuf[i] = fsuf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; fsuf[i] = fsuf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;//处理出所有后缀的 F 值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        clr(buc), clr(t);&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//当前前缀的 f 值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f += ((buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;] &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; totk = min(z[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], n - i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot0 = totk &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot1 = (totk + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//k 为偶数/奇数的数量&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * tot0 * query(fsuf[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * tot1 * query(fsuf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(f + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;//树状数组传进去的要全部加 1 是因为会有 0 的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;t3-移球游戏&#34;&gt;T3 移球游戏&lt;/h2&gt;
&lt;p&gt;NOIP 考了构造/jk。今天补题。第一次做这种难度的构造题？&lt;/p&gt;
&lt;h3 id=&#34;description-1&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 个柱子上 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个柱子有打乱排的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 种颜色的球，每个柱子上面有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个，构造出一种步数在 &lt;span class=&#34;math inline&#34;&gt;\(820000\)&lt;/span&gt; 内的方案使得每个柱子上颜色相同。 每次操作只能为拿某柱子最顶端的一个球放到另一个柱子的最顶端，并且始终保持一个柱子上球个数不超过 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;法一&#34;&gt;法一&lt;/h3&gt;
&lt;h2 id=&#34;t4-微信步数&#34;&gt;T4 微信步数&lt;/h2&gt;
&lt;p&gt;我都不敢相信这是 NOIP 题。。。&lt;/p&gt;
&lt;h3 id=&#34;description-2&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 维空间的场地，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 维坐标限制在 &lt;span class=&#34;math inline&#34;&gt;\([1, w_i]\)&lt;/span&gt; 中。某人跑步，在接下来的 &lt;span class=&#34;math inline&#34;&gt;\(\prod w_i\)&lt;/span&gt; 天中每天从一个不同坐标出发，按照如下规则跑步：&lt;/p&gt;
&lt;p&gt;一共 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 步，每步用 &lt;span class=&#34;math inline&#34;&gt;\((c_i, d_i)\)&lt;/span&gt; 描述，表示在第 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 维移动 &lt;span class=&#34;math inline&#34;&gt;\(d_i\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(d_i\in\{-1, 1\}\)&lt;/span&gt;），重复如上路线直到走出场地。&lt;/p&gt;
&lt;p&gt;问这些天内走了多少步，答案对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模，若存在某一天会在场内循环，输出 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 5\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 10\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le w_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(d_i\in\{-1, 1\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;solution-1&#34;&gt;Solution&lt;/h3&gt;
</description>
        </item>
        
    </channel>
</rss>

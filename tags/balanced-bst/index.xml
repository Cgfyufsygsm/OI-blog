<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>平衡树 on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/balanced-bst/</link>
        <description>Recent content in 平衡树 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Wed, 16 Mar 2022 14:50:21 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/balanced-bst/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SPOJ GSS 系列题解</title>
        <link>https://oi.imyangty.com/sol-sp-gss/</link>
        <pubDate>Wed, 16 Mar 2022 14:50:21 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-sp-gss/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg41.webp" alt="Featured image of post SPOJ GSS 系列题解" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;GSS 系列真的是十分经典的题。开个坑做做。&lt;/p&gt;
&lt;h2 id=&#34;gss1-gss3&#34;&gt;GSS1 &amp;amp; GSS3&lt;/h2&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;给定序列 &lt;span class=&#34;math inline&#34;&gt;\(A_{1,\cdots ,n}\)&lt;/span&gt;，求区间最大子段和。GSS1 不带修，GSS3 单点修改。&lt;/p&gt;
&lt;h3 id=&#34;solution-1&#34;&gt;Solution 1&lt;/h3&gt;
&lt;p&gt;用线段树维护最大子段和的常见套路：维护当前区间最大前缀，最大后缀和最大子段和。合并的时候简单维护。&lt;/p&gt;
&lt;h3 id=&#34;solution-2&#34;&gt;Solution 2&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;动态 dp&lt;/strong&gt;。考虑这样定义 dp 状态：设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾的最大子段和，&lt;span class=&#34;math inline&#34;&gt;\(g_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1,i]\)&lt;/span&gt; 的最大子段和，则方程易得 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_i = \max\{f_{i - 1} + a_i, a_i\}\\
g_i = \max\{f_i, g_{i - 1}\}
\end{cases}
\]&lt;/span&gt; 将 dp 方程写成 &lt;span class=&#34;math inline&#34;&gt;\(\max,+\)&lt;/span&gt; 矩阵乘法的形式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
a_i &amp;amp; -\infty &amp;amp; a_i\\
a_i &amp;amp; 0 &amp;amp; a_i\\
-\infty &amp;amp; -\infty &amp;amp; 0 &amp;amp;
\end{bmatrix}
\otimes
\begin{bmatrix}
f_{i - 1}\\
g_{i - 1}\\
0
\end{bmatrix}
=
\begin{bmatrix}
f_{i}\\
g_i\\
0
\end{bmatrix}
\]&lt;/span&gt; 于是我们就用线段树来维护转移矩阵 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}a_i &amp;amp; -\infty &amp;amp; a_i\\a_i &amp;amp; 0 &amp;amp; a_i\\-\infty &amp;amp; -\infty &amp;amp; 0 &amp;amp;\end{bmatrix}\)&lt;/span&gt; 的连乘积（但是一定要注意是从右往左乘），对于 GSS3 的修改操作就修改矩阵就可以了。查询操作就初始化一下 ，最右边的矩阵肯定是 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}a_l\\a_l\\0\end{bmatrix}\)&lt;/span&gt;，查询出 &lt;span class=&#34;math inline&#34;&gt;\([l + 1, r]\)&lt;/span&gt; 的连乘积再左乘给初始矩阵就得解了。容易发现单位矩阵为 &lt;span class=&#34;math inline&#34;&gt;\(\begin{bmatrix}0 &amp;amp; -\infty &amp;amp; -\infty\\-\infty &amp;amp; 0 &amp;amp; -\infty\\-\infty &amp;amp; -\infty &amp;amp; 0\end{bmatrix}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;gss2&#34;&gt;GSS2&lt;/h2&gt;
&lt;h3 id=&#34;description-1&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;不带修，区间查询最大子段和，但相同的数只贡献一次。&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;h2 id=&#34;gss4&#34;&gt;GSS4&lt;/h2&gt;
&lt;p&gt;区间开方区间求和，初始时 &lt;span class=&#34;math inline&#34;&gt;\(\sum A_i\le 10^{18}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到一个数被开方的次数其实很小，顶多 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 次就会变成 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。所以不妨维护区间最大值，若区间最大值不为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 则递归暴力修改，若为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 说明不用修改。&lt;/p&gt;
&lt;p&gt;势能分析可得其复杂度的正确性。&lt;/p&gt;
&lt;h2 id=&#34;gss6&#34;&gt;GSS6&lt;/h2&gt;
&lt;p&gt;维护整数序列，支持单点插入，单点删除，单点修改值，区间最大子段和。&lt;/p&gt;
&lt;p&gt;发现拿个平衡树像 GSS3 那样维护就可以了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>P4036 [JSOI2008]火星人</title>
        <link>https://oi.imyangty.com/sol-luogu-p4036/</link>
        <pubDate>Sat, 18 Dec 2021 17:59:59 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p4036/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg66.webp" alt="Featured image of post P4036 [JSOI2008]火星人" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;维护一个字符串序列，要求支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单点插入&lt;/li&gt;
&lt;li&gt;单点修改&lt;/li&gt;
&lt;li&gt;询问两个字串的 LCP 长度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据范围常规 1-2log 级别。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;若不带修，则显然 SA 碾过去了，问题是它带修，并且还是需要支持插入。&lt;/p&gt;
&lt;p&gt;我们除了 SA，还有什么方法呢？当然是二分+哈希了。&lt;/p&gt;
&lt;p&gt;那么我们考虑使用平衡树进行维护，在合并区间的过程中维护哈希值，然后便可做了。&lt;/p&gt;
&lt;p&gt;哈希如是进行维护： &lt;span class=&#34;math display&#34;&gt;\[
hash(u) = hash(ls(u)) + val(u) \times base^{size(ls(u))} + hash(rs(u))\times base^{size(ls(u)) + 1}
\]&lt;/span&gt; 正确性应该是比较显然的。&lt;/p&gt;
&lt;p&gt;写着有点烦而已。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;ex&#34;&gt;uint&lt;/span&gt; = &lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;ex&#34;&gt;uint&lt;/span&gt; base = &lt;span class=&#34;dv&#34;&gt;31&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s0[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ex&#34;&gt;uint&lt;/span&gt; p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; key, size, ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], val;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;ex&#34;&gt;uint&lt;/span&gt; hash;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ls&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define rs&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[ls(u)].size + t[rs(u)].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].hash = t[ls(u)].hash + t[u].val * p[t[ls(u)].size] + t[rs(u)].hash * p[t[ls(u)].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sz, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[ls(u)].size &amp;lt; sz) x = u, split(rs(u), sz - t[ls(u)].size - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, rs(u), y);&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; y = u, split(ls(u), sz, x, ls(u));&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pushup(u), &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key)&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y), pushup(x), x;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]), pushup(y), y;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos, &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, pos, x, y);&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].val = t[cnt].hash = c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[cnt].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[cnt].key = rand();&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, merge(cnt, y));&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos, &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, pos - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y), split(y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y, z);&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[y].val = t[y].hash = c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, merge(y, z));&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build() {&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = strlen(s0 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) insert(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, s0[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;ex&#34;&gt;uint&lt;/span&gt; gethash(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y), split(y, r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y, z);&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;ex&#34;&gt;uint&lt;/span&gt; res = t[y].hash;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, merge(y, z));&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos1, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos2) {&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = min(t[root].size - pos2 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[root].size - pos1 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, res = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt; r) {&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;ex&#34;&gt;uint&lt;/span&gt; h1 = gethash(pos1, pos1 + mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), h2 = gethash(pos2, pos2 + mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (h1 == h2) res = mid, l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) p[i] = p[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * base;&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(s0 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build();&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m; read(m);&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], d[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]; read(s);&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;Q&amp;#39;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            read(x, y);&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(solve(x, y));&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;R&amp;#39;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            read(x, d);&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            modify(x, d[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;I&amp;#39;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            read(x, d);&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x, d[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>GYM102412D The Jump from Height of Self-importance to Height of IQ Level</title>
        <link>https://oi.imyangty.com/sol-gym102412d/</link>
        <pubDate>Tue, 26 Oct 2021 19:14:08 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-gym102412d/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg14.webp" alt="Featured image of post GYM102412D The Jump from Height of Self-importance to Height of IQ Level" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列（&lt;span class=&#34;math inline&#34;&gt;\(3\le n\le 1.2\times10^5\)&lt;/span&gt;），&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次操作，每次操作选定 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 并向右 shift &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位。每次操作后回答排列中是否存在长度为 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 的上升子序列。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;shift 这种操作可以抽象为将一段区间取出来然后塞到另外两段区间的中间，所以考虑使用平衡树来维护这个序列。&lt;/p&gt;
&lt;p&gt;最关键的事情就变为了维护区间的信息。考虑我们维护一个区间里面是否存在需要的三元组。为了从左右儿子合并得到当前的信息，我们需要知道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左/右儿子中是否已经存在该三元组；&lt;/li&gt;
&lt;li&gt;该三元组从左儿子中抽两个加上右儿子中的一个组成；&lt;/li&gt;
&lt;li&gt;该三元组从右儿子中抽两个加上左儿子中的一个组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以我们需要维护 &lt;span class=&#34;math inline&#34;&gt;\((x_1, x_2)\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(x_1 &amp;lt; x_2\)&lt;/span&gt;）中，最小的 &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt;，这样更容易在右儿子中找到比 &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt; 大的 &lt;span class=&#34;math inline&#34;&gt;\(x_3\)&lt;/span&gt;。同理维护一个最大的 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;。这样的话，如果右儿子的最大值 &lt;span class=&#34;math inline&#34;&gt;\(x_3\)&lt;/span&gt; 大于左儿子的 &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt;；或者左儿子的最小值 &lt;span class=&#34;math inline&#34;&gt;\(x_3\)&lt;/span&gt; 小于右儿子的 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;，都视为找到合法的解。&lt;/p&gt;
&lt;p&gt;答案，最小值，最大值都很好维护，现在主要矛盾是如何维护 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt;。首先显然可以从子节点继承过来，然后考虑 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt; 分别在左右子树的情况，以维护 &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt; 为例。一个很强的 &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt; 是将最小值作为 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; 然后在右子树中递归找 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; 的后继。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;咕。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>平衡树笔记</title>
        <link>https://oi.imyangty.com/note-bst/</link>
        <pubDate>Sat, 12 Dec 2020 14:20:29 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-bst/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg8.webp" alt="Featured image of post 平衡树笔记" /&gt;&lt;h2 id=&#34;二叉搜索树bst&#34;&gt;二叉搜索树(BST)&lt;/h2&gt;
&lt;p&gt;BST 是一种常用的数据结构，每个节点储存着一个可以比较大小的权值，并且其满足如下性质：对于任意节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，其左子树（如果存在）内所有节点的权值均小于 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的权值，其右子树（如果存在）内所有节点的权值均大于 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的权值。&lt;/p&gt;
&lt;p&gt;不难发现这棵树可以做很多事情：这棵树的中序遍历就是排好序的序列，并且可以很方便的进行插入删除和查找操作（只需层层递归即可），同时可以统计一个元素的排名（只需看左边有多少节点）。&lt;/p&gt;
&lt;p&gt;然而，如果插入的序列是一个递增的序列，则 BST 的复杂度可以退化到 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;，这样的话查找一个元素的复杂度和在线性表内查找就没有什么区别了，需要进行优化。&lt;/p&gt;
&lt;p&gt;不难发现，对于一个集合，如果我们将他建构成一棵 BST，可以有很多情况，而很明显地：左右平衡的结构是相对比较优的，这样子的话操作的期望复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;，达到了我们的目的。&lt;/p&gt;
&lt;p&gt;下面学习一些比较常用的可以使 BST 平衡的手法&lt;/p&gt;
&lt;h2 id=&#34;treap&#34;&gt;Treap&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;Treap=Tree+Heap，是一种相对好写的平衡 BST（简称平衡树），从其命名可以看出来它是一个堆（Heap) 与 BST（Tree）的结合体。&lt;/p&gt;
&lt;p&gt;Treap 有如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是一棵关于元素值 val 的 BST&lt;/li&gt;
&lt;li&gt;是关于权值 priority（一般是随机的）的堆（小根大根没什么区别）&lt;/li&gt;
&lt;li&gt;val 和 priority 确定时，Treap 唯一&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样随机给元素分配权值可以使得 Treap 不容易退化成链，使查找/插入/删除/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/排名的操作都是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;h3 id=&#34;initialization&#34;&gt;Initialization&lt;/h3&gt;
&lt;p&gt;首先是 Treap 的数组形式定义（指针太难写了而且容易出奇奇怪怪的 bug）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; treap&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//存储左/右儿子的编号&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt,size;&lt;span class=&#34;co&#34;&gt;//存储当前元素的数量和子树大小&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val,p;&lt;span class=&#34;co&#34;&gt;//val为元素值，p为随机权值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}t[maxn];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面操作类似于线段树的 pushup，主要是下面信息改变后维护子树大小用&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size=t[u].cnt+t[L].size+t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;旋转&#34;&gt;旋转&lt;/h3&gt;
&lt;p&gt;接下来了解一下 Treap 的核心操作：旋转。&lt;/p&gt;
&lt;p&gt;Treap 的旋转操作只需要实行一次，说人话就是为了保持堆的性质，将某节点的儿子旋转上来，同时要使树仍满足 BST 的性质，怎么实现呢？看下图：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/treap_rotate.png&#34; title=&#34;Treap 的单旋&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;Treap 的单旋&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;画图理解后，代码就比较容易写了：&lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 是旋转方式，0 为旋转左儿子上来（右旋），1 则反之亦然。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d)&lt;span class=&#34;co&#34;&gt;// x 引用是为了方便修改，一般传进来的参就是 t[u].ch[x]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k=t[x].ch[d];&lt;span class=&#34;co&#34;&gt;//要旋转上来的节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[x].ch[d]=t[k].ch[d^&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[k].ch[d^&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]=x;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(x);&lt;span class=&#34;co&#34;&gt;//这里一定要先维护 x&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(x=k);&lt;span class=&#34;co&#34;&gt;//然后将 x 的值改变，并维护之&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的维护顺序&lt;/strong&gt;，因为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的 size 是要从 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 那里更新来的，所以要先处理好儿子的结果。&lt;/p&gt;
&lt;h3 id=&#34;插入删除&#34;&gt;插入/删除&lt;/h3&gt;
&lt;p&gt;插入操作。直接从根开始，二分查找到对应位置，如果已经存在则 &lt;code&gt;++cnt&lt;/code&gt;，如果不存在就新建节点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;co&#34;&gt;//如果 val 不存在&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u=++cnt;&lt;span class=&#34;co&#34;&gt;//开一个新节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size=t[u].cnt=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val=val;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].p=rand();&lt;span class=&#34;co&#34;&gt;//随机一个权值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size++;&lt;span class=&#34;co&#34;&gt;//因为加到子树里面了，所以 ++size&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val==val)&lt;span class=&#34;co&#34;&gt;//找到了就直接增加cnt&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d=t[u].val&amp;lt;val;&lt;span class=&#34;co&#34;&gt;//比较巧妙的写法，待插入值大的话就是1，对应右儿子，反之亦然&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(t[u].ch[d],val);&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].p&amp;gt;t[t[u].ch[d]].p)&lt;span class=&#34;co&#34;&gt;//维护小根堆，如果插入后破坏了堆的性质&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u,d);&lt;span class=&#34;co&#34;&gt;//就把对应儿子旋上来&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除操作。比较难搞，遇到一个节点的时候分为如下情况：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;当前节点不是待删除节点，递归儿子查找删除&lt;/li&gt;
&lt;li&gt;当前节点是待删除节点但是个数大于 1，个数– 然后返回&lt;/li&gt;
&lt;li&gt;当前节点是待删除节点且个数为 1&lt;/li&gt;
&lt;li&gt;至少有一个儿子为空：把另外一个儿子翻上来，然后直接丢掉自己&lt;/li&gt;
&lt;li&gt;两个儿子都不为空：把随机权值较低的儿子翻上来，然后化为 1 情况继续递归&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//访问到空了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val==val)&lt;span class=&#34;co&#34;&gt;//找到待删除节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].cnt&amp;gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//多于一个就只删除一个&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].size--;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d=t[L].p&amp;gt;t[R].p;&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;((!L)||(!R))&lt;span class=&#34;co&#34;&gt;//如果左或右有至少一边为空&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u=L+R;&lt;span class=&#34;co&#34;&gt;//直接把非空的赋给 u&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; rotate(u,d),delnode(u,val);&lt;span class=&#34;co&#34;&gt;//否则就把随机权值更小的儿子翻上来，然后递归处理&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; t[u].size--,delnode(t[u].ch[t[u].val&amp;lt;val],val);&lt;span class=&#34;co&#34;&gt;//size--，然后递归到儿子里面删除&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;查询排名第-k-大小&#34;&gt;查询排名/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/小&lt;/h3&gt;
&lt;p&gt;查询排名操作。这个就比较简单了，同时也是我们为什么要维护每个节点的 size。看代码即能理解：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//如果到了空节点，返回 1，因为排名可以排到 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val==val)&lt;span class=&#34;co&#34;&gt;//如果找到了对应的数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[L].size+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//返回左儿子的大小加 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val&amp;gt;val)&lt;span class=&#34;co&#34;&gt;//如果当前节点大于待查找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(L,val);&lt;span class=&#34;co&#34;&gt;//递归查找左儿子&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(R,val)+t[L].size+t[u].cnt;&lt;span class=&#34;co&#34;&gt;//这里比较容易错，因为需要加上左儿子和节点本身产生的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查询第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小/大。这里实现查询第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小，理解了排名操作基本就能写出来了。值得注意的是这里既可以递归操作，也可以直接迭代写出来。&lt;/p&gt;
&lt;p&gt;递归：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = L ? t[L].size : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(L, k);&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k &amp;lt;= lsize + t[u].cnt)&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(R, k - t[u].cnt - lsize);&lt;span class=&#34;co&#34;&gt;//k要减去贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非递归：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u=root;&lt;span class=&#34;co&#34;&gt;//从根节点开始向下查找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k&amp;lt;=t[L].size)&lt;span class=&#34;co&#34;&gt;//如果待查询的 k 小于左子树大小&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u=L;&lt;span class=&#34;co&#34;&gt;//往左走&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k&amp;gt;t[L].size+t[u].cnt)&lt;span class=&#34;co&#34;&gt;//如果大于了左边和本身产生的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k-=t[L].size+t[u].cnt,u=R;&lt;span class=&#34;co&#34;&gt;//首先 k 要减去贡献，然后再往右走&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;span class=&#34;co&#34;&gt;//否则就是找到了，直接返回即可&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继完整代码&#34;&gt;前驱后继/完整代码&lt;/h3&gt;
&lt;p&gt;前驱和后继。前驱的定义为“小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最大的数”。为了满足“小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;”，如果当前节点大于等于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，则在左儿子里面查找。但如果发现了小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的数，为了满足“最大的数”，要在其右子树里面继续查找，结合代码会更好理解。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;span class=&#34;co&#34;&gt;//查到了空节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -inf;&lt;span class=&#34;co&#34;&gt;//就返回一个不会对答案产生贡献的 -inf&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val&amp;gt;=val)&lt;span class=&#34;co&#34;&gt;//如果不满足“小于 val“ 的性质&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pre(L,val);&lt;span class=&#34;co&#34;&gt;//就在左儿子里面找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(pre(R,val),t[u].val);&lt;span class=&#34;co&#34;&gt;//取max是为了处理万一右儿子不存在&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; nxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;span class=&#34;co&#34;&gt;//与前驱同理&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!u)&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; inf;&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[u].val&amp;lt;=val)&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; nxt(R,val);&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min(nxt(L,val),t[u].val);&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所以 &lt;a href=&#34;https://www.luogu.com.cn/problem/P6136&#34; title=&#34;洛谷 P6136&#34;&gt;洛谷 P6136&lt;/a&gt; 的代码如下（省略了一些不关键的定义）：&lt;strong&gt;（建议不要提交 P3369，有很多问题没有考虑到的 Treap 是可以通过那道题的，建议交加强版）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;climits&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x?-s:s;&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt;+&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, inf = INT_MAX-&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root, lastans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; treap&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, p;&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, cnt;&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb10-36&#34;&gt;&lt;a href=&#34;#cb10-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-37&#34;&gt;&lt;a href=&#34;#cb10-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-38&#34;&gt;&lt;a href=&#34;#cb10-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-39&#34;&gt;&lt;a href=&#34;#cb10-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d)&lt;/span&gt;
&lt;span id=&#34;cb10-40&#34;&gt;&lt;a href=&#34;#cb10-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-41&#34;&gt;&lt;a href=&#34;#cb10-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = t[u].ch[d];&lt;/span&gt;
&lt;span id=&#34;cb10-42&#34;&gt;&lt;a href=&#34;#cb10-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].ch[d] = t[k].ch[d ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-43&#34;&gt;&lt;a href=&#34;#cb10-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[k].ch[d^&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = u;&lt;/span&gt;
&lt;span id=&#34;cb10-44&#34;&gt;&lt;a href=&#34;#cb10-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb10-45&#34;&gt;&lt;a href=&#34;#cb10-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u = k);&lt;/span&gt;
&lt;span id=&#34;cb10-46&#34;&gt;&lt;a href=&#34;#cb10-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-47&#34;&gt;&lt;a href=&#34;#cb10-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-48&#34;&gt;&lt;a href=&#34;#cb10-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-49&#34;&gt;&lt;a href=&#34;#cb10-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-50&#34;&gt;&lt;a href=&#34;#cb10-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-51&#34;&gt;&lt;a href=&#34;#cb10-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-52&#34;&gt;&lt;a href=&#34;#cb10-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-53&#34;&gt;&lt;a href=&#34;#cb10-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb10-54&#34;&gt;&lt;a href=&#34;#cb10-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-55&#34;&gt;&lt;a href=&#34;#cb10-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb10-56&#34;&gt;&lt;a href=&#34;#cb10-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].p = rand();&lt;/span&gt;
&lt;span id=&#34;cb10-57&#34;&gt;&lt;a href=&#34;#cb10-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-58&#34;&gt;&lt;a href=&#34;#cb10-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-59&#34;&gt;&lt;a href=&#34;#cb10-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size++;&lt;/span&gt;
&lt;span id=&#34;cb10-60&#34;&gt;&lt;a href=&#34;#cb10-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val == val)&lt;/span&gt;
&lt;span id=&#34;cb10-61&#34;&gt;&lt;a href=&#34;#cb10-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-62&#34;&gt;&lt;a href=&#34;#cb10-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb10-63&#34;&gt;&lt;a href=&#34;#cb10-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-64&#34;&gt;&lt;a href=&#34;#cb10-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-65&#34;&gt;&lt;a href=&#34;#cb10-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d = val &amp;gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb10-66&#34;&gt;&lt;a href=&#34;#cb10-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(t[u].ch[d], val);&lt;/span&gt;
&lt;span id=&#34;cb10-67&#34;&gt;&lt;a href=&#34;#cb10-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[t[u].ch[d]].p &amp;lt; t[u].p)&lt;/span&gt;
&lt;span id=&#34;cb10-68&#34;&gt;&lt;a href=&#34;#cb10-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u, d);&lt;/span&gt;
&lt;span id=&#34;cb10-69&#34;&gt;&lt;a href=&#34;#cb10-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-70&#34;&gt;&lt;a href=&#34;#cb10-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-71&#34;&gt;&lt;a href=&#34;#cb10-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-72&#34;&gt;&lt;a href=&#34;#cb10-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-73&#34;&gt;&lt;a href=&#34;#cb10-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-74&#34;&gt;&lt;a href=&#34;#cb10-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-75&#34;&gt;&lt;a href=&#34;#cb10-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-76&#34;&gt;&lt;a href=&#34;#cb10-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val == val)&lt;/span&gt;
&lt;span id=&#34;cb10-77&#34;&gt;&lt;a href=&#34;#cb10-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-78&#34;&gt;&lt;a href=&#34;#cb10-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-79&#34;&gt;&lt;a href=&#34;#cb10-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-80&#34;&gt;&lt;a href=&#34;#cb10-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb10-81&#34;&gt;&lt;a href=&#34;#cb10-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[u].size--;&lt;/span&gt;
&lt;span id=&#34;cb10-82&#34;&gt;&lt;a href=&#34;#cb10-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-83&#34;&gt;&lt;a href=&#34;#cb10-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-84&#34;&gt;&lt;a href=&#34;#cb10-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((!L) || (!R))&lt;/span&gt;
&lt;span id=&#34;cb10-85&#34;&gt;&lt;a href=&#34;#cb10-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L + R;&lt;/span&gt;
&lt;span id=&#34;cb10-86&#34;&gt;&lt;a href=&#34;#cb10-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-87&#34;&gt;&lt;a href=&#34;#cb10-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-88&#34;&gt;&lt;a href=&#34;#cb10-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d = t[L].p &amp;gt; t[R].p;&lt;/span&gt;
&lt;span id=&#34;cb10-89&#34;&gt;&lt;a href=&#34;#cb10-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rotate(u, d);&lt;/span&gt;
&lt;span id=&#34;cb10-90&#34;&gt;&lt;a href=&#34;#cb10-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(u, val);&lt;/span&gt;
&lt;span id=&#34;cb10-91&#34;&gt;&lt;a href=&#34;#cb10-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-92&#34;&gt;&lt;a href=&#34;#cb10-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-93&#34;&gt;&lt;a href=&#34;#cb10-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-94&#34;&gt;&lt;a href=&#34;#cb10-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size--, delnode(t[u].ch[val &amp;gt; t[u].val], val);&lt;/span&gt;
&lt;span id=&#34;cb10-95&#34;&gt;&lt;a href=&#34;#cb10-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-96&#34;&gt;&lt;a href=&#34;#cb10-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-97&#34;&gt;&lt;a href=&#34;#cb10-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-98&#34;&gt;&lt;a href=&#34;#cb10-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-99&#34;&gt;&lt;a href=&#34;#cb10-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-100&#34;&gt;&lt;a href=&#34;#cb10-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-101&#34;&gt;&lt;a href=&#34;#cb10-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-102&#34;&gt;&lt;a href=&#34;#cb10-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val == t[u].val)&lt;/span&gt;
&lt;span id=&#34;cb10-103&#34;&gt;&lt;a href=&#34;#cb10-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-104&#34;&gt;&lt;a href=&#34;#cb10-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;lt; t[u].val)&lt;/span&gt;
&lt;span id=&#34;cb10-105&#34;&gt;&lt;a href=&#34;#cb10-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(L, val);&lt;/span&gt;
&lt;span id=&#34;cb10-106&#34;&gt;&lt;a href=&#34;#cb10-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; rank(R, val) + t[L].size + t[u].cnt;&lt;/span&gt;
&lt;span id=&#34;cb10-107&#34;&gt;&lt;a href=&#34;#cb10-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-108&#34;&gt;&lt;a href=&#34;#cb10-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-109&#34;&gt;&lt;a href=&#34;#cb10-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb10-110&#34;&gt;&lt;a href=&#34;#cb10-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-111&#34;&gt;&lt;a href=&#34;#cb10-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-112&#34;&gt;&lt;a href=&#34;#cb10-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-113&#34;&gt;&lt;a href=&#34;#cb10-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = L ? t[L].size : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-114&#34;&gt;&lt;a href=&#34;#cb10-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb10-115&#34;&gt;&lt;a href=&#34;#cb10-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(L, k);&lt;/span&gt;
&lt;span id=&#34;cb10-116&#34;&gt;&lt;a href=&#34;#cb10-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(k &amp;lt;= lsize + t[u].cnt)&lt;/span&gt;
&lt;span id=&#34;cb10-117&#34;&gt;&lt;a href=&#34;#cb10-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb10-118&#34;&gt;&lt;a href=&#34;#cb10-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(R, k - t[u].cnt - lsize);&lt;/span&gt;
&lt;span id=&#34;cb10-119&#34;&gt;&lt;a href=&#34;#cb10-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-120&#34;&gt;&lt;a href=&#34;#cb10-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-121&#34;&gt;&lt;a href=&#34;#cb10-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-122&#34;&gt;&lt;a href=&#34;#cb10-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-123&#34;&gt;&lt;a href=&#34;#cb10-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-124&#34;&gt;&lt;a href=&#34;#cb10-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -inf;&lt;/span&gt;
&lt;span id=&#34;cb10-125&#34;&gt;&lt;a href=&#34;#cb10-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;gt;= val)&lt;/span&gt;
&lt;span id=&#34;cb10-126&#34;&gt;&lt;a href=&#34;#cb10-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pre(L, val);&lt;/span&gt;
&lt;span id=&#34;cb10-127&#34;&gt;&lt;a href=&#34;#cb10-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(t[u].val, pre(R, val));&lt;/span&gt;
&lt;span id=&#34;cb10-128&#34;&gt;&lt;a href=&#34;#cb10-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-129&#34;&gt;&lt;a href=&#34;#cb10-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-130&#34;&gt;&lt;a href=&#34;#cb10-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb10-131&#34;&gt;&lt;a href=&#34;#cb10-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-132&#34;&gt;&lt;a href=&#34;#cb10-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb10-133&#34;&gt;&lt;a href=&#34;#cb10-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; inf;&lt;/span&gt;
&lt;span id=&#34;cb10-134&#34;&gt;&lt;a href=&#34;#cb10-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= val)&lt;/span&gt;
&lt;span id=&#34;cb10-135&#34;&gt;&lt;a href=&#34;#cb10-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; suc(R, val);&lt;/span&gt;
&lt;span id=&#34;cb10-136&#34;&gt;&lt;a href=&#34;#cb10-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min(t[u].val, suc(L, val));&lt;/span&gt;
&lt;span id=&#34;cb10-137&#34;&gt;&lt;a href=&#34;#cb10-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-138&#34;&gt;&lt;a href=&#34;#cb10-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-139&#34;&gt;&lt;a href=&#34;#cb10-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb10-140&#34;&gt;&lt;a href=&#34;#cb10-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-141&#34;&gt;&lt;a href=&#34;#cb10-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb10-142&#34;&gt;&lt;a href=&#34;#cb10-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-143&#34;&gt;&lt;a href=&#34;#cb10-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb10-144&#34;&gt;&lt;a href=&#34;#cb10-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(root, read());&lt;/span&gt;
&lt;span id=&#34;cb10-145&#34;&gt;&lt;a href=&#34;#cb10-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--)&lt;/span&gt;
&lt;span id=&#34;cb10-146&#34;&gt;&lt;a href=&#34;#cb10-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-147&#34;&gt;&lt;a href=&#34;#cb10-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read() ^ lastans;&lt;/span&gt;
&lt;span id=&#34;cb10-148&#34;&gt;&lt;a href=&#34;#cb10-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt)&lt;/span&gt;
&lt;span id=&#34;cb10-149&#34;&gt;&lt;a href=&#34;#cb10-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-150&#34;&gt;&lt;a href=&#34;#cb10-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-151&#34;&gt;&lt;a href=&#34;#cb10-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(root, x);&lt;/span&gt;
&lt;span id=&#34;cb10-152&#34;&gt;&lt;a href=&#34;#cb10-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-153&#34;&gt;&lt;a href=&#34;#cb10-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-154&#34;&gt;&lt;a href=&#34;#cb10-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(root, x);&lt;/span&gt;
&lt;span id=&#34;cb10-155&#34;&gt;&lt;a href=&#34;#cb10-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-156&#34;&gt;&lt;a href=&#34;#cb10-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-157&#34;&gt;&lt;a href=&#34;#cb10-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = rank(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-158&#34;&gt;&lt;a href=&#34;#cb10-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-159&#34;&gt;&lt;a href=&#34;#cb10-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-160&#34;&gt;&lt;a href=&#34;#cb10-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = kth(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-161&#34;&gt;&lt;a href=&#34;#cb10-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-162&#34;&gt;&lt;a href=&#34;#cb10-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-163&#34;&gt;&lt;a href=&#34;#cb10-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = pre(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-164&#34;&gt;&lt;a href=&#34;#cb10-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-165&#34;&gt;&lt;a href=&#34;#cb10-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb10-166&#34;&gt;&lt;a href=&#34;#cb10-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = suc(root, x));&lt;/span&gt;
&lt;span id=&#34;cb10-167&#34;&gt;&lt;a href=&#34;#cb10-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-168&#34;&gt;&lt;a href=&#34;#cb10-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-169&#34;&gt;&lt;a href=&#34;#cb10-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-170&#34;&gt;&lt;a href=&#34;#cb10-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb10-171&#34;&gt;&lt;a href=&#34;#cb10-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-172&#34;&gt;&lt;a href=&#34;#cb10-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;fhq-treap无旋-treap&#34;&gt;FHQ-Treap（无旋 Treap）&lt;/h2&gt;
&lt;p&gt;由范浩强大佬发明的神级数据结构，相比于 Treap 不用旋转，且增添了两个核心操作：分裂（split）与合并（merge），这两个操作是无旋 Treap 的核心操作，其余的所有操作都是基于 split 和 merge 的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;两个值相同的元素是分别储存在两个不同的节点里面的，不像 Treap 的 &lt;code&gt;cnt&lt;/code&gt; 域&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;分裂&#34;&gt;分裂&lt;/h3&gt;
&lt;p&gt;该操作把一棵 Treap 分裂成两棵，有两种分裂方法：按值分裂以及按大小分裂。这里先考虑按值分裂。&lt;/p&gt;
&lt;p&gt;该种分裂方式按照一个阈值 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 把一棵 Treap 分裂成两棵，满足左树的所有元素值均&lt;strong&gt;小于等于&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，右树的所有元素值均&lt;strong&gt;大于&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。由于 Treap 满足堆的性质，所以直接分裂即可，不需要特殊维护。&lt;/p&gt;
&lt;p&gt;一般来说 &lt;code&gt;split()&lt;/code&gt; 函数使用递归实现：&lt;code&gt;void split(int u, int k, int &amp;amp;x, int &amp;amp;y)&lt;/code&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 表示当前节点，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 不再赘述，两个引用 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 是放返回值（即分裂出来的左树的根和右树的根）的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x = u;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            split(R, k, R, y);&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            y = u;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            split(L, k, x, L);&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来解释一下上面的代码：&lt;/p&gt;
&lt;p&gt;首先如果这个节点不存在，就不能再继续了，直接 &lt;code&gt;x = y = 0;&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;然后如果这个节点的值小于等于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则这个节点肯定是划到左树里面去了，所以有 &lt;code&gt;x = u;&lt;/code&gt;，然后对于这个节点的左子树，肯定是被划到左子树里面去的，所以继续分裂右子树，即 &lt;code&gt;split(R, k, R, y);&lt;/code&gt;。如果无法理解，下面来看看具体步骤：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split1.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;初始的树&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这是一棵分裂前的 FHQ-Treap（省略了节点编号和随机权值，只保留了值），让我们以阈值 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt; 将其分裂。一开始 &lt;code&gt;split(root, 7, x, y)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;首先我们找到树根 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(6 \le 7\)&lt;/span&gt;，所以划到左树里面，同时它的左子树也都属于左树。（属于左树的节点标红）&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split2.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来 &lt;code&gt;split(R, k, R, y)&lt;/code&gt; 即 &lt;code&gt;split(10的编号, 7, t[6].ch[1], y)&lt;/code&gt; 现在来到节点 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;，注意到 &lt;span class=&#34;math inline&#34;&gt;\(10 &amp;gt; 6\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 划给右树，&lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 的所有右节点也都划给右树：此时 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 就被赋为 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 的编号。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split3.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;然后 &lt;code&gt;split(L, k，x, L)&lt;/code&gt; 即 &lt;code&gt;split(8的编号, 7, t[6].ch[1], t[10].ch[0])&lt;/code&gt;，&lt;span class=&#34;math inline&#34;&gt;\(8 &amp;gt; 7\)&lt;/span&gt;&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split4.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来 &lt;code&gt;split(L, k, x, L)&lt;/code&gt; 即 &lt;code&gt;split(7的编号, 7, t[6].ch[1], t[8].ch[0])&lt;/code&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\(7 \le 7\)&lt;/span&gt;，所以划到左子树，并且 &lt;span class=&#34;math inline&#34;&gt;\(x=u\)&lt;/span&gt;，即把 &lt;code&gt;t[6].ch[1]&lt;/code&gt; 赋为 7，&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/fhq_split5.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 4&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;然后 &lt;code&gt;split(R, k, R, y)&lt;/code&gt; 即 &lt;code&gt;split(0, 7, t[7].ch[1], t[8].ch[0])&lt;/code&gt;，发现节点不存在，将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 都赋为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，返回即可。这样就完成了分裂。&lt;/p&gt;
&lt;p&gt;总结一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遇到比小于等于阈值的节点，由于其左子树一定划为左树，所以要继续分裂右子树，传下去左树的根是当前节点的右儿子，在更深的递归层会更新。&lt;/li&gt;
&lt;li&gt;遇到大于阈值的节点，同理，分裂左子树，传下去右树的根是当前节点的左儿子，在更深的递归层会更新&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个递归可能一开始不太好理解，但是理解了会发现其实挺简单的。&lt;/p&gt;
&lt;h3 id=&#34;合并&#34;&gt;合并&lt;/h3&gt;
&lt;p&gt;合并的时候是把两棵 FHQ-Treap &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 合并成一棵，必须满足：&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 中所有节点的值小于等于 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 中所有节点的值，然后合并的结果也要满足 Treap 的性质（即堆的性质）。&lt;/p&gt;
&lt;p&gt;合并函数 &lt;code&gt;int merge(int x, int y)&lt;/code&gt; 返回合并后的树根，&lt;span class=&#34;math inline&#34;&gt;\(x,y\)&lt;/span&gt; 分别为两棵待合并树的根。由于要维护堆的性质，实现如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y)&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key) {&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(x);&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(y);&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先如果两棵树的其中一棵为空，则直接返回另一棵的根即可。&lt;/p&gt;
&lt;p&gt;然后维护一个小根堆（小根大根其实无所谓），如果发现左边子树根（&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;）的权小一些，说明是 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 做父亲，将其右子树与 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 合并的结果作为其右子树即可，合并完记得 pushup 一下就行了。&lt;/p&gt;
&lt;p&gt;反之亦然，将 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左子树与 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 合并的结果作为 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左子树即可，&lt;strong&gt;注意传参的顺序：先传左树后传右树&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;还是比较好理解的。学习完了两个基本操作，就可以很轻松的实现插入删除排名 &lt;span class=&#34;math inline&#34;&gt;\(k\text{th}\)&lt;/span&gt; 前驱后继等操作了。&lt;/p&gt;
&lt;h3 id=&#34;插入&#34;&gt;插入&lt;/h3&gt;
&lt;p&gt;值得注意的是，FHQ-Treap 在处理相同值的时候是单独开新节点的，不像一般的 Treap 维护 &lt;code&gt;cnt&lt;/code&gt; 域。&lt;/p&gt;
&lt;p&gt;核心思想就是以待插入值为阈值分裂成树 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，新节点和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 合并即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[++cnt].val = val;&lt;span class=&#34;co&#34;&gt;//开新节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].key = rnd();&lt;span class=&#34;co&#34;&gt;//随机分配权&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;span class=&#34;co&#34;&gt;//临时变量&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;span class=&#34;co&#34;&gt;//按照 val 分裂&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, cnt), y);&lt;span class=&#34;co&#34;&gt;//先合并 x 和新节点，再将结果与 y 合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;删除&#34;&gt;删除&lt;/h3&gt;
&lt;p&gt;这个操作比较精妙：考虑删除 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;，先将整棵树分裂成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 三棵树，满足：&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 中所有节点值均小于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 中均等于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 中均大于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;。这时候我们发现要删除一个 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 就只需要拿掉 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的根节点就可以了，其等价于直接合并 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左右子树。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;span class=&#34;co&#34;&gt;//按照 val-1 分裂出 x 树&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(y, val, y, z);&lt;span class=&#34;co&#34;&gt;//再按照 val 分裂出 y 和 z&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = merge(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t[y].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//直接拿掉 y 的根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, y), z);&lt;span class=&#34;co&#34;&gt;//再复原就可以了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;排名第-k-大小&#34;&gt;排名/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/小&lt;/h3&gt;
&lt;p&gt;查询排名很类似于删除操作，但只需要分裂出小于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 的树然后返回其大小加一的值即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[x].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然而查询 &lt;span class=&#34;math inline&#34;&gt;\(k\text{th}\)&lt;/span&gt; 时就不能分裂/合并了，老老实实按照大多数平衡树的写法就可以了，建议非递归，常数小一些。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L)&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lsize = t[L].size;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, u = R;&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继&#34;&gt;前驱/后继&lt;/h3&gt;
&lt;p&gt;前驱：小于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 且最大的数，所以利用排名和 &lt;span class=&#34;math inline&#34;&gt;\(k\text{th}\)&lt;/span&gt; 即可。查找 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的排名然后输出对应该排名减一的数即可。&lt;/p&gt;
&lt;p&gt;后继：查找 &lt;span class=&#34;math inline&#34;&gt;\(x+1\)&lt;/span&gt; 的排名然后输出该排名对应的数即可&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;普通平衡树的实现&#34;&gt;普通平衡树的实现&lt;/h3&gt;
&lt;p&gt;可以发现代码明显短于一般 Treap 和 Splay，但常数大于 Treap 小于 Splay。&lt;strong&gt;关键是特别好写好背&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6136&#34; title=&#34;洛谷 P6136&#34;&gt;洛谷 P6136&lt;/a&gt; 的代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb18-14&#34;&gt;&lt;a href=&#34;#cb18-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb18-15&#34;&gt;&lt;a href=&#34;#cb18-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb18-16&#34;&gt;&lt;a href=&#34;#cb18-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-17&#34;&gt;&lt;a href=&#34;#cb18-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-18&#34;&gt;&lt;a href=&#34;#cb18-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb18-19&#34;&gt;&lt;a href=&#34;#cb18-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size;&lt;/span&gt;
&lt;span id=&#34;cb18-20&#34;&gt;&lt;a href=&#34;#cb18-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb18-21&#34;&gt;&lt;a href=&#34;#cb18-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, key;&lt;/span&gt;
&lt;span id=&#34;cb18-22&#34;&gt;&lt;a href=&#34;#cb18-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb18-23&#34;&gt;&lt;a href=&#34;#cb18-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb18-24&#34;&gt;&lt;a href=&#34;#cb18-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-25&#34;&gt;&lt;a href=&#34;#cb18-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-26&#34;&gt;&lt;a href=&#34;#cb18-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb18-27&#34;&gt;&lt;a href=&#34;#cb18-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-28&#34;&gt;&lt;a href=&#34;#cb18-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb18-29&#34;&gt;&lt;a href=&#34;#cb18-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-30&#34;&gt;&lt;a href=&#34;#cb18-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-31&#34;&gt;&lt;a href=&#34;#cb18-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-32&#34;&gt;&lt;a href=&#34;#cb18-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-33&#34;&gt;&lt;a href=&#34;#cb18-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb18-34&#34;&gt;&lt;a href=&#34;#cb18-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb18-35&#34;&gt;&lt;a href=&#34;#cb18-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-36&#34;&gt;&lt;a href=&#34;#cb18-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-37&#34;&gt;&lt;a href=&#34;#cb18-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-38&#34;&gt;&lt;a href=&#34;#cb18-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb18-39&#34;&gt;&lt;a href=&#34;#cb18-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u;&lt;/span&gt;
&lt;span id=&#34;cb18-40&#34;&gt;&lt;a href=&#34;#cb18-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(R, k, R, y);&lt;/span&gt;
&lt;span id=&#34;cb18-41&#34;&gt;&lt;a href=&#34;#cb18-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-42&#34;&gt;&lt;a href=&#34;#cb18-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb18-43&#34;&gt;&lt;a href=&#34;#cb18-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u;&lt;/span&gt;
&lt;span id=&#34;cb18-44&#34;&gt;&lt;a href=&#34;#cb18-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(L, k, x, L);&lt;/span&gt;
&lt;span id=&#34;cb18-45&#34;&gt;&lt;a href=&#34;#cb18-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-46&#34;&gt;&lt;a href=&#34;#cb18-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb18-47&#34;&gt;&lt;a href=&#34;#cb18-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-48&#34;&gt;&lt;a href=&#34;#cb18-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-49&#34;&gt;&lt;a href=&#34;#cb18-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-50&#34;&gt;&lt;a href=&#34;#cb18-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb18-51&#34;&gt;&lt;a href=&#34;#cb18-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y)&lt;/span&gt;
&lt;span id=&#34;cb18-52&#34;&gt;&lt;a href=&#34;#cb18-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb18-53&#34;&gt;&lt;a href=&#34;#cb18-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key) {&lt;/span&gt;
&lt;span id=&#34;cb18-54&#34;&gt;&lt;a href=&#34;#cb18-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb18-55&#34;&gt;&lt;a href=&#34;#cb18-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(x);&lt;/span&gt;
&lt;span id=&#34;cb18-56&#34;&gt;&lt;a href=&#34;#cb18-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb18-57&#34;&gt;&lt;a href=&#34;#cb18-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-58&#34;&gt;&lt;a href=&#34;#cb18-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb18-59&#34;&gt;&lt;a href=&#34;#cb18-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb18-60&#34;&gt;&lt;a href=&#34;#cb18-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(y);&lt;/span&gt;
&lt;span id=&#34;cb18-61&#34;&gt;&lt;a href=&#34;#cb18-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y;&lt;/span&gt;
&lt;span id=&#34;cb18-62&#34;&gt;&lt;a href=&#34;#cb18-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-63&#34;&gt;&lt;a href=&#34;#cb18-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-64&#34;&gt;&lt;a href=&#34;#cb18-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-65&#34;&gt;&lt;a href=&#34;#cb18-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-66&#34;&gt;&lt;a href=&#34;#cb18-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[++cnt].val = val;&lt;/span&gt;
&lt;span id=&#34;cb18-67&#34;&gt;&lt;a href=&#34;#cb18-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].key = rand();&lt;/span&gt;
&lt;span id=&#34;cb18-68&#34;&gt;&lt;a href=&#34;#cb18-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-69&#34;&gt;&lt;a href=&#34;#cb18-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb18-70&#34;&gt;&lt;a href=&#34;#cb18-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-71&#34;&gt;&lt;a href=&#34;#cb18-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, cnt), y);&lt;/span&gt;
&lt;span id=&#34;cb18-72&#34;&gt;&lt;a href=&#34;#cb18-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-73&#34;&gt;&lt;a href=&#34;#cb18-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-74&#34;&gt;&lt;a href=&#34;#cb18-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-75&#34;&gt;&lt;a href=&#34;#cb18-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-76&#34;&gt;&lt;a href=&#34;#cb18-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb18-77&#34;&gt;&lt;a href=&#34;#cb18-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-78&#34;&gt;&lt;a href=&#34;#cb18-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(y, val, y, z);&lt;/span&gt;
&lt;span id=&#34;cb18-79&#34;&gt;&lt;a href=&#34;#cb18-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = merge(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t[y].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb18-80&#34;&gt;&lt;a href=&#34;#cb18-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb18-81&#34;&gt;&lt;a href=&#34;#cb18-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-82&#34;&gt;&lt;a href=&#34;#cb18-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-83&#34;&gt;&lt;a href=&#34;#cb18-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-84&#34;&gt;&lt;a href=&#34;#cb18-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-85&#34;&gt;&lt;a href=&#34;#cb18-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb18-86&#34;&gt;&lt;a href=&#34;#cb18-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-87&#34;&gt;&lt;a href=&#34;#cb18-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[x].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-88&#34;&gt;&lt;a href=&#34;#cb18-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb18-89&#34;&gt;&lt;a href=&#34;#cb18-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb18-90&#34;&gt;&lt;a href=&#34;#cb18-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-91&#34;&gt;&lt;a href=&#34;#cb18-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-92&#34;&gt;&lt;a href=&#34;#cb18-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb18-93&#34;&gt;&lt;a href=&#34;#cb18-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb18-94&#34;&gt;&lt;a href=&#34;#cb18-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb18-95&#34;&gt;&lt;a href=&#34;#cb18-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lsize = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-96&#34;&gt;&lt;a href=&#34;#cb18-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L) lsize = t[L].size;&lt;/span&gt;
&lt;span id=&#34;cb18-97&#34;&gt;&lt;a href=&#34;#cb18-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= lsize)&lt;/span&gt;
&lt;span id=&#34;cb18-98&#34;&gt;&lt;a href=&#34;#cb18-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb18-99&#34;&gt;&lt;a href=&#34;#cb18-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-100&#34;&gt;&lt;a href=&#34;#cb18-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= lsize + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, u = R;&lt;/span&gt;
&lt;span id=&#34;cb18-101&#34;&gt;&lt;a href=&#34;#cb18-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb18-102&#34;&gt;&lt;a href=&#34;#cb18-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-103&#34;&gt;&lt;a href=&#34;#cb18-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-104&#34;&gt;&lt;a href=&#34;#cb18-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-105&#34;&gt;&lt;a href=&#34;#cb18-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-106&#34;&gt;&lt;a href=&#34;#cb18-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-107&#34;&gt;&lt;a href=&#34;#cb18-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-108&#34;&gt;&lt;a href=&#34;#cb18-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-109&#34;&gt;&lt;a href=&#34;#cb18-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb18-110&#34;&gt;&lt;a href=&#34;#cb18-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; kth(rank(val + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb18-111&#34;&gt;&lt;a href=&#34;#cb18-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-112&#34;&gt;&lt;a href=&#34;#cb18-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-113&#34;&gt;&lt;a href=&#34;#cb18-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb18-114&#34;&gt;&lt;a href=&#34;#cb18-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read(), ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lastans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-115&#34;&gt;&lt;a href=&#34;#cb18-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-116&#34;&gt;&lt;a href=&#34;#cb18-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb18-117&#34;&gt;&lt;a href=&#34;#cb18-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(read());&lt;/span&gt;
&lt;span id=&#34;cb18-118&#34;&gt;&lt;a href=&#34;#cb18-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb18-119&#34;&gt;&lt;a href=&#34;#cb18-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read() ^ lastans;&lt;/span&gt;
&lt;span id=&#34;cb18-120&#34;&gt;&lt;a href=&#34;#cb18-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt) {&lt;/span&gt;
&lt;span id=&#34;cb18-121&#34;&gt;&lt;a href=&#34;#cb18-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-122&#34;&gt;&lt;a href=&#34;#cb18-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x);&lt;/span&gt;
&lt;span id=&#34;cb18-123&#34;&gt;&lt;a href=&#34;#cb18-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-124&#34;&gt;&lt;a href=&#34;#cb18-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-125&#34;&gt;&lt;a href=&#34;#cb18-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(x);&lt;/span&gt;
&lt;span id=&#34;cb18-126&#34;&gt;&lt;a href=&#34;#cb18-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-127&#34;&gt;&lt;a href=&#34;#cb18-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-128&#34;&gt;&lt;a href=&#34;#cb18-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = rank(x));&lt;/span&gt;
&lt;span id=&#34;cb18-129&#34;&gt;&lt;a href=&#34;#cb18-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-130&#34;&gt;&lt;a href=&#34;#cb18-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-131&#34;&gt;&lt;a href=&#34;#cb18-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = kth(x));&lt;/span&gt;
&lt;span id=&#34;cb18-132&#34;&gt;&lt;a href=&#34;#cb18-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-133&#34;&gt;&lt;a href=&#34;#cb18-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-134&#34;&gt;&lt;a href=&#34;#cb18-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = pre(x));&lt;/span&gt;
&lt;span id=&#34;cb18-135&#34;&gt;&lt;a href=&#34;#cb18-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-136&#34;&gt;&lt;a href=&#34;#cb18-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb18-137&#34;&gt;&lt;a href=&#34;#cb18-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (lastans = suc(x));&lt;/span&gt;
&lt;span id=&#34;cb18-138&#34;&gt;&lt;a href=&#34;#cb18-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-139&#34;&gt;&lt;a href=&#34;#cb18-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb18-140&#34;&gt;&lt;a href=&#34;#cb18-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-141&#34;&gt;&lt;a href=&#34;#cb18-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb18-142&#34;&gt;&lt;a href=&#34;#cb18-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-143&#34;&gt;&lt;a href=&#34;#cb18-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;按大小分裂文艺平衡树的实现&#34;&gt;按大小分裂/文艺平衡树的实现&lt;/h3&gt;
&lt;p&gt;FHQ-Treap 还有另外一种分裂方式：按大小分裂，将一棵 FHQ-Treap 分裂成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的大小为给定值。这样子分裂能够让我们更好更方便地处理区间问题，下面以文艺平衡树为例：&lt;/p&gt;
&lt;p&gt;首先是分裂函数：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[L].size &amp;lt; size)&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u, split(R, size - t[L].size - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, R, y);&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb19-10&#34;&gt;&lt;a href=&#34;#cb19-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u, split(L, size, x, L);&lt;/span&gt;
&lt;span id=&#34;cb19-11&#34;&gt;&lt;a href=&#34;#cb19-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb19-12&#34;&gt;&lt;a href=&#34;#cb19-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-13&#34;&gt;&lt;a href=&#34;#cb19-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基本和一般的按值分裂是差不多的，只不过要注意的就是如果要继续分裂右子树，传下去的 &lt;code&gt;size&lt;/code&gt; 值是需要改变的。&lt;/p&gt;
&lt;p&gt;剩下的也没什么了，对于要翻转区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，直接分裂成三棵树。具体地，按照 &lt;span class=&#34;math inline&#34;&gt;\(l-1\)&lt;/span&gt; 分裂成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，再将 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 按照 &lt;span class=&#34;math inline&#34;&gt;\(r-l+1\)&lt;/span&gt; 分裂成 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt;，此时 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 树就是提取出来的区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，打上标记即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现文艺平衡树的时候需要特别注意标记的下传&lt;/strong&gt;，实现如下，比 Splay 简洁且不容易写错。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;100000&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb20-9&#34;&gt;&lt;a href=&#34;#cb20-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-10&#34;&gt;&lt;a href=&#34;#cb20-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-11&#34;&gt;&lt;a href=&#34;#cb20-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb20-12&#34;&gt;&lt;a href=&#34;#cb20-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb20-13&#34;&gt;&lt;a href=&#34;#cb20-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb20-14&#34;&gt;&lt;a href=&#34;#cb20-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb20-15&#34;&gt;&lt;a href=&#34;#cb20-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb20-16&#34;&gt;&lt;a href=&#34;#cb20-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-17&#34;&gt;&lt;a href=&#34;#cb20-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-18&#34;&gt;&lt;a href=&#34;#cb20-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb20-19&#34;&gt;&lt;a href=&#34;#cb20-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb20-20&#34;&gt;&lt;a href=&#34;#cb20-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size;&lt;/span&gt;
&lt;span id=&#34;cb20-21&#34;&gt;&lt;a href=&#34;#cb20-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, key;&lt;/span&gt;
&lt;span id=&#34;cb20-22&#34;&gt;&lt;a href=&#34;#cb20-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; tag;&lt;/span&gt;
&lt;span id=&#34;cb20-23&#34;&gt;&lt;a href=&#34;#cb20-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb20-24&#34;&gt;&lt;a href=&#34;#cb20-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb20-25&#34;&gt;&lt;a href=&#34;#cb20-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb20-26&#34;&gt;&lt;a href=&#34;#cb20-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-27&#34;&gt;&lt;a href=&#34;#cb20-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb20-28&#34;&gt;&lt;a href=&#34;#cb20-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-29&#34;&gt;&lt;a href=&#34;#cb20-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb20-30&#34;&gt;&lt;a href=&#34;#cb20-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-31&#34;&gt;&lt;a href=&#34;#cb20-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-32&#34;&gt;&lt;a href=&#34;#cb20-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-33&#34;&gt;&lt;a href=&#34;#cb20-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-34&#34;&gt;&lt;a href=&#34;#cb20-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushdown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb20-35&#34;&gt;&lt;a href=&#34;#cb20-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].tag) {&lt;/span&gt;
&lt;span id=&#34;cb20-36&#34;&gt;&lt;a href=&#34;#cb20-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = L; L = R; R = tmp;&lt;/span&gt;
&lt;span id=&#34;cb20-37&#34;&gt;&lt;a href=&#34;#cb20-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[L].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[R].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-38&#34;&gt;&lt;a href=&#34;#cb20-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].tag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-39&#34;&gt;&lt;a href=&#34;#cb20-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-40&#34;&gt;&lt;a href=&#34;#cb20-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-41&#34;&gt;&lt;a href=&#34;#cb20-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-42&#34;&gt;&lt;a href=&#34;#cb20-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-43&#34;&gt;&lt;a href=&#34;#cb20-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb20-44&#34;&gt;&lt;a href=&#34;#cb20-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb20-45&#34;&gt;&lt;a href=&#34;#cb20-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-46&#34;&gt;&lt;a href=&#34;#cb20-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-47&#34;&gt;&lt;a href=&#34;#cb20-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-48&#34;&gt;&lt;a href=&#34;#cb20-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb20-49&#34;&gt;&lt;a href=&#34;#cb20-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[L].size &amp;lt; size)&lt;/span&gt;
&lt;span id=&#34;cb20-50&#34;&gt;&lt;a href=&#34;#cb20-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u, split(R, size - t[L].size - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, R, y);&lt;/span&gt;
&lt;span id=&#34;cb20-51&#34;&gt;&lt;a href=&#34;#cb20-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-52&#34;&gt;&lt;a href=&#34;#cb20-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u, split(L, size, x, L);&lt;/span&gt;
&lt;span id=&#34;cb20-53&#34;&gt;&lt;a href=&#34;#cb20-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb20-54&#34;&gt;&lt;a href=&#34;#cb20-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-55&#34;&gt;&lt;a href=&#34;#cb20-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-56&#34;&gt;&lt;a href=&#34;#cb20-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-57&#34;&gt;&lt;a href=&#34;#cb20-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb20-58&#34;&gt;&lt;a href=&#34;#cb20-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y)&lt;/span&gt;
&lt;span id=&#34;cb20-59&#34;&gt;&lt;a href=&#34;#cb20-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb20-60&#34;&gt;&lt;a href=&#34;#cb20-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key)&lt;/span&gt;
&lt;span id=&#34;cb20-61&#34;&gt;&lt;a href=&#34;#cb20-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pushdown(x), t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y), pushup(x), x;&lt;/span&gt;
&lt;span id=&#34;cb20-62&#34;&gt;&lt;a href=&#34;#cb20-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-63&#34;&gt;&lt;a href=&#34;#cb20-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pushdown(y), t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]), pushup(y), y;&lt;/span&gt;
&lt;span id=&#34;cb20-64&#34;&gt;&lt;a href=&#34;#cb20-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-65&#34;&gt;&lt;a href=&#34;#cb20-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-66&#34;&gt;&lt;a href=&#34;#cb20-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; newnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb20-67&#34;&gt;&lt;a href=&#34;#cb20-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[++cnt].val = val;&lt;/span&gt;
&lt;span id=&#34;cb20-68&#34;&gt;&lt;a href=&#34;#cb20-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].key = rand();&lt;/span&gt;
&lt;span id=&#34;cb20-69&#34;&gt;&lt;a href=&#34;#cb20-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[cnt].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-70&#34;&gt;&lt;a href=&#34;#cb20-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cnt;&lt;/span&gt;
&lt;span id=&#34;cb20-71&#34;&gt;&lt;a href=&#34;#cb20-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-72&#34;&gt;&lt;a href=&#34;#cb20-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-73&#34;&gt;&lt;a href=&#34;#cb20-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; reverse(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb20-74&#34;&gt;&lt;a href=&#34;#cb20-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb20-75&#34;&gt;&lt;a href=&#34;#cb20-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb20-76&#34;&gt;&lt;a href=&#34;#cb20-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(y, r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y, z);&lt;/span&gt;
&lt;span id=&#34;cb20-77&#34;&gt;&lt;a href=&#34;#cb20-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[y].tag ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-78&#34;&gt;&lt;a href=&#34;#cb20-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb20-79&#34;&gt;&lt;a href=&#34;#cb20-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-80&#34;&gt;&lt;a href=&#34;#cb20-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-81&#34;&gt;&lt;a href=&#34;#cb20-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-82&#34;&gt;&lt;a href=&#34;#cb20-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb20-83&#34;&gt;&lt;a href=&#34;#cb20-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb20-84&#34;&gt;&lt;a href=&#34;#cb20-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-85&#34;&gt;&lt;a href=&#34;#cb20-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb20-86&#34;&gt;&lt;a href=&#34;#cb20-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(L);&lt;/span&gt;
&lt;span id=&#34;cb20-87&#34;&gt;&lt;a href=&#34;#cb20-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, t[u].val);&lt;/span&gt;
&lt;span id=&#34;cb20-88&#34;&gt;&lt;a href=&#34;#cb20-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(R);&lt;/span&gt;
&lt;span id=&#34;cb20-89&#34;&gt;&lt;a href=&#34;#cb20-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-90&#34;&gt;&lt;a href=&#34;#cb20-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-91&#34;&gt;&lt;a href=&#34;#cb20-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-92&#34;&gt;&lt;a href=&#34;#cb20-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb20-93&#34;&gt;&lt;a href=&#34;#cb20-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb20-94&#34;&gt;&lt;a href=&#34;#cb20-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb20-95&#34;&gt;&lt;a href=&#34;#cb20-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = merge(root, newnode(i));&lt;/span&gt;
&lt;span id=&#34;cb20-96&#34;&gt;&lt;a href=&#34;#cb20-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb20-97&#34;&gt;&lt;a href=&#34;#cb20-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = read(), r = read();&lt;/span&gt;
&lt;span id=&#34;cb20-98&#34;&gt;&lt;a href=&#34;#cb20-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        reverse(l, r);&lt;/span&gt;
&lt;span id=&#34;cb20-99&#34;&gt;&lt;a href=&#34;#cb20-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-100&#34;&gt;&lt;a href=&#34;#cb20-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(root);&lt;/span&gt;
&lt;span id=&#34;cb20-101&#34;&gt;&lt;a href=&#34;#cb20-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-102&#34;&gt;&lt;a href=&#34;#cb20-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可见 &lt;span class=&#34;math inline&#34;&gt;\(100\)&lt;/span&gt; 行出头就写完了，比 Splay 好写太多了。&lt;/p&gt;
&lt;h3 id=&#34;维护区间时的一个-trick&#34;&gt;维护区间时的一个 trick&lt;/h3&gt;
&lt;p&gt;当我们在使用 FHQ-Treap 维护一段序列时，有时需要快速找出某元素在序列中的位置，怎么办呢？&lt;/p&gt;
&lt;p&gt;此时可以在建树时记录下这个元素在树中的节点编号，然后在找寻其排名时自底而上记录在它左边的节点个数。具体可以这样：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getrank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa)&lt;/span&gt;
&lt;span id=&#34;cb21-5&#34;&gt;&lt;a href=&#34;#cb21-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb21-6&#34;&gt;&lt;a href=&#34;#cb21-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u)&lt;/span&gt;
&lt;span id=&#34;cb21-7&#34;&gt;&lt;a href=&#34;#cb21-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret += t[t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-8&#34;&gt;&lt;a href=&#34;#cb21-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].fa;&lt;/span&gt;
&lt;span id=&#34;cb21-9&#34;&gt;&lt;a href=&#34;#cb21-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-10&#34;&gt;&lt;a href=&#34;#cb21-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb21-11&#34;&gt;&lt;a href=&#34;#cb21-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于一个节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，首先它的排名就是其左子树大小加一，然后往上跳，在跳的过程中判断一下它是父亲节点的左儿子还是右儿子，如果是右儿子的话，&lt;strong&gt;父亲本身和其兄弟节点都会产生贡献&lt;/strong&gt;，一路搜到根即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同时 pushup 的时候要更新父亲&lt;/strong&gt;，pushup 一个节点的时候顺带更新其两个儿子的父亲（需要判断是否存在）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-4&#34;&gt;&lt;a href=&#34;#cb22-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L)&lt;/span&gt;
&lt;span id=&#34;cb22-5&#34;&gt;&lt;a href=&#34;#cb22-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size += t[L].size, t[L].fa = u;&lt;/span&gt;
&lt;span id=&#34;cb22-6&#34;&gt;&lt;a href=&#34;#cb22-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (R)&lt;/span&gt;
&lt;span id=&#34;cb22-7&#34;&gt;&lt;a href=&#34;#cb22-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size += t[R].size, t[R].fa = u;&lt;/span&gt;
&lt;span id=&#34;cb22-8&#34;&gt;&lt;a href=&#34;#cb22-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-9&#34;&gt;&lt;a href=&#34;#cb22-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相关题目 &lt;a href=&#34;https://www.luogu.com.cn/problem/P2596&#34;&gt;[ZJOI2006]书架&lt;/a&gt;、&lt;a href=&#34;https://www.luogu.com.cn/problem/P3165&#34;&gt;[CQOI2014]排序机械臂&lt;/a&gt;，当然这些题都可以用 Splay 解决。&lt;/p&gt;
&lt;h3 id=&#34;启发式合并&#34;&gt;启发式合并&lt;/h3&gt;
&lt;p&gt;此处的合并与之前的 merge 操作不同，此处合并的两棵树就是两棵一般的树，不能简单地直接 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 合并。此时我们能做的就是将小树暴力递归加入到大树中，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(\log^2 n)\)&lt;/span&gt;。具体实现如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) { &lt;span class=&#34;co&#34;&gt;//表示将 u 节点加入 root 为根的新树中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb23-3&#34;&gt;&lt;a href=&#34;#cb23-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb23-4&#34;&gt;&lt;a href=&#34;#cb23-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;/span&gt;
&lt;span id=&#34;cb23-5&#34;&gt;&lt;a href=&#34;#cb23-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(merge(x, u), y);&lt;/span&gt;
&lt;span id=&#34;cb23-6&#34;&gt;&lt;a href=&#34;#cb23-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-7&#34;&gt;&lt;a href=&#34;#cb23-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb23-8&#34;&gt;&lt;a href=&#34;#cb23-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-9&#34;&gt;&lt;a href=&#34;#cb23-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root) { &lt;span class=&#34;co&#34;&gt;//这个 root 的引用是新树的树根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-10&#34;&gt;&lt;a href=&#34;#cb23-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb23-11&#34;&gt;&lt;a href=&#34;#cb23-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-12&#34;&gt;&lt;a href=&#34;#cb23-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(L, root);&lt;span class=&#34;co&#34;&gt;//先把左子树加入&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-13&#34;&gt;&lt;a href=&#34;#cb23-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(R, root);&lt;span class=&#34;co&#34;&gt;//加入右子树&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-14&#34;&gt;&lt;a href=&#34;#cb23-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    L = R = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//清空儿子，这一步不写会出问题&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-15&#34;&gt;&lt;a href=&#34;#cb23-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(root, u);&lt;span class=&#34;co&#34;&gt;//再加入自己&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-16&#34;&gt;&lt;a href=&#34;#cb23-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-17&#34;&gt;&lt;a href=&#34;#cb23-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb23-18&#34;&gt;&lt;a href=&#34;#cb23-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-19&#34;&gt;&lt;a href=&#34;#cb23-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; join(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb23-20&#34;&gt;&lt;a href=&#34;#cb23-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].size &amp;gt; t[y].size)&lt;/span&gt;
&lt;span id=&#34;cb23-21&#34;&gt;&lt;a href=&#34;#cb23-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        swap(x, y);&lt;/span&gt;
&lt;span id=&#34;cb23-22&#34;&gt;&lt;a href=&#34;#cb23-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(x, y);&lt;span class=&#34;co&#34;&gt;//使 x 成为小树然后递归加入 y 中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-23&#34;&gt;&lt;a href=&#34;#cb23-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y;&lt;span class=&#34;co&#34;&gt;//返回新的根 y&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-24&#34;&gt;&lt;a href=&#34;#cb23-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相关试题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P3224&#34;&gt;[HNOI2012]永无乡&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;易错点&#34;&gt;易错点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分裂代码不背错就行&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;涉及到分裂完合并的时候&lt;strong&gt;一定记得更新根！！&lt;/strong&gt;即 &lt;code&gt;root = merge(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;类似第二点，删除节点过程中合并 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的左右子树的时候&lt;strong&gt;千万记得更新 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;涉及到子树的操作千万&lt;strong&gt;提前 pushdown&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;splay&#34;&gt;Splay&lt;/h2&gt;
&lt;h3 id=&#34;简介initialization&#34;&gt;简介/Initialization&lt;/h3&gt;
&lt;p&gt;相较于两种 Treap，Splay（伸展树）则稍微难写一点，Splay 的核心操作就是 splay：即把一个节点旋转到根的位置，以此维护树的平衡。它相较于 Treap 的优点就是可以处理区间信息以及快速合并/分裂（虽然 fhqTreap 也能做到）。&lt;/p&gt;
&lt;p&gt;Splay 具有一切 BST 具有的性质，其相较于 Treap 的区别就是它是双旋的，这样可以保证均摊复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;（证明要用势能分析，我太菜暂时不会）。首先看下结构体如何定义：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;span class=&#34;co&#34;&gt;//与 treap 不同之处在于 splay 需要记录父亲节点的编号&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, size;&lt;/span&gt;
&lt;span id=&#34;cb24-5&#34;&gt;&lt;a href=&#34;#cb24-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val;&lt;/span&gt;
&lt;span id=&#34;cb24-6&#34;&gt;&lt;a href=&#34;#cb24-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;处理旋转的时候是需要知道这个节点是父亲的左儿子还是右儿子的，如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb25-2&#34;&gt;&lt;a href=&#34;#cb25-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb25-3&#34;&gt;&lt;a href=&#34;#cb25-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb25-4&#34;&gt;&lt;a href=&#34;#cb25-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;旋转后与 Treap 一样需要维护 size&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;旋转伸展splay&#34;&gt;旋转/伸展（Splay）&lt;/h3&gt;
&lt;p&gt;接下来就是该死的旋转操作了：考虑将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 节点旋转到 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的位置，（令 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的父节点为 &lt;span class=&#34;math inline&#34;&gt;\(gfa\)&lt;/span&gt;）图示如下：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r1.png&#34; title=&#34;step 1&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这是一开始的情况，首先判断 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是其父亲的哪个儿子，定义 &lt;span class=&#34;math inline&#34;&gt;\(d_1\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 表示是左儿子，&lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为右儿子，然后把其父亲的 &lt;span class=&#34;math inline&#34;&gt;\(d_1\)&lt;/span&gt; 儿子变成 &lt;code&gt;t[x].ch[d1^1]&lt;/code&gt;，如下，此时由于 &lt;span class=&#34;math inline&#34;&gt;\(d_1=0\)&lt;/span&gt;，所以 &lt;code&gt;d1^1&lt;/code&gt; 为右儿子：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r2.png&#34; title=&#34;step 2&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来用 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 连接 &lt;span class=&#34;math inline&#34;&gt;\(gfa\)&lt;/span&gt;，代替 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的位置&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r3.png&#34; title=&#34;step 3&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;最后把 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 接起来就可以了（即 &lt;code&gt;t[x].ch[d1^1]=fa&lt;/code&gt;）&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_r4.png&#34; title=&#34;step 4&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 4&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这样，一次旋转操作就完成了，它完成的就是将一个节点往上旋转到其父亲的位置。代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb27-6&#34;&gt;&lt;a href=&#34;#cb27-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa)&lt;/span&gt;
&lt;span id=&#34;cb27-7&#34;&gt;&lt;a href=&#34;#cb27-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[gfa].ch[d2] = u;&lt;/span&gt;
&lt;span id=&#34;cb27-8&#34;&gt;&lt;a href=&#34;#cb27-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb27-9&#34;&gt;&lt;a href=&#34;#cb27-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u, t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb27-10&#34;&gt;&lt;a href=&#34;#cb27-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;span class=&#34;co&#34;&gt;//最后不忘维护，注意先维护 fa，理由同 treap&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-11&#34;&gt;&lt;a href=&#34;#cb27-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb27-12&#34;&gt;&lt;a href=&#34;#cb27-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来就是 splay 过程了，&lt;strong&gt;splay 操作的目的就是将指定节点旋转到根节点&lt;/strong&gt;，一次操作分为六种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的父亲为根，则旋转一次&lt;/li&gt;
&lt;li&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的父亲不为根，且 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的儿子类型相同（即“三点共线”，代码中就是 &lt;code&gt;get()&lt;/code&gt; 函数返回值相同），那么首先左/右旋 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt;，再左/右旋 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;（两次单旋的方向相同）&lt;/li&gt;
&lt;li&gt;如果在第二种情况种，&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt; 的儿子类型不同，则将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 旋转两次，先左/右再右/左旋（两次单旋的方向不同）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;”三点共线“的情况见下图：&lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(gfa\)&lt;/span&gt;。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s1.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;可见我们先右旋 &lt;span class=&#34;math inline&#34;&gt;\(fa\)&lt;/span&gt;，得到如下结果：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s2.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;接下来再右旋 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，得到：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s3.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;三点不共线的情况如下图：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s4.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;此时 &lt;span class=&#34;math inline&#34;&gt;\(x=6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(fa=4\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(gfa=2\)&lt;/span&gt;，现在对 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 先进行一次右旋：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s5.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 2&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;再对 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 进行一次左旋：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_s6.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;step 3&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;反复执行如上操作，直到 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 成为根后，整个 splay 过程就结束了。&lt;/p&gt;
&lt;p&gt;下面的 &lt;code&gt;splay(u,goal)&lt;/code&gt; 意为把 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点伸展到 &lt;span class=&#34;math inline&#34;&gt;\(goal\)&lt;/span&gt; 节点的儿子处（&lt;span class=&#34;math inline&#34;&gt;\(goal=0\)&lt;/span&gt; 就是使 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 变成根节点）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;span class=&#34;co&#34;&gt;//一直伸展&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;span class=&#34;co&#34;&gt;//找到父亲和爷爷&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;span class=&#34;co&#34;&gt;//找到 u 是什么儿子，fa 是什么儿子。左0右1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;span class=&#34;co&#34;&gt;//如果爷爷不是根，则需要旋转两次，下面是旋转第一次&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-6&#34;&gt;&lt;a href=&#34;#cb28-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;span class=&#34;co&#34;&gt;//如果三点共线&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-7&#34;&gt;&lt;a href=&#34;#cb28-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;span class=&#34;co&#34;&gt;//先旋转 fa&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-8&#34;&gt;&lt;a href=&#34;#cb28-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-9&#34;&gt;&lt;a href=&#34;#cb28-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(u);&lt;span class=&#34;co&#34;&gt;//否则先旋转 u&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-10&#34;&gt;&lt;a href=&#34;#cb28-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb28-11&#34;&gt;&lt;a href=&#34;#cb28-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;span class=&#34;co&#34;&gt;//第二次旋转&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-12&#34;&gt;&lt;a href=&#34;#cb28-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-13&#34;&gt;&lt;a href=&#34;#cb28-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (goal == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//如果 u 成为根了&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-14&#34;&gt;&lt;a href=&#34;#cb28-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;span class=&#34;co&#34;&gt;//更新根的值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-15&#34;&gt;&lt;a href=&#34;#cb28-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;插入-1&#34;&gt;插入&lt;/h3&gt;
&lt;p&gt;插入操作就比较简单了，由于 Splay 的形态是可以改变的，所以不需要递归。&lt;strong&gt;每插入一个元素都进行一次 Splay 操作让其变为根&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb29&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb29-1&#34;&gt;&lt;a href=&#34;#cb29-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb29-2&#34;&gt;&lt;a href=&#34;#cb29-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root, fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-3&#34;&gt;&lt;a href=&#34;#cb29-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u &amp;amp;&amp;amp; t[u].val != val)&lt;/span&gt;
&lt;span id=&#34;cb29-4&#34;&gt;&lt;a href=&#34;#cb29-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fa = u, u = t[u].ch[t[u].val &amp;lt; val];&lt;span class=&#34;co&#34;&gt;//往下走&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-5&#34;&gt;&lt;a href=&#34;#cb29-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u)&lt;span class=&#34;co&#34;&gt;//如果节点已经存在&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-6&#34;&gt;&lt;a href=&#34;#cb29-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb29-7&#34;&gt;&lt;a href=&#34;#cb29-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb29-8&#34;&gt;&lt;a href=&#34;#cb29-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;span class=&#34;co&#34;&gt;//否则新开节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-9&#34;&gt;&lt;a href=&#34;#cb29-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa)&lt;span class=&#34;co&#34;&gt;//如果自己不是根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-10&#34;&gt;&lt;a href=&#34;#cb29-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa].ch[t[fa].val &amp;lt; val] = u;&lt;/span&gt;
&lt;span id=&#34;cb29-11&#34;&gt;&lt;a href=&#34;#cb29-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb29-12&#34;&gt;&lt;a href=&#34;#cb29-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-13&#34;&gt;&lt;a href=&#34;#cb29-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb29-14&#34;&gt;&lt;a href=&#34;#cb29-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb29-15&#34;&gt;&lt;a href=&#34;#cb29-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//为了降低均摊复杂度，需要将新插入的节点 splay 到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-16&#34;&gt;&lt;a href=&#34;#cb29-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;排名第-k-小大&#34;&gt;排名/第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小/大&lt;/h3&gt;
&lt;p&gt;由于 Splay 的形态可以改变，因此在查询排名的时候可以直接将其 splay 到树根，然后统计左子树大小再 +1 就可以了。当然首先需要找到对应的数在哪里，下面先实现 &lt;code&gt;find(int val)&lt;/code&gt; 函数，它返回刚好等于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 的节点的编号（如果存在的话），不存在则返回一个叶子节点（&lt;strong&gt;手玩一下便知它返回的要么是前驱要么是后继，但不一定是与 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 的值最接近的节点，但是一定可以保证返回的排名是正确的&lt;/strong&gt;）。然后 &lt;code&gt;rank()&lt;/code&gt; 函数的实现就相当简单了：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb30&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb30-1&#34;&gt;&lt;a href=&#34;#cb30-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb30-2&#34;&gt;&lt;a href=&#34;#cb30-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb30-3&#34;&gt;&lt;a href=&#34;#cb30-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].val != val &amp;amp;&amp;amp; t[u].ch[t[u].val &amp;lt; val])&lt;/span&gt;
&lt;span id=&#34;cb30-4&#34;&gt;&lt;a href=&#34;#cb30-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb30-5&#34;&gt;&lt;a href=&#34;#cb30-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb30-6&#34;&gt;&lt;a href=&#34;#cb30-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb30-7&#34;&gt;&lt;a href=&#34;#cb30-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb30-8&#34;&gt;&lt;a href=&#34;#cb30-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//先把对应节点旋转到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-9&#34;&gt;&lt;a href=&#34;#cb30-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//直接根的左子树大小加 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-10&#34;&gt;&lt;a href=&#34;#cb30-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;需要注意的是如果查询排名的数不存在的话会出一些奇奇怪怪的问题，所以在写加强版模板的时候推荐使用下面的写法：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb31&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb31-1&#34;&gt;&lt;a href=&#34;#cb31-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb31-2&#34;&gt;&lt;a href=&#34;#cb31-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb31-3&#34;&gt;&lt;a href=&#34;#cb31-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-4&#34;&gt;&lt;a href=&#34;#cb31-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb31-5&#34;&gt;&lt;a href=&#34;#cb31-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb31-6&#34;&gt;&lt;a href=&#34;#cb31-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小。类似递归的查找即可，注意查询右子树的时候要减去本身和左子树的贡献：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb32&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb32-1&#34;&gt;&lt;a href=&#34;#cb32-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb32-2&#34;&gt;&lt;a href=&#34;#cb32-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb32-3&#34;&gt;&lt;a href=&#34;#cb32-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb32-4&#34;&gt;&lt;a href=&#34;#cb32-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size)&lt;span class=&#34;co&#34;&gt;//如果第 k 小在左子树中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-5&#34;&gt;&lt;a href=&#34;#cb32-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb32-6&#34;&gt;&lt;a href=&#34;#cb32-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; t[L].size + t[u].cnt) { &lt;span class=&#34;co&#34;&gt;//如果第 k 小在右子树中&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-7&#34;&gt;&lt;a href=&#34;#cb32-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= t[L].size + t[u].cnt;&lt;span class=&#34;co&#34;&gt;//减去 L 和 u 产生的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-8&#34;&gt;&lt;a href=&#34;#cb32-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb32-9&#34;&gt;&lt;a href=&#34;#cb32-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;span class=&#34;co&#34;&gt;//否则就是自己了，返回即可&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-10&#34;&gt;&lt;a href=&#34;#cb32-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb32-11&#34;&gt;&lt;a href=&#34;#cb32-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继删除&#34;&gt;前驱后继/删除&lt;/h3&gt;
&lt;p&gt;同排名操作，考虑直接把 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 节点翻到根。此时&lt;strong&gt;前驱要么就是根节点，要么就是左子树中最靠右的节点&lt;/strong&gt;。由 &lt;code&gt;find()&lt;/code&gt; 函数的性质，如果 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 存在，则前驱一定在左子树里面的最右边，如果 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 不存在，则翻上来的点要么是前驱要么是后继，如果小于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 就直接返回，大于 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 则和第一种情况一样，在左子树里面的最右边。&lt;/p&gt;
&lt;p&gt;而后继几乎同理。不难写出如下代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb33&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb33-1&#34;&gt;&lt;a href=&#34;#cb33-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;span class=&#34;co&#34;&gt;//opt=0 是前驱，1 是后继&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-2&#34;&gt;&lt;a href=&#34;#cb33-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//先把对应节点翻到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-3&#34;&gt;&lt;a href=&#34;#cb33-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb33-4&#34;&gt;&lt;a href=&#34;#cb33-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt; val &amp;amp;&amp;amp; (!opt))&lt;span class=&#34;co&#34;&gt;//如果要找前驱并且根就是前驱，直接返回即可&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-5&#34;&gt;&lt;a href=&#34;#cb33-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb33-6&#34;&gt;&lt;a href=&#34;#cb33-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;gt; val &amp;amp;&amp;amp; opt)&lt;span class=&#34;co&#34;&gt;//同理，要查找后继并且根就是后继&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-7&#34;&gt;&lt;a href=&#34;#cb33-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb33-8&#34;&gt;&lt;a href=&#34;#cb33-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[opt];&lt;span class=&#34;co&#34;&gt;//否则到左/右子树查找&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-9&#34;&gt;&lt;a href=&#34;#cb33-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;span class=&#34;co&#34;&gt;//查找最右/左边的节点&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb33-10&#34;&gt;&lt;a href=&#34;#cb33-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb33-11&#34;&gt;&lt;a href=&#34;#cb33-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb33-12&#34;&gt;&lt;a href=&#34;#cb33-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意这个函数返回的是前驱/后继在树中的编号，为什么要这样呢，为了下面的删除操作。&lt;/p&gt;
&lt;p&gt;删除一个数时，注意我们如果将其 splay 到根的话，会发现左右子树不好处理。怎么办呢，&lt;strong&gt;把前驱旋转到根，然后把后继翻到前驱的下面&lt;/strong&gt;，此时 &lt;code&gt;splay()&lt;/code&gt; 函数的 &lt;span class=&#34;math inline&#34;&gt;\(goal\)&lt;/span&gt; 参数就体现出它的作用了。&lt;/p&gt;
&lt;p&gt;不难发现，此时 &lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 一定是后继节点的左儿子&lt;/strong&gt;，如图（回想一下前驱和后继的定义，你会发现确实是这样的）：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_del.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;证明很简单，可以自己思考思考&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;问题现在就很简单了，只需要删除掉 &lt;span class=&#34;math inline&#34;&gt;\(suc\)&lt;/span&gt; 的左儿子就可以了，如果有多个那就 &lt;code&gt;cnt--&lt;/code&gt; 并把对应节点 splay 到根，只有一个就把 &lt;span class=&#34;math inline&#34;&gt;\(suc\)&lt;/span&gt; 的左儿子设为空即可。&lt;strong&gt;现在知道为什么上面前驱和后继的函数返回的是节点编号了吧&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb34&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb34-1&#34;&gt;&lt;a href=&#34;#cb34-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb34-2&#34;&gt;&lt;a href=&#34;#cb34-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre = getnxt(val, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-3&#34;&gt;&lt;a href=&#34;#cb34-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc = getnxt(val, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-4&#34;&gt;&lt;a href=&#34;#cb34-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(pre, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-5&#34;&gt;&lt;a href=&#34;#cb34-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(suc, pre);&lt;span class=&#34;co&#34;&gt;//把后继旋转到前驱的儿子&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-6&#34;&gt;&lt;a href=&#34;#cb34-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb34-7&#34;&gt;&lt;a href=&#34;#cb34-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb34-8&#34;&gt;&lt;a href=&#34;#cb34-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//不忘再splay一次&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-9&#34;&gt;&lt;a href=&#34;#cb34-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-10&#34;&gt;&lt;a href=&#34;#cb34-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-11&#34;&gt;&lt;a href=&#34;#cb34-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;普通平衡树的实现-1&#34;&gt;普通平衡树的实现&lt;/h3&gt;
&lt;p&gt;唯一要注意的就是一开始需要先插入正负无穷，然后算出来的排名要减一，查询的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 要加一&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb35&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb35-1&#34;&gt;&lt;a href=&#34;#cb35-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-2&#34;&gt;&lt;a href=&#34;#cb35-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-3&#34;&gt;&lt;a href=&#34;#cb35-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb35-4&#34;&gt;&lt;a href=&#34;#cb35-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb35-5&#34;&gt;&lt;a href=&#34;#cb35-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-6&#34;&gt;&lt;a href=&#34;#cb35-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb35-7&#34;&gt;&lt;a href=&#34;#cb35-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb35-8&#34;&gt;&lt;a href=&#34;#cb35-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-9&#34;&gt;&lt;a href=&#34;#cb35-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-10&#34;&gt;&lt;a href=&#34;#cb35-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb35-11&#34;&gt;&lt;a href=&#34;#cb35-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb35-12&#34;&gt;&lt;a href=&#34;#cb35-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb35-13&#34;&gt;&lt;a href=&#34;#cb35-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb35-14&#34;&gt;&lt;a href=&#34;#cb35-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb35-15&#34;&gt;&lt;a href=&#34;#cb35-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-16&#34;&gt;&lt;a href=&#34;#cb35-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-17&#34;&gt;&lt;a href=&#34;#cb35-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb35-18&#34;&gt;&lt;a href=&#34;#cb35-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb35-19&#34;&gt;&lt;a href=&#34;#cb35-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-20&#34;&gt;&lt;a href=&#34;#cb35-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, inf = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-21&#34;&gt;&lt;a href=&#34;#cb35-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb35-22&#34;&gt;&lt;a href=&#34;#cb35-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-23&#34;&gt;&lt;a href=&#34;#cb35-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay {&lt;/span&gt;
&lt;span id=&#34;cb35-24&#34;&gt;&lt;a href=&#34;#cb35-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;/span&gt;
&lt;span id=&#34;cb35-25&#34;&gt;&lt;a href=&#34;#cb35-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, size;&lt;/span&gt;
&lt;span id=&#34;cb35-26&#34;&gt;&lt;a href=&#34;#cb35-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val;&lt;/span&gt;
&lt;span id=&#34;cb35-27&#34;&gt;&lt;a href=&#34;#cb35-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb35-28&#34;&gt;&lt;a href=&#34;#cb35-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-29&#34;&gt;&lt;a href=&#34;#cb35-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb35-30&#34;&gt;&lt;a href=&#34;#cb35-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb35-31&#34;&gt;&lt;a href=&#34;#cb35-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-32&#34;&gt;&lt;a href=&#34;#cb35-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-33&#34;&gt;&lt;a href=&#34;#cb35-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb35-34&#34;&gt;&lt;a href=&#34;#cb35-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb35-35&#34;&gt;&lt;a href=&#34;#cb35-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-36&#34;&gt;&lt;a href=&#34;#cb35-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-37&#34;&gt;&lt;a href=&#34;#cb35-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-38&#34;&gt;&lt;a href=&#34;#cb35-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb35-39&#34;&gt;&lt;a href=&#34;#cb35-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb35-40&#34;&gt;&lt;a href=&#34;#cb35-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-41&#34;&gt;&lt;a href=&#34;#cb35-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb35-42&#34;&gt;&lt;a href=&#34;#cb35-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[gfa].ch[d2] = u, t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb35-43&#34;&gt;&lt;a href=&#34;#cb35-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u, t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb35-44&#34;&gt;&lt;a href=&#34;#cb35-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-45&#34;&gt;&lt;a href=&#34;#cb35-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb35-46&#34;&gt;&lt;a href=&#34;#cb35-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-47&#34;&gt;&lt;a href=&#34;#cb35-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-48&#34;&gt;&lt;a href=&#34;#cb35-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb35-49&#34;&gt;&lt;a href=&#34;#cb35-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb35-50&#34;&gt;&lt;a href=&#34;#cb35-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb35-51&#34;&gt;&lt;a href=&#34;#cb35-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-52&#34;&gt;&lt;a href=&#34;#cb35-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb35-53&#34;&gt;&lt;a href=&#34;#cb35-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;/span&gt;
&lt;span id=&#34;cb35-54&#34;&gt;&lt;a href=&#34;#cb35-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;/span&gt;
&lt;span id=&#34;cb35-55&#34;&gt;&lt;a href=&#34;#cb35-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-56&#34;&gt;&lt;a href=&#34;#cb35-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb35-57&#34;&gt;&lt;a href=&#34;#cb35-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb35-58&#34;&gt;&lt;a href=&#34;#cb35-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb35-59&#34;&gt;&lt;a href=&#34;#cb35-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-60&#34;&gt;&lt;a href=&#34;#cb35-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (goal == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb35-61&#34;&gt;&lt;a href=&#34;#cb35-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;/span&gt;
&lt;span id=&#34;cb35-62&#34;&gt;&lt;a href=&#34;#cb35-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-63&#34;&gt;&lt;a href=&#34;#cb35-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-64&#34;&gt;&lt;a href=&#34;#cb35-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-65&#34;&gt;&lt;a href=&#34;#cb35-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root, fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-66&#34;&gt;&lt;a href=&#34;#cb35-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u &amp;amp;&amp;amp; t[u].val != val)&lt;/span&gt;
&lt;span id=&#34;cb35-67&#34;&gt;&lt;a href=&#34;#cb35-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fa = u, u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb35-68&#34;&gt;&lt;a href=&#34;#cb35-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u)&lt;/span&gt;
&lt;span id=&#34;cb35-69&#34;&gt;&lt;a href=&#34;#cb35-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb35-70&#34;&gt;&lt;a href=&#34;#cb35-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb35-71&#34;&gt;&lt;a href=&#34;#cb35-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb35-72&#34;&gt;&lt;a href=&#34;#cb35-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa)&lt;/span&gt;
&lt;span id=&#34;cb35-73&#34;&gt;&lt;a href=&#34;#cb35-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa].ch[t[fa].val &amp;lt; val] = u;&lt;/span&gt;
&lt;span id=&#34;cb35-74&#34;&gt;&lt;a href=&#34;#cb35-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb35-75&#34;&gt;&lt;a href=&#34;#cb35-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-76&#34;&gt;&lt;a href=&#34;#cb35-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb35-77&#34;&gt;&lt;a href=&#34;#cb35-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-78&#34;&gt;&lt;a href=&#34;#cb35-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-79&#34;&gt;&lt;a href=&#34;#cb35-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-80&#34;&gt;&lt;a href=&#34;#cb35-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-81&#34;&gt;&lt;a href=&#34;#cb35-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-82&#34;&gt;&lt;a href=&#34;#cb35-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb35-83&#34;&gt;&lt;a href=&#34;#cb35-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].val != val &amp;amp;&amp;amp; t[u].ch[t[u].val &amp;lt; val])&lt;/span&gt;
&lt;span id=&#34;cb35-84&#34;&gt;&lt;a href=&#34;#cb35-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb35-85&#34;&gt;&lt;a href=&#34;#cb35-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-86&#34;&gt;&lt;a href=&#34;#cb35-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-87&#34;&gt;&lt;a href=&#34;#cb35-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-88&#34;&gt;&lt;a href=&#34;#cb35-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-89&#34;&gt;&lt;a href=&#34;#cb35-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-90&#34;&gt;&lt;a href=&#34;#cb35-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-91&#34;&gt;&lt;a href=&#34;#cb35-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-92&#34;&gt;&lt;a href=&#34;#cb35-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-93&#34;&gt;&lt;a href=&#34;#cb35-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb35-94&#34;&gt;&lt;a href=&#34;#cb35-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb35-95&#34;&gt;&lt;a href=&#34;#cb35-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb35-96&#34;&gt;&lt;a href=&#34;#cb35-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb35-97&#34;&gt;&lt;a href=&#34;#cb35-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb35-98&#34;&gt;&lt;a href=&#34;#cb35-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; t[L].size + t[u].cnt) {&lt;/span&gt;
&lt;span id=&#34;cb35-99&#34;&gt;&lt;a href=&#34;#cb35-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= t[L].size + t[u].cnt;&lt;/span&gt;
&lt;span id=&#34;cb35-100&#34;&gt;&lt;a href=&#34;#cb35-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb35-101&#34;&gt;&lt;a href=&#34;#cb35-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb35-102&#34;&gt;&lt;a href=&#34;#cb35-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-103&#34;&gt;&lt;a href=&#34;#cb35-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb35-104&#34;&gt;&lt;a href=&#34;#cb35-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-105&#34;&gt;&lt;a href=&#34;#cb35-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-106&#34;&gt;&lt;a href=&#34;#cb35-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-107&#34;&gt;&lt;a href=&#34;#cb35-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;/span&gt;
&lt;span id=&#34;cb35-108&#34;&gt;&lt;a href=&#34;#cb35-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-109&#34;&gt;&lt;a href=&#34;#cb35-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb35-110&#34;&gt;&lt;a href=&#34;#cb35-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt; val &amp;amp;&amp;amp; (!opt))&lt;/span&gt;
&lt;span id=&#34;cb35-111&#34;&gt;&lt;a href=&#34;#cb35-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-112&#34;&gt;&lt;a href=&#34;#cb35-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;gt; val &amp;amp;&amp;amp; opt)&lt;/span&gt;
&lt;span id=&#34;cb35-113&#34;&gt;&lt;a href=&#34;#cb35-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-114&#34;&gt;&lt;a href=&#34;#cb35-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[opt];&lt;/span&gt;
&lt;span id=&#34;cb35-115&#34;&gt;&lt;a href=&#34;#cb35-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb35-116&#34;&gt;&lt;a href=&#34;#cb35-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb35-117&#34;&gt;&lt;a href=&#34;#cb35-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb35-118&#34;&gt;&lt;a href=&#34;#cb35-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-119&#34;&gt;&lt;a href=&#34;#cb35-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-120&#34;&gt;&lt;a href=&#34;#cb35-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb35-121&#34;&gt;&lt;a href=&#34;#cb35-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre = getnxt(val, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-122&#34;&gt;&lt;a href=&#34;#cb35-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; suc = getnxt(val, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-123&#34;&gt;&lt;a href=&#34;#cb35-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(pre, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-124&#34;&gt;&lt;a href=&#34;#cb35-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(suc, pre);&lt;/span&gt;
&lt;span id=&#34;cb35-125&#34;&gt;&lt;a href=&#34;#cb35-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb35-126&#34;&gt;&lt;a href=&#34;#cb35-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb35-127&#34;&gt;&lt;a href=&#34;#cb35-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-128&#34;&gt;&lt;a href=&#34;#cb35-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-129&#34;&gt;&lt;a href=&#34;#cb35-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; t[suc].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-130&#34;&gt;&lt;a href=&#34;#cb35-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-131&#34;&gt;&lt;a href=&#34;#cb35-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-132&#34;&gt;&lt;a href=&#34;#cb35-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-133&#34;&gt;&lt;a href=&#34;#cb35-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb35-134&#34;&gt;&lt;a href=&#34;#cb35-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(inf), insert(-inf);&lt;/span&gt;
&lt;span id=&#34;cb35-135&#34;&gt;&lt;a href=&#34;#cb35-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read();&lt;/span&gt;
&lt;span id=&#34;cb35-136&#34;&gt;&lt;a href=&#34;#cb35-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--) {&lt;/span&gt;
&lt;span id=&#34;cb35-137&#34;&gt;&lt;a href=&#34;#cb35-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read();&lt;/span&gt;
&lt;span id=&#34;cb35-138&#34;&gt;&lt;a href=&#34;#cb35-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt) {&lt;/span&gt;
&lt;span id=&#34;cb35-139&#34;&gt;&lt;a href=&#34;#cb35-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-140&#34;&gt;&lt;a href=&#34;#cb35-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x);&lt;/span&gt;
&lt;span id=&#34;cb35-141&#34;&gt;&lt;a href=&#34;#cb35-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-142&#34;&gt;&lt;a href=&#34;#cb35-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-143&#34;&gt;&lt;a href=&#34;#cb35-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(x);&lt;/span&gt;
&lt;span id=&#34;cb35-144&#34;&gt;&lt;a href=&#34;#cb35-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-145&#34;&gt;&lt;a href=&#34;#cb35-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-146&#34;&gt;&lt;a href=&#34;#cb35-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, rank(x) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-147&#34;&gt;&lt;a href=&#34;#cb35-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-148&#34;&gt;&lt;a href=&#34;#cb35-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-149&#34;&gt;&lt;a href=&#34;#cb35-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, kth(x+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb35-150&#34;&gt;&lt;a href=&#34;#cb35-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-151&#34;&gt;&lt;a href=&#34;#cb35-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-152&#34;&gt;&lt;a href=&#34;#cb35-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t[getnxt(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)].val);&lt;/span&gt;
&lt;span id=&#34;cb35-153&#34;&gt;&lt;a href=&#34;#cb35-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-154&#34;&gt;&lt;a href=&#34;#cb35-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb35-155&#34;&gt;&lt;a href=&#34;#cb35-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t[getnxt(x, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)].val);&lt;/span&gt;
&lt;span id=&#34;cb35-156&#34;&gt;&lt;a href=&#34;#cb35-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-157&#34;&gt;&lt;a href=&#34;#cb35-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb35-158&#34;&gt;&lt;a href=&#34;#cb35-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-159&#34;&gt;&lt;a href=&#34;#cb35-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-160&#34;&gt;&lt;a href=&#34;#cb35-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;前驱后继删除操作的另一种实现&#34;&gt;前驱后继/删除操作的另一种实现&lt;/h3&gt;
&lt;p&gt;其实对于查询前驱/后继，我们也可以先插入 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt;（插入后它就会被 splay 成根），然后在其左/右子树中查询前驱/后继，最后完事了删除 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 就行了（&lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; 工具人表示很淦）。&lt;/p&gt;
&lt;p&gt;但问题是，删除怎么办，此时要完成前驱后继操作就需要先学会删除。&lt;/p&gt;
&lt;p&gt;此处不妨把 &lt;span class=&#34;math inline&#34;&gt;\(val\)&lt;/span&gt; splay 到根，然后分两种情况讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果左/右子树至少有一个是空的话，直接让不空的那个节点当根就可以了（如果删干净了就删干净了吧）&lt;/li&gt;
&lt;li&gt;如果左右子树都不为空，则相当于要合并两棵 Splay，怎么办呢，考虑怎么维护 Splay 的性质：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们可以将左子树最大的节点 Splay 到最上方，然后注意到&lt;strong&gt;此时根的左儿子肯定没有右儿子了&lt;/strong&gt;。所以直接把根的右子树接到根的左儿子的右儿子上，然后让左儿子当根，根就直接滚蛋了。觉得抽象的可以看一下下面的图：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_del1.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;将待删除节点 splay 到根后&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这是将待删除节点 splay 到根后，然后我们把左子树的最大值 splay 到左子树的根，这样左子树就不存在右子树了，将原来根的右子树接上去即可。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/splay_del2.png&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;完成之后&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;原来的根节点就可以丢掉不要了，同时不要忘记再更新根的值。&lt;/p&gt;
&lt;p&gt;代码如下：（此时 &lt;code&gt;getnxt()&lt;/code&gt; 返回的是答案了）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb36&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb36-1&#34;&gt;&lt;a href=&#34;#cb36-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb36-2&#34;&gt;&lt;a href=&#34;#cb36-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//把待删除节点旋转到根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-3&#34;&gt;&lt;a href=&#34;#cb36-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].val != val)&lt;/span&gt;
&lt;span id=&#34;cb36-4&#34;&gt;&lt;a href=&#34;#cb36-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-5&#34;&gt;&lt;a href=&#34;#cb36-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb36-6&#34;&gt;&lt;a href=&#34;#cb36-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb36-7&#34;&gt;&lt;a href=&#34;#cb36-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb36-8&#34;&gt;&lt;a href=&#34;#cb36-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].size--;&lt;/span&gt;
&lt;span id=&#34;cb36-9&#34;&gt;&lt;a href=&#34;#cb36-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-10&#34;&gt;&lt;a href=&#34;#cb36-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-11&#34;&gt;&lt;a href=&#34;#cb36-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((!t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) || (!t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))&lt;/span&gt;
&lt;span id=&#34;cb36-12&#34;&gt;&lt;a href=&#34;#cb36-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-13&#34;&gt;&lt;a href=&#34;#cb36-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb36-14&#34;&gt;&lt;a href=&#34;#cb36-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lmax = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-15&#34;&gt;&lt;a href=&#34;#cb36-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb36-16&#34;&gt;&lt;a href=&#34;#cb36-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lmax = t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-17&#34;&gt;&lt;a href=&#34;#cb36-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(lmax, root);&lt;/span&gt;
&lt;span id=&#34;cb36-18&#34;&gt;&lt;a href=&#34;#cb36-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = lmax;&lt;/span&gt;
&lt;span id=&#34;cb36-19&#34;&gt;&lt;a href=&#34;#cb36-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-20&#34;&gt;&lt;a href=&#34;#cb36-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(root = lmax);&lt;/span&gt;
&lt;span id=&#34;cb36-21&#34;&gt;&lt;a href=&#34;#cb36-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-22&#34;&gt;&lt;a href=&#34;#cb36-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[root].fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//千万不要忘记把根的 fa 设为 0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-23&#34;&gt;&lt;a href=&#34;#cb36-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-24&#34;&gt;&lt;a href=&#34;#cb36-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-25&#34;&gt;&lt;a href=&#34;#cb36-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-26&#34;&gt;&lt;a href=&#34;#cb36-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;/span&gt;
&lt;span id=&#34;cb36-27&#34;&gt;&lt;a href=&#34;#cb36-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb36-28&#34;&gt;&lt;a href=&#34;#cb36-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[opt], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb36-29&#34;&gt;&lt;a href=&#34;#cb36-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb36-30&#34;&gt;&lt;a href=&#34;#cb36-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb36-31&#34;&gt;&lt;a href=&#34;#cb36-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb36-32&#34;&gt;&lt;a href=&#34;#cb36-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb36-33&#34;&gt;&lt;a href=&#34;#cb36-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;普通平衡树的另外一种实现&#34;&gt;普通平衡树的另外一种实现&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6136&#34;&gt;洛谷P6136&lt;/a&gt; 的实现：&lt;strong&gt;这个版本可以较好的处理查询前驱/后继/排名时待查询数不存在的情况&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb37&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb37-1&#34;&gt;&lt;a href=&#34;#cb37-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-2&#34;&gt;&lt;a href=&#34;#cb37-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-3&#34;&gt;&lt;a href=&#34;#cb37-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb37-4&#34;&gt;&lt;a href=&#34;#cb37-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb37-5&#34;&gt;&lt;a href=&#34;#cb37-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-6&#34;&gt;&lt;a href=&#34;#cb37-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb37-7&#34;&gt;&lt;a href=&#34;#cb37-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb37-8&#34;&gt;&lt;a href=&#34;#cb37-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-9&#34;&gt;&lt;a href=&#34;#cb37-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-10&#34;&gt;&lt;a href=&#34;#cb37-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb37-11&#34;&gt;&lt;a href=&#34;#cb37-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb37-12&#34;&gt;&lt;a href=&#34;#cb37-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb37-13&#34;&gt;&lt;a href=&#34;#cb37-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb37-14&#34;&gt;&lt;a href=&#34;#cb37-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb37-15&#34;&gt;&lt;a href=&#34;#cb37-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-16&#34;&gt;&lt;a href=&#34;#cb37-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-17&#34;&gt;&lt;a href=&#34;#cb37-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb37-18&#34;&gt;&lt;a href=&#34;#cb37-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b; }&lt;/span&gt;
&lt;span id=&#34;cb37-19&#34;&gt;&lt;a href=&#34;#cb37-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-20&#34;&gt;&lt;a href=&#34;#cb37-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, inf = &lt;span class=&#34;dv&#34;&gt;2147483647&lt;/span&gt; - &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-21&#34;&gt;&lt;a href=&#34;#cb37-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb37-22&#34;&gt;&lt;a href=&#34;#cb37-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-23&#34;&gt;&lt;a href=&#34;#cb37-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay {&lt;/span&gt;
&lt;span id=&#34;cb37-24&#34;&gt;&lt;a href=&#34;#cb37-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;/span&gt;
&lt;span id=&#34;cb37-25&#34;&gt;&lt;a href=&#34;#cb37-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt, size;&lt;/span&gt;
&lt;span id=&#34;cb37-26&#34;&gt;&lt;a href=&#34;#cb37-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val;&lt;/span&gt;
&lt;span id=&#34;cb37-27&#34;&gt;&lt;a href=&#34;#cb37-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-28&#34;&gt;&lt;a href=&#34;#cb37-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-29&#34;&gt;&lt;a href=&#34;#cb37-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb37-30&#34;&gt;&lt;a href=&#34;#cb37-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb37-31&#34;&gt;&lt;a href=&#34;#cb37-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-32&#34;&gt;&lt;a href=&#34;#cb37-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-33&#34;&gt;&lt;a href=&#34;#cb37-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb37-34&#34;&gt;&lt;a href=&#34;#cb37-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[u].cnt + t[L].size + t[R].size;&lt;/span&gt;
&lt;span id=&#34;cb37-35&#34;&gt;&lt;a href=&#34;#cb37-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-36&#34;&gt;&lt;a href=&#34;#cb37-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-37&#34;&gt;&lt;a href=&#34;#cb37-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-38&#34;&gt;&lt;a href=&#34;#cb37-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb37-39&#34;&gt;&lt;a href=&#34;#cb37-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb37-40&#34;&gt;&lt;a href=&#34;#cb37-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-41&#34;&gt;&lt;a href=&#34;#cb37-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb37-42&#34;&gt;&lt;a href=&#34;#cb37-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa)&lt;/span&gt;
&lt;span id=&#34;cb37-43&#34;&gt;&lt;a href=&#34;#cb37-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[gfa].ch[d2] = u;&lt;/span&gt;
&lt;span id=&#34;cb37-44&#34;&gt;&lt;a href=&#34;#cb37-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb37-45&#34;&gt;&lt;a href=&#34;#cb37-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u, t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb37-46&#34;&gt;&lt;a href=&#34;#cb37-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-47&#34;&gt;&lt;a href=&#34;#cb37-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb37-48&#34;&gt;&lt;a href=&#34;#cb37-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-49&#34;&gt;&lt;a href=&#34;#cb37-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-50&#34;&gt;&lt;a href=&#34;#cb37-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb37-51&#34;&gt;&lt;a href=&#34;#cb37-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb37-52&#34;&gt;&lt;a href=&#34;#cb37-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb37-53&#34;&gt;&lt;a href=&#34;#cb37-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-54&#34;&gt;&lt;a href=&#34;#cb37-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb37-55&#34;&gt;&lt;a href=&#34;#cb37-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;/span&gt;
&lt;span id=&#34;cb37-56&#34;&gt;&lt;a href=&#34;#cb37-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;/span&gt;
&lt;span id=&#34;cb37-57&#34;&gt;&lt;a href=&#34;#cb37-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-58&#34;&gt;&lt;a href=&#34;#cb37-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb37-59&#34;&gt;&lt;a href=&#34;#cb37-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-60&#34;&gt;&lt;a href=&#34;#cb37-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb37-61&#34;&gt;&lt;a href=&#34;#cb37-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-62&#34;&gt;&lt;a href=&#34;#cb37-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (goal == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb37-63&#34;&gt;&lt;a href=&#34;#cb37-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;/span&gt;
&lt;span id=&#34;cb37-64&#34;&gt;&lt;a href=&#34;#cb37-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-65&#34;&gt;&lt;a href=&#34;#cb37-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-66&#34;&gt;&lt;a href=&#34;#cb37-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-67&#34;&gt;&lt;a href=&#34;#cb37-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root, fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-68&#34;&gt;&lt;a href=&#34;#cb37-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u &amp;amp;&amp;amp; t[u].val != val)&lt;/span&gt;
&lt;span id=&#34;cb37-69&#34;&gt;&lt;a href=&#34;#cb37-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fa = u, u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb37-70&#34;&gt;&lt;a href=&#34;#cb37-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u)&lt;/span&gt;
&lt;span id=&#34;cb37-71&#34;&gt;&lt;a href=&#34;#cb37-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].cnt++;&lt;/span&gt;
&lt;span id=&#34;cb37-72&#34;&gt;&lt;a href=&#34;#cb37-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb37-73&#34;&gt;&lt;a href=&#34;#cb37-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb37-74&#34;&gt;&lt;a href=&#34;#cb37-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa)&lt;/span&gt;
&lt;span id=&#34;cb37-75&#34;&gt;&lt;a href=&#34;#cb37-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa].ch[t[fa].val &amp;lt; val] = u;&lt;/span&gt;
&lt;span id=&#34;cb37-76&#34;&gt;&lt;a href=&#34;#cb37-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb37-77&#34;&gt;&lt;a href=&#34;#cb37-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].size = t[u].cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-78&#34;&gt;&lt;a href=&#34;#cb37-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = val;&lt;/span&gt;
&lt;span id=&#34;cb37-79&#34;&gt;&lt;a href=&#34;#cb37-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-80&#34;&gt;&lt;a href=&#34;#cb37-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(u, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-81&#34;&gt;&lt;a href=&#34;#cb37-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-82&#34;&gt;&lt;a href=&#34;#cb37-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-83&#34;&gt;&lt;a href=&#34;#cb37-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-84&#34;&gt;&lt;a href=&#34;#cb37-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb37-85&#34;&gt;&lt;a href=&#34;#cb37-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].val != val &amp;amp;&amp;amp; t[u].ch[t[u].val &amp;lt; val])&lt;/span&gt;
&lt;span id=&#34;cb37-86&#34;&gt;&lt;a href=&#34;#cb37-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[t[u].val &amp;lt; val];&lt;/span&gt;
&lt;span id=&#34;cb37-87&#34;&gt;&lt;a href=&#34;#cb37-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb37-88&#34;&gt;&lt;a href=&#34;#cb37-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-89&#34;&gt;&lt;a href=&#34;#cb37-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-90&#34;&gt;&lt;a href=&#34;#cb37-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb37-91&#34;&gt;&lt;a href=&#34;#cb37-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb37-92&#34;&gt;&lt;a href=&#34;#cb37-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb37-93&#34;&gt;&lt;a href=&#34;#cb37-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb37-94&#34;&gt;&lt;a href=&#34;#cb37-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb37-95&#34;&gt;&lt;a href=&#34;#cb37-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; t[L].size + t[u].cnt) {&lt;/span&gt;
&lt;span id=&#34;cb37-96&#34;&gt;&lt;a href=&#34;#cb37-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            k -= t[L].size + t[u].cnt;&lt;/span&gt;
&lt;span id=&#34;cb37-97&#34;&gt;&lt;a href=&#34;#cb37-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb37-98&#34;&gt;&lt;a href=&#34;#cb37-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-99&#34;&gt;&lt;a href=&#34;#cb37-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-100&#34;&gt;&lt;a href=&#34;#cb37-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb37-101&#34;&gt;&lt;a href=&#34;#cb37-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-102&#34;&gt;&lt;a href=&#34;#cb37-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-103&#34;&gt;&lt;a href=&#34;#cb37-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-104&#34;&gt;&lt;a href=&#34;#cb37-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-105&#34;&gt;&lt;a href=&#34;#cb37-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(val), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-106&#34;&gt;&lt;a href=&#34;#cb37-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].val != val)&lt;/span&gt;
&lt;span id=&#34;cb37-107&#34;&gt;&lt;a href=&#34;#cb37-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-108&#34;&gt;&lt;a href=&#34;#cb37-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[root].cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb37-109&#34;&gt;&lt;a href=&#34;#cb37-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].cnt--;&lt;/span&gt;
&lt;span id=&#34;cb37-110&#34;&gt;&lt;a href=&#34;#cb37-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[root].size--;&lt;/span&gt;
&lt;span id=&#34;cb37-111&#34;&gt;&lt;a href=&#34;#cb37-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-112&#34;&gt;&lt;a href=&#34;#cb37-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-113&#34;&gt;&lt;a href=&#34;#cb37-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((!t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) || (!t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))&lt;/span&gt;
&lt;span id=&#34;cb37-114&#34;&gt;&lt;a href=&#34;#cb37-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-115&#34;&gt;&lt;a href=&#34;#cb37-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb37-116&#34;&gt;&lt;a href=&#34;#cb37-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lmax = t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-117&#34;&gt;&lt;a href=&#34;#cb37-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb37-118&#34;&gt;&lt;a href=&#34;#cb37-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lmax = t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-119&#34;&gt;&lt;a href=&#34;#cb37-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        splay(lmax, root);&lt;/span&gt;
&lt;span id=&#34;cb37-120&#34;&gt;&lt;a href=&#34;#cb37-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = lmax;&lt;/span&gt;
&lt;span id=&#34;cb37-121&#34;&gt;&lt;a href=&#34;#cb37-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[lmax].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-122&#34;&gt;&lt;a href=&#34;#cb37-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maintain(root = lmax);&lt;/span&gt;
&lt;span id=&#34;cb37-123&#34;&gt;&lt;a href=&#34;#cb37-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-124&#34;&gt;&lt;a href=&#34;#cb37-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[root].fa = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-125&#34;&gt;&lt;a href=&#34;#cb37-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-126&#34;&gt;&lt;a href=&#34;#cb37-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-127&#34;&gt;&lt;a href=&#34;#cb37-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-128&#34;&gt;&lt;a href=&#34;#cb37-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb37-129&#34;&gt;&lt;a href=&#34;#cb37-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb37-130&#34;&gt;&lt;a href=&#34;#cb37-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[t[root].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-131&#34;&gt;&lt;a href=&#34;#cb37-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb37-132&#34;&gt;&lt;a href=&#34;#cb37-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb37-133&#34;&gt;&lt;a href=&#34;#cb37-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-134&#34;&gt;&lt;a href=&#34;#cb37-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-135&#34;&gt;&lt;a href=&#34;#cb37-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getnxt(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt) {&lt;/span&gt;
&lt;span id=&#34;cb37-136&#34;&gt;&lt;a href=&#34;#cb37-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(val);&lt;/span&gt;
&lt;span id=&#34;cb37-137&#34;&gt;&lt;a href=&#34;#cb37-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[opt], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb37-138&#34;&gt;&lt;a href=&#34;#cb37-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb37-139&#34;&gt;&lt;a href=&#34;#cb37-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        u = t[u].ch[opt ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ans = t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb37-140&#34;&gt;&lt;a href=&#34;#cb37-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delnode(val);&lt;/span&gt;
&lt;span id=&#34;cb37-141&#34;&gt;&lt;a href=&#34;#cb37-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb37-142&#34;&gt;&lt;a href=&#34;#cb37-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-143&#34;&gt;&lt;a href=&#34;#cb37-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-144&#34;&gt;&lt;a href=&#34;#cb37-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb37-145&#34;&gt;&lt;a href=&#34;#cb37-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(inf), insert(-inf);&lt;/span&gt;
&lt;span id=&#34;cb37-146&#34;&gt;&lt;a href=&#34;#cb37-146&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb37-147&#34;&gt;&lt;a href=&#34;#cb37-147&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb37-148&#34;&gt;&lt;a href=&#34;#cb37-148&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(read());&lt;/span&gt;
&lt;span id=&#34;cb37-149&#34;&gt;&lt;a href=&#34;#cb37-149&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, last = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-150&#34;&gt;&lt;a href=&#34;#cb37-150&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb37-151&#34;&gt;&lt;a href=&#34;#cb37-151&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; opt = read(), x = read() ^ last;&lt;/span&gt;
&lt;span id=&#34;cb37-152&#34;&gt;&lt;a href=&#34;#cb37-152&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;switch&lt;/span&gt; (opt) {&lt;/span&gt;
&lt;span id=&#34;cb37-153&#34;&gt;&lt;a href=&#34;#cb37-153&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-154&#34;&gt;&lt;a href=&#34;#cb37-154&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(x);&lt;/span&gt;
&lt;span id=&#34;cb37-155&#34;&gt;&lt;a href=&#34;#cb37-155&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-156&#34;&gt;&lt;a href=&#34;#cb37-156&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-157&#34;&gt;&lt;a href=&#34;#cb37-157&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            delnode(x);&lt;/span&gt;
&lt;span id=&#34;cb37-158&#34;&gt;&lt;a href=&#34;#cb37-158&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-159&#34;&gt;&lt;a href=&#34;#cb37-159&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-160&#34;&gt;&lt;a href=&#34;#cb37-160&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = rank(x) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-161&#34;&gt;&lt;a href=&#34;#cb37-161&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-162&#34;&gt;&lt;a href=&#34;#cb37-162&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-163&#34;&gt;&lt;a href=&#34;#cb37-163&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = kth(x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb37-164&#34;&gt;&lt;a href=&#34;#cb37-164&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-165&#34;&gt;&lt;a href=&#34;#cb37-165&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-166&#34;&gt;&lt;a href=&#34;#cb37-166&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = getnxt(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb37-167&#34;&gt;&lt;a href=&#34;#cb37-167&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-168&#34;&gt;&lt;a href=&#34;#cb37-168&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-169&#34;&gt;&lt;a href=&#34;#cb37-169&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (last = getnxt(x, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb37-170&#34;&gt;&lt;a href=&#34;#cb37-170&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&#34;cb37-171&#34;&gt;&lt;a href=&#34;#cb37-171&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-172&#34;&gt;&lt;a href=&#34;#cb37-172&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-173&#34;&gt;&lt;a href=&#34;#cb37-173&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-174&#34;&gt;&lt;a href=&#34;#cb37-174&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb37-175&#34;&gt;&lt;a href=&#34;#cb37-175&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-176&#34;&gt;&lt;a href=&#34;#cb37-176&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;文艺平衡树的实现&#34;&gt;文艺平衡树的实现&lt;/h3&gt;
&lt;p&gt;文艺平衡树，可实现快速区间翻转，主要得益于 Splay 的区间操作功能。具体地，我们对序列 &lt;span class=&#34;math inline&#34;&gt;\(1 - n\)&lt;/span&gt; 建一棵 Splay，这棵 Splay 的中序遍历即为我们的序列。然后如果要对 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 翻转，就需要先把 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 区间独立出来成单独一个子树然后打标记。我们可以考虑先把在 Splay 中排名为 &lt;span class=&#34;math inline&#34;&gt;\(l-1\)&lt;/span&gt; 的点 splay 到根，然后将排名为 &lt;span class=&#34;math inline&#34;&gt;\(r+1\)&lt;/span&gt; 的点 splay 到根下方，由 BST 的性质我们可以知道此时 &lt;span class=&#34;math inline&#34;&gt;\(r+1\)&lt;/span&gt; 的左子树就是我们的 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;找到之后打标记即可，注意旋转和 Splay 以及找节点的时候千万记得&lt;strong&gt;下放标记&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb38&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb38-1&#34;&gt;&lt;a href=&#34;#cb38-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushdown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb38-2&#34;&gt;&lt;a href=&#34;#cb38-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].mark &amp;amp;&amp;amp; u) {&lt;/span&gt;
&lt;span id=&#34;cb38-3&#34;&gt;&lt;a href=&#34;#cb38-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        swap(L, R);&lt;/span&gt;
&lt;span id=&#34;cb38-4&#34;&gt;&lt;a href=&#34;#cb38-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[L].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-5&#34;&gt;&lt;a href=&#34;#cb38-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[R].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-6&#34;&gt;&lt;a href=&#34;#cb38-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].mark = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-7&#34;&gt;&lt;a href=&#34;#cb38-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-8&#34;&gt;&lt;a href=&#34;#cb38-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-9&#34;&gt;&lt;a href=&#34;#cb38-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后是翻转函数的实现。&lt;strong&gt;注意由于 &lt;span class=&#34;math inline&#34;&gt;\(l-1\)&lt;/span&gt; 可能等于 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/strong&gt;，所以需要提前插入正无穷和负无穷节点，同时读入的 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 要各自自增 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;strong&gt;同时注意此处 &lt;code&gt;find()&lt;/code&gt; 函数与之前的区别&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb39&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb39-1&#34;&gt;&lt;a href=&#34;#cb39-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb39-2&#34;&gt;&lt;a href=&#34;#cb39-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb39-3&#34;&gt;&lt;a href=&#34;#cb39-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-4&#34;&gt;&lt;a href=&#34;#cb39-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb39-5&#34;&gt;&lt;a href=&#34;#cb39-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb39-6&#34;&gt;&lt;a href=&#34;#cb39-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb39-7&#34;&gt;&lt;a href=&#34;#cb39-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb39-8&#34;&gt;&lt;a href=&#34;#cb39-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val -= t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-9&#34;&gt;&lt;a href=&#34;#cb39-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!val)&lt;/span&gt;
&lt;span id=&#34;cb39-10&#34;&gt;&lt;a href=&#34;#cb39-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb39-11&#34;&gt;&lt;a href=&#34;#cb39-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb39-12&#34;&gt;&lt;a href=&#34;#cb39-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-13&#34;&gt;&lt;a href=&#34;#cb39-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-14&#34;&gt;&lt;a href=&#34;#cb39-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-15&#34;&gt;&lt;a href=&#34;#cb39-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-16&#34;&gt;&lt;a href=&#34;#cb39-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; reverse(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb39-17&#34;&gt;&lt;a href=&#34;#cb39-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-18&#34;&gt;&lt;a href=&#34;#cb39-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), root);&lt;/span&gt;
&lt;span id=&#34;cb39-19&#34;&gt;&lt;a href=&#34;#cb39-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb39-20&#34;&gt;&lt;a href=&#34;#cb39-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb39-21&#34;&gt;&lt;a href=&#34;#cb39-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-22&#34;&gt;&lt;a href=&#34;#cb39-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-23&#34;&gt;&lt;a href=&#34;#cb39-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;全部具体实现如下：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3391&#34;&gt;洛谷P3391&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb40&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb40-1&#34;&gt;&lt;a href=&#34;#cb40-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb40-2&#34;&gt;&lt;a href=&#34;#cb40-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb40-3&#34;&gt;&lt;a href=&#34;#cb40-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;...&lt;/span&gt;
&lt;span id=&#34;cb40-4&#34;&gt;&lt;a href=&#34;#cb40-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Splay {&lt;/span&gt;
&lt;span id=&#34;cb40-5&#34;&gt;&lt;a href=&#34;#cb40-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], fa;&lt;/span&gt;
&lt;span id=&#34;cb40-6&#34;&gt;&lt;a href=&#34;#cb40-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size, val;&lt;/span&gt;
&lt;span id=&#34;cb40-7&#34;&gt;&lt;a href=&#34;#cb40-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mark;&lt;/span&gt;
&lt;span id=&#34;cb40-8&#34;&gt;&lt;a href=&#34;#cb40-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb40-9&#34;&gt;&lt;a href=&#34;#cb40-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-10&#34;&gt;&lt;a href=&#34;#cb40-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; root, cnt, n, m;&lt;/span&gt;
&lt;span id=&#34;cb40-11&#34;&gt;&lt;a href=&#34;#cb40-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-12&#34;&gt;&lt;a href=&#34;#cb40-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; maintain(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-13&#34;&gt;&lt;a href=&#34;#cb40-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-14&#34;&gt;&lt;a href=&#34;#cb40-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-15&#34;&gt;&lt;a href=&#34;#cb40-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-16&#34;&gt;&lt;a href=&#34;#cb40-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-17&#34;&gt;&lt;a href=&#34;#cb40-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; get(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-18&#34;&gt;&lt;a href=&#34;#cb40-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[t[u].fa].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == u;&lt;/span&gt;
&lt;span id=&#34;cb40-19&#34;&gt;&lt;a href=&#34;#cb40-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-20&#34;&gt;&lt;a href=&#34;#cb40-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-21&#34;&gt;&lt;a href=&#34;#cb40-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushdown(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-22&#34;&gt;&lt;a href=&#34;#cb40-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].mark &amp;amp;&amp;amp; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-23&#34;&gt;&lt;a href=&#34;#cb40-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        swap(L, R);&lt;/span&gt;
&lt;span id=&#34;cb40-24&#34;&gt;&lt;a href=&#34;#cb40-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[L].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-25&#34;&gt;&lt;a href=&#34;#cb40-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[R].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-26&#34;&gt;&lt;a href=&#34;#cb40-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].mark = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-27&#34;&gt;&lt;a href=&#34;#cb40-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-28&#34;&gt;&lt;a href=&#34;#cb40-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-29&#34;&gt;&lt;a href=&#34;#cb40-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-30&#34;&gt;&lt;a href=&#34;#cb40-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-31&#34;&gt;&lt;a href=&#34;#cb40-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rotate(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-32&#34;&gt;&lt;a href=&#34;#cb40-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb40-33&#34;&gt;&lt;a href=&#34;#cb40-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(fa); pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-34&#34;&gt;&lt;a href=&#34;#cb40-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-35&#34;&gt;&lt;a href=&#34;#cb40-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].ch[d1] = t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb40-36&#34;&gt;&lt;a href=&#34;#cb40-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb40-37&#34;&gt;&lt;a href=&#34;#cb40-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].ch[d1 ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fa;&lt;/span&gt;
&lt;span id=&#34;cb40-38&#34;&gt;&lt;a href=&#34;#cb40-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[fa].fa = u;&lt;/span&gt;
&lt;span id=&#34;cb40-39&#34;&gt;&lt;a href=&#34;#cb40-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa)&lt;/span&gt;
&lt;span id=&#34;cb40-40&#34;&gt;&lt;a href=&#34;#cb40-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[gfa].ch[d2] = u;&lt;/span&gt;
&lt;span id=&#34;cb40-41&#34;&gt;&lt;a href=&#34;#cb40-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = gfa;&lt;/span&gt;
&lt;span id=&#34;cb40-42&#34;&gt;&lt;a href=&#34;#cb40-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-43&#34;&gt;&lt;a href=&#34;#cb40-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb40-44&#34;&gt;&lt;a href=&#34;#cb40-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-45&#34;&gt;&lt;a href=&#34;#cb40-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-46&#34;&gt;&lt;a href=&#34;#cb40-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-47&#34;&gt;&lt;a href=&#34;#cb40-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; splay(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; goal) {&lt;/span&gt;
&lt;span id=&#34;cb40-48&#34;&gt;&lt;a href=&#34;#cb40-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-49&#34;&gt;&lt;a href=&#34;#cb40-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t[u].fa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb40-50&#34;&gt;&lt;a href=&#34;#cb40-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa = t[u].fa, gfa = t[fa].fa;&lt;/span&gt;
&lt;span id=&#34;cb40-51&#34;&gt;&lt;a href=&#34;#cb40-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d1 = get(u), d2 = get(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-52&#34;&gt;&lt;a href=&#34;#cb40-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (gfa != goal) {&lt;/span&gt;
&lt;span id=&#34;cb40-53&#34;&gt;&lt;a href=&#34;#cb40-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d1 == d2)&lt;/span&gt;
&lt;span id=&#34;cb40-54&#34;&gt;&lt;a href=&#34;#cb40-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                rotate(fa);&lt;/span&gt;
&lt;span id=&#34;cb40-55&#34;&gt;&lt;a href=&#34;#cb40-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb40-56&#34;&gt;&lt;a href=&#34;#cb40-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-57&#34;&gt;&lt;a href=&#34;#cb40-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rotate(u);&lt;/span&gt;
&lt;span id=&#34;cb40-58&#34;&gt;&lt;a href=&#34;#cb40-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-59&#34;&gt;&lt;a href=&#34;#cb40-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!goal)&lt;/span&gt;
&lt;span id=&#34;cb40-60&#34;&gt;&lt;a href=&#34;#cb40-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root = u;&lt;/span&gt;
&lt;span id=&#34;cb40-61&#34;&gt;&lt;a href=&#34;#cb40-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-62&#34;&gt;&lt;a href=&#34;#cb40-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-63&#34;&gt;&lt;a href=&#34;#cb40-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-64&#34;&gt;&lt;a href=&#34;#cb40-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb40-65&#34;&gt;&lt;a href=&#34;#cb40-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cur = (i + j) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-66&#34;&gt;&lt;a href=&#34;#cb40-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb40-67&#34;&gt;&lt;a href=&#34;#cb40-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].fa = fa;&lt;/span&gt;
&lt;span id=&#34;cb40-68&#34;&gt;&lt;a href=&#34;#cb40-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-69&#34;&gt;&lt;a href=&#34;#cb40-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-70&#34;&gt;&lt;a href=&#34;#cb40-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = -(maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-71&#34;&gt;&lt;a href=&#34;#cb40-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur == n + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-72&#34;&gt;&lt;a href=&#34;#cb40-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-73&#34;&gt;&lt;a href=&#34;#cb40-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-74&#34;&gt;&lt;a href=&#34;#cb40-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[u].val = cur - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-75&#34;&gt;&lt;a href=&#34;#cb40-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur &amp;gt; i)&lt;/span&gt;
&lt;span id=&#34;cb40-76&#34;&gt;&lt;a href=&#34;#cb40-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(i, cur - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], u);&lt;/span&gt;
&lt;span id=&#34;cb40-77&#34;&gt;&lt;a href=&#34;#cb40-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cur &amp;lt; j)&lt;/span&gt;
&lt;span id=&#34;cb40-78&#34;&gt;&lt;a href=&#34;#cb40-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        build(cur + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], u);&lt;/span&gt;
&lt;span id=&#34;cb40-79&#34;&gt;&lt;a href=&#34;#cb40-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maintain(u);&lt;/span&gt;
&lt;span id=&#34;cb40-80&#34;&gt;&lt;a href=&#34;#cb40-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-81&#34;&gt;&lt;a href=&#34;#cb40-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-82&#34;&gt;&lt;a href=&#34;#cb40-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-83&#34;&gt;&lt;a href=&#34;#cb40-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb40-84&#34;&gt;&lt;a href=&#34;#cb40-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = root;&lt;/span&gt;
&lt;span id=&#34;cb40-85&#34;&gt;&lt;a href=&#34;#cb40-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-86&#34;&gt;&lt;a href=&#34;#cb40-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-87&#34;&gt;&lt;a href=&#34;#cb40-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (val &amp;lt;= t[L].size)&lt;/span&gt;
&lt;span id=&#34;cb40-88&#34;&gt;&lt;a href=&#34;#cb40-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = L;&lt;/span&gt;
&lt;span id=&#34;cb40-89&#34;&gt;&lt;a href=&#34;#cb40-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb40-90&#34;&gt;&lt;a href=&#34;#cb40-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val -= t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-91&#34;&gt;&lt;a href=&#34;#cb40-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!val)&lt;/span&gt;
&lt;span id=&#34;cb40-92&#34;&gt;&lt;a href=&#34;#cb40-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb40-93&#34;&gt;&lt;a href=&#34;#cb40-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u = R;&lt;/span&gt;
&lt;span id=&#34;cb40-94&#34;&gt;&lt;a href=&#34;#cb40-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-95&#34;&gt;&lt;a href=&#34;#cb40-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-96&#34;&gt;&lt;a href=&#34;#cb40-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-97&#34;&gt;&lt;a href=&#34;#cb40-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-98&#34;&gt;&lt;a href=&#34;#cb40-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; reverse(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb40-99&#34;&gt;&lt;a href=&#34;#cb40-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-100&#34;&gt;&lt;a href=&#34;#cb40-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    splay(find(r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), root);&lt;/span&gt;
&lt;span id=&#34;cb40-101&#34;&gt;&lt;a href=&#34;#cb40-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = t[root].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb40-102&#34;&gt;&lt;a href=&#34;#cb40-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb40-103&#34;&gt;&lt;a href=&#34;#cb40-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].mark ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-104&#34;&gt;&lt;a href=&#34;#cb40-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-105&#34;&gt;&lt;a href=&#34;#cb40-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-106&#34;&gt;&lt;a href=&#34;#cb40-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-107&#34;&gt;&lt;a href=&#34;#cb40-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb40-108&#34;&gt;&lt;a href=&#34;#cb40-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u)&lt;/span&gt;
&lt;span id=&#34;cb40-109&#34;&gt;&lt;a href=&#34;#cb40-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-110&#34;&gt;&lt;a href=&#34;#cb40-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushdown(u);&lt;/span&gt;
&lt;span id=&#34;cb40-111&#34;&gt;&lt;a href=&#34;#cb40-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(L);&lt;/span&gt;
&lt;span id=&#34;cb40-112&#34;&gt;&lt;a href=&#34;#cb40-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || t[u].val &amp;gt; n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-113&#34;&gt;&lt;a href=&#34;#cb40-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-114&#34;&gt;&lt;a href=&#34;#cb40-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, t[u].val);&lt;/span&gt;
&lt;span id=&#34;cb40-115&#34;&gt;&lt;a href=&#34;#cb40-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(R);&lt;/span&gt;
&lt;span id=&#34;cb40-116&#34;&gt;&lt;a href=&#34;#cb40-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-117&#34;&gt;&lt;a href=&#34;#cb40-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-118&#34;&gt;&lt;a href=&#34;#cb40-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-119&#34;&gt;&lt;a href=&#34;#cb40-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb40-120&#34;&gt;&lt;a href=&#34;#cb40-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb40-121&#34;&gt;&lt;a href=&#34;#cb40-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    build(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, root, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-122&#34;&gt;&lt;a href=&#34;#cb40-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (m--) {&lt;/span&gt;
&lt;span id=&#34;cb40-123&#34;&gt;&lt;a href=&#34;#cb40-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = read() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = read() + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-124&#34;&gt;&lt;a href=&#34;#cb40-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        reverse(l, r);&lt;/span&gt;
&lt;span id=&#34;cb40-125&#34;&gt;&lt;a href=&#34;#cb40-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-126&#34;&gt;&lt;a href=&#34;#cb40-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(root);&lt;/span&gt;
&lt;span id=&#34;cb40-127&#34;&gt;&lt;a href=&#34;#cb40-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-128&#34;&gt;&lt;a href=&#34;#cb40-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;易错点-1&#34;&gt;易错点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一开始记得&lt;strong&gt;插入正负无穷&lt;/strong&gt;，然后在&lt;strong&gt;计算排名和第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大的时候要考虑其影响&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;旋转操作完成后务必 pushup&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果涉及到标记下传，&lt;strong&gt;需要在可能改变树形的时候或者向下遍历节点的时候先 pushdown&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;插入完成一个节点之后要将其 splay 到根&lt;/strong&gt;，否则可能 &lt;strong&gt;TLE&lt;/strong&gt; 或者&lt;strong&gt;导致其父亲的 &lt;code&gt;size&lt;/code&gt; 计算错误&lt;/strong&gt;（因为 splay 时会一路更新 &lt;code&gt;size&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;splay 一个节点到根之后&lt;strong&gt;务必更新 &lt;code&gt;root&lt;/code&gt; 变量&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于任何操作，如果该改变了节点的父子关系，一定记得既要更改儿子的，也要更改父亲的&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样，最基础的平衡树就学习完了，当然平衡树还有很多其他品种，如红黑树、AVL、替罪羊树、SBT 等等，但事实上 FHQ-Treap 和 Splay 已经基本能解决大多数问题了，所以就不再继续深入了。祝大家 debug 快乐。&lt;/p&gt;
&lt;h2 id=&#34;可持久化平衡树&#34;&gt;可持久化平衡树&lt;/h2&gt;
&lt;h3 id=&#34;简介-1&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;与可持久化线段树类似，可持久化平衡树支持普通平衡树的基本操作，同时支持在某个历史版本的基础上进行查询和修改。&lt;/p&gt;
&lt;p&gt;鉴于 splay 是均摊数据结构，形态多变，不好进行可持久化；而 fhq-treap 只涉及分裂/合并，且不旋转，容易实现，所以一般的“可持久化平衡树”均指“可持久化 fhq-treap”&lt;/p&gt;
&lt;p&gt;前置知识：主席树，fhq-treap&lt;/p&gt;
&lt;h3 id=&#34;做法&#34;&gt;做法&lt;/h3&gt;
&lt;p&gt;对于 merge 和 split 操作，我们可以通过对这些过程经过的节点进行复制以达到可持久化的效果。&lt;/p&gt;
&lt;p&gt;其相比普通的平衡树，是没有什么改变的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb41&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb41-1&#34;&gt;&lt;a href=&#34;#cb41-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb41-2&#34;&gt;&lt;a href=&#34;#cb41-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb41-3&#34;&gt;&lt;a href=&#34;#cb41-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-4&#34;&gt;&lt;a href=&#34;#cb41-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-5&#34;&gt;&lt;a href=&#34;#cb41-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-6&#34;&gt;&lt;a href=&#34;#cb41-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb41-7&#34;&gt;&lt;a href=&#34;#cb41-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = clone(u);&lt;span class=&#34;co&#34;&gt;//*****************&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-8&#34;&gt;&lt;a href=&#34;#cb41-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k, t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb41-9&#34;&gt;&lt;a href=&#34;#cb41-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(x);&lt;/span&gt;
&lt;span id=&#34;cb41-10&#34;&gt;&lt;a href=&#34;#cb41-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb41-11&#34;&gt;&lt;a href=&#34;#cb41-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = clone(u);&lt;span class=&#34;co&#34;&gt;//*****************&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-12&#34;&gt;&lt;a href=&#34;#cb41-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k, x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb41-13&#34;&gt;&lt;a href=&#34;#cb41-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(y);&lt;/span&gt;
&lt;span id=&#34;cb41-14&#34;&gt;&lt;a href=&#34;#cb41-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-15&#34;&gt;&lt;a href=&#34;#cb41-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-16&#34;&gt;&lt;a href=&#34;#cb41-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对比一下普通版的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb42&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb42-1&#34;&gt;&lt;a href=&#34;#cb42-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb42-2&#34;&gt;&lt;a href=&#34;#cb42-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb42-3&#34;&gt;&lt;a href=&#34;#cb42-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-4&#34;&gt;&lt;a href=&#34;#cb42-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-5&#34;&gt;&lt;a href=&#34;#cb42-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-6&#34;&gt;&lt;a href=&#34;#cb42-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k)&lt;/span&gt;
&lt;span id=&#34;cb42-7&#34;&gt;&lt;a href=&#34;#cb42-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u, split(R, k, R, y);&lt;/span&gt;
&lt;span id=&#34;cb42-8&#34;&gt;&lt;a href=&#34;#cb42-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-9&#34;&gt;&lt;a href=&#34;#cb42-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = u, split(L, k, x, L);&lt;/span&gt;
&lt;span id=&#34;cb42-10&#34;&gt;&lt;a href=&#34;#cb42-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb42-11&#34;&gt;&lt;a href=&#34;#cb42-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-12&#34;&gt;&lt;a href=&#34;#cb42-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意一下星号的几行。其本质也就是对进行了修改的节点进行增加并且复制。&lt;/p&gt;
&lt;p&gt;由于我们进行修改的时候，split 和 merge 是成对存在的，所以在 merge 的时候就不需要再复制一遍节点了。&lt;/p&gt;
&lt;p&gt;容易出错的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果存在 pushdown 操作，那么 pushdown 的时候也要复制一遍节点&lt;/li&gt;
&lt;li&gt;注意哪里要 pushdown 以及哪里不要 pushdown&lt;/li&gt;
&lt;li&gt;思考清楚各个数据间被调用的先后顺序及关系&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;普通平衡树的实现-2&#34;&gt;普通平衡树的实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb43&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb43-1&#34;&gt;&lt;a href=&#34;#cb43-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-2&#34;&gt;&lt;a href=&#34;#cb43-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-3&#34;&gt;&lt;a href=&#34;#cb43-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-4&#34;&gt;&lt;a href=&#34;#cb43-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-5&#34;&gt;&lt;a href=&#34;#cb43-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb43-6&#34;&gt;&lt;a href=&#34;#cb43-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb43-7&#34;&gt;&lt;a href=&#34;#cb43-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-8&#34;&gt;&lt;a href=&#34;#cb43-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb43-9&#34;&gt;&lt;a href=&#34;#cb43-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;21&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-10&#34;&gt;&lt;a href=&#34;#cb43-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], * __p1 = ibuf, * __p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb43-11&#34;&gt;&lt;a href=&#34;#cb43-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++; }&lt;/span&gt;
&lt;span id=&#34;cb43-12&#34;&gt;&lt;a href=&#34;#cb43-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T&amp;amp; n) {&lt;/span&gt;
&lt;span id=&#34;cb43-13&#34;&gt;&lt;a href=&#34;#cb43-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-14&#34;&gt;&lt;a href=&#34;#cb43-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb43-15&#34;&gt;&lt;a href=&#34;#cb43-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb43-16&#34;&gt;&lt;a href=&#34;#cb43-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb43-17&#34;&gt;&lt;a href=&#34;#cb43-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb43-18&#34;&gt;&lt;a href=&#34;#cb43-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb43-19&#34;&gt;&lt;a href=&#34;#cb43-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb43-20&#34;&gt;&lt;a href=&#34;#cb43-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-21&#34;&gt;&lt;a href=&#34;#cb43-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; obuf[maxc], * __pO = obuf;&lt;/span&gt;
&lt;span id=&#34;cb43-22&#34;&gt;&lt;a href=&#34;#cb43-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; putchar(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) { *__pO++ = c; }&lt;/span&gt;
&lt;span id=&#34;cb43-23&#34;&gt;&lt;a href=&#34;#cb43-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print(T x) {&lt;/span&gt;
&lt;span id=&#34;cb43-24&#34;&gt;&lt;a href=&#34;#cb43-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), print(-x);&lt;/span&gt;
&lt;span id=&#34;cb43-25&#34;&gt;&lt;a href=&#34;#cb43-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb43-26&#34;&gt;&lt;a href=&#34;#cb43-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=&#34;dv&#34;&gt;9&lt;/span&gt;) print(x / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-27&#34;&gt;&lt;a href=&#34;#cb43-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            putchar(x % &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-28&#34;&gt;&lt;a href=&#34;#cb43-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb43-29&#34;&gt;&lt;a href=&#34;#cb43-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-30&#34;&gt;&lt;a href=&#34;#cb43-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-31&#34;&gt;&lt;a href=&#34;#cb43-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; output() { fwrite(obuf, __pO - obuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, stdout); }&lt;/span&gt;
&lt;span id=&#34;cb43-32&#34;&gt;&lt;a href=&#34;#cb43-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-33&#34;&gt;&lt;a href=&#34;#cb43-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-34&#34;&gt;&lt;a href=&#34;#cb43-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb43-35&#34;&gt;&lt;a href=&#34;#cb43-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-36&#34;&gt;&lt;a href=&#34;#cb43-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-37&#34;&gt;&lt;a href=&#34;#cb43-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-38&#34;&gt;&lt;a href=&#34;#cb43-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; root[maxn], cnt;&lt;/span&gt;
&lt;span id=&#34;cb43-39&#34;&gt;&lt;a href=&#34;#cb43-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-40&#34;&gt;&lt;a href=&#34;#cb43-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb43-41&#34;&gt;&lt;a href=&#34;#cb43-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], size, val, key;&lt;/span&gt;
&lt;span id=&#34;cb43-42&#34;&gt;&lt;a href=&#34;#cb43-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; clear() {ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = size = val = key = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb43-43&#34;&gt;&lt;a href=&#34;#cb43-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn * &lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb43-44&#34;&gt;&lt;a href=&#34;#cb43-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-45&#34;&gt;&lt;a href=&#34;#cb43-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb43-46&#34;&gt;&lt;a href=&#34;#cb43-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&#34;cb43-47&#34;&gt;&lt;a href=&#34;#cb43-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-48&#34;&gt;&lt;a href=&#34;#cb43-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pushup(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) { t[u].size = t[L].size + t[R].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; }&lt;/span&gt;
&lt;span id=&#34;cb43-49&#34;&gt;&lt;a href=&#34;#cb43-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-50&#34;&gt;&lt;a href=&#34;#cb43-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; newnode() { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ++cnt; }&lt;/span&gt;
&lt;span id=&#34;cb43-51&#34;&gt;&lt;a href=&#34;#cb43-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-52&#34;&gt;&lt;a href=&#34;#cb43-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; newnode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-53&#34;&gt;&lt;a href=&#34;#cb43-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = newnode();&lt;/span&gt;
&lt;span id=&#34;cb43-54&#34;&gt;&lt;a href=&#34;#cb43-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = t[u].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t[u].size = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[u].val = val, t[u].key = rand();&lt;/span&gt;
&lt;span id=&#34;cb43-55&#34;&gt;&lt;a href=&#34;#cb43-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb43-56&#34;&gt;&lt;a href=&#34;#cb43-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-57&#34;&gt;&lt;a href=&#34;#cb43-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-58&#34;&gt;&lt;a href=&#34;#cb43-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-59&#34;&gt;&lt;a href=&#34;#cb43-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ^ y;&lt;/span&gt;
&lt;span id=&#34;cb43-60&#34;&gt;&lt;a href=&#34;#cb43-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[x].key &amp;lt; t[y].key)&lt;/span&gt;
&lt;span id=&#34;cb43-61&#34;&gt;&lt;a href=&#34;#cb43-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = merge(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y), pushup(x), x;&lt;/span&gt;
&lt;span id=&#34;cb43-62&#34;&gt;&lt;a href=&#34;#cb43-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = merge(x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]), pushup(y), y;&lt;/span&gt;
&lt;span id=&#34;cb43-63&#34;&gt;&lt;a href=&#34;#cb43-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-64&#34;&gt;&lt;a href=&#34;#cb43-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-65&#34;&gt;&lt;a href=&#34;#cb43-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-66&#34;&gt;&lt;a href=&#34;#cb43-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) {&lt;/span&gt;
&lt;span id=&#34;cb43-67&#34;&gt;&lt;a href=&#34;#cb43-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-68&#34;&gt;&lt;a href=&#34;#cb43-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-69&#34;&gt;&lt;a href=&#34;#cb43-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-70&#34;&gt;&lt;a href=&#34;#cb43-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[u].val &amp;lt;= k) {&lt;/span&gt;
&lt;span id=&#34;cb43-71&#34;&gt;&lt;a href=&#34;#cb43-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = newnode(), t[x] = t[u];&lt;/span&gt;
&lt;span id=&#34;cb43-72&#34;&gt;&lt;a href=&#34;#cb43-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k, t[x].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], y);&lt;/span&gt;
&lt;span id=&#34;cb43-73&#34;&gt;&lt;a href=&#34;#cb43-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(x);&lt;/span&gt;
&lt;span id=&#34;cb43-74&#34;&gt;&lt;a href=&#34;#cb43-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb43-75&#34;&gt;&lt;a href=&#34;#cb43-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = newnode(), t[y] = t[u];&lt;/span&gt;
&lt;span id=&#34;cb43-76&#34;&gt;&lt;a href=&#34;#cb43-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k, x, t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb43-77&#34;&gt;&lt;a href=&#34;#cb43-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pushup(y);&lt;/span&gt;
&lt;span id=&#34;cb43-78&#34;&gt;&lt;a href=&#34;#cb43-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-79&#34;&gt;&lt;a href=&#34;#cb43-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-80&#34;&gt;&lt;a href=&#34;#cb43-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-81&#34;&gt;&lt;a href=&#34;#cb43-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-82&#34;&gt;&lt;a href=&#34;#cb43-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-83&#34;&gt;&lt;a href=&#34;#cb43-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb43-84&#34;&gt;&lt;a href=&#34;#cb43-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(u, val, x, z);&lt;/span&gt;
&lt;span id=&#34;cb43-85&#34;&gt;&lt;a href=&#34;#cb43-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = newnode(val);&lt;/span&gt;
&lt;span id=&#34;cb43-86&#34;&gt;&lt;a href=&#34;#cb43-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb43-87&#34;&gt;&lt;a href=&#34;#cb43-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-88&#34;&gt;&lt;a href=&#34;#cb43-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-89&#34;&gt;&lt;a href=&#34;#cb43-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-90&#34;&gt;&lt;a href=&#34;#cb43-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; delNode(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-91&#34;&gt;&lt;a href=&#34;#cb43-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, z;&lt;/span&gt;
&lt;span id=&#34;cb43-92&#34;&gt;&lt;a href=&#34;#cb43-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(u, val, x, z);&lt;/span&gt;
&lt;span id=&#34;cb43-93&#34;&gt;&lt;a href=&#34;#cb43-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(x, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-94&#34;&gt;&lt;a href=&#34;#cb43-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y = merge(t[y].ch[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], t[y].ch[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb43-95&#34;&gt;&lt;a href=&#34;#cb43-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = merge(merge(x, y), z);&lt;/span&gt;
&lt;span id=&#34;cb43-96&#34;&gt;&lt;a href=&#34;#cb43-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-97&#34;&gt;&lt;a href=&#34;#cb43-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-98&#34;&gt;&lt;a href=&#34;#cb43-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-99&#34;&gt;&lt;a href=&#34;#cb43-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getRank(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-100&#34;&gt;&lt;a href=&#34;#cb43-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb43-101&#34;&gt;&lt;a href=&#34;#cb43-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(u, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-102&#34;&gt;&lt;a href=&#34;#cb43-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = t[x].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-103&#34;&gt;&lt;a href=&#34;#cb43-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-104&#34;&gt;&lt;a href=&#34;#cb43-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb43-105&#34;&gt;&lt;a href=&#34;#cb43-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-106&#34;&gt;&lt;a href=&#34;#cb43-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-107&#34;&gt;&lt;a href=&#34;#cb43-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getKth(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb43-108&#34;&gt;&lt;a href=&#34;#cb43-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == t[L].size + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[u].val;&lt;/span&gt;
&lt;span id=&#34;cb43-109&#34;&gt;&lt;a href=&#34;#cb43-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt;= t[L].size) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; getKth(L, k);&lt;/span&gt;
&lt;span id=&#34;cb43-110&#34;&gt;&lt;a href=&#34;#cb43-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; getKth(R, k - t[L].size - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-111&#34;&gt;&lt;a href=&#34;#cb43-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-112&#34;&gt;&lt;a href=&#34;#cb43-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-113&#34;&gt;&lt;a href=&#34;#cb43-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getPre(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-114&#34;&gt;&lt;a href=&#34;#cb43-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, ans;&lt;/span&gt;
&lt;span id=&#34;cb43-115&#34;&gt;&lt;a href=&#34;#cb43-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-116&#34;&gt;&lt;a href=&#34;#cb43-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;2147483647&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-117&#34;&gt;&lt;a href=&#34;#cb43-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = getKth(x, t[x].size);&lt;/span&gt;
&lt;span id=&#34;cb43-118&#34;&gt;&lt;a href=&#34;#cb43-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-119&#34;&gt;&lt;a href=&#34;#cb43-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb43-120&#34;&gt;&lt;a href=&#34;#cb43-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-121&#34;&gt;&lt;a href=&#34;#cb43-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-122&#34;&gt;&lt;a href=&#34;#cb43-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getSuc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; root, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val) {&lt;/span&gt;
&lt;span id=&#34;cb43-123&#34;&gt;&lt;a href=&#34;#cb43-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, ans;&lt;/span&gt;
&lt;span id=&#34;cb43-124&#34;&gt;&lt;a href=&#34;#cb43-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    split(root, val, x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-125&#34;&gt;&lt;a href=&#34;#cb43-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2147483647&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-126&#34;&gt;&lt;a href=&#34;#cb43-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = getKth(y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-127&#34;&gt;&lt;a href=&#34;#cb43-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = merge(x, y);&lt;/span&gt;
&lt;span id=&#34;cb43-128&#34;&gt;&lt;a href=&#34;#cb43-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb43-129&#34;&gt;&lt;a href=&#34;#cb43-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-130&#34;&gt;&lt;a href=&#34;#cb43-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-131&#34;&gt;&lt;a href=&#34;#cb43-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb43-132&#34;&gt;&lt;a href=&#34;#cb43-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-133&#34;&gt;&lt;a href=&#34;#cb43-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; read(n);&lt;/span&gt;
&lt;span id=&#34;cb43-134&#34;&gt;&lt;a href=&#34;#cb43-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb43-135&#34;&gt;&lt;a href=&#34;#cb43-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v, op, val; read(v), read(op), read(val);&lt;/span&gt;
&lt;span id=&#34;cb43-136&#34;&gt;&lt;a href=&#34;#cb43-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root[i] = root[v];&lt;/span&gt;
&lt;span id=&#34;cb43-137&#34;&gt;&lt;a href=&#34;#cb43-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) insert(root[i], val);&lt;/span&gt;
&lt;span id=&#34;cb43-138&#34;&gt;&lt;a href=&#34;#cb43-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) delNode(root[i], val);&lt;/span&gt;
&lt;span id=&#34;cb43-139&#34;&gt;&lt;a href=&#34;#cb43-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) print(getRank(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-140&#34;&gt;&lt;a href=&#34;#cb43-140&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) print(getKth(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-141&#34;&gt;&lt;a href=&#34;#cb43-141&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;) print(getPre(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-142&#34;&gt;&lt;a href=&#34;#cb43-142&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) print(getSuc(root[i], val)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-143&#34;&gt;&lt;a href=&#34;#cb43-143&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-144&#34;&gt;&lt;a href=&#34;#cb43-144&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-145&#34;&gt;&lt;a href=&#34;#cb43-145&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        
    </channel>
</rss>

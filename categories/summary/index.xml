<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>总结 on 清烛的博客</title>
        <link>https://oi.imyangty.com/categories/summary/</link>
        <description>Recent content in 总结 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Wed, 10 Aug 2022 14:31:39 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/categories/summary/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Codeforces 比赛日记</title>
        <link>https://oi.imyangty.com/summary-codeforces/</link>
        <pubDate>Wed, 17 Feb 2021 18:11:15 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-codeforces/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg1.webp" alt="Featured image of post Codeforces 比赛日记" /&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Round&lt;/th&gt;
&lt;th&gt;div&lt;/th&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;sol&lt;/th&gt;
&lt;th&gt;rk&lt;/th&gt;
&lt;th&gt;perf&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;th&gt;G&lt;/th&gt;
&lt;th&gt;H&lt;/th&gt;
&lt;th&gt;I&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R670&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1406&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;9207&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R695&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1467&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;6299&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R697&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1475&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R698&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1478&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4882&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R698&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1477&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;EDU103&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1476&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4551&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R699&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1481&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2113&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R700&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1480&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;6974&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R700&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1479&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R701&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1485&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU104&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1487&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4964&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R702&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1490&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1352&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R705&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1493&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;869&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R706&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1496&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1792&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R706&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1495&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R707&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1501&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1320&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R707&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R712&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1504&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;8171&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R712&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1503&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R718&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1517&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;HSSC21&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1553&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R733&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1530&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R736&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1549&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;373&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R736&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1548&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R737&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1557&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;463&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R738&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1559&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1780&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R740&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1561&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1738&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R740&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1558&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R741&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1562&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3894&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;DR 2021&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1556&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R742&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1567&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2622&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R743&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1573&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R743&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1572&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;EDU113&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1569&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;8249&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;GR17&lt;/td&gt;
&lt;td&gt;gr&lt;/td&gt;
&lt;td&gt;1566&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4019&lt;/td&gt;
&lt;td&gt;1330&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;EDU114&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1574&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1807&lt;/td&gt;
&lt;td&gt;1585&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R745&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1581&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;279&lt;/td&gt;
&lt;td&gt;1886&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R745&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1580&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R746&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1592&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;550&lt;/td&gt;
&lt;td&gt;1928&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R747&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1594&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;605&lt;/td&gt;
&lt;td&gt;1825&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU115&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1598&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;581&lt;/td&gt;
&lt;td&gt;1825&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R749&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1586&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;349&lt;/td&gt;
&lt;td&gt;2284&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R750&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1582&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1738&lt;/td&gt;
&lt;td&gt;1514&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R754&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1605&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;869&lt;/td&gt;
&lt;td&gt;1787&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R755&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1588&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;451&lt;/td&gt;
&lt;td&gt;1933&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R758&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1608&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;522&lt;/td&gt;
&lt;td&gt;2059&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;GR18&lt;/td&gt;
&lt;td&gt;gr&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;816&lt;/td&gt;
&lt;td&gt;2031&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Hello2022&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1621&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;skip&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R765&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1625&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;2191&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R766&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1627&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1275&lt;/td&gt;
&lt;td&gt;1678&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU121&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1626&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R767&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1629&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;td&gt;1988&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R767&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1628&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R768&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1631&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2765&lt;/td&gt;
&lt;td&gt;1435&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R768&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1630&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R769&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1632&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1620&lt;/td&gt;
&lt;td&gt;1661&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU122&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1633&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;vp&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;GR19&lt;/td&gt;
&lt;td&gt;gr&lt;/td&gt;
&lt;td&gt;1637&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1047&lt;/td&gt;
&lt;td&gt;1975&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R771&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1638&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;521&lt;/td&gt;
&lt;td&gt;1936&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R772&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1635&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;2204&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU123&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1644&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;365&lt;/td&gt;
&lt;td&gt;1968&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R773&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1641&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;689&lt;/td&gt;
&lt;td&gt;1884&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R777&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1647&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;549&lt;/td&gt;
&lt;td&gt;1908&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R781&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1665&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3461&lt;/td&gt;
&lt;td&gt;1276&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU126&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1661&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;311&lt;/td&gt;
&lt;td&gt;2001&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R785&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1673&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1368&lt;/td&gt;
&lt;td&gt;1624&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;EDU128&lt;/td&gt;
&lt;td&gt;edu&lt;/td&gt;
&lt;td&gt;1680&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;958&lt;/td&gt;
&lt;td&gt;1742&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R796&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1687&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R796&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1688&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;181&lt;/td&gt;
&lt;td&gt;2034&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R801&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1695&lt;/td&gt;
&lt;td&gt;3.5&lt;/td&gt;
&lt;td&gt;332&lt;/td&gt;
&lt;td&gt;2038&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R802&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1700&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;2044&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R807&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1705&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;2206&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;TON R2&lt;/td&gt;
&lt;td&gt;1+2&lt;/td&gt;
&lt;td&gt;1704&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;424&lt;/td&gt;
&lt;td&gt;2303&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R812&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1713&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;226&lt;/td&gt;
&lt;td&gt;2138&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;R813&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1712&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;td&gt;2318&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;R815&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1720&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;287&lt;/td&gt;
&lt;td&gt;2042&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;codeforces-round-670-div.-2&#34;&gt;Codeforces Round #670 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打的第一场 CF 然而一题都没做出来。&lt;/p&gt;
&lt;h3 id=&#34;d---three-sequences&#34;&gt;1406D - Three Sequences&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，要求构造一个不减序列 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 和一个不增序列 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a_i = b_i + c_i\)&lt;/span&gt;。请最小化 &lt;span class=&#34;math inline&#34;&gt;\(\max\{b_i, c_i\}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次操作，每次可以对 &lt;span class=&#34;math inline&#34;&gt;\(a_l, a_{l + 1},\cdots , a_r\)&lt;/span&gt; 加上 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。问每次修改后的最小的 &lt;span class=&#34;math inline&#34;&gt;\(\max\{b_i, c_i\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;一个比较奇妙的贪心。我们注意到答案为 &lt;span class=&#34;math inline&#34;&gt;\(\max(b_n, c_1)\)&lt;/span&gt;。而我们发现，对于 &lt;span class=&#34;math inline&#34;&gt;\(a_{i + 1} &amp;gt; a_i\)&lt;/span&gt;，我们若是调整在 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 上，则不优；但如若调整 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，则因为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 递增，所以令 &lt;span class=&#34;math inline&#34;&gt;\(b_{i + 1} = b_i + a_{i + 1} - a_i\)&lt;/span&gt; 是最优的。而 &lt;span class=&#34;math inline&#34;&gt;\(a_{i + 1} &amp;lt; a_i\)&lt;/span&gt; 时，我们若是调整 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(c_{i + 1} = c_i + a_{i +1} - a_i\)&lt;/span&gt; 是最优的。&lt;/p&gt;
&lt;p&gt;好，那么我们可以知道，&lt;span class=&#34;math inline&#34;&gt;\(a_1 = b_1 + c_1 = b_n - \sum_{i = 2}^n(b_i - b_{i - 1}) + c_1\)&lt;/span&gt;。故令 &lt;span class=&#34;math inline&#34;&gt;\(b_n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(c_1\)&lt;/span&gt; 尽量接近最优。答案为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\lceil\frac{a_1 + \sum_{i = 2}^n(b_i - b_{i - 1})}{2}\rceil\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = 2}^n(b_i - b_{i - 1}) = \sum_{i = 2}^n(a_i - a_{i - 1})\cdot[a_i &amp;gt; a_{i - 1}]\)&lt;/span&gt;。这个东西应该是可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 维护的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, q;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], d[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), d[i] = a[i] - a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll sum = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d[i] &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) sum += d[i];&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print((ll)ceil((sum + d[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q; read(q);&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--) {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r; ll x;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(l, r, x), ++r;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll dl = d[l], dr = d[r];&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        d[l] += x, d[r] -= x;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l != &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sum += max(d[l], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) - max(dl, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r != n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sum += max(d[r], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) - max(dr, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print((ll)ceil((sum + d[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---deleting-numbers&#34;&gt;1406E - Deleting Numbers&lt;/h3&gt;
&lt;p&gt;交互题。交互库给定一个数字 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，要你猜一个数字 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le x\le n\)&lt;/span&gt;）。一开始你有一个集合 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 2,\cdots, n\}\)&lt;/span&gt;，你可以进行至多 &lt;span class=&#34;math inline&#34;&gt;\(10000\)&lt;/span&gt; 次操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A a&lt;/code&gt;：询问当前集合中有多少数为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;B a&lt;/code&gt;：询问当前集合中有多少数为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的倍数，并将他们全部删掉。&lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 不会被删掉。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C a&lt;/code&gt;：告诉交互库答案为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le x\le n\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先，有一种很朴素的想法是枚举每个质数，删除其倍数然后判断 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是否有这一个质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，然后就依次枚举 &lt;span class=&#34;math inline&#34;&gt;\(p^k\)&lt;/span&gt; 并询问 &lt;code&gt;A p^k&lt;/code&gt; 直到收到的答案为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 就有一部分 &lt;span class=&#34;math inline&#34;&gt;\(p^{k - 1}\)&lt;/span&gt;，根据唯一分解定理，我们这样子就能确定 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(\tau(n)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中质数的幂的数量，&lt;span class=&#34;math inline&#34;&gt;\(\pi(n)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中质数个数。发现 &lt;span class=&#34;math inline&#34;&gt;\(\pi(10^5) = 9592\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\tau(10^5) = 9700\)&lt;/span&gt;。上面这个做法的询问次数为 &lt;span class=&#34;math inline&#34;&gt;\(\pi(n) + \tau(n) + 1\)&lt;/span&gt;，显然要寄。&lt;/p&gt;
&lt;p&gt;考虑优化。一个很常见的结论是，考虑根号分治，将质因子分为 &lt;span class=&#34;math inline&#34;&gt;\(\le \sqrt n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt;\sqrt n\)&lt;/span&gt; 两部分，则 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; \sqrt n\)&lt;/span&gt; 的一定只有一个。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\le \sqrt n\)&lt;/span&gt; 的部分，我们直接用上面的方法暴力，操作次数为 &lt;span class=&#34;math inline&#34;&gt;\(\pi(\sqrt n) + \tau(\sqrt n)\le 238\)&lt;/span&gt;。对于 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; \sqrt n\)&lt;/span&gt; 的部分，我们考虑分块，每次删 &lt;span class=&#34;math inline&#34;&gt;\(100\)&lt;/span&gt; 个质数，删了之后询问被删掉的数是否为 &lt;span class=&#34;math inline&#34;&gt;\(100\)&lt;/span&gt; 个，如果不是，那么直接暴力找这个 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt;\sqrt n\)&lt;/span&gt; 的质因子就能得到答案了。&lt;/p&gt;
&lt;p&gt;细节有点烦人，一定要小心。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], p[maxn], tot, n;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ask(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c) {&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; c &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl &amp;lt;&amp;lt; flush;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * p[j] &amp;lt;= n; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; B = (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)ceil(sqrt(&lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt;)), ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= tot &amp;amp;&amp;amp; p[i] &amp;lt;= B; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ask(p[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = p[i], flag = ask(p[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (flag &amp;amp;&amp;amp; (tmp *= p[i]) &amp;lt;= n) flag = ask(tmp, &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans *= tmp / p[i];&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (i; i &amp;lt;= tot; i += &lt;span class=&#34;dv&#34;&gt;98&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt0 = ask(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;), r = min(i + &lt;span class=&#34;dv&#34;&gt;97&lt;/span&gt;, tot);&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, i, r) cnt0 -= ask(p[j], &lt;span class=&#34;ch&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt1 = ask(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt0 != cnt1) {&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, i, r) {&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ask(p[j], &lt;span class=&#34;ch&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;)) {&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    ans *= p[j];&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;C &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; endl &amp;lt;&amp;lt; flush;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-698&#34;&gt;Codeforces Round 698&lt;/h2&gt;
&lt;h3 id=&#34;a---nezzar-and-board&#34;&gt;1477A - Nezzar and Board&lt;/h3&gt;
&lt;p&gt;一开始黑板上写着 &lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt; 个不同整数，给定 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，一次操作可以任意选两个（不一定互异的数）&lt;span class=&#34;math inline&#34;&gt;\(x,y\)&lt;/span&gt; 然后在黑板上加上 &lt;span class=&#34;math inline&#34;&gt;\(2x-y\)&lt;/span&gt;，问有限次操作后能否得到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。值域 &lt;span class=&#34;math inline&#34;&gt;\([-10^{18}, 10^{18}]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;发现最后形式很像是一个判断满足某种条件的线性组合能不能得到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的问题，即裴蜀定理。&lt;/p&gt;
&lt;p&gt;发现当 &lt;span class=&#34;math inline&#34;&gt;\(x_1 = 0\)&lt;/span&gt; 的时候，我们可以任意构造 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 的倍数，所以当 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x_2,\cdots, x_n)\mid k\)&lt;/span&gt; 的时候有解。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(x_1\ne 0\)&lt;/span&gt; 的情况，就将 &lt;span class=&#34;math inline&#34;&gt;\(x_2,\cdots, x_n, k\)&lt;/span&gt; 全部减去 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;，根据 &lt;span class=&#34;math inline&#34;&gt;\(2x-y\)&lt;/span&gt; 的过程会发现 &lt;span class=&#34;math inline&#34;&gt;\(-x_1\)&lt;/span&gt; 的偏移量是一直带着走的，没有影响。&lt;/p&gt;
&lt;p&gt;当然 Asd_Okuu 教育了另一种思路：考虑 &lt;span class=&#34;math inline&#34;&gt;\(z = 2x - y\)&lt;/span&gt; 的过程是在数轴上做轴对称（钦定 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;gt;x\)&lt;/span&gt;），那么一定有 &lt;span class=&#34;math inline&#34;&gt;\(z\equiv x\pmod{(y-x)}\)&lt;/span&gt;，即我们可以用长度为 &lt;span class=&#34;math inline&#34;&gt;\(y-x\)&lt;/span&gt; 的段来覆盖。所以若存在两个段的长度分别为 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b) = 1\)&lt;/span&gt;，那么这些段线性组合起来是可以把数轴上所有点干碎的，其实也就是裴蜀定理了。&lt;/p&gt;
&lt;p&gt;所以将所有数排个序，将差分做 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;，发现这样是充分的，搞定了。&lt;/p&gt;
&lt;h3 id=&#34;b---nezzar-and-binary-string&#34;&gt;1477B - Nezzar and Binary String&lt;/h3&gt;
&lt;p&gt;一个 0-1 串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，需要满足第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天时 &lt;span class=&#34;math inline&#34;&gt;\([l_i,r_i]\)&lt;/span&gt; 内不同时含 0 和 1，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天结束时可以改变里面&lt;strong&gt;少于&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\((r_i - l_1 + 1) / 2\)&lt;/span&gt; 个字符，同时需要 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 天结束后变成 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，问能否达成。数据范围 &lt;span class=&#34;math inline&#34;&gt;\(2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;正着做太难了，倒着来吧。倒着来就相当于是填平区间，若里面 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 个数等于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个数就不可以，否则往改动少的那个去改，就完事了。。。。。拿个分块或者线段树维护就行了。&lt;/p&gt;
&lt;h3 id=&#34;c---nezzar-and-nice-beatmap&#34;&gt;1477C - Nezzar and Nice Beatmap&lt;/h3&gt;
&lt;p&gt;给定平面直角坐标系上的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\(A_1,A_2,\dots,A_n\)&lt;/span&gt; ，求一个排列 &lt;span class=&#34;math inline&#34;&gt;\(p_1,p_2,\dots,p_n\)&lt;/span&gt; 使得对于任意一个 $i(1,n),i$ 都有 &lt;span class=&#34;math inline&#34;&gt;\(\angle A_{p_i-1} A_{p_i} A_{p_i+1} &amp;lt; \dfrac{\pi}{2}\)&lt;/span&gt; 。若无解，输出 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; ，若有多个答案，输出任意一个即可。&lt;span class=&#34;math inline&#34;&gt;\(3 \leq n \leq 5000,\ -10^9\leq x_i,y_i \leq 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;手玩一下发现解一定存在，而且似乎每次选最远的点就可以了，结果真的就是这样，选出钝角的时候我们总可以通过选更长的边来解决钝角的问题。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-700&#34;&gt;Codeforces Round 700&lt;/h2&gt;
&lt;h3 id=&#34;b---painting-the-array&#34;&gt;1479B - Painting the Array&lt;/h3&gt;
&lt;p&gt;给定数组 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，你将将 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 染成 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 色，其中 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 为你指定的 &lt;span class=&#34;math inline&#34;&gt;\(0/1\)&lt;/span&gt; 数组，将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 中被染成 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 色的数字取出来按原顺序排成 &lt;span class=&#34;math inline&#34;&gt;\(a^{(0)}\)&lt;/span&gt;，染成 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 色的排成 &lt;span class=&#34;math inline&#34;&gt;\(a^{(1)}\)&lt;/span&gt;，定义 &lt;span class=&#34;math inline&#34;&gt;\(seg(a)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 中连续段的个数，求 &lt;span class=&#34;math inline&#34;&gt;\(seg(a^{(0)}) + seg(a^{(1)})\)&lt;/span&gt; 的最大值/最小值（分别对应 B1/B2），数据范围 &lt;span class=&#34;math inline&#34;&gt;\(10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;高妙贪心真的不是很玩得起，考虑 dp。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,a,b}\)&lt;/span&gt; 表示填了 &lt;span class=&#34;math inline&#34;&gt;\([1,i]\)&lt;/span&gt;，第一个序列末尾为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，第二个序列末尾为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最大/最小答案。发现可以干掉一维因为必然有一维是 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;。于是变成了 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,x}\)&lt;/span&gt; 表示填完 &lt;span class=&#34;math inline&#34;&gt;\([1,i]\)&lt;/span&gt;，分别的末尾为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，能达到的最大/最小答案。&lt;/p&gt;
&lt;p&gt;那么有转移 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_{i, a_{i-1}} &amp;amp;\leftarrow f_{i-1,x} + 1&amp;amp;a_i \ne x\\
f_{i,a_{i-1}}&amp;amp;\leftarrow f_{i-1,x}&amp;amp;a_i=x\\
f_{i,x}&amp;amp;\leftarrow f_{i-1,x} + 1&amp;amp;a_i\ne a_{i-1}\\
f_{i,x}&amp;amp;\leftarrow f_{i-1,x}&amp;amp;a_i=a_{i-1}
\end{aligned}
\]&lt;/span&gt; 这个东西可以使用线段树维护，大部分的转移都是平凡的 &lt;span class=&#34;math inline&#34;&gt;\(+1\)&lt;/span&gt;，写一个区间加区间最值的线段树即可，&lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 带走。&lt;/p&gt;
&lt;p&gt;当然高妙贪心也是有意思的——看根据两边队尾的 &lt;span class=&#34;math inline&#34;&gt;\(nxt\)&lt;/span&gt; 来选择，感觉非常的牛逼。&lt;/p&gt;
&lt;h3 id=&#34;c---continuous-city&#34;&gt;1479C - Continuous City&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le L\le R\le 10^6\)&lt;/span&gt;，构造一个有向带权图。要求 &lt;span class=&#34;math inline&#34;&gt;\(n\le 32\)&lt;/span&gt;，且所有边都从编号小的点指向编号大的点，此外还要求 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的所有路径权值都在 &lt;span class=&#34;math inline&#34;&gt;\([L, R]\)&lt;/span&gt; 内且不存在 &lt;span class=&#34;math inline&#34;&gt;\(x\in[L,R]\)&lt;/span&gt; 使得不存在或多于一条 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的路径的权值为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。或说明无解。&lt;/p&gt;
&lt;p&gt;说人话就是 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的路径需要恰好有 &lt;span class=&#34;math inline&#34;&gt;\(R - L + 1\)&lt;/span&gt; 条并且权值刚好覆盖了 &lt;span class=&#34;math inline&#34;&gt;\([L,R]\)&lt;/span&gt; 的区间。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 32\)&lt;/span&gt; 有点二进制的意思？考虑构造 &lt;span class=&#34;math inline&#34;&gt;\([1, 2^{k}]\)&lt;/span&gt; 的答案，令经过 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点表示选上 &lt;span class=&#34;math inline&#34;&gt;\(2^{i-2}\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点向后面所有边连上权为 &lt;span class=&#34;math inline&#34;&gt;\(2^{i-2}\)&lt;/span&gt; 的边，再从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 向后面所有点连权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的边，那么从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(k+2\)&lt;/span&gt; 的所有路径就都对应了 &lt;span class=&#34;math inline&#34;&gt;\([1,2^k]\)&lt;/span&gt; 里面的每一个数。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(R\ne 2^k\)&lt;/span&gt; 的情况，令其为 &lt;span class=&#34;math inline&#34;&gt;\(2^k + t\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(2^{k+1}&amp;gt;R\)&lt;/span&gt;。刚才的图中有一个性质，就是对于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点（&lt;span class=&#34;math inline&#34;&gt;\(i&amp;gt;1\)&lt;/span&gt;），&lt;span class=&#34;math inline&#34;&gt;\(1\to i\)&lt;/span&gt; 的所有路径里面是恰好覆盖了 &lt;span class=&#34;math inline&#34;&gt;\([1, 2^{i-2}]\)&lt;/span&gt; 的。并且若我们令 &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; 的二进制表示为 &lt;span class=&#34;math inline&#34;&gt;\((R_kR_{k-1}\cdots R_1R_0)_2\)&lt;/span&gt;，则对于 &lt;span class=&#34;math inline&#34;&gt;\(R_j=1\)&lt;/span&gt;，将该位设为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的话低位就可以任意覆盖的。&lt;/p&gt;
&lt;p&gt;就例如 &lt;span class=&#34;math inline&#34;&gt;\(R = (111010)_2\)&lt;/span&gt;，关注 &lt;span class=&#34;math inline&#34;&gt;\(R_3 = 1\)&lt;/span&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\([(110000)_2, (110111)_2]\)&lt;/span&gt; 都是可以取到的（第 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 位任意取），这启发我们从 &lt;span class=&#34;math inline&#34;&gt;\(j+2\)&lt;/span&gt; 号点连边向一个新点 &lt;span class=&#34;math inline&#34;&gt;\(k+3\)&lt;/span&gt;，边权为更高位上的值之类的想法。但是这样会出现一些细节上的遗漏，因为形如 &lt;span class=&#34;math inline&#34;&gt;\((110000)_2\)&lt;/span&gt; 就是没能覆盖到的，因为 &lt;span class=&#34;math inline&#34;&gt;\(j+2\)&lt;/span&gt; 号点覆盖的是 &lt;span class=&#34;math inline&#34;&gt;\([1, 2^{j}]\)&lt;/span&gt;，有一个 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的下界没被覆盖，而 &lt;span class=&#34;math inline&#34;&gt;\(2^{j}\)&lt;/span&gt; 的上界又恰好多覆盖了一位。&lt;/p&gt;
&lt;p&gt;这启发我们 &lt;span class=&#34;math inline&#34;&gt;\(R\leftarrow R - 1\)&lt;/span&gt;，这样子就刚好把上述问题全部修复了，&lt;span class=&#34;math inline&#34;&gt;\(1\to k+3\)&lt;/span&gt; 的所有路径就能覆盖整个区间了。而对于 &lt;span class=&#34;math inline&#34;&gt;\(L\ne 1\)&lt;/span&gt;，直接平移 &lt;span class=&#34;math inline&#34;&gt;\(L - 1\)&lt;/span&gt;，新开一个节点再接上去即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;tuple&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r, n;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; l &amp;gt;&amp;gt; r;&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    r = r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;31&lt;/span&gt; - &lt;span class=&#34;fu&#34;&gt;__builtin_clz&lt;/span&gt;(r); &lt;span class=&#34;co&#34;&gt;// 最高位&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) ans.emplace_back(i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, j + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) ans.emplace_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;__builtin_popcount&lt;/span&gt;(r) &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --r, ans.emplace_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i) &amp;amp; r) {&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) tmp |= ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j) &amp;amp; r);&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.emplace_back(i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + tmp);&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l != &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans.emplace_back(n, n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), ++n;&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;YES&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; ans.size() &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : ans) {&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, j, k; tie(i, j, k) = x;&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; j &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; k &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---odd-mineral-resource&#34;&gt;1479D - Odd Mineral Resource&lt;/h3&gt;
&lt;p&gt;给定一棵树，每个点有颜色 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;。多次查询，给定 &lt;span class=&#34;math inline&#34;&gt;\(u,v,l,r\)&lt;/span&gt;，求一个颜色 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(x\in[l,r]\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 在路径 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 上出现了奇数次。数据范围 &lt;span class=&#34;math inline&#34;&gt;\(3\times 10^5\)&lt;/span&gt;，5s。&lt;/p&gt;
&lt;p&gt;根号做法见&lt;a href=&#34;https://oi.imyangty.com/summary-ds4/&#34;&gt;这里&lt;/a&gt;，这里说一下随机化的单 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 算法。&lt;/p&gt;
&lt;p&gt;考虑到出现偶数次不考虑的限制很像异或，那么如果设路径 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 上 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 颜色的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(f(u,v,l,r)\)&lt;/span&gt; 的话，若其异或起来为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 能描述路径上没有出现奇数次的话，那我们就可以使用主席树 + 二分来单 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 查询。&lt;/p&gt;
&lt;p&gt;所以考虑将每种颜色在 &lt;span class=&#34;math inline&#34;&gt;\([0,2^{64})\)&lt;/span&gt; 内随机重新赋值，这样子出错的概率极低（为 &lt;span class=&#34;math inline&#34;&gt;\(2^{-64}q\)&lt;/span&gt;，接近为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;套路地，将 &lt;span class=&#34;math inline&#34;&gt;\(f(u,v,l,r)\)&lt;/span&gt; 拆分为 &lt;span class=&#34;math inline&#34;&gt;\(f(1,u,l,r)\oplus f(1,v,l,r)\oplus f(1,\mathrm{LCA}, l,r)\oplus f(1,\mathrm{fa}_{\mathrm{LCA}}, l, r)\)&lt;/span&gt;，使用主席树维护 &lt;span class=&#34;math inline&#34;&gt;\(f(1, u, l, r)\)&lt;/span&gt; 然后四路同时二分即可。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-701-div.-2&#34;&gt;Codeforces Round #701 (Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/14。A + C + D。&lt;/p&gt;
&lt;h3 id=&#34;e---move-and-swap&#34;&gt;1485E - Move and Swap&lt;/h3&gt;
&lt;p&gt;有一棵树，以 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为根，叶子结点深度相同,结点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有权值 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;。现在有红蓝两颗棋子，每一步可以进行如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把红色棋子移动到它的子节点；&lt;/li&gt;
&lt;li&gt;把蓝色棋子移动到它下一层的任何一个结点；&lt;/li&gt;
&lt;li&gt;选择交换或不交换红子与蓝子的位置；&lt;/li&gt;
&lt;li&gt;计算得分为 &lt;span class=&#34;math inline&#34;&gt;\(|a_{red}-a_{blue}|\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问最大的得分和。&lt;/p&gt;
&lt;p&gt;将点分层考虑，主要考虑到红点比较固定而蓝点四处乱飞，所以设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为操作完后红点在 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 时的答案（发现蓝点的位置是无关紧要的）。考虑转移：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不交换的时候，设 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{fa}_u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的父亲，则 &lt;span class=&#34;math display&#34;&gt;\[
f_u = f_{\mathrm{fa}_u} + \max_v\{|a_u - a_v|\}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 就是蓝点下落的位置，不难发现只能是最大的或最小的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交换的话，那么红点就是任意飘了，设交换前红点位于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
f_u = \max_k\{|a_u - a_k| + f_{\mathrm{fa}_k}\}
\]&lt;/span&gt; 套路地拆绝对值得到 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{fa}_k} - a_k + a_u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_{\mathrm{fa}_k} + a_k - a_u\)&lt;/span&gt;。考虑维护 &lt;span class=&#34;math inline&#34;&gt;\(\max\{f_{\mathrm{fa}_k} + a_k\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\max\{f_{\mathrm{fa}_k} - a_k\}\)&lt;/span&gt; 即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;f---copy-or-prefix-sum&#34;&gt;1485F - Copy or Prefix Sum&lt;/h3&gt;
&lt;p&gt;给定一个 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 数组，一个 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 是合法的指对于每一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(b_i=a_i\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(b_i=\sum\limits_{j=1}^{i}a_j\)&lt;/span&gt; 。问合法的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 有多少个。答案对 &lt;span class=&#34;math inline&#34;&gt;\(10^9+7\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(1\le t\le 10^4,1\le \sum n\le 2\times 10^5,-10^9\le b_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑使用 dp 求解，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,S}\)&lt;/span&gt; 为填了前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，&lt;span class=&#34;math inline&#34;&gt;\(a_i = S\)&lt;/span&gt; 的方案数。根据是满足 &lt;span class=&#34;math inline&#34;&gt;\(b_i = a_i\)&lt;/span&gt; 还是 &lt;span class=&#34;math inline&#34;&gt;\(b_i = \sum a_j\)&lt;/span&gt; 分为两种转移：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i, j + b_i} = f_{i - 1, j}\)&lt;/span&gt;，此时是 &lt;span class=&#34;math inline&#34;&gt;\(b_i = a_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i, b_i} = \sum f_{i - 1, j}\)&lt;/span&gt;，此时是 &lt;span class=&#34;math inline&#34;&gt;\(b_i = a_i\)&lt;/span&gt; 的情况，但是需要与上面 &lt;span class=&#34;math inline&#34;&gt;\(j = 0\)&lt;/span&gt; 的情况去一下重。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发现第一种转移实际上就是数组平移，第二种转移是在做全局和。开一个小标记记录第一种操作的全局平移量，再开一个 &lt;span class=&#34;math inline&#34;&gt;\(ans\)&lt;/span&gt;，发现 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, b_i}= ans + ans - f_{i - 1, b_i}\)&lt;/span&gt;（因为新的 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, b_i}\)&lt;/span&gt; 就是 &lt;span class=&#34;math inline&#34;&gt;\(ans\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;拿 &lt;code&gt;map&lt;/code&gt; 随缘维护一下就行了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-706&#34;&gt;Codeforces Round 706&lt;/h2&gt;
&lt;h3 id=&#34;a---diamond-miner&#34;&gt;1495A - Diamond Miner&lt;/h3&gt;
&lt;p&gt;在 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 轴上有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个钻石矿，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 轴上有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个矿工，保证所有的矿工和钻石都不在原点。需要建立每个矿工与每个钻石矿的一一对应关系使得每对矿工和矿的距离之和最小。&lt;/p&gt;
&lt;p&gt;要么是贪心要么是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的 dp，先考虑两对矿工和钻石的情况：（由于正负其实不影响，所以我们把所有的钻石和矿的坐标都取绝对值，在正半轴上考虑问题。两对点的情况无非就是交叉着连（蓝线）和平行着连（红线）。所以考虑哪个要大一些，即比较 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{a^2 + d^2} + \sqrt{b^2 + c^2}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{a^2 + c^2} + \sqrt{b^2 + d^2}\)&lt;/span&gt; 的大小。&lt;/p&gt;
&lt;p&gt;两边同时平方：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^2 + b^2 + c^2 + d^2 + \sqrt{(a^2 + d^2)(b^2 + c^2)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;和&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^2 + b^2 + c^2 + d^ 2+ \sqrt{(a^2 + c^2)(b^2 + d^2)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以只需要考虑 &lt;span class=&#34;math inline&#34;&gt;\((a + d)(b+ c)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\((a + c)(b + d)\)&lt;/span&gt; 的大小即可，化简之后不难发现&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
(a + d)(b + c)\ge(a + c)(b + d)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以&lt;strong&gt;平行的连法一定是最优的&lt;/strong&gt;。将所有的点取绝对值后排序然后依次累加答案就搞定了。&lt;/p&gt;
&lt;h3 id=&#34;b---lets-go-hiking&#34;&gt;1495B - Let’s Go Hiking&lt;/h3&gt;
&lt;p&gt;题意：给定一个 &lt;span class=&#34;math inline&#34;&gt;\(1-n\)&lt;/span&gt; 的排列 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，Qingshan 和 Daniel 在草稿纸上按照如下规则进行远足游戏。 首先 Qingshan 选定一个数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; &lt;strong&gt;并告诉 Daniel&lt;/strong&gt;，接下来 Daniel 选定另一个数 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le x, y\le n\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x\not=y\)&lt;/span&gt;。然后他们轮流进行游戏，Qingshan 为先手：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果轮到 Qingshan，则 Qingshan 只能把 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 移动到 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;#39;\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;#39; - x = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;#39; \neq y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p_x\gt p_{x&amp;#39;}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;如果轮到 Daniel，则 Daniel 只能把 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 移动到 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;#39;\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;#39; - y = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(y&amp;#39;\neq x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p_y\lt p_{y&amp;#39;}\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果轮到某一方时无路可走了，则另一方胜利。 假设双方都足够聪明，那么判断有多少个初始的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 可以让 Qingshan 一定取胜。&lt;/p&gt;
&lt;p&gt;题解：首先发掘这个游戏的性质：每个人只能往一个方向走，不能回头。注意到这个性质之后不难发现如果 Qingshan 要赢，那么 Daniel 必须被 Qingshan 卡死或者自己被卡死。&lt;/p&gt;
&lt;p&gt;因为两方都足够聪明，所以我们把问题范围缩小到最长单调序列上面来，因为这样可以最大化双方的移动步数。&lt;/p&gt;
&lt;p&gt;可以证明的是，&lt;strong&gt;Qingshan 一开始选的点在最长单调序列的顶端是他能赢的必要条件&lt;/strong&gt;。至于为什么呢？如果 Qingshan 选的不是最长单调序列的顶端，那么 Daniel 就可以选最长单调序列的底端进行游戏，那么 Qingshan 肯定先被卡死。&lt;/p&gt;
&lt;p&gt;并且如果有多条不相交的最长单调序列，&lt;strong&gt;Qingshan 必输&lt;/strong&gt;。因为这样 Daniel 可以选择另外一条序列的底端，而 Qingshan 是先手，所以 Qingshan &lt;strong&gt;肯定先被卡死&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果只有一条最长单调序列，还是 &lt;strong&gt;Qingshan 必输&lt;/strong&gt;，因为 Qingshan 是先手，Daniel 选择的位置但凡与 Qingshan 的初始位置成的链长为&lt;strong&gt;偶数&lt;/strong&gt;，&lt;strong&gt;那么 Daniel 肯定可以卡死 Qingshan&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;剩下的两种情况就是同时有两条最长单调序列，要么成“V”形要么成山峰形。对于“V”形的情况&lt;strong&gt;还是 Qingshan 必输&lt;/strong&gt;，因为 Daniel 可以往与 Qingshan 相反的方向跑走，那么当 Qingshan 最后到达谷底的时候就 GG 了。对于山峰形的情况，Qingshan 肯定是选峰顶，接下来分最长单调序列长度的奇偶性讨论：&lt;/p&gt;
&lt;p&gt;奇数：如果 Daniel 选了坡底，&lt;strong&gt;那么 Qingshan 只要往 Daniel 的方向走那么就必然可以卡死 Daniel&lt;/strong&gt;；如果不选坡底，&lt;strong&gt;那么 Qingshan 只要往另一个方向走就可以让 Daniel 先无路可走&lt;/strong&gt;，所以此时答案为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，Qingshan 唯一的必胜策略就是选择山顶。&lt;/p&gt;
&lt;p&gt;偶数：类似上面的分析方法，不难发现&lt;strong&gt;要么 Daniel 卡死 Qingshan，要么 Qingshan 先无路可走&lt;/strong&gt;，所以 Qingshan &lt;strong&gt;必败&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分析到这里我们就发现了&lt;strong&gt;答案为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 当且仅当有两条最长单调序列并且他们共享一个最高点，否则答案为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/strong&gt;。&lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 直接扫就可以过了。&lt;/p&gt;
&lt;h3 id=&#34;c---garden-of-the-sun&#34;&gt;1495C - Garden of the Sun&lt;/h3&gt;
&lt;p&gt;题意：给定一个 &lt;span class=&#34;math inline&#34;&gt;\(n\times m\)&lt;/span&gt; 矩阵，里面含有字符 &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;X&lt;/code&gt;。保证所有 &lt;code&gt;X&lt;/code&gt; 之间无公共点（即不联通），请将一部分 &lt;code&gt;.&lt;/code&gt; 替换成 &lt;code&gt;X&lt;/code&gt; 使得这些 &lt;code&gt;X&lt;/code&gt; 形成一棵树（要求四联通，即两个 &lt;code&gt;X&lt;/code&gt; 之间有一公共边，不能有环）。&lt;/p&gt;
&lt;p&gt;首先&lt;strong&gt;所有 &lt;code&gt;X&lt;/code&gt; 之间无公共点&lt;/strong&gt;是一个特别好的性质，这保证了下面填充列的方法的正确性。&lt;/p&gt;
&lt;p&gt;具体地，考虑 &lt;span class=&#34;math inline&#34;&gt;\(3\mid m\)&lt;/span&gt; 的情况，不妨直接将 &lt;span class=&#34;math inline&#34;&gt;\(2,5,8,\cdots\)&lt;/span&gt; 列全部填成 &lt;code&gt;X&lt;/code&gt;，不难发现这样&lt;strong&gt;隔两列填一列的方式是不会出现环的&lt;/strong&gt;，然后再将 &lt;span class=&#34;math inline&#34;&gt;\(3, 6, 9, \cdots\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(4,7,10,\cdots\)&lt;/span&gt; 等列构造成联通的就可以了，最简单的方法就是只考虑第一行和第二行，如果合法就直接连。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(3\not\mid m\)&lt;/span&gt;，那么只需要变一下，把 &lt;span class=&#34;math inline&#34;&gt;\(1, 4, 7,\cdots\)&lt;/span&gt; 填成 &lt;code&gt;X&lt;/code&gt;，剩余操作类似。至于为什么填的列改变了则可以考虑画一下图自己模拟一下，会发现如果选 &lt;span class=&#34;math inline&#34;&gt;\(2, 5, 8,\cdots\)&lt;/span&gt; 的话在 &lt;span class=&#34;math inline&#34;&gt;\(m = 3k + 1\)&lt;/span&gt; 的时候会多出一个需要单独考虑的列，所以不如简化问题。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-707-div.2-based-on-moscow-open-olympiad-in-informatics&#34;&gt;Codeforces Round 707 Div.2 based on moscow open olympiad in informatics&lt;/h2&gt;
&lt;h3 id=&#34;a---going-home&#34;&gt;1500A - Going Home&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(4\le n\le 2\times10^5\)&lt;/span&gt; 并且 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1,n],1\le a_i\le 2.5\times10^6\)&lt;/span&gt;，求四个不同的下标 &lt;span class=&#34;math inline&#34;&gt;\(x,y,z,w\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a_x + a_y = a_z + a_w\)&lt;/span&gt;。 有解则打印解，无解输出 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{NO}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到我们的和 &lt;span class=&#34;math inline&#34;&gt;\(a_i + a_j\le 5\times 10^6\)&lt;/span&gt;，这个是解决问题的关键。 所以我们直接大力枚举 &lt;span class=&#34;math inline&#34;&gt;\(S = a_i + a_j\)&lt;/span&gt;，记录一下加出来的这个 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，如果同样的 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 出现了第二次则直接输出答案就好。根据&lt;strong&gt;鸽巢原理&lt;/strong&gt;，我们如果枚举的次数超过了值域，那么就肯定不存在解。&lt;/p&gt;
&lt;h2 id=&#34;contest-2050-and-codeforces-round-718-div.1-div.2&#34;&gt;Contest 2050 and Codeforces Round #718 (Div.1 + Div.2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/14&lt;/p&gt;
&lt;h3 id=&#34;e---group-photo&#34;&gt;1517E - Group Photo&lt;/h3&gt;
&lt;p&gt;将正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 划分成两部分，下标分别为 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt;，要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(c_i - c_{i-1} \le c_{i+1} - c_i\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p_i - p_{i-1}\ge p_{i+1}-p_i\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{x\in C}a_x &amp;lt; \sum\limits_{y\in P}a_y\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问方案数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 二十万，&lt;span class=&#34;math inline&#34;&gt;\(a_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的限制是前松后紧和前紧后松，而一个紧对应着另一个必须松，有点诈骗的感觉，所以能出现的划分也就只有如下两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;P...PC...C&lt;/code&gt;，正则表达式 &lt;code&gt;P+C+&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PC...CPC...PCP...PC&lt;/code&gt;，正则表达式 &lt;code&gt;P?C+(PC)*P+C?&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意到第二种里面 &lt;code&gt;C..&lt;/code&gt; 的部分和 &lt;code&gt;P..&lt;/code&gt; 的部分必须至少一个 &lt;code&gt;C&lt;/code&gt; 和一个 &lt;code&gt;P&lt;/code&gt;，否则会退化成第一种。&lt;/p&gt;
&lt;p&gt;第一种很容易使用前缀和统计。第二种枚举 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 种头尾选/不选的 case，然后枚举 &lt;code&gt;C&lt;/code&gt; 的个数，由于其显然关于 &lt;code&gt;PC&lt;/code&gt; 的个数有单调性，所以二分即可，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;f---reunion&#34;&gt;1517F - Reunion&lt;/h3&gt;
&lt;p&gt;大会有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个志愿者 , 他们之间的关系可以用一棵 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的点的树描述 . 第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个结点代表第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个志愿者 . 定义树上两点间距离 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{dis}(u,v)\)&lt;/span&gt; 为为他们之间的最短路径所经过的边数。&lt;/p&gt;
&lt;p&gt;现在他们想进行一场聚会 , 一些志愿者有空参加 , 而其它的正忙 . 在这种情况下 , 对于某个志愿者 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和非负整数 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; , 如果所有与 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的距离不超过 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 的志愿者&lt;strong&gt;全部&lt;/strong&gt;有空参加 , 那么可以召开一场以 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为中心 , 半径为 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 的聚会 . 这场聚会的等级定义为所有可能的半径 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 中的&lt;strong&gt;最大值&lt;/strong&gt; .&lt;/p&gt;
&lt;p&gt;每一个志愿者都有 &lt;span class=&#34;math inline&#34;&gt;\(\frac12\)&lt;/span&gt; 的概率有空参加或者正忙 . 现在请你求出所有情况下聚会等级的&lt;strong&gt;期望&lt;/strong&gt;对 &lt;span class=&#34;math inline&#34;&gt;\(998\ 244\ 353\)&lt;/span&gt; 取模的结果 . 特别的 , 当所有志愿者都正忙时 , 该聚会的等级为 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; ; 当所有志愿者都有空参加时 , 该聚会的等级为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le300\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;期望题基本没做过几道，不埋怨自己了。&lt;/p&gt;
&lt;p&gt;对每个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 去寻找答案是困难的，考虑通过每个 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 求方案数来算期望。&lt;/p&gt;
&lt;p&gt;而正面地考虑&lt;strong&gt;存在&lt;/strong&gt;一个节点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 使得与其距离 &lt;span class=&#34;math inline&#34;&gt;\(\le r\)&lt;/span&gt; 的人都有空是困难的，逆向地来看，不妨令不能参加的染成黑色，定义 &lt;span class=&#34;math inline&#34;&gt;\(B_{u,r} = \{v:dis(u,v)\le r\}\)&lt;/span&gt;，那么对于所有染色了的 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B_{u,r}\)&lt;/span&gt; 都是被干掉了的。&lt;/p&gt;
&lt;p&gt;那么，若所有 &lt;span class=&#34;math inline&#34;&gt;\(B_{u,r}\)&lt;/span&gt; 的并包含了所有点，则说明该情况下合法的半径一定 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt;r\)&lt;/span&gt;，如果我们能对于所有 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 算出 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; r\)&lt;/span&gt; 的情况，简单差分一下也就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(=r\)&lt;/span&gt; 的情况了。&lt;/p&gt;
&lt;p&gt;所以问题转化为对于一个 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;，求染色方案数，使得 &lt;span class=&#34;math inline&#34;&gt;\(B_{u,r}\)&lt;/span&gt; 的并能将所有点包含。考虑 dp。&lt;/p&gt;
&lt;h2 id=&#34;harbour.space-scholarship-contest-2021-2022-open-for-everyone-rated-div.-1-div.-2&#34;&gt;Harbour.Space Scholarship Contest 2021-2022 (open for everyone, rated, Div. 1 + Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 21/10/18. A + B + C + D + F。&lt;/p&gt;
&lt;h3 id=&#34;e---permutation-shift&#34;&gt;1553E - Permutation Shift&lt;/h3&gt;
&lt;p&gt;初始有排列 &lt;span class=&#34;math inline&#34;&gt;\((1, 2, \cdots, n)\)&lt;/span&gt;，现给定排列 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 和正整数 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，求出所有满足下列条件的整数 &lt;span class=&#34;math inline&#34;&gt;\(k\in[0, n- 1]\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将初始排列向右循环移位 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个单位后，能经过不超过 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次交换元素的操作后得到 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le m\le \dfrac n3\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可以考虑枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 然后判断这个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 是否可行。但是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 显然会爆炸。考虑由于我们一次交换最多改变两个数的位置，所以位置不用改变的数字至少有 &lt;span class=&#34;math inline&#34;&gt;\(n - 2m\)&lt;/span&gt; 个，令 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 表示循环移位 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次后不用动的数字个数，一定有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 0}^{n - 1}x_i = n\)&lt;/span&gt;，而且由 &lt;span class=&#34;math inline&#34;&gt;\(m\le \dfrac n 3\)&lt;/span&gt; 得知 &lt;span class=&#34;math inline&#34;&gt;\(x_k\ge \dfrac n 3\)&lt;/span&gt; 恒成立。这样满足条件的 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 至多有 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个。所以我们预处理一下所有的 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 然后每次找 &lt;span class=&#34;math inline&#34;&gt;\(\ge n - 2m\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x_k\)&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 找环即可，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;f---pairwise-modulo&#34;&gt;1553F - Pairwise Modulo&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{a_n\}\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le 2\times 10^5\)&lt;/span&gt;），对每个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 求出 &lt;span class=&#34;math inline&#34;&gt;\(f_k = \displaystyle\sum_{1\le i,j\le k}a_i\bmod a_j\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑新加进来一个 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 时产生的贡献，将这部分贡献与 &lt;span class=&#34;math inline&#34;&gt;\(f_{i - 1}\)&lt;/span&gt; 相加即得到 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;。其分为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum_j a_j\bmod a_i\)&lt;/span&gt;。这部分比较好办，树状数组直接扫便是，俩 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum_j a_i\bmod a_j\)&lt;/span&gt;。这部分不太好直接去算。考虑 &lt;span class=&#34;math inline&#34;&gt;\(a_i\bmod a_j = a_i - a_j\lfloor a_i/a_j\rfloor\)&lt;/span&gt;，故可以在计算之前的 &lt;span class=&#34;math inline&#34;&gt;\(a_j\)&lt;/span&gt; 的时候顺便更新一下它能更新到的区间。区间加，单点查，依然可以树状数组。还是俩 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 解决掉了。比 E 不知道简单到哪里去了。&lt;/p&gt;
&lt;h3 id=&#34;g---common-divisor-graph&#34;&gt;1553G - Common Divisor Graph&lt;/h3&gt;
&lt;p&gt;给定一个包含 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的图。第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个节点都有权值 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，没有两个节点权值相同。节点 &lt;span class=&#34;math inline&#34;&gt;\(i,j\)&lt;/span&gt; 之间有一条无向边仅当 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_i,a_j)&amp;gt;1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问，每次包含整数 &lt;span class=&#34;math inline&#34;&gt;\(s,t\)&lt;/span&gt; 表示你希望从节点 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到达节点 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;。为了到达那个节点，你可以进行下列操作任意次：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选定一个节点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;。创造一个新的节点，该节点的权值为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\times(a_i+1)\)&lt;/span&gt;，并按照上述规则连边。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于每次询问，你都需要求出，至少需要多少次操作才能使节点 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 能到达节点 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;。询问互相独立。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(a_s(a_s + 1)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(a_t(a_t + 1)\)&lt;/span&gt; 必然有公约数 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 所以连通。所以答案至多为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑一开始先用并查集连好已经有了的边，查询的时候若已经连通，则答案为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。然后考虑什么时候答案为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，显然，当 &lt;span class=&#34;math inline&#34;&gt;\(a_s + 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(a_t\)&lt;/span&gt; 所在集合连通或者 &lt;span class=&#34;math inline&#34;&gt;\(a_s\)&lt;/span&gt; 所在集合和 &lt;span class=&#34;math inline&#34;&gt;\(a_t + 1\)&lt;/span&gt; 连通时答案就为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。这个可以预处理一下。&lt;/p&gt;
&lt;p&gt;时间复杂度大抵是 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 级别的，能过。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-737-div.-2&#34;&gt;Codeforces Round #737 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;c.-moamen-and-xor&#34;&gt;1557C. Moamen and XOR&lt;/h3&gt;
&lt;p&gt;拆开位来考虑。处理一下组合数。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-738-div.-2&#34;&gt;Codeforces Round #738 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;d1.-mocha-and-diana-easy-version&#34;&gt;1559D1. Mocha and Diana (Easy Version)&lt;/h3&gt;
&lt;p&gt;暴力给两个森林加边，&lt;span class=&#34;math inline&#34;&gt;\(O(n^2\log n)\)&lt;/span&gt; 可过。&lt;/p&gt;
&lt;h3 id=&#34;d2.-mocha-and-diana-hard-version&#34;&gt;1559D2. Mocha and Diana (Hard Version)&lt;/h3&gt;
&lt;p&gt;考虑延续上题的性质。&lt;/p&gt;
&lt;p&gt;贪心的把 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 能连的边连了，然后会出现两类点：只在 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 图中与 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 相连以及只在 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 图中与 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 相连。然后显然可以在两个集合中挑点出来连边。直接连就行了，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e.-mocha-and-stars&#34;&gt;1559E. Mocha and Stars&lt;/h3&gt;
&lt;p&gt;求满足如下条件的序列 &lt;span class=&#34;math inline&#34;&gt;\((a_1, a_2, \cdots , a_n)\)&lt;/span&gt; 的数量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, n], a_i\in[l_i, r_i]\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum a_i\le m\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1, a_2, \cdots, a_n) = 1\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 50\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le 10^5\)&lt;/span&gt;，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;p&gt;不考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，发现其为一个背包。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品，背包容量为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数，则有转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \sum_{k = l_i}^{r_i}f_{i - 1, j - k}
\]&lt;/span&gt; 这样直接去做是 &lt;span class=&#34;math inline&#34;&gt;\(O(nm^2)\)&lt;/span&gt; 的，发现转移可以使用前缀和优化，具体设 &lt;span class=&#34;math inline&#34;&gt;\(s_{i, j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math display&#34;&gt;\[
s_{i, j} = \sum_{k = 0}^jf_{i, k}
\]&lt;/span&gt; 然后就有了转移方程 &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = s_{i - 1, j - l_i} - s_{i - 1, j - r_i - 1}
\]&lt;/span&gt; 背包部分的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，这类套路问题使用莫比乌斯反演即可。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}[\gcd(a_1,\cdots,a_n)=1]\left[\sum_{i = 1}^na_i\le m\right]\\
=&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d \mid \gcd(a_1,\cdots,a_n)}\mu(d)\\ =&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d\mid a_1,\cdots,d \mid a_n}\mu(d)\\
=&amp;amp;\sum_{d=1}^M\mu(d)\sum_{a_1=\lceil\frac{l_1}{d}\rceil}^{\lfloor\frac{r_1}{d}\rfloor}\sum_{a_2=\lceil\frac{l_2}{d}\rceil}^{\lfloor\frac{r_2}{d}\rfloor}\cdots\sum_{a_n=\lceil\frac{l_n}{d}\rceil}^{\lfloor\frac{r_n}{d}\rfloor}\left[\sum_{i = 1}^na_i\le \left\lfloor\frac m d\right\rfloor\right]
\end{aligned}
\]&lt;/span&gt; 总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nm\log m)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    init();&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(L[i]), read(R[i]);&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(d, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (mu[d] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m / d) sum[j] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            l[i] = (L[i] + d - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / d, r[i] = R[i] / d;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m / d) f[j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, l[i], m / d) {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[j] = sum[j - l[i]];&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j - r[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) f[j] -= sum[j - r[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            sum[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m / d) sum[j] = f[j] + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += sum[m / d] * mu[d];&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;vk-cup-2021-final-engine-and-codeforces-round-740&#34;&gt;VK Cup 2021 — Final (Engine) and Codeforces Round #740&lt;/h2&gt;
&lt;h3 id=&#34;a.-simply-strange-sort&#34;&gt;1561A. Simply Strange Sort&lt;/h3&gt;
&lt;p&gt;模拟&lt;/p&gt;
&lt;h3 id=&#34;a.-charmed-by-the-game&#34;&gt;1558A. Charmed by the Game&lt;/h3&gt;
&lt;p&gt;直接枚举 A 先手 B 赢比赛的次数，分 &lt;span class=&#34;math inline&#34;&gt;\(a + b\)&lt;/span&gt; 的奇偶性讨论即可。&lt;/p&gt;
&lt;h3 id=&#34;c.-deep-down-below&#34;&gt;1561C. Deep Down Below&lt;/h3&gt;
&lt;p&gt;二分答案，水。&lt;/p&gt;
&lt;h3 id=&#34;b.-up-the-strip&#34;&gt;1558B. Up the Strip&lt;/h3&gt;
&lt;p&gt;一个点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 可以通过以下两种方式到别的格子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减法操作：到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le y &amp;lt; x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;除法操作：到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y = \lfloor x / d\rfloor\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(d\ge 2\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp，首先最朴素的做法可以通过前缀和和整除分块实现，总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 对后面产生的贡献。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(j = qi + r\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le r &amp;lt; q\)&lt;/span&gt;，则不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor j / q\rfloor = i\)&lt;/span&gt;，所以一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 对于每个 &lt;span class=&#34;math inline&#34;&gt;\(q\ge 2\)&lt;/span&gt;，会对 &lt;span class=&#34;math inline&#34;&gt;\([qi, q(i + 1))\)&lt;/span&gt; 产生贡献。&lt;/p&gt;
&lt;p&gt;差分维护一下即可，复杂度调和 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-741-div.-2&#34;&gt;Codeforces Round 741 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A + C&lt;/p&gt;
&lt;h3 id=&#34;c---rings&#34;&gt;1562C - Rings&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(10^5\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(01\)&lt;/span&gt; 串，要求选出两不同的长度大于 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor \frac n2\rfloor\)&lt;/span&gt; 的子段，要求一个为另一个的倍数，保证有解。&lt;/p&gt;
&lt;p&gt;注意到一个二进制数后面添一个 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 相当于就是乘上 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。而本题中前导零也不影响，所以直接找串中的 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 即可。特判全 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 串。&lt;/p&gt;
&lt;h2 id=&#34;deltix-round-summer-2021-open-for-everyone-rated-div.-1-div.-2&#34;&gt;Deltix Round, Summer 2021 (open for everyone, rated, Div. 1 + Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;c---compressed-bracket-sequence&#34;&gt;1556C - Compressed Bracket Sequence&lt;/h3&gt;
&lt;p&gt;考虑如果我们遇到了一串连续的右括号，统计他们的贡献。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果左边的左括号比他多，则贡献为右括号的个数。&lt;/li&gt;
&lt;li&gt;如果左边的左括号和他一样多，则贡献为右括号的数量加上左边相邻合法括号串的数量。&lt;/li&gt;
&lt;li&gt;如果左边的左括号比他少，则贡献为右括号的数量加上左边相邻合法括号串的数量，但是还剩若干右括号没有匹配，往左枚举左括号重复上述三种情况即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要维护一个点结尾处合法括号串的数量。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll sum[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= n; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot = a[i];&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j -= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!tot) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a[j]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tot &amp;lt; a[j]) {&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += tot;&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] -= tot;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++sum[i];&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tot == a[j]) {&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += tot + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                sum[i] += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                tot -= a[j];&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans += a[j] + sum[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---take-a-guess&#34;&gt;1556D - Take a Guess&lt;/h3&gt;
&lt;p&gt;有一个很关键的结论是 &lt;span class=&#34;math inline&#34;&gt;\(a + b = (a\land b) + (a\lor b)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以直接询问 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + a_i\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(i\le [2, n]\)&lt;/span&gt;），然后再询问 &lt;span class=&#34;math inline&#34;&gt;\(a_2 + a_3\)&lt;/span&gt;，就可以刚好在 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 次询问里面得到答案。&lt;/p&gt;
&lt;h3 id=&#34;e---equilibrium&#34;&gt;1556E - Equilibrium&lt;/h3&gt;
&lt;p&gt;首先，令 &lt;span class=&#34;math inline&#34;&gt;\(c_i = b_i - a_i\)&lt;/span&gt;，则一次操作变为在 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 的某些位置上加一，某些位置上减一，目标变为使某一段 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 全部变为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可行性：会发现这个操作有点类似括号匹配，故 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 上的任意位置的前缀和不可小于零而且总和要为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。即 &lt;span class=&#34;math inline&#34;&gt;\(\min\{s_j\}\ge s_{l - 1}\)&lt;/span&gt;。需要一个 RMQ。&lt;/p&gt;
&lt;p&gt;构造答案：将加减法两两配对之后多组的一起完成。即为嵌套最深的括号，相当于爬山爬的最高峰，查一下爬山的最高峰即可。也需要一个 RMQ。直接上就行了。&lt;/p&gt;
&lt;h3 id=&#34;f---sports-betting&#34;&gt;1556F - Sports Betting&lt;/h3&gt;
&lt;h3 id=&#34;g---gates-to-another-world&#34;&gt;1556G - Gates to Another World&lt;/h3&gt;
&lt;h2 id=&#34;codeforces-round-742-div.-2&#34;&gt;Codeforces Round #742 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A + B + C&lt;/p&gt;
&lt;h3 id=&#34;c---carrying-conundrum&#34;&gt;1567C - Carrying Conundrum&lt;/h3&gt;
&lt;p&gt;题意：定义 Alice 的加法为 &lt;span class=&#34;math inline&#34;&gt;\(a + b\)&lt;/span&gt; 竖式下进位进到前面两位去。问有多少种有序正整数对 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a + b = n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;可以考虑 DP，注意到只有当前位和后面一位有后效性，所以可以令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k_0, k_1}\)&lt;/span&gt; 表示从低到高第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，当前位及上一位有没有产生进位，转移易得，答案为 &lt;span class=&#34;math inline&#34;&gt;\(f_{len, 0, 0}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意需要去除 &lt;span class=&#34;math inline&#34;&gt;\((n, 0)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((0, n)\)&lt;/span&gt;。&lt;a href=&#34;https://codeforces.com/contest/1567/submission/127974617&#34;&gt;评测记录#127974617&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d---expression-evaluation-error&#34;&gt;1567D - Expression Evaluation Error&lt;/h3&gt;
&lt;p&gt;题意：给定一个数 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;，要求划分成 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个数 &lt;span class=&#34;math inline&#34;&gt;\(n_1,\cdots n_s\)&lt;/span&gt;，要求把这些数看成 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt; 进制的然后按照 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt; 进制加起来使得结果最大。构造方案。&lt;/p&gt;
&lt;p&gt;首先考虑按位贪心：让最高位最大是显然的，让其等于 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 的最高位一定是最优的。然后我们会发现这个构造出的最大结果一定不会大于 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 看成 &lt;span class=&#34;math inline&#34;&gt;\(11\)&lt;/span&gt; 进制表示的结果。&lt;/p&gt;
&lt;p&gt;最优的做法是尽量让 Alice 不要进位：将 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 表示成 &lt;span class=&#34;math inline&#34;&gt;\(10^k\)&lt;/span&gt; 之和，例如 &lt;span class=&#34;math inline&#34;&gt;\(25\)&lt;/span&gt; 就可以被表示为 &lt;span class=&#34;math inline&#34;&gt;\(10 + 10 + 1 + 1 + 1 + 1 + 1\)&lt;/span&gt;。但是难免有划分数量多的时候，那么就从高位往低位贪，让高位尽量不要进位即可。&lt;/p&gt;
&lt;p&gt;所以从最高位往最低位依次划分即可。&lt;/p&gt;
&lt;h3 id=&#34;e---non-decreasing-dilemma&#34;&gt;1567E - Non-Decreasing Dilemma&lt;/h3&gt;
&lt;p&gt;单点修改序列，区间查询不降子段个数。&lt;/p&gt;
&lt;p&gt;线段树维护每个区间的答案，左端的不降子段长度，右端的不降子段长度。&lt;/p&gt;
&lt;p&gt;注意 &lt;code&gt;pushup&lt;/code&gt; 即可。&lt;a href=&#34;https://codeforces.com/contest/1567/submission/127985171&#34;&gt;评测记录&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;f---one-four-overload&#34;&gt;1567F - One-Four Overload&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(n\times m\)&lt;/span&gt; 的方格，有 &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;X&lt;/code&gt; 两种点，要求在 &lt;code&gt;.&lt;/code&gt; 中填入 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;，&lt;code&gt;X&lt;/code&gt; 点中填入 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 的倍数满足其为与其四联通的 &lt;code&gt;.&lt;/code&gt; 中数字之和。输出无解或构造方案。&lt;/p&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
1&amp;amp;\equiv 1&amp;amp;\pmod 5\\
4&amp;amp;\equiv -1&amp;amp;\pmod 5
\end{aligned}
\]&lt;/span&gt; 所以，不难发现一个 &lt;code&gt;X&lt;/code&gt; 点旁边必须具有数量相等的 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;。对于形如 &lt;code&gt;.X.&lt;/code&gt; 的情况，只需要建边然后二分图染色一下就好了。关键是对于“十”字形的我们怎么处理。&lt;/p&gt;
&lt;p&gt;在纸上手玩几个发现对面的填相同颜色的是最优的，这样子能方便其他的构造方案：如&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;.1..
4X41
.1XX
.1X4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果我们这样&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;.1..
1X4.
.4XX
..X.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;发现构造不出来。按照上述方法构造二分图（为什么是二分图应该挺显然的）然后就可以通过了。&lt;a href=&#34;https://codeforces.com/contest/1567/submission/128134089&#34;&gt;评测记录&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-global-round-16&#34;&gt;Codeforces Global Round 16&lt;/h2&gt;
&lt;p&gt;A + B + C + D1。D2 已补，水。&lt;/p&gt;
&lt;h3 id=&#34;e---buds-re-hanging&#34;&gt;1566E - Buds Re-hanging&lt;/h3&gt;
&lt;p&gt;定义一棵有根树的一个节点为 bud 当且仅当其有至少一个儿子且其所有儿子都为叶节点。&lt;/p&gt;
&lt;p&gt;每次操作可以提出一个 bud 及其儿子然后接在任意一个节点下面。&lt;/p&gt;
&lt;p&gt;问若干次操作之后叶子节点最少为多少个。&lt;/p&gt;
&lt;p&gt;一个 bud 接在一个叶子下之后会使得叶子节点至多减 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;（如果 bud 上面是根则会减 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;）。而且移动 bud 的过程可逆，不妨将所有的 bud 找出来接在根上，设树节点为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，bud 有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个，则叶子节点数肯定为 &lt;span class=&#34;math inline&#34;&gt;\(n - k - 1\)&lt;/span&gt;（总结点减去根和每个 bud）。&lt;/p&gt;
&lt;p&gt;然后考虑如果根上至少连有一个叶子节点，则把所有的 bud 依次接上去，一共会接 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次，答案为 &lt;span class=&#34;math inline&#34;&gt;\(n - 2k - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;如果根上没有直接连的叶子节点，则把每个 bud 依次合并，接 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 次，答案为 &lt;span class=&#34;math inline&#34;&gt;\(n - k - 1 - (k -1) = n - 2k\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, head[maxn], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], cnte, d[maxn], k;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = to[i];&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d[v] == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) flag = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fa) {&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (flag) ++k, d[u] = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; d[u] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) head[i] = d[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u), read(v);&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(u, v), add(v, u);&lt;/span&gt;
&lt;span id=&#34;cb8-36&#34;&gt;&lt;a href=&#34;#cb8-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb8-37&#34;&gt;&lt;a href=&#34;#cb8-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-38&#34;&gt;&lt;a href=&#34;#cb8-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-39&#34;&gt;&lt;a href=&#34;#cb8-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]; i; i = nxt[i])&lt;/span&gt;
&lt;span id=&#34;cb8-40&#34;&gt;&lt;a href=&#34;#cb8-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d[to[i]] == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {s = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb8-41&#34;&gt;&lt;a href=&#34;#cb8-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * k - s), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-42&#34;&gt;&lt;a href=&#34;#cb8-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-43&#34;&gt;&lt;a href=&#34;#cb8-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-44&#34;&gt;&lt;a href=&#34;#cb8-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-743-div.-12&#34;&gt;Codeforces Round #743 (Div. 1/2)&lt;/h2&gt;
&lt;p&gt;VP on 21/10/09。D2A + D2B + D1A + D1B。&lt;/p&gt;
&lt;h3 id=&#34;b---xor-of-3&#34;&gt;1572B - Xor of 3&lt;/h3&gt;
&lt;p&gt;首先有解的必要条件是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数为偶数个，因为每次操作是不会改变 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数的奇偶性的。&lt;/p&gt;
&lt;p&gt;然后考虑构造，若 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为奇数，那么执行 &lt;span class=&#34;math inline&#34;&gt;\(n - 2, \cdots, 3, 1\)&lt;/span&gt;，这样子之后 &lt;span class=&#34;math inline&#34;&gt;\(a_1 = 0\)&lt;/span&gt;，然后再执行一遍 &lt;span class=&#34;math inline&#34;&gt;\(1, 3, \cdots, n - 2\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为偶数的情况将其拆成两段长度为奇数的含偶数个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的然后分开做就行了。&lt;/p&gt;
&lt;h3 id=&#34;c---paint&#34;&gt;1572C - Paint&lt;/h3&gt;
&lt;p&gt;题意：给定一个最多含 &lt;span class=&#34;math inline&#34;&gt;\(20\)&lt;/span&gt; 种颜色的序列，每次操作可以把一段颜色相同的区间染成一种颜色，问将所有颜色染成同一种的最小操作次数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 3000\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑区间 dp。&lt;/p&gt;
&lt;p&gt;首先肯定将相邻的同色缩起来。&lt;/p&gt;
&lt;p&gt;然后设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为&lt;strong&gt;将 &lt;span class=&#34;math inline&#34;&gt;\([i, j]\)&lt;/span&gt; 染成 &lt;span class=&#34;math inline&#34;&gt;\(c_j\)&lt;/span&gt; 的最小代价&lt;/strong&gt;。为什么这样定义状态是因为一定存在一种方案使得最后的颜色为 &lt;span class=&#34;math inline&#34;&gt;\(c_j\)&lt;/span&gt;，容易发现将 &lt;span class=&#34;math inline&#34;&gt;\([1, j - 1]\)&lt;/span&gt; 同色之后再和 &lt;span class=&#34;math inline&#34;&gt;\(c_j\)&lt;/span&gt; 统一是不会更劣的。&lt;/p&gt;
&lt;p&gt;首先有 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j} = \min\{f_{i + 1, j}, f_{i, j - 1} \} + 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;其次，如果存在 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(i\le k &amp;lt; j\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(c_k = c_j\)&lt;/span&gt;，那么我们也可以从 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k} + f_{k + 1, j}\)&lt;/span&gt; 转移过来。记录一下上一个与 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 颜色相同的点就可以了。答案为 &lt;span class=&#34;math inline&#34;&gt;\(f_{1, n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d---bridge-club&#34;&gt;1572D - Bridge Club&lt;/h3&gt;
&lt;p&gt;显然，图为二分图，按照二进制表示下 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的个数即可分为左部和右部，中间连权为 &lt;span class=&#34;math inline&#34;&gt;\(a_i + a_j\)&lt;/span&gt; 的边。&lt;/p&gt;
&lt;p&gt;但是直接费用流或者 KM 都会死掉，因为点数为 &lt;span class=&#34;math inline&#34;&gt;\(O(2^n)\)&lt;/span&gt; 级别，边数为 &lt;span class=&#34;math inline&#34;&gt;\(O(n2^n)\)&lt;/span&gt; 级别，必死无疑。但是注意到这个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 是很小的，我们需要从 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 上下手。&lt;/p&gt;
&lt;p&gt;不难发现，每个点会连出去 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 条边，如果我们选择了一个匹配，那么剩下能匹配的方案数就会减少 &lt;span class=&#34;math inline&#34;&gt;\(2(n - 1)\)&lt;/span&gt;，所以我们选了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个匹配后最多只会减少 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 个匹配方式，即我们选了 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 个匹配就会至少存在 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个匹配。&lt;/p&gt;
&lt;p&gt;所以我们只需要选出最大的 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 条边，然后跑费用流就行了，不难发现一定有最优的方案存在在这最大的 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 条边里面，证明可用反证法。&lt;/p&gt;
&lt;p&gt;具体实现中，选出最大的 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 条边我们使用 STL 的 &lt;code&gt;nth_element()&lt;/code&gt; 函数，其复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\text{length of the seq})\)&lt;/span&gt;，本题中为 &lt;span class=&#34;math inline&#34;&gt;\(n2^n\)&lt;/span&gt;，然后注意加边的时候不要给每个 &lt;span class=&#34;math inline&#34;&gt;\([0, 2^n - 1]\)&lt;/span&gt; 的球员都加边，否则会 TLE。&lt;/p&gt;
&lt;h3 id=&#34;e---polygon&#34;&gt;1572E - Polygon&lt;/h3&gt;
&lt;p&gt;给定一个严格凸多边形，最大化划 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 刀后的最小面积，&lt;span class=&#34;math inline&#34;&gt;\(3\le n\le 200, 0\le k\le n - 3\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;二分这个最小面积。现在我们就需要划出来的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个区域的面积都大于等于 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;只考虑划分 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 这个区间的点，有个贪心就是我们尽可能多划分，而 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 相邻的这部分有可能面积不大于 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，我们要让其尽可能大。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_{l, r} = (K, M)\)&lt;/span&gt; 表示最多划分出了 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 块合法的区域，&lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 相邻部分这块三角形的最大面积为 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;。转移易得，枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\in(l, r)\)&lt;/span&gt; 然后考虑合并 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;只要 &lt;span class=&#34;math inline&#34;&gt;\(f_{1, n}\ge k + 1\)&lt;/span&gt;，就说明二分出来这个面积是合法的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;ll, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll x[maxn], y[maxn];&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k;&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pii f[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll S(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x[j] - x[i]) * (y[k] - y[i]) - (y[j] - y[i]) * (x[k] - x[i]);}&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(ll mid) {&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(len, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j = i + len - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= n; ++i, ++j) {&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i][j] = pii(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll K = f[i][k].first + f[k][j].first;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll M = f[i][k].second + f[k][j].second + S(i, k, j);&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (M &amp;gt;= mid) f[i][j] = max(f[i][j], pii(K + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; f[i][j] = max(f[i][j], pii(K, M));&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][n].first &amp;gt; k;&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(x[i]), read(y[i]);&lt;/span&gt;
&lt;span id=&#34;cb9-29&#34;&gt;&lt;a href=&#34;#cb9-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = &lt;span class=&#34;fl&#34;&gt;4e18&lt;/span&gt;, ans;&lt;/span&gt;
&lt;span id=&#34;cb9-30&#34;&gt;&lt;a href=&#34;#cb9-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r) {&lt;/span&gt;
&lt;span id=&#34;cb9-31&#34;&gt;&lt;a href=&#34;#cb9-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-32&#34;&gt;&lt;a href=&#34;#cb9-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (check(mid)) ans = mid, l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-33&#34;&gt;&lt;a href=&#34;#cb9-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-34&#34;&gt;&lt;a href=&#34;#cb9-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-35&#34;&gt;&lt;a href=&#34;#cb9-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-36&#34;&gt;&lt;a href=&#34;#cb9-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-37&#34;&gt;&lt;a href=&#34;#cb9-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-745-div.-12&#34;&gt;Codeforces Round #745 (Div. 1/2)&lt;/h2&gt;
&lt;p&gt;真的很毒瘤的场。Terrible Round。&lt;/p&gt;
&lt;h3 id=&#34;d---subsequence&#34;&gt;1580D - Subsequence&lt;/h3&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，所有元素两两不同。需要选择一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的子序列 &lt;span class=&#34;math inline&#34;&gt;\(a_{b_1}, a_{b_2},\cdots, a_{b_m}\)&lt;/span&gt;，要使得其代价最大。&lt;/p&gt;
&lt;p&gt;子序列的价值被定义为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^m(m\cdot a_{b_i}) - \sum_{i=1}^m\sum_{j=1}^mf(\min(b_i, b_j), \max(b_i, b_j))
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(f(x, y)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(\min_{x\le i\le y}\{a_i \}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 4000\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;化出式子： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^m(m - 1)a_{b_i} - 2\sum_{i=1}^{m-1}\sum_{j=i+1}^mf(b_i, b_j)
\]&lt;/span&gt; 然后像 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 这种一脸 RMQ 样的东西考虑放到笛卡尔树上，然后再化好看一点： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^{m-1}\sum_{j=i+1}^m a_{b_i} + a_{b_j} - 2f(b_i, b_j)
\]&lt;/span&gt; 那就是 &lt;span class=&#34;math inline&#34;&gt;\(a_{b_i} + a_{b_j}\)&lt;/span&gt; 再减去两倍他们的 LCA 的值，很像两点间的树上距离。考虑树形 dp &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 子树里面选了 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个元素的最大代价，容易知道时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;4005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, ls[maxn], rs[maxn], stk[maxn], top;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], size[maxn], f[maxn][maxn], w[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ls[u]) {&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(ls[u]), w[ls[u]] = a[ls[u]] - a[u];&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, size[u], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(j, size[ls[u]], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(f[u][i + j], f[u][i] + f[ls[u]][j] + j * (m - j) * w[ls[u]]);&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[ls[u]];&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (rs[u]) {&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(rs[u]), w[rs[u]] = a[rs[u]] - a[u];&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, size[u], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(j, size[rs[u]], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(f[u][i + j], f[u][i] + f[rs[u]][j] + j * (m - j) * w[rs[u]]);&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[rs[u]];&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    stk[top = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;amp;&amp;amp; a[stk[top]] &amp;gt; a[i]) --top;&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!top) ls[i] = stk[top + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ls[i] = rs[stk[top]], rs[stk[top]] = i;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        stk[++top] = i;&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(stk[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb10-36&#34;&gt;&lt;a href=&#34;#cb10-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f[stk[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]][m]);&lt;/span&gt;
&lt;span id=&#34;cb10-37&#34;&gt;&lt;a href=&#34;#cb10-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-38&#34;&gt;&lt;a href=&#34;#cb10-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-746-div.-2&#34;&gt;Codeforces Round #746 (Div. 2)&lt;/h2&gt;
&lt;p&gt;题目出得不错。&lt;/p&gt;
&lt;h3 id=&#34;c---bakry-and-partitioning&#34;&gt;1592C - Bakry and Partitioning&lt;/h3&gt;
&lt;p&gt;问将一棵树划分为最多 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个连通块，要求这些连通块内点权的异或和相等，问是否有解。&lt;/p&gt;
&lt;p&gt;首先发现，如果所有的点权异或和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则必然有解，而且断掉任意一条边都是可以的。&lt;/p&gt;
&lt;p&gt;然而异或和可能不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，我们不妨设其为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。而根据异或的性质，我们知道划分出来的各个连通块的异或和只能为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，而且连通块的个数为奇数。&lt;/p&gt;
&lt;p&gt;这是为什么？考虑划分为三个连通块的情况：既要异或起来为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 又要两两相等，不难发现只能为三个 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。然后我们又会发现，但凡有解，一定能划分为这样的三个连通块。&lt;/p&gt;
&lt;p&gt;现在问题就转化为了找到三个连通块使得他们的异或和都为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。dfs 扫描一遍即可。如果遇到一个节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 有两个子树 &lt;span class=&#34;math inline&#34;&gt;\(v_1,v_2\)&lt;/span&gt; 内含异或和为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的子树，则一定有解。而且，如果当前子树 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，且存在一个包含在 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 内的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的子树，则也一定有解。&lt;/p&gt;
&lt;p&gt;稍加分析可知上面两种涵盖了所有的情况。&lt;/p&gt;
&lt;h3 id=&#34;d---hemose-in-icpc&#34;&gt;1592D - Hemose in ICPC ?&lt;/h3&gt;
&lt;p&gt;点数为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(n \le 1000\)&lt;/span&gt;）的树，最多 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 次查询，每次查询给定一个点集，返回最大的 &lt;span class=&#34;math inline&#34;&gt;\(Dist(u, v)\)&lt;/span&gt;，代表 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的简单路径上的边权的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;。要求找到 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 最大的 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 只会减小，不会增大，因此 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(u, v)\)&lt;/span&gt; 最大时一定是 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 相连，相当于我们要找这棵树的最大边权。&lt;/p&gt;
&lt;p&gt;如何去找？这个查询次数和数据范围很明显的暗示了我们要二分一个点集，可是我们如何保证二分出来的两个点集是联通的呢？&lt;/p&gt;
&lt;p&gt;不妨考虑这棵树的欧拉序，将欧拉序建出来后会发现两两之间一定是有边的，所以在欧拉序上二分找最大值就可以了，可以保证查询次数最多为 &lt;span class=&#34;math inline&#34;&gt;\(1 + \log(2n - 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;实现起来很简单。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-747-div.-2&#34;&gt;Codeforces Round #747 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A + B + C + D + E1。rk 606。补完了，好耶。&lt;/p&gt;
&lt;h3 id=&#34;e2---rubiks-cube-coloring-hard-version&#34;&gt;1594E2 - Rubik’s Cube Coloring (hard version)&lt;/h3&gt;
&lt;p&gt;题意：&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 层的满二叉树，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点已经被染色，颜色来自魔方的六种颜色。要求树上相邻的节点染的颜色不能为魔方上不 相邻的颜色，问将整棵树涂满的方案数。&lt;/p&gt;
&lt;p&gt;继承一下 E1 的做法，没有预先钦定的颜色那么答案为 &lt;span class=&#34;math inline&#34;&gt;\(6\times 4^{2^k - 2}\)&lt;/span&gt;。我们发现，已经钦定好的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点会影响其到根的一条路径，把这条路径抽出来 dp 即可。然后令没有被影响的点有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个，答案乘上 &lt;span class=&#34;math inline&#34;&gt;\(4^m\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;string, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; st;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;ll, modint&amp;gt; f[&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; mp;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;ll, set&amp;lt;ll&amp;gt; &amp;gt; G;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll k, n;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(ll u) {&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) dfs(v);&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(c, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~mp[u] &amp;amp;&amp;amp; c ^ mp[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[c][u] = ~mp[u] ? &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u])&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[c][u] *= (f[(c + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;][v] + f[(c + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) % &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;][v]);&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin.tie(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; k &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    st[&lt;span class=&#34;st&#34;&gt;&amp;quot;white&amp;quot;&lt;/span&gt;] = st[&lt;span class=&#34;st&#34;&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    st[&lt;span class=&#34;st&#34;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;] = st[&lt;span class=&#34;st&#34;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    st[&lt;span class=&#34;st&#34;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;] = st[&lt;span class=&#34;st&#34;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll u;&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        string s;&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; s;&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mp[u] = st[s];&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!mp.count(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) mp[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; mp0 = mp;&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; p : mp0) {&lt;/span&gt;
&lt;span id=&#34;cb11-37&#34;&gt;&lt;a href=&#34;#cb11-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll u = p.first;&lt;/span&gt;
&lt;span id=&#34;cb11-38&#34;&gt;&lt;a href=&#34;#cb11-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (u ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb11-39&#34;&gt;&lt;a href=&#34;#cb11-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;].insert(u);&lt;/span&gt;
&lt;span id=&#34;cb11-40&#34;&gt;&lt;a href=&#34;#cb11-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!mp.count(u)) mp[u] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-41&#34;&gt;&lt;a href=&#34;#cb11-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            u &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-42&#34;&gt;&lt;a href=&#34;#cb11-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-43&#34;&gt;&lt;a href=&#34;#cb11-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-44&#34;&gt;&lt;a href=&#34;#cb11-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-45&#34;&gt;&lt;a href=&#34;#cb11-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = (f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + f[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * qPow(&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;, ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; &amp;lt;&amp;lt; k) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - mp.size()) % (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb11-46&#34;&gt;&lt;a href=&#34;#cb11-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans.val &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb11-47&#34;&gt;&lt;a href=&#34;#cb11-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-48&#34;&gt;&lt;a href=&#34;#cb11-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还是挺好的一道题，提出有用的点来进行树形 dp。&lt;/p&gt;
&lt;h3 id=&#34;f---ideal-farm&#34;&gt;1594F - Ideal Farm&lt;/h3&gt;
&lt;p&gt;给出 &lt;span class=&#34;math inline&#34;&gt;\(n, s, k\)&lt;/span&gt;，问是否所有的长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的和为 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 的正整数序列都有一段长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的区间。&lt;/p&gt;
&lt;p&gt;考虑构造一个无解的情况。即要求没有两个前缀和的差为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，构造的时候即 &lt;span class=&#34;math inline&#34;&gt;\(1, 1,1,\cdots, k + 1, 1, 1, \cdots\)&lt;/span&gt; 如是构造。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n &amp;lt; k\)&lt;/span&gt; 的时候特判一下。蠢得要死。。。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll s, n, k;&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(s), read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; k) {&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s == k) puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll w = n / k * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k + n % k;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s &amp;lt; w ? puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt;) : puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-115&#34;&gt;Educational Codeforces Round 115&lt;/h2&gt;
&lt;p&gt;A + B + C + D。&lt;/p&gt;
&lt;h3 id=&#34;e---staircases&#34;&gt;1598E - Staircases&lt;/h3&gt;
&lt;p&gt;注意到其实就这两种楼梯，要么结束位置是两个横着的，要么是两个竖着的。所以可以 dp，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, 0/1}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt; 结束，最后位置为横/竖的方案数，则有转移 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_{i, j, 0} :=f_{i, j, 0} + f_{i - 1, j, 1}\\
f_{i, j, 1} := f_{i ,j , 1} + f_{i, j - 1. 0}
\end{cases}
\]&lt;/span&gt; 初始条件为 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, 0/1} = 1\)&lt;/span&gt;，因为一个格子也算楼梯。但是会算重，所以需要特判一下。&lt;/p&gt;
&lt;p&gt;然后是修改操作。我们需要知道，一次修改操作能影响的 dp 值是有限的。手玩一下发现最多影响 &lt;span class=&#34;math inline&#34;&gt;\(3n\)&lt;/span&gt; 个格子。故总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2 + nq)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;代码就不放了。&lt;/p&gt;
&lt;h3 id=&#34;f---rbs&#34;&gt;1598F - RBS&lt;/h3&gt;
&lt;p&gt;括号匹配 + 状压 dp 好题。&lt;/p&gt;
&lt;p&gt;定义合法的括号串，给出 &lt;span class=&#34;math inline&#34;&gt;\(n\le 20\)&lt;/span&gt; 个总长不超过 &lt;span class=&#34;math inline&#34;&gt;\(4\times 10^5\)&lt;/span&gt; 的括号串 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt;，问将所有 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 按照一定顺序拼接起来后最多有多少个前缀为合法括号串。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 20\)&lt;/span&gt; 这个限制就很灵性，考虑状压 dp。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{S}\)&lt;/span&gt; 为集合 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 内字符串拼起来的答案。&lt;/p&gt;
&lt;p&gt;思考转移。假设 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 在加上一个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 后变成 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，并假定 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 被接在末尾。&lt;/p&gt;
&lt;p&gt;考虑括号串的性质，我们令 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{&amp;#39;(&amp;#39;} = 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\texttt{&amp;#39;)&amp;#39;} = -1\)&lt;/span&gt;，然后一个括号串将为合法当且仅当其每个前缀和都为非负且整个的前缀和为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。那么不妨处理出每个串的前缀和以及每个状态的串的前缀和之和。&lt;/p&gt;
&lt;p&gt;而遍历一个字符串 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 将会形成一个“爬山”的过程，若这个过程中前缀和接触到了 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么合法的答案将会增加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，若这个过程中前缀和变为了负数，那么这个状态就废掉了——答案不可能再增加。&lt;/p&gt;
&lt;p&gt;所以对于每个串，我们需要记录一下其向下“穿过”了每个平面几次。然后在 dp 转移的时候就可以判定了。如果从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的高度走向 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 会走到若干次 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么答案对应累计，若会穿到 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 下面去，说明这个状态就废掉了，判掉即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;22&lt;/span&gt;, maxs = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;21&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; String {&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; minp, sum;&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; H;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; L;&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; delta;&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init(string s) {&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        minp = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt;&amp;gt; no;&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)s.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;) ++p;&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; --p;&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-22&#34;&gt;&lt;a href=&#34;#cb13-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!no[p]) ++H[p];&lt;/span&gt;
&lt;span id=&#34;cb13-23&#34;&gt;&lt;a href=&#34;#cb13-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; no[p] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-24&#34;&gt;&lt;a href=&#34;#cb13-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            minp = min(minp, p);&lt;/span&gt;
&lt;span id=&#34;cb13-25&#34;&gt;&lt;a href=&#34;#cb13-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-26&#34;&gt;&lt;a href=&#34;#cb13-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sum = p;&lt;/span&gt;
&lt;span id=&#34;cb13-27&#34;&gt;&lt;a href=&#34;#cb13-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (H.empty()) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-28&#34;&gt;&lt;a href=&#34;#cb13-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        delta = H.begin()-&amp;gt;first;&lt;/span&gt;
&lt;span id=&#34;cb13-29&#34;&gt;&lt;a href=&#34;#cb13-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; R = H.rbegin()-&amp;gt;first;&lt;/span&gt;
&lt;span id=&#34;cb13-30&#34;&gt;&lt;a href=&#34;#cb13-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        L.resize(R - delta + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-31&#34;&gt;&lt;a href=&#34;#cb13-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; p : H) L[p.first - delta] = p.second;&lt;/span&gt;
&lt;span id=&#34;cb13-32&#34;&gt;&lt;a href=&#34;#cb13-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-33&#34;&gt;&lt;a href=&#34;#cb13-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-34&#34;&gt;&lt;a href=&#34;#cb13-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb13-35&#34;&gt;&lt;a href=&#34;#cb13-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x -= delta;&lt;/span&gt;
&lt;span id=&#34;cb13-36&#34;&gt;&lt;a href=&#34;#cb13-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || x &amp;gt;= (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)L.size()) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-37&#34;&gt;&lt;a href=&#34;#cb13-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; L[x];&lt;/span&gt;
&lt;span id=&#34;cb13-38&#34;&gt;&lt;a href=&#34;#cb13-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-39&#34;&gt;&lt;a href=&#34;#cb13-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} s[&lt;span class=&#34;dv&#34;&gt;22&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb13-40&#34;&gt;&lt;a href=&#34;#cb13-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-41&#34;&gt;&lt;a href=&#34;#cb13-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dp[maxs], sum[maxs], n;&lt;/span&gt;
&lt;span id=&#34;cb13-42&#34;&gt;&lt;a href=&#34;#cb13-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-43&#34;&gt;&lt;a href=&#34;#cb13-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb13-44&#34;&gt;&lt;a href=&#34;#cb13-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-45&#34;&gt;&lt;a href=&#34;#cb13-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin.tie(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-46&#34;&gt;&lt;a href=&#34;#cb13-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb13-47&#34;&gt;&lt;a href=&#34;#cb13-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb13-48&#34;&gt;&lt;a href=&#34;#cb13-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        string str; cin &amp;gt;&amp;gt; str;&lt;/span&gt;
&lt;span id=&#34;cb13-49&#34;&gt;&lt;a href=&#34;#cb13-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s[i].init(str);&lt;/span&gt;
&lt;span id=&#34;cb13-50&#34;&gt;&lt;a href=&#34;#cb13-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-51&#34;&gt;&lt;a href=&#34;#cb13-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(S, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &amp;amp; S) sum[S] += s[i].sum;&lt;/span&gt;
&lt;span id=&#34;cb13-52&#34;&gt;&lt;a href=&#34;#cb13-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(dp, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; dp);&lt;/span&gt;
&lt;span id=&#34;cb13-53&#34;&gt;&lt;a href=&#34;#cb13-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-54&#34;&gt;&lt;a href=&#34;#cb13-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-55&#34;&gt;&lt;a href=&#34;#cb13-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(S, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-56&#34;&gt;&lt;a href=&#34;#cb13-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (S &amp;amp; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))) {&lt;/span&gt;
&lt;span id=&#34;cb13-57&#34;&gt;&lt;a href=&#34;#cb13-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; F = S ^ (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb13-58&#34;&gt;&lt;a href=&#34;#cb13-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (dp[F] == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-59&#34;&gt;&lt;a href=&#34;#cb13-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; nows = sum[F], cur = dp[F] + s[i].query(-nows);&lt;/span&gt;
&lt;span id=&#34;cb13-60&#34;&gt;&lt;a href=&#34;#cb13-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = max(ans, cur);&lt;/span&gt;
&lt;span id=&#34;cb13-61&#34;&gt;&lt;a href=&#34;#cb13-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (nows + s[i].minp &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-62&#34;&gt;&lt;a href=&#34;#cb13-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            dp[S] = max(dp[S], cur);&lt;/span&gt;
&lt;span id=&#34;cb13-63&#34;&gt;&lt;a href=&#34;#cb13-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-64&#34;&gt;&lt;a href=&#34;#cb13-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-65&#34;&gt;&lt;a href=&#34;#cb13-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-66&#34;&gt;&lt;a href=&#34;#cb13-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-67&#34;&gt;&lt;a href=&#34;#cb13-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;technocup-2022-elimination-round-1-and-codeforces-round-749-div.-1div.-2&#34;&gt;Technocup 2022 — Elimination Round 1 and Codeforces Round #749 (Div. 1+Div. 2)&lt;/h2&gt;
&lt;p&gt;A + B + C + D + F，rk 352，上 CM 了。&lt;/p&gt;
&lt;h3 id=&#34;d---omkar-and-the-meaning-of-life&#34;&gt;1583D - Omkar and the Meaning of Life&lt;/h3&gt;
&lt;p&gt;考虑寻找每个元素在排列中的下一个数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于每个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，询问 &lt;span class=&#34;math inline&#34;&gt;\(a_i = 2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_j=1\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(j\neq i\)&lt;/span&gt;，如果找到了一个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{nxt}(k) = i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;询问 &lt;span class=&#34;math inline&#34;&gt;\(a_i = 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_j = 2\)&lt;/span&gt; 的情况同理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后一个拓扑排序就可以求出整个排列。询问次数正好为 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e---момент-цветения&#34;&gt;1583E - Момент цветения&lt;/h3&gt;
&lt;p&gt;在一张无向图上构造 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 条始末点给定的路径，使得每条边都被覆盖偶数次，输出构造方案或者输出还需要多少条路径才有解。&lt;/p&gt;
&lt;p&gt;考虑一张新图：将所有的点保留，为 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 点连边，若这张图中的各个连通分量都能形成欧拉回路，则一定有解。为什么？考虑原图的 dfs 生成树，每次在新图上走一条边相当于在原图上通过某种方式从 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，而欧拉回路代表着我最终又走回了一开始的起点，其每条边的经过次数必然是偶数。&lt;/p&gt;
&lt;p&gt;构造就直接在 dfs 生成树上找路径就行了，倍增即可。&lt;/p&gt;
&lt;h3 id=&#34;f---defender-of-childhood-dreams&#34;&gt;1586F - Defender of Childhood Dreams&lt;/h3&gt;
&lt;p&gt;给定一张竞赛图，其中边永远从编号小的点连向编号大的，用最少的颜色染这些边使得任何长度 &lt;span class=&#34;math inline&#34;&gt;\(\ge k\)&lt;/span&gt; 的路径至少有两种颜色的边。&lt;/p&gt;
&lt;p&gt;据说是 ZR CSP 七连的原题，亏。&lt;/p&gt;
&lt;p&gt;考虑分块。将所有点每 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个分为一小块，每 &lt;span class=&#34;math inline&#34;&gt;\(k^2\)&lt;/span&gt; 个分为一大块……依此类推，大小为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的块内部连一种颜色的边，大小为 &lt;span class=&#34;math inline&#34;&gt;\(k^2\)&lt;/span&gt; 的块内部连一种颜色的边……依此类推。所以一共有 &lt;span class=&#34;math inline&#34;&gt;\(\lceil\log_k n \rceil\)&lt;/span&gt; 种颜色，代码很短。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k;&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; getans(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = k, ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; ((x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / now != (y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / now) now *= k, ++ret;&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(k);&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print((&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)ceil(log(n) / log(k)), &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) print(getans(i, j), &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;绝绝子了属于是。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-750-div.2&#34;&gt;Codeforces Round #750 (Div.2)&lt;/h2&gt;
&lt;h3 id=&#34;d---vupsen-pupsen-and-0&#34;&gt;1582D - Vupsen, Pupsen and 0&lt;/h3&gt;
&lt;p&gt;给定向量 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，求一个向量 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(a\cdot b = 0\)&lt;/span&gt;，其中向量维数 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|a_i|\le 10^4\)&lt;/span&gt;，要求 &lt;span class=&#34;math inline&#34;&gt;\(\sum|b_i|\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑两两配对，最后三个特判一下。&lt;/p&gt;
&lt;h3 id=&#34;e---pchelyonok-and-segments&#34;&gt;1582E - Pchelyonok and Segments&lt;/h3&gt;
&lt;p&gt;重点：找到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的范围然后直接 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 暴力。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{k(k + 1)}{2}\le n\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(k\le \sqrt{2n}\le 447\)&lt;/span&gt;。然后就可以设计一个 dp：令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为当前考虑了 &lt;span class=&#34;math inline&#34;&gt;\([i, n]\)&lt;/span&gt;，最前面的选的一段长度为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，最大的和。（类似 LIS 的贪心设计）然后转移就随便转移一下。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, sqrtn = &lt;span class=&#34;dv&#34;&gt;500&lt;/span&gt;, INF = &lt;span class=&#34;fl&#34;&gt;2e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll sum[maxn], f[maxn][sqrtn];&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), sum[i] = sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + a[i];&lt;/span&gt;
&lt;span id=&#34;cb15-11&#34;&gt;&lt;a href=&#34;#cb15-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-12&#34;&gt;&lt;a href=&#34;#cb15-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (k * (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;lt;= n) ++k;&lt;/span&gt;
&lt;span id=&#34;cb15-13&#34;&gt;&lt;a href=&#34;#cb15-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --k;&lt;/span&gt;
&lt;span id=&#34;cb15-14&#34;&gt;&lt;a href=&#34;#cb15-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) f[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] = -INF;&lt;/span&gt;
&lt;span id=&#34;cb15-15&#34;&gt;&lt;a href=&#34;#cb15-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = INF;&lt;/span&gt;
&lt;span id=&#34;cb15-16&#34;&gt;&lt;a href=&#34;#cb15-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb15-17&#34;&gt;&lt;a href=&#34;#cb15-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb15-18&#34;&gt;&lt;a href=&#34;#cb15-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j] = f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j];&lt;/span&gt;
&lt;span id=&#34;cb15-19&#34;&gt;&lt;a href=&#34;#cb15-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;amp;&amp;amp; i + j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= n &amp;amp;&amp;amp; sum[i + j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt; f[i + j][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb15-20&#34;&gt;&lt;a href=&#34;#cb15-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    chkmax(f[i][j], sum[i + j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb15-21&#34;&gt;&lt;a href=&#34;#cb15-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb15-22&#34;&gt;&lt;a href=&#34;#cb15-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb15-23&#34;&gt;&lt;a href=&#34;#cb15-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-24&#34;&gt;&lt;a href=&#34;#cb15-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) ans = j;&lt;/span&gt;
&lt;span id=&#34;cb15-25&#34;&gt;&lt;a href=&#34;#cb15-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans, &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-26&#34;&gt;&lt;a href=&#34;#cb15-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-27&#34;&gt;&lt;a href=&#34;#cb15-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-28&#34;&gt;&lt;a href=&#34;#cb15-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-754-div.-2&#34;&gt;Codeforces Round #754 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打的有点差劲，A + B + C。&lt;/p&gt;
&lt;h3 id=&#34;d---treelabeling&#34;&gt;1605D - Treelabeling&lt;/h3&gt;
&lt;p&gt;给定一棵未标号的树，求一个标号方式使得相邻的 &lt;span class=&#34;math inline&#34;&gt;\((u,v)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的最高位与 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的最高位不同。&lt;/p&gt;
&lt;p&gt;原题意易被翻译成如上，现在考虑如何构造。令 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 在二进制表示下的最高位（从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 开始编号）。&lt;/p&gt;
&lt;p&gt;先给树二分图染色，然后令黑点个数为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，白点个数为 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt;，不妨假设 &lt;span class=&#34;math inline&#34;&gt;\(w \le b\)&lt;/span&gt;，则显然 &lt;span class=&#34;math inline&#34;&gt;\(w\le \lfloor n / 2\rfloor\)&lt;/span&gt;。所以可以得到 &lt;span class=&#34;math inline&#34;&gt;\(f(w) \le f(n) - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后还有一个很好的性质，就是满足 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 一共有 &lt;span class=&#34;math inline&#34;&gt;\(2^i\)&lt;/span&gt; 个，因此直接考虑 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt; 的每一位，若第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，则直接将满足 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 分配给白点，剩余的分配给黑点。&lt;/p&gt;
&lt;p&gt;于是这样就构造完了，正确性应该是十分显然的。&lt;/p&gt;
&lt;h3 id=&#34;e---array-equalizer&#34;&gt;1605E - Array Equalizer&lt;/h3&gt;
&lt;p&gt;给定两个序列 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{b_i\}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 是给定的，&lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 除了 &lt;span class=&#34;math inline&#34;&gt;\(b_1\)&lt;/span&gt; 其余都给出。一次操作可以选定一个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 然后对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(i\mid j\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b_j\)&lt;/span&gt; 加上或减去 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。对于 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(b_1\)&lt;/span&gt;，问将 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 变为 &lt;span class=&#34;math inline&#34;&gt;\(\{b_i\}\)&lt;/span&gt; 的最小操作次数。&lt;/p&gt;
&lt;p&gt;首先令 &lt;span class=&#34;math inline&#34;&gt;\(b_i = b_i - a_i\)&lt;/span&gt;，然后问题就变为将 &lt;span class=&#34;math inline&#34;&gt;\(\{0\}\)&lt;/span&gt; 变成 &lt;span class=&#34;math inline&#34;&gt;\(\{b_i\}\)&lt;/span&gt; 的最小操作次数。然后首先考虑只有一个 &lt;span class=&#34;math inline&#34;&gt;\(b_1\)&lt;/span&gt; 的时候，如何解决这个问题。&lt;/p&gt;
&lt;p&gt;然后不难发现，只需要从小到大考虑即可。模拟一下操作：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_2\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_3\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_4\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_5\)&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdots\)&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_3\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_4\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_5\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdots\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Add&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_2 - B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_3 - B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_4 - B_2\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B_5 - B_1\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdots\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(B_1 = x\)&lt;/span&gt; 的话，每次操作加上的数都形如 &lt;span class=&#34;math inline&#34;&gt;\(cx + d\)&lt;/span&gt;，对操作次数的贡献即为 &lt;span class=&#34;math inline&#34;&gt;\(|cx + d|\)&lt;/span&gt;。这个 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 是可以提前预处理出来的。然后的话，现在的目标就是求出一坨 &lt;span class=&#34;math inline&#34;&gt;\(|cx + d|\)&lt;/span&gt; 的和，发现这个可能不太好做，我们拆开绝对值，分类讨论一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(cx + d &amp;gt; 0\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(x &amp;gt; -\dfrac dc\)&lt;/span&gt;，贡献就为 &lt;span class=&#34;math inline&#34;&gt;\(cx + d\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(cx + d&amp;lt; 0\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(x&amp;lt;-\dfrac dc\)&lt;/span&gt;，贡献为 &lt;span class=&#34;math inline&#34;&gt;\(-cx - d\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，上述条件当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(c &amp;gt; 0\)&lt;/span&gt; 时成立，对于 &lt;span class=&#34;math inline&#34;&gt;\(c &amp;lt; 0\)&lt;/span&gt; 的情况，直接乘个 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; 转换成 &lt;span class=&#34;math inline&#34;&gt;\(c &amp;gt; 0\)&lt;/span&gt; 即可。而 &lt;span class=&#34;math inline&#34;&gt;\(c = 0\)&lt;/span&gt; 的时候，直接统计 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的贡献即可。所以我们按照 &lt;span class=&#34;math inline&#34;&gt;\(-\dfrac dc\)&lt;/span&gt; 排序，存储这些一次函数，然后就可以预处理一下前缀和和后缀和，每次二分一下就可以的解了。&lt;/p&gt;
&lt;p&gt;事实上，&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 就是 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;。所以问题可以得到简化很多。&lt;/p&gt;
&lt;h2 id=&#34;technocup-2022-elimination-round-2-and-codeforces-round-755-div.-1-div.-2&#34;&gt;Technocup 2022 — Elimination Round 2 and Codeforces Round #755 (Div. 1, Div. 2)&lt;/h2&gt;
&lt;p&gt;div 1. A + B。&lt;/p&gt;
&lt;h3 id=&#34;b---guess-the-permutation&#34;&gt;1588B - Guess the Permutation&lt;/h3&gt;
&lt;p&gt;给定一个 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的有序排列（&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^9\)&lt;/span&gt; 级别），翻转了 &lt;span class=&#34;math inline&#34;&gt;\([i, j - 1]\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\([j, k]\)&lt;/span&gt;。最多 &lt;span class=&#34;math inline&#34;&gt;\(40\)&lt;/span&gt; 次询问，一次询问一个区间的逆序对数，要求最后给出 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;不难发现 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 可以通过二分得到，而 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 似乎也可以二分，但是 &lt;span class=&#34;math inline&#34;&gt;\(2\log n\)&lt;/span&gt; 就会爆炸。所以只考虑二分出 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后考虑 &lt;span class=&#34;math inline&#34;&gt;\([i, k]\)&lt;/span&gt; 中逆序对的贡献，令两端的长度为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，则有 &lt;span class=&#34;math inline&#34;&gt;\(f(i, k) = (a - 1)a / 2 + (b - 1)b/2\)&lt;/span&gt;，所以我们询问一下 &lt;span class=&#34;math inline&#34;&gt;\([i + 1, n]\)&lt;/span&gt;，就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的值，具体地，&lt;span class=&#34;math inline&#34;&gt;\(a = f(i, k) - f(i - 1, k) + 1\)&lt;/span&gt;，证明考虑逆序对的性质。&lt;/p&gt;
&lt;p&gt;然后不难二分出 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的值，这题就做完了。&lt;/p&gt;
&lt;h3 id=&#34;c---game-with-stones&#34;&gt;1588C - Game with Stones&lt;/h3&gt;
&lt;h2 id=&#34;codeforces-round-758-div.1-div.-2&#34;&gt;Codeforces Round #758 (Div.1 + Div. 2)&lt;/h2&gt;
&lt;p&gt;terrible round。A + B + C，rk522。&lt;/p&gt;
&lt;h3 id=&#34;d---dominoes&#34;&gt;1608D - Dominoes&lt;/h3&gt;
&lt;p&gt;首先我们知道，一个染色方案合法当且仅当 W 和 B 的数量相同，以及 WW 和 BB 的数量相同。计算 W 和 B 的数量，若其大于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，则显然无解。&lt;/p&gt;
&lt;p&gt;否则，无解的情况就是 WB 和 BW 同时存在却没有 WW 或 BB。其他都为合法情况，方案大家可以在草稿纸上尝试进行构造。设问号有 &lt;span class=&#34;math inline&#34;&gt;\(c_0\)&lt;/span&gt; 个，W 有 &lt;span class=&#34;math inline&#34;&gt;\(c_B\)&lt;/span&gt; 个，则显然总染色方案数为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{c_0}{n - c_B}\)&lt;/span&gt;。然后处理一下无解的情况。&lt;/p&gt;
&lt;p&gt;同时存在 WB 和 BW 却没有 WW 或 BB 的方案数其实就是用 &lt;strong&gt;不存在 WW 和 BB 的方案数&lt;/strong&gt; 减去 &lt;strong&gt;全是 WB&lt;/strong&gt; 和 &lt;strong&gt;全是 BW&lt;/strong&gt; 的情况。设 ?? 有 &lt;span class=&#34;math inline&#34;&gt;\(c_P\)&lt;/span&gt; 个，则对于第一个“不存在 WW 和 BB 的”的方案数就是 &lt;span class=&#34;math inline&#34;&gt;\(2^{c_P}\)&lt;/span&gt;，且不存在 BB 或 WW；对于全是 WB 的至多一种，且不能存在 Bx 或 Wx，全是 BW 同理。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-global-round-18&#34;&gt;Codeforces Global Round 18&lt;/h2&gt;
&lt;p&gt;tiring and difficult round. A + B + C。&lt;/p&gt;
&lt;h3 id=&#34;c---menorah&#34;&gt;1615C - Menorah&lt;/h3&gt;
&lt;p&gt;比较巧妙的题。注意到一次对 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的操作可以视为改变 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后打上全局标记。&lt;/p&gt;
&lt;p&gt;之后我们注意到，第一次操作要操作一开始为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的，第二次操作就必须操作一开始为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的。之后肯定是 &lt;span class=&#34;math inline&#34;&gt;\(1010\cdots\)&lt;/span&gt; 交替操作。&lt;/p&gt;
&lt;p&gt;预处理一下 &lt;span class=&#34;math inline&#34;&gt;\(same_{i, j}\)&lt;/span&gt; 数组表示 &lt;span class=&#34;math inline&#34;&gt;\(a_k = i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\([a_k = b_k] = j\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的数量（即 &lt;span class=&#34;math inline&#34;&gt;\(a = 1/0\)&lt;/span&gt;，与 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 相同/不同的数量），则我们可以发现，一次对 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 同的操作会使得 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 同减一，同时 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 不同加一。&lt;/p&gt;
&lt;p&gt;若果我们进行奇数次操作，那么全局翻转标记是有的，要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1/0, 1} = 0\)&lt;/span&gt;。所以一共要进行 &lt;span class=&#34;math inline&#34;&gt;\(same_{1, 1} + same_{0, 1}\)&lt;/span&gt; 次操作将所有的相同变为不同，然后因为有翻转，所以我们就能得到答案。这样做的前提条件是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1,1} - same_{0, 1} = 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么若进行偶数次操作，同理，没有全局翻转标记，要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1/0, 0} = 0\)&lt;/span&gt;。所以一共要进行 &lt;span class=&#34;math inline&#34;&gt;\(same_{1, 0} + same_{0,0}\)&lt;/span&gt; 次操作将所有的不同变为相同，答案就能得到了。这样做的前提条件是 &lt;span class=&#34;math inline&#34;&gt;\(same_{1, 0} = same_{0, 0}\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s1[maxn], s2[maxn];&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n), read(s1 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), read(s2 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; same[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++same[s1[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;][s1[i] == s2[i]];&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans = same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) chkmin(ans, same[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + same[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans &amp;gt; n ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : ans);&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-17&#34;&gt;&lt;a href=&#34;#cb16-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-18&#34;&gt;&lt;a href=&#34;#cb16-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---xor-mas-tree&#34;&gt;1615D - X(or)-mas Tree&lt;/h3&gt;
&lt;p&gt;题意：给定一棵边带权树，有些边权未确定。给定形如 &lt;span class=&#34;math inline&#34;&gt;\((a, b, c)\)&lt;/span&gt; 的限制表示 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 路径上的边权异或和的 popcount 的奇偶性为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;。构造一个给未定权边定权的方案。&lt;/p&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{parity}(x)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{popcount}(x)\bmod 2\)&lt;/span&gt;，则我们可以知道 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{parity}(x\oplus y) = \operatorname{parity}(x)\oplus \operatorname{parity}(y)\)&lt;/span&gt;。所以干脆直接先将树上的所有边权 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 先变成 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{parity}(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令树上前缀异或和为 &lt;span class=&#34;math inline&#34;&gt;\(r_u\)&lt;/span&gt;，则我们注意到，&lt;span class=&#34;math inline&#34;&gt;\((a,b)\)&lt;/span&gt; 路径的异或和为 &lt;span class=&#34;math inline&#34;&gt;\(r_a\oplus r_b\)&lt;/span&gt;。所以我们现在就有了若干条形如 &lt;span class=&#34;math inline&#34;&gt;\(r_a\oplus r_b = c\)&lt;/span&gt; 的限制（对于树上已有的边 &lt;span class=&#34;math inline&#34;&gt;\((u,v, x)\)&lt;/span&gt; 可以看作是 &lt;span class=&#34;math inline&#34;&gt;\(r_u\oplus r_v = x\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;对于每个限制 &lt;span class=&#34;math inline&#34;&gt;\(r_a\oplus r_b = c\)&lt;/span&gt;，在新图上建一条边 &lt;span class=&#34;math inline&#34;&gt;\((a, b, c)\)&lt;/span&gt;，然后考虑二分图染色（一开始钦定一个 &lt;span class=&#34;math inline&#34;&gt;\(r_1\)&lt;/span&gt;），这样子就可以求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(r_u\)&lt;/span&gt; 并且判断矛盾。&lt;/p&gt;
&lt;h3 id=&#34;e---purple-crayon&#34;&gt;1615E - Purple Crayon&lt;/h3&gt;
&lt;p&gt;题意：红蓝双方在一棵 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为根的树上涂色。红先涂，每次可以选择一个子树内的点涂成红色，但涂的个数不能超过 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。然后蓝涂，每次可以选择一个子树内的点涂成蓝色，但该子树内不能有红色节点。设最后白、红、蓝三种颜色的点各有 &lt;span class=&#34;math inline&#34;&gt;\(w\)&lt;/span&gt;、&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 个，则分数定义为 &lt;span class=&#34;math inline&#34;&gt;\(w(r - b)\)&lt;/span&gt;。红方想最大化分数，蓝方想最小化分数。双方都绝顶聪明，问最后的分数。&lt;/p&gt;
&lt;p&gt;拆开式子：&lt;span class=&#34;math inline&#34;&gt;\(w(r- b) = (n - r - b)(r - b) = r(n - r) - b(n - b)\)&lt;/span&gt;。所以对于红方，他想要做的就是最大化 &lt;span class=&#34;math inline&#34;&gt;\(r(n - r)\)&lt;/span&gt; 和最小化 &lt;span class=&#34;math inline&#34;&gt;\(b(n - b)\)&lt;/span&gt;。到了蓝方这里，他一定是想最大化 &lt;span class=&#34;math inline&#34;&gt;\(b(n - b)\)&lt;/span&gt;，其在 &lt;span class=&#34;math inline&#34;&gt;\(b = \lfloor n / 2\rfloor\)&lt;/span&gt; 处有最大值。&lt;/p&gt;
&lt;p&gt;另外我们可以发现，红方选择了 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树意味着 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 上的点都不能被蓝方涂色，相当于控制了一条链。为了使得蓝方能达到的最大的 &lt;span class=&#34;math inline&#34;&gt;\(b(n - b)\)&lt;/span&gt; 最小，红方的最优策略一定是尽可能最小化 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最大值。所以说，&lt;strong&gt;红方尽可能多控制点，一定是最优的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而且，为了尽可能多控制点，&lt;strong&gt;红方选的一定是叶子节点&lt;/strong&gt;，若选的不是叶子，则选一个儿子节点能控制的节点肯定更多。&lt;/p&gt;
&lt;p&gt;所以，我们从大到小取 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 根长链，取的时候算一下蓝方还能涂多少个 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(b &amp;gt; \lfloor n / 2\rfloor\)&lt;/span&gt; 则取 &lt;span class=&#34;math inline&#34;&gt;\(b = \lfloor n / 2\rfloor\)&lt;/span&gt;。依此计算答案。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, son[maxn], h[maxn], fa[maxn], len[maxn], cnt;&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs1(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre) {&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fa[u] = pre;&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb17-8&#34;&gt;&lt;a href=&#34;#cb17-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == pre) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-9&#34;&gt;&lt;a href=&#34;#cb17-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs1(v, u);&lt;/span&gt;
&lt;span id=&#34;cb17-10&#34;&gt;&lt;a href=&#34;#cb17-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (h[v] &amp;gt; h[son[u]])&lt;/span&gt;
&lt;span id=&#34;cb17-11&#34;&gt;&lt;a href=&#34;#cb17-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            son[u] = v;&lt;/span&gt;
&lt;span id=&#34;cb17-12&#34;&gt;&lt;a href=&#34;#cb17-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-13&#34;&gt;&lt;a href=&#34;#cb17-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    h[u] = h[son[u]] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-14&#34;&gt;&lt;a href=&#34;#cb17-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-15&#34;&gt;&lt;a href=&#34;#cb17-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-16&#34;&gt;&lt;a href=&#34;#cb17-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-17&#34;&gt;&lt;a href=&#34;#cb17-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs2(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; topf) {&lt;/span&gt;
&lt;span id=&#34;cb17-18&#34;&gt;&lt;a href=&#34;#cb17-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!son[u]) {&lt;/span&gt;
&lt;span id=&#34;cb17-19&#34;&gt;&lt;a href=&#34;#cb17-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        len[++cnt] = h[topf];&lt;/span&gt;
&lt;span id=&#34;cb17-20&#34;&gt;&lt;a href=&#34;#cb17-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-21&#34;&gt;&lt;a href=&#34;#cb17-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-22&#34;&gt;&lt;a href=&#34;#cb17-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs2(son[u], topf);&lt;/span&gt;
&lt;span id=&#34;cb17-23&#34;&gt;&lt;a href=&#34;#cb17-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb17-24&#34;&gt;&lt;a href=&#34;#cb17-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == son[u] || v == fa[u]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-25&#34;&gt;&lt;a href=&#34;#cb17-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs2(v, v);&lt;/span&gt;
&lt;span id=&#34;cb17-26&#34;&gt;&lt;a href=&#34;#cb17-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-27&#34;&gt;&lt;a href=&#34;#cb17-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-28&#34;&gt;&lt;a href=&#34;#cb17-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-29&#34;&gt;&lt;a href=&#34;#cb17-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-30&#34;&gt;&lt;a href=&#34;#cb17-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb17-31&#34;&gt;&lt;a href=&#34;#cb17-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, k);&lt;/span&gt;
&lt;span id=&#34;cb17-32&#34;&gt;&lt;a href=&#34;#cb17-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb17-33&#34;&gt;&lt;a href=&#34;#cb17-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u, v);&lt;/span&gt;
&lt;span id=&#34;cb17-34&#34;&gt;&lt;a href=&#34;#cb17-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb17-35&#34;&gt;&lt;a href=&#34;#cb17-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-36&#34;&gt;&lt;a href=&#34;#cb17-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs1(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), dfs2(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-37&#34;&gt;&lt;a href=&#34;#cb17-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(len + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, len + cnt + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, greater&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;());&lt;/span&gt;
&lt;span id=&#34;cb17-38&#34;&gt;&lt;a href=&#34;#cb17-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ans = -&lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-39&#34;&gt;&lt;a href=&#34;#cb17-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b = n;&lt;/span&gt;
&lt;span id=&#34;cb17-40&#34;&gt;&lt;a href=&#34;#cb17-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb17-41&#34;&gt;&lt;a href=&#34;#cb17-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = min(n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, b -= len[a]);&lt;/span&gt;
&lt;span id=&#34;cb17-42&#34;&gt;&lt;a href=&#34;#cb17-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        chkmax(ans, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (n - a - x) * (a - x));&lt;/span&gt;
&lt;span id=&#34;cb17-43&#34;&gt;&lt;a href=&#34;#cb17-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-44&#34;&gt;&lt;a href=&#34;#cb17-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb17-45&#34;&gt;&lt;a href=&#34;#cb17-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-46&#34;&gt;&lt;a href=&#34;#cb17-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;hello-2022&#34;&gt;Hello 2022&lt;/h2&gt;
&lt;h3 id=&#34;c---hidden-permutations&#34;&gt;1621C - Hidden Permutations&lt;/h3&gt;
&lt;p&gt;交互题，猜一个排列 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(n\le 10000\)&lt;/span&gt;）。初始有一个排列 &lt;span class=&#34;math inline&#34;&gt;\(q_i = i\)&lt;/span&gt;，每次可以询问一个 &lt;span class=&#34;math inline&#34;&gt;\(q_i\)&lt;/span&gt; 的值，交互库回答你的询问之后会将 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 替换成 &lt;span class=&#34;math inline&#34;&gt;\(q_i&amp;#39; = q_{p_i}\)&lt;/span&gt;。最多 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 次询问，求出 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们注意到，对 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 施加 &lt;span class=&#34;math inline&#34;&gt;\(q_i = q_{p_i}\)&lt;/span&gt; 的变换这一过程的本质是一个置换。不妨盯着一个 &lt;span class=&#34;math inline&#34;&gt;\(q_i\)&lt;/span&gt; 不放，我们发现其变换下去之后会为 &lt;span class=&#34;math inline&#34;&gt;\(p_i, p_{p_i}, p_{p_{p_i}},\cdots\)&lt;/span&gt; 会形成一个环，环上 &lt;span class=&#34;math inline&#34;&gt;\(u\to v\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(p_u = v\)&lt;/span&gt;。那么我们就可以每次盯着一个没有求出答案的下标询问，把这部分环找到，这题就解决了。&lt;/p&gt;
&lt;p&gt;询问次数的上界刚好为 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt;，卡的很准。&lt;/p&gt;
&lt;h3 id=&#34;d---the-winter-hike&#34;&gt;1621D - The Winter Hike&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(2n\times 2n\)&lt;/span&gt; 的棋盘，初始有 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; 个人在左上角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 正方形内（每个格子里面 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 人）。现要将这 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; 个人通过如下方式移动到右下角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 正方形内（每个格子 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 人）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选定一行，将其里面所有的人循环往左/右移一格。即对于有人的 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y)\)&lt;/span&gt;，我们施变换 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y)\to (x_0, y + 1)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y)\to(x_0, y - 1)\)&lt;/span&gt;。在 &lt;span class=&#34;math inline&#34;&gt;\((x_0, 2n)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((x_0, 1)\)&lt;/span&gt; 的特判。&lt;/li&gt;
&lt;li&gt;选定一列，将其里面所有的人循环往上/下移一格。即对于有人的 &lt;span class=&#34;math inline&#34;&gt;\((x, y_0)\)&lt;/span&gt;，我们施变换 &lt;span class=&#34;math inline&#34;&gt;\((x, y_0)\to (x + 1, y_0)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\((x, y_0)\to(x - 1, y_0)\)&lt;/span&gt;。在 &lt;span class=&#34;math inline&#34;&gt;\((2n, y_0)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((1, y_0)\)&lt;/span&gt; 的特判。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作可以进行任意次。同时有些格子里面有障碍，人不能经过，除掉 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 的障碍需要花费 &lt;span class=&#34;math inline&#34;&gt;\(c_{x, y}\)&lt;/span&gt;，可除掉的障碍数不限。问最小花费。&lt;/p&gt;
&lt;p&gt;是一道非常巧妙的构造。&lt;/p&gt;
&lt;p&gt;首先我们观察一下，发现右下角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 区域是必须除掉的。然后观察一下样例 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;，发现右下角的权值和为 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt;，说明我们只扣掉了一个多余的 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。然后注意到挖掉 &lt;span class=&#34;math inline&#34;&gt;\((2, 3)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((3, 2)\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\((1, 4)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((4, 1)\)&lt;/span&gt; 都是可以的。方案可以自行尝试构造。&lt;/p&gt;
&lt;p&gt;然后我们就发现，我们除了右下角的 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 要抠掉，只需要在两块 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 区域四角的交界格点处抠掉一个点就可以了。至于方案构造，就考虑一行行/一列列的移入右下角的区域，可以自行想象一下。这些点一共有 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt; 个，分别是：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\((1, 2n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((2n, 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((1, n + 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n + 1, 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n, n + 1)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n + 1, n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((n, 2n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\((2n, n)\)&lt;/span&gt;。于是这题就做完了。非常妙。&lt;/p&gt;
&lt;h3 id=&#34;e---new-school&#34;&gt;1621E - New School&lt;/h3&gt;
&lt;p&gt;要开办学校。&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个老师，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 组学生。第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 组学生有 &lt;span class=&#34;math inline&#34;&gt;\(k_i\)&lt;/span&gt; 人。老师的年龄分别为 &lt;span class=&#34;math inline&#34;&gt;\(a_1, \cdots, a_n\)&lt;/span&gt;，学生的年龄分别为 &lt;span class=&#34;math inline&#34;&gt;\(b_{i, 1},\cdots, b_{i, k_i}\)&lt;/span&gt;。要求安排老师到每组学生，满足&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每组学生都恰好有一个老师。&lt;/li&gt;
&lt;li&gt;一个老师最多带一个组。&lt;/li&gt;
&lt;li&gt;一组内，学生的平均年龄不超过老师的年龄。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于每个学生，求出若其不来上课，课程能否被安排。&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i,b_{i,j}\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\le k_i\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\sum k_i\le 2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑将所有学生组和所有老师降序排序。则有解当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\forall 1\le i\le m\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(avr_i\le a_i\)&lt;/span&gt;，该情况下我们将其一一对应即可。&lt;/p&gt;
&lt;p&gt;而当一个学生不来时，其只会影响一个组 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的平均年龄 &lt;span class=&#34;math inline&#34;&gt;\(avr_i\)&lt;/span&gt;。对于每一个学生 &lt;span class=&#34;math inline&#34;&gt;\(b_{i, x}\)&lt;/span&gt;，都可以二分找出没有他之后，整组人的新的位置 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。这样一来，&lt;span class=&#34;math inline&#34;&gt;\([j, i)\)&lt;/span&gt; 内的组都会往 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的方向平移一格。我们需要知道的，就是改变后的局面是否合法。&lt;/p&gt;
&lt;p&gt;至于改变之后是否合法，可以记三个前缀和数组（分别维护当前位置，当前位置往左/右平移一格后是否合法）来实现，详见代码。实现较为复杂恶心。同时，需要避开浮点误差。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pli = pair&amp;lt;ll, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ok[maxn], ok_suf[maxn], ok_pre[maxn], pos0[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pair&amp;lt;pli, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; B[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pli a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; c[maxn];&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;gt;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; pli &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; pli &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.first * b.second &amp;gt; b.first * a.second;}&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve() {&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m; read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i].first), a[i].second = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-14&#34;&gt;&lt;a href=&#34;#cb18-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb18-15&#34;&gt;&lt;a href=&#34;#cb18-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k; read(k); ll sum = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-16&#34;&gt;&lt;a href=&#34;#cb18-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[i].resize(k);&lt;/span&gt;
&lt;span id=&#34;cb18-17&#34;&gt;&lt;a href=&#34;#cb18-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(c[i][j]), sum += c[i][j];&lt;/span&gt;
&lt;span id=&#34;cb18-18&#34;&gt;&lt;a href=&#34;#cb18-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B[i] = make_pair(pli(sum, k), i);&lt;/span&gt;
&lt;span id=&#34;cb18-19&#34;&gt;&lt;a href=&#34;#cb18-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-20&#34;&gt;&lt;a href=&#34;#cb18-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-21&#34;&gt;&lt;a href=&#34;#cb18-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; cmp = [](&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.first &amp;gt; b.first;};&lt;/span&gt;
&lt;span id=&#34;cb18-22&#34;&gt;&lt;a href=&#34;#cb18-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sort(B + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, B + m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cmp);&lt;/span&gt;
&lt;span id=&#34;cb18-23&#34;&gt;&lt;a href=&#34;#cb18-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb18-24&#34;&gt;&lt;a href=&#34;#cb18-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ok[i] = ok[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (B[i].first &amp;gt; a[i]);&lt;span class=&#34;co&#34;&gt;//记录不合法的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-25&#34;&gt;&lt;a href=&#34;#cb18-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ok_pre[i] = ok_pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (B[i].first &amp;gt; a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//记录不合法的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-26&#34;&gt;&lt;a href=&#34;#cb18-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ok_suf[i] = ok_suf[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (B[i].first &amp;gt; a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;span class=&#34;co&#34;&gt;//记录不合法的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-27&#34;&gt;&lt;a href=&#34;#cb18-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pos0[B[i].second] = i;&lt;/span&gt;
&lt;span id=&#34;cb18-28&#34;&gt;&lt;a href=&#34;#cb18-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-29&#34;&gt;&lt;a href=&#34;#cb18-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb18-30&#34;&gt;&lt;a href=&#34;#cb18-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : c[i]) {&lt;/span&gt;
&lt;span id=&#34;cb18-31&#34;&gt;&lt;a href=&#34;#cb18-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            pli now(B[pos0[i]].first.first - x, B[pos0[i]].first.second - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-32&#34;&gt;&lt;a href=&#34;#cb18-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to = lower_bound(B + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, B + m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, make_pair(now, i), cmp) - B;&lt;/span&gt;
&lt;span id=&#34;cb18-33&#34;&gt;&lt;a href=&#34;#cb18-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (to &amp;gt; pos0[i])&lt;/span&gt;
&lt;span id=&#34;cb18-34&#34;&gt;&lt;a href=&#34;#cb18-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                putchar((now &amp;gt; a[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] || ok[pos0[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + ok_pre[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - ok_pre[pos0[i]] + ok[m] - ok[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ? &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; : &lt;span class=&#34;ch&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-35&#34;&gt;&lt;a href=&#34;#cb18-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; putchar((now &amp;gt; a[to] || ok[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + ok_suf[pos0[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - ok_suf[to - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + ok[m] - ok[pos0[i]]) ? &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; : &lt;span class=&#34;ch&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-36&#34;&gt;&lt;a href=&#34;#cb18-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb18-37&#34;&gt;&lt;a href=&#34;#cb18-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb18-38&#34;&gt;&lt;a href=&#34;#cb18-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb18-39&#34;&gt;&lt;a href=&#34;#cb18-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-40&#34;&gt;&lt;a href=&#34;#cb18-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb18-41&#34;&gt;&lt;a href=&#34;#cb18-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-42&#34;&gt;&lt;a href=&#34;#cb18-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb18-43&#34;&gt;&lt;a href=&#34;#cb18-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb18-44&#34;&gt;&lt;a href=&#34;#cb18-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) solve();&lt;/span&gt;
&lt;span id=&#34;cb18-45&#34;&gt;&lt;a href=&#34;#cb18-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb18-46&#34;&gt;&lt;a href=&#34;#cb18-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-764-div.-3&#34;&gt;Codeforces Round #764 (Div. 3)&lt;/h2&gt;
&lt;p&gt;随缘来做做。&lt;/p&gt;
&lt;h3 id=&#34;f---interacdive-problem&#34;&gt;1624F - Interacdive Problem&lt;/h3&gt;
&lt;p&gt;交互题，猜数字。给定一个正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(2 &amp;lt; n\le 1000\)&lt;/span&gt;），要猜一个整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(1\le x &amp;lt; n\)&lt;/span&gt;。可以进行如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;`+ c`，使得 &lt;span class=&#34;math inline&#34;&gt;\(x:=x + c\)&lt;/span&gt;，然后交互器返回 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{x}{n}\right\rfloor\)&lt;/span&gt; 的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;! x&lt;/code&gt;，输出答案，&lt;strong&gt;当前的&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最多 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 次询问。&lt;/p&gt;
&lt;p&gt;直觉告诉我们，&lt;span class=&#34;math inline&#34;&gt;\(2^{10} = 1024\)&lt;/span&gt;，所以我们考虑二分出这个 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，我们只需要每次对二分左右端点同时加上我们给交互库加上的 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 就可以了。我们的思路是尽可能把当前的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 往其上面的第一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的倍数去凑，所以每次二分的时候加上的都是 &lt;span class=&#34;math inline&#34;&gt;\(n - mid\bmod n\)&lt;/span&gt;。然后就可以根据交互库返回的值来一步步框死范围。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;+ &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; res; cin &amp;gt;&amp;gt; res;&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = n;&lt;/span&gt;
&lt;span id=&#34;cb19-10&#34;&gt;&lt;a href=&#34;#cb19-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt; r - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-11&#34;&gt;&lt;a href=&#34;#cb19-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-12&#34;&gt;&lt;a href=&#34;#cb19-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = n - mid % n;&lt;/span&gt;
&lt;span id=&#34;cb19-13&#34;&gt;&lt;a href=&#34;#cb19-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; res = add(a);&lt;/span&gt;
&lt;span id=&#34;cb19-14&#34;&gt;&lt;a href=&#34;#cb19-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        l += a, r += a, mid += a;&lt;/span&gt;
&lt;span id=&#34;cb19-15&#34;&gt;&lt;a href=&#34;#cb19-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (res == l / n) r = mid;&lt;/span&gt;
&lt;span id=&#34;cb19-16&#34;&gt;&lt;a href=&#34;#cb19-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; l = mid; &lt;/span&gt;
&lt;span id=&#34;cb19-17&#34;&gt;&lt;a href=&#34;#cb19-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb19-18&#34;&gt;&lt;a href=&#34;#cb19-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;st&#34;&gt;&amp;quot;! &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; l &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb19-19&#34;&gt;&lt;a href=&#34;#cb19-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-20&#34;&gt;&lt;a href=&#34;#cb19-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;g---minor-tree&#34;&gt;1624G - MinOr Tree&lt;/h3&gt;
&lt;p&gt;给定一张无向图，定义其生成树的边权为 OR 和，问最小生成树的边权 OR 和。&lt;/p&gt;
&lt;p&gt;考虑从高到低按位贪心，用并查集判断该位是不是必须取，不是的话就不取。具体地，令 &lt;span class=&#34;math inline&#34;&gt;\(ans = 2^{30} - 1\)&lt;/span&gt;，然后每次先将 &lt;span class=&#34;math inline&#34;&gt;\(ans\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 位去掉，看能否满足存在生成树，若能存在则第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 位不取。&lt;/p&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log a\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; edge {&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v, w;&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} e[maxn];&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, fa[maxn];&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; find(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fa[u] == u ? u : fa[u] = find(fa[u]);}&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-9&#34;&gt;&lt;a href=&#34;#cb20-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb20-10&#34;&gt;&lt;a href=&#34;#cb20-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    u = find(u), v = find(v);&lt;/span&gt;
&lt;span id=&#34;cb20-11&#34;&gt;&lt;a href=&#34;#cb20-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u == v) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-12&#34;&gt;&lt;a href=&#34;#cb20-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; fa[u] = v, &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-13&#34;&gt;&lt;a href=&#34;#cb20-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-14&#34;&gt;&lt;a href=&#34;#cb20-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-15&#34;&gt;&lt;a href=&#34;#cb20-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mask) {&lt;/span&gt;
&lt;span id=&#34;cb20-16&#34;&gt;&lt;a href=&#34;#cb20-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) fa[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb20-17&#34;&gt;&lt;a href=&#34;#cb20-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; size = n;&lt;/span&gt;
&lt;span id=&#34;cb20-18&#34;&gt;&lt;a href=&#34;#cb20-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb20-19&#34;&gt;&lt;a href=&#34;#cb20-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((e[i].w | mask) != mask) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-20&#34;&gt;&lt;a href=&#34;#cb20-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (merge(e[i].u, e[i].v)) --size;&lt;/span&gt;
&lt;span id=&#34;cb20-21&#34;&gt;&lt;a href=&#34;#cb20-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-22&#34;&gt;&lt;a href=&#34;#cb20-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; size == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-23&#34;&gt;&lt;a href=&#34;#cb20-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-24&#34;&gt;&lt;a href=&#34;#cb20-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-25&#34;&gt;&lt;a href=&#34;#cb20-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb20-26&#34;&gt;&lt;a href=&#34;#cb20-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb20-27&#34;&gt;&lt;a href=&#34;#cb20-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb20-28&#34;&gt;&lt;a href=&#34;#cb20-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb20-29&#34;&gt;&lt;a href=&#34;#cb20-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) read(e[i].u, e[i].v, e[i].w);&lt;/span&gt;
&lt;span id=&#34;cb20-30&#34;&gt;&lt;a href=&#34;#cb20-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-31&#34;&gt;&lt;a href=&#34;#cb20-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, &lt;span class=&#34;dv&#34;&gt;29&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb20-32&#34;&gt;&lt;a href=&#34;#cb20-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans ^= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb20-33&#34;&gt;&lt;a href=&#34;#cb20-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!check(ans)) ans ^= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i);&lt;/span&gt;
&lt;span id=&#34;cb20-34&#34;&gt;&lt;a href=&#34;#cb20-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb20-35&#34;&gt;&lt;a href=&#34;#cb20-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans);&lt;/span&gt;
&lt;span id=&#34;cb20-36&#34;&gt;&lt;a href=&#34;#cb20-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb20-37&#34;&gt;&lt;a href=&#34;#cb20-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-38&#34;&gt;&lt;a href=&#34;#cb20-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-765-div.-2&#34;&gt;Codeforces Round #765 (Div. 2)&lt;/h2&gt;
&lt;p&gt;补完了！&lt;/p&gt;
&lt;h3 id=&#34;d---binary-spiders&#34;&gt;1625D - Binary Spiders&lt;/h3&gt;
&lt;p&gt;题意：给定一个数集 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，大小 &lt;span class=&#34;math inline&#34;&gt;\(n\le 3\times 10^5\)&lt;/span&gt;，要求选出一个大小最大的子集 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;，使得其中元素两两异或的值都大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;。构造方案。&lt;/p&gt;
&lt;p&gt;我们发现两个数字异或起来大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的一个必要条件是其二进制表示下，最高的不相同的位大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的最高位。即他们在 Trie 上的 LCA 大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的最高位。下面令这个第 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 位为 &lt;span class=&#34;math inline&#34;&gt;\(up\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;在 Trie 上递归求解问题。点对分为在左右子树内部和跨越该节点两种情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前 Trie 表示的位数大于 &lt;span class=&#34;math inline&#34;&gt;\(up\)&lt;/span&gt;，此时左右子树内部的点对都有希望异或大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;，而跨越该节点的铁定大于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;，所以递归下去做然后把两边答案合并。&lt;/li&gt;
&lt;li&gt;当前 Trie 表示的位数等于 &lt;span class=&#34;math inline&#34;&gt;\(up\)&lt;/span&gt;，此时我们要么在该子树中选出一个大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的元素，要么找一对跨越左右子树的异或大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的数对，然后就不用递归下去了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个过程应该是自证明的。找大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的元素很简单，一直往右子树找最大的即可。找异或大于等于 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 的也很简单，将一个子树内的所有数字提出来，挨个在右边查最大异或对，就可以找到了。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(K = 0\)&lt;/span&gt; 的情况需要特判。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, K, a[maxn], up;&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ch[maxn * &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], val[maxn * &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;], tot, root;&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-5&#34;&gt;&lt;a href=&#34;#cb21-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; id, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb21-6&#34;&gt;&lt;a href=&#34;#cb21-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) u = ++tot;&lt;/span&gt;
&lt;span id=&#34;cb21-7&#34;&gt;&lt;a href=&#34;#cb21-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val[u] = id, &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb21-8&#34;&gt;&lt;a href=&#34;#cb21-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = (x &amp;gt;&amp;gt; k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-9&#34;&gt;&lt;a href=&#34;#cb21-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(ch[u][c], id, x, k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-10&#34;&gt;&lt;a href=&#34;#cb21-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-11&#34;&gt;&lt;a href=&#34;#cb21-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-12&#34;&gt;&lt;a href=&#34;#cb21-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-13&#34;&gt;&lt;a href=&#34;#cb21-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; getval(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb21-14&#34;&gt;&lt;a href=&#34;#cb21-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;();&lt;/span&gt;
&lt;span id=&#34;cb21-15&#34;&gt;&lt;a href=&#34;#cb21-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;{val[u]};&lt;/span&gt;
&lt;span id=&#34;cb21-16&#34;&gt;&lt;a href=&#34;#cb21-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; r1 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), r2 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-17&#34;&gt;&lt;a href=&#34;#cb21-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; xx : r2) r1.push_back(xx);&lt;/span&gt;
&lt;span id=&#34;cb21-18&#34;&gt;&lt;a href=&#34;#cb21-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; r1;&lt;/span&gt;
&lt;span id=&#34;cb21-19&#34;&gt;&lt;a href=&#34;#cb21-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-20&#34;&gt;&lt;a href=&#34;#cb21-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-21&#34;&gt;&lt;a href=&#34;#cb21-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb21-22&#34;&gt;&lt;a href=&#34;#cb21-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val[u];&lt;/span&gt;
&lt;span id=&#34;cb21-23&#34;&gt;&lt;a href=&#34;#cb21-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = ((x &amp;gt;&amp;gt; k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-24&#34;&gt;&lt;a href=&#34;#cb21-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ch[u][c]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(ch[u][c ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x);&lt;/span&gt;
&lt;span id=&#34;cb21-25&#34;&gt;&lt;a href=&#34;#cb21-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; query(ch[u][c], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, x);&lt;/span&gt;
&lt;span id=&#34;cb21-26&#34;&gt;&lt;a href=&#34;#cb21-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-27&#34;&gt;&lt;a href=&#34;#cb21-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-28&#34;&gt;&lt;a href=&#34;#cb21-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k) {&lt;/span&gt;
&lt;span id=&#34;cb21-29&#34;&gt;&lt;a href=&#34;#cb21-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;lt; up || !u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;();&lt;/span&gt;
&lt;span id=&#34;cb21-30&#34;&gt;&lt;a href=&#34;#cb21-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; up) {&lt;/span&gt;
&lt;span id=&#34;cb21-31&#34;&gt;&lt;a href=&#34;#cb21-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; r1 = solve(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), r2 = solve(ch[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-32&#34;&gt;&lt;a href=&#34;#cb21-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; xx : r2) r1.push_back(xx);&lt;/span&gt;
&lt;span id=&#34;cb21-33&#34;&gt;&lt;a href=&#34;#cb21-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; r1;&lt;/span&gt;
&lt;span id=&#34;cb21-34&#34;&gt;&lt;a href=&#34;#cb21-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == up) {&lt;/span&gt;
&lt;span id=&#34;cb21-35&#34;&gt;&lt;a href=&#34;#cb21-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; vec1 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), vec2 = getval(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), ans;&lt;/span&gt;
&lt;span id=&#34;cb21-36&#34;&gt;&lt;a href=&#34;#cb21-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vec1.size()) {&lt;/span&gt;
&lt;span id=&#34;cb21-37&#34;&gt;&lt;a href=&#34;#cb21-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[vec2.back()] &amp;gt;= K) ans.push_back(vec2.back());&lt;/span&gt;
&lt;span id=&#34;cb21-38&#34;&gt;&lt;a href=&#34;#cb21-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb21-39&#34;&gt;&lt;a href=&#34;#cb21-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-40&#34;&gt;&lt;a href=&#34;#cb21-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vec2.size()) {&lt;/span&gt;
&lt;span id=&#34;cb21-41&#34;&gt;&lt;a href=&#34;#cb21-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[vec1.back()] &amp;gt;= K) ans.push_back(vec1.back());&lt;/span&gt;
&lt;span id=&#34;cb21-42&#34;&gt;&lt;a href=&#34;#cb21-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb21-43&#34;&gt;&lt;a href=&#34;#cb21-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-44&#34;&gt;&lt;a href=&#34;#cb21-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flag = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-45&#34;&gt;&lt;a href=&#34;#cb21-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x1 : vec1) {&lt;/span&gt;
&lt;span id=&#34;cb21-46&#34;&gt;&lt;a href=&#34;#cb21-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x2 = query(ch[u][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a[x1]);&lt;/span&gt;
&lt;span id=&#34;cb21-47&#34;&gt;&lt;a href=&#34;#cb21-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((a[x1] ^ a[x2]) &amp;gt;= K) {&lt;/span&gt;
&lt;span id=&#34;cb21-48&#34;&gt;&lt;a href=&#34;#cb21-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                flag = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-49&#34;&gt;&lt;a href=&#34;#cb21-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back(x1), ans.push_back(x2);&lt;/span&gt;
&lt;span id=&#34;cb21-50&#34;&gt;&lt;a href=&#34;#cb21-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-51&#34;&gt;&lt;a href=&#34;#cb21-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb21-52&#34;&gt;&lt;a href=&#34;#cb21-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-53&#34;&gt;&lt;a href=&#34;#cb21-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flag) {&lt;/span&gt;
&lt;span id=&#34;cb21-54&#34;&gt;&lt;a href=&#34;#cb21-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[vec1.back()] &amp;gt;= K) ans.push_back(vec1.back());&lt;/span&gt;
&lt;span id=&#34;cb21-55&#34;&gt;&lt;a href=&#34;#cb21-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb21-56&#34;&gt;&lt;a href=&#34;#cb21-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb21-57&#34;&gt;&lt;a href=&#34;#cb21-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-58&#34;&gt;&lt;a href=&#34;#cb21-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb21-59&#34;&gt;&lt;a href=&#34;#cb21-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-60&#34;&gt;&lt;a href=&#34;#cb21-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb21-61&#34;&gt;&lt;a href=&#34;#cb21-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, K);&lt;/span&gt;
&lt;span id=&#34;cb21-62&#34;&gt;&lt;a href=&#34;#cb21-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((K &amp;gt;&amp;gt; i) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb21-63&#34;&gt;&lt;a href=&#34;#cb21-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        up = i;&lt;/span&gt;
&lt;span id=&#34;cb21-64&#34;&gt;&lt;a href=&#34;#cb21-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-65&#34;&gt;&lt;a href=&#34;#cb21-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-66&#34;&gt;&lt;a href=&#34;#cb21-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (K == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb21-67&#34;&gt;&lt;a href=&#34;#cb21-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(n);&lt;/span&gt;
&lt;span id=&#34;cb21-68&#34;&gt;&lt;a href=&#34;#cb21-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) print(i, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-69&#34;&gt;&lt;a href=&#34;#cb21-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-70&#34;&gt;&lt;a href=&#34;#cb21-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-71&#34;&gt;&lt;a href=&#34;#cb21-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), insert(root, i, a[i], &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-72&#34;&gt;&lt;a href=&#34;#cb21-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; ans = solve(root, &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-73&#34;&gt;&lt;a href=&#34;#cb21-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ans.size()) print(-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-74&#34;&gt;&lt;a href=&#34;#cb21-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb21-75&#34;&gt;&lt;a href=&#34;#cb21-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans.size());&lt;/span&gt;
&lt;span id=&#34;cb21-76&#34;&gt;&lt;a href=&#34;#cb21-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : ans) print(x, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb21-77&#34;&gt;&lt;a href=&#34;#cb21-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-78&#34;&gt;&lt;a href=&#34;#cb21-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-79&#34;&gt;&lt;a href=&#34;#cb21-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e1---cats-on-the-upgrade-easy-version&#34;&gt;1625E1 - Cats on the Upgrade (easy version)&lt;/h3&gt;
&lt;p&gt;给出如下定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义一个字符串是合法的括号序列（RBS）当且仅当其能通过每次去掉一个 &lt;code&gt;.&lt;/code&gt; 或者一个连续的 &lt;code&gt;()&lt;/code&gt; 变成空串。&lt;/li&gt;
&lt;li&gt;一个 RBS 被称为“简单的”当且仅当其开头和结尾均不为&lt;code&gt;.&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后给定一个长为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的只包含字符 &lt;code&gt;(&lt;/code&gt; 和 &lt;code&gt;)&lt;/code&gt; 的字符串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt;。要求完成如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(l, r\)&lt;/span&gt;，保证 &lt;span class=&#34;math inline&#34;&gt;\(S_l\)&lt;/span&gt; 为 &lt;code&gt;(&lt;/code&gt;，&lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 为 &lt;code&gt;)&lt;/code&gt;，其中间的字符均为 &lt;code&gt;.&lt;/code&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(S_l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 设为 &lt;code&gt;.&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(l, r\)&lt;/span&gt;，询问 &lt;span class=&#34;math inline&#34;&gt;\(S_{[l\cdots r]}\)&lt;/span&gt; 有多少连续子段为简单的 RBS，保证 &lt;span class=&#34;math inline&#34;&gt;\(S_{[l\cdots r]}\)&lt;/span&gt; 为简单 RBS。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le q\le 3\times10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;easy version 无修改操作。&lt;/p&gt;
&lt;p&gt;静态问题的话我们不妨记 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾的 RBS 的数量，这个东西很好 DP 出来，然后做个前缀和 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;，然后会发现 &lt;span class=&#34;math inline&#34;&gt;\(S_r - S_{l}\)&lt;/span&gt; 算重了某些信息。&lt;/p&gt;
&lt;p&gt;具体地，多算 RBS 的左端点应该在 &lt;span class=&#34;math inline&#34;&gt;\([1, l - 1]\)&lt;/span&gt;，右端点应该在 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，这些东西需要减掉。而，我们知道，设这样的 RBS 为 &lt;span class=&#34;math inline&#34;&gt;\([i,j]\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\([i, l - 1]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\([l, j]\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\([j + 1, r]\)&lt;/span&gt; 都应该是 RBS。所以这些形如 &lt;span class=&#34;math inline&#34;&gt;\([i,j]\)&lt;/span&gt; 的 RBS 的数量应该是形如 &lt;span class=&#34;math inline&#34;&gt;\([i, l -1]\)&lt;/span&gt; 的 RBS 的数量乘上形如 &lt;span class=&#34;math inline&#34;&gt;\([l, j]\)&lt;/span&gt; 的 RBS 的数量，即为 &lt;span class=&#34;math inline&#34;&gt;\(p_{l - 1}\times (p_r - p_{l - 1})\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e2---cats-on-the-upgrade-hard-version&#34;&gt;1625E2 - Cats on the Upgrade (hard version)&lt;/h3&gt;
&lt;p&gt;hard version 带上修改操作。&lt;/p&gt;
&lt;p&gt;上面这种做法的扩展性应该是不太好的。考虑建出括号树（或者说，森林，那些不合法的字符就直接扔掉），一对左右括号是一个节点，类似下面这张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s4.ax1x.com/2022/01/28/7zM1Ej.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后我们注意到，每次询问肯定都是询问树上一个节点或者若干个同层相邻节点的信息，并且每次操作都是删除叶子节点。我们考虑如何对于一个节点计算&lt;strong&gt;只选其儿子能构成 RBS 的数量&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(g_u\)&lt;/span&gt;，发现其就是选择 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个儿子、两个相邻儿子、三个相邻儿子……，设 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 个儿子的话，&lt;span class=&#34;math inline&#34;&gt;\(g_u = x(x+1)/2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而我们考虑一个节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 代表的 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 内的 RBS 数量的话，其明显为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{u是v祖先} g_v + g_u\)&lt;/span&gt;。所以，对于一次询问的 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，其肯定包含了一个同层的点集 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，其答案就再加上 &lt;span class=&#34;math inline&#34;&gt;\(|A|\times (|A| + 1) / 2\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;那么对于一次修改操作，我们思考其改变了什么：无非就是父亲节点的儿子数量减小，我们需要维护每个节点的 &lt;span class=&#34;math inline&#34;&gt;\(g_u\)&lt;/span&gt;，支持单修区查；然后维护每个点的儿子，同样是单修区查，用树状数组就可以了。&lt;/p&gt;
&lt;p&gt;这应该是最简洁的做法了。具体看代码，目前为 CF 最优解。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb22-4&#34;&gt;&lt;a href=&#34;#cb22-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, q;&lt;/span&gt;
&lt;span id=&#34;cb22-5&#34;&gt;&lt;a href=&#34;#cb22-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-6&#34;&gt;&lt;a href=&#34;#cb22-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; bit {&lt;/span&gt;
&lt;span id=&#34;cb22-7&#34;&gt;&lt;a href=&#34;#cb22-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;ll&amp;gt; s; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sz;&lt;/span&gt;
&lt;span id=&#34;cb22-8&#34;&gt;&lt;a href=&#34;#cb22-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; build(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; SZ) {sz = SZ + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, s.resize(sz); &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb22-9&#34;&gt;&lt;a href=&#34;#cb22-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, ll v) {&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x &amp;lt; sz; x += (x &amp;amp; -x)) s[x] += v; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb22-10&#34;&gt;&lt;a href=&#34;#cb22-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x; x -= (x &amp;amp; -x)) ret += s[x]; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;}&lt;/span&gt;
&lt;span id=&#34;cb22-11&#34;&gt;&lt;a href=&#34;#cb22-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} T, t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb22-12&#34;&gt;&lt;a href=&#34;#cb22-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-13&#34;&gt;&lt;a href=&#34;#cb22-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; son[maxn], fa[maxn], bel[maxn], ord[maxn], size[maxn];&lt;/span&gt;
&lt;span id=&#34;cb22-14&#34;&gt;&lt;a href=&#34;#cb22-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-15&#34;&gt;&lt;a href=&#34;#cb22-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb22-16&#34;&gt;&lt;a href=&#34;#cb22-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, q);&lt;/span&gt;
&lt;span id=&#34;cb22-17&#34;&gt;&lt;a href=&#34;#cb22-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-18&#34;&gt;&lt;a href=&#34;#cb22-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, now = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-19&#34;&gt;&lt;a href=&#34;#cb22-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb22-20&#34;&gt;&lt;a href=&#34;#cb22-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-21&#34;&gt;&lt;a href=&#34;#cb22-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ord[++cnt] = ++son[now];&lt;/span&gt;
&lt;span id=&#34;cb22-22&#34;&gt;&lt;a href=&#34;#cb22-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            fa[cnt] = now, bel[i] = cnt, now = cnt;&lt;/span&gt;
&lt;span id=&#34;cb22-23&#34;&gt;&lt;a href=&#34;#cb22-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now != &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-24&#34;&gt;&lt;a href=&#34;#cb22-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            bel[i] = now;&lt;/span&gt;
&lt;span id=&#34;cb22-25&#34;&gt;&lt;a href=&#34;#cb22-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now = fa[now];&lt;/span&gt;
&lt;span id=&#34;cb22-26&#34;&gt;&lt;a href=&#34;#cb22-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb22-27&#34;&gt;&lt;a href=&#34;#cb22-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb22-28&#34;&gt;&lt;a href=&#34;#cb22-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T.build(cnt);&lt;/span&gt;
&lt;span id=&#34;cb22-29&#34;&gt;&lt;a href=&#34;#cb22-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) {&lt;/span&gt;
&lt;span id=&#34;cb22-30&#34;&gt;&lt;a href=&#34;#cb22-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        T.add(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * son[i] * (son[i] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-31&#34;&gt;&lt;a href=&#34;#cb22-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[i].build(son[i]);&lt;/span&gt;
&lt;span id=&#34;cb22-32&#34;&gt;&lt;a href=&#34;#cb22-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb22-33&#34;&gt;&lt;a href=&#34;#cb22-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, cnt, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) size[fa[i]] += (++size[i]);&lt;/span&gt;
&lt;span id=&#34;cb22-34&#34;&gt;&lt;a href=&#34;#cb22-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (q--) {&lt;/span&gt;
&lt;span id=&#34;cb22-35&#34;&gt;&lt;a href=&#34;#cb22-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op, l, r; read(op, l, r);&lt;/span&gt;
&lt;span id=&#34;cb22-36&#34;&gt;&lt;a href=&#34;#cb22-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb22-37&#34;&gt;&lt;a href=&#34;#cb22-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; now = bel[l];&lt;/span&gt;
&lt;span id=&#34;cb22-38&#34;&gt;&lt;a href=&#34;#cb22-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t[fa[now]].add(ord[now], &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-39&#34;&gt;&lt;a href=&#34;#cb22-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            T.add(fa[now], -son[fa[now]]--);&lt;/span&gt;
&lt;span id=&#34;cb22-40&#34;&gt;&lt;a href=&#34;#cb22-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb22-41&#34;&gt;&lt;a href=&#34;#cb22-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            l = bel[l], r = bel[r];&lt;/span&gt;
&lt;span id=&#34;cb22-42&#34;&gt;&lt;a href=&#34;#cb22-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll ans = T.query(r + size[r] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - T.query(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-43&#34;&gt;&lt;a href=&#34;#cb22-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll cnt = ord[r] - ord[l] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - t[fa[l]].query(ord[r]) + t[fa[l]].query(ord[l] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-44&#34;&gt;&lt;a href=&#34;#cb22-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += cnt * (cnt + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-45&#34;&gt;&lt;a href=&#34;#cb22-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(ans);&lt;/span&gt;
&lt;span id=&#34;cb22-46&#34;&gt;&lt;a href=&#34;#cb22-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb22-47&#34;&gt;&lt;a href=&#34;#cb22-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb22-48&#34;&gt;&lt;a href=&#34;#cb22-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-49&#34;&gt;&lt;a href=&#34;#cb22-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-766-div.-2&#34;&gt;Codeforces Round #766 (Div. 2)&lt;/h2&gt;
&lt;p&gt;补完了，好！&lt;/p&gt;
&lt;h3 id=&#34;d---not-adding&#34;&gt;1627D - Not Adding&lt;/h3&gt;
&lt;p&gt;注意到所谓的加入数字的顺序其实无关紧要，为了尽可能多的加数，我们从大到小枚举加的这个数字。&lt;/p&gt;
&lt;p&gt;假设其为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，然后枚举倍数 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。我们只需要保证数组内有满足 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], n, maxx, ans;&lt;/span&gt;
&lt;span id=&#34;cb23-3&#34;&gt;&lt;a href=&#34;#cb23-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-4&#34;&gt;&lt;a href=&#34;#cb23-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b ? gcd(b, a % b) : a;}&lt;/span&gt;
&lt;span id=&#34;cb23-5&#34;&gt;&lt;a href=&#34;#cb23-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb23-6&#34;&gt;&lt;a href=&#34;#cb23-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb23-7&#34;&gt;&lt;a href=&#34;#cb23-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb23-8&#34;&gt;&lt;a href=&#34;#cb23-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb23-9&#34;&gt;&lt;a href=&#34;#cb23-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; read(x);&lt;/span&gt;
&lt;span id=&#34;cb23-10&#34;&gt;&lt;a href=&#34;#cb23-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[x] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-11&#34;&gt;&lt;a href=&#34;#cb23-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        chkmax(maxx, x);&lt;/span&gt;
&lt;span id=&#34;cb23-12&#34;&gt;&lt;a href=&#34;#cb23-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb23-13&#34;&gt;&lt;a href=&#34;#cb23-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, maxx, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb23-14&#34;&gt;&lt;a href=&#34;#cb23-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-15&#34;&gt;&lt;a href=&#34;#cb23-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, f = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-16&#34;&gt;&lt;a href=&#34;#cb23-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * i; j &amp;lt;= N; j += i) {&lt;/span&gt;
&lt;span id=&#34;cb23-17&#34;&gt;&lt;a href=&#34;#cb23-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[j]) {&lt;/span&gt;
&lt;span id=&#34;cb23-18&#34;&gt;&lt;a href=&#34;#cb23-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb23-19&#34;&gt;&lt;a href=&#34;#cb23-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f = j / i;&lt;/span&gt;
&lt;span id=&#34;cb23-20&#34;&gt;&lt;a href=&#34;#cb23-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; f = gcd(f, j / i);&lt;/span&gt;
&lt;span id=&#34;cb23-21&#34;&gt;&lt;a href=&#34;#cb23-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb23-22&#34;&gt;&lt;a href=&#34;#cb23-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb23-23&#34;&gt;&lt;a href=&#34;#cb23-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; f == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) vis[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++ans;&lt;/span&gt;
&lt;span id=&#34;cb23-24&#34;&gt;&lt;a href=&#34;#cb23-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb23-25&#34;&gt;&lt;a href=&#34;#cb23-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb23-26&#34;&gt;&lt;a href=&#34;#cb23-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-27&#34;&gt;&lt;a href=&#34;#cb23-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---not-escaping&#34;&gt;1627E - Not Escaping&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 层楼，每层楼有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个房间，要求从 &lt;span class=&#34;math inline&#34;&gt;\((1,1)\to(n,m)\)&lt;/span&gt;。走法有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在同一楼层平移，如 &lt;span class=&#34;math inline&#34;&gt;\((i, j_1)\to(i, j_2)\)&lt;/span&gt;，代价为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\cdot|j_2 - j_1|\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;通过梯子从 &lt;span class=&#34;math inline&#34;&gt;\((a_i,b_i)\to(c_i,d_i)\)&lt;/span&gt;，代价为 &lt;span class=&#34;math inline&#34;&gt;\(-h_i\)&lt;/span&gt;。保证有 &lt;span class=&#34;math inline&#34;&gt;\(a_i&amp;lt;c_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问最小代价或者输出无解。&lt;span class=&#34;math inline&#34;&gt;\(2\le n,m\le 10^5\)&lt;/span&gt;，梯子总数 &lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le x_i,h_i\le 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;实际上会发现，有用的点不超过 &lt;span class=&#34;math inline&#34;&gt;\(2k + 2\)&lt;/span&gt; 个（起点，终点和梯子的端点），并且梯子都是自下而上的。&lt;/p&gt;
&lt;p&gt;因此我们从下往上一层一层的 dp，用当前层的 dp 值更新当前层，然后有梯子的就往上更新。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pil = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-5&#34;&gt;&lt;a href=&#34;#cb24-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll x[maxn], dp[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-6&#34;&gt;&lt;a href=&#34;#cb24-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; ladder {&lt;/span&gt;
&lt;span id=&#34;cb24-7&#34;&gt;&lt;a href=&#34;#cb24-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, b, c, d, h;&lt;/span&gt;
&lt;span id=&#34;cb24-8&#34;&gt;&lt;a href=&#34;#cb24-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ladder() {}&lt;/span&gt;
&lt;span id=&#34;cb24-9&#34;&gt;&lt;a href=&#34;#cb24-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ladder(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _c, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _d, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; _h) : a(_a), b(_b), c(_c), d(_d), h(_h) {}&lt;/span&gt;
&lt;span id=&#34;cb24-10&#34;&gt;&lt;a href=&#34;#cb24-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb24-11&#34;&gt;&lt;a href=&#34;#cb24-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;ladder&amp;gt; lad[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-12&#34;&gt;&lt;a href=&#34;#cb24-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, ll&amp;gt; row[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-13&#34;&gt;&lt;a href=&#34;#cb24-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-14&#34;&gt;&lt;a href=&#34;#cb24-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve() {&lt;/span&gt;
&lt;span id=&#34;cb24-15&#34;&gt;&lt;a href=&#34;#cb24-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, k; read(n, m, k);&lt;/span&gt;
&lt;span id=&#34;cb24-16&#34;&gt;&lt;a href=&#34;#cb24-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(x[i]), vector&amp;lt;ladder&amp;gt;().swap(lad[i]), map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, ll&amp;gt;().swap(row[i]);&lt;/span&gt;
&lt;span id=&#34;cb24-17&#34;&gt;&lt;a href=&#34;#cb24-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb24-18&#34;&gt;&lt;a href=&#34;#cb24-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, b, c, d, h; read(a, b, c, d, h);&lt;/span&gt;
&lt;span id=&#34;cb24-19&#34;&gt;&lt;a href=&#34;#cb24-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        lad[a].push_back(ladder(a, b, c, d, h));&lt;/span&gt;
&lt;span id=&#34;cb24-20&#34;&gt;&lt;a href=&#34;#cb24-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        row[a][b] = INF, row[c][d] = INF;&lt;/span&gt;
&lt;span id=&#34;cb24-21&#34;&gt;&lt;a href=&#34;#cb24-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb24-22&#34;&gt;&lt;a href=&#34;#cb24-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    row[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, row[n][m] = INF;&lt;/span&gt;
&lt;span id=&#34;cb24-23&#34;&gt;&lt;a href=&#34;#cb24-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb24-24&#34;&gt;&lt;a href=&#34;#cb24-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (row[i].size() &amp;gt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb24-25&#34;&gt;&lt;a href=&#34;#cb24-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            pil last = *row[i].begin();&lt;/span&gt;
&lt;span id=&#34;cb24-26&#34;&gt;&lt;a href=&#34;#cb24-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = ++(row[i].begin()); it != row[i].end(); last = *it++)&lt;/span&gt;
&lt;span id=&#34;cb24-27&#34;&gt;&lt;a href=&#34;#cb24-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmin(it-&amp;gt;second, last.second + x[i] * myabs(last.first - it-&amp;gt;first));&lt;/span&gt;
&lt;span id=&#34;cb24-28&#34;&gt;&lt;a href=&#34;#cb24-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            last = *row[i].rbegin();&lt;/span&gt;
&lt;span id=&#34;cb24-29&#34;&gt;&lt;a href=&#34;#cb24-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = ++(row[i].rbegin()); it != row[i].rend(); last = *it++)&lt;/span&gt;
&lt;span id=&#34;cb24-30&#34;&gt;&lt;a href=&#34;#cb24-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmin(it-&amp;gt;second, last.second + x[i] * myabs(last.first - it-&amp;gt;first));&lt;/span&gt;
&lt;span id=&#34;cb24-31&#34;&gt;&lt;a href=&#34;#cb24-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb24-32&#34;&gt;&lt;a href=&#34;#cb24-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; ld : lad[i])&lt;/span&gt;
&lt;span id=&#34;cb24-33&#34;&gt;&lt;a href=&#34;#cb24-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (row[ld.a][ld.b] &amp;lt; INF) chkmin(row[ld.c][ld.d], row[ld.a][ld.b] - ld.h);&lt;/span&gt;
&lt;span id=&#34;cb24-34&#34;&gt;&lt;a href=&#34;#cb24-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb24-35&#34;&gt;&lt;a href=&#34;#cb24-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (row[n][m] &amp;lt; INF) print(row[n][m]);&lt;/span&gt;
&lt;span id=&#34;cb24-36&#34;&gt;&lt;a href=&#34;#cb24-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(&lt;span class=&#34;st&#34;&gt;&amp;quot;NO ESCAPE&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb24-37&#34;&gt;&lt;a href=&#34;#cb24-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb24-38&#34;&gt;&lt;a href=&#34;#cb24-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-39&#34;&gt;&lt;a href=&#34;#cb24-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb24-40&#34;&gt;&lt;a href=&#34;#cb24-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb24-41&#34;&gt;&lt;a href=&#34;#cb24-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) solve();&lt;/span&gt;
&lt;span id=&#34;cb24-42&#34;&gt;&lt;a href=&#34;#cb24-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-43&#34;&gt;&lt;a href=&#34;#cb24-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;f---not-splitting&#34;&gt;1627F - Not Splitting&lt;/h3&gt;
&lt;p&gt;给定一个 &lt;span class=&#34;math inline&#34;&gt;\(k\times k\)&lt;/span&gt; 的方格（&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为不超过 &lt;span class=&#34;math inline&#34;&gt;\(500\)&lt;/span&gt; 的偶数），并给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^5\)&lt;/span&gt;）对相邻点对 &lt;span class=&#34;math inline&#34;&gt;\((r_{i,1}, c_{i,1})\leftrightarrow (r_{i,2}, c_{i,2})\)&lt;/span&gt;。然后将这个 &lt;span class=&#34;math inline&#34;&gt;\(k\times k\)&lt;/span&gt; 方格切分为全等的两块，使得最多的约束条件能被满足（即点对中的两个点在一块上）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://espresso.codeforces.com/0012ed54311c86b8968d6963561d937ba08d1737.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后我们会发现，这个切分的痕迹应该是关于方格中心对称的。&lt;/p&gt;
&lt;p&gt;不妨将其看成一个最短路模型。将其视作一个网格图，若其有限制条件，则边权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;之后就从 &lt;span class=&#34;math inline&#34;&gt;\((k/2, k/2)\)&lt;/span&gt; 出发，以四周为终点，跑最短路即可。需要注意的的是我们认为经过了 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 就等同于经过了 &lt;span class=&#34;math inline&#34;&gt;\((k - x, k - y)\)&lt;/span&gt;，因为要关于方格中心对称。&lt;/p&gt;
&lt;p&gt;是一道非常有意思的题！&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define mktp &lt;/span&gt;make_tuple&lt;/span&gt;
&lt;span id=&#34;cb25-2&#34;&gt;&lt;a href=&#34;#cb25-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-3&#34;&gt;&lt;a href=&#34;#cb25-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; node {&lt;/span&gt;
&lt;span id=&#34;cb25-4&#34;&gt;&lt;a href=&#34;#cb25-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, w;&lt;/span&gt;
&lt;span id=&#34;cb25-5&#34;&gt;&lt;a href=&#34;#cb25-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    node() {}&lt;/span&gt;
&lt;span id=&#34;cb25-6&#34;&gt;&lt;a href=&#34;#cb25-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    node(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; xx, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; yy, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ww) : x(xx), y(yy), w(ww) {}&lt;/span&gt;
&lt;span id=&#34;cb25-7&#34;&gt;&lt;a href=&#34;#cb25-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;lt;(node rhs) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb25-8&#34;&gt;&lt;a href=&#34;#cb25-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; w &amp;gt; rhs.w;&lt;/span&gt;
&lt;span id=&#34;cb25-9&#34;&gt;&lt;a href=&#34;#cb25-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb25-10&#34;&gt;&lt;a href=&#34;#cb25-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb25-11&#34;&gt;&lt;a href=&#34;#cb25-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-12&#34;&gt;&lt;a href=&#34;#cb25-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;tuple&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; mp;&lt;/span&gt;
&lt;span id=&#34;cb25-13&#34;&gt;&lt;a href=&#34;#cb25-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-14&#34;&gt;&lt;a href=&#34;#cb25-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fx[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb25-15&#34;&gt;&lt;a href=&#34;#cb25-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fy[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb25-16&#34;&gt;&lt;a href=&#34;#cb25-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[&lt;span class=&#34;dv&#34;&gt;510&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;510&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb25-17&#34;&gt;&lt;a href=&#34;#cb25-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb25-18&#34;&gt;&lt;a href=&#34;#cb25-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb25-19&#34;&gt;&lt;a href=&#34;#cb25-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb25-20&#34;&gt;&lt;a href=&#34;#cb25-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb25-21&#34;&gt;&lt;a href=&#34;#cb25-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k; read(n, k);&lt;/span&gt;
&lt;span id=&#34;cb25-22&#34;&gt;&lt;a href=&#34;#cb25-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        map&amp;lt;tuple&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(mp);&lt;/span&gt;
&lt;span id=&#34;cb25-23&#34;&gt;&lt;a href=&#34;#cb25-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, k) vis[i][j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-24&#34;&gt;&lt;a href=&#34;#cb25-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb25-25&#34;&gt;&lt;a href=&#34;#cb25-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r1, c1, r2, c2; read(r1, c1, r2, c2);&lt;/span&gt;
&lt;span id=&#34;cb25-26&#34;&gt;&lt;a href=&#34;#cb25-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r1 &amp;gt; r2) myswap(r1, r2);&lt;/span&gt;
&lt;span id=&#34;cb25-27&#34;&gt;&lt;a href=&#34;#cb25-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (c1 &amp;gt; c2) myswap(c1, c2);&lt;/span&gt;
&lt;span id=&#34;cb25-28&#34;&gt;&lt;a href=&#34;#cb25-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r1 == r2) mp[mktp(r1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c1, r1, c1)]++, mp[mktp(r1, c1, r1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c1)]++;&lt;/span&gt;
&lt;span id=&#34;cb25-29&#34;&gt;&lt;a href=&#34;#cb25-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (c1 == c2) mp[mktp(r1, c1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r1, c1)]++, mp[mktp(r1, c1, r1, c1 - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)]++;&lt;/span&gt;
&lt;span id=&#34;cb25-30&#34;&gt;&lt;a href=&#34;#cb25-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb25-31&#34;&gt;&lt;a href=&#34;#cb25-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        priority_queue&amp;lt;node&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb25-32&#34;&gt;&lt;a href=&#34;#cb25-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q.push(node(k &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb25-33&#34;&gt;&lt;a href=&#34;#cb25-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb25-34&#34;&gt;&lt;a href=&#34;#cb25-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; now = q.top(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb25-35&#34;&gt;&lt;a href=&#34;#cb25-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[now.x][now.y]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-36&#34;&gt;&lt;a href=&#34;#cb25-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[now.x][now.y] = vis[k - now.x][k - now.y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-37&#34;&gt;&lt;a href=&#34;#cb25-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!now.x || now.x == k || !now.y || now.y == k) {&lt;/span&gt;
&lt;span id=&#34;cb25-38&#34;&gt;&lt;a href=&#34;#cb25-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                print(n - now.w);&lt;/span&gt;
&lt;span id=&#34;cb25-39&#34;&gt;&lt;a href=&#34;#cb25-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-40&#34;&gt;&lt;a href=&#34;#cb25-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb25-41&#34;&gt;&lt;a href=&#34;#cb25-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(d, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb25-42&#34;&gt;&lt;a href=&#34;#cb25-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tx = now.x + fx[d], ty = now.y + fy[d];&lt;/span&gt;
&lt;span id=&#34;cb25-43&#34;&gt;&lt;a href=&#34;#cb25-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tx &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || tx &amp;gt; k || ty &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; || ty &amp;gt; k) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-44&#34;&gt;&lt;a href=&#34;#cb25-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[tx][ty]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-45&#34;&gt;&lt;a href=&#34;#cb25-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q.push(node(tx, ty, now.w + mp[mktp(now.x, now.y, tx, ty)] + mp[mktp(k - now.x, k - now.y, k - tx, k - ty)]));&lt;/span&gt;
&lt;span id=&#34;cb25-46&#34;&gt;&lt;a href=&#34;#cb25-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb25-47&#34;&gt;&lt;a href=&#34;#cb25-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb25-48&#34;&gt;&lt;a href=&#34;#cb25-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb25-49&#34;&gt;&lt;a href=&#34;#cb25-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb25-50&#34;&gt;&lt;a href=&#34;#cb25-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-121-rated-for-div.-2&#34;&gt;Educational Codeforces Round 121 (Rated for Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/15，A + B + C + D。&lt;/p&gt;
&lt;h3 id=&#34;f---a-random-code-problem&#34;&gt;1626F - A Random Code Problem&lt;/h3&gt;
&lt;p&gt;给定整数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和数组 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，执行下面的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= k; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; idx = rnd.next(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans += a[idx];&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a[idx] -= (a[idx] % i);&lt;/span&gt;
&lt;span id=&#34;cb26-6&#34;&gt;&lt;a href=&#34;#cb26-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;求 &lt;code&gt;ans&lt;/code&gt; 的期望。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 满足递推关系 &lt;span class=&#34;math inline&#34;&gt;\(a_i = (xa_{i-1} + y)\bmod M\)&lt;/span&gt;，输出期望乘上 &lt;span class=&#34;math inline&#34;&gt;\(n^k\)&lt;/span&gt; 后对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模的结果。&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^7; 1\le k\le 17\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;乘上 &lt;span class=&#34;math inline&#34;&gt;\(n^k\)&lt;/span&gt; 本质上要我们求的就是每个下标序列 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 产生的贡献之和。&lt;/p&gt;
&lt;p&gt;不妨先不考虑难以处理的 &lt;code&gt;a[idx] -= (a[idx] % i);&lt;/code&gt; 这句，只考虑随机下标产生的贡献，发现即为 &lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{i=1}^k\sum\limits_{j=0}^{n-1}a_jn^{i-1}n^{k-i} = n^{k-1}k\sum a_i\)&lt;/span&gt;，而每个位置似乎又是可以独立考虑的。&lt;/p&gt;
&lt;p&gt;并且，设 &lt;span class=&#34;math inline&#34;&gt;\(L = \operatorname{lcm}(1,2,\cdots, k)\)&lt;/span&gt;，会发现 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 最多就减到 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor a_i/L\rfloor L\)&lt;/span&gt;，不妨设 &lt;span class=&#34;math inline&#34;&gt;\(a_i = x\times L + y\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(xL\)&lt;/span&gt; 是一定会被统计入答案的，所以根据上面的想法，答案总要加上 &lt;span class=&#34;math inline&#34;&gt;\(n^{k-1}kL\sum\lfloor a_i/L\rfloor\)&lt;/span&gt;。接下来就处理 &lt;span class=&#34;math inline&#34;&gt;\(y = a_i\bmod L\)&lt;/span&gt; 的贡献。&lt;/p&gt;
&lt;p&gt;考虑 dp：设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 为选了 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 次，&lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的出现次数，此时两维的大小分别是 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt;，是足够的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i+1,j}\leftarrow f_{i+1, j} + (n-1)f_{i,j}\)&lt;/span&gt;，对应的是这次不选 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i+1, j - j\bmod i}\leftarrow f_{i+1, j - j \bmod i} + f_{i,j}\)&lt;/span&gt;，对应的是选了 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，考虑 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 产生的贡献，不难发现是 &lt;span class=&#34;math inline&#34;&gt;\(n^{k-i}\times f_{i,j}\times j\)&lt;/span&gt;，所以对应累加一下即可。初始条件是 &lt;span class=&#34;math inline&#34;&gt;\(f_{1, j}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的出现次数。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-767-div.-1-and-div.-2&#34;&gt;Codeforces Round #767 (Div. 1 and Div. 2)&lt;/h2&gt;
&lt;p&gt;能补的补完了。&lt;/p&gt;
&lt;h3 id=&#34;c---xor-сетка&#34;&gt;1628C - XOR-сетка&lt;/h3&gt;
&lt;p&gt;一个很明显的转化就是每个格子内的数都要贡献奇数次，然后考虑构造。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;1005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, vis[maxn][maxn], a[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fx[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ,&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fy[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ,&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb27-6&#34;&gt;&lt;a href=&#34;#cb27-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-7&#34;&gt;&lt;a href=&#34;#cb27-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb27-8&#34;&gt;&lt;a href=&#34;#cb27-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb27-9&#34;&gt;&lt;a href=&#34;#cb27-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb27-10&#34;&gt;&lt;a href=&#34;#cb27-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb27-11&#34;&gt;&lt;a href=&#34;#cb27-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-12&#34;&gt;&lt;a href=&#34;#cb27-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i][j]), vis[i][j] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-13&#34;&gt;&lt;a href=&#34;#cb27-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb27-14&#34;&gt;&lt;a href=&#34;#cb27-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]) {&lt;/span&gt;
&lt;span id=&#34;cb27-15&#34;&gt;&lt;a href=&#34;#cb27-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans ^= a[i][j];&lt;/span&gt;
&lt;span id=&#34;cb27-16&#34;&gt;&lt;a href=&#34;#cb27-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;; ++k) {&lt;/span&gt;
&lt;span id=&#34;cb27-17&#34;&gt;&lt;a href=&#34;#cb27-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tx = i + fx[k], ty = j + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb27-18&#34;&gt;&lt;a href=&#34;#cb27-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tx &amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || ty &amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || tx &amp;gt; n || ty &amp;gt; n) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-19&#34;&gt;&lt;a href=&#34;#cb27-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    vis[tx][ty] ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-20&#34;&gt;&lt;a href=&#34;#cb27-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb27-21&#34;&gt;&lt;a href=&#34;#cb27-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb27-22&#34;&gt;&lt;a href=&#34;#cb27-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb27-23&#34;&gt;&lt;a href=&#34;#cb27-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans);&lt;/span&gt;
&lt;span id=&#34;cb27-24&#34;&gt;&lt;a href=&#34;#cb27-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb27-25&#34;&gt;&lt;a href=&#34;#cb27-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-26&#34;&gt;&lt;a href=&#34;#cb27-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这个构造的方法就是从第二行开始遍历每个点 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt;，如果遇到 &lt;span class=&#34;math inline&#34;&gt;\((i - 1, j)\)&lt;/span&gt; 只被覆盖了偶数次，则我们贪心的直接选上 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt; 让其被覆盖奇数次。可以发现后面的过程中 &lt;span class=&#34;math inline&#34;&gt;\((i - 1, j)\)&lt;/span&gt; 不会再被访问。于是这个构造方法的正确性被成功说明。&lt;/p&gt;
&lt;h3 id=&#34;d1---game-on-sum-easy-version&#34;&gt;1628D1 - Game on Sum (Easy Version)&lt;/h3&gt;
&lt;p&gt;Alice 和 Bob 在玩一个游戏，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 轮，他们轮流对 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 操作，已知 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 初始为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。每个回合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alice 先选择一个实数 &lt;span class=&#34;math inline&#34;&gt;\(t\in[0, k]\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;Bob 选择让 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 变为 &lt;span class=&#34;math inline&#34;&gt;\(x+t\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(x-t\)&lt;/span&gt;，但是至少要有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个回合选择 &lt;span class=&#34;math inline&#34;&gt;\(x + t\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alice 想最大化 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，Bob 想最小化 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。双方绝顶聪明，问最终的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模的结果。&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 2000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 10^9 + 7\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;显然 Bob 会选恰好 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次增加操作。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, m}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 轮游戏中 Bob 选了 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次增加操作后最终的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;假设 Alice 当前选了 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;，则 Bob 要选使得分数最小的一种方案，即 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, m}= \min\{f_{n - 1, m} - t, f_{n - 1, m - 1} + t\}\)&lt;/span&gt;。而 Alice 为了使得 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, m}\)&lt;/span&gt; 最大化，故其会选择一个最优的 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;。这里发现 &lt;span class=&#34;math inline&#34;&gt;\(f_{n - 1, m} - t = f_{n - 1, m - 1} + t\)&lt;/span&gt; 时会最优，故 &lt;span class=&#34;math inline&#34;&gt;\(t = \dfrac{f_{n - 1, m} - f_{n - 1, m - 1}}{2}\)&lt;/span&gt;。所以转移方程如下： &lt;span class=&#34;math display&#34;&gt;\[
f_{n, m} = \frac{f_{n - 1, m} + f_{n - 1, m - 1}}{2}
\]&lt;/span&gt; 边界条件是 &lt;span class=&#34;math inline&#34;&gt;\(f_{n, n} = nk\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_{n, 0} = 0\)&lt;/span&gt;。直接 DP 即可，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d2---game-on-sum-hard-version&#34;&gt;1628D2 - Game on Sum (Hard Version)&lt;/h3&gt;
&lt;p&gt;将上面的条件改为 &lt;span class=&#34;math inline&#34;&gt;\(1\le m\le n\le 10^6\)&lt;/span&gt;，剩余不变。&lt;/p&gt;
&lt;p&gt;上面那个东西给了我们什么启示呢？可以单独考虑每个 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, i}\)&lt;/span&gt; 产生的贡献！这个 &lt;span class=&#34;math inline&#34;&gt;\(ik\)&lt;/span&gt; 一看就是一层层往下面像杨辉三角一样扩散。随便推一下式子就可以得到 &lt;span class=&#34;math display&#34;&gt;\[
f_{n,m} = \sum_{i = 1}^m\frac{ki}{2^{n - i}}\binom{n - i - 1}{m - i}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 解决了。需要特判一下 &lt;span class=&#34;math inline&#34;&gt;\(n = m\)&lt;/span&gt; 的情况，需要直接输出 &lt;span class=&#34;math inline&#34;&gt;\(nk\)&lt;/span&gt;，代码就不放了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-768-div.-1-and-div.-2&#34;&gt;Codeforces Round #768 (Div. 1 and Div. 2)&lt;/h2&gt;
&lt;p&gt;打得好像有点差的离谱。&lt;/p&gt;
&lt;h3 id=&#34;b---range-and-partition&#34;&gt;1630B - Range and Partition&lt;/h3&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 和正整数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，要求找到一个长度最短的区间 &lt;span class=&#34;math inline&#34;&gt;\([x, y]\)&lt;/span&gt; 使得能将 &lt;span class=&#34;math inline&#34;&gt;\(\{a_i\}\)&lt;/span&gt; 恰好分为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 段，使得每一段中 &lt;span class=&#34;math inline&#34;&gt;\(\in[x,y]\)&lt;/span&gt; 的元素数量严格大于 &lt;span class=&#34;math inline&#34;&gt;\(\notin [x,y]\)&lt;/span&gt; 的元素数量。&lt;span class=&#34;math inline&#34;&gt;\(1&amp;lt;k\le n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们先考虑如何判断一个区间 &lt;span class=&#34;math inline&#34;&gt;\([x, y]\)&lt;/span&gt; 是否合法。不妨设 &lt;span class=&#34;math inline&#34;&gt;\(b_i = \begin{cases}1&amp;amp;a_i\in[x,y]\\-1&amp;amp;a_i\notin[x,y\end{cases}\)&lt;/span&gt;，然后求出 &lt;span class=&#34;math inline&#34;&gt;\(S = \sum_{i = 1}^n b_i\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(S \ge k\)&lt;/span&gt; 时合法。为什么呢？因为划分出的每一段内，&lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 的和都至少为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，所以总体的 &lt;span class=&#34;math inline&#34;&gt;\(S\ge k\)&lt;/span&gt; 时就是合法的。&lt;/p&gt;
&lt;p&gt;这个区间我们就可以通过二分或者双指针求出来，然后随便构造一下分段方式就有了。&lt;/p&gt;
&lt;h3 id=&#34;c---paint-the-middle&#34;&gt;1630C - Paint the Middle&lt;/h3&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，一开始 &lt;span class=&#34;math inline&#34;&gt;\(c_i = 0\)&lt;/span&gt;。可以进行如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择 &lt;span class=&#34;math inline&#34;&gt;\(1\le i &amp;lt; j &amp;lt; k\le n\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(c_i = c_j = c_k = 0\land a_i = a_k\)&lt;/span&gt;，然后 &lt;span class=&#34;math inline&#34;&gt;\(c_j:=1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问若干次操作之后最大的 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = 1}^nc_i\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(3\le n\le 2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;该做法来自&lt;a href=&#34;https://codeforces.com/blog/entry/99384?#comment-881614&#34;&gt;评论区&lt;/a&gt;。DP，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为区间 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt; 的答案，显然 &lt;span class=&#34;math inline&#34;&gt;\(f_1 = 0\)&lt;/span&gt;。有如下 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 种转移到 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 的办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(a_j\)&lt;/span&gt; 出现过（&lt;span class=&#34;math inline&#34;&gt;\(j &amp;lt; i\)&lt;/span&gt;），考虑将 &lt;span class=&#34;math inline&#34;&gt;\((j, i)\)&lt;/span&gt; 全部涂色，则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_j + (i - j - 1)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(a_k\)&lt;/span&gt; 出现过（&lt;span class=&#34;math inline&#34;&gt;\(k &amp;lt; j &amp;lt; i\)&lt;/span&gt;），考虑取 &lt;span class=&#34;math inline&#34;&gt;\(f_j\)&lt;/span&gt; 的最优解但是留下 &lt;span class=&#34;math inline&#34;&gt;\(c_k\)&lt;/span&gt; 不涂，然后再涂上 &lt;span class=&#34;math inline&#34;&gt;\([j, i)\)&lt;/span&gt;，同样有 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_j + i - j - 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;直接继承 &lt;span class=&#34;math inline&#34;&gt;\(f_{i - 1}\)&lt;/span&gt;，写规范一点就是 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_{i - 1} + (i - (i - 1) - 1)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是若我们令 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm {first}(a_i)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 第一次出现时的下标，则转移方程就有了： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \max_{\mathrm{first}(a_i)\le j &amp;lt; i}\{f_{j} - j \} + i - 1
\]&lt;/span&gt; 此时这个做法是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，需要优化。改写转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f_i - i = \max_{\mathrm{first}(a_i)\le j &amp;lt; i\lor j = i - 1}\{f_{j} - j \} - 1
\]&lt;/span&gt; 不难发现这可以拿一个维护 &lt;span class=&#34;math inline&#34;&gt;\(f_i - i\)&lt;/span&gt; 的最大值的线段树来优化，于是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。代码太弱智不放了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-769-div.-2&#34;&gt;Codeforces Round #769 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打的很差。&lt;/p&gt;
&lt;h3 id=&#34;d---new-year-concert&#34;&gt;1632D - New Year Concert&lt;/h3&gt;
&lt;p&gt;给定一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的正整数组 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;。对于一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的正整数组 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，定义 &lt;span class=&#34;math inline&#34;&gt;\(f(b_1,b_2,\cdots,b_k)\)&lt;/span&gt; 为使得对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(1\leq l\le r\le k\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{b_l,b_{l+1},\dots,b_r\}\neq r-l+1\)&lt;/span&gt; 的最少操作次数，其中一次操作可以将数组中的一个数改为任意正整数。现在，请求出 &lt;span class=&#34;math inline&#34;&gt;\(f(a_1),f(a_1,a_2),\cdots,f(a_1,a_2,\cdots,a_n)\)&lt;/span&gt; 的值。&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们一个个来处理。设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\([1, i]\)&lt;/span&gt; 的答案，若不存在 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{a_l, \cdots, a_i\} = i - l + 1\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_{i - 1}\)&lt;/span&gt;，否则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = f_{i - 1} + 1\)&lt;/span&gt;，并且需要修改 &lt;span class=&#34;math inline&#34;&gt;\(a_l\)&lt;/span&gt; 为一大质数。&lt;/p&gt;
&lt;p&gt;考虑查找 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt;，根据后缀 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的单调不增性，且不同后缀 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\log)\)&lt;/span&gt; 种，所以可以二分。这里使用 ST 表来查询区间 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn], f[maxn], st[&lt;span class=&#34;dv&#34;&gt;21&lt;/span&gt;][maxn], lg[maxn];&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b ? gcd(b, a % b) : a;}&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-6&#34;&gt;&lt;a href=&#34;#cb28-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) {&lt;/span&gt;
&lt;span id=&#34;cb28-7&#34;&gt;&lt;a href=&#34;#cb28-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = lg[r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb28-8&#34;&gt;&lt;a href=&#34;#cb28-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; gcd(st[len][l], st[len][r - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; len) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb28-9&#34;&gt;&lt;a href=&#34;#cb28-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb28-10&#34;&gt;&lt;a href=&#34;#cb28-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-11&#34;&gt;&lt;a href=&#34;#cb28-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb28-12&#34;&gt;&lt;a href=&#34;#cb28-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb28-13&#34;&gt;&lt;a href=&#34;#cb28-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), lg[i] = i &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ? lg[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, st[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = a[i];&lt;/span&gt;
&lt;span id=&#34;cb28-14&#34;&gt;&lt;a href=&#34;#cb28-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, lg[n]) FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; j)) st[j][i] = gcd(st[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i], st[j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i + (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))]);&lt;/span&gt;
&lt;span id=&#34;cb28-15&#34;&gt;&lt;a href=&#34;#cb28-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb28-16&#34;&gt;&lt;a href=&#34;#cb28-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb28-17&#34;&gt;&lt;a href=&#34;#cb28-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i; j &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; ) {&lt;/span&gt;
&lt;span id=&#34;cb28-18&#34;&gt;&lt;a href=&#34;#cb28-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; g = query(j, i), now = j;&lt;/span&gt;
&lt;span id=&#34;cb28-19&#34;&gt;&lt;a href=&#34;#cb28-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(k, lg[n], &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; k) &amp;amp;&amp;amp; query(j - (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; k), i) == g)&lt;/span&gt;
&lt;span id=&#34;cb28-20&#34;&gt;&lt;a href=&#34;#cb28-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                j -= (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; k);&lt;/span&gt;
&lt;span id=&#34;cb28-21&#34;&gt;&lt;a href=&#34;#cb28-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g &amp;lt;= i - j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; g &amp;gt;= i - now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb28-22&#34;&gt;&lt;a href=&#34;#cb28-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i] = f[i - g] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-23&#34;&gt;&lt;a href=&#34;#cb28-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-24&#34;&gt;&lt;a href=&#34;#cb28-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb28-25&#34;&gt;&lt;a href=&#34;#cb28-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --j;&lt;/span&gt;
&lt;span id=&#34;cb28-26&#34;&gt;&lt;a href=&#34;#cb28-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb28-27&#34;&gt;&lt;a href=&#34;#cb28-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(f[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb28-28&#34;&gt;&lt;a href=&#34;#cb28-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-29&#34;&gt;&lt;a href=&#34;#cb28-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-30&#34;&gt;&lt;a href=&#34;#cb28-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---distance-tree&#34;&gt;1632E - Distance Tree&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的树，每条边权为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(d(v)\)&lt;/span&gt; 为节点 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的距离。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 为在任意两点 &lt;span class=&#34;math inline&#34;&gt;\(a, b\)&lt;/span&gt; 间添加一条权为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的边后，&lt;span class=&#34;math inline&#34;&gt;\(\max_{1\le v\le n}\{d(v)\}\)&lt;/span&gt; 的最小值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\forall x\in[1, n]\)&lt;/span&gt;，求出 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;。&lt;del&gt;Easy ver. &lt;span class=&#34;math inline&#34;&gt;\(2\le n,\sum n\le 3000\)&lt;/span&gt;​&lt;/del&gt;。Hard ver. &lt;span class=&#34;math inline&#34;&gt;\(2\le n,\sum n\le 3\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;通过简单观察可以发现加的这条边的一个端点一定是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 号点，可以反证。接下来钦定 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为根。&lt;/p&gt;
&lt;p&gt;之后会发现正着做似乎有点难搞。不妨思考一下如果给定了一个距离 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 然后反推边权 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的范围，首先发现连边一定连深度大于 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的边。&lt;/p&gt;
&lt;p&gt;然后，设这些点构成的点集为 &lt;span class=&#34;math inline&#34;&gt;\(K(y)\)&lt;/span&gt;，则考虑从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 连哪个 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 能够使得最大的距离尽量小。发现连 &lt;span class=&#34;math inline&#34;&gt;\(K(y)\)&lt;/span&gt; 的直径中点是最优的，因为需要满足 &lt;span class=&#34;math inline&#34;&gt;\(x + \operatorname{dis}(v, u)\le y\)&lt;/span&gt;。而 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{dis}(v, u)\)&lt;/span&gt; 的最大值在当 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 为直径中点时取到最小，为 &lt;span class=&#34;math inline&#34;&gt;\(\lceil \mathrm{diameter} / 2 \rceil\)&lt;/span&gt;，不妨设其为 &lt;span class=&#34;math inline&#34;&gt;\(f(y)\)&lt;/span&gt;，然后我们可以通过一个 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的树形 dp 来求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(f(y)\)&lt;/span&gt;，然后由于 &lt;span class=&#34;math inline&#34;&gt;\(f(y)\)&lt;/span&gt; 随 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的增大而单调不增，所以可以双指针 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 求出答案。&lt;/p&gt;
&lt;p&gt;DP 的流程如下：对于每个节点，找到两个深度最大的儿子（即长链），设两个链底的深度分别为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\ge b\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(f(b - 1)\)&lt;/span&gt; 就可以用 &lt;span class=&#34;math inline&#34;&gt;\(a + b - 2d_u\)&lt;/span&gt; 来更新了，代码中写的不太一样。然后再对所有的 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 来一个后缀最大值就可以了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb29&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb29-1&#34;&gt;&lt;a href=&#34;#cb29-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-2&#34;&gt;&lt;a href=&#34;#cb29-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb29-3&#34;&gt;&lt;a href=&#34;#cb29-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb29-4&#34;&gt;&lt;a href=&#34;#cb29-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-5&#34;&gt;&lt;a href=&#34;#cb29-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d) {&lt;/span&gt;
&lt;span id=&#34;cb29-6&#34;&gt;&lt;a href=&#34;#cb29-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, b = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-7&#34;&gt;&lt;a href=&#34;#cb29-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb29-8&#34;&gt;&lt;a href=&#34;#cb29-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-9&#34;&gt;&lt;a href=&#34;#cb29-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = dfs(v, u, d + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-10&#34;&gt;&lt;a href=&#34;#cb29-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (c &amp;gt; a) b = a, a = c;&lt;/span&gt;
&lt;span id=&#34;cb29-11&#34;&gt;&lt;a href=&#34;#cb29-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; chkmax(b, c);&lt;/span&gt;
&lt;span id=&#34;cb29-12&#34;&gt;&lt;a href=&#34;#cb29-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb29-13&#34;&gt;&lt;a href=&#34;#cb29-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b + d) chkmax(f[b + d - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], (a + b + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb29-14&#34;&gt;&lt;a href=&#34;#cb29-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a;&lt;/span&gt;
&lt;span id=&#34;cb29-15&#34;&gt;&lt;a href=&#34;#cb29-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb29-16&#34;&gt;&lt;a href=&#34;#cb29-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-17&#34;&gt;&lt;a href=&#34;#cb29-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb29-18&#34;&gt;&lt;a href=&#34;#cb29-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb29-19&#34;&gt;&lt;a href=&#34;#cb29-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb29-20&#34;&gt;&lt;a href=&#34;#cb29-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb29-21&#34;&gt;&lt;a href=&#34;#cb29-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]), f[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-22&#34;&gt;&lt;a href=&#34;#cb29-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb29-23&#34;&gt;&lt;a href=&#34;#cb29-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u, v);&lt;/span&gt;
&lt;span id=&#34;cb29-24&#34;&gt;&lt;a href=&#34;#cb29-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb29-25&#34;&gt;&lt;a href=&#34;#cb29-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb29-26&#34;&gt;&lt;a href=&#34;#cb29-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb29-27&#34;&gt;&lt;a href=&#34;#cb29-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) chkmax(f[i], f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb29-28&#34;&gt;&lt;a href=&#34;#cb29-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-29&#34;&gt;&lt;a href=&#34;#cb29-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb29-30&#34;&gt;&lt;a href=&#34;#cb29-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (i + f[ans] &amp;gt; ans) ++ans;&lt;/span&gt;
&lt;span id=&#34;cb29-31&#34;&gt;&lt;a href=&#34;#cb29-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(min(ans, lim), &lt;span class=&#34;st&#34;&gt;&amp;quot; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;[i == n]);&lt;/span&gt;
&lt;span id=&#34;cb29-32&#34;&gt;&lt;a href=&#34;#cb29-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb29-33&#34;&gt;&lt;a href=&#34;#cb29-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb29-34&#34;&gt;&lt;a href=&#34;#cb29-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-35&#34;&gt;&lt;a href=&#34;#cb29-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-122-rated-for-div.-2&#34;&gt;Educational Codeforces Round 122 (Rated for Div. 2)&lt;/h2&gt;
&lt;p&gt;VP on 22/07/15。&lt;/p&gt;
&lt;h3 id=&#34;e---spanning-tree-queries&#34;&gt;1633E - Spanning Tree Queries&lt;/h3&gt;
&lt;p&gt;VP 时想到正解了，但是没写出来。说几个细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分界点为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{w_i+w_j}{2}\)&lt;/span&gt;，避免小数点出问题，考虑直接 &lt;span class=&#34;math inline&#34;&gt;\(w_i\leftarrow 2w_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;为了保证选的尽可能多减函数防止出锅，Kruskal 给边排序的时候第二关键字是原边权降序。&lt;/li&gt;
&lt;li&gt;最后使用 &lt;code&gt;upper_bound&lt;/code&gt; 查找对应的分界点。&lt;/li&gt;
&lt;li&gt;同时 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt; 作为转折点本身也要加进去，所有分界点要去重。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;f---perfect-matching&#34;&gt;1633F - Perfect Matching&lt;/h3&gt;
&lt;p&gt;题意：交互题，初始根为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，动态添加叶子，问有无完美匹配，不超过 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 次要求构造。&lt;/p&gt;
&lt;p&gt;首先树不变的话，匹配一定是从叶子开始匹配的，然后隔一条选一条。那么维护 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 连接其父亲的边有没有被选，使用树剖 + 线段树维护，搞一个取反 + 区间和即可，最后看下边的数量是不是点数 &lt;span class=&#34;math inline&#34;&gt;\(/2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而这个题动态添加叶子，所以直接做就行了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-global-round-19&#34;&gt;Codeforces Global Round 19&lt;/h2&gt;
&lt;h3 id=&#34;d---yet-another-minimization-problem&#34;&gt;1637D - Yet Another Minimization Problem&lt;/h3&gt;
&lt;p&gt;值域很小，拆分贡献之后发现可以定义 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, s_1}\)&lt;/span&gt;，然后就可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; dp 了。&lt;/p&gt;
&lt;h3 id=&#34;e---best-pair&#34;&gt;1637E - Best Pair&lt;/h3&gt;
&lt;p&gt;首先这题有一个非常关键的性质就是，&lt;strong&gt;不同的 &lt;span class=&#34;math inline&#34;&gt;\(cnt_i\)&lt;/span&gt; 只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 种&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因此我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(cnt_x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(cnt_y\le cnt_x\)&lt;/span&gt;，这样子复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的，从大到小找到第一个不和 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 形成 bad pair 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;（可以用 &lt;code&gt;set&lt;/code&gt; 维护，&lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;），这样的复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;h3 id=&#34;f---towers&#34;&gt;1637F - Towers&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点的树，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个点的高度为 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt;。可以在 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点上建任意多个塔，对于每个塔可以指定其能量 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 和其所在点的编号。建立能量为 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 的塔消耗 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 枚金币。&lt;/p&gt;
&lt;p&gt;一个点 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 接收到信号当且仅当存在信号塔在点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 和点 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;（允许 &lt;span class=&#34;math inline&#34;&gt;\(x = u\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(x = v\)&lt;/span&gt;，但是 &lt;span class=&#34;math inline&#34;&gt;\(u\ne v\)&lt;/span&gt;），满足 &lt;span class=&#34;math inline&#34;&gt;\(\min(e_u, e_v)\ge h_x\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 在链 &lt;span class=&#34;math inline&#34;&gt;\((u, v)\)&lt;/span&gt; 上。&lt;/p&gt;
&lt;p&gt;求一个让所有点接收到信号的最小代价。&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le h_i\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;比较牛逼的贪心。经过观察可知只有叶子节点放信号塔是最优的，否则一定可以调整到只放叶子节点。&lt;/p&gt;
&lt;p&gt;然后，不妨令 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 值最大的为根，那么我们就可以选择两个叶子 &lt;span class=&#34;math inline&#34;&gt;\(x, y\)&lt;/span&gt; 放上 &lt;span class=&#34;math inline&#34;&gt;\(h_{\max}\)&lt;/span&gt; 的塔，然后 &lt;span class=&#34;math inline&#34;&gt;\(x, y\)&lt;/span&gt; 链上所有的点都会被覆盖掉。于是，剩下的所有点都只需要有某个子树的信号塔大于等于 &lt;span class=&#34;math inline&#34;&gt;\(h_u\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;考虑贪心，令 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树内 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 的最大值，然后对于叶子节点，答案加上 &lt;span class=&#34;math inline&#34;&gt;\(h_u\)&lt;/span&gt;，对于非叶子节点，若其不是根，答案加上 &lt;span class=&#34;math inline&#34;&gt;\(\max(0, h_u - \max_{v\in son(u)} f_v)\)&lt;/span&gt;，若其是根，答案加上 &lt;span class=&#34;math inline&#34;&gt;\(2h_u\)&lt;/span&gt; 减去子树内最大的两个 &lt;span class=&#34;math inline&#34;&gt;\(h\)&lt;/span&gt; 值。&lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;，很优秀。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-771-div.-2&#34;&gt;Codeforces Round #771 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;d---big-brush&#34;&gt;1638D - Big Brush&lt;/h3&gt;
&lt;p&gt;给定一个染了色的网格，要求构造方案从空白染成这样。&lt;/p&gt;
&lt;p&gt;一次可以涂一个 &lt;span class=&#34;math inline&#34;&gt;\(2\times 2\)&lt;/span&gt;，可以覆盖，&lt;span class=&#34;math inline&#34;&gt;\(n,m\le 1000\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑时光倒流，别人涂色我们刮刮乐。我们可以从若干个 &lt;span class=&#34;math inline&#34;&gt;\(2\times 2\)&lt;/span&gt; 为起点来进行操作，没有 &lt;span class=&#34;math inline&#34;&gt;\(2\times 2\)&lt;/span&gt; 就说明无解。然后就 bfs 即可。&lt;/p&gt;
&lt;h3 id=&#34;e---colorful-operations&#34;&gt;1638E - Colorful Operations&lt;/h3&gt;
&lt;p&gt;给定一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列，初始时所有元素的值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; ，颜色为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。你需要实现以下三种操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Color l r c&lt;/code&gt; ：把 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 这段的元素颜色改为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Add c x&lt;/code&gt;：把所有颜色为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 的元素值都加上 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Query i&lt;/code&gt;：输出元素 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n,q\le 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;颜色段均摊傻逼题，技不如人甘拜下风。&lt;/p&gt;
&lt;p&gt;考虑对于修改同种颜色的操作，对其维护一个全局加标记。并用一个线段树维护一下所有的元素的值，输出的时候就输出单点修改 + tag 值。&lt;/p&gt;
&lt;p&gt;然后，修改颜色的操作就硬递归，找到一段相同颜色的段之后加上原来的 tag 再减去新的 tag。由于一次染色操作最多添加一次连续段，所以一次操作均摊复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;总 &lt;span class=&#34;math inline&#34;&gt;\(O((n + q)\log n)\)&lt;/span&gt;，随便维护一下就行了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-772-div.-2&#34;&gt;Codeforces Round #772 (Div. 2)&lt;/h2&gt;
&lt;p&gt;打出了有史以来最高的 perf，A + B + C + D + E。&lt;/p&gt;
&lt;h3 id=&#34;f---closest-pair&#34;&gt;1635F - Closest Pair&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个二元组 &lt;span class=&#34;math inline&#34;&gt;\((x_i, w_i)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|x_i|,w_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 升序。&lt;span class=&#34;math inline&#34;&gt;\(q\le 3\times 10^5\)&lt;/span&gt; 次询问，给出 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\min_{l\le i&amp;lt;j\le r}|x_i - x_j|(w_i + w_j)
\]&lt;/span&gt; 一眼数据结构题，静态询问考虑离线。&lt;/p&gt;
&lt;p&gt;考虑哪些 &lt;span class=&#34;math inline&#34;&gt;\((i,j)\)&lt;/span&gt; 是不优的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若存在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(x_p &amp;lt; x_q\land w_p &amp;gt; w_q\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 作为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 一定比 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 优。&lt;/li&gt;
&lt;li&gt;若存在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(x_p &amp;lt; x_q\land w_p&amp;lt;w_q\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 作为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 一定比 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 优。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是，令 &lt;span class=&#34;math inline&#34;&gt;\(L_i = \max\{j:j&amp;lt;i\land w_j\le w_i\}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(R_i = \min\{j:j&amp;gt;i\land w_j\le w_i\}\)&lt;/span&gt;，答案就只能取形如 &lt;span class=&#34;math inline&#34;&gt;\([i, R_i]\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\([L_i, i]\)&lt;/span&gt; 的区间。这样的区间一共有 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;先用单调栈求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(L_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(R_i\)&lt;/span&gt;，再计算出这 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 个区间 &lt;span class=&#34;math inline&#34;&gt;\([l_i, r_i]\)&lt;/span&gt; 的价值 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;，在每个 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt; 上挂上标记 &lt;span class=&#34;math inline&#34;&gt;\((l_i, c_i)\)&lt;/span&gt;，在每个询问 &lt;span class=&#34;math inline&#34;&gt;\((i, ql, qr)\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(qr\)&lt;/span&gt; 上挂上标记 &lt;span class=&#34;math inline&#34;&gt;\((ql, i)\)&lt;/span&gt;。然后扫描线扫右端点，线段树或者树状数组维护一下 RMQ 和单点修改，这题就做完了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb30&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb30-1&#34;&gt;&lt;a href=&#34;#cb30-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-2&#34;&gt;&lt;a href=&#34;#cb30-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pll = pair&amp;lt;ll, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-3&#34;&gt;&lt;a href=&#34;#cb30-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-4&#34;&gt;&lt;a href=&#34;#cb30-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, L[maxn], R[maxn], stk[maxn], top;&lt;/span&gt;
&lt;span id=&#34;cb30-5&#34;&gt;&lt;a href=&#34;#cb30-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-6&#34;&gt;&lt;a href=&#34;#cb30-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pll a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-7&#34;&gt;&lt;a href=&#34;#cb30-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pll&amp;gt; op[maxn], q[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-8&#34;&gt;&lt;a href=&#34;#cb30-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-9&#34;&gt;&lt;a href=&#34;#cb30-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; myabs(a[i].first - a[j].first) * (a[i].second + a[j].second);}&lt;/span&gt;
&lt;span id=&#34;cb30-10&#34;&gt;&lt;a href=&#34;#cb30-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-11&#34;&gt;&lt;a href=&#34;#cb30-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb30-12&#34;&gt;&lt;a href=&#34;#cb30-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb30-13&#34;&gt;&lt;a href=&#34;#cb30-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb30-14&#34;&gt;&lt;a href=&#34;#cb30-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-15&#34;&gt;&lt;a href=&#34;#cb30-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, ll v) {&lt;/span&gt;
&lt;span id=&#34;cb30-16&#34;&gt;&lt;a href=&#34;#cb30-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) {&lt;/span&gt;
&lt;span id=&#34;cb30-17&#34;&gt;&lt;a href=&#34;#cb30-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        chkmin(t[k], v);&lt;/span&gt;
&lt;span id=&#34;cb30-18&#34;&gt;&lt;a href=&#34;#cb30-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-19&#34;&gt;&lt;a href=&#34;#cb30-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-20&#34;&gt;&lt;a href=&#34;#cb30-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) modify(i, M, L, x, v);&lt;/span&gt;
&lt;span id=&#34;cb30-21&#34;&gt;&lt;a href=&#34;#cb30-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; modify(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, v);&lt;/span&gt;
&lt;span id=&#34;cb30-22&#34;&gt;&lt;a href=&#34;#cb30-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[k] = min(t[L], t[R]);&lt;/span&gt;
&lt;span id=&#34;cb30-23&#34;&gt;&lt;a href=&#34;#cb30-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-24&#34;&gt;&lt;a href=&#34;#cb30-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb30-25&#34;&gt;&lt;a href=&#34;#cb30-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-26&#34;&gt;&lt;a href=&#34;#cb30-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb30-27&#34;&gt;&lt;a href=&#34;#cb30-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= i &amp;amp;&amp;amp; y &amp;gt;= j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; t[k];&lt;/span&gt;
&lt;span id=&#34;cb30-28&#34;&gt;&lt;a href=&#34;#cb30-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;fl&#34;&gt;2e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-29&#34;&gt;&lt;a href=&#34;#cb30-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= M) chkmin(ret, query(i, M, L, x, y));&lt;/span&gt;
&lt;span id=&#34;cb30-30&#34;&gt;&lt;a href=&#34;#cb30-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y &amp;gt; M) chkmin(ret, query(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, x, y));&lt;/span&gt;
&lt;span id=&#34;cb30-31&#34;&gt;&lt;a href=&#34;#cb30-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb30-32&#34;&gt;&lt;a href=&#34;#cb30-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb30-33&#34;&gt;&lt;a href=&#34;#cb30-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-34&#34;&gt;&lt;a href=&#34;#cb30-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef L&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-35&#34;&gt;&lt;a href=&#34;#cb30-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef R&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-36&#34;&gt;&lt;a href=&#34;#cb30-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef M&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-37&#34;&gt;&lt;a href=&#34;#cb30-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-38&#34;&gt;&lt;a href=&#34;#cb30-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb30-39&#34;&gt;&lt;a href=&#34;#cb30-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb30-40&#34;&gt;&lt;a href=&#34;#cb30-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i].first, a[i].second);&lt;/span&gt;
&lt;span id=&#34;cb30-41&#34;&gt;&lt;a href=&#34;#cb30-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb30-42&#34;&gt;&lt;a href=&#34;#cb30-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r; read(l, r);&lt;/span&gt;
&lt;span id=&#34;cb30-43&#34;&gt;&lt;a href=&#34;#cb30-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[r].push_back({l, i});&lt;/span&gt;
&lt;span id=&#34;cb30-44&#34;&gt;&lt;a href=&#34;#cb30-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-45&#34;&gt;&lt;a href=&#34;#cb30-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb30-46&#34;&gt;&lt;a href=&#34;#cb30-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; a[stk[top]].second &amp;gt; a[i].second) --top;&lt;/span&gt;
&lt;span id=&#34;cb30-47&#34;&gt;&lt;a href=&#34;#cb30-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        L[i] = stk[top], stk[++top] = i;&lt;/span&gt;
&lt;span id=&#34;cb30-48&#34;&gt;&lt;a href=&#34;#cb30-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-49&#34;&gt;&lt;a href=&#34;#cb30-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    top = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-50&#34;&gt;&lt;a href=&#34;#cb30-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb30-51&#34;&gt;&lt;a href=&#34;#cb30-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; a[stk[top]].second &amp;gt; a[i].second) --top;&lt;/span&gt;
&lt;span id=&#34;cb30-52&#34;&gt;&lt;a href=&#34;#cb30-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        R[i] = stk[top], stk[++top] = i;&lt;/span&gt;
&lt;span id=&#34;cb30-53&#34;&gt;&lt;a href=&#34;#cb30-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-54&#34;&gt;&lt;a href=&#34;#cb30-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb30-55&#34;&gt;&lt;a href=&#34;#cb30-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (L[i]) op[i].push_back({L[i], calc(L[i], i)});&lt;/span&gt;
&lt;span id=&#34;cb30-56&#34;&gt;&lt;a href=&#34;#cb30-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (R[i]) op[R[i]].push_back({i, calc(i, R[i])});&lt;/span&gt;
&lt;span id=&#34;cb30-57&#34;&gt;&lt;a href=&#34;#cb30-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-58&#34;&gt;&lt;a href=&#34;#cb30-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-59&#34;&gt;&lt;a href=&#34;#cb30-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(t, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; t);&lt;/span&gt;
&lt;span id=&#34;cb30-60&#34;&gt;&lt;a href=&#34;#cb30-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb30-61&#34;&gt;&lt;a href=&#34;#cb30-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : op[i]) modify(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb30-62&#34;&gt;&lt;a href=&#34;#cb30-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : q[i]) ans[p.second] = query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p.first, i);&lt;/span&gt;
&lt;span id=&#34;cb30-63&#34;&gt;&lt;a href=&#34;#cb30-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-64&#34;&gt;&lt;a href=&#34;#cb30-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) print(ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb30-65&#34;&gt;&lt;a href=&#34;#cb30-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-66&#34;&gt;&lt;a href=&#34;#cb30-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;educational-codeforces-round-123-rated-for-div.-2&#34;&gt;Educational Codeforces Round 123 (Rated for Div. 2)&lt;/h2&gt;
&lt;p&gt;下小分场。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-773-div.-1&#34;&gt;Codeforces Round #773 (Div. 1)&lt;/h2&gt;
&lt;h3 id=&#34;b---repetitions-decoding&#34;&gt;1641B - Repetitions Decoding&lt;/h3&gt;
&lt;p&gt;其实这题出的很不错来着，但是毒瘤是真的毒瘤。&lt;/p&gt;
&lt;p&gt;给定长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 500\)&lt;/span&gt;）的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，可以进行形如 &lt;span class=&#34;math inline&#34;&gt;\((x, c)\)&lt;/span&gt; 的操作：在 &lt;span class=&#34;math inline&#34;&gt;\(a_x\)&lt;/span&gt; 后面插入&lt;strong&gt;两个连续的&lt;/strong&gt;正整数 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(x\in[0, \text{the length of }a]\)&lt;/span&gt;）。构造操作方案使得 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 最后可以拆分为若干个连续的子段，这些子段满足：长度为 &lt;span class=&#34;math inline&#34;&gt;\(2k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为任意正整数，且 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in [1, k]\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(a_i = a_{i + k}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;保证 &lt;span class=&#34;math inline&#34;&gt;\(\sum n^2\le 2.5\times 10^5\)&lt;/span&gt;，操作次数需 &lt;span class=&#34;math inline&#34;&gt;\(\le 2n^2\)&lt;/span&gt;，若无解则报告之。&lt;/p&gt;
&lt;p&gt;首先，注意到每种数字的出现次数必须为偶数次，因为添加数字一定是给某种数字添加两个，若存在出现了奇数次的数字则无论如何都没办法找到与之配对的数，所以无解。&lt;/p&gt;
&lt;p&gt;然后可以注意到，我们可以对一个前缀做翻转操作，具体地，看下面的例子：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;1 2 3 1 3 2
1 2 3 - 1 2 3 3 2 1 - 1 3 2 // 这一步可以通过 3 次操作实现
(1 2 3 | 1 2 3) - 3 2 1 1 3 2 // 即我们构造一个回文串，然后将前面的合并到一段，前缀就成功被翻转了。&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而通过这样，我们就可以将两个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 放在一起，再反转一下：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;(1 2 3 | 1 2 3) - (3 2 1 1 | 3 2 1 1) - 1 1 2 3 - 3 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后两个 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 就顺理成章的在一起了，可以放在一段消掉了。&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;(1 2 3 | 1 2 3) - (3 2 1 1 | 3 2 1 1) - (1 | 1) 2 3 3 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来就解决 &lt;code&gt;2 3 3 2&lt;/code&gt; 就行了，思路是一样的。&lt;/p&gt;
&lt;p&gt;通过这样的操作，我们就能在 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的操作次数下，将两个数“两两合并”，解决这道题目。&lt;/p&gt;
&lt;p&gt;输出方案比较毒瘤，大家写的时候需要注意细节。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb34&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb34-1&#34;&gt;&lt;a href=&#34;#cb34-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-2&#34;&gt;&lt;a href=&#34;#cb34-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;505&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-3&#34;&gt;&lt;a href=&#34;#cb34-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn], alreadyLen, now;&lt;/span&gt;
&lt;span id=&#34;cb34-4&#34;&gt;&lt;a href=&#34;#cb34-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pii&amp;gt; op;&lt;/span&gt;
&lt;span id=&#34;cb34-5&#34;&gt;&lt;a href=&#34;#cb34-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb34-6&#34;&gt;&lt;a href=&#34;#cb34-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; vis;&lt;/span&gt;
&lt;span id=&#34;cb34-7&#34;&gt;&lt;a href=&#34;#cb34-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-8&#34;&gt;&lt;a href=&#34;#cb34-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; rev(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos) {&lt;/span&gt;
&lt;span id=&#34;cb34-9&#34;&gt;&lt;a href=&#34;#cb34-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pos - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) op.push_back({i - now + alreadyLen + pos - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, a[i]});&lt;/span&gt;
&lt;span id=&#34;cb34-10&#34;&gt;&lt;a href=&#34;#cb34-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.push_back(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (pos - now - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb34-11&#34;&gt;&lt;a href=&#34;#cb34-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    alreadyLen += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (pos - now - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-12&#34;&gt;&lt;a href=&#34;#cb34-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    reverse(a + now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a + pos);&lt;/span&gt;
&lt;span id=&#34;cb34-13&#34;&gt;&lt;a href=&#34;#cb34-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-14&#34;&gt;&lt;a href=&#34;#cb34-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb34-15&#34;&gt;&lt;a href=&#34;#cb34-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-16&#34;&gt;&lt;a href=&#34;#cb34-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb34-17&#34;&gt;&lt;a href=&#34;#cb34-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; read(T);&lt;/span&gt;
&lt;span id=&#34;cb34-18&#34;&gt;&lt;a href=&#34;#cb34-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb34-19&#34;&gt;&lt;a href=&#34;#cb34-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n);&lt;/span&gt;
&lt;span id=&#34;cb34-20&#34;&gt;&lt;a href=&#34;#cb34-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;decltype&lt;/span&gt;(vis)().swap(vis);&lt;/span&gt;
&lt;span id=&#34;cb34-21&#34;&gt;&lt;a href=&#34;#cb34-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]), ++vis[a[i]];&lt;/span&gt;
&lt;span id=&#34;cb34-22&#34;&gt;&lt;a href=&#34;#cb34-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; flg = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-23&#34;&gt;&lt;a href=&#34;#cb34-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : vis) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p.second &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) flg = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-24&#34;&gt;&lt;a href=&#34;#cb34-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flg) {&lt;/span&gt;
&lt;span id=&#34;cb34-25&#34;&gt;&lt;a href=&#34;#cb34-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-26&#34;&gt;&lt;a href=&#34;#cb34-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-27&#34;&gt;&lt;a href=&#34;#cb34-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb34-28&#34;&gt;&lt;a href=&#34;#cb34-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;decltype&lt;/span&gt;(op)().swap(op);&lt;/span&gt;
&lt;span id=&#34;cb34-29&#34;&gt;&lt;a href=&#34;#cb34-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;decltype&lt;/span&gt;(ans)().swap(ans);&lt;/span&gt;
&lt;span id=&#34;cb34-30&#34;&gt;&lt;a href=&#34;#cb34-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        alreadyLen = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, now = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-31&#34;&gt;&lt;a href=&#34;#cb34-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-32&#34;&gt;&lt;a href=&#34;#cb34-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (now &amp;lt; n) {&lt;/span&gt;
&lt;span id=&#34;cb34-33&#34;&gt;&lt;a href=&#34;#cb34-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now == n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb34-34&#34;&gt;&lt;a href=&#34;#cb34-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans.push_back(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-35&#34;&gt;&lt;a href=&#34;#cb34-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-36&#34;&gt;&lt;a href=&#34;#cb34-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb34-37&#34;&gt;&lt;a href=&#34;#cb34-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-38&#34;&gt;&lt;a href=&#34;#cb34-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, now + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] == a[now + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) {&lt;/span&gt;
&lt;span id=&#34;cb34-39&#34;&gt;&lt;a href=&#34;#cb34-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                pos = i;&lt;/span&gt;
&lt;span id=&#34;cb34-40&#34;&gt;&lt;a href=&#34;#cb34-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-41&#34;&gt;&lt;a href=&#34;#cb34-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb34-42&#34;&gt;&lt;a href=&#34;#cb34-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rev(pos), rev(pos + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-43&#34;&gt;&lt;a href=&#34;#cb34-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans.push_back(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-44&#34;&gt;&lt;a href=&#34;#cb34-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-45&#34;&gt;&lt;a href=&#34;#cb34-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb34-46&#34;&gt;&lt;a href=&#34;#cb34-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-47&#34;&gt;&lt;a href=&#34;#cb34-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(op.size());&lt;/span&gt;
&lt;span id=&#34;cb34-48&#34;&gt;&lt;a href=&#34;#cb34-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;p : op) print(p.first, p.second);&lt;/span&gt;
&lt;span id=&#34;cb34-49&#34;&gt;&lt;a href=&#34;#cb34-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans.size());&lt;/span&gt;
&lt;span id=&#34;cb34-50&#34;&gt;&lt;a href=&#34;#cb34-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; x : ans) print(x, &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-51&#34;&gt;&lt;a href=&#34;#cb34-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb34-52&#34;&gt;&lt;a href=&#34;#cb34-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb34-53&#34;&gt;&lt;a href=&#34;#cb34-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-54&#34;&gt;&lt;a href=&#34;#cb34-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-781-div.-2&#34;&gt;Codeforces Round #781 (Div. 2)&lt;/h2&gt;
&lt;p&gt;rnm退钱。&lt;/p&gt;
&lt;h3 id=&#34;c---tree-infection&#34;&gt;1665C - Tree Infection&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;读错题就一直想呗，想呗，哈哈。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;直接转化成一个节点的儿子个数的问题。显然从儿子最多的挨个点传染。所以模拟一下这个过程即可。&lt;/p&gt;
&lt;h3 id=&#34;d---gcd-guess&#34;&gt;1665D - GCD Guess&lt;/h3&gt;
&lt;p&gt;猜 &lt;span class=&#34;math inline&#34;&gt;\(1\le x\le 10^9\)&lt;/span&gt;，最多 &lt;span class=&#34;math inline&#34;&gt;\(30\)&lt;/span&gt; 次询问，每次可以查询 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x + a, x + b)\)&lt;/span&gt;。要求 &lt;span class=&#34;math inline&#34;&gt;\(a\ne b,1\le a,b\le 2\times 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(30\)&lt;/span&gt; 次询问非常灵性，相当于明示我们要按位考虑。具体地我们可以思考 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^k\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;首先我们知道 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^0 = 0\)&lt;/span&gt;，考虑如何从 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^k\)&lt;/span&gt; 推得 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^{k+1}\)&lt;/span&gt;。其中间的差值要么是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 要么是 &lt;span class=&#34;math inline&#34;&gt;\(2^k\)&lt;/span&gt;，那么不妨令 &lt;span class=&#34;math inline&#34;&gt;\(x \bmod 2^k = r\)&lt;/span&gt;，则我们询问 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x + 2^k - r, 2^{k + 1})\)&lt;/span&gt;，若结果为 &lt;span class=&#34;math inline&#34;&gt;\(2^{k + 1}\)&lt;/span&gt; 则 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod 2^{k + 1} = r + 2^k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;具体地询问就是问 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x + 2^k - r, x + 2^k + 2^{k+1}-r)\)&lt;/span&gt;，可以发现刚好问 &lt;span class=&#34;math inline&#34;&gt;\(30\)&lt;/span&gt; 次。&lt;/p&gt;
&lt;h3 id=&#34;e---minimizor&#34;&gt;1665E - MinimizOR&lt;/h3&gt;
&lt;p&gt;静态查询区间 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 内 &lt;span class=&#34;math inline&#34;&gt;\(\min_{i\ne j,l\le i,j\le r}\{a_i\lor a_j\}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le a_i&amp;lt; 2^{30}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;牛逼结论题。。结论是 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; 2^k\)&lt;/span&gt; 的数字中的答案只可能从最小的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个数字中产生。于是线段树维护一下区间内最小的 &lt;span class=&#34;math inline&#34;&gt;\(31\)&lt;/span&gt; 个数即可，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;下面用归纳法证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(k = 1\)&lt;/span&gt; 时，所有数都为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，显然成立。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面说明 &lt;span class=&#34;math inline&#34;&gt;\(k\to k + 1\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;若第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位的 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的个数 &lt;span class=&#34;math inline&#34;&gt;\(\le 1\)&lt;/span&gt;，则这一位最后或起来肯定是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，问题变为 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; 2^k\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个数字即可，&lt;span class=&#34;math inline&#34;&gt;\(k + 2\)&lt;/span&gt; 个肯定也可以。&lt;/p&gt;
&lt;p&gt;否则第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位我们贪心地强制其为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，故答案只与第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 位为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的数字有关。显然 &lt;span class=&#34;math inline&#34;&gt;\(k + 2\)&lt;/span&gt; 个也能满足需求。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;证毕。&lt;/p&gt;
&lt;h2 id=&#34;educational-codeforces-round-126-rated-for-div.-2&#34;&gt;Educational Codeforces Round 126 (Rated for Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;e---narrow-components&#34;&gt;1661E - Narrow Components&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(3\times n\)&lt;/span&gt; 的 0-1 矩阵，&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问 &lt;span class=&#34;math inline&#34;&gt;\([l_i, r_i]\)&lt;/span&gt; 列内的四连通块个数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 5\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑用线段树维护。在每个区间对应的节点内维护左端点/右端点对应的并查集，然后对应合并即可。&lt;/p&gt;
&lt;p&gt;注意细节，合并的时候要开 12 个节点分别对应左区间/右区间的左右端点。而为了防止有连通块从左边连到右边所以考虑令其并查集编号为 &lt;span class=&#34;math inline&#34;&gt;\(1\sim 6\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb35&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb35-1&#34;&gt;&lt;a href=&#34;#cb35-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Node {&lt;/span&gt;
&lt;span id=&#34;cb35-2&#34;&gt;&lt;a href=&#34;#cb35-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], r[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], lc[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], rc[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;], sum;&lt;/span&gt;
&lt;span id=&#34;cb35-3&#34;&gt;&lt;a href=&#34;#cb35-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos) {&lt;/span&gt;
&lt;span id=&#34;cb35-4&#34;&gt;&lt;a href=&#34;#cb35-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) lc[i] = rc[i] = a[i][pos] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, sum += lc[i], fa[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb35-5&#34;&gt;&lt;a href=&#34;#cb35-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lc[i] == lc[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;amp;&amp;amp; lc[i]) sum -= merge(i, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-6&#34;&gt;&lt;a href=&#34;#cb35-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) l[i] = r[i] = find(i);&lt;/span&gt;
&lt;span id=&#34;cb35-7&#34;&gt;&lt;a href=&#34;#cb35-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-8&#34;&gt;&lt;a href=&#34;#cb35-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], tmp;&lt;/span&gt;
&lt;span id=&#34;cb35-9&#34;&gt;&lt;a href=&#34;#cb35-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-10&#34;&gt;&lt;a href=&#34;#cb35-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Node merge(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;l, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Node &amp;amp;r) {&lt;/span&gt;
&lt;span id=&#34;cb35-11&#34;&gt;&lt;a href=&#34;#cb35-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tmp.sum = l.sum + r.sum;&lt;/span&gt;
&lt;span id=&#34;cb35-12&#34;&gt;&lt;a href=&#34;#cb35-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) tmp.lc[i] = l.lc[i], tmp.rc[i] = r.rc[i];&lt;/span&gt;
&lt;span id=&#34;cb35-13&#34;&gt;&lt;a href=&#34;#cb35-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) tmp.l[i] = tmp.r[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb35-14&#34;&gt;&lt;a href=&#34;#cb35-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-15&#34;&gt;&lt;a href=&#34;#cb35-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m * &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) fa[i] = i;&lt;/span&gt;
&lt;span id=&#34;cb35-16&#34;&gt;&lt;a href=&#34;#cb35-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb35-17&#34;&gt;&lt;a href=&#34;#cb35-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        merge(i, l.l[i]), merge(i + m, l.r[i]);&lt;/span&gt;
&lt;span id=&#34;cb35-18&#34;&gt;&lt;a href=&#34;#cb35-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        merge(i + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * m, r.l[i] + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * m), merge(i + &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * m, r.r[i] + m * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-19&#34;&gt;&lt;a href=&#34;#cb35-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-20&#34;&gt;&lt;a href=&#34;#cb35-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l.rc[i] == r.lc[i] &amp;amp;&amp;amp; l.rc[i]) &lt;/span&gt;
&lt;span id=&#34;cb35-21&#34;&gt;&lt;a href=&#34;#cb35-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp.sum -= merge(i + m, i + m * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb35-22&#34;&gt;&lt;a href=&#34;#cb35-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(b, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; b);&lt;/span&gt;
&lt;span id=&#34;cb35-23&#34;&gt;&lt;a href=&#34;#cb35-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb35-24&#34;&gt;&lt;a href=&#34;#cb35-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b[find(i)]) b[find(i)] = i;&lt;/span&gt;
&lt;span id=&#34;cb35-25&#34;&gt;&lt;a href=&#34;#cb35-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp.l[i] = b[find(i)];&lt;/span&gt;
&lt;span id=&#34;cb35-26&#34;&gt;&lt;a href=&#34;#cb35-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-27&#34;&gt;&lt;a href=&#34;#cb35-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, m * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m * &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb35-28&#34;&gt;&lt;a href=&#34;#cb35-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b[find(i)]) b[find(i)] = i - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * m;&lt;/span&gt;
&lt;span id=&#34;cb35-29&#34;&gt;&lt;a href=&#34;#cb35-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp.r[i - m * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] = b[find(i)];&lt;/span&gt;
&lt;span id=&#34;cb35-30&#34;&gt;&lt;a href=&#34;#cb35-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb35-31&#34;&gt;&lt;a href=&#34;#cb35-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; tmp;&lt;/span&gt;
&lt;span id=&#34;cb35-32&#34;&gt;&lt;a href=&#34;#cb35-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;f---teleporters&#34;&gt;1661F - Teleporters&lt;/h3&gt;
&lt;p&gt;一条直线上有 &lt;span class=&#34;math inline&#34;&gt;\(n+1\)&lt;/span&gt; 个传送机，位于点 &lt;span class=&#34;math inline&#34;&gt;\(0,a_1,a_2,a_3,...,a_n\)&lt;/span&gt;。如果在 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 点和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 点都有传送机，那么可以从 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 点传送到 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 点，能量开销为 &lt;span class=&#34;math inline&#34;&gt;\((x-y)^2\)&lt;/span&gt;。现可以在整点安装额外的传送机，要求使得从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 传送到 &lt;span class=&#34;math inline&#34;&gt;\(a_n\)&lt;/span&gt; 的代价 &lt;span class=&#34;math inline&#34;&gt;\(\le m\)&lt;/span&gt;。问最少安装多少额外传送机。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_1&amp;lt;a_2&amp;lt;\cdots&amp;lt;a_n\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_n\le m\le 10^{18}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;根据均值不等式，在最优策略下，我们一定是将传送机尽可能“平均”安排。所以每个 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 分的段可以独立考虑。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(f(x, k)\)&lt;/span&gt; 表示考虑长度为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的一段，放 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个传送机，能达到的最小代价，则我们划分出的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 段的长度肯定要么是 &lt;span class=&#34;math inline&#34;&gt;\(\left\lfloor\dfrac{x}{k + 1}\right\rfloor\)&lt;/span&gt;，要么是 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\dfrac{x}{k + 1}\right\rceil\)&lt;/span&gt;。前者有 &lt;span class=&#34;math inline&#34;&gt;\(k + 1 - x\bmod(k + 1)\)&lt;/span&gt; 段，后者有 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod(k + 1)\)&lt;/span&gt; 段。所以f &lt;span class=&#34;math display&#34;&gt;\[
f(x, k) = (x\bmod(k + 1))\cdot\left\lceil\frac{x}{k + 1}\right\rceil^2 +(k + 1 - x\bmod(k + 1))\cdot\left\lfloor\dfrac{x}{k + 1}\right\rfloor^2
\]&lt;/span&gt; 而如果不考虑整点限制的话，这个 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 是关于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 有凸性的，即每一段每增加一个传送机，代价的减少量是不增的。&lt;/p&gt;
&lt;p&gt;而根据我们的直觉，我们每次都会往能减少最多代价的一段加传送机，所以我们可以二分一个最小的减少量 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，对于每一段，二分求出 &lt;span class=&#34;math inline&#34;&gt;\(f(x, k - 1) - f(x, k)\ge d\)&lt;/span&gt; 的最大的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，并且在这段放 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 个传送机。设这样子的总代价为 &lt;span class=&#34;math inline&#34;&gt;\(g(d)\)&lt;/span&gt;，则我们可以二分出一个刚好 &lt;span class=&#34;math inline&#34;&gt;\(\le m\)&lt;/span&gt; 的最大的 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然而 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 是不一定要全部加进去的，有可能我们可以在 &lt;span class=&#34;math inline&#34;&gt;\(d + 1\)&lt;/span&gt; 的基础上放几个 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 就可以使得总代价 &lt;span class=&#34;math inline&#34;&gt;\(\le m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以先算出 &lt;span class=&#34;math inline&#34;&gt;\(g(d + 1)\)&lt;/span&gt; 然后再放 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\dfrac{g(d + 1) - m}{d}\right\rceil\)&lt;/span&gt; 个传送机就可以了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb36&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb36-1&#34;&gt;&lt;a href=&#34;#cb36-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-2&#34;&gt;&lt;a href=&#34;#cb36-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-3&#34;&gt;&lt;a href=&#34;#cb36-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb36-4&#34;&gt;&lt;a href=&#34;#cb36-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll m;&lt;/span&gt;
&lt;span id=&#34;cb36-5&#34;&gt;&lt;a href=&#34;#cb36-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pll = pair&amp;lt;ll, ll&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-6&#34;&gt;&lt;a href=&#34;#cb36-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-7&#34;&gt;&lt;a href=&#34;#cb36-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll f(ll x, ll k) {&lt;/span&gt;
&lt;span id=&#34;cb36-8&#34;&gt;&lt;a href=&#34;#cb36-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x % (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * ((x + k) / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * ((x + k) / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) + (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; - (x % (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))) * (x / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * (x / (k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb36-9&#34;&gt;&lt;a href=&#34;#cb36-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-10&#34;&gt;&lt;a href=&#34;#cb36-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-11&#34;&gt;&lt;a href=&#34;#cb36-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pll calc(ll x, ll d) {&lt;/span&gt;
&lt;span id=&#34;cb36-12&#34;&gt;&lt;a href=&#34;#cb36-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-13&#34;&gt;&lt;a href=&#34;#cb36-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r) {&lt;/span&gt;
&lt;span id=&#34;cb36-14&#34;&gt;&lt;a href=&#34;#cb36-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-15&#34;&gt;&lt;a href=&#34;#cb36-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f(x, mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - f(x, mid) &amp;gt;= d)&lt;/span&gt;
&lt;span id=&#34;cb36-16&#34;&gt;&lt;a href=&#34;#cb36-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = mid, l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-17&#34;&gt;&lt;a href=&#34;#cb36-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-18&#34;&gt;&lt;a href=&#34;#cb36-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-19&#34;&gt;&lt;a href=&#34;#cb36-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {f(x, ret), ret};&lt;/span&gt;
&lt;span id=&#34;cb36-20&#34;&gt;&lt;a href=&#34;#cb36-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-21&#34;&gt;&lt;a href=&#34;#cb36-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-22&#34;&gt;&lt;a href=&#34;#cb36-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pll check(ll mid) {&lt;/span&gt;
&lt;span id=&#34;cb36-23&#34;&gt;&lt;a href=&#34;#cb36-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pll res;&lt;/span&gt;
&lt;span id=&#34;cb36-24&#34;&gt;&lt;a href=&#34;#cb36-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb36-25&#34;&gt;&lt;a href=&#34;#cb36-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; now = calc(a[i], mid);&lt;/span&gt;
&lt;span id=&#34;cb36-26&#34;&gt;&lt;a href=&#34;#cb36-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        res.first += now.first, res.second += now.second;&lt;/span&gt;
&lt;span id=&#34;cb36-27&#34;&gt;&lt;a href=&#34;#cb36-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-28&#34;&gt;&lt;a href=&#34;#cb36-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb36-29&#34;&gt;&lt;a href=&#34;#cb36-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb36-30&#34;&gt;&lt;a href=&#34;#cb36-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-31&#34;&gt;&lt;a href=&#34;#cb36-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb36-32&#34;&gt;&lt;a href=&#34;#cb36-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    is &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb36-33&#34;&gt;&lt;a href=&#34;#cb36-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) is &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb36-34&#34;&gt;&lt;a href=&#34;#cb36-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) a[i] -= a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb36-35&#34;&gt;&lt;a href=&#34;#cb36-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    is &amp;gt;&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb36-36&#34;&gt;&lt;a href=&#34;#cb36-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;, d;&lt;/span&gt;
&lt;span id=&#34;cb36-37&#34;&gt;&lt;a href=&#34;#cb36-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r) {&lt;/span&gt;
&lt;span id=&#34;cb36-38&#34;&gt;&lt;a href=&#34;#cb36-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-39&#34;&gt;&lt;a href=&#34;#cb36-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (check(mid).first &amp;lt;= m) l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d = mid;&lt;/span&gt;
&lt;span id=&#34;cb36-40&#34;&gt;&lt;a href=&#34;#cb36-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; r = mid - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-41&#34;&gt;&lt;a href=&#34;#cb36-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb36-42&#34;&gt;&lt;a href=&#34;#cb36-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; res = check(d + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb36-43&#34;&gt;&lt;a href=&#34;#cb36-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; res.second + (res.first - m + d - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / d;&lt;/span&gt;
&lt;span id=&#34;cb36-44&#34;&gt;&lt;a href=&#34;#cb36-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-45&#34;&gt;&lt;a href=&#34;#cb36-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-796&#34;&gt;Codeforces Round #796&lt;/h2&gt;
&lt;h3 id=&#34;c---sanae-and-giant-robot&#34;&gt;1687C - Sanae and Giant Robot&lt;/h3&gt;
&lt;p&gt;给定数列 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个区间 &lt;span class=&#34;math inline&#34;&gt;\([l_i, r_i]\)&lt;/span&gt;，每次操作的时候可以选择一个区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(\forall l\le i\le r\)&lt;/span&gt; 执行 &lt;span class=&#34;math inline&#34;&gt;\(a_i\leftarrow b_i\)&lt;/span&gt;，当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=l}^r a_i\)&lt;/span&gt; 不变。问能否经过若干次操作将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 转化为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;思考 &lt;span class=&#34;math inline&#34;&gt;\(b_i = 0\)&lt;/span&gt; 的情况。则若我们令 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的前缀和的话，我们每次就可以选择 &lt;span class=&#34;math inline&#34;&gt;\(s_r - s_{l - 1} = 0\)&lt;/span&gt; 的区间 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(s_l,s_{l+1},\cdots,s_{r - 1}\)&lt;/span&gt; 全部赋值为 &lt;span class=&#34;math inline&#34;&gt;\(s_r\)&lt;/span&gt;。而最终的目标是让所有的 &lt;span class=&#34;math inline&#34;&gt;\(s_i = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;那么我们就每次选择 &lt;span class=&#34;math inline&#34;&gt;\(s_{l-1} = s_r = 0\)&lt;/span&gt; 的区间 &lt;span class=&#34;math inline&#34;&gt;\([l,r]\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\([l, r - 1]\)&lt;/span&gt; 内的 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 全部赋值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。可以随便维护一下这个过程（例如使用 &lt;code&gt;set&lt;/code&gt; + bfs）。&lt;/p&gt;
&lt;p&gt;而对于 &lt;span class=&#34;math inline&#34;&gt;\(b_i\ne 0\)&lt;/span&gt; 的情况呢？将 &lt;span class=&#34;math inline&#34;&gt;\(a_i \leftarrow a_i - b_i\)&lt;/span&gt; 之后就能变成和上面一样的问题了。每个点至多被删除一次，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O((n+m)\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb37&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb37-1&#34;&gt;&lt;a href=&#34;#cb37-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-2&#34;&gt;&lt;a href=&#34;#cb37-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;fastio.hpp&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-3&#34;&gt;&lt;a href=&#34;#cb37-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb37-4&#34;&gt;&lt;a href=&#34;#cb37-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-5&#34;&gt;&lt;a href=&#34;#cb37-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb37-6&#34;&gt;&lt;a href=&#34;#cb37-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; YangTY::fastIO::is;&lt;/span&gt;
&lt;span id=&#34;cb37-7&#34;&gt;&lt;a href=&#34;#cb37-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; YangTY::fastIO::os;&lt;/span&gt;
&lt;span id=&#34;cb37-8&#34;&gt;&lt;a href=&#34;#cb37-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-9&#34;&gt;&lt;a href=&#34;#cb37-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-10&#34;&gt;&lt;a href=&#34;#cb37-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, deg[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-11&#34;&gt;&lt;a href=&#34;#cb37-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-12&#34;&gt;&lt;a href=&#34;#cb37-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-13&#34;&gt;&lt;a href=&#34;#cb37-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; e[maxn];&lt;/span&gt;
&lt;span id=&#34;cb37-14&#34;&gt;&lt;a href=&#34;#cb37-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-15&#34;&gt;&lt;a href=&#34;#cb37-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb37-16&#34;&gt;&lt;a href=&#34;#cb37-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; is &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb37-17&#34;&gt;&lt;a href=&#34;#cb37-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb37-18&#34;&gt;&lt;a href=&#34;#cb37-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        is &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb37-19&#34;&gt;&lt;a href=&#34;#cb37-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) is &amp;gt;&amp;gt; a[i];&lt;/span&gt;
&lt;span id=&#34;cb37-20&#34;&gt;&lt;a href=&#34;#cb37-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) is &amp;gt;&amp;gt; b[i], a[i] -= b[i], a[i] += a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb37-21&#34;&gt;&lt;a href=&#34;#cb37-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        set&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; S;&lt;/span&gt;
&lt;span id=&#34;cb37-22&#34;&gt;&lt;a href=&#34;#cb37-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) S.insert(i), vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]);&lt;/span&gt;
&lt;span id=&#34;cb37-23&#34;&gt;&lt;a href=&#34;#cb37-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb37-24&#34;&gt;&lt;a href=&#34;#cb37-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;l = e[i].first, &amp;amp;r = e[i].second;&lt;/span&gt;
&lt;span id=&#34;cb37-25&#34;&gt;&lt;a href=&#34;#cb37-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            is &amp;gt;&amp;gt; l &amp;gt;&amp;gt; r;&lt;/span&gt;
&lt;span id=&#34;cb37-26&#34;&gt;&lt;a href=&#34;#cb37-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;].push_back(i), G[r].push_back(i);&lt;/span&gt;
&lt;span id=&#34;cb37-27&#34;&gt;&lt;a href=&#34;#cb37-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            deg[i] = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-28&#34;&gt;&lt;a href=&#34;#cb37-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-29&#34;&gt;&lt;a href=&#34;#cb37-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        queue&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; q;&lt;/span&gt;
&lt;span id=&#34;cb37-30&#34;&gt;&lt;a href=&#34;#cb37-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a[i]) q.push(i), S.erase(i);&lt;/span&gt;
&lt;span id=&#34;cb37-31&#34;&gt;&lt;a href=&#34;#cb37-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!q.empty()) {&lt;/span&gt;
&lt;span id=&#34;cb37-32&#34;&gt;&lt;a href=&#34;#cb37-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = q.front(); q.pop();&lt;/span&gt;
&lt;span id=&#34;cb37-33&#34;&gt;&lt;a href=&#34;#cb37-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; id : G[x]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!--deg[id]) {&lt;/span&gt;
&lt;span id=&#34;cb37-34&#34;&gt;&lt;a href=&#34;#cb37-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = e[id].first, r = e[id].second;&lt;/span&gt;
&lt;span id=&#34;cb37-35&#34;&gt;&lt;a href=&#34;#cb37-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; lt = S.lower_bound(l), rt = S.upper_bound(r);&lt;/span&gt;
&lt;span id=&#34;cb37-36&#34;&gt;&lt;a href=&#34;#cb37-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = lt; it != rt; ++it) q.push(*it);&lt;/span&gt;
&lt;span id=&#34;cb37-37&#34;&gt;&lt;a href=&#34;#cb37-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                S.erase(lt, rt);&lt;/span&gt;
&lt;span id=&#34;cb37-38&#34;&gt;&lt;a href=&#34;#cb37-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb37-39&#34;&gt;&lt;a href=&#34;#cb37-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb37-40&#34;&gt;&lt;a href=&#34;#cb37-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        os &amp;lt;&amp;lt; (S.empty() ? &lt;span class=&#34;st&#34;&gt;&amp;quot;YES&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-41&#34;&gt;&lt;a href=&#34;#cb37-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb37-42&#34;&gt;&lt;a href=&#34;#cb37-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb37-43&#34;&gt;&lt;a href=&#34;#cb37-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d---cute-number&#34;&gt;1687D - Cute number&lt;/h3&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 为严格大于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小完全平方数，&lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 为小于等于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最大完全平方数。定义一个正整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是可爱的，当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(x - g(x) &amp;lt; f(x) - x\)&lt;/span&gt;。给定一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，求一个最小的非负整数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall 1\le i\le n\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i + k\)&lt;/span&gt; 为可爱的。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^6\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le a_i\le 2\times 10^6\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先大力观察，根据 &lt;span class=&#34;math inline&#34;&gt;\((x^2)&amp;#39; = 2x\)&lt;/span&gt; 得到可爱的数一定在 &lt;span class=&#34;math inline&#34;&gt;\([k^2, k^2 + k]\)&lt;/span&gt; 内，成一段一段的分布，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段可爱的数的长度为 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt;，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段不可爱的数长度为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;。不妨令 &lt;span class=&#34;math inline&#34;&gt;\([k^2, k^2 + k]\)&lt;/span&gt; 为第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 段。&lt;/p&gt;
&lt;p&gt;首先，若 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + k\)&lt;/span&gt; 在第 &lt;span class=&#34;math inline&#34;&gt;\(a_n\)&lt;/span&gt; 段的段头的话，一定是可以的。所以枚举所有 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; a_n\)&lt;/span&gt; 的段判断是否可以就行了。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + k\)&lt;/span&gt; 在第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段，则 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 一共会有 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 个可取的值，而当 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 逐渐变化的时候，某个 &lt;span class=&#34;math inline&#34;&gt;\(a_i + k\)&lt;/span&gt; 可能会从可爱变到不可爱，也有可能从不可爱变得可爱。也即：我们要把所有不可爱的数变得可爱，也不能把任何可爱的数变得不可爱。不难发现这实际上给 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 卡了一个上下界。&lt;/p&gt;
&lt;p&gt;如何计算？初始时令 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + k\)&lt;/span&gt; 为第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 段段首，即 &lt;span class=&#34;math inline&#34;&gt;\(k=i^2 - a_1\)&lt;/span&gt;，考虑对于每个不可爱的段，找到里面最小的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，这限制了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的下界；对每个可爱的段找到最大的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，这限制了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的上界。由于每段长度都 &lt;span class=&#34;math inline&#34;&gt;\(\ge i\)&lt;/span&gt;，所以一共只会枚举 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{a_n}{i}\)&lt;/span&gt; 段。所以总时间复杂度调和 &lt;span class=&#34;math inline&#34;&gt;\(a_n\log a_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb38&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb38-1&#34;&gt;&lt;a href=&#34;#cb38-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-2&#34;&gt;&lt;a href=&#34;#cb38-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-3&#34;&gt;&lt;a href=&#34;#cb38-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;4e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;4e6&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-4&#34;&gt;&lt;a href=&#34;#cb38-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn], vis[maxn], pre[maxn], suf[maxn];&lt;/span&gt;
&lt;span id=&#34;cb38-5&#34;&gt;&lt;a href=&#34;#cb38-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-6&#34;&gt;&lt;a href=&#34;#cb38-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb38-7&#34;&gt;&lt;a href=&#34;#cb38-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb38-8&#34;&gt;&lt;a href=&#34;#cb38-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) cin &amp;gt;&amp;gt; a[i], vis[a[i] - a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-9&#34;&gt;&lt;a href=&#34;#cb38-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pre[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, suf[N] = N;&lt;/span&gt;
&lt;span id=&#34;cb38-10&#34;&gt;&lt;a href=&#34;#cb38-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, N) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) pre[i] = i; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; pre[i] = pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb38-11&#34;&gt;&lt;a href=&#34;#cb38-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, N - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[i]) suf[i] = i; &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; suf[i] = suf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb38-12&#34;&gt;&lt;a href=&#34;#cb38-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a[n]) {&lt;/span&gt;
&lt;span id=&#34;cb38-13&#34;&gt;&lt;a href=&#34;#cb38-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i * (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;lt; a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-14&#34;&gt;&lt;a href=&#34;#cb38-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lb = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, rb = i;&lt;/span&gt;
&lt;span id=&#34;cb38-15&#34;&gt;&lt;a href=&#34;#cb38-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt; i * i) lb = a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - i * i;&lt;/span&gt;
&lt;span id=&#34;cb38-16&#34;&gt;&lt;a href=&#34;#cb38-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = i;&lt;/span&gt;
&lt;span id=&#34;cb38-17&#34;&gt;&lt;a href=&#34;#cb38-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, i, a[n]) {&lt;/span&gt;
&lt;span id=&#34;cb38-18&#34;&gt;&lt;a href=&#34;#cb38-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (pre[r] &amp;gt;= l)&lt;/span&gt;
&lt;span id=&#34;cb38-19&#34;&gt;&lt;a href=&#34;#cb38-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmin(rb, r - pre[r]);&lt;/span&gt;
&lt;span id=&#34;cb38-20&#34;&gt;&lt;a href=&#34;#cb38-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-21&#34;&gt;&lt;a href=&#34;#cb38-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (suf[r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt; l)&lt;/span&gt;
&lt;span id=&#34;cb38-22&#34;&gt;&lt;a href=&#34;#cb38-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                chkmax(lb, l - suf[r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb38-23&#34;&gt;&lt;a href=&#34;#cb38-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-24&#34;&gt;&lt;a href=&#34;#cb38-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; a[n] - a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-25&#34;&gt;&lt;a href=&#34;#cb38-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb38-26&#34;&gt;&lt;a href=&#34;#cb38-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lb &amp;lt;= rb) {&lt;/span&gt;
&lt;span id=&#34;cb38-27&#34;&gt;&lt;a href=&#34;#cb38-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; i * i + lb - a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb38-28&#34;&gt;&lt;a href=&#34;#cb38-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-29&#34;&gt;&lt;a href=&#34;#cb38-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb38-30&#34;&gt;&lt;a href=&#34;#cb38-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-31&#34;&gt;&lt;a href=&#34;#cb38-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-32&#34;&gt;&lt;a href=&#34;#cb38-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-801-div.-2-and-epic-institute-of-technology-round&#34;&gt;Codeforces Round #801 (Div. 2) and EPIC Institute of Technology Round&lt;/h2&gt;
&lt;h3 id=&#34;d12---tree-queries-hard-version&#34;&gt;1695D1/2 - Tree Queries (Hard Version)&lt;/h3&gt;
&lt;p&gt;原题地址：&lt;a href=&#34;https://atcoder.jp/contests/apc001/tasks/apc001_e&#34;&gt;AtCoder&lt;/a&gt;，&lt;a href=&#34;https://www.luogu.com.cn/problem/AT3912&#34;&gt;洛谷&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;首先对于 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 我们可以特判掉。&lt;/p&gt;
&lt;p&gt;然后是 &lt;span class=&#34;math inline&#34;&gt;\(n\le 2000\)&lt;/span&gt; 的 D1，发现我们可以枚举根然后钦定选择之，之后贪心扫一遍树计算答案。具体地，若遇到了度数 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{deg}(u)\ge 3\)&lt;/span&gt; 的节点（即分叉），则至少要有 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{deg}(u) - 2\)&lt;/span&gt; 个子树内有选择的点（否则无法将所有的子树区分开来）。这个东西可以稍微 dp 一下来做，设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树内有没有选点，则&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb39&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb39-1&#34;&gt;&lt;a href=&#34;#cb39-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-2&#34;&gt;&lt;a href=&#34;#cb39-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-3&#34;&gt;&lt;a href=&#34;#cb39-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb39-4&#34;&gt;&lt;a href=&#34;#cb39-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-5&#34;&gt;&lt;a href=&#34;#cb39-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb39-6&#34;&gt;&lt;a href=&#34;#cb39-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-7&#34;&gt;&lt;a href=&#34;#cb39-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T chkmin(T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a = (b &amp;lt; a ? b : a);}&lt;/span&gt;
&lt;span id=&#34;cb39-8&#34;&gt;&lt;a href=&#34;#cb39-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-9&#34;&gt;&lt;a href=&#34;#cb39-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb39-10&#34;&gt;&lt;a href=&#34;#cb39-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb39-11&#34;&gt;&lt;a href=&#34;#cb39-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-12&#34;&gt;&lt;a href=&#34;#cb39-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb39-13&#34;&gt;&lt;a href=&#34;#cb39-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-14&#34;&gt;&lt;a href=&#34;#cb39-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-15&#34;&gt;&lt;a href=&#34;#cb39-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa) {&lt;/span&gt;
&lt;span id=&#34;cb39-16&#34;&gt;&lt;a href=&#34;#cb39-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb39-17&#34;&gt;&lt;a href=&#34;#cb39-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp += !f[v], f[u] |= f[v];&lt;/span&gt;
&lt;span id=&#34;cb39-18&#34;&gt;&lt;a href=&#34;#cb39-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-19&#34;&gt;&lt;a href=&#34;#cb39-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret += tmp - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-20&#34;&gt;&lt;a href=&#34;#cb39-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb39-21&#34;&gt;&lt;a href=&#34;#cb39-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-22&#34;&gt;&lt;a href=&#34;#cb39-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-23&#34;&gt;&lt;a href=&#34;#cb39-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb39-24&#34;&gt;&lt;a href=&#34;#cb39-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-25&#34;&gt;&lt;a href=&#34;#cb39-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb39-26&#34;&gt;&lt;a href=&#34;#cb39-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb39-27&#34;&gt;&lt;a href=&#34;#cb39-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb39-28&#34;&gt;&lt;a href=&#34;#cb39-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]);&lt;/span&gt;
&lt;span id=&#34;cb39-29&#34;&gt;&lt;a href=&#34;#cb39-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-30&#34;&gt;&lt;a href=&#34;#cb39-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-31&#34;&gt;&lt;a href=&#34;#cb39-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-32&#34;&gt;&lt;a href=&#34;#cb39-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-33&#34;&gt;&lt;a href=&#34;#cb39-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-34&#34;&gt;&lt;a href=&#34;#cb39-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb39-35&#34;&gt;&lt;a href=&#34;#cb39-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb39-36&#34;&gt;&lt;a href=&#34;#cb39-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-37&#34;&gt;&lt;a href=&#34;#cb39-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-38&#34;&gt;&lt;a href=&#34;#cb39-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) chkmin(ans, dfs(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-39&#34;&gt;&lt;a href=&#34;#cb39-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; ans &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-40&#34;&gt;&lt;a href=&#34;#cb39-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-41&#34;&gt;&lt;a href=&#34;#cb39-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-42&#34;&gt;&lt;a href=&#34;#cb39-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后会发现，我们这样做的本质是，对于一个以 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为根的子树，我们保证了他的外面至少有一个点被选（即至少选了根），以确定 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的位置。而当我们选择一个度数 &lt;span class=&#34;math inline&#34;&gt;\(\ge 3\)&lt;/span&gt; 的点作为根时，我们会发现即使不选根，对于根的每一个子树都可以满足上述性质（子树外面也至少选了一个点），所以随便选一个度数 &lt;span class=&#34;math inline&#34;&gt;\(\ge 3\)&lt;/span&gt; 的根跑一遍这个 dp 就能得到答案（注意这个时候就不选根了）。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb40&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb40-1&#34;&gt;&lt;a href=&#34;#cb40-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-2&#34;&gt;&lt;a href=&#34;#cb40-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb40-3&#34;&gt;&lt;a href=&#34;#cb40-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb40-4&#34;&gt;&lt;a href=&#34;#cb40-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-5&#34;&gt;&lt;a href=&#34;#cb40-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb40-6&#34;&gt;&lt;a href=&#34;#cb40-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-7&#34;&gt;&lt;a href=&#34;#cb40-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, f[maxn], ans;&lt;/span&gt;
&lt;span id=&#34;cb40-8&#34;&gt;&lt;a href=&#34;#cb40-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb40-9&#34;&gt;&lt;a href=&#34;#cb40-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-10&#34;&gt;&lt;a href=&#34;#cb40-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb40-11&#34;&gt;&lt;a href=&#34;#cb40-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-12&#34;&gt;&lt;a href=&#34;#cb40-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa) {&lt;/span&gt;
&lt;span id=&#34;cb40-13&#34;&gt;&lt;a href=&#34;#cb40-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb40-14&#34;&gt;&lt;a href=&#34;#cb40-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp += !f[v], f[u] |= f[v];&lt;/span&gt;
&lt;span id=&#34;cb40-15&#34;&gt;&lt;a href=&#34;#cb40-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-16&#34;&gt;&lt;a href=&#34;#cb40-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans += tmp - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-17&#34;&gt;&lt;a href=&#34;#cb40-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-18&#34;&gt;&lt;a href=&#34;#cb40-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-19&#34;&gt;&lt;a href=&#34;#cb40-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-20&#34;&gt;&lt;a href=&#34;#cb40-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb40-21&#34;&gt;&lt;a href=&#34;#cb40-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb40-22&#34;&gt;&lt;a href=&#34;#cb40-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb40-23&#34;&gt;&lt;a href=&#34;#cb40-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb40-24&#34;&gt;&lt;a href=&#34;#cb40-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb40-25&#34;&gt;&lt;a href=&#34;#cb40-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(G[i]), f[i] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-26&#34;&gt;&lt;a href=&#34;#cb40-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-27&#34;&gt;&lt;a href=&#34;#cb40-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-28&#34;&gt;&lt;a href=&#34;#cb40-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-29&#34;&gt;&lt;a href=&#34;#cb40-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-30&#34;&gt;&lt;a href=&#34;#cb40-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-31&#34;&gt;&lt;a href=&#34;#cb40-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb40-32&#34;&gt;&lt;a href=&#34;#cb40-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb40-33&#34;&gt;&lt;a href=&#34;#cb40-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-34&#34;&gt;&lt;a href=&#34;#cb40-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-35&#34;&gt;&lt;a href=&#34;#cb40-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G[i].size() &amp;gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb40-36&#34;&gt;&lt;a href=&#34;#cb40-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rt = i;&lt;/span&gt;
&lt;span id=&#34;cb40-37&#34;&gt;&lt;a href=&#34;#cb40-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-38&#34;&gt;&lt;a href=&#34;#cb40-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb40-39&#34;&gt;&lt;a href=&#34;#cb40-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-40&#34;&gt;&lt;a href=&#34;#cb40-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!rt) cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-41&#34;&gt;&lt;a href=&#34;#cb40-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; cout &amp;lt;&amp;lt; (dfs(rt, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), ans) &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-42&#34;&gt;&lt;a href=&#34;#cb40-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-43&#34;&gt;&lt;a href=&#34;#cb40-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-44&#34;&gt;&lt;a href=&#34;#cb40-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;p&gt;当然本题还可以从另外一个角度出发，即思考问题的结构。&lt;/p&gt;
&lt;p&gt;首先我们考虑选了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个关键点之后，什么情况下能区分每个点。&lt;/p&gt;
&lt;p&gt;发现若令选出来的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个关键点在树上生成一张“连通子图”，连通子图内部的点是两两可区分的，而则其伸出去的子树中，同一深度的点是不可区分的。所以&lt;strong&gt;连通子图伸出去的部分必须是链&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那么回到原问题，显然我们可以钦定一开始选择所有叶子作为关键点，即将连通子图初始化为整棵树，然后会注意到我们可以删一些原树中从叶子连到内部点的链，同时不破坏上面“伸出去的部分要是链”的性质。&lt;/p&gt;
&lt;p&gt;所以从叶子节点往上搜，搜到度 &lt;span class=&#34;math inline&#34;&gt;\(\ge 3\)&lt;/span&gt; 的节点停下来打标记（意味着这个子树里面可以删掉一条链）。用总叶子数量减去打了标记的点的数量就是答案。注意特判链的情况，下面代码是 APC001E 的，和 CF 的有些许出入。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb41&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb41-1&#34;&gt;&lt;a href=&#34;#cb41-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-2&#34;&gt;&lt;a href=&#34;#cb41-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb41-3&#34;&gt;&lt;a href=&#34;#cb41-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-4&#34;&gt;&lt;a href=&#34;#cb41-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb41-5&#34;&gt;&lt;a href=&#34;#cb41-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-6&#34;&gt;&lt;a href=&#34;#cb41-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, vis[maxn], ans;&lt;/span&gt;
&lt;span id=&#34;cb41-7&#34;&gt;&lt;a href=&#34;#cb41-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb41-8&#34;&gt;&lt;a href=&#34;#cb41-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-9&#34;&gt;&lt;a href=&#34;#cb41-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb41-10&#34;&gt;&lt;a href=&#34;#cb41-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G[u].size() &amp;gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb41-11&#34;&gt;&lt;a href=&#34;#cb41-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;v : G[u]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v != fa) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb41-12&#34;&gt;&lt;a href=&#34;#cb41-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; u;&lt;/span&gt;
&lt;span id=&#34;cb41-13&#34;&gt;&lt;a href=&#34;#cb41-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-14&#34;&gt;&lt;a href=&#34;#cb41-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-15&#34;&gt;&lt;a href=&#34;#cb41-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb41-16&#34;&gt;&lt;a href=&#34;#cb41-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb41-17&#34;&gt;&lt;a href=&#34;#cb41-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb41-18&#34;&gt;&lt;a href=&#34;#cb41-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb41-19&#34;&gt;&lt;a href=&#34;#cb41-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; cin &amp;gt;&amp;gt; u &amp;gt;&amp;gt; v;&lt;/span&gt;
&lt;span id=&#34;cb41-20&#34;&gt;&lt;a href=&#34;#cb41-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++u, ++v;&lt;/span&gt;
&lt;span id=&#34;cb41-21&#34;&gt;&lt;a href=&#34;#cb41-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb41-22&#34;&gt;&lt;a href=&#34;#cb41-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-23&#34;&gt;&lt;a href=&#34;#cb41-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (G[i].size() == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) vis[dfs(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++ans;&lt;/span&gt;
&lt;span id=&#34;cb41-24&#34;&gt;&lt;a href=&#34;#cb41-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) ans -= vis[i];&lt;/span&gt;
&lt;span id=&#34;cb41-25&#34;&gt;&lt;a href=&#34;#cb41-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; (ans ? ans : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb41-26&#34;&gt;&lt;a href=&#34;#cb41-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-27&#34;&gt;&lt;a href=&#34;#cb41-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;e---ambiguous-dominoes&#34;&gt;1695E - Ambiguous Dominoes&lt;/h3&gt;
&lt;p&gt;题意：有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个多米诺骨牌，每张骨牌上有两个数字，要求构造两个将这 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个骨牌不重叠放入 &lt;span class=&#34;math inline&#34;&gt;\(m\times k = 2n\)&lt;/span&gt; 的棋盘 &lt;span class=&#34;math inline&#34;&gt;\(a_{m\times k}\)&lt;/span&gt; 中的方案，满足对应位置上的数字一样，且要求两种方案中骨牌的位置全部不一样，或报告无解。&lt;span class=&#34;math inline&#34;&gt;\(n\le 3\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有点流氓了哈，牛逼构造。&lt;/p&gt;
&lt;p&gt;对于每张多米诺骨牌 &lt;span class=&#34;math inline&#34;&gt;\((x_i, y_i)\)&lt;/span&gt;，连一条无向边 &lt;span class=&#34;math inline&#34;&gt;\(x\to y\)&lt;/span&gt;。然后会发现，若一个连通分量里面恰好只有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 条边，说明这条边代表的多米诺骨牌只有一种摆法，因此无解。&lt;/p&gt;
&lt;p&gt;否则总能构造出一个 &lt;span class=&#34;math inline&#34;&gt;\(2\times k\)&lt;/span&gt; 的棋盘（&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为连通分量内边数），见下。&lt;/p&gt;
&lt;p&gt;我们随便对这张图进行欧拉遍历（就是 dfs 遍历没有遍历的边，然后将经过的边存下来），然后会发现每条边都恰好在这个欧拉序中出现两次（考虑欧拉序的性质），并且&lt;strong&gt;两次出现的位置的奇偶性不一样&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如何证明？考虑边 &lt;span class=&#34;math inline&#34;&gt;\(e=u\to v\)&lt;/span&gt;，若我们的 dfs 直接返回，则欧拉序列中会形成 &lt;span class=&#34;math inline&#34;&gt;\(e,e\)&lt;/span&gt;，两次出现位置的奇偶性显然不同。如果还要继续遍历，由于我们之后遍历的边一定经历了回溯过程，所以两个 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 中间夹着偶数条边，&lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 出现位置的奇偶性仍然不同。&lt;/p&gt;
&lt;p&gt;如果考虑点的遍历序，则我们得到一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(2k + 1\)&lt;/span&gt; 的首尾相接的序列（还是考虑欧拉序的性质），然后将最后一个元素去掉并将其依次顺时针放入 &lt;span class=&#34;math inline&#34;&gt;\(2\times k\)&lt;/span&gt; 的棋盘中，现在骨牌们对应的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 条边就形成了长 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 的环。因为每张骨牌&lt;strong&gt;出现位置的奇偶性不一样&lt;/strong&gt;，所以下面的两种构造总会是合法的（图源官方题解）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://espresso.codeforces.com/8d975bc11693b0864bbc0b6e19423e4954b1b282.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;于是对于一个连通块我们就搞定了。对于多个连通块的情况，把得到的 &lt;span class=&#34;math inline&#34;&gt;\(2\times k\)&lt;/span&gt; 棋盘们拼一起即可，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://espresso.codeforces.com/211398dfdf9487ee70a6b189aa834b35c0dd601f.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（可能有上面的图更好理解些）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb42&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb42-1&#34;&gt;&lt;a href=&#34;#cb42-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-2&#34;&gt;&lt;a href=&#34;#cb42-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-3&#34;&gt;&lt;a href=&#34;#cb42-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb42-4&#34;&gt;&lt;a href=&#34;#cb42-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb42-5&#34;&gt;&lt;a href=&#34;#cb42-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-6&#34;&gt;&lt;a href=&#34;#cb42-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb42-7&#34;&gt;&lt;a href=&#34;#cb42-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-8&#34;&gt;&lt;a href=&#34;#cb42-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], to[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], nxt[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], cnte = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-9&#34;&gt;&lt;a href=&#34;#cb42-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, vis[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], vise[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb42-10&#34;&gt;&lt;a href=&#34;#cb42-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-11&#34;&gt;&lt;a href=&#34;#cb42-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb42-12&#34;&gt;&lt;a href=&#34;#cb42-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb42-13&#34;&gt;&lt;a href=&#34;#cb42-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb42-14&#34;&gt;&lt;a href=&#34;#cb42-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb42-15&#34;&gt;&lt;a href=&#34;#cb42-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-16&#34;&gt;&lt;a href=&#34;#cb42-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-17&#34;&gt;&lt;a href=&#34;#cb42-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-18&#34;&gt;&lt;a href=&#34;#cb42-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; path;&lt;/span&gt;
&lt;span id=&#34;cb42-19&#34;&gt;&lt;a href=&#34;#cb42-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-20&#34;&gt;&lt;a href=&#34;#cb42-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pre) {&lt;/span&gt;
&lt;span id=&#34;cb42-21&#34;&gt;&lt;a href=&#34;#cb42-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    path.push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb42-22&#34;&gt;&lt;a href=&#34;#cb42-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[u]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-23&#34;&gt;&lt;a href=&#34;#cb42-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vis[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-24&#34;&gt;&lt;a href=&#34;#cb42-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vise[i]) {&lt;/span&gt;
&lt;span id=&#34;cb42-25&#34;&gt;&lt;a href=&#34;#cb42-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vise[i] = vise[i ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-26&#34;&gt;&lt;a href=&#34;#cb42-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(to[i], i);&lt;/span&gt;
&lt;span id=&#34;cb42-27&#34;&gt;&lt;a href=&#34;#cb42-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        path.push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb42-28&#34;&gt;&lt;a href=&#34;#cb42-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-29&#34;&gt;&lt;a href=&#34;#cb42-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-30&#34;&gt;&lt;a href=&#34;#cb42-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-31&#34;&gt;&lt;a href=&#34;#cb42-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-32&#34;&gt;&lt;a href=&#34;#cb42-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn];&lt;/span&gt;
&lt;span id=&#34;cb42-33&#34;&gt;&lt;a href=&#34;#cb42-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; sol1[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn], sol2[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn];&lt;/span&gt;
&lt;span id=&#34;cb42-34&#34;&gt;&lt;a href=&#34;#cb42-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-35&#34;&gt;&lt;a href=&#34;#cb42-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb42-36&#34;&gt;&lt;a href=&#34;#cb42-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-37&#34;&gt;&lt;a href=&#34;#cb42-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb42-38&#34;&gt;&lt;a href=&#34;#cb42-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb42-39&#34;&gt;&lt;a href=&#34;#cb42-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y; cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y;&lt;/span&gt;
&lt;span id=&#34;cb42-40&#34;&gt;&lt;a href=&#34;#cb42-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(x, y), add(y, x);&lt;/span&gt;
&lt;span id=&#34;cb42-41&#34;&gt;&lt;a href=&#34;#cb42-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-42&#34;&gt;&lt;a href=&#34;#cb42-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; col = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-43&#34;&gt;&lt;a href=&#34;#cb42-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb42-44&#34;&gt;&lt;a href=&#34;#cb42-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;().swap(path);&lt;/span&gt;
&lt;span id=&#34;cb42-45&#34;&gt;&lt;a href=&#34;#cb42-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-46&#34;&gt;&lt;a href=&#34;#cb42-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (path.size() == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;-1&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-47&#34;&gt;&lt;a href=&#34;#cb42-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (path.size() &amp;lt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-48&#34;&gt;&lt;a href=&#34;#cb42-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        path.pop_back();&lt;/span&gt;
&lt;span id=&#34;cb42-49&#34;&gt;&lt;a href=&#34;#cb42-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = path.size() &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-50&#34;&gt;&lt;a href=&#34;#cb42-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it = path.begin();&lt;/span&gt;
&lt;span id=&#34;cb42-51&#34;&gt;&lt;a href=&#34;#cb42-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) ans[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i + col] = *it++;&lt;/span&gt;
&lt;span id=&#34;cb42-52&#34;&gt;&lt;a href=&#34;#cb42-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i + col] = *it++;&lt;/span&gt;
&lt;span id=&#34;cb42-53&#34;&gt;&lt;a href=&#34;#cb42-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= k; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) sol1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i] = sol1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;R&amp;#39;&lt;/span&gt;, sol1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = sol1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;L&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-54&#34;&gt;&lt;a href=&#34;#cb42-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;; i &amp;lt;= k; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i] = sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;R&amp;#39;&lt;/span&gt;, sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;L&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-55&#34;&gt;&lt;a href=&#34;#cb42-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sol1[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;, sol1[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-56&#34;&gt;&lt;a href=&#34;#cb42-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;, sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + k] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-57&#34;&gt;&lt;a href=&#34;#cb42-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sol2[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][col + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;, sol2[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][col + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-58&#34;&gt;&lt;a href=&#34;#cb42-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        col += k;&lt;/span&gt;
&lt;span id=&#34;cb42-59&#34;&gt;&lt;a href=&#34;#cb42-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-60&#34;&gt;&lt;a href=&#34;#cb42-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; col &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-61&#34;&gt;&lt;a href=&#34;#cb42-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb42-62&#34;&gt;&lt;a href=&#34;#cb42-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, col) cout &amp;lt;&amp;lt; ans[i][j] &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-63&#34;&gt;&lt;a href=&#34;#cb42-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-64&#34;&gt;&lt;a href=&#34;#cb42-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-65&#34;&gt;&lt;a href=&#34;#cb42-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb42-66&#34;&gt;&lt;a href=&#34;#cb42-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, col) cout &amp;lt;&amp;lt; sol1[i][j];&lt;/span&gt;
&lt;span id=&#34;cb42-67&#34;&gt;&lt;a href=&#34;#cb42-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-68&#34;&gt;&lt;a href=&#34;#cb42-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-69&#34;&gt;&lt;a href=&#34;#cb42-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb42-70&#34;&gt;&lt;a href=&#34;#cb42-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, col) cout &amp;lt;&amp;lt; sol2[i][j];&lt;/span&gt;
&lt;span id=&#34;cb42-71&#34;&gt;&lt;a href=&#34;#cb42-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-72&#34;&gt;&lt;a href=&#34;#cb42-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-73&#34;&gt;&lt;a href=&#34;#cb42-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-74&#34;&gt;&lt;a href=&#34;#cb42-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-802-div.-2&#34;&gt;Codeforces Round #802 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;e---serega-the-pirate&#34;&gt;1700E - Serega the Pirate&lt;/h3&gt;
&lt;p&gt;首先 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 容易判，下面考虑如何判断 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 以及对方案计数。&lt;/p&gt;
&lt;p&gt;容易发现整个矩阵可解等价于对于每个 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt;1\)&lt;/span&gt; 的格子都存在权值小于他的格子与其四联通，充分性可使用归纳证明。&lt;/p&gt;
&lt;p&gt;那么我们现在就将那些四周不存在比他小且 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; 1\)&lt;/span&gt; 的格子为坏的。&lt;/p&gt;
&lt;p&gt;一次交换我们最多可以改变 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个格子的状态（两个本身，以及他们四周），所以坏点多于 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个答案必然是 No。&lt;/p&gt;
&lt;p&gt;并且，一次交换的时候，我们交换的其中一个点必然是某个坏点或其旁边的四个格子，一共 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 个格子，考虑枚举之。&lt;/p&gt;
&lt;p&gt;然后 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt; 枚举另一个点，交换的时候我们只需判断&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有的坏点是否被都覆盖到了（最多 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个）；&lt;/li&gt;
&lt;li&gt;交换之后影响到的格子是否合法（最多 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;，带一个 &lt;span class=&#34;math inline&#34;&gt;\(20\times 5\)&lt;/span&gt; 的常数。为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的情况跑的时候顺便就可以计数，如果跑不出来那么就是 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;实际实现需要注意常数问题，以及&lt;strong&gt;跑点对的时候要去重&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb43&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb43-1&#34;&gt;&lt;a href=&#34;#cb43-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-2&#34;&gt;&lt;a href=&#34;#cb43-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-3&#34;&gt;&lt;a href=&#34;#cb43-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb43-4&#34;&gt;&lt;a href=&#34;#cb43-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define szof&lt;/span&gt;(a)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;((&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a).size())&lt;/span&gt;
&lt;span id=&#34;cb43-5&#34;&gt;&lt;a href=&#34;#cb43-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-6&#34;&gt;&lt;a href=&#34;#cb43-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb43-7&#34;&gt;&lt;a href=&#34;#cb43-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; pii = pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-8&#34;&gt;&lt;a href=&#34;#cb43-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, ans;&lt;/span&gt;
&lt;span id=&#34;cb43-9&#34;&gt;&lt;a href=&#34;#cb43-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; &amp;gt; a, vis, val;&lt;/span&gt;
&lt;span id=&#34;cb43-10&#34;&gt;&lt;a href=&#34;#cb43-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;pii&amp;gt; bad;&lt;/span&gt;
&lt;span id=&#34;cb43-11&#34;&gt;&lt;a href=&#34;#cb43-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fx[] = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb43-12&#34;&gt;&lt;a href=&#34;#cb43-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fy[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb43-13&#34;&gt;&lt;a href=&#34;#cb43-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-14&#34;&gt;&lt;a href=&#34;#cb43-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; bound(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-15&#34;&gt;&lt;a href=&#34;#cb43-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x &amp;lt;= n &amp;amp;&amp;amp; y &amp;lt;= m &amp;amp;&amp;amp; x &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; y &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-16&#34;&gt;&lt;a href=&#34;#cb43-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-17&#34;&gt;&lt;a href=&#34;#cb43-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-18&#34;&gt;&lt;a href=&#34;#cb43-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb43-19&#34;&gt;&lt;a href=&#34;#cb43-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a[x][y] == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ||&lt;/span&gt;
&lt;span id=&#34;cb43-20&#34;&gt;&lt;a href=&#34;#cb43-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= n &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][y]) ||&lt;/span&gt;
&lt;span id=&#34;cb43-21&#34;&gt;&lt;a href=&#34;#cb43-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][y]) ||&lt;/span&gt;
&lt;span id=&#34;cb43-22&#34;&gt;&lt;a href=&#34;#cb43-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;= m &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x][y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ||&lt;/span&gt;
&lt;span id=&#34;cb43-23&#34;&gt;&lt;a href=&#34;#cb43-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;           (y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; a[x][y] &amp;gt; a[x][y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb43-24&#34;&gt;&lt;a href=&#34;#cb43-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-25&#34;&gt;&lt;a href=&#34;#cb43-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-26&#34;&gt;&lt;a href=&#34;#cb43-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; check(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x1, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y1, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x2, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y2) {&lt;/span&gt;
&lt;span id=&#34;cb43-27&#34;&gt;&lt;a href=&#34;#cb43-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(a[x1][y1], a[x2][y2]);&lt;/span&gt;
&lt;span id=&#34;cb43-28&#34;&gt;&lt;a href=&#34;#cb43-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-29&#34;&gt;&lt;a href=&#34;#cb43-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-30&#34;&gt;&lt;a href=&#34;#cb43-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = x1 + fx[k], y = y1 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-31&#34;&gt;&lt;a href=&#34;#cb43-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!bound(x, y) || vis[x][y]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-32&#34;&gt;&lt;a href=&#34;#cb43-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[x][y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt += val[x][y] - (!check(x, y));&lt;/span&gt;
&lt;span id=&#34;cb43-33&#34;&gt;&lt;a href=&#34;#cb43-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-34&#34;&gt;&lt;a href=&#34;#cb43-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-35&#34;&gt;&lt;a href=&#34;#cb43-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = x2 + fx[k], y = y2 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-36&#34;&gt;&lt;a href=&#34;#cb43-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!bound(x, y) || vis[x][y]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-37&#34;&gt;&lt;a href=&#34;#cb43-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        vis[x][y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt += val[x][y] - (!check(x, y));&lt;/span&gt;
&lt;span id=&#34;cb43-38&#34;&gt;&lt;a href=&#34;#cb43-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-39&#34;&gt;&lt;a href=&#34;#cb43-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-40&#34;&gt;&lt;a href=&#34;#cb43-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = x1 + fx[k], y = y1 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-41&#34;&gt;&lt;a href=&#34;#cb43-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bound(x, y)) vis[x][y] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-42&#34;&gt;&lt;a href=&#34;#cb43-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x2 + fx[k], y = y2 + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-43&#34;&gt;&lt;a href=&#34;#cb43-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bound(x, y)) vis[x][y] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-44&#34;&gt;&lt;a href=&#34;#cb43-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-45&#34;&gt;&lt;a href=&#34;#cb43-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    swap(a[x1][y1], a[x2][y2]);&lt;/span&gt;
&lt;span id=&#34;cb43-46&#34;&gt;&lt;a href=&#34;#cb43-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cnt == bad.size();&lt;/span&gt;
&lt;span id=&#34;cb43-47&#34;&gt;&lt;a href=&#34;#cb43-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb43-48&#34;&gt;&lt;a href=&#34;#cb43-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-49&#34;&gt;&lt;a href=&#34;#cb43-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;unordered_set&amp;lt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&amp;gt; S;&lt;/span&gt;
&lt;span id=&#34;cb43-50&#34;&gt;&lt;a href=&#34;#cb43-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb43-51&#34;&gt;&lt;a href=&#34;#cb43-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb43-52&#34;&gt;&lt;a href=&#34;#cb43-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ios::sync_with_stdio(&lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-53&#34;&gt;&lt;a href=&#34;#cb43-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;&lt;/span&gt;
&lt;span id=&#34;cb43-54&#34;&gt;&lt;a href=&#34;#cb43-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a.resize(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), vis.resize(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), val.resize(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-55&#34;&gt;&lt;a href=&#34;#cb43-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb43-56&#34;&gt;&lt;a href=&#34;#cb43-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i].resize(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), vis[i].resize(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), val[i].resize(m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-57&#34;&gt;&lt;a href=&#34;#cb43-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) cin &amp;gt;&amp;gt; a[i][j];&lt;/span&gt;
&lt;span id=&#34;cb43-58&#34;&gt;&lt;a href=&#34;#cb43-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-59&#34;&gt;&lt;a href=&#34;#cb43-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(x, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(y, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!check(x, y)) bad.push_back({x, y}), val[x][y] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-60&#34;&gt;&lt;a href=&#34;#cb43-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bad.size() &amp;gt; &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-61&#34;&gt;&lt;a href=&#34;#cb43-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (bad.empty()) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-62&#34;&gt;&lt;a href=&#34;#cb43-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb43-63&#34;&gt;&lt;a href=&#34;#cb43-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = bad[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;].first + fx[k], y = bad[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;].second + fy[k];&lt;/span&gt;
&lt;span id=&#34;cb43-64&#34;&gt;&lt;a href=&#34;#cb43-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!bound(x, y)) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-65&#34;&gt;&lt;a href=&#34;#cb43-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb43-66&#34;&gt;&lt;a href=&#34;#cb43-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; hsh1 = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + y) * (n * m)) + ((i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + j),&lt;/span&gt;
&lt;span id=&#34;cb43-67&#34;&gt;&lt;a href=&#34;#cb43-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    hsh2 = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + j) * (n * m)) + ((x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * m + y);&lt;/span&gt;
&lt;span id=&#34;cb43-68&#34;&gt;&lt;a href=&#34;#cb43-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!S.count(hsh1) &amp;amp;&amp;amp; !S.count(hsh2)) ans += check(x, y, i, j), S.insert(hsh1), S.insert(hsh2);&lt;/span&gt;
&lt;span id=&#34;cb43-69&#34;&gt;&lt;a href=&#34;#cb43-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb43-70&#34;&gt;&lt;a href=&#34;#cb43-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb43-71&#34;&gt;&lt;a href=&#34;#cb43-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!ans) puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb43-72&#34;&gt;&lt;a href=&#34;#cb43-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;1 &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb43-73&#34;&gt;&lt;a href=&#34;#cb43-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb43-74&#34;&gt;&lt;a href=&#34;#cb43-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeforces-round-807-div-2.&#34;&gt;Codeforces Round #807 (Div 2.)&lt;/h2&gt;
&lt;h3 id=&#34;f---mark-and-the-online-exam&#34;&gt;1705F - Mark and the Online Exam&lt;/h3&gt;
&lt;p&gt;题意：猜一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\le 1000\)&lt;/span&gt; 的 0-1 序列，最多猜 &lt;span class=&#34;math inline&#34;&gt;\(675\)&lt;/span&gt; 次，交互库会返回猜对的位置数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/T183641&#34;&gt;原题&lt;/a&gt;，&lt;a href=&#34;https://www.luogu.com.cn/problem/P7848&#34;&gt;原题&lt;/a&gt;，&lt;a href=&#34;https://www.luogu.com.cn/blog/1973224568qq/kao-shi-2021-coe-iii-d#&#34;&gt;题解&lt;/a&gt;，其对于 &lt;span class=&#34;math inline&#34;&gt;\(n=5000\)&lt;/span&gt; 的限制为 &lt;span class=&#34;math inline&#34;&gt;\(q\le 1026\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(n / \log n\)&lt;/span&gt; 级别。&lt;/p&gt;
&lt;p&gt;此处浅翻译一下官方题解的 &lt;span class=&#34;math inline&#34;&gt;\(q \approx 2/3n\)&lt;/span&gt; 的做法。&lt;/p&gt;
&lt;p&gt;首先预处理询问 &lt;code&gt;TTT...TTT&lt;/code&gt; 和 &lt;code&gt;TFTFTF...TF&lt;/code&gt;，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(i= 1,2,\cdots, \lfloor n /3\rfloor\)&lt;/span&gt;，我们可以轻松计算 &lt;span class=&#34;math inline&#34;&gt;\(2i - 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(2i\)&lt;/span&gt; 的答案，具体地我们将其设为 &lt;code&gt;F&lt;/code&gt;，其他都是 &lt;code&gt;T&lt;/code&gt;，然后算得的答案和全 &lt;code&gt;T&lt;/code&gt; 的比较：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(+2\)&lt;/span&gt;，则两个都是 &lt;code&gt;F&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;，则两个都是 &lt;code&gt;T&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则要么 &lt;code&gt;FT&lt;/code&gt; 要么 &lt;code&gt;TR&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于另外一种情况，我们可以用一次额外的询问来判断，即将其与 &lt;code&gt;TFTFTF...&lt;/code&gt; 的比较： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm{TFTF}...\mathrm{TF}...\mathrm{T}...\mathrm{TF}\\
\mathrm{TFTF}...\mathrm{\color{red}FT}...\mathrm{\color{red}F}...\mathrm{TF}\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;答案为 &lt;code&gt;TFT&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(-3\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;答案为 &lt;code&gt;TFF&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;答案为 &lt;code&gt;FTT&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(+1\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;答案为 &lt;code&gt;FTF&lt;/code&gt;，则差距为 &lt;span class=&#34;math inline&#34;&gt;\(+3\)&lt;/span&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是我们往右边多询问一位就可以得到答案了。解决 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个位置需要两个问题，所以 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 的级别大概是 &lt;span class=&#34;math inline&#34;&gt;\(2/3q\)&lt;/span&gt;，足以通过本题。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb44&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb44-1&#34;&gt;&lt;a href=&#34;#cb44-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-2&#34;&gt;&lt;a href=&#34;#cb44-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb44-3&#34;&gt;&lt;a href=&#34;#cb44-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-4&#34;&gt;&lt;a href=&#34;#cb44-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb44-5&#34;&gt;&lt;a href=&#34;#cb44-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-6&#34;&gt;&lt;a href=&#34;#cb44-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(string s) {&lt;/span&gt;
&lt;span id=&#34;cb44-7&#34;&gt;&lt;a href=&#34;#cb44-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb44-8&#34;&gt;&lt;a href=&#34;#cb44-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout.flush();&lt;/span&gt;
&lt;span id=&#34;cb44-9&#34;&gt;&lt;a href=&#34;#cb44-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb44-10&#34;&gt;&lt;a href=&#34;#cb44-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x == n) puts(n &amp;gt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt; ? &lt;span class=&#34;st&#34;&gt;&amp;quot;sb&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;), exit(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb44-11&#34;&gt;&lt;a href=&#34;#cb44-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb44-12&#34;&gt;&lt;a href=&#34;#cb44-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb44-13&#34;&gt;&lt;a href=&#34;#cb44-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-14&#34;&gt;&lt;a href=&#34;#cb44-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb44-15&#34;&gt;&lt;a href=&#34;#cb44-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb44-16&#34;&gt;&lt;a href=&#34;#cb44-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    string allT(n, &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;), ans(n, &lt;span class=&#34;ch&#34;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb44-17&#34;&gt;&lt;a href=&#34;#cb44-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cntT = query(allT);&lt;/span&gt;
&lt;span id=&#34;cb44-18&#34;&gt;&lt;a href=&#34;#cb44-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-19&#34;&gt;&lt;a href=&#34;#cb44-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    string allTF(n, &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb44-20&#34;&gt;&lt;a href=&#34;#cb44-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt; n; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) allTF[i] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-21&#34;&gt;&lt;a href=&#34;#cb44-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cntTF = query(allTF);&lt;/span&gt;
&lt;span id=&#34;cb44-22&#34;&gt;&lt;a href=&#34;#cb44-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-23&#34;&gt;&lt;a href=&#34;#cb44-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-24&#34;&gt;&lt;a href=&#34;#cb44-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (r &amp;gt;= l) {&lt;/span&gt;
&lt;span id=&#34;cb44-25&#34;&gt;&lt;a href=&#34;#cb44-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r == l) {&lt;/span&gt;
&lt;span id=&#34;cb44-26&#34;&gt;&lt;a href=&#34;#cb44-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            string s(allT);&lt;/span&gt;
&lt;span id=&#34;cb44-27&#34;&gt;&lt;a href=&#34;#cb44-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-28&#34;&gt;&lt;a href=&#34;#cb44-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s);&lt;/span&gt;
&lt;span id=&#34;cb44-29&#34;&gt;&lt;a href=&#34;#cb44-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; cntT) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-30&#34;&gt;&lt;a href=&#34;#cb44-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-31&#34;&gt;&lt;a href=&#34;#cb44-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++l, --r;&lt;/span&gt;
&lt;span id=&#34;cb44-32&#34;&gt;&lt;a href=&#34;#cb44-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb44-33&#34;&gt;&lt;a href=&#34;#cb44-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            string s(allT);&lt;/span&gt;
&lt;span id=&#34;cb44-34&#34;&gt;&lt;a href=&#34;#cb44-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, s[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-35&#34;&gt;&lt;a href=&#34;#cb44-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s) - cntT;&lt;/span&gt;
&lt;span id=&#34;cb44-36&#34;&gt;&lt;a href=&#34;#cb44-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb44-37&#34;&gt;&lt;a href=&#34;#cb44-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans[l] = ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-38&#34;&gt;&lt;a href=&#34;#cb44-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-39&#34;&gt;&lt;a href=&#34;#cb44-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == -&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb44-40&#34;&gt;&lt;a href=&#34;#cb44-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans[l] = ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-41&#34;&gt;&lt;a href=&#34;#cb44-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-42&#34;&gt;&lt;a href=&#34;#cb44-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb44-43&#34;&gt;&lt;a href=&#34;#cb44-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r == l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb44-44&#34;&gt;&lt;a href=&#34;#cb44-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    s = allT, s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-45&#34;&gt;&lt;a href=&#34;#cb44-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s);&lt;/span&gt;
&lt;span id=&#34;cb44-46&#34;&gt;&lt;a href=&#34;#cb44-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt; cntT) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-47&#34;&gt;&lt;a href=&#34;#cb44-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-48&#34;&gt;&lt;a href=&#34;#cb44-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-49&#34;&gt;&lt;a href=&#34;#cb44-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb44-50&#34;&gt;&lt;a href=&#34;#cb44-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    s = allTF;&lt;/span&gt;
&lt;span id=&#34;cb44-51&#34;&gt;&lt;a href=&#34;#cb44-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    s[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, s[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-52&#34;&gt;&lt;a href=&#34;#cb44-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[r] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;) s[r] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-53&#34;&gt;&lt;a href=&#34;#cb44-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; s[r] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-54&#34;&gt;&lt;a href=&#34;#cb44-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-55&#34;&gt;&lt;a href=&#34;#cb44-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = query(s) - cntTF;&lt;/span&gt;
&lt;span id=&#34;cb44-56&#34;&gt;&lt;a href=&#34;#cb44-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[r] = s[r];&lt;/span&gt;
&lt;span id=&#34;cb44-57&#34;&gt;&lt;a href=&#34;#cb44-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[r] = allTF[r];&lt;/span&gt;
&lt;span id=&#34;cb44-58&#34;&gt;&lt;a href=&#34;#cb44-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[r] = s[r];&lt;/span&gt;
&lt;span id=&#34;cb44-59&#34;&gt;&lt;a href=&#34;#cb44-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans[l] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;T&amp;#39;&lt;/span&gt;, ans[l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;ch&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;, ans[r] = allTF[r];&lt;/span&gt;
&lt;span id=&#34;cb44-60&#34;&gt;&lt;a href=&#34;#cb44-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb44-61&#34;&gt;&lt;a href=&#34;#cb44-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    l += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, --r;&lt;/span&gt;
&lt;span id=&#34;cb44-62&#34;&gt;&lt;a href=&#34;#cb44-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb44-63&#34;&gt;&lt;a href=&#34;#cb44-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb44-64&#34;&gt;&lt;a href=&#34;#cb44-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb44-65&#34;&gt;&lt;a href=&#34;#cb44-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb44-66&#34;&gt;&lt;a href=&#34;#cb44-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    query(ans);&lt;/span&gt;
&lt;span id=&#34;cb44-67&#34;&gt;&lt;a href=&#34;#cb44-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb44-68&#34;&gt;&lt;a href=&#34;#cb44-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;codeton-round-2&#34;&gt;CodeTON Round 2&lt;/h2&gt;
&lt;h3 id=&#34;f---colouring-game&#34;&gt;1704F - Colouring Game&lt;/h3&gt;
&lt;p&gt;在有 &lt;code&gt;RB&lt;/code&gt; 和 &lt;code&gt;BR&lt;/code&gt; 的时候，双方策略都是先直接去消这个，因为这样能尽可能消耗对面的字母。&lt;/p&gt;
&lt;p&gt;然后没有相邻红蓝方格之后，这个肯定就是后手必胜了。所以只考虑第一阶段，公平组合游戏，求 SG，打表&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-813-div.-2&#34;&gt;Codeforces Round #813 (Div. 2)&lt;/h2&gt;
&lt;h3 id=&#34;e2---lcm-sum-hard-version&#34;&gt;1712E2 - LCM Sum (hard version)&lt;/h3&gt;
&lt;p&gt;题意：问满足 &lt;span class=&#34;math inline&#34;&gt;\(l\le i&amp;lt; j &amp;lt; k\le r\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}(i,j,k)\ge i + j + k\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\((i,j,k)\)&lt;/span&gt; 对数。&lt;span class=&#34;math inline&#34;&gt;\(T\le 2\times 10^5\)&lt;/span&gt; 组询问，&lt;span class=&#34;math inline&#34;&gt;\(l,r\le 2\times 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑 E1，即 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 很小的情况。首先转化为数 &lt;span class=&#34;math inline&#34;&gt;\([i,j,k] &amp;lt; i + j +k\)&lt;/span&gt; 的情况，而这样的 &lt;span class=&#34;math inline&#34;&gt;\([i,j,k]\)&lt;/span&gt; 显然 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt; 3k\)&lt;/span&gt;，所以取值只能为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(2k\)&lt;/span&gt;。那么考虑枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\([i,j,k] = k\)&lt;/span&gt; 的情况很好处理，即 &lt;span class=&#34;math inline&#34;&gt;\(i,j\)&lt;/span&gt; 需要为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的因数，此时显然 &lt;span class=&#34;math inline&#34;&gt;\(k&amp;lt;i + j + k\)&lt;/span&gt;，可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 计算。&lt;/p&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm} = 2k\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(i,j,k\)&lt;/span&gt; 只可能形如 &lt;span class=&#34;math inline&#34;&gt;\(3t,4t,6t\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\(6t, 10t, 15t\)&lt;/span&gt; 的形式（打表可以发现），下面给出证明：&lt;/p&gt;
&lt;p&gt;因为 &lt;span class=&#34;math inline&#34;&gt;\(i+j &amp;gt; k \land i &amp;lt; j\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(j &amp;gt; k / 2\)&lt;/span&gt;，设 &lt;span class=&#34;math inline&#34;&gt;\(2k = j\times p\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(k/2 &amp;lt; 2k/p &amp;lt; k\)&lt;/span&gt;，解得 &lt;span class=&#34;math inline&#34;&gt;\(2&amp;lt;p&amp;lt;4\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(p = 3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(j = 2k/3\)&lt;/span&gt;。由 &lt;span class=&#34;math inline&#34;&gt;\(i + j &amp;gt; k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(i &amp;gt; k / 3\)&lt;/span&gt;，设 &lt;span class=&#34;math inline&#34;&gt;\(2k = i \times q\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(k / 3 &amp;lt; 2k/q &amp;lt; k\)&lt;/span&gt;，解得 &lt;span class=&#34;math inline&#34;&gt;\(3&amp;lt;q&amp;lt;6\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(q= 4\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;，对应的 &lt;span class=&#34;math inline&#34;&gt;\(i = k / 2\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(2k / 5\)&lt;/span&gt;。证毕。&lt;/p&gt;
&lt;p&gt;所以对于 &lt;span class=&#34;math inline&#34;&gt;\(15\mid k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(6\mid k\)&lt;/span&gt; 的时候，特判一下即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb45&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb45-1&#34;&gt;&lt;a href=&#34;#cb45-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-2&#34;&gt;&lt;a href=&#34;#cb45-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-3&#34;&gt;&lt;a href=&#34;#cb45-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb45-4&#34;&gt;&lt;a href=&#34;#cb45-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define szof&lt;/span&gt;(a)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;((&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a).size())&lt;/span&gt;
&lt;span id=&#34;cb45-5&#34;&gt;&lt;a href=&#34;#cb45-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-6&#34;&gt;&lt;a href=&#34;#cb45-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb45-7&#34;&gt;&lt;a href=&#34;#cb45-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-8&#34;&gt;&lt;a href=&#34;#cb45-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;4e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;4e5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-9&#34;&gt;&lt;a href=&#34;#cb45-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; fact[maxn];&lt;/span&gt;
&lt;span id=&#34;cb45-10&#34;&gt;&lt;a href=&#34;#cb45-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-11&#34;&gt;&lt;a href=&#34;#cb45-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll binom(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * n / &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb45-12&#34;&gt;&lt;a href=&#34;#cb45-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-13&#34;&gt;&lt;a href=&#34;#cb45-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r) { &lt;span class=&#34;co&#34;&gt;// count lcm(i, j, k) &amp;lt; i + j + k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-14&#34;&gt;&lt;a href=&#34;#cb45-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-15&#34;&gt;&lt;a href=&#34;#cb45-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, l + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r) {&lt;/span&gt;
&lt;span id=&#34;cb45-16&#34;&gt;&lt;a href=&#34;#cb45-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-17&#34;&gt;&lt;a href=&#34;#cb45-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x : fact[k]) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;gt;= l &amp;amp;&amp;amp; x &amp;lt; k) ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb45-18&#34;&gt;&lt;a href=&#34;#cb45-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += cnt * (cnt - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; &lt;span class=&#34;co&#34;&gt;// lcm = k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-19&#34;&gt;&lt;a href=&#34;#cb45-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k % &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; k / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;gt;= l) ++ret;&lt;/span&gt;
&lt;span id=&#34;cb45-20&#34;&gt;&lt;a href=&#34;#cb45-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k % &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; k * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; / &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt; &amp;gt;= l) ++ret; &lt;span class=&#34;co&#34;&gt;// lcm = 2k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-21&#34;&gt;&lt;a href=&#34;#cb45-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb45-22&#34;&gt;&lt;a href=&#34;#cb45-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb45-23&#34;&gt;&lt;a href=&#34;#cb45-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb45-24&#34;&gt;&lt;a href=&#34;#cb45-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb45-25&#34;&gt;&lt;a href=&#34;#cb45-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb45-26&#34;&gt;&lt;a href=&#34;#cb45-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, N) &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i; j &amp;lt;= N; j += i) fact[j].emplace_back(i);&lt;/span&gt;
&lt;span id=&#34;cb45-27&#34;&gt;&lt;a href=&#34;#cb45-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb45-28&#34;&gt;&lt;a href=&#34;#cb45-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb45-29&#34;&gt;&lt;a href=&#34;#cb45-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, r; cin &amp;gt;&amp;gt; l &amp;gt;&amp;gt; r;&lt;/span&gt;
&lt;span id=&#34;cb45-30&#34;&gt;&lt;a href=&#34;#cb45-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; binom(r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) - solve(l, r) &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb45-31&#34;&gt;&lt;a href=&#34;#cb45-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb45-32&#34;&gt;&lt;a href=&#34;#cb45-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb45-33&#34;&gt;&lt;a href=&#34;#cb45-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于 E2，我们将上面这个过程离线下来扫描线即可，倒序枚举 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt;，维护 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 的答案。相当于我们其实需要维护因数集合的大小，发现 &lt;span class=&#34;math inline&#34;&gt;\(x(x-1)/2\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((x+1)x/2\)&lt;/span&gt; 之间相差 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，所以用树状数组还是比较好维护的。而对于 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm} = 2k\)&lt;/span&gt; 的情况，因为我们枚举的是 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，所以在 &lt;span class=&#34;math inline&#34;&gt;\(3\mid i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(6\mid i\)&lt;/span&gt; 的时候判一下就可以了。&lt;/p&gt;
&lt;h2 id=&#34;codeforces-round-815-div.-2&#34;&gt;Codeforces Round #815 (Div. 2)&lt;/h2&gt;
&lt;p&gt;A FST 了，本来能打出 2400+ 的 perf 的 &lt;img src=&#34;https://啧.tk/tuu&#34; /&gt;。&lt;/p&gt;
&lt;h3 id=&#34;e---misha-and-paintings&#34;&gt;1720E - Misha and Paintings&lt;/h3&gt;
&lt;p&gt;有一个 &lt;span class=&#34;math inline&#34;&gt;\(n\times n\)&lt;/span&gt; 的矩阵，&lt;span class=&#34;math inline&#34;&gt;\(n\le 500\)&lt;/span&gt;，每个位置有一个值 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(1\le v\le n^2\)&lt;/span&gt;，每次操作可以选择一个子方阵然后直接染色，要求 &lt;span class=&#34;math inline&#34;&gt;\(1\le x\le n^2\)&lt;/span&gt;。现在给定一个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，问最少多少次操作使得矩阵中不同的数刚好有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;首先，设一开始有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 种不同的数，则若 &lt;span class=&#34;math inline&#34;&gt;\(m \le k\)&lt;/span&gt;，则显然答案为 &lt;span class=&#34;math inline&#34;&gt;\(k - m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在考虑 &lt;span class=&#34;math inline&#34;&gt;\(k &amp;lt; m\)&lt;/span&gt; 的情况，下面给出答案不超过 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的构造证明。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;选一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; 的尽可能大的正方形，将里面全部涂为一个未出现的颜色，使得现在不同的数恰 &lt;span class=&#34;math inline&#34;&gt;\(\ge k\)&lt;/span&gt; 个。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后这个正方形的右下角开始（相当于 &lt;span class=&#34;math inline&#34;&gt;\((L + 1, L + 1)\)&lt;/span&gt; 扩展），涂为一个未出现的颜色，使得现在不同的数恰 &lt;span class=&#34;math inline&#34;&gt;\(\le k\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;容易发现这样相当于一次扩展两格，最后不同的数只可能有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个或 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 个，对于后者我们把涂的颜色变为一个已出现的即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是只需要判断答案是否为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。于是需要对于 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 个正方形找到其完全包含了多少数字，这个可以用二维前缀和什么的处理一下。总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Summary 2022 08</title>
        <link>https://oi.imyangty.com/summary-2022-08/</link>
        <pubDate>Wed, 10 Aug 2022 14:31:39 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-08/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg31.webp" alt="Featured image of post Summary 2022 08" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;优雅的告别。&lt;/p&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/08/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/contest/689&#34;&gt;NOI2022金牌冲刺营内部训练-6&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;24 + 100 + 0。T2 原题，T1 写挂了（哭，漏了判断一种 corner case）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/problem/2673&#34;&gt;NOI.AC#2673. 诺维格瑞的街道&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;7.30 B &lt;a href=&#34;https://oi.imyangty.com/summary-noitraining&#34;&gt;斜率优化&lt;/a&gt;，树套李超树过不去，只能 cdq 分治转移。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5043&#34;&gt;P5043 【模板】树同构（[BJOI2015]树的同构）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;树哈希模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/problem/541&#34;&gt;NOI.AC#541. 树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;7.28 C 毒瘤&lt;a href=&#34;https://oi.imyangty.com/summary-noitraining/&#34;&gt;树哈希 + dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/08/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/contest/690&#34;&gt;NOI2022金牌冲刺营内部训练-7&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;7 + 0 + 0。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/problem/2697&#34;&gt;NOI.AC#2697. 取石子&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当天的 A。考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\exist x_i\in[a,b]\)&lt;/span&gt; 的时候 Alice 必胜，然后考虑把这些状态从图上删掉来跑 &lt;a href=&#34;https://oi.imyangty.com/summary-noitraining/&#34;&gt;SG 函数&lt;/a&gt;，然后打表找规律。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/problem/2699&#34;&gt;NOI.AC#2699. 树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当天的 C。莫比乌斯反演，然后上&lt;a href=&#34;https://oi.imyangty.com/summary-noitraining/&#34;&gt;线段树分治&lt;/a&gt;来统计。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/08/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/contest/702&#34;&gt;NOI2022金牌冲刺营内部训练-8&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;快乐爆零了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/08/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/contest/705&#34;&gt;NOI2022全国挑战赛 Contes5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;余跃的阴间场，0 + 0 + 0。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/08/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/contest/706&#34;&gt;NOI2022全国挑战赛 Contes6&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;nealchen 的毒瘤 round。30 + 20 + 0。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/08/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4305&#34;&gt;P4305 [JLOI2011]不重复数字&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;傻逼卡常题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1638&#34;&gt;P1638 逛画展&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不小心写挂了的双指针。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/08/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/contest/711&#34;&gt;NOI2022金牌冲刺营内部训练-9&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;0 + 15 + 0。但其实好像本身不是特别难。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3916&#34;&gt;P3916 图的遍历&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;讲课的时候顺手切的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2912&#34;&gt;P2912 [USACO08OCT]Pasture Walking G&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;讲课的时候顺手切的 LCA。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/08/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/contest/712&#34;&gt;NOI2022金牌冲刺营内部训练-10&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;60 + 100 + 0。打的还行。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/problem/543&#34;&gt;NOI.AC#543. 商店&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可并堆，使用并查集进行神奇的优化。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4211&#34;&gt;P4211 [LNOI2014]LCA&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;差分 + 离线下来之后&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5305/&#34;&gt;树剖&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT4431&#34;&gt;ARC103A - ////&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;判断奇偶位置即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5305&#34;&gt;P5305 [GXOI/GZOI2019]旧词&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本质还是差分 + 离线下来之后&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5305/&#34;&gt;树剖&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/08/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/contest/713&#34;&gt;NOI2022金牌冲刺营内部训练-11&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;100 + 50 + 0。打的还行，最后冲出来 B 50pts 了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;22/08/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/contest/718&#34;&gt;NOI2022全国挑战赛 Contest8&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;0 + 0 + 0，日你妈，A 不会，心态有点崩。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;22/08/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/contest/719&#34;&gt;NOI2022金牌冲刺营内部训练-12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;20 + 0 + 0，A 贪心假了，去你妈的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/problem/547&#34;&gt;NOI.AC#547. 归并&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;权值线段树 + 平衡树，很牛逼。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;22/08/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/contest/720&#34;&gt;NOI2022全国挑战赛 Contest9&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;95 + 0 + 30，T1 惨遭卡常，但是这个 T2 也是。。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/problem/2786&#34;&gt;NOI.AC#2786. 超立方体&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单构造。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/problem/2782&#34;&gt;NOI.AC#2782. 观察笔记&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;结论 + 二分图匹配。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT4378&#34;&gt;AGC027D Modulo Matrix&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-agc027d/&#34;&gt;构造&lt;/a&gt;，对角线上安排质数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF715B&#34;&gt;CF715B Complete The Graph&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最短路 + &lt;a href=&#34;https://oi.imyangty.com/sol-cf715b/&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;22/08/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/contest/721&#34;&gt;NOI2022全国挑战赛 Contest10&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;100 + 0 + 0，心态狠狠的崩。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://119.28.3.174/problem/2791&#34;&gt;NOI.AC#2791. 历史&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上午 C，其实是很简单的背包。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2022年7月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2022-07/</link>
        <pubDate>Mon, 04 Jul 2022 21:52:02 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-07/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg24.webp" alt="Featured image of post 2022年7月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;这个系列文章的倒数第二篇了，令人感慨。三年前的自己何尝想过自己现在也成了即将退役的 NOI 选手呢？&lt;/p&gt;
&lt;p&gt;加油吧。&lt;/p&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/07/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5219&#34;&gt;P5219 无聊的水题 I&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Prufer 序列转成排列计数，EGF。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5339&#34;&gt;P5339 [TJOI2019]唱、跳、rap和篮球&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二项式反演之后变成排列计数，EGF。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/07/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3557&#34;&gt;P3557 [POI2013]GRA-Tower Defense Game&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3557&#34;&gt;傻逼构造，直接莽&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF317C&#34;&gt;CF317C Balance&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较有意思的&lt;a href=&#34;https://oi.imyangty.com/sol-cf317c/&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/07/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6624&#34;&gt;P6624 [省选联考 2020 A 卷] 作业题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先莫反，然后 &lt;span class=&#34;math inline&#34;&gt;\((1+w_ix)\)&lt;/span&gt;，&lt;a href=&#34;https://oi.imyangty.com/sol-lhsx2020/&#34;&gt;矩阵树&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5296&#34;&gt;P5296 [北京省选集训2019]生成树计数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(e^{w_ix}\)&lt;/span&gt;，&lt;a href=&#34;https://oi.imyangty.com/note-gf/&#34;&gt;矩阵树&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5162&#34;&gt;P5162 WD与积木&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先拆分成两个问题，然后变成&lt;a href=&#34;https://oi.imyangty.com/note-gf/&#34;&gt;有序集合划分&lt;/a&gt;，直接 NTT + 求逆。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/07/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2046&#34;&gt;P2046 [NOI2010] 海拔&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2046/&#34;&gt;平面图最小割&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2801&#34;&gt;P2801 教主的魔法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般通过 LOJ 分块 2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5356&#34;&gt;P5356 [Ynoi2017] 由乃打扑克&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summ&#34;&gt;卡常&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/07/10&lt;/h3&gt;
&lt;p&gt;之前搞学考去了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4135&#34;&gt;P4135 作诗&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分块。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5048&#34;&gt;P5048 [Ynoi2019 模拟赛] Yuno loves sqrt technology III&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vector 省空间。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/07/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4462&#34;&gt;P4462 [CQOI2018]异或序列&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接莫队。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3242&#34;&gt;P3242 [HNOI2015] 接水果&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;dfs 序转化为矩形覆盖，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3242/&#34;&gt;扫描线后整体二分&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3746&#34;&gt;P3746 [六省联考 2017] 组合数问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;循环卷积快速幂。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/07/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5268&#34;&gt;P5268 [SNOI2017]一个简单的询问&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将问题差分 + 容斥之后上&lt;a href=&#34;https://oi.imyangty.com/summary-ds4&#34;&gt;莫队&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4689&#34;&gt;P4689 [Ynoi2016] 这是我自己的发明&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4689/&#34;&gt;上题的上树加强版&lt;/a&gt;，换根其实是吓唬人的，在 dfs 序上都是连续区间，可以容斥优化。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4396&#34;&gt;P4396 [AHOI2013]作业&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;和 HH 的项链差不多的维护上一个出现位置的套路，&lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 三维数点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5906&#34;&gt;P5906 【模板】回滚莫队&amp;amp;不删除莫队&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;维护每个数的前驱后继，回滚即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P8078&#34;&gt;P8078 [WC2022] 秃子酋长&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用链表维护前驱后继然后上只删除的回滚莫队。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4887&#34;&gt;P4887 【模板】莫队二次离线（第十四分块(前体)）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;莫二离模板。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/07/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3674&#34;&gt;P3674 小清新人渣的本愿&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;莫队 + bitset。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5047&#34;&gt;P5047 [Ynoi2019 模拟赛] Yuno loves sqrt technology II&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;莫二离，&lt;strong&gt;AC 1.3k&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3709&#34;&gt;P3709 大爷的字符串题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般通过回滚莫队。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1479B1&#34;&gt;CF1479B1 Painting the Array I&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不会做的神秘贪心。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1479B2&#34;&gt;CF1479B2 Painting the Array II&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按着上面的方法贪就可以了，当然也可以线段树优化 dp。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1479C&#34;&gt;CF1479C Continuous City&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 32\)&lt;/span&gt;，所以利用二进制拆位合成数的方法构造。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1479D&#34;&gt;CF1479D Odd Mineral Resource&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;随机化 + 主席树&lt;/a&gt;或者&lt;a href=&#34;https://oi.imyangty.com/summary-ds4&#34;&gt;莫队 + 值域分块&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1477A&#34;&gt;CF1477A Nezzar and Board&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;排序 + 差分 + &lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;裴蜀定理&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/07/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3604&#34;&gt;P3604 美好的每一天&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;清新莫队。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1477B&#34;&gt;CF1477B Nezzar and Binary String&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;倒着考虑问题，所以直接上线段树就可以了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1477C&#34;&gt;CF1477C Nezzar and Nice Beatmap&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每次选距离自己最远的点就一定不会产生钝角。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VP &lt;a href=&#34;https://codeforces.com/contest/1517&#34;&gt;Contest 2050 and Codeforces Round #718 (Div. 1 + Div. 2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D，E 不会实现细节，哭。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1517E&#34;&gt;CF1517E Group Photo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;划分为两种类型之后，第二种类型使用二分来查找即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VP &lt;a href=&#34;https://codeforces.com/contest/1485&#34;&gt;Codeforces Round #701 (Div. 2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A + C + D，B 曾经写过。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1485E&#34;&gt;CF1485E Move and Swap&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实并不难的一个优化 dp，注意到红点性质较为特殊，将其位置计入状态，转移拆开来优化下即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1485F&#34;&gt;CF1485F Copy or Prefix Sum&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也是考虑优化朴素 dp 的转移，不难。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;22/07/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;VP &lt;a href=&#34;https://codeforces.com/contest/1626&#34;&gt;Educational Codeforces Round 121 (Rated for Div. 2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D，手速有点慢了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1626E&#34;&gt;CF1626E Black and White Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;弱智换根 dp，居然没想到。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1626F&#34;&gt;CF1626F A Random Code Problem&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;非常牛逼的 dp。dp 计算 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 次操作后 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的出现次数，由于 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor a_i/L\rfloor\)&lt;/span&gt; 无论如何不会被改变，所以只对 &lt;span class=&#34;math inline&#34;&gt;\(a_i\bmod L\)&lt;/span&gt; 的部分 dp 即可，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n + kL)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VP &lt;a href=&#34;https://codeforces.com/contest/1633&#34;&gt;Educational Codeforces Round 122 (Rated for Div. 2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D，E 想到正解但是写法冲不完了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1633E&#34;&gt;CF1633E Spanning Tree Queries&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;细节 1：将权值全部乘 2 来避免交点小数问题；细节 2：Kruskal 的时候让加入的尽可能为减函数，排序第二关键字原权降序；细节 3：直接 upper_bound 即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1633F&#34;&gt;CF1633F Perfect Matching&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑到就是动态加叶子，求树的完美匹配，使用线段树维护区间反转啥的即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://codeforces.com/contest/1705&#34;&gt;Codeforces Round #807 (Div. 2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + E，rk140。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;22/07/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;VP &lt;a href=&#34;https://codeforces.com/contest/1504&#34;&gt;Codeforces Round #712 (Div. 2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;哈哈。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1503C&#34;&gt;CF1503C Travelling Salesman Problem&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;奇怪的贪心题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1705/problem/F&#34;&gt;CF1705F - Mark and the Online Exam&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;牛逼题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;22/07/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF797E&#34;&gt;CF797E Array Queries&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;裸的根号分治。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1039D&#34;&gt;CF1039D You Are Given a Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根号分治 + 树形 dp。dp 维护往上伸出的链长。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3396&#34;&gt;P3396 哈希冲突&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单根号分治。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6328&#34;&gt;P6328 我是仙人掌&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;傻逼 &lt;code&gt;bitset&lt;/code&gt; 题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;22/07/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6177&#34;&gt;P6177 Count on a tree II/【模板】树分块&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;树分块模板，记得 &lt;code&gt;bitset::operator|&lt;/code&gt; 不会立即销毁临时对象。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1708B&#34;&gt;CF1708B Difference of GCDs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;憨憨构造，&lt;span class=&#34;math inline&#34;&gt;\(a_i = \lceil l / i\rceil i\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2325&#34;&gt;P2325 [SCOI2005]王室联邦&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数分块，考虑子树未分配点个数 &lt;span class=&#34;math inline&#34;&gt;\(\ge B\)&lt;/span&gt; 的时候就凑一块，令根为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;22/07/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF506D&#34;&gt;CF506D Mr. Kitayuta’s Colorful Graph&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据颜色的出现次数根号分治。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5046&#34;&gt;P5046 [Ynoi2019 模拟赛] Yuno loves sqrt technology I&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;毒瘤分块。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-14&#34;&gt;22/07/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.net/problem/TopCoder-12432&#34;&gt;TopCoder12432 CurvyonRails&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对棋盘黑白染色以区分出入点，然后跑&lt;a href=&#34;https://oi.imyangty.com/sol-topcoder-12432/&#34;&gt;费用流&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3965&#34;&gt;P3965 [TJOI2013]循环格&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所有点的入度都是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 才能形成若干环，拆点费用流即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.net/problem/TopCoder-12418&#34;&gt;TopCoder12418 BoardPainting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑用集合划分&lt;a href=&#34;https://oi.imyangty.com/sol-topcoder-12418/&#34;&gt;最小割&lt;/a&gt;数端点数量然后除以二。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3227&#34;&gt;P3227 [HNOI2013]切糕&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这种变量取值问题考虑最小割，相邻的所谓限制就连 &lt;span class=&#34;math inline&#34;&gt;\(\inf\)&lt;/span&gt; 边解决。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.net/problem/TopCoder-12727/&#34;&gt;TopCoder12727 FoxAndCity&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同上，注意处理边界条件（&lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 号点的取值限制相关）。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-15&#34;&gt;22/07/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.csgrandeur.cn/problem/CodeChef-CYCLECOL&#34;&gt;CodeChef CYCLECOL&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较清新的小&lt;a href=&#34;https://oi.imyangty.com/sol-codechef-cyclecol/&#34;&gt;图论题&lt;/a&gt;，考虑去掉任意一棵生成树。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.csgrandeur.cn/problem/TopCoder-12158/&#34;&gt;TopCoder12158 SurroundingGame&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拜谢，拜谢，考虑用&lt;a href=&#34;https://oi.imyangty.com/summary-graph3/&#34;&gt;最小割&lt;/a&gt;来处理互斥的贡献。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.csgrandeur.cn/problem/TopCoder-14719&#34;&gt;TopCoder14719 RatingProgressAward&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-graph3/&#34;&gt;最小割&lt;/a&gt;，将一个点的状态拆分成三种，用 &lt;span class=&#34;math inline&#34;&gt;\(\inf\)&lt;/span&gt; 边处理段间性质。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF717G&#34;&gt;CF717G Underfail&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;萌萌&lt;a href=&#34;https://oi.imyangty.com/summary-graph3/&#34;&gt;费用流&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://noi.ac/problem/286&#34;&gt;NOI.AC#286. 集合&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;D2T1，推式子题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-16&#34;&gt;22/07/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6139&#34;&gt;P6139 【模板】广义后缀自动机（广义 SAM）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;广义 SAM 模板。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-17&#34;&gt;22/07/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF204E&#34;&gt;CF204E Little Elephant and Strings&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;线段树合并维护广义 SAM 上状态对应的母串集合。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-18&#34;&gt;22/07/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4480&#34;&gt;P4480 [BJWC2018]餐巾计划问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据费用流的凸性可以三分一个强制买的毛巾数量，然后贪心。策略是优先买，其次优先选慢洗，再其次选最晚加入队列的快洗（尽可能让早的变成慢洗）。快慢洗费用出现反转的话 &lt;code&gt;swap&lt;/code&gt; 之。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1037H&#34;&gt;CF1037H Security&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;线段树合并维护 edp，查询指定区间串匹配类问题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6640&#34;&gt;P6640 [BJOI2020] 封印&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 建 SAM，然后对于这个式子 &lt;span class=&#34;math inline&#34;&gt;\(\max\limits_{i=l}^r\{\min(f_i, i - l + 1)\}\)&lt;/span&gt; 考虑二分答案，在 &lt;span class=&#34;math inline&#34;&gt;\([l+mid-1, r]\)&lt;/span&gt; 查最大值。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2022年6月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2022-06/</link>
        <pubDate>Wed, 01 Jun 2022 20:27:47 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-06/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg2.webp" alt="Featured image of post 2022年6月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;摆。&lt;/p&gt;
&lt;p&gt;马上就结束了 &lt;img src=&#34;https://啧.tk/hsh&#34; /&gt;。&lt;/p&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/06/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1661E&#34;&gt;CF1661E Narrow Components&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;陈年老补，线段树上用并查集维护连通性。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1688&#34;&gt;Codeforces Round #796 (Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + E。rk181。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/06/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1661F&#34;&gt;CF1661F Teleporters&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先分段处理，然后根据凸性进行二分答案。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/06/12&lt;/h3&gt;
&lt;p&gt;开始停课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1687D&#34;&gt;CF1687D Cute number&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;神秘萌萌题，找规律然后调和暴力判断。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6847&#34;&gt;P6847 [CEOI2019] Magic Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p6847/&#34;&gt;dp，用 &lt;code&gt;map&lt;/code&gt; 维护拐点，启发式合并优化&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/06/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://xjoi.net/contest/3867&#34;&gt;&lt;strong&gt;NOI2022省选赛前训练16&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好自闭，乌鱼子。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XJOI D16T3&lt;/p&gt;
&lt;p&gt;长链剖分 + NTT。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/06/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3891&#34;&gt;NOI2022省选赛前训练17&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;省常中&lt;img src=&#34;https://啧.tk/qq&#34; /&gt;30 + 0 + 10&lt;img src=&#34;https://啧.tk/ng&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1963&#34;&gt;P1963 [NOI2009] 变换序列&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;萌萌二分图匹配题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/06/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3894&#34;&gt;NOI2022省选赛前训练18&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;纪中，65 + 20 + 0。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;XJOI D18T1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;毒瘤，Fib 循环节&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/06/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;XJOI D18T2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;观察贡献性质之后直接换根 dp。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4897&#34;&gt;P4897 【模板】最小割树（Gomory-Hu Tree）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最小割树板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3329&#34;&gt;P3329 [ZJOI2011]最小割&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;板板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4123&#34;&gt;P4123 [CQOI2016]不同的最小割&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接用 &lt;code&gt;set&lt;/code&gt; 存一下 dinic 跑出来的结果即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/06/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT3912&#34;&gt;APC001E - Antennas on Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CF 原题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/06/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1695E&#34;&gt;CF1695E Ambiguous Dominoes&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;牛逼构造，补题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1700E&#34;&gt;CF1700E Serega the Pirate&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发现性质之后直接大暴力。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;22/06/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P8292&#34;&gt;P8292 [省选联考 2022] 卡牌&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-set-power-series&#34;&gt;集合幂级数&lt;/a&gt;做法。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1033G&#34;&gt;CF1033G Chip Game&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;牛逼模拟赛&lt;a href=&#34;https://oi.imyangty.com/sol-cf1033g/&#34;&gt;博弈论&lt;/a&gt; *3500。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6086&#34;&gt;P6086 【模板】Prufer 序列&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2290&#34;&gt;P2290 [HNOI2004]树的计数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模板&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF156D&#34;&gt;CF156D Clues&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-graph2/&#34;&gt;萌萌推式子&lt;/a&gt;简单题，多项式定理 + Prufer 序列。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF729E&#34;&gt;CF729E Subordinates&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单贪心。用后面的数补前面的空。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;22/06/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP32951&#34;&gt;SP32951 ADASTRNG - Ada and Substring&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般通过 SAM 模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/6071&#34;&gt;#6071. 「2017 山东一轮集训 Day5」字符串&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将若干 SAM 的 DWAG 接起来跑路径计数。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;22/06/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P8023&#34;&gt;P8023 [ONTAK2015] Tasowanie&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SA 板子。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;22/06/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3181&#34;&gt;P3181 [HAOI2016]找相同字符&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用一个 SAM 处理好出现信息之后拿另一个串跑。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF653F&#34;&gt;CF653F Paper task&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑 SAM 添加节点时新增的本质不同子串的左端点是一段前缀，用线段树维护有多少合法的左括号即可，注意 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 的界。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3763&#34;&gt;P3763 [TJOI2017]DNA&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接在 DAWG 上 dfs，记录一下状态，不能丢超过 3 个字符。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3318&#34;&gt;P3318 [SDOI2015]双旋转字符串&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;写错数据范围的狗屎题目。&lt;/del&gt;哈希即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;22/06/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2000&#34;&gt;P2000 拯救世界&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GF 题，NTT 高精毒瘤。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF917D&#34;&gt;CF917D Stranger Trees&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑矩阵树定理 + 插值。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2022年5月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2022-05/</link>
        <pubDate>Sun, 01 May 2022 20:44:13 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-05/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg1.webp" alt="Featured image of post 2022年5月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;怎么说？进了队之后学 whk 去了，挺摆的。&lt;/p&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/05/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://uoj.ac/problem/515&#34;&gt;UOJ#515. 【UR #19】前进四&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;楼房重建的离线加强版，然后转化为区间最值操作，单 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/05/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/problem/6029&#34;&gt;LOJ#6029. 「雅礼集训 2017 Day1」市场&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-ds1/&#34;&gt;势能分析线段树&lt;/a&gt;。考虑维护区间极差。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://uoj.ac/problem/228&#34;&gt;UOJ#228. 基础数据结构练习题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同上题分析方法。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/05/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4314&#34;&gt;P4314 CPU 监控&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-ds1/&#34;&gt;区间历史最值&lt;/a&gt;，懒标记的顶级应用。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/05/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1450&#34;&gt;P1450 [HAOI2008]硬币购物&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;背包预处理 + &lt;a href=&#34;https://oi.imyangty.com/summ&#34;&gt;容斥&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/05/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc002/tasks/agc002_f&#34;&gt;AGC002F - Leftmost Ball&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;观察性质 + &lt;a href=&#34;https://oi.imyangty.com/sol-agc002f/&#34;&gt;dp 状态设计&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/05/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3834&#34;&gt;P3834 【模板】可持久化线段树 2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整体二分做法。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2617&#34;&gt;P2617 Dynamic Rankings&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整体二分，树状数组维护。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3332&#34;&gt;P3332 [ZJOI2013]K大数查询&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整体二分，线段树维护区修区查。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/05/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1527&#34;&gt;P1527 [国家集训队]矩阵乘法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二维树状数组 + 整体二分。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4175&#34;&gt;P4175 [CTSC2008]网络管理&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;带修树链第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小，树剖 + 整体二分。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3527&#34;&gt;P3527 [POI2011]MET-Meteors&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对时间轴整体二分，&lt;strong&gt;注意累加判断的时候会爆 &lt;code&gt;long long&lt;/code&gt;，提前 &lt;code&gt;break&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/05/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT1998&#34;&gt;AGC002D - Stamp Rally&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-agc002d/&#34;&gt;整体二分 + 可撤销并查集&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/05/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4768&#34;&gt;P4768 [NOI2018] 归程&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NOI18 签到题，Kruskal 重构树。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1595&#34;&gt;P1595 信封问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;顺手 A 掉的普及组题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>2022年4月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2022-04/</link>
        <pubDate>Fri, 01 Apr 2022 20:27:17 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-04/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg69.webp" alt="Featured image of post 2022年4月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;省选因为 COVID-19 又 postpone 了呢。&lt;/p&gt;
&lt;p&gt;加油吧。&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;css（乐）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/04/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT2155&#34;&gt;ARC064D Rotated Palindromes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先考虑对回文串&lt;a href=&#34;https://oi.imyangty.com/sol-arc064d/&#34;&gt;计数&lt;/a&gt;，然后再从循环节开始想一步步去重。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/04/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3768&#34;&gt;P3768 简单的数学题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;欧拉反演 + &lt;a href=&#34;https://oi.imyangty.com/summary-number-theory/&#34;&gt;杜教筛&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/04/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc246/tasks/abc246_g&#34;&gt;ABC246G - Game on Tree 3&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;二分答案 + 树形 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/04/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc246/tasks/abc246_h&#34;&gt;ABC246Ex - 01? Queries&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;动态 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/04/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P8252&#34;&gt;P8252 [NOI Online 2022 提高组] 讨论&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;奇怪的&lt;a href=&#34;https://oi.imyangty.com/sol-noiol/&#34;&gt;贪心&lt;/a&gt;做法。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GZST R2D1T2&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/04/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4318&#34;&gt;P4318 完全平方数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(\mu^2\)&lt;/span&gt; 的套路。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XJOI D15T2&lt;/p&gt;
&lt;p&gt;毒瘤杜教筛。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT2369&#34;&gt;AGC013C - Ants on a Circle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;非常弔毛的&lt;a href=&#34;https://oi.imyangty.com/sol-agc013c/&#34;&gt;观察性质&lt;/a&gt;题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XJOI D9T1&lt;/p&gt;
&lt;p&gt;考虑相对位置 -&amp;gt; 转成 0/1 序列 -&amp;gt; 状压 dp。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/04/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc239/tasks/abc239_h&#34;&gt;ABC239Ex - Dice Product 2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;dp 转化，然后类杜教筛&lt;a href=&#34;https://oi.imyangty.com/sol-abc239h/&#34;&gt;记搜&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/group/Uo1lq8ZyWf/contest/369641/problem/A&#34;&gt;IZhO 2022 A. Where is the legend?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PBOJ d1t1，考虑 dp，然后&lt;a href=&#34;https://oi.imyangty.com/sol-gym369641a/&#34;&gt;倍增&lt;/a&gt;跳能合并的连续段。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT2293&#34;&gt;AGC009D - Uninity&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;非常牛逼的&lt;a href=&#34;https://oi.imyangty.com/sol-agc009d/&#34;&gt;观察性质 + 贪心&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/04/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://qoj.ac/problem/1825&#34;&gt;2021-2022 ICPC North America Championships. Problem I. The King’s Guards&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;神仙拟阵贪心 / &lt;a href=&#34;https://oi.imyangty.com/sol-qoj1825/&#34;&gt;费用流&lt;/a&gt;建模。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/04/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1665C&#34;&gt;CF1665C Tree Infection&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;贪心&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1665D&#34;&gt;CF1665D GCD Guess&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑按位确定 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1665E&#34;&gt;CF1665E MinimizOR&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;结论题&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;22/04/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc247&#34;&gt;AtCoder Beginner Contest 247&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + E + F，输麻了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;22/04/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc247/tasks/abc247_h&#34;&gt;ABC247Ex Rearranging Problem&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;置换环性质 + 类第一类斯特林数分治 NTT 优化 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4151&#34;&gt;P4151 [WC2011]最大XOR和路径&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑将 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的路拆分为 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 的简单路和若干个环，注意到环是随便选的，所以&lt;a href=&#34;https://oi.imyangty.com/note-linear-basis&#34;&gt;线性基&lt;/a&gt;即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3857&#34;&gt;P3857 [TJOI2008]彩灯&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;能异或出来的数的个数 &lt;span class=&#34;math inline&#34;&gt;\(= 2^{|\mathfrak B|}\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4301&#34;&gt;P4301 [CQOI2013] 新Nim游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先手取完元素后，剩下的元素不能异或出 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，使用线性基从大到小插入数字来维护这个过程。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3292&#34;&gt;P3292 [SCOI2016]幸运数字&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-linear-basis/&#34;&gt;点分治 + 线性基合并&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4869&#34;&gt;P4869 albus就是要第一个出场&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-linear-basis&#34;&gt;线性基的结论&lt;/a&gt;：原集中每个异或出来的数字会出现 &lt;span class=&#34;math inline&#34;&gt;\(2^{n - |\mathfrak B|}\)&lt;/span&gt; 次。依此直接求排名。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7949&#34;&gt;P7949 [✗✓OI R1] 左方之地&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ARC138D 的&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;线性基&lt;/a&gt;做法。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;22/04/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2973&#34;&gt;P2973 [USACO10HOL]Driving Out the Piggies G&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;高斯消元，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为期望经过 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的次数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF113D&#34;&gt;CF113D Museum&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; 个状态拎出来转移，高斯消元。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3211&#34;&gt;P3211 [HNOI2011]XOR和路径&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;经典题，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3211&#34;&gt;按位考虑贡献，高斯消元&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3265&#34;&gt;P3265 [JLOI2015]装备购买&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-linear-basis&#34;&gt;实数线性基&lt;/a&gt;，高斯消元。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2447&#34;&gt;P2447 [SDOI2010] 外星千足虫&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;异或方程组高斯消元。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2022年3月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2022-03/</link>
        <pubDate>Wed, 02 Mar 2022 22:01:53 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-03/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg68.webp" alt="Featured image of post 2022年3月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;预计要停课跟训练了。&lt;/p&gt;
&lt;p&gt;加油 8。&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 短路&lt;/li&gt;
&lt;li&gt;wqs 二分&lt;/li&gt;
&lt;li&gt;segment tree beats&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/03/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2483&#34;&gt;P2483 【模板】k 短路 / [SDOI2010] 魔法猪学院&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-graph1/&#34;&gt;可持久化可并堆优化 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 短路&lt;/a&gt;。建出最短路树，然后每次利用非树边扩展。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4926&#34;&gt;P4926 [1007]倍杀测量者&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将乘法取对数转为加法后&lt;a href=&#34;https://oi.imyangty.com/summary-graph1/&#34;&gt;二分 + 差分约束&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2474&#34;&gt;P2474 [SCOI2008]天平&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用邻接矩阵维护 &lt;span class=&#34;math inline&#34;&gt;\(\max\{x_i - x_j\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\min\{x_i - x_j\}\)&lt;/span&gt; 的&lt;a href=&#34;https://oi.imyangty.com/summary-graph1/&#34;&gt;差分约束&lt;/a&gt;模型。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/03/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5590&#34;&gt;P5590 赛车游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所有 &lt;span class=&#34;math inline&#34;&gt;\(1\to n\)&lt;/span&gt; 路径等长等价于路径上的边都满足 &lt;span class=&#34;math inline&#34;&gt;\(d_v - d_u = w(u,v)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 为最短路。建图跑&lt;a href=&#34;https://oi.imyangty.com/summary-graph1&#34;&gt;差分约束&lt;/a&gt;/即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3762&#34;&gt;NOI2022省选赛前训练1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;5 + 16 + 3 = 24。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/03/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3764&#34;&gt;NOI2022省选赛前训练2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;10 + 0 + 25 = 35。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/03/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;补题 D1T2。路径 dp。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/03/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3770&#34;&gt;NOI2022省选赛前训练4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;68 + 0 + 5 = 73。T1 已补。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5824&#34;&gt;P5824 十二重计数法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;插板法 + 斯特林数 + 划分数大复习。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补题 D1T1 毒瘤 polya。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/03/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://nh.51goc.com/studentCourse/class?groupId=171&amp;amp;courseId=74&amp;amp;contestId=3028#testTab=3029_2&#34;&gt;2022省赛前训练5(石门中学2022.03.08)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;0 + 80 + 0 = 80。T2 李超树初值未设负无穷，已补。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2606&#34;&gt;P2606 [ZJOI2010]排列计数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将问题转化为二叉堆计数，然后拓扑序 dp 即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6453&#34;&gt;P6453 [COCI2008-2009#4] PERIODNI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p6453/&#34;&gt;笛卡尔树上做背包&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4071&#34;&gt;P4071 [SDOI2016]排列计数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;错排傻逼题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6475&#34;&gt;P6475 [NOI Online #2 入门组] 建设城市&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对递增序列计数转化为插板法后分类讨论计数。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/03/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3780&#34;&gt;NOI2022省选赛前训练5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;毒瘤场。0 + 20 + 0，T2 小清新数据结构。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补 D2T1 permutation。计数 dp&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/03/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3787&#34;&gt;NOI2022省选赛前训练6&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;ASDFZ 寄摆润&lt;/del&gt; 基本爆零。补题 T1，傻逼树上 dp，没带脑子做题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/03/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;补题 D4T1 shuttle。构造。&lt;/li&gt;
&lt;li&gt;补题 D2T2 毒瘤 MDST。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;22/03/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;THUPC 2022 初赛&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;全体摆烂。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2680&#34;&gt;P2680 [NOIP2015 提高组] 运输计划&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-past-noip&#34;&gt;二分答案 + 树上差分&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;22/03/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3953&#34;&gt;P3953 [NOIP2017 提高组] 逛公园&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;找零环 + dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;22/03/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3789&#34;&gt;NOI2022省选赛前训练7&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;阳间 BSDZ 题。50 + 60 + 80 = 190。补题 T1，T2。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1447&#34;&gt;P1447 [NOI2010] 能量采集&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;莫反。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3960&#34;&gt;P3960 [NOIP2017 提高组] 列队&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用&lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;平衡树&lt;/a&gt;维护每一行的前 &lt;span class=&#34;math inline&#34;&gt;\(m - 1\)&lt;/span&gt; 列和第 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 列。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;22/03/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/ContestDescription.html#contestId=833&amp;amp;randomCode=152289&#34;&gt;GZST R1D1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;30 + 30 + 0，体验不是很好。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补完全部题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;22/03/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3791&#34;&gt;NOI2022省选赛前训练8&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;BNDS 阴间题。0 + 40 + 0。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补题 D8T2，邻接矩阵是否有环。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://hydro.ac/d/bzoj/p/4695&#34;&gt;BZOJ#4695. 最假女选手&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-ds1&#34;&gt;吉老师线段树&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-14&#34;&gt;22/03/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/ContestDescription.html#contestId=834&amp;amp;randomCode=245572&#34;&gt;GZST R1D2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;100 + 100 + 30。有点无语这个原题出题人。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-15&#34;&gt;22/03/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;补省集 R1D2T2 正解。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-16&#34;&gt;22/03/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/ContestDescription.html#contestId=835&amp;amp;randomCode=467404&#34;&gt;GZST R1D3&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;34 + 20 + 50。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补题 &lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/Problem.html#contestProblemId=4297&#34;&gt;D3T3 叮叮车&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;瞪出式子后用 Kummer 定理转化。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补题 &lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/Problem.html#contestProblemId=4295&#34;&gt;D3T1 速通&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先二分答案，然后期望 dp。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-17&#34;&gt;22/03/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/ContestDescription.html#contestId=836&amp;amp;randomCode=748269&#34;&gt;GZST R1D4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;60 + 20 + 40。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2634&#34;&gt;P2634 [国家集训队]聪聪可可&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点分治板。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-18&#34;&gt;22/03/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;被学军的题杀翻了 /kx&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-19&#34;&gt;22/03/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/ContestDescription.html#contestId=837&amp;amp;randomCode=783154&#34;&gt;GZST R2D1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;寄了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://hydro.ac/d/bzoj/p/4767&#34;&gt;BZOJ#4767. 两双手&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;T3 弱化版，先考虑&lt;a href=&#34;https://oi.imyangty.com/sol-bzoj4767&#34;&gt;换基底然后用容斥&lt;/a&gt;（棋盘障碍路径计数的经典题）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6329&#34;&gt;P6329 【模板】点分树 | 震波&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;终于调出来了。&lt;/del&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/Problem.html#contestProblemId=4296&#34;&gt;R1D3T2 虚数之树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;傻逼点分树。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-20&#34;&gt;22/03/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/Problem.html#contestProblemId=4300&#34;&gt;R1D4T3 星际联邦&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有点牛逼的矩阵树定理 + 循环矩阵性质 -&amp;gt; DFT。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-21&#34;&gt;22/03/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Contest/ContestDescription.html#contestId=838&amp;amp;randomCode=513543&#34;&gt;GZST R2D2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;100 + 100 + 0。T1 好牛逼&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-22&#34;&gt;22/03/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xjoi.net/contest/3818/problem/1&#34;&gt;XJOI D10T1 排列b&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;排列转图这个操作想不出来然后就寄了呗。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-23&#34;&gt;22/03/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NOIOL22&lt;/p&gt;
&lt;p&gt;100 + 30 + 0。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-24&#34;&gt;22/03/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2619&#34;&gt;P2619 [国家集训队]Tree I&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;wqs 二分模板题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-25&#34;&gt;22/03/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/6491&#34;&gt;LOJ#6491. 「XXOI 2018」简单的最大公约数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推式子 + 杜教筛。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1139D&#34;&gt;CF1139D Steps to One&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;dp 可以推 &lt;span class=&#34;math inline&#34;&gt;\(O(m^{1.5})\)&lt;/span&gt;，直接化开期望也可以推，最后杜教可 &lt;span class=&#34;math inline&#34;&gt;\(O(m^{2/3})\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-26&#34;&gt;22/03/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT2366&#34;&gt;AGC012F - Prefix Median&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-agc012f/&#34;&gt;神仙 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT1983&#34;&gt;&lt;strong&gt;AGC001E BBQ Hard&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;思考 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n+m}{m}\)&lt;/span&gt; 的&lt;a href=&#34;https://oi.imyangty.com/sol-agc001e/&#34;&gt;组合意义&lt;/a&gt;，然后整体进行 dp。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-27&#34;&gt;22/03/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF961F&#34;&gt;CF961F k-substrings&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;理性分析暴力&lt;a href=&#34;https://oi.imyangty.com/sol-cf961f/&#34;&gt;哈希&lt;/a&gt;复杂度。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF739E&#34;&gt;CF739E Gosha is hunting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf739e/&#34;&gt;实数 wqs 二分&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT1999&#34;&gt;AGC002E Candy Piles&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;转化在棋盘上后&lt;a href=&#34;https://oi.imyangty.com/sol-agc002e/&#34;&gt;博弈论&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2022年2月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2022-02/</link>
        <pubDate>Tue, 08 Feb 2022 16:21:03 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-02/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg67.webp" alt="Featured image of post 2022年2月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;每天都要有 plan，有效率的复习。&lt;/p&gt;
&lt;p&gt;少划水摸鱼，省选不能崩盘。&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;zkw 线段树&lt;/li&gt;
&lt;li&gt;线段树分治&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/02/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1632D&#34;&gt;CF1632D New Year Concert&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;后缀 gcd 至多有 log 种，所以可以&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;二分 + 贪心&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/02/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3379&#34;&gt;P3379 【模板】最近公共祖先（LCA）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;欧拉序 + ST 表的 LCA。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;明天开始有 Assignment&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/02/08&lt;/h3&gt;
&lt;h4 id=&#34;compulsory&#34;&gt;Compulsory&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;补 ABC237 的所有题并写题解。（已完成）&lt;/li&gt;
&lt;li&gt;补 ARC134D。（已完成）&lt;/li&gt;
&lt;li&gt;补 CF1632E1/E2。（已完成）&lt;/li&gt;
&lt;li&gt;学习 zkw 线段树。（已完成）&lt;/li&gt;
&lt;li&gt;学习线段树分治。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;optional&#34;&gt;Optional&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;写线段树复习笔记（简介~权值树）。（已完成）&lt;/li&gt;
&lt;li&gt;看 lxl 的扫描线课件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;record&#34;&gt;Record&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1632E1&#34;&gt;CF1632E1 Distance Tree (easy version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1632E2&#34;&gt;CF1632E2 Distance Tree (hard version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要观察性质的神仙&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;贪心&lt;/a&gt;题。注意到可以用因变量反推自变量。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc134/tasks/arc134_d&#34;&gt;ARC134D - Concatenate Subsequences&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;细节比较多的&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;字典序贪心&lt;/a&gt;，但不难想。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3372&#34;&gt;P3372 【模板】线段树 1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;zkw 版本的 RSQ。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/02/09&lt;/h3&gt;
&lt;h4 id=&#34;compulsory-1&#34;&gt;Compulsory&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;学习线段树分治并完成 3 道例题。（2 / 3）&lt;/li&gt;
&lt;li&gt;复习线段树合并并完成 [PKUWC 2018] Minimax 和 天天爱跑步。（0 / 2)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;optional-1&#34;&gt;Optional&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;线段树合并的牛逼题 [NOI 2020] 命运、[JOISC 2021] 最悪の記者 4 和 [JOISC 2020] 星座 3。（0 / 3）&lt;/li&gt;
&lt;li&gt;开始复习主席树/李超树。&lt;/li&gt;
&lt;li&gt;看 lxl 的扫描线课件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;record-1&#34;&gt;Record&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/121&#34;&gt;LOJ#121. 「离线可过」动态图连通性&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-ds2&#34;&gt;线段树分治 + 可撤销并查集&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1196&#34;&gt;P1196 [NOI2002] 银河英雄传说&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-ds0/&#34;&gt;带权并查集&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5787&#34;&gt;P5787 二分图 /【模板】线段树分治&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-ds2&#34;&gt;线段树分治 + 可撤销带权并查集&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我靠，今天真不行。要加快节奏少失眠少划水了。&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/02/11&lt;/h3&gt;
&lt;h4 id=&#34;record-2&#34;&gt;Record&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5905&#34;&gt;P5905 【模板】Johnson 全源最短路&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SPFA 求势能 + Dijkstra。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc237/tasks/abc237_e&#34;&gt;ABC237E - Skiing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;题目中给的高度天然满足势能条件，所以直接势能 Dijkstra 即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4585&#34;&gt;P4585 [FJOI2015]火星商店问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-ds2&#34;&gt;线段树分治套可持久化 0-1 Trie&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/02/12&lt;/h3&gt;
&lt;h4 id=&#34;compulsory-2&#34;&gt;Compulsory&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;完成 CF1140F Extending Set of Points。（已完成）&lt;/li&gt;
&lt;li&gt;复习线段树合并。（已完成）&lt;/li&gt;
&lt;li&gt;20:00 ABC239（取消了，淦）&lt;/li&gt;
&lt;li&gt;22:35 CF GR 19&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;record-3&#34;&gt;Record&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1140F&#34;&gt;CF1140F Extending Set of Points&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建模出二分图，答案即为每个连通块中左部点数量乘上右部点数量之和，&lt;a href=&#34;https://oi.imyangty.com/sol-cf1140f/&#34;&gt;线段树分治&lt;/a&gt;维护。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/02/13&lt;/h3&gt;
&lt;p&gt;很不幸的是，寄了。1&lt;/p&gt;
&lt;p&gt;最近身体状态很差，assignment 几乎完不成，尝试调整。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1637E&#34;&gt;CF1637E Best Pair&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;根号分治&lt;/a&gt;牛逼题，直接大暴力。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/02/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1638E&#34;&gt;CF1638E Colorful Operations&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;颜色段均摊线段树&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/02/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1637F&#34;&gt;CF1637F Towers&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;神仙&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;树上贪心&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5298&#34;&gt;P5298 [PKUWC2018]Minimax&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5298/&#34;&gt;线段树合并优化概率 dp&lt;/a&gt;神仙题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6773&#34;&gt;P6773 [NOI2020] 命运&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-p6773/&#34;&gt;线段树合并优化 dp&lt;/a&gt; 神仙题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;22/02/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://nh.51goc.com/studentCourse/class?groupId=171&amp;amp;courseId=74&amp;amp;contestId=2531#testTab=2532_2&#34;&gt;&lt;strong&gt;2022省赛前训练4(石门中学2022.02.16)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;为啥就跟上了&lt;/del&gt; 100 + 20 + 0，rk1&lt;/p&gt;
&lt;p&gt;比较侥幸吧。。T1 是 ZR 原题来着。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;赛后补 T2，树状数组/李超树 维护二维偏序。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP11470&#34;&gt;SP11470 TTM - To the moon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可持久化线段树区间加区间和，标记永久化。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;22/02/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4180&#34;&gt;P4180 [BJWC2010]严格次小生成树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-graph1&#34;&gt;树链查询最大/严格次大值&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5631&#34;&gt;P5631 最小mex生成树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5631/&#34;&gt;线段树分治&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1377&#34;&gt;P1377 [TJOI2011]树的序&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;得到的树形态相同的要求是儿子晚于父亲插入。所以以元素 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的值为下标，插入时间为键值建立一棵&lt;a href=&#34;https://oi.imyangty.com/summary-ds1&#34;&gt;笛卡尔树&lt;/a&gt;然后 dfs 得到先序排列即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1580D&#34;&gt;CF1580D Subsequence&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;化简式子发现要 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个点两两距离之和最小，&lt;a href=&#34;https://oi.imyangty.com/summary-codefor&#34;&gt;笛卡尔树上 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;22/02/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2144&#34;&gt;P2144 [FJOI2007]轮状病毒&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;矩阵树定理 + 行列式展开求递推。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;22/02/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF266D&#34;&gt;CF266D BerDonalds&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP735&#34;&gt;SP735 MDST - Minimum Diameter Spanning Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-graph2/&#34;&gt;最小直径生成树&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;22/02/27&lt;/h3&gt;
&lt;p&gt;之前在补 whk 作业&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1456&#34;&gt;P1456 Monkey King&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2713&#34;&gt;P2713 罗马游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;左偏树练习。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2022年1月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2022-01/</link>
        <pubDate>Sun, 02 Jan 2022 15:34:54 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2022-01/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg66.webp" alt="Featured image of post 2022年1月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;期末 ddl 干碎我。&lt;/p&gt;
&lt;p&gt;加油吧，省选 100 天不到了。&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;p&gt;学了个jb。&lt;/p&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;22/01/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1406A&#34;&gt;CF1406A Subset Mex&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1406B&#34;&gt;CF1406B Maximum Product&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;傻逼题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1406C&#34;&gt;CF1406C Link Cut Centroids&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有两个重心时的简单性质。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;22/01/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1406D&#34;&gt;CF1406D Three Sequences&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很牛逼的差分+&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;贪心&lt;/a&gt;性质题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1406E&#34;&gt;CF1406E Deleting Numbers&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很牛逼的数论&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;根号分治&lt;/a&gt;+分块交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1621A&#34;&gt;CF1621A Stable Arrangement of Rooks&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1621B&#34;&gt;CF1621B Integers Shop&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;傻逼题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1621C&#34;&gt;CF1621C Hidden Permutations&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;交互&lt;/a&gt;，对着一个下标询问找置换里面的轮换。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1621D&#34;&gt;CF1621D The Winter Hike&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很巧妙的&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;构造&lt;/a&gt;，观察题目性质。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;22/01/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1621E&#34;&gt;CF1621E New School&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;被模拟题干碎了。。。实现真的蛮精巧的。&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;排序 + 前缀和&lt;/a&gt;快速判答案。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;22/01/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4735&#34;&gt;P4735 最大异或和&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4735/&#34;&gt;可持久化 trie 的模板&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4592&#34;&gt;P4592 [TJOI2018]异或&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可持久化 trie + dfs 序。类似主席树的前缀和查询。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;22/01/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5283&#34;&gt;P5283 [十二省联考 2019] 异或粽子&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5283/&#34;&gt;堆 + 可持久化 Trie&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3567&#34;&gt;P3567 [POI2014]KUR-Couriers&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主席树，在 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 中二分出答案。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2397&#34;&gt;P2397 yyy loves Maths VI (mode)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;摩尔投票法，因为众数出现次数 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; n / 2\)&lt;/span&gt;，所以直接维护答案和 cnt 即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc110/tasks/abc110_d&#34;&gt;ABC110D - Factorization&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基础&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;组合数学&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;22/01/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc143/tasks/abc143_e&#34;&gt;ABC143E - Travel by Car&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;floyd + &lt;a href=&#34;https://oi.imyangty.com/summary-atcoder&#34;&gt;重新建图&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/code-festival-2016-qualb/tasks/codefestival_2016_qualB_c&#34;&gt;CODE FESTIVAL 2016 qual B C - Gr-idian MST&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder&#34;&gt;贪心&lt;/a&gt;加边，合并坐标。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3293&#34;&gt;P3293 [SCOI2016]美味&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按位贪心 + &lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3293/&#34;&gt;主席树&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc234/tasks/abc234_f&#34;&gt;ABC234F - Reordering&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;较常规的&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;组合 dp&lt;/a&gt;，赛时先是想不到，后是调不出。。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;22/01/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc234/tasks/abc234_g&#34;&gt;ABC234G - Divide a Sequence&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;较为常规的&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder&#34;&gt;单调栈优化 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc234/tasks/abc234_h&#34;&gt;ABC234Ex - Enumerate Pairs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder&#34;&gt;神仙题&lt;/a&gt;，奇妙复杂度分析。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc162/tasks/abc162_e&#34;&gt;ABC162E - Sum of gcd of Tuples (Hard)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;常规推式子&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;容斥&lt;/a&gt;，欧拉反演也可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;22/01/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc022/tasks/agc022_b&#34;&gt;AGC022B - GCD Sequence&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;利用 gcd 的性质巧妙&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc083/tasks/arc088_b&#34;&gt;ARC088D - Wide Flip&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;观察性质&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;22/01/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1625&#34;&gt;Codeforces Round #765 (Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D，rk137。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;22/01/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1624F&#34;&gt;CF1624F Interacdive Problem&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;二分清新小交互&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1624G&#34;&gt;CF1624G MinOr Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单按位贪心 + &lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;Kruskal&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;22/01/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc235&#34;&gt;HHKB Programming Contest 2022（AtCoder Beginner Contest 235）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + E，rk913。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1627&#34;&gt;Codeforces Round #766 (Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C，rk1275。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;22/01/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1627D&#34;&gt;CF1627D Not Adding&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;gcd &lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;的简单观察&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;22/01/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1629&#34;&gt;Codeforces Round #767 (Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D，rk305。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;22/01/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1627E&#34;&gt;CF1627E Not Escaping&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有效点最多为 &lt;span class=&#34;math inline&#34;&gt;\(2k + 2\)&lt;/span&gt;，所以直接&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;按层 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-14&#34;&gt;22/01/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1628C&#34;&gt;CF1628C Grid Xor&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先看出每个格子的贡献需为奇数次，然后强行&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1627F&#34;&gt;CF1627F Not Splitting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网格图，建出&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;最短路&lt;/a&gt;，每个限制为一个权值为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的边。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-15&#34;&gt;22/01/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6927&#34;&gt;P6927 [ICPC2016 WF]Swap Space&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;贪心，先考虑格式化后容量增加的，后考虑格式化后容量减小的。前者按 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 排升序，后者按 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 排降序。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/gym/103495/problem/D&#34;&gt;JSCPC 2021 D - Pattern Lock&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较好想的&lt;a href=&#34;https://oi.imyangty.com/sol-gym103495d/&#34;&gt;构造&lt;/a&gt;，注意不要写假答案就行了。。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-16&#34;&gt;22/01/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://uoj.ac/problem/604&#34;&gt;UOJ#604. 【UER #9】赶路&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;计算几何 + &lt;a href=&#34;https://oi.imyangty.com/sol-uoj604/&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7961&#34;&gt;P7961 [NOIP2021] 数列&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;观察出性质之后直接大力 &lt;a href=&#34;https://oi.imyangty.com/sol-noip2021&#34;&gt;DP&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7962&#34;&gt;P7962 [NOIP2021] 方差&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先发现是交换差分，拆开方差式子之后 &lt;a href=&#34;https://oi.imyangty.com/sol-noip2021/&#34;&gt;DP&lt;/a&gt; 求最小平方和。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-17&#34;&gt;22/01/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WC 2022 RP++&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;遗憾，考崩了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/3600&#34;&gt;LOJ#3600. 「PA 2021」Od deski do deski&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较巧妙的&lt;a href=&#34;https://oi.imyangty.com/sol-loj3600/&#34;&gt;计数类 DP&lt;/a&gt;，dmy WC 讲课例题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/4&#34;&gt;LOJ#4. Quine&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;脑筋急转弯。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; str[] = &lt;span class=&#34;st&#34;&gt;&amp;quot;#include &amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%c&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;char str[] = &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%c%s%c&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%c&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;int main() {return printf(str, 10, 34, str, 34, 10), 0;}&amp;quot;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; printf(str, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;34&lt;/span&gt;, str, &lt;span class=&#34;dv&#34;&gt;34&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1631&#34;&gt;Codeforces Round #768 (Div. 2)&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我是傻逼吗？A + B + C。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-18&#34;&gt;22/01/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WC 2022 Cu&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;T3 爆零了/cy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1628D1&#34;&gt;CF1628D1 Game on Sum (Easy Version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;博弈 DP&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1628D2&#34;&gt;CF1628D2 Game on Sum (Hard Version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将 easy ver 的式子&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;组合推导&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-19&#34;&gt;22/01/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1625E2&#34;&gt;CF1625E2 Cats on the Upgrade (hard version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;括号树&lt;/a&gt;之后用树状数组维护相关信息。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1630C&#34;&gt;CF1630C Paint the Middle&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;观察性质然后&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;线段树优化 DP&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc134&#34;&gt;AtCoder Regular Contest 134&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C，打的很差劲。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc235/tasks/abc235_f&#34;&gt;ABC235F - Variety of Digits&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;数位 DP&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-20&#34;&gt;22/01/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc235/tasks/abc235_g&#34;&gt;ABC235G - Gardens&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;组合推导&lt;/a&gt;，格点分析法。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT987&#34;&gt;天下一プログラマーコンテスト2014 本戦 D - 高橋君&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推式子 + &lt;a href=&#34;https://oi.imyangty.com/sol-tenka1-2014-final-d&#34;&gt;莫队&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5884&#34;&gt;P5884 [IOI2014]game 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;清新&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5884&#34;&gt;构造交互&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2021年12月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-12/</link>
        <pubDate>Wed, 01 Dec 2021 22:09:24 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-12/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg65.webp" alt="Featured image of post 2021年12月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;NOIP 考得跟坨屎一样。会考加油。WC 加油。&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;p&gt;学了个 JB。&lt;/p&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/12/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3769&#34;&gt;P3769 [CH弱省胡策R2]TATT&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;cdq 分治，四维偏序，dp。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3988&#34;&gt;P3988 [SHOI2013]发牌&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;平衡树练手题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/12/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF932F&#34;&gt;CF932F Escape Through Leaf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;斜率优化 + &lt;a href=&#34;https://oi.imyangty.com/sol-cf932f/&#34;&gt;李超树合并&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4390&#34;&gt;P4390 [BOI2007]Mokia 摩基亚&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;容斥转化一下，变为二维数点，上三维偏序。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/12/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2717&#34;&gt;P2717 寒假作业&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;转化一下变为&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2717/&#34;&gt;二维偏序&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/12/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2391&#34;&gt;P2391 白雪皑皑&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;并查集维护序列连通性的应用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1608D&#34;&gt;CF1608D Dominoes&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;容斥计数&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/12/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc231/tasks/abc231_e&#34;&gt;ABC231E - Minimal payments&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;贪心，用&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;递归&lt;/a&gt;解。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc231/tasks/abc231_g&#34;&gt;&lt;strong&gt;ABC231G - Balls in Boxes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;期望&lt;/a&gt;牛逼推式子题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/12/18&lt;/h3&gt;
&lt;p&gt;考完了，回归了！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5482&#34;&gt;P5482 [JLOI2011]不等式组&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用平衡树维护不等式组，裸。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4036&#34;&gt;P4036 [JSOI2008]火星人&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4036/&#34;&gt;平衡树维护子串哈希值&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7706&#34;&gt;P7706 「Wdsr-2.7」文文的摄影布置&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;线段树维护较复杂信息。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/12/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc232&#34;&gt;M-SOLUTIONS Programming Contest 2021(AtCoder Beginner Contest 232)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + E，rk762。&lt;/p&gt;
&lt;p&gt;D 题和 E 题的罚时过多以至于没有去想 F。。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/12/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc232/tasks/abc232_h&#34;&gt;ABC232H - King’s Tour&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;巧妙的减治&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc232/tasks/abc232_f&#34;&gt;ABC232F - Simple Operations on Sequence&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;化简式子之后&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder&#34;&gt;状压 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc232/tasks/abc232_g&#34;&gt;ABC232G - Modulo Shortest Path&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对模类型的题建 &lt;span class=&#34;math inline&#34;&gt;\([0, mod)\)&lt;/span&gt; 的环的技巧，&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder&#34;&gt;最短路&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/12/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1334E&#34;&gt;CF1334E Divisor Paths&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较牛逼的&lt;a href=&#34;https://oi.imyangty.com/sol-cf1334e/&#34;&gt;结论题&lt;/a&gt;，猜出结论后直接组合。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/12/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1829&#34;&gt;P1829 [国家集训队]Crash的数字表格 / JZPTAB&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summ&#34;&gt;莫比乌斯反演&lt;/a&gt;好题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/12/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2303&#34;&gt;P2303 [SDOI2012] Longge 的问题&lt;/a&gt;&lt;/strong&gt; &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i =1 }^n\gcd(i,n) = \sum_{d\mid n}d\varphi(n/d)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5435&#34;&gt;P5435 基于值域预处理的快速 GCD&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; gcd。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5323&#34;&gt;P5323 [BJOI2019]光线&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5323/&#34;&gt;推式子&lt;/a&gt;，几何级数求和。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/12/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1615&#34;&gt;Codeforces Global Round 18&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C，rk 816。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/12/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1615D&#34;&gt;CF1615D X(or)-mas Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;树上异或相关问题，&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;二分图染色&lt;/a&gt;构造解。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/12/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1615E&#34;&gt;CF1615E Purple Crayon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;奇妙推式子&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;贪心&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2021年11月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-11/</link>
        <pubDate>Mon, 01 Nov 2021 20:18:42 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-11/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg64.webp" alt="Featured image of post 2021年11月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;加油，本月 NOIP。&lt;/p&gt;
&lt;p&gt;搞完后好好搞一段时间 whk。&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;p&gt;啥也没学吧。&lt;/p&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;p&gt;联赛前做题重心偏向 ZR，同时有点摆烂。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1474B&#34;&gt;CF1474B Different Divisors&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有点蠢的题。考虑直接拿两个质数来构造。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ICPC Shanghai 2019 D - Spanning Tree Removal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;挺牛逼的&lt;a href=&#34;https://oi.imyangty.com/sol-nc202122/&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ICPC Shanghai 2019 H - Tree Partition&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单二分 + 贪心。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1602A&#34;&gt;CF1602A Two Subsequences&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1602B&#34;&gt;CF1602B Divine Array&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;蠢。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1601A&#34;&gt;CF1601A Array Elimination&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;妙妙题。考虑所有数第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位每次操作都会使 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 减少 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。取 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{c_i\}\)&lt;/span&gt; 的所有因子即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1601B&#34;&gt;CF1601B Frog Traveler&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑 bfs + 贪心，每个点都只能被搜到一次，用 set 存一下待转移的点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5039&#34;&gt;P5039 [SHOI2010]最小生成树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最小生成树 + &lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5039/&#34;&gt;最小割&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section&#34;&gt;21/11/19&lt;/h3&gt;
&lt;p&gt;打了些板子。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3605&#34;&gt;P3605 [USACO17JAN]Promotion Counting P&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;线段树合并裸题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2234&#34;&gt;P2234 [HNOI2002]营业额统计&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;找平衡树的手感。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联赛考得奇差无比，没什么好讲的。&lt;/p&gt;
&lt;p&gt;还要复习会考。&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>组合数学复习笔记</title>
        <link>https://oi.imyangty.com/summary-combinatorics/</link>
        <pubDate>Sun, 03 Oct 2021 14:34:00 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-combinatorics/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg2.webp" alt="Featured image of post 组合数学复习笔记" /&gt;&lt;p&gt;总结笔记。组合算是一个比较重要的大头。不包看懂，前置知识可能有点多。&lt;/p&gt;
&lt;p&gt;如有错漏烦请指正，当感激不尽/kel。&lt;/p&gt;
&lt;h2 id=&#34;加乘原理&#34;&gt;加乘原理&lt;/h2&gt;
&lt;h2 id=&#34;排列组合&#34;&gt;排列组合&lt;/h2&gt;
&lt;h3 id=&#34;定义&#34;&gt;定义&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个有标号元素里面选 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个排成一排的方案数：&lt;span class=&#34;math inline&#34;&gt;\(\mathrm A_n^m\)&lt;/span&gt;，称为排列数，有 &lt;span class=&#34;math display&#34;&gt;\[
\mathrm A_n^m = \frac{n!}{(n - m)!}
\]&lt;/span&gt; 平凡，不证。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个有标号元素里面选 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个的方案数：&lt;span class=&#34;math inline&#34;&gt;\(\mathrm C_n^m\)&lt;/span&gt;，或者记作 $n m $，称为组合数，有 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m = \frac{\mathrm A_n^m}{m!} = \frac{n!}{m!(n - m)!}
\]&lt;/span&gt; 相当于去掉 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的全排列的方案数。&lt;/p&gt;
&lt;h3 id=&#34;二项式定理&#34;&gt;二项式定理&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
(x + y)^n = \sum_{k = 0}^n\binom n kx^ky^{n - k}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;组合意义平凡。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 取到特殊值时会有奇怪的推广。 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^n\binom n k = 2^n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^n(-1)^k\binom n k = [n = 0]
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;组合恒等式&#34;&gt;组合恒等式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;对称恒等式 &lt;span class=&#34;math display&#34;&gt;\[
\binom n k = \binom{n}{n - k}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;组合意义易得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;2&#34; type=&#34;1&#34;&gt;
&lt;li&gt;吸收恒等式 &lt;span class=&#34;math display&#34;&gt;\[
\binom n k = \frac n k \binom {n - 1}{k - 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;拆成阶乘形式易得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;3&#34; type=&#34;1&#34;&gt;
&lt;li&gt;归纳恒等式 &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{k} = \binom{n - 1}{k} + \binom{n - 1}{k - 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑钦定一个元素，如果我们现在才选，那么就有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n - 1}{k - 1}\)&lt;/span&gt; 种方案，如果我们没有选，那么就是 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n -1}{k}\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;4&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^nk\binom n k = n2^{n - 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;用吸收恒等式把 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 提掉之后二项式定理可证。对二项展开式求导也可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;5&#34; type=&#34;1&#34;&gt;
&lt;li&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n r \binom r k = \binom n k \binom{n - k}{r - k}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：拆成阶乘的形式易证。组合意义也比较好想。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;6&#34; type=&#34;1&#34;&gt;
&lt;li&gt;范德蒙德卷积的推论： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^r\binom n k \binom{m}{r - k} = \binom{n + m}{r}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：考虑组合意义，&lt;span class=&#34;math inline&#34;&gt;\(n + m\)&lt;/span&gt; 中选 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 个可以钦定成在前 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个里面选 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个和在后 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 里面选 &lt;span class=&#34;math inline&#34;&gt;\(r - k\)&lt;/span&gt; 个。同时我们也有 &lt;span class=&#34;math inline&#34;&gt;\((1 + x)^{n + m} = (1 + x)^n(1 + x)^m\)&lt;/span&gt;。考虑 &lt;span class=&#34;math inline&#34;&gt;\([x^r](1 + x)^{n + m}\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;7&#34; type=&#34;1&#34;&gt;
&lt;li&gt;上指标求和 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^n\binom{k}{m} = \binom{n + 1}{m + 1}
\]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：组合意义：从 &lt;span class=&#34;math inline&#34;&gt;\(\{0, 1, \cdots, n\}\)&lt;/span&gt; 中选出 &lt;span class=&#34;math inline&#34;&gt;\(m + 1\)&lt;/span&gt; 个数，选中的最大数为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的方案数为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom k m\)&lt;/span&gt;。用 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 式一步步推也可推得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;8&#34; type=&#34;1&#34;&gt;
&lt;li&gt;与斐波那契的关系 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=0}^n\binom{n-i}{i} = F_{n+1}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(F_n\)&lt;/span&gt; 表示斐波那契数列的第 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 项。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：可以观察一下杨辉三角。可以通过将式子用归纳恒等式展开证明。&lt;/p&gt;
&lt;h3 id=&#34;多项式系数&#34;&gt;多项式系数&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1, n_2,\cdots, n_t}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其定义为多项式 &lt;span class=&#34;math inline&#34;&gt;\((x_1 + x_2 + \cdots + x_t)^n\)&lt;/span&gt; 中 &lt;span class=&#34;math inline&#34;&gt;\(x_1^{n_1}x_2^{n_2}\cdots x_t^{n_t}\)&lt;/span&gt; 的系数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个不同的球放进 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 个不同盒子里使得第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个盒子有 &lt;span class=&#34;math inline&#34;&gt;\(n_i\)&lt;/span&gt; 个球的方案数。 &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1, n_2,\cdots, n_t} = \binom{n}{n_1}\binom{n - n_1}{n_2}\cdots\binom{n_t}{n_t}
\]&lt;/span&gt; 把组合数拆成阶乘的形式即可得到 &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1,\cdots, n_t} = \frac{n!}{n_1!n_2!\cdots n_t!}
\]&lt;/span&gt; 递推： &lt;span class=&#34;math display&#34;&gt;\[
\binom{n}{n_1,\cdots,n_t} = \binom{n - 1}{n_1 - 1, n_2,\cdots, n_t} + \binom{n - 1}{n_1, n_2 - 1,\cdots, n_t} + \binom{n - 1}{n_1, \cdots,n_t - 1}
\]&lt;/span&gt; 和组合数的递推类似。&lt;/p&gt;
&lt;h3 id=&#34;基本计数应用&#34;&gt;基本计数应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5824&#34;&gt;P5824 十二重计数法&lt;/a&gt;（部分）给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子。要将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球全部放入盒子中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I：球之间互不相同，盒子之间互不相同。&lt;/li&gt;
&lt;li&gt;II：球之间互不相同，盒子之间互不相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;III：球之间互不相同，盒子之间互不相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;li&gt;VII：球全部相同，盒子之间互不相同。&lt;/li&gt;
&lt;li&gt;VIII：球全部相同，盒子之间互不相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;IX：球全部相同，盒子之间互不相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;剩余部分留至后文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;I：显然为 &lt;span class=&#34;math inline&#34;&gt;\(m^n\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;II：显然为 &lt;span class=&#34;math inline&#34;&gt;\(m^{\underline{n}}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;III：容斥一波，考虑空盒子的个数，得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=0}^m(-1)^i\binom mi(m-i)^n\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;IX：&lt;strong&gt;插板法&lt;/strong&gt;，我们相当于是将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球划分到 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个连续段里面去，即相当于是 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 个空里面插 &lt;span class=&#34;math inline&#34;&gt;\(m-1\)&lt;/span&gt; 个板，即 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom {n -1}{m-1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;VII：由于一段可以为空，所以不妨强行多塞 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个元素，再套用 VIII，所以就是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{n + m - 1}{m-1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;VIII：考虑是哪几个盒子装球，答案显然为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom mn\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由问题 IX 和问题 VII，我们可以知道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于不定方程 &lt;span class=&#34;math inline&#34;&gt;\(a_1 + \cdots + a_n = X\)&lt;/span&gt;，若要求 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ge 1\)&lt;/span&gt;，则方程的解有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{X - 1}{n - 1}\)&lt;/span&gt; 组。&lt;/li&gt;
&lt;li&gt;若要求 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ge 0\)&lt;/span&gt;，则方程的解有 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{X + n - 1}{n - 1}\)&lt;/span&gt; 组。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一类很经典的模型，需要仔细理解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上文是插板法的经典应用，下面来看一个经典问题——错位排列。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4071&#34;&gt;P4071 [SDOI2016]排列计数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\le 5\times 10^5\)&lt;/span&gt; 次询问有多少种 &lt;span class=&#34;math inline&#34;&gt;\(1\sim n\)&lt;/span&gt; 的排列 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 满足恰有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个位置满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i = i\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(n\le 10^6\)&lt;/span&gt;，答案模 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们很容易发现，另外的 &lt;span class=&#34;math inline&#34;&gt;\(n - m\)&lt;/span&gt; 个位置必须要满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ne i\)&lt;/span&gt;。而这就是一个很典型的错位排列问题。最经典的错排问题指的是，对于一个排列，其满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(a_i\ne i\)&lt;/span&gt;，我们设长为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的这样的排列有 &lt;span class=&#34;math inline&#34;&gt;\(D_n\)&lt;/span&gt; 个。&lt;/p&gt;
&lt;p&gt;则本题的答案很显然为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n}{m}D_{n - m}\)&lt;/span&gt;（考虑选择 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个位置满足 &lt;span class=&#34;math inline&#34;&gt;\(a_i = i\)&lt;/span&gt;）。组合数可以阶乘预处理，压力现在给到 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt; 这边，由于需要多次询问，所以考虑预处理。&lt;/p&gt;
&lt;p&gt;首先我们一定知道 &lt;span class=&#34;math inline&#34;&gt;\(D_1 = 0, D_2 = 1\)&lt;/span&gt;。然后对于 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt;，假设 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 放在了 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 位置上，那么对于数字 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;，若其放在了位置 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 上，则问题转化为 &lt;span class=&#34;math inline&#34;&gt;\(3\sim i\)&lt;/span&gt; 的错排数，有 &lt;span class=&#34;math inline&#34;&gt;\(D_{i - 2}\)&lt;/span&gt; 种方案；若其没有放在位置 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 上，则问题转化为 &lt;span class=&#34;math inline&#34;&gt;\(2\sim i\)&lt;/span&gt; 的错排数，有 &lt;span class=&#34;math inline&#34;&gt;\(D_{i - 1}\)&lt;/span&gt; 种方案。而 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 一共可以放在 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 个位置上，所以是 &lt;span class=&#34;math inline&#34;&gt;\((n-1)(D_{n-2} + D_{n-1})\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;综上， &lt;span class=&#34;math display&#34;&gt;\[
D_n =\begin{cases}
0&amp;amp;n=1\\
1&amp;amp;n=2\\
(n - 1)(D_{n-2} + D_{n-1})&amp;amp;n\ge3
\end{cases}
\]&lt;/span&gt; 同时，错排的通项公式也可以使用容斥来推导，见下文二项式反演处。&lt;/p&gt;
&lt;p&gt;下面提供一个经典的“操作序列”形问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P6475&#34;&gt;P6475 [NOI Online #2 入门组] 建设城市&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问满足以下条件的正整数序列 &lt;span class=&#34;math inline&#34;&gt;\(a_{1,\cdots, 2n}\)&lt;/span&gt; 的数量，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(1\le n,m\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, 2n], a_i\in[1,m]\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;前 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素不降，后 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素不增。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_x = a_y\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;本题的关键是考虑长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，值域 &lt;span class=&#34;math inline&#34;&gt;\([1, m]\)&lt;/span&gt; 的不降序列的方案数 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m)\)&lt;/span&gt;，剩余部分是简单的分类讨论。下面用两种方法推导 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m)\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;考虑即为将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个小球（高楼）放入 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子（值域）里，可以有空盒，于是由例题 1，答案显然为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m - 1}{m - 1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;考虑长度为 &lt;span class=&#34;math inline&#34;&gt;\(n + m - 1\)&lt;/span&gt; 的操作序列，其中包含给 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 加一和将 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 加到当前序列末尾两个操作。不难发现一个操作序列唯一对应一个不降数列，然后随便想一下发现操作序列的总数为 &lt;span class=&#34;math inline&#34;&gt;\(f(n,m) = \dbinom{n + m - 1}{n}\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作序列的思想很有用。下面来看一道很经典的&lt;strong&gt;棋盘路径计数问题&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;：BZOJ#4767. 两双手&lt;/p&gt;
&lt;p&gt;从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 要走到 &lt;span class=&#34;math inline&#34;&gt;\((E_x, E_y)\)&lt;/span&gt;，每次能从 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((x + A_x, y + A_y)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\((x + B_x, y + B_y)\)&lt;/span&gt;。中间有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个不能走的点，问方案数。保证 &lt;span class=&#34;math inline&#34;&gt;\(A_xB_y - A_yB_x\ne 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\le n,m,k, |A_x|,|A_y|,|B_x|,|B_y|\le 500\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先有一步转化：注意到这两个向量构成平面内的一组基，所以任意的点 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 都可以被表示为 &lt;span class=&#34;math inline&#34;&gt;\(cA + dB\)&lt;/span&gt;，将所有点 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 转为 &lt;span class=&#34;math inline&#34;&gt;\((c, d)\)&lt;/span&gt;。问题于是转化为带障碍的网格路径计数（每步可以向右或者向上走一步）。&lt;/p&gt;
&lt;p&gt;设换了坐标系后终点为 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt;。问题现在转化为从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt; 的带障碍路径计数。&lt;/p&gt;
&lt;p&gt;先不考虑障碍，则我们一共是要走 &lt;span class=&#34;math inline&#34;&gt;\(n + m\)&lt;/span&gt; 步，而其中 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 步往右走，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 步往上走。同样用&lt;strong&gt;操作序列&lt;/strong&gt;的想法来看的话，本质上就是长度为 &lt;span class=&#34;math inline&#34;&gt;\(n + m\)&lt;/span&gt; 的操作序列里面选出 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 步来向右走（剩余 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 步自然是向上走），所以方案数是 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m}{n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有障碍则需要考虑容斥。&lt;/p&gt;
&lt;p&gt;将所有的障碍点以及 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt; 视为关键点，排个序，然后便令 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 出发，不经过障碍点，走到第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个关键点的方案数，则 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \binom{x_i + y_i}{x_i}- \sum_{x_j\le x_i\land y_j\le y_i}f_j\times\binom{(x_i - x_j) + (y_i - y_j)}{x_i - x_j}
\]&lt;/span&gt; 于是时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(k^2)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;：AGC001E - BBQ Hard&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(a_{1,\cdots, n}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b_{1,\cdots n}\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{j=i+1}^n\binom{a_i + b_i + a_j + b_j}{a_i + a_j}
\]&lt;/span&gt; 答案对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模。&lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_i,b_i\le 2000\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回忆 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m}{n}\)&lt;/span&gt; 的组合意义：棋盘上从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((n, m)\)&lt;/span&gt; 的路径方案数。那么 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{a_i + b_i + a_j + b_j}{a_i + a_j}\)&lt;/span&gt; 的组合意义即为从 &lt;span class=&#34;math inline&#34;&gt;\((-a_i,-b_i)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((a_j, b_j)\)&lt;/span&gt; 的路径方案数。&lt;/p&gt;
&lt;p&gt;然后现在要求出每一对 &lt;span class=&#34;math inline&#34;&gt;\((i,j)\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\((-a_i, -b_i)\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\((a_j, b_j)\)&lt;/span&gt; 的路径方案数。发现这个东西可以放在棋盘上一起 dp，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(\max^2 v)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意最后要把所有的从 &lt;span class=&#34;math inline&#34;&gt;\((-a_i,-b_i)\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\((a_i, b_i)\)&lt;/span&gt; 的方案数去重掉，减去 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{2a_i+2b_i}{2a_i}\)&lt;/span&gt; 即可。然后因为题目里面钦定 &lt;span class=&#34;math inline&#34;&gt;\(j &amp;gt; i\)&lt;/span&gt;，所以最后要除以二。&lt;/p&gt;
&lt;h2 id=&#34;容斥原理&#34;&gt;容斥原理&lt;/h2&gt;
&lt;h3 id=&#34;引入&#34;&gt;引入&lt;/h3&gt;
&lt;p&gt;考虑班上有 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 个同学选了 A 项目，&lt;span class=&#34;math inline&#34;&gt;\(15\)&lt;/span&gt; 个选了 B 项目，&lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 个选了 C 项目。问班上有多少同学至少选了一个项目。&lt;/p&gt;
&lt;p&gt;朴素的 &lt;span class=&#34;math inline&#34;&gt;\(|A| + |B| + |C|\)&lt;/span&gt; 会重复计数，因为需要考虑重复选项目的同学。所以需要减去同时选了 AB、BC 或 AC 的，但是减去之后，同时选了 ABC 的又会被多减，要加回来。&lt;/p&gt;
&lt;p&gt;直观的表示就是 &lt;span class=&#34;math inline&#34;&gt;\(|A\cup B\cup C| = |A| + |B| + |C| - |A\cap B| - |B\cap C| - |A\cap C| + |A\cap B \cap C|\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;其基本思路就是，&lt;strong&gt;将重复计算的“斥”掉，再将重复“斥”掉的“容”回来&lt;/strong&gt;，所以叫做容斥原理。&lt;/p&gt;
&lt;p&gt;一般地，设 &lt;span class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt; 中元素有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 种不同属性，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 种称为 &lt;span class=&#34;math inline&#34;&gt;\(P_i\)&lt;/span&gt;，具有 &lt;span class=&#34;math inline&#34;&gt;\(P_i\)&lt;/span&gt; 属性的元素构成集合 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt;，那么 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\left| \bigcup_{i=1}^n S_i \right| &amp;amp;= \sum_i|S_i| - \sum_{i&amp;lt;j}|S_i\cap S_j| + \sum_{i&amp;lt;j&amp;lt;k}|S_i\cap S_j\cap S_k| - \\&amp;amp;\cdots + (-1)^{m - 1}\sum_{a_i&amp;lt;a_{i + 1}}\left|\bigcap_{i=1}^mS_{a_i}\right| + \cdots + (-1)^{n - 1}|S_1\cap\cdots\cap S_n|
\end{aligned}
\]&lt;/span&gt; 全部缩起来写就是 &lt;span class=&#34;math display&#34;&gt;\[
\left| \bigcup_{i=1}^n S_i \right| = \sum_{m=1}^n(-1)^{m - 1}\sum_{a_i&amp;lt;a_{i + 1}}\left|\bigcap_{i=1}^mS_{a_i}\right|
\]&lt;/span&gt; 浅证明一下：考虑二项式定理，对于每个元素计算其出现的次数。设元素 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 出现在 &lt;span class=&#34;math inline&#34;&gt;\(m\ge 1\)&lt;/span&gt; 个集合 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt; 中，则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选了 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个集合时，被加上了 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom m 1\)&lt;/span&gt; 次。&lt;/li&gt;
&lt;li&gt;选了 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 个集合时，被减去了 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom m 2\)&lt;/span&gt; 次。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;li&gt;选了 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个集合时，被加上了 &lt;span class=&#34;math inline&#34;&gt;\((-1)^{m + 1}\dbinom{m}{m}\)&lt;/span&gt; 次。&lt;/li&gt;
&lt;li&gt;选择的集合多于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个时，他们的交一定不包含 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，不予考虑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i=1}^m(-1)^{i +1}\binom mi\\
=&amp;amp;\binom m0 - \sum_{i=0}^m(-1)^i\binom mi\\
=&amp;amp;1 - (1 - 1)^m\\
=&amp;amp;1
\end{aligned}
\]&lt;/span&gt; 综上，每个元素都一定被计算了恰好 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 次。&lt;/p&gt;
&lt;h3 id=&#34;简单应用&#34;&gt;简单应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3301&#34;&gt;P3301 [SDOI2013]方程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定不定方程 &lt;span class=&#34;math inline&#34;&gt;\(x_1 + x_2 + \cdots + x_n = m\)&lt;/span&gt;，对于 &lt;span class=&#34;math inline&#34;&gt;\(i\in[1, n_1]\)&lt;/span&gt;，有限制 &lt;span class=&#34;math inline&#34;&gt;\(x_i\le A_i\)&lt;/span&gt;；对于 &lt;span class=&#34;math inline&#34;&gt;\(i\in (n_1,n_2]\)&lt;/span&gt;，有限制 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i\)&lt;/span&gt;，求该方程正整数解的组数。答案对 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 取模，&lt;span class=&#34;math inline&#34;&gt;\(p\in\{10007,262203414,437367875\}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n_1,n_2\le 8\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i\)&lt;/span&gt; 的限制，显然，我们把 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 减去 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle \sum_{i = n_1 + 1}^{n_2}(A_i - 1)\)&lt;/span&gt;，然后就把问题转化为了直接插板。&lt;/p&gt;
&lt;p&gt;然后考虑到 &lt;span class=&#34;math inline&#34;&gt;\(x_i\le A_i\)&lt;/span&gt; 的限制不好处理，既然限制数最大为 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt;，不如考虑容斥，将其转化为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i + 1\)&lt;/span&gt; 的形式来处理。&lt;/p&gt;
&lt;p&gt;这样子每次计算的答案为 &lt;span class=&#34;math display&#34;&gt;\[
\binom{m&amp;#39; - 1}{n - 1}\bmod p
\]&lt;/span&gt; 然后这一坨式子是可以使用扩展 Lucas 来算的（见数论复习笔记）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1450&#34;&gt;P1450 [HAOI2008]硬币购物&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(c_1,\cdots, c_4\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次询问不定方程 &lt;span class=&#34;math inline&#34;&gt;\(c_1x_1 + c_2x_2 + c_3x_3 + c_4x_4 = s\)&lt;/span&gt; 的满足 &lt;span class=&#34;math inline&#34;&gt;\(x_i\le d_i\)&lt;/span&gt; 的非负整数解个数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 1000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le c_i,d_i,s\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于一次询问，我们可以 &lt;span class=&#34;math inline&#34;&gt;\(O(s)\)&lt;/span&gt; 背包。但是 &lt;span class=&#34;math inline&#34;&gt;\(O(ns)\)&lt;/span&gt; 显然无法通过本题。&lt;/p&gt;
&lt;p&gt;按照上面的转化，我们先一步容斥，变成 &lt;span class=&#34;math inline&#34;&gt;\(|U| - \displaystyle\left|\bigcup_{i=1}^4\overline{S_i}\right|\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(|U|\)&lt;/span&gt; 可以直接背包求出（无任何限制），后者使用容斥进行展开。考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\overline{S_i}\)&lt;/span&gt; 的意义即为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge d_i + 1\)&lt;/span&gt;，那么直接将 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 减去 &lt;span class=&#34;math inline&#34;&gt;\(d_i + 1\)&lt;/span&gt; 问题就变成没有下界的了，可以背包预处理。&lt;/p&gt;
&lt;h3 id=&#34;子集反演&#34;&gt;子集反演&lt;/h3&gt;
&lt;p&gt;容斥的一般形式，实际上下文的二项式反演/min-max 容斥（乃至数论中的莫比乌斯反演）的本质也就是子集反演，只不过是加以变形和特殊化。&lt;/p&gt;
&lt;p&gt;对于两个集合的函数 &lt;span class=&#34;math inline&#34;&gt;\(f(S)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(S)\)&lt;/span&gt;，若 &lt;span class=&#34;math display&#34;&gt;\[f(S) = \sum_{T\subseteq S} g(T)\]&lt;/span&gt; 则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
g(S) = \sum_{T\subseteq S}(-1)^{|S| - |T|} f(T)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;先考虑将上式代入下式，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{T\subseteq S}(-1)^{|S| - |T|}\sum_{Q\subseteq T}g(Q)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后调换求和顺序改为枚举 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt;，变为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{Q\subseteq S}g(Q)\sum_{Q\subseteq T\subseteq S}(-1)^{|S| - |T|}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;后半部分与 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt; 无关，去掉 &lt;span class=&#34;math inline&#34;&gt;\(Q\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{Q}g(Q)\sum_{T\subseteq (S\setminus Q)}(-1)^{|S\setminus Q| - |T|}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不妨记函数 &lt;span class=&#34;math inline&#34;&gt;\(F(S) = \sum_{T\subseteq S}(-1)^{|S| - |T|}\)&lt;/span&gt; 并尝试对其化简：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(S) &amp;amp;= \sum_{T\subseteq S}(-1)^{|S| - |T|}\\
&amp;amp;= \sum_{i = 0}^{|S|} (-1)^{|S| - i}\binom{|S|}{i}\\
&amp;amp;= \sum_{i=0}^{|S|} \binom{|S|}{i} 1^i (-1)^{|S| - i}\\
&amp;amp;= (1-1)^{|S|}\\
&amp;amp;= [|S| = 0]
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以原式化成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_Q g(Q) F(S\setminus Q)\)&lt;/span&gt; 而只有当 &lt;span class=&#34;math inline&#34;&gt;\(|S\setminus Q| = 0\)&lt;/span&gt; 即 &lt;span class=&#34;math inline&#34;&gt;\(Q = S\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(F(S\setminus Q)\ne 0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(g(Q)\)&lt;/span&gt; 只会在 &lt;span class=&#34;math inline&#34;&gt;\(S = Q\)&lt;/span&gt; 的时候产生贡献，故等式右边等于左边。&lt;span class=&#34;math inline&#34;&gt;\(\square\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;二项式反演&#34;&gt;二项式反演&lt;/h3&gt;
&lt;p&gt;一种奇形怪状的容斥，常用于转换“恰好”“至少”“至多”等字眼。&lt;/p&gt;
&lt;h4 id=&#34;形式一&#34;&gt;形式一&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_n = \sum_{i = 0}^n\binom n i g_i \iff g_n = \sum_{i = 0}^n(-1)^{n - i}\binom n i f_i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;证明考虑将右式回代入左式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_n &amp;amp;= \sum_{i = 0}^n\binom n i g_i\\
&amp;amp;= \sum_{i = 0}^n\binom n i\sum_{j = 0}^i(-1)^{i - j}\binom i jf_j\\
&amp;amp;= \sum_{i = 0}^n\sum_{j = 0}^i(-1)^{i - j}\binom n i \binom i j f_j\\
&amp;amp;= \sum_{i = 0}^n\sum_{j = 0}^i(-1)^{i - j}\binom n j\binom{n - j}{i - j}f_j\\
&amp;amp;= \sum_{j = 0}^nf_j\binom n j \sum_{i = j}^n(-1)^{i - j}\binom{n - j}{i - j}\\
&amp;amp;= \sum_{j = 0}^nf_j\binom n j \sum_{k = 0}^{n - j}(-1)^k\binom {n - j}{k}\\
&amp;amp;= \sum_{j = 0}^nf_j\binom n j[n = j]\\
&amp;amp;= f_n
\end{aligned}
\]&lt;/span&gt; 其中用到了交换求和顺序以及将式子化为卷积形式的 trick。&lt;/p&gt;
&lt;p&gt;还有一种使用 EGF 的证明：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_n &amp;amp;= \sum_{i = 0}^n\binom n i g_i\\
\frac{f_n}{n!} &amp;amp;= \sum_{i = 0}^n\frac{1}{(n - i)!}\frac{g_i}{i!}\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这是一个卷积的形式，考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\exp(x) = \displaystyle\sum_{i = 0}\frac{x^i}{i!}\)&lt;/span&gt;，故有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
F(x) = G(x)\exp(x)\iff G(x) = F(x)\exp(-x)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\frac{g_n}{n!} &amp;amp;= \sum_{i = 0}^n\frac{f_i}{i!}(-1)^{n - i}(n - i)!\\
g_n &amp;amp;= \sum_{i = 0}^n(-1)^{n - i}\binom n i f_i
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;根据组合意义可以知道 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt; 表示“至多 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”，&lt;span class=&#34;math inline&#34;&gt;\(g_n\)&lt;/span&gt; 表示“恰好 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”。&lt;/p&gt;
&lt;h4 id=&#34;形式二&#34;&gt;形式二&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_i = \sum_{j = i}^n\binom j ig_j\iff g_i = \sum_{j = i}^n(-1)^{j - i}\binom j if_{j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;根据组合意义可以知道 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt; 表示“至少 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”，&lt;span class=&#34;math inline&#34;&gt;\(g_n\)&lt;/span&gt; 表示“恰好 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个”。&lt;/p&gt;
&lt;h4 id=&#34;应用&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;可以用于优化容斥，也可以进行奇怪的式子转化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：错排问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt; 为恰好 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 排错个的方案数，则我们知道 &lt;span class=&#34;math display&#34;&gt;\[
n! = \sum_{i = 0}^n\binom n i D_i
\]&lt;/span&gt; 这明显是二项式反演的形式，反演一下就知道 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle D_i = \sum_{i = 0}^n(-1)^{n - i}\binom n i i!\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;应用 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：染色问题。&lt;/p&gt;
&lt;p&gt;一列 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 种颜色，给每个球染色，要求相邻球颜色不同，且每种颜色至少用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 次。问方案数。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不考虑至少用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 次的限制的话就是 &lt;span class=&#34;math inline&#34;&gt;\(m(m - 1)^{n - 1}\)&lt;/span&gt;，现在我们考虑进去。设 &lt;span class=&#34;math inline&#34;&gt;\(f_k\)&lt;/span&gt; 为至多用 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 种颜色的方案数，即 &lt;span class=&#34;math inline&#34;&gt;\(k(k - 1)^{n - 1}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g_k\)&lt;/span&gt; 为恰好用 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 种颜色的方案数，则 &lt;span class=&#34;math display&#34;&gt;\[
f_k = \sum_{i = 0}^k\binom k ig_i\iff g_k = \sum_{i = 0}^k(-1)^{k - i}\binom k ii(i - 1)^{n - 1}
\]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：斯特林数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;见下文。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4859&#34;&gt;P4859 已经没有什么好害怕的了&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定两个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(\{a\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{b\}\)&lt;/span&gt;，将其两两配对，问 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;gt; b_i\)&lt;/span&gt; 比 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;lt; b_i\)&lt;/span&gt; 的情况恰好多 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组的方案数。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接令 &lt;span class=&#34;math inline&#34;&gt;\(k = \dfrac{n + k}{2}\)&lt;/span&gt;，即转化为 &lt;span class=&#34;math inline&#34;&gt;\(a_i &amp;gt; b_i\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组。这样会好想一点。&lt;/p&gt;
&lt;p&gt;如果不考虑恰好 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组这个条件而是将其变为至少 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 组，则我们可以考虑一个 dp。首先先分别排好序，然后我们设 &lt;span class=&#34;math inline&#34;&gt;\(dp_{i, j}\)&lt;/span&gt; 表示前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 里选了 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 组比 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 大的，则有转移 &lt;span class=&#34;math display&#34;&gt;\[
dp_{i, j} = dp_{i - 1, j} + (l_i - (j - 1))dp_{i - 1, j - 1}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(l_i\)&lt;/span&gt; 表示比 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 小的 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 的个数。因为已经选了 &lt;span class=&#34;math inline&#34;&gt;\(j - 1\)&lt;/span&gt; 个所以要扣去 &lt;span class=&#34;math inline&#34;&gt;\(j - 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;dp 完了之后还没完，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为至少有 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 组的答案，则 &lt;span class=&#34;math inline&#34;&gt;\(f_i = (n - i)!dp_{n, i}\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(g_i\)&lt;/span&gt; 为恰好为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 组的答案，然后快乐二项式反演就可以得到 &lt;span class=&#34;math display&#34;&gt;\[
g_k = \sum_{i = k}^n(-1)^{i - k} \binom i kf_i
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 算一下即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6478&#34;&gt;P6478 [NOI Online #2 提高组] 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有一棵 &lt;span class=&#34;math inline&#34;&gt;\(n = 2m\)&lt;/span&gt; 个点的有根树，两人初始各有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个点。一共 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 轮游戏，每轮游戏两人各选一个点，若两人选的点间构成祖先关系，则这轮会决出胜负。对于 &lt;span class=&#34;math inline&#34;&gt;\(k = 0, 1, 2,\cdots, m\)&lt;/span&gt; 求出有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 轮决出胜负的方案数。&lt;span class=&#34;math inline&#34;&gt;\(n\le 5000\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;题解见&lt;a href=&#34;https://oi.imyangty.com/sol-noiol/&#34;&gt;此处&lt;/a&gt;。本题就是上题的上树版本。&lt;/p&gt;
&lt;h3 id=&#34;min-max-容斥&#34;&gt;min-max 容斥&lt;/h3&gt;
&lt;h4 id=&#34;一般形式&#34;&gt;一般形式&lt;/h4&gt;
&lt;p&gt;假设我们能很容易的求出所有子集的 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt; 但很难求 &lt;span class=&#34;math inline&#34;&gt;\(\max\)&lt;/span&gt;，有一种容斥是可以这样做的： &lt;span class=&#34;math display&#34;&gt;\[
\max(S) = \sum_{T\subseteq S} (-1)^{|T| + 1}\min(T)
\]&lt;/span&gt; 证明：不妨给元素从小到大标号为 &lt;span class=&#34;math inline&#34;&gt;\(a_1, a_2,\cdots,a_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先，&lt;span class=&#34;math inline&#34;&gt;\(\max(S) = a_n\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(\min(T) = a_n\)&lt;/span&gt; 的情况只有 &lt;span class=&#34;math inline&#34;&gt;\(T = \{a_n\}\)&lt;/span&gt;。贡献为 &lt;span class=&#34;math inline&#34;&gt;\((-1)^{1 + 1}a_n = a_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而对于剩下的 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，假设 &lt;span class=&#34;math inline&#34;&gt;\(\min(T) = a_k\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 一定只能包含 &lt;span class=&#34;math inline&#34;&gt;\(a_k,\cdots, a_n\)&lt;/span&gt; 等元素，一共有 &lt;span class=&#34;math inline&#34;&gt;\(2^{n - k + 1}\)&lt;/span&gt; 个这样的 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 中元素奇偶性又是对半分的，故这些贡献是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(\blacksquare\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同样的还有一种形式： &lt;span class=&#34;math display&#34;&gt;\[
\min(S) = \sum_{T\subseteq S}(-1)^{|T| + 1}\max(T)
\]&lt;/span&gt; 注意 min-max 容斥在期望下也成立，所以经常可以把“最后出现的期望”一类转化为“第一次出现的期望”等问题，见例题 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3175&#34;&gt;P3175 [HAOI2015]按位或&lt;/a&gt;&lt;/strong&gt;，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3175/&#34;&gt;题解链接&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;相关题目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.51nod.com/Challenge/Problem.html#problemId=1355&#34;&gt;51nod1355 斐波那契的最小公倍数&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5643&#34;&gt;P5643 [PKUWC2018]随机游走&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，min-max 容斥还可以被推广到第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大/小，咕。&lt;/p&gt;
&lt;h4 id=&#34;kth-minmax-容斥&#34;&gt;kth-minmax 容斥&lt;/h4&gt;
&lt;p&gt;咕咕咕。&lt;/p&gt;
&lt;h2 id=&#34;群计数相关&#34;&gt;群计数相关&lt;/h2&gt;
&lt;p&gt;紧急营业，模拟赛做到了考到群计数的题。&lt;/p&gt;
&lt;p&gt;下面的定理全部没有证明，新学的请移步别处。&lt;/p&gt;
&lt;h3 id=&#34;群论基础&#34;&gt;群论基础&lt;/h3&gt;
&lt;p&gt;一个集合 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 和一个运算 &lt;span class=&#34;math inline&#34;&gt;\(\times\)&lt;/span&gt;，若满足满足如下四个性质，则称二元组 &lt;span class=&#34;math inline&#34;&gt;\((G, \times)\)&lt;/span&gt; 为一个群：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封闭性：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b\in G, a\times b\in G\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;结合律：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b, c\in G, (a\times b)\times c = a\times(b\times c)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;单位元：&lt;span class=&#34;math inline&#34;&gt;\(\exist e\in G, a\times e = e\times a = a\)&lt;/span&gt;，并且 &lt;span class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt; 唯一。&lt;/li&gt;
&lt;li&gt;逆元：&lt;span class=&#34;math inline&#34;&gt;\(\forall a\in G, \exists a&amp;#39;\in G, a\times a&amp;#39; = a&amp;#39;\times a = e\)&lt;/span&gt;，并且 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;#39;\)&lt;/span&gt; 唯一。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集合 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 的大小 &lt;span class=&#34;math inline&#34;&gt;\(|G|\)&lt;/span&gt; 称为这个群的阶。&lt;/p&gt;
&lt;p&gt;子群：&lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 的子集，并且 &lt;span class=&#34;math inline&#34;&gt;\((H, \times)\)&lt;/span&gt; 为群，则称 &lt;span class=&#34;math inline&#34;&gt;\((H,\times)\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\((G,\times)\)&lt;/span&gt; 的子群，记为 &lt;span class=&#34;math inline&#34;&gt;\(H\le G\)&lt;/span&gt;​。&lt;/p&gt;
&lt;p&gt;置换： &lt;span class=&#34;math display&#34;&gt;\[
\sigma = \begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5\\
2 &amp;amp; 5 &amp;amp; 4 &amp;amp; 3 &amp;amp; 1
\end{pmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;就是把上一行的排列变成下一行。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma = (a_1, a_2, \cdots, a_n)\)&lt;/span&gt; 表示一个置换。两个置换可以合成。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma\times a = \sigma(a) = (\sigma_{a_1}, \sigma_{a_2},\cdots,\sigma_{a_n})\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(N = \{1, \cdots, n\}\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 为所有排列的集合，令 &lt;span class=&#34;math inline&#34;&gt;\(G = (M, \times)\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 为一置换群。&lt;/p&gt;
&lt;p&gt;封闭性显然，结合律显然，单位元为 &lt;span class=&#34;math inline&#34;&gt;\((1, 2,\cdots, n)\)&lt;/span&gt;，逆元显然。&lt;/p&gt;
&lt;p&gt;轮换：将置换用一张有向图表示，由于每个点的入度/出度都为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，所以一定可以形成若干个环，例如置换： &lt;span class=&#34;math display&#34;&gt;\[
\begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5\\
2 &amp;amp; 5 &amp;amp; 4 &amp;amp; 3 &amp;amp; 1
\end{pmatrix}
\]&lt;/span&gt; 就可以表示为 &lt;span class=&#34;math inline&#34;&gt;\((1, 2, 5)(3, 4)\)&lt;/span&gt;。置换用这些表示一定是一一对应的。&lt;/p&gt;
&lt;p&gt;群作用：对于一个集合 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 和群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;，若给定一二元函数 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(v, k)\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k\in M\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(v\in G\)&lt;/span&gt;，且 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(e, k) &amp;amp;= k\\
\varphi(g, \varphi(s, k)) &amp;amp;= \varphi(g\times s, k)
\end{aligned}
\]&lt;/span&gt; 则称 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用于 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;burnside-引理&#34;&gt;Burnside 引理&lt;/h3&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 为一置换群，作用于 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;。若 &lt;span class=&#34;math inline&#34;&gt;\(x, y\in X\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用下可以相等即 &lt;span class=&#34;math inline&#34;&gt;\(\exists f\in G,f(x) = y\)&lt;/span&gt;，则定义 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 属于一个等价类，不同的等价类数量为 &lt;span class=&#34;math display&#34;&gt;\[
|X / G| = \frac{1}{|G|}\sum_{g\in G}X^g
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(X^g\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的作用下不动点的数量，即 &lt;span class=&#34;math inline&#34;&gt;\(|\{x\in X \mid g(x) = x\}|\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 在群 &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt; 作用下的等价类总数等于每个 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 作用于 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 的不动点数量的算术平均值。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案等于每个置换的不动点的平均数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;应用-1&#34;&gt;应用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1446&#34;&gt;P1446 [HNOI2008]Cards&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;要给 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 张牌染色，&lt;span class=&#34;math inline&#34;&gt;\(S_r\)&lt;/span&gt; 张红，&lt;span class=&#34;math inline&#34;&gt;\(S_g\)&lt;/span&gt; 张绿，&lt;span class=&#34;math inline&#34;&gt;\(S_b\)&lt;/span&gt; 张蓝。同时给定若干种洗牌法，保证为置换群，问本质不同的染色方案数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Burnside 引理告诉我们要求出每个置换的不动点个数。我们注意到这里每个置换都可以分解为若干个轮换环，既然是不动点那么每个环内染的颜色必然就相同，我们用一个 &lt;span class=&#34;math inline&#34;&gt;\(f_{r, g,b}\)&lt;/span&gt; 类似背包的 dp 就可以轻松求出不动点个数。&lt;/p&gt;
&lt;p&gt;然而一定要考虑单位置换的影响。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 2：&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA10601&#34;&gt;UVA10601 Cubes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 根等长，着色的木棒。问能构成的本质不同的正方体数量。颜色最多有 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 种。正方体 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 本质不同，当 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 不能通过旋转得到 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分析正方体的所有置换并拆成若干个轮换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;恒等变换：即不动。分解为 &lt;span class=&#34;math inline&#34;&gt;\((1)^{12}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对面中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(90^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(3\times 2 = 6\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((4)^3\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对面中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(180^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(3\times 1 = 3\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((2)^6\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对棱中心连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(180^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((1)^2(2)^5\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;以两个相对顶点连线为轴的 &lt;span class=&#34;math inline&#34;&gt;\(120^\circ\)&lt;/span&gt; 旋转：共有 &lt;span class=&#34;math inline&#34;&gt;\(4\times 2 = 8\)&lt;/span&gt; 种这样的置换。分解为 &lt;span class=&#34;math inline&#34;&gt;\((3)^4\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一共有 &lt;span class=&#34;math inline&#34;&gt;\(24\)&lt;/span&gt; 种这样的置换。&lt;/p&gt;
&lt;p&gt;找不动点就是给这些环填上一样颜色的方案数。不难发现就是多重组合数，套公式算就行了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;P4727 [HNOI2009]图的同构计数`&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;生成函数&#34;&gt;生成函数&lt;/h2&gt;
&lt;p&gt;咕咕咕。&lt;/p&gt;
&lt;h2 id=&#34;特殊数列&#34;&gt;特殊数列&lt;/h2&gt;
&lt;h3 id=&#34;卡特兰数&#34;&gt;卡特兰数&lt;/h3&gt;
&lt;p&gt;感觉应用也就那几种。&lt;/p&gt;
&lt;p&gt;递推公式 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
C_n = \sum_{i = 0}^{n - 1}C_iC_{n - 1 - i}
\]&lt;/span&gt; 这个式子是由一个树形 dp 推出来的。&lt;/p&gt;
&lt;p&gt;通项公式： &lt;span class=&#34;math display&#34;&gt;\[
C_n = \frac{\binom{2n}{n}}{n + 1} = \binom{2n}{n} - \binom{2n}{n - 1}
\]&lt;/span&gt; 大多数时候通过观察 dp 式子可以直接看出卡特兰，敲一个通项上去就 ok 了。&lt;/p&gt;
&lt;h3 id=&#34;斯特林数&#34;&gt;斯特林数&lt;/h3&gt;
&lt;h4 id=&#34;第二类斯特林数&#34;&gt;第二类斯特林数&lt;/h4&gt;
&lt;p&gt;第二类斯特林数（斯特林子集数）：&lt;span class=&#34;math inline&#34;&gt;\(\begin{Bmatrix}n\\k\end{Bmatrix}\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(S(n, k)\)&lt;/span&gt;，表示将&lt;strong&gt;两两不同的元素，划分为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个互不区分的非空子集的方案数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{Bmatrix}n\\k\end{Bmatrix} = \begin{Bmatrix}n - 1\\k - 1\end{Bmatrix} + k\begin{Bmatrix}n - 1\\k\end{Bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;边界为 &lt;span class=&#34;math inline&#34;&gt;\(\begin{Bmatrix}n\\0\end{Bmatrix} = [n = 0]\)&lt;/span&gt;。证明考虑组合意义：最后一个数是单独放一个子集还是选一个已经放了的子集放。&lt;/p&gt;
&lt;p&gt;我们考虑 &lt;span class=&#34;math display&#34;&gt;\[
m^n = \sum_{i = 0}^m\binom m i\begin{Bmatrix}n\\ i\end{Bmatrix}i!
\]&lt;/span&gt; 这个式子的组合意义是：将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个元素随意放入 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个有标号集合的方案数。右边是枚举非空的集合，&lt;span class=&#34;math inline&#34;&gt;\(i!\)&lt;/span&gt; 赋予集合标号。&lt;/p&gt;
&lt;p&gt;然后就可以愉快二项式反演： &lt;span class=&#34;math display&#34;&gt;\[
m!\begin{Bmatrix}n\\m\end{Bmatrix} = \sum_{i = 0}^m(-1)^{m - i}\binom m ii^n
\]&lt;/span&gt; 化简即可得到卷积形式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{Bmatrix}n\\m\end{Bmatrix} = \sum_{i=0}^m\frac{(-1)^{m - i}}{(m - i)!}\times \frac{i^n}{i!}
\]&lt;/span&gt; 然后就可以做 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5395&#34;&gt;P5395 第二类斯特林数·行&lt;/a&gt;&lt;/strong&gt; 了，直接 NTT 碾过去就行了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5824&#34;&gt;P5824 十二重计数法&lt;/a&gt;（部分）给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IV：球之间互不相同，盒子全部相同。&lt;/li&gt;
&lt;li&gt;V：球之间互不相同，盒子全部相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;VI：球之间互不相同，盒子全部相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;VI 显然就为 &lt;span class=&#34;math inline&#34;&gt;\(S(n, m)\)&lt;/span&gt;，V 则是 &lt;span class=&#34;math inline&#34;&gt;\([n\le m]\)&lt;/span&gt;，而 IV 则考虑枚举放了球的盒子个数，不难发现其为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^mS(n, i)\)&lt;/span&gt;。用 P5395 的代码碾过去就可以了。&lt;/p&gt;
&lt;h4 id=&#34;第一类斯特林数&#34;&gt;第一类斯特林数&lt;/h4&gt;
&lt;h4 id=&#34;上升幂与下降幂&#34;&gt;上升幂与下降幂&lt;/h4&gt;
&lt;h4 id=&#34;斯特林反演&#34;&gt;斯特林反演&lt;/h4&gt;
&lt;h3 id=&#34;分拆数&#34;&gt;分拆数&lt;/h3&gt;
&lt;p&gt;令自然数的分拆为递降正整数的和： &lt;span class=&#34;math display&#34;&gt;\[
n= r_1+r_2+\cdots+r_k\quad r_1\ge r_2\ge\cdots\ge r_k\ge 1
\]&lt;/span&gt; 定义分拆数 &lt;span class=&#34;math inline&#34;&gt;\(p_n\)&lt;/span&gt; 为自然数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的分拆方式数。&lt;/p&gt;
&lt;h4 id=&#34;k-部分拆数&#34;&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数&lt;/h4&gt;
&lt;p&gt;在研究 &lt;span class=&#34;math inline&#34;&gt;\(p_n\)&lt;/span&gt; 之前先考虑研究 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数 &lt;span class=&#34;math inline&#34;&gt;\(p(n,k)\)&lt;/span&gt;，即将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 拆分为恰好 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个部分的方案数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5824&#34;&gt;P5824 十二重计数法&lt;/a&gt;（部分）给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个球和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个盒子。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X：球全部相同，盒子全部相同。&lt;/li&gt;
&lt;li&gt;XI：球全部相同，盒子全部相同，每个盒子至多装一个球。&lt;/li&gt;
&lt;li&gt;XII：球全部相同，盒子全部相同，每个盒子至少装一个球。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;先考虑问题 XII，我们可以随便想出一个经典的 dp： &lt;span class=&#34;math display&#34;&gt;\[
p(n,k) = p(n - k, k) + p(n - 1, k - 1)
\]&lt;/span&gt; 其组合意义为：考虑最后一个部分放 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，或者选择把上一个分拆里面的数字全部加 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。于是这个东西就可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; dp。&lt;/p&gt;
&lt;p&gt;接下来我们考虑一下其生成函数 &lt;span class=&#34;math inline&#34;&gt;\(F_j(x) = p(0, j) + p(1, j)x + p(2, j)x^2 + p(3, j)x^3+\cdots\)&lt;/span&gt;，根据上面的递推式我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
F_j(x) = x^jF_j(x) + xF_{j - 1}(x)
\]&lt;/span&gt; 然后化简一下式子：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle F_j(x) = \frac{xF_{j - 1}(x)}{1 - x^j} = x^j\prod_{k=1}^j\frac{1}{1 - x^k}\)&lt;/span&gt;。不妨令 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle G_k(x) = \frac{1}{1 - x^k}\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
F_j(x) = x^j\prod_{k = 1}^jG_k(x) = x^jH_j(x)
\]&lt;/span&gt; 求 &lt;span class=&#34;math inline&#34;&gt;\(\prod G_k(x)\)&lt;/span&gt; 貌似是一个经典问题，这里再推导一遍。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
H_j(x) &amp;amp;= \prod_{k=1}^jG_k(x)\\
\ln H_j(x) &amp;amp;= \sum_{k=1}^j\ln G_k(x)\\
&amp;amp;= -\sum_{k=1}^j\ln(1 - x^k)\\
&amp;amp;= \sum_{k=1}^j\sum_{i=1}^{+\infty}\frac{x^{ki}}{i}
\end{aligned}
\]&lt;/span&gt; 可以暴力 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 求出来，然后做 exp 即可。&lt;/p&gt;
&lt;p&gt;这里不难发现，问题 XII 的答案为 &lt;span class=&#34;math inline&#34;&gt;\([x^{n - m}]H_m(x)\)&lt;/span&gt;，问题 X 的答案为 &lt;span class=&#34;math inline&#34;&gt;\([x^n]H_m(x)\)&lt;/span&gt;，问题 XI 的答案为 &lt;span class=&#34;math inline&#34;&gt;\([n\le m]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;事实上，若我们定义的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数中可以有 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则其生成函数就是 &lt;span class=&#34;math inline&#34;&gt;\(H_m(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;五边形数定理&#34;&gt;五边形数定理&lt;/h4&gt;
&lt;p&gt;定义五边形数 &lt;span class=&#34;math inline&#34;&gt;\(P_n = \dfrac{n(3n - 1)}{2}\)&lt;/span&gt;，将下标扩展后得到广义五边形数 &lt;span class=&#34;math inline&#34;&gt;\(P_n = \dfrac{n(3n\pm 1)}{2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;定义欧拉函数（区别数论中的欧拉函数) &lt;span class=&#34;math display&#34;&gt;\[
\phi(x) = \prod_{i=1}^{+\infty}(1 - x^i)
\]&lt;/span&gt; 则五边形数定理说的就是 &lt;span class=&#34;math display&#34;&gt;\[
\phi(x) = \prod_{i=-\infty}^{+\infty}(-1)^ix^{\frac{i(3i-1)}{2}} = 1 + \prod_{i=0}^{+\infty}(-1)^ix^{\frac{i(3i \pm 1)}{2}}
\]&lt;/span&gt; 这部分证明全部咕掉。&lt;/p&gt;
&lt;h4 id=&#34;求分拆数&#34;&gt;求分拆数&lt;/h4&gt;
&lt;p&gt;注意到，根据上面的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 部分拆数，我们可以轻松推出分拆数的生成函数为 &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \prod_{i=1}^{+\infty}\frac{1}{1 - x^i}
\]&lt;/span&gt; 发现其满足 &lt;span class=&#34;math display&#34;&gt;\[
F(x)\phi(x) = 1
\]&lt;/span&gt; 我们考虑展开 &lt;span class=&#34;math inline&#34;&gt;\([x^n]F(x)\phi(x)\)&lt;/span&gt;，有： &lt;span class=&#34;math display&#34;&gt;\[
p_n - p_{n - 1} - p_{n - 2} + p_{n - 5} + p_{n - 7} - \cdots = 0
\]&lt;/span&gt; 于是我们就得到了分拆数的递推公式（考虑对于 &lt;span class=&#34;math inline&#34;&gt;\(i&amp;lt;0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p_i = 0\)&lt;/span&gt;）： &lt;span class=&#34;math display&#34;&gt;\[
p_n = p_{n - 1} - p_{n - 2} + p_{n - 5} + p_{n - 7} - \cdots
\]&lt;/span&gt; 由于广义五边形数的增长速度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，所以求分拆数可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 的时间内进行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 2：&lt;a href=&#34;https://www.luogu.com.cn/problem/P6189&#34;&gt;P6189 [NOI Online #1 入门组] 跑步&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;单次询问任意模数拆分数，&lt;span class=&#34;math inline&#34;&gt;\(n = 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以用上面的方法直接做。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod, n, p[maxn], g[maxn], m;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, mod);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * (&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;lt;= n; ++i) g[m++] = i * (&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, g[m++] = i * (&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; j &amp;lt; m &amp;amp;&amp;amp; g[j] &amp;lt;= i; ++j) p[i] = (p[i] + (((j &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * p[i - g[j]]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print((p[n] + mod) % mod);&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然也可以根号分治，对于 &lt;span class=&#34;math inline&#34;&gt;\(\le\sqrt n\)&lt;/span&gt; 的考虑直接完全背包，然后设 &lt;span class=&#34;math inline&#34;&gt;\(g_{i, j}\)&lt;/span&gt; 为使用 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个大于等于 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 的数加出 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数，发现 &lt;span class=&#34;math inline&#34;&gt;\(i\le \sqrt n\)&lt;/span&gt;，最后合并两个 dp 的答案即可。&lt;/p&gt;
&lt;h3 id=&#34;斐波那契&#34;&gt;斐波那契&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>2021年10月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-10/</link>
        <pubDate>Sat, 02 Oct 2021 18:50:38 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-10/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg63.webp" alt="Featured image of post 2021年10月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;加油，本月 CSP。&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;斯特林数&lt;/li&gt;
&lt;li&gt;珂朵莉树&lt;/li&gt;
&lt;li&gt;min-max 容斥&lt;/li&gt;
&lt;li&gt;置换群计数&lt;/li&gt;
&lt;li&gt;二项式反演&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/10/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1892&#34;&gt;P1892 [BOI2003]团伙&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;扩展域并查集。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3252&#34;&gt;P3252 [JLOI2012]树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;水。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3402&#34;&gt;P3402 可持久化并查集&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用主席树维护每个节点的 dep 和 fa 以实现可持久化。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3531&#34;&gt;P3531 [POI2012]LIT-Letters&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;树状数组求逆序对。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/10/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1244C&#34;&gt;CF1244C The Football Season&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发掘性质之后枚举 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1416B&#34;&gt;CF1416B Make Them Equal&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小清新构造。先将所有移到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 再分发回去。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF446B&#34;&gt;CF446B DZY Loves Modification&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;行列独立，所以分开考虑，贪心计算贡献即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/10/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT2649&#34;&gt;ARC077B - 11&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;清新&lt;a href=&#34;https://oi.imyangty.com/summary-zroi202110/&#34;&gt;计数题&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1312D&#34;&gt;CF1312D Count the Arrays&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;清新&lt;a href=&#34;https://oi.imyangty.com/summary-zroi202110/&#34;&gt;计数题&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/10/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF896C&#34;&gt;CF896C Willem, Chtholly and Seniorious&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;珂朵莉树模板。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/10/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3403&#34;&gt;P3403 跳楼机&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同余最短路。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5395&#34;&gt;P5395 第二类斯特林数·行&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-combinatorics/&#34;&gt;斯特林数&lt;/a&gt;的通项公式。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1592D&#34;&gt;CF1592D Hemose in ICPC ?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;补题，&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;欧拉序上二分&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/10/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/999&#34;&gt;十一集训赠送赛&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个比赛难度有点令人难以置信。。75 + 100 + 100 + 0，rk30。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3175&#34;&gt;P3175 [HAOI2015]按位或&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3175/&#34;&gt;神仙题&lt;/a&gt;，min-max + FWT。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/2874&#34;&gt;LOJ#2874. 「JOISC 2014 Day1」历史研究&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-loj2874/&#34;&gt;回滚莫队&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/10/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.net/problem/HDU-4336/origin&#34;&gt;HDU4336 Card Collector&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;min-max 容斥直接上。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vjudge.net/problem/HDU-3072/origin&#34;&gt;HDU3072 Intelligence System&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SCC 缩点之后直接贪心找最小入边。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4980&#34;&gt;P4980 【模板】Pólya 定理&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-group/&#34;&gt;Polya&lt;/a&gt; + 欧拉反演。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1446&#34;&gt;P1446 [HNOI2008]Cards&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-group/&#34;&gt;Burnside&lt;/a&gt;。对于每个置换，分解为若干个轮换环然后背包找方案数。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/10/08&lt;/h3&gt;
&lt;p&gt;停课的第一天。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5110&#34;&gt;P5110 块速递推&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;特征根解二阶递推的通项 + 光速幂。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA10601&#34;&gt;UVA10601 Cubes&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-group/&#34;&gt;Burnside&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2561&#34;&gt;P2561 [AHOI2002]黑白瓷砖&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-group/&#34;&gt;Burnside + 高精度&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1573A&#34;&gt;CF1573A Countdown&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1573B&#34;&gt;CF1573B Swaps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1572A&#34;&gt;CF1572A Book&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拓扑排序 + 简单 dp。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1572B&#34;&gt;CF1572B Xor of 3&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较 nb 的&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;构造&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1572C&#34;&gt;CF1572C Paint&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;贪心 + 区间 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1572D&#34;&gt;CF1572D Bridge Club&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;思维 + 费用流&lt;/a&gt;。因为只选 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 条边，所以只考虑最大的 &lt;span class=&#34;math inline&#34;&gt;\(k(2n - 1)\)&lt;/span&gt; 条边。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Codeforces Round #747 (div.2)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + E1，rk606。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/10/09&lt;/h3&gt;
&lt;p&gt;摆烂。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1594E2&#34;&gt;CF1594E2 Rubik’s Cube Coloring (hard version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;补题，E2。&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;将受影响的链提出来 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc222&#34;&gt;Exawizards Programming Contest 2021（AtCoder Beginner Contest 222）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + G，rk 425&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc222/tasks/abc222_e&#34;&gt;ABC222E - Red and Blue Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;暴力覆盖边然后&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;背包&lt;/a&gt;算方案数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc222/tasks/abc222_f&#34;&gt;ABC222F - Expensive Expense&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;换根 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/10/10&lt;/h3&gt;
&lt;p&gt;模拟赛麻了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1004&#34;&gt;21秋季noip10连 day5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;牛马场。100 + 70 + 0 + 70，rk13。T1 + T2 已补。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1598&#34;&gt;Educational Codeforces Round 115 (Rated for Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;毒瘤 EDU。A + B + C + D，rk 585。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1594F&#34;&gt;CF1594F Ideal Farm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;傻逼&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;构造&lt;/a&gt;，考虑构造无解的情况，即不存在前缀和相减为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5495&#34;&gt;P5495 Dirichlet 前缀和&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在质因数的指数维做&lt;a href=&#34;https://oi.imyangty.com/sol-luogo-p5495/&#34;&gt;高维前缀和&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6810&#34;&gt;P6810 「MCOI-02」Convex Hull 凸包&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p6810/&#34;&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(\tau(\gcd(i, j))\)&lt;/span&gt; 化开之后改变枚举顺序&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3705&#34;&gt;P3705 [SDOI2017]新生舞会&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;裸的分数规划 + 费用流。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3305&#34;&gt;P3305 [SDOI2013]费用流&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发现最优策略是让最大的边最小，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3305/&#34;&gt;二分答案跑实数最大流&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/10/11&lt;/h3&gt;
&lt;p&gt;杂题听自闭。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1572E&#34;&gt;CF1572E Polygon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;计算几何 + 区间 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1598E&#34;&gt;CF1598E Staircases&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑直接 &lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;dp&lt;/a&gt; 出每个格子为终点的方案数。一次修改操作至多影响 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 个状态。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1598F&#34;&gt;CF1598F RBS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;状压 dp&lt;/a&gt; + 括号匹配的神奇性质。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/10/12&lt;/h3&gt;
&lt;p&gt;模拟赛摆烂。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1005&#34;&gt;21noip赛前20天 day1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;摆烂场。T4，rk71。已补题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1965&#34;&gt;P1965 [NOIP2013 提高组] 转圈游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;一眼弱智题&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1966&#34;&gt;P1966 [NOIP2013 提高组] 火柴排队&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;离散化之后直接上&lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;逆序对&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1969&#34;&gt;P1969 [NOIP2013 提高组] 积木大赛&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5019&#34;&gt;P5019 [NOIP2018 提高组] 铺设道路&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重题，考虑差分数组，将正值累加即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1970&#34;&gt;P1970 [NOIP2013 提高组] 花匠&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;什么牛马贪心题….😅&lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;找拐点&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1084&#34;&gt;P1084 [NOIP2012 提高组] 疫情控制&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;神仙题&lt;/a&gt;。首先二分答案，将军队尽量上提，然后分配军队去封根节点的儿子。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/10/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1008&#34;&gt;21noip赛前20天 day2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;没有挂很惨。100 + 30 + 100 + 0，rk30。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1556A&#34;&gt;CF1556A A Variety of Operations&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;申必构造。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1556B&#34;&gt;CF1556B Take Your Places!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;申必贪心。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1556C&#34;&gt;CF1556C Compressed Bracket Sequence&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;括号匹配&lt;/a&gt;好题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1556D&#34;&gt;CF1556D Take a Guess&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;交互&lt;/a&gt;。&lt;span class=&#34;math inline&#34;&gt;\(a + b = (a\land b) + (a\lor b)\)&lt;/span&gt;，询问 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 次即可解出所有数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5367&#34;&gt;P5367 【模板】康托展开&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;康托展开模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP4487&#34;&gt;SP4487 GSS6 - Can you answer these queries VI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;平衡树维护区间最大子段和。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3732&#34;&gt;BZOJ#3732. Network&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Kruskal 重构树上跑 LCA。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1556E&#34;&gt;CF1556E Equilibrium&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建成&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;括号匹配模型之后上 RMQ&lt;/a&gt; 即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/10/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1010&#34;&gt;21noip赛前20天 day3&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;真就不拿 300 就掉分呗。。100 + 100 + 40 + 0，rk49。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7834&#34;&gt;P7834 [ONTAK2010] Peaks 加强版&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建出 Kruskal 重构树之后倍增上跳找最大能满足的父亲，然后主席树子树拍扁静态 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/10/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5236&#34;&gt;P5236 【模板】静态仙人掌&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-connectivity/&#34;&gt;圆方树&lt;/a&gt;模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5058&#34;&gt;P5058 [ZJOI2004]嗅探器&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以查询&lt;a href=&#34;https://oi.imyangty.com/note-connectivity/&#34;&gt;圆方树&lt;/a&gt;上路径上的圆点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4320&#34;&gt;P4320 道路相遇&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-connectivity/&#34;&gt;圆方树&lt;/a&gt;数圆点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc128&#34;&gt;Daiwa Securities Co. Ltd. Programming Contest 2021（AtCoder Regular Contest 128）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C，rk340。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/10/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1014&#34;&gt;21秋季noip10连 day6&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;100 + 10 + 50，rk41，输麻了/kk。已补 A + B + C。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1586&#34;&gt;Codeforces Round #749 (Div. 1 + Div. 2, based on Technocup 2022 Elimination Round 1)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + F，赛后补 E，rk352，上 CM 祭。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/10/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1015&#34;&gt;21noip赛前20天 day4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输麻了。😢40+ 100 + 0 + 0，T1 数组开小了，T3 差五分钟调出来，rk99。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1553A&#34;&gt;CF1553A Digits Sum&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sb 题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1553B&#34;&gt;CF1553B Reverse String&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;枚举中间点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1553C&#34;&gt;CF1553C Penalty&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大爆搜。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1553D&#34;&gt;CF1553D Backspace&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从后往前贪心。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1553F&#34;&gt;CF1553F Pairwise Modulo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分成两部分计算贡献。&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;树状数组&lt;/a&gt; + 调和 log。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/10/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1016&#34;&gt;21noip赛前20天 day5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;爆零了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3261&#34;&gt;P3261 [JLOI2015]城池攻占&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可并堆加标记。使用优先队列实现。运算过程中记录分母可有效提升精度。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1553E&#34;&gt;CF1553E Permutation Shift&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;妙妙题&lt;/a&gt;。枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 然后发现只有 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 合法，暴力判。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/10/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1018&#34;&gt;21noip赛前20天 day6&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;100 + 100 + 100&lt;/del&gt; 100 + 60 + 0 + 0。rk56。丢人了，T2 原题数组开小了。还好 A 的大力平衡树没写挂/kk。&lt;/p&gt;
&lt;p&gt;C 已补，发现是怪怪 dp 题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1553G&#34;&gt;CF1553G Common Divisor Graph&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;妙妙题&lt;/a&gt;。答案至多为 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;，预处理答案为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的情况。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4859&#34;&gt;P4859 已经没有什么好害怕的了&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;dp + &lt;a href=&#34;https://oi.imyangty.com/summary-combinatorics/&#34;&gt;二项式反演&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-19&#34;&gt;21/10/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://zhengruioi.com/contest/1020&#34;&gt;21noip赛前20天 day7&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;100 + 100 + 100 + 50&lt;/del&gt; 0 + 0 + 100 + 50。T2 傻逼题，没想。T1 假了。已补 T1 T2。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4284&#34;&gt;P4284 [SHOI2014]概率充电器&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4284/&#34;&gt;概率 dp + 换根&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-20&#34;&gt;21/10/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6478&#34;&gt;P6478 [NOI Online #2 提高组] 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;树形背包 + &lt;a href=&#34;https://oi.imyangty.com/summary-combinatorics/&#34;&gt;二项式反演&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-21&#34;&gt;21/10/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CSP 取消了。&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7909?contestId=54994&#34;&gt;P7909 [CSP-J 2021] 分糖果（民间数据）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sb 数论题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-22&#34;&gt;21/10/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2157&#34;&gt;P2157 [SDOI2009]学校食堂&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2157/&#34;&gt;状压 dp&lt;/a&gt;，因为 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt; 很小，所以可以压进状态里面。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1408D&#34;&gt;CF1408D Searchlights&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt; 暴力&lt;a href=&#34;https://oi.imyangty.com/sol-cf1408d/&#34;&gt;枚举&lt;/a&gt;然后求后缀 &lt;span class=&#34;math inline&#34;&gt;\(\max\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF486D&#34;&gt;CF486D Valid Sets&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;钦定一个最小点然后跑&lt;a href=&#34;https://oi.imyangty.com/sol-cf486d/&#34;&gt;树形 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1582&#34;&gt;Codeforces Round #750 (Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小号参赛，A + B + C + D。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1582/problem/E&#34;&gt;CF1582E Pchelyonok and Segments&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分析答案不可能超过 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 然后直接 &lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-23&#34;&gt;21/10/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF521D&#34;&gt;CF521D Shop&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较妙的贪心。考虑将所有操作化为操作 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 然后排序即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-24&#34;&gt;21/10/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF187D&#34;&gt;CF187D BRT Contract&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf187d/&#34;&gt;线段树维护 dp 转移&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-25&#34;&gt;21/10/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4169&#34;&gt;P4169 [Violet]天使玩偶/SJY摆棋子&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;卡常，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4169/&#34;&gt;三维偏序&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-26&#34;&gt;21/10/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1989&#34;&gt;P1989 无向图三元环计数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p1989/&#34;&gt;根号分治&lt;/a&gt;科技。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT5618&#34;&gt;AGC039D - Incenters&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-agc039d/&#34;&gt;平面几何&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-27&#34;&gt;21/10/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5324&#34;&gt;P5324 [BJOI2019]删数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;牛逼线段树题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF817F&#34;&gt;CF817F MEX Queries&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;珂朵莉树。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF431D&#34;&gt;CF431D Random Task&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf431d/&#34;&gt;二分 + 数位 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT5014&#34;&gt;MSOLUTIONS2019 F Random Tournament&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-msolutions2019f/&#34;&gt;bitset 优化区间 dp&lt;/a&gt;。ZR 十八连测 Day3 原题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>21年十一集训</title>
        <link>https://oi.imyangty.com/summary-zroi202110/</link>
        <pubDate>Fri, 01 Oct 2021 10:31:44 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-zroi202110/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg19.webp" alt="Featured image of post 21年十一集训" /&gt;&lt;p&gt;密码：ACM password 5&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;PASSWORD&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;day-1-ds&#34;&gt;Day 1 DS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;【Done】&lt;strong&gt;P3531 [POI2012]LIT-Letters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给定串 A 和 B，每次操作可以交换 A 的相邻两个字符，问将 A 变成 B 的最小操作次数。&lt;/p&gt;
&lt;p&gt;将 A 串变为 B 串，每次交换相当于减少一个“逆序对”，把这个逆序对求出来就行了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【树状数组】&lt;strong&gt;LOJ#2873. 「JOISC 2014 Day1」有趣的家庭菜园&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给定一个序列，每次操作交换相邻元素，问使得这个序列变得单峰的最小操作次数。&lt;/p&gt;
&lt;p&gt;我们将数字从小到大考虑。不难发现我们每次要把一个最小的数字丢到两端。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【哈希】&lt;strong&gt;P4398 [JSOI2008]Blue Mary的战役地图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正方形里面的哈希。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【分块】&lt;strong&gt;P4117 [Ynoi2018] 五彩斑斓的世界&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【分块】&lt;strong&gt;P4108 [HEOI2015]公约数数列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;前缀 gcd 只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\log)\)&lt;/span&gt; 种，且变化至少除以 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。使用分块维护&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【分块】&lt;strong&gt;BZOJ#4867. [Ynoi2017]舌尖上的由乃&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拍扁到 dfn 上后变为区间加，区间第 k 大&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【分块】&lt;strong&gt;P4118 [Ynoi2018] 末日时在做什么？有没有空？可以来拯救吗？&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【分块】&lt;strong&gt;P4119 [Ynoi2018] 未来日记&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【Done】【根号分治】&lt;strong&gt;P1989 无向图三元环计数&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【扫描线】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-12691&#34;&gt;&lt;strong&gt;PiecewiseLinearFunction&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【并查集】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-12504&#34;&gt;&lt;strong&gt;ArcadeManao&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【dp】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-11387&#34;&gt;&lt;strong&gt;FoxAndFlowerShopDivOne&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-2-杂题&#34;&gt;Day 2 杂题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;【数学】&lt;strong&gt;CF1244C The Football Season&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从 &lt;span class=&#34;math inline&#34;&gt;\([0, w)\)&lt;/span&gt; 枚举 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;【构造】&lt;strong&gt;CF1416B Make Them Equal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无解易判。充分性：考虑把所有数字移到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，然后发回去。当然需要从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 借一点过去再全部还回来。次数最大 &lt;span class=&#34;math inline&#34;&gt;\(3n - 3\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1408D Searchlights&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分开考虑每个强盗，设 &lt;span class=&#34;math inline&#34;&gt;\(f_x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 方向上移动 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 方向需要最少移动多少。不难发现其为一个分段函数，求一个后缀 &lt;span class=&#34;math inline&#34;&gt;\(\max\)&lt;/span&gt; 就可以了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF446B DZY Loves Modification&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;行与行之间操作无关，并且注意到对一行操作会对所有列的贡献减去 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。选的行与列之间不会产生影响，但是会产生 &lt;span class=&#34;math inline&#34;&gt;\(-pxy\)&lt;/span&gt; 的贡献，贪心即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF486D Valid Sets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;枚举最小点权，然后就可以 dp 了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF431D Random Task&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发现单调性之后可以二分，然后数位 dp 判断即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-3-字符串组合&#34;&gt;Day 3 字符串+组合&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1129C Morse Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;区间dp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1320D Reachable Strings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每次操作之后，&lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的位置的奇偶性不会改变，且 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的相对位置不改变，建出两个辅助串然后用 hash 判断即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;奇怪的等式： &lt;span class=&#34;math display&#34;&gt;\[
\binom n k = \frac nk\binom{n - 1}{k - 1}
\]&lt;/span&gt; 上指标求和： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{l = 0}^n\binom l k = \binom{n + 1}{k + 1}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^nk\binom n k = n2^{n - 1}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Proof： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{k = 0}^nk\binom n k &amp;amp;= \sum_{k = 0}^nk\frac{n}{k}\binom{n - 1}{k - 1} = n2^{n - 1}
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n r \binom r k = \binom n k \binom{n - k}{r - k}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^r\binom m k\binom{n}{r - k} = \binom{m + n}{r}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(m+ n\)&lt;/span&gt; 个数选 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 个出来，钦定其分为两组，一组 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个，一组 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个，枚举 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 中选了多少个即可。 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k = 0}^m\binom m k \binom n k = \sum_{k = 0}^m\binom{m}{m - k}\binom n k = \binom{m + n}{m}
\]&lt;/span&gt; 单调路径问题：从 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt;。考虑一共走 &lt;span class=&#34;math inline&#34;&gt;\(x + y\)&lt;/span&gt; 步，其中要走 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 步横的，所以易得答案 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{x +y}x\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ARC077B 11&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为只有两个数是相同的，所以我们可以先忽略其影响，然后此时答案为 $ k $，然后去重，发现重的情况一定是两个相同的数字中间没有选数的情况，这部分答案为 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + 1 - r + l - 1}{k - 1}\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1312D Count the Arrays&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先考虑 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个数中选出我们要的，就是 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{m}{n - 1}\)&lt;/span&gt;，最大值首先显然不可能为相同的那对，故相同的有 &lt;span class=&#34;math inline&#34;&gt;\(n - 2\)&lt;/span&gt; 种可能，然后考虑剩下每个数放的位置，就是 &lt;span class=&#34;math inline&#34;&gt;\(2^{n - 3}\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-4-杂题&#34;&gt;Day 4 杂题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1578L Labyrinth&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑吃糖果之后是所有的边权减小，考虑最大生成树。在最大生成树上面 dp。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1578A Anti-Tetris&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1575M Managing Telephone Poles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆式子&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CF1575B Building an Amusement Park&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二分答案，&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2021年9月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-09/</link>
        <pubDate>Wed, 01 Sep 2021 13:49:09 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-09/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg62.webp" alt="Featured image of post 2021年9月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;加油&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/09/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2057&#34;&gt;P2057 [SHOI2007]善意的投票 / [JLOI2010]冠军调查&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最小割之集合划分问题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2423&#34;&gt;P2423 [HEOI2012]朋友圈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;求原图最大团等价于求补图最大独立集，建模成&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2423&#34;&gt;二分图&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4126&#34;&gt;P4126 [AHOI2009]最小割&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-bi-graph-and-networkflow/&#34;&gt;最小割的可行边和必须边问题&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/09/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1231&#34;&gt;P1231 教辅的组成&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆点最大流。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2472&#34;&gt;P2472 [SCOI2007]蜥蜴&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;蜥蜴建成流，柱子拆点容量为高度，跑最大流即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5854&#34;&gt;P5854 【模板】笛卡尔树&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 建笛卡尔树模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4001&#34;&gt;P4001 [ICPC-Beijing 2006]狼抓兔子&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;平面图最小割转对偶图最短路。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4174&#34;&gt;P4174 [NOI2006] 最大获利&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最大权闭合图。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP839&#34;&gt;SP839 OPTM - Optimal Marks&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆位考虑 xor，然后变为集合划分模型，&lt;a href=&#34;https://oi.imyangty.com/sol-sp839/&#34;&gt;最小割&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2762&#34;&gt;P2762 太空飞行计划问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输出方案的最大权闭合图。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/09/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF696D&#34;&gt;CF696D Legen…&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ACAM + 矩阵快速幂。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4452&#34;&gt;P4452 [国家集训队]航班安排&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对每个包机请求拆点来做。将飞机视作流。&lt;/p&gt;
&lt;p&gt;对于一个需求，如果 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 能飞到起点，那么从假源点连 &lt;span class=&#34;math inline&#34;&gt;\((s_0, i_0 +\infty, w(0, a_i))\)&lt;/span&gt;，如果能从终点飞回 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么连 &lt;span class=&#34;math inline&#34;&gt;\((i_1, t, +\infty, w(b_i, 0)\)&lt;/span&gt;，为了保证只有一架飞机飞连 &lt;span class=&#34;math inline&#34;&gt;\((i_0, i_1, t, -c)\)&lt;/span&gt;（因为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 是净利润）。之后能一个飞完到另一个的也都连边，最后连 &lt;span class=&#34;math inline&#34;&gt;\((s, s_0, k, 0)\)&lt;/span&gt;。跑最小费用最大流然后取相反数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA1322&#34;&gt;UVA1322 优化最大值电路 Minimizing Maximizer&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-uva1322/&#34;&gt;线段树维护 dp 转移&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/09/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5170&#34;&gt;P5170 【模板】类欧几里得算法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-akin-euclidean-algo/&#34;&gt;类欧&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5171&#34;&gt;P5171 Earthquake&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;稍微转化一下就是类欧了，了解一下化负数为正数的科技。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3321&#34;&gt;P3321 [SDOI2015]序列统计&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3321/&#34;&gt;原根&lt;/a&gt; + NTT&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc217&#34;&gt;AtCoder Beginner Contest 217&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D + E，rank 1321&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/09/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc217/tasks/abc217_f&#34;&gt;ABC217F - Make Pair&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;区间 DP + 组合数学&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc217/tasks/abc217_g&#34;&gt;ABC217G - Groups&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;组合数学&lt;/a&gt;化简式子。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1567&#34;&gt;Codeforces Round #742 (Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C，赛后补 &lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;D + E&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/09/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1567F&#34;&gt;CF1567F One-Four Overload&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大力结论题，建二分图。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/09/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF802I&#34;&gt;CF802I Fake News (hard)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SAM 模板题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/09/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP1811&#34;&gt;SP1811 LCS - Longest Common Substring&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SAM 找两串的 LCS。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/09/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2805&#34;&gt;P2805 [NOI2009] 植物大战僵尸&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2805/&#34;&gt;最大权闭合图&lt;/a&gt;，需拓扑排序。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5341&#34;&gt;P5341 [TJOI2019]甲苯先生和大中锋的字符串&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;找出现 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次的子串中出现次数最多的长度。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP1812&#34;&gt;SP1812 LCS2 - Longest Common Substring II&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;多串 LCS。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/09/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Codeforces Global Round 16&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/09/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/problemset/problem/1566/D2&#34;&gt;CF1566D2 - Seating Arrangements (hard version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;补题，D2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF338D&#34;&gt;CF338D GCD Table&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建成 &lt;a href=&#34;https://oi.imyangty.com/sol-cf338d/&#34;&gt;exCRT&lt;/a&gt; 后求解。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1344&#34;&gt;P1344 [USACO4.4]追查坏牛奶Pollutant Control&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;套路性问题：将边权乘上 &lt;span class=&#34;math inline&#34;&gt;\(m + 1\)&lt;/span&gt; 然后最大流除以 &lt;span class=&#34;math inline&#34;&gt;\(m + 1\)&lt;/span&gt; 就是原图最小割，模 &lt;span class=&#34;math inline&#34;&gt;\(m + 1\)&lt;/span&gt; 就是最小割的最小边数。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/09/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1237F&#34;&gt;CF1237F Balanced Domino Placements&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;行和列独立开来做&lt;a href=&#34;https://oi.imyangty.com/sol-cf1237f&#34;&gt;计数 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1912&#34;&gt;P1912 [NOI2009] 诗人小G&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;决策单调性优化 dp。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/09/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3515&#34;&gt;P3515 [POI2011]Lightning Conductor&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3515&#34;&gt;决策单调性&lt;/a&gt;，分治。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/09/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4313&#34;&gt;P4313 文理分科&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最小割集合划分，考虑对于打包的一组建虚点。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1361&#34;&gt;P1361 小M的作物&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同上。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1566E&#34;&gt;CF1566E Buds Re-hanging&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;补题，思维 dfs &lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;贪心&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/09/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2053&#34;&gt;P2053 [SCOI2007]修车&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建模成二分图带权匹配之后&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2053/&#34;&gt;费用流&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4099&#34;&gt;P4099 [HEOI2013]SAO&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较牛马的&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4099/&#34;&gt;树形 dp&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4381&#34;&gt;P4381 [IOI2008] Island&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;陈年老题，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4381/&#34;&gt;基环树的直径&lt;/a&gt;，学习了一种比较优美的实现方式。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/09/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc219&#34;&gt;Sciseed Programming Contest 2021（AtCoder Beginner Contest 219）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;状态较差，A + B + C + D。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/09/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc126&#34;&gt;AtCoder Regular Contest 126&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;状态更差，A + B。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc219/tasks/abc219_e&#34;&gt;ABC219E - Moat&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很妙的思路，考虑每种护城河对应一个“格子是否在护城河内”的状态，枚举状态判定合法就可以了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/09/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1574&#34;&gt;Educational Codeforces Round 114 (Rated for Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;状态一样很差。A + B + C，赛后补 D。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/09/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2153&#34;&gt;P2153 [SDOI2009]晨跑&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆点后直接费用流。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-19&#34;&gt;21/09/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2604&#34;&gt;P2604 [ZJOI2010]网络扩容&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;傻逼费用流。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-20&#34;&gt;21/09/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5666&#34;&gt;P5666 [CSP-S2019] 树的重心&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重心一定在重链上，&lt;a href=&#34;https://oi.imyangty.com/sol-csps2019/&#34;&gt;倍增 + 换根&lt;/a&gt;即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5665&#34;&gt;P5665 [CSP-S2019] 划分&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发掘性质之后单调队列，&lt;a href=&#34;https://oi.imyangty.com/sol-csps2019/&#34;&gt;CSP2019&lt;/a&gt;已补完。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3163&#34;&gt;P3163 [CQOI2014]危桥&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;交换源汇点，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3163/&#34;&gt;最大流&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-21&#34;&gt;21/09/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;补套题 CSP-J 2020&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cspj2020/&#34;&gt;题解链接&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-22&#34;&gt;21/09/26&lt;/h3&gt;
&lt;p&gt;补题 NOIP2011 Day 1。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1311&#34;&gt;P1311 [NOIP2011 提高组] 选择客栈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;水。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6032&#34;&gt;P6032 选择客栈 加强版&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1312&#34;&gt;P1312 [NOIP2011 提高组] Mayan 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;搜索 + &lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;剪枝&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-23&#34;&gt;21/09/27&lt;/h3&gt;
&lt;p&gt;补题 NOIP2011 Day 2。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1313&#34;&gt;P1313 [NOIP2011 提高组] 计算系数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二项式定理，注意取模。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1314&#34;&gt;P1314 [NOIP2011 提高组] 聪明的质监员&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;随便二分下答案 + 前缀和。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1315&#34;&gt;P1315 [NOIP2011 提高组] 观光公交&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要好好想想的递推 + &lt;a href=&#34;https://oi.imyangty.com/sol-past-noip/&#34;&gt;贪心&lt;/a&gt;好题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1079&#34;&gt;P1079 [NOIP2012 提高组] Vigenère 密码&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;水。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-24&#34;&gt;21/09/28&lt;/h3&gt;
&lt;p&gt;补题 NOIP2012 Day1。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1080&#34;&gt;P1080 [NOIP2012 提高组] 国王游戏&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;经典贪心，需要高精。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1081&#34;&gt;P1081 [NOIP2012 提高组] 开车旅行&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;细节比较烦的倍增。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-25&#34;&gt;21/09/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5496&#34;&gt;P5496【模板】回文自动机（PAM）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PAM 模板题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4287&#34;&gt;P4287 [SHOI2011]双倍回文&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PAM 的 trans 指针。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3649&#34;&gt;P3649 [APIO2014]回文串&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PAM 统计回文子串出现次数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5446&#34;&gt;P5446 [THUPC2018]绿绿和串串&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5446/&#34;&gt;Manacher&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3501&#34;&gt;P3501 [POI2010]ANT-Antisymmetry&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;裸 Manacher。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc126/tasks/arc126_c&#34;&gt;ABC126C - Maximize GCD&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;补题&lt;/a&gt;，枚举这个 gcd 然后调和 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 统计贡献。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-26&#34;&gt;21/09/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6189&#34;&gt;P6189 [NOI Online #1 入门组] 跑步&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;奇怪的根号分治优化背包。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Codeforces Round #745 (Div. 2)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;诡诈的场。。A + B + C，rk289。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>数论复习 1（简单数论）</title>
        <link>https://oi.imyangty.com/summary-number-theory1/</link>
        <pubDate>Thu, 12 Aug 2021 14:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-number-theory1/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg16.webp" alt="Featured image of post 数论复习 1（简单数论）" /&gt;&lt;p&gt;自己的总结，既适合新手入门也适合省选复习。文章可能很长，善用 TOC 进行跳转。&lt;/p&gt;
&lt;p&gt;主要分为若干个板块，可能中间会有难度较高的内容，可以跳读。&lt;/p&gt;
&lt;h2 id=&#34;前置常用技巧&#34;&gt;前置常用技巧&lt;/h2&gt;
&lt;p&gt;较难归类的但是非常实用的小技巧。&lt;/p&gt;
&lt;h3 id=&#34;常见符号&#34;&gt;常见符号&lt;/h3&gt;
&lt;p&gt;下文使用时将不加说明。&lt;/p&gt;
&lt;p&gt;求和/求积符号： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{i = 1}^n f(i) &amp;amp;= f(1) + f(2) + \cdots f(n)\\
\prod_{i =1}^nf(i) &amp;amp;= f(1)\times f(2)\times \cdots\times f(n)\\
\sum_{p(x)\text{ is true}}f(x) &amp;amp;= f(x_1) + f(x_2) + \cdots\text{for all }x_i\text{ that meet the proposition}
\end{aligned}
\]&lt;/span&gt; 艾弗森括号： &lt;span class=&#34;math display&#34;&gt;\[
[P] = 
\begin{cases}
1,&amp;amp;\text{if the proposition } P \text{ is true}\\
0,&amp;amp;\text{if the proposition } P \text{ is false}
\end{cases}
\]&lt;/span&gt; 集合的表示： &lt;span class=&#34;math display&#34;&gt;\[
S = \{x:P\}
\]&lt;/span&gt; 表示满足条件 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 构成的集合。&lt;/p&gt;
&lt;h3 id=&#34;龟速乘快速乘&#34;&gt;龟速乘/快速乘&lt;/h3&gt;
&lt;p&gt;有些毒瘤题会存在形如 &lt;code&gt;ll * ll % ll&lt;/code&gt; 的操作，直接乘是会溢出出去的，在开不了 &lt;code&gt;__int128&lt;/code&gt; 的时候只能考虑这两种方法。&lt;/p&gt;
&lt;p&gt;龟速乘是指像做快速幂一样，只不过是乘法换加法，思想是一样的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll mul(ll a, ll b, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = a;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = (b + mod) % mod, a = (a + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = (ans + x) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = (x &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;而快速乘则是利用了 &lt;code&gt;long double&lt;/code&gt; 的神奇性质，一行就可以搞定：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; ldb;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll mul(ll a, ll b, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (a * b - (ll)((ldb)a / mod * b) * mod + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还未经过实测，但是模数很大时建议不使用，容易掉精度。&lt;/p&gt;
&lt;p&gt;其原理即为 &lt;span class=&#34;math display&#34;&gt;\[
a\times b\equiv a\times b - \left\lfloor\frac{a\times b}{p}\right\rfloor p\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;upd：解禁了 &lt;code&gt;__int128&lt;/code&gt; 之后这个东西应该是没必要了。。&lt;/p&gt;
&lt;h3 id=&#34;光速幂&#34;&gt;光速幂&lt;/h3&gt;
&lt;p&gt;由于快速幂怎么样都会带一个 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;，在部分时限卡得很紧的题目中仍会 TLE，故引入该 trick。&lt;/p&gt;
&lt;p&gt;其适用于模数固定，底数固定的情况。例：&lt;span class=&#34;math inline&#34;&gt;\(a^b\bmod p\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不变。&lt;/p&gt;
&lt;p&gt;原理为分段打表。首先 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 如果为质数的话就欧拉定理降个幂，然后设指数上界为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，考虑 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt m\)&lt;/span&gt; 为阈值，处理出 &lt;span class=&#34;math inline&#34;&gt;\(a^0, a^1, \cdots, a^{\sqrt m}\)&lt;/span&gt;，然后再处理出 &lt;span class=&#34;math inline&#34;&gt;\(a^0, a^{\sqrt m}, a^{2\sqrt m}, \cdots, a^{\sqrt m \times \sqrt m}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这样就可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 回答询问。代码很好写，不放了。&lt;/p&gt;
&lt;h3 id=&#34;底函数顶函数&#34;&gt;底函数/顶函数&lt;/h3&gt;
&lt;p&gt;记 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor x\rfloor\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 向下取整，&lt;span class=&#34;math inline&#34;&gt;\(\lceil x\rceil\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 向上取整。&lt;/p&gt;
&lt;p&gt;那么有常见放缩：&lt;span class=&#34;math inline&#34;&gt;\(\lfloor x\rfloor \le x\le \lceil x\rceil\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关键性质 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：若 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 是单增函数，且 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\in\mathbb Z\implies x\in\mathbb Z\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\lfloor f(\lfloor x\rfloor )\rfloor = \lfloor f(x)\rfloor\land \lceil f(\lceil x\rceil )\rceil = \lceil f(x)\rceil
\]&lt;/span&gt; 具体证明可以画出函数图像来脑补一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这于是告诉了我们，对于正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor\lfloor x / m\rfloor/n\rfloor = \lfloor x / mn\rfloor\)&lt;/span&gt;，这个结论在后文推导莫比乌斯反演题目的时候很有用。&lt;/p&gt;
&lt;p&gt;另外，对于底函数，有&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关键性质 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：对于正整数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，若令 &lt;span class=&#34;math inline&#34;&gt;\(y = \displaystyle\left\lfloor\frac{n}{\lfloor\frac nx\rfloor}\right\rfloor\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[x, y]\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor = \lfloor n / x\rfloor\)&lt;/span&gt;。（整除分块）&lt;/p&gt;
&lt;p&gt;具体证明见下文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数学基础&#34;&gt;数学基础&lt;/h3&gt;
&lt;p&gt;对数函数：若 &lt;span class=&#34;math inline&#34;&gt;\(a^x = b\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;gt;0\land a\ne1,b&amp;gt;0\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\log_ab = x\)&lt;/span&gt;。一般地记 &lt;span class=&#34;math inline&#34;&gt;\(\ln x = \log_{\mathrm e}x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lg x = \log_{10}x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对数函数的运算性质： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\log_ab &amp;amp;= \frac{\log_cb}{\log_ca}&amp;amp;\text{换底公式}\\
\log_ab\log_bc &amp;amp;= \log_ac\\
\log_a{xy} &amp;amp;= \log_a x + \log_ay&amp;amp;\text{化乘为加}\\
\end{aligned}
\]&lt;/span&gt; 复杂度分析时一般忽略底数（因为也就是常数级别的差距）。&lt;/p&gt;
&lt;p&gt;另外给出几个常见和式的估算：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(A(n) =\displaystyle 1 + \frac{1}{\sqrt 2} + \frac{1}{\sqrt 3} + \cdots + \frac{1}{\sqrt n}\)&lt;/span&gt;，放缩或者积分逼近有 &lt;span class=&#34;math inline&#34;&gt;\(A(n) = \Theta(\sqrt n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(B(n) = 1 + \sqrt 2+ \sqrt 3+\cdots + \sqrt n\)&lt;/span&gt;，积分逼近有 &lt;span class=&#34;math inline&#34;&gt;\(B(n) = \Theta(n\sqrt n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;调和级数求和 &lt;span class=&#34;math inline&#34;&gt;\(H(n) = \displaystyle 1 + \frac12 + \frac 13 + \cdots \frac 1n\)&lt;/span&gt;，积分逼近或放缩有 &lt;span class=&#34;math inline&#34;&gt;\(H(n) = \Theta(\ln n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些很重要的公式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;等差数列前缀和：&lt;span class=&#34;math inline&#34;&gt;\(S(n) = \dfrac{(a_1 + a_n)n}{2}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;等比数列前缀和：&lt;span class=&#34;math inline&#34;&gt;\(S(n) = \dfrac{a_1(1 - q^n)}{1 - q}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;一些常见的前缀和：
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1+2+\cdots+n = \dfrac{n(n+1)}{2}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1^2+2^2+\cdots+n^2 = \dfrac{n(n+1)(2n+1)}{6}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(1^3 + 2^3 + \cdots + n^3 = \left(\dfrac{n(n+1)}{2}\right)^2\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数论基础&#34;&gt;数论基础&lt;/h2&gt;
&lt;p&gt;一些很基础的内容，大体了解之后再开始下面的深入学习。&lt;/p&gt;
&lt;h3 id=&#34;整除&#34;&gt;整除&lt;/h3&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(a,b\in Z\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\ne 0\)&lt;/span&gt;。若 &lt;span class=&#34;math inline&#34;&gt;\(\exists q\in Z\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(b = aq\)&lt;/span&gt;，则说 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 可以被 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 整除，记作 &lt;span class=&#34;math inline&#34;&gt;\(a\mid b\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的约数，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的倍数。&lt;/p&gt;
&lt;p&gt;具有如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传递性：&lt;span class=&#34;math inline&#34;&gt;\(a\mid b\land b\mid c\implies a\mid c\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a\mid b\land a\mid c\iff \forall x,y\in Z, a\mid xb + yc\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;带余除法&#34;&gt;带余除法&lt;/h3&gt;
&lt;p&gt;一般来说，令 &lt;span class=&#34;math inline&#34;&gt;\(a,b\in Z\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a\ne 0\)&lt;/span&gt;，则一定存在&lt;strong&gt;唯一确定&lt;/strong&gt;的一组整数 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 满足 &lt;span class=&#34;math display&#34;&gt;\[
b = qa + r,0\le r &amp;lt; |a|
\]&lt;/span&gt; 称为带余除法，&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 为商，&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为余数。&lt;/p&gt;
&lt;p&gt;注意，&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 只能取 &lt;span class=&#34;math inline&#34;&gt;\(\{0, 1, \cdots, a - 1\}\)&lt;/span&gt; 中的数字。在 C++ 中，使用 &lt;code&gt;a % b&lt;/code&gt; 语句得到 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 除以 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的余数。&lt;/p&gt;
&lt;h3 id=&#34;lcm-与-gcd&#34;&gt;LCM 与 GCD&lt;/h3&gt;
&lt;p&gt;LCM，GCD 的详细定义见下文。&lt;/p&gt;
&lt;p&gt;互素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1, a_2) = 1\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(a_1\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(a_2\)&lt;/span&gt; 互素（既约/互质），记作 &lt;span class=&#34;math inline&#34;&gt;\(a_1\perp a_2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1,\cdots, a_n) = 1\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(a_1,\cdots, a_n\)&lt;/span&gt; 互素。&lt;/li&gt;
&lt;li&gt;多个整数互素并不代表他们一定两两互素。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;质数&#34;&gt;质数&lt;/h3&gt;
&lt;p&gt;质数：令 &lt;span class=&#34;math inline&#34;&gt;\(a\neq 0,\pm 1\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 除了 &lt;span class=&#34;math inline&#34;&gt;\(\pm 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\pm a\)&lt;/span&gt; 外无其他约数，则称 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为质数。&lt;/p&gt;
&lt;p&gt;合数：令 &lt;span class=&#34;math inline&#34;&gt;\(a\neq 0,\pm 1\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 不是质数，则为合数。&lt;/p&gt;
&lt;p&gt;以下的质数一般指正质数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的整数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为合数等价于 &lt;span class=&#34;math inline&#34;&gt;\(a = d\times e\)&lt;/span&gt;，其中 $1&amp;lt; d,e &amp;lt;a $。&lt;/li&gt;
&lt;li&gt;偶质数只有 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;质数有无限个，证明考虑反证法。&lt;/li&gt;
&lt;li&gt;对于合数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，一定存在质数 &lt;span class=&#34;math inline&#34;&gt;\(p \le \sqrt a\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(p\mid a\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;算术基本定理唯一分解定理&#34;&gt;算术基本定理（唯一分解定理）&lt;/h3&gt;
&lt;p&gt;正整数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 必能表示成如下形式： &lt;span class=&#34;math display&#34;&gt;\[
a = p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_k^{\alpha_k}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 为质数，上式为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的标准质因子分解式。&lt;/p&gt;
&lt;h3 id=&#34;同余&#34;&gt;同余&lt;/h3&gt;
&lt;p&gt;设整数 &lt;span class=&#34;math inline&#34;&gt;\(m\neq 0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\mid a - b\)&lt;/span&gt;，则称在模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下，&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 同余，记作 &lt;span class=&#34;math display&#34;&gt;\[
a\equiv b\pmod m
\]&lt;/span&gt; 一般来说模数都是正整数。&lt;/p&gt;
&lt;p&gt;性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自反性：&lt;span class=&#34;math inline&#34;&gt;\(a\equiv a\pmod m\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;对称性：&lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\iff b\equiv a\pmod m\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;传递性：&lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\land b\equiv c\pmod m\implies a\equiv c\pmod m\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;线性运算：若 &lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(c\equiv d\pmod m\)&lt;/span&gt;，则
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a\pm c\equiv b\pm d\pmod m\)&lt;/span&gt;。（加减上）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(ac\equiv bd\pmod m\)&lt;/span&gt;。乘法可以但是&lt;strong&gt;除法不行&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(ak\equiv bk\pmod {mk}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k\neq 0\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;除法的情况&lt;/strong&gt;：&lt;span class=&#34;math inline&#34;&gt;\(k\mid a\land k\mid b\land k\mid m\)&lt;/span&gt;：若 &lt;span class=&#34;math inline&#34;&gt;\(a\equiv b\pmod m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac ak\equiv \dfrac bk\pmod{\dfrac mk}\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;乘法逆元见下。&lt;/p&gt;
&lt;p&gt;一般在写程序时应用：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;(a + b) % p = (a % p + b % p) % p&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;(a * b) % p = (a % p) * (b % p) % p&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这就是为什么很多题目要求我们对很大的答案可以取模输出。&lt;/p&gt;
&lt;h3 id=&#34;数论函数&#34;&gt;数论函数&lt;/h3&gt;
&lt;p&gt;定义域为 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf N^*\)&lt;/span&gt;，值域为 &lt;span class=&#34;math inline&#34;&gt;\(\mathbf C\)&lt;/span&gt; 的函数（可看作数列）。&lt;/p&gt;
&lt;p&gt;积性函数：若 &lt;span class=&#34;math inline&#34;&gt;\(f(1) = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\forall x\perp y\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(f(xy) = f(x)f(y)\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 为积性函数。&lt;/p&gt;
&lt;p&gt;完全积性：若 &lt;span class=&#34;math inline&#34;&gt;\(f(1) = 1\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(\forall x,y\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(f(xy) = f(x)f(y)\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 为完全积性函数。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 为积性函数，则下列函数也是积性（易证）： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
h(x) &amp;amp;= f(x^p)\\
h(x) &amp;amp;= f^p(x)\\
h(x) &amp;amp;= f(x)g(x)\\
h(x) &amp;amp;= f(x)*g(x) = \sum_{d\mid x}f(d)g(\frac xd)
\end{aligned}
\]&lt;/span&gt; 积性函数一般可以指导我们干这样的事情，令 &lt;span class=&#34;math inline&#34;&gt;\(x = \prod p_i^{\alpha_i}\)&lt;/span&gt;（标准分解式） &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \prod F(p_i^{\alpha_i})
\]&lt;/span&gt; 这个性质很关键，可以解决很多问题。&lt;/p&gt;
&lt;p&gt;常见的函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单位函数：&lt;span class=&#34;math inline&#34;&gt;\(\epsilon(n) = [n = 1]\)&lt;/span&gt;，完全积性。&lt;/li&gt;
&lt;li&gt;幂函数：&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{id}_k(n) = n^k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{id}_1\)&lt;/span&gt; 一般记作 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{id}\)&lt;/span&gt;，完全积性。&lt;/li&gt;
&lt;li&gt;常数函数：&lt;span class=&#34;math inline&#34;&gt;\(1(n) = 1\)&lt;/span&gt;，完全积性。&lt;/li&gt;
&lt;li&gt;除数函数：&lt;span class=&#34;math inline&#34;&gt;\(\sigma_k(n) = \sum_{d\mid n}d^k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\sigma_0(n)\)&lt;/span&gt; 一般记作 &lt;span class=&#34;math inline&#34;&gt;\(d(n)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(\tau(n)\)&lt;/span&gt;，表示约数个数。&lt;span class=&#34;math inline&#34;&gt;\(\sigma_1(n)\)&lt;/span&gt; 一般记作 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(n)\)&lt;/span&gt;，表示约数之和，积性。&lt;/li&gt;
&lt;li&gt;欧拉函数：&lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 内与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互质的数的个数：&lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = \sum_{i = 1}^{n - 1}[i\perp n]\)&lt;/span&gt;，积性。&lt;/li&gt;
&lt;li&gt;莫比乌斯函数：&lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = \begin{cases}1&amp;amp;n = 1\\0&amp;amp;\exists d &amp;gt; 1\land d^2\mid n\\(-1)^{\omega(n)}&amp;amp;\text{otherwise}\end{cases}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(\omega(n)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的本质不同质因子个数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欧拉函数的性质下文会提到，莫比乌斯函数会在莫反一节进一步展开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;几乎所有的积性函数&lt;/strong&gt;都可以使用 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 线性筛，详见下文线性筛部分。&lt;/p&gt;
&lt;h2 id=&#34;最大公约数相关&#34;&gt;最大公约数相关&lt;/h2&gt;
&lt;h3 id=&#34;基础性质&#34;&gt;基础性质&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, b)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最大公约数，其相当于在每个质因子的幂次上面取 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}(a, b)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 的最小公倍数，相当于取 &lt;span class=&#34;math inline&#34;&gt;\(\max\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;即： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a &amp;amp;= \prod p_i^{x_i}\\
b &amp;amp;= \prod p_i^{y_i}\\
\gcd(a, b) &amp;amp;= \prod p_i^{\min(x_i, y_i)}\\
\operatorname{lcm}(a, b) &amp;amp;= \prod p_i^{\max(x_1, y_i)}
\end{aligned}
\]&lt;/span&gt; 于是我们可以得到下面的一个关键性质（常用于 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}\)&lt;/span&gt; 的互化）： &lt;span class=&#34;math display&#34;&gt;\[
\gcd(a,b) \times \operatorname{lcm}(a,b) = a\times b
\]&lt;/span&gt; 对于多个数，相当于就是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,\gcd(b, c))\)&lt;/span&gt;，道理是一样的。&lt;/p&gt;
&lt;h3 id=&#34;欧几里得算法辗转相除法&#34;&gt;欧几里得算法（辗转相除法）&lt;/h3&gt;
&lt;p&gt;考虑求 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b)\)&lt;/span&gt;。结论： &lt;span class=&#34;math display&#34;&gt;\[
\gcd(a,b) = \gcd(b, a\bmod b)
\]&lt;/span&gt; 考虑进行证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a &amp;lt; b\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(b, a\bmod b) = \gcd(b, a)\)&lt;/span&gt;，显然得证。&lt;/li&gt;
&lt;li&gt;否则，设 &lt;span class=&#34;math inline&#34;&gt;\(a = qb + r\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(0\le r &amp;lt; b\)&lt;/span&gt;，显然 &lt;span class=&#34;math inline&#34;&gt;\(r = a\bmod b\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\forall d\mid a, d\mid b\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(d\mid (a - qb)\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(d\mid r\)&lt;/span&gt;，相当于 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r, b\)&lt;/span&gt; 的公因数集合是一样的。其 gcd 自然相等，得证。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;递归写法，因为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, 0) = a\)&lt;/span&gt;，所以递归终止条件是 &lt;span class=&#34;math inline&#34;&gt;\(b = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; !b ? a : gcd(b, a % b);}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;时间复杂度：由于若 &lt;span class=&#34;math inline&#34;&gt;\(a \ge b\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a\bmod b\)&lt;/span&gt; 一次至少可以让 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 折半，&lt;span class=&#34;math inline&#34;&gt;\(a&amp;lt;b\)&lt;/span&gt; 的下一步必然是 &lt;span class=&#34;math inline&#34;&gt;\(a\ge b\)&lt;/span&gt;，故时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;。上界很松，但 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(Fib_i, Fib_{i + 1})\)&lt;/span&gt; 可以将其卡满。&lt;/p&gt;
&lt;h3 id=&#34;stein-算法更相减损术&#34;&gt;Stein 算法（更相减损术）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P2152&#34;&gt;P2152 [SDOI2009]SuperGCD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(a, b\le 10^{10000}\)&lt;/span&gt; 的最大公约数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直接使用辗转相除法的话，时间复杂度会炸的很恼火（因为高精除法较慢），而单纯辗转相减又容易遇到一些不优的情况。所以考虑二进制优化： &lt;span class=&#34;math display&#34;&gt;\[
\forall a,b\in \mathbf N, a \ge b\implies \gcd(a, b) = \gcd(a, a - b) = \gcd(b, a - b)
\]&lt;/span&gt; 并且 &lt;span class=&#34;math display&#34;&gt;\[
\gcd(2a, 2b) = 2\gcd(a, b)
\]&lt;/span&gt; 注意到减两次就一定会遇到偶数，可以除以 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;，因此复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(\log^2\)&lt;/span&gt; 级别（单次运算 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;）。套用该算法并使用压位高精便可通过本题。&lt;/p&gt;
&lt;h3 id=&#34;拓展欧几里得&#34;&gt;拓展欧几里得&lt;/h3&gt;
&lt;p&gt;主要用于求解 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = c\)&lt;/span&gt; 的整数不定方程相关问题。&lt;/p&gt;
&lt;p&gt;一部分线性同余方程可以等价转化为上式求解。&lt;/p&gt;
&lt;h4 id=&#34;求解过程&#34;&gt;求解过程&lt;/h4&gt;
&lt;p&gt;由下文裴蜀定理可知，$(a,b)c $ 时方程才有解。现在不妨先解决方程 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = \gcd(a, b)\)&lt;/span&gt;，解出答案后扩大相应倍数即可。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
ax_1 + by_1 &amp;amp;= \gcd(a, b)\\
bx_2 + (a\bmod b)y_2 &amp;amp;= \gcd(b, a\bmod b)
\end{aligned}
\]&lt;/span&gt; 由于 &lt;span class=&#34;math inline&#34;&gt;\((a, b) = (b, a\bmod b)\)&lt;/span&gt;，故 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
ax_1 + by_1 &amp;amp;= bx_2 + (a\bmod b)y_2\\
ax_1 + by_1 &amp;amp;= bx_2 + (a - b\lfloor\frac ab\rfloor)y_2\\
ax_1 + by_1 &amp;amp;= bx_2 + ay_2 - b(\lfloor\frac ab\rfloor y_2)\\
ax_1 + by_1 &amp;amp;= ay_2 + b(x_2 - \lfloor\frac ab\rfloor y_2)
\end{aligned}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math inline&#34;&gt;\(x_1 = y_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y_1 = x_2 - \lfloor\frac ab\rfloor y_2\)&lt;/span&gt;。写成代码就是：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exgcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b) {&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d = exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;边界条件显然有 &lt;span class=&#34;math inline&#34;&gt;\(a\times 1 + 0\times b = a\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这样子解出来的一组解是 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = \gcd(a, b)\)&lt;/span&gt; 的一组特解 &lt;span class=&#34;math inline&#34;&gt;\((x_0, y_0)\)&lt;/span&gt;。回代一下原方程： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
ax_0 + by_0 &amp;amp;= \gcd(a, b)\\
a\cdot\frac{cx_0}{\gcd(a, b)} + b\cdot\frac{cy_0}{\gcd(a, b)} &amp;amp;= c
\end{aligned}
\]&lt;/span&gt; 所以原方程的特解 &lt;span class=&#34;math inline&#34;&gt;\(x^*\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y^*\)&lt;/span&gt; 为 &lt;span class=&#34;math display&#34;&gt;\[
x^* =\frac{cx_0}{\gcd(a, b)}, y^* =\frac{cy_0}{\gcd(a, b)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;构造通解&#34;&gt;构造通解&lt;/h4&gt;
&lt;p&gt;设任意 &lt;span class=&#34;math inline&#34;&gt;\(d\in\mathbf Q\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
a(x^* + db) + b(y^* - da) = c
\]&lt;/span&gt; 必然是成立的。通解需要保证 &lt;span class=&#34;math inline&#34;&gt;\(x^* + db\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(y^* - da\)&lt;/span&gt; 都为整数，所以通解的形式为： &lt;span class=&#34;math display&#34;&gt;\[
x = x^* + s\cdot\frac{b}{\gcd(a, b)}\\
y = y^* - s\cdot\frac{a}{\gcd(a, b)}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(s\in \mathbf Z\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们是不是就可以知道，&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 是负相关的。其实我们将其表示的直线画在坐标系里面就会发现这是显然的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1082&#34;&gt;P1082 [NOIP2012 提高组] 同余方程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv 1 \pmod b\)&lt;/span&gt; 的最小正整数解。&lt;span class=&#34;math inline&#34;&gt;\(2\le a,b\le 2\times 10^9\)&lt;/span&gt;，保证有解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;稍微转化一下问题，引入另一个未知量 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 得到 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = 1\)&lt;/span&gt;，用 exgcd 解一组特解，然后由 &lt;span class=&#34;math inline&#34;&gt;\(x = x^* + s\cdot b\)&lt;/span&gt; 得到答案为 &lt;span class=&#34;math inline&#34;&gt;\(x\bmod b\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1516&#34;&gt;P1516 青蛙的约会&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;长度为 &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; 的首尾相接的数轴上有两只青蛙，坐标分别为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，分别每次能往前跳 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个单位长度，求最少跳几次后相遇。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不难得到题目需要我们解如下关于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的方程的最小正整数解： $x+kmy+knL $ 化简可得到 &lt;span class=&#34;math inline&#34;&gt;\((m-n)k\equiv y-x\pmod L\)&lt;/span&gt; 也就是说，我们只要找得到方程 &lt;span class=&#34;math inline&#34;&gt;\((m-n)k+Lj=y-x\)&lt;/span&gt; （其中 &lt;span class=&#34;math inline&#34;&gt;\(j\in\mathbb{Z}\)&lt;/span&gt;）的最小正整数解即可，直接上 exgcd。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;​：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5656&#34;&gt;P5656 【模板】二元一次不定方程 (exgcd)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定不定方程 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = c\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(a,b,c\in\mathbf Z\)&lt;/span&gt;。若无整数解，输出 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;；若有正整数解，输出其数量，所有&lt;strong&gt;正整数解&lt;/strong&gt;中 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小值/最大值以及 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的最小值/最大值；若无正整数解，输出所有&lt;strong&gt;整数解&lt;/strong&gt;中 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小正整数值和 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 的最小正整数值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;无解直接判 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b)\)&lt;/span&gt; 是否整除 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;然后不妨令上文中的 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{b}{\gcd(a,b)}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(d_x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{a}{\gcd(a,b)}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(d_y\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x = x^* + sd_x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y = y^* - sd_y\)&lt;/span&gt;。对于正整数解的限制就列不等式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
x^* + sd_x&amp;gt; 0 &amp;amp;\implies s \ge \left\lceil\frac{-x^* + 1}{d_x}\right\rceil\\
y^* - sd_y&amp;gt;0 &amp;amp;\implies s\le \left\lfloor\frac{y^* - 1}{d_y} \right\rfloor
\end{aligned}
\]&lt;/span&gt; 界出来了就可以直接判合法的 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 是否存在了。&lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 取最大对应 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 最大，&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 最小，反之亦然。于是本题得到了解决。&lt;/p&gt;
&lt;h4 id=&#34;值域分析&#34;&gt;值域分析&lt;/h4&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = \gcd(a,b)\)&lt;/span&gt; 的特解 &lt;span class=&#34;math inline&#34;&gt;\((x^*, y^*)\)&lt;/span&gt;，有如下关于值域的结论：&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(b\ne 0\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x^*\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(y^*\)&lt;/span&gt; 必满足 &lt;span class=&#34;math inline&#34;&gt;\(|x|\le b\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|y|\le a\)&lt;/span&gt;。归纳证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b) = b\)&lt;/span&gt; 时，必然在下一层停止递归。此时 &lt;span class=&#34;math inline&#34;&gt;\(x^* = 0, y^* = 1\)&lt;/span&gt;，显然 &lt;span class=&#34;math inline&#34;&gt;\(a,b\ge 1\ge |x^*|, |y^*|\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a,b) \ne b\)&lt;/span&gt; 时，设 &lt;span class=&#34;math inline&#34;&gt;\(|x_2|\le (a\bmod b),|y_2|\le b\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(x^* = y_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y^* = x_2 - \lfloor a / b\rfloor y_2\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(|x^*| = |y_2|\le b\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;而 &lt;span class=&#34;math inline&#34;&gt;\(|y^*| \le |x_2| + |\lfloor a / b\rfloor\cdot y_2|\le (a\bmod b) + \lfloor a / b\rfloor y_2\le a - \lfloor a/ b\rfloor(b - |y_2|)\le a\)&lt;/span&gt;。证毕。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，exgcd 解出来的解&lt;del&gt;铁定是不会爆值域的&lt;/del&gt;。&lt;/p&gt;
&lt;h3 id=&#34;裴蜀定理&#34;&gt;裴蜀定理&lt;/h3&gt;
&lt;p&gt;对于两个数的情况：&lt;span class=&#34;math inline&#34;&gt;\(\forall a, b\in \mathbf Z\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, b) = d\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\forall x,y\in\mathbf Z\)&lt;/span&gt;，都有 &lt;span class=&#34;math display&#34;&gt;\[
d\mid ax + by
\]&lt;/span&gt; 特别的，&lt;span class=&#34;math inline&#34;&gt;\(\exists x, y\in\mathbf Z\)&lt;/span&gt; 使得 &lt;span class=&#34;math display&#34;&gt;\[
ax + by = d
\]&lt;/span&gt; 证明：考虑若 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = d\)&lt;/span&gt; 成立，则 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = sd\)&lt;/span&gt;（其中 &lt;span class=&#34;math inline&#34;&gt;\(s\in \mathbb Z\)&lt;/span&gt;）也是成立的。所以先证明 &lt;span class=&#34;math inline&#34;&gt;\(ax + by = d\)&lt;/span&gt; 成立。&lt;/p&gt;
&lt;p&gt;然后，假设其成立，则我们可以两边同时除以 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，得到 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;#39;x + b&amp;#39;y = 1\)&lt;/span&gt;，故我们证明其成立即可。&lt;/p&gt;
&lt;p&gt;我们构造一个解：回顾辗转相除法，设每次模出来的余数为 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt;，则我们有： &lt;span class=&#34;math display&#34;&gt;\[
(a_1, b_1) = (b_1, r_1) = (r_1, r_2) = \cdots (r_{n - 1}, r_n) = 1
\]&lt;/span&gt; 展开辗转相除过程中的运算： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a_1 &amp;amp;= q_1b_1 + r_1\\
b_1 &amp;amp;= q_2r_1 + r_2\\
r_1 &amp;amp;= q_3r_2 + r_3\\
&amp;amp;\cdots\\
r_{n - 3} &amp;amp;= q_{n - 1}r_{n - 2} + r_{n - 1}\\
r_{n - 2} &amp;amp;= q_{n}r_{n - 1} + r_n\\
r_{n - 1} &amp;amp;= q_{n + 1}r_n
\end{aligned}
\]&lt;/span&gt; 辗转相除到最后，&lt;span class=&#34;math inline&#34;&gt;\(r_n = 1\)&lt;/span&gt;，将所有的 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 换成 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的形式： &lt;span class=&#34;math display&#34;&gt;\[
r_{n - 2} = x_nr_{n - 1} + 1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
r_{n - 2} - r_{n - 1}x_n = 1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后将倒数第三个式子 &lt;span class=&#34;math inline&#34;&gt;\(r_{n - 1} = r_{n - 3} - x_{n - 1}r_{n - 2}\)&lt;/span&gt; 代入，则 &lt;span class=&#34;math display&#34;&gt;\[
r_{n - 3}x_1 -  x_{n - 1}x_nr_{n - 2}  = r_{n - 2} - 1
\]&lt;/span&gt; 整理得 &lt;span class=&#34;math display&#34;&gt;\[
(1 + x_{n -1}x_n)r_{n - 2} - x_nr_{n - 3} = 1
\]&lt;/span&gt; 一步步回代，就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(ax+ by = 1\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;拓展到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个整数上，令 &lt;span class=&#34;math inline&#34;&gt;\(a_1,\cdots,a_n\in\mathbb Z\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{a_1,\cdots, a_n\} = d\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\forall x_i\in \mathbb Z\)&lt;/span&gt;，都有 &lt;span class=&#34;math display&#34;&gt;\[
d\mid \sum_{i = 1}^na_ix_i
\]&lt;/span&gt; &amp;gt; 例题 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4549&#34;&gt;P4549 【模板】裴蜀定理&lt;/a&gt; &amp;gt; &amp;gt; 给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 20\)&lt;/span&gt; 个元素，值域 &lt;span class=&#34;math inline&#34;&gt;\([-10^5, 10^5]\)&lt;/span&gt; 的整数序列 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，求一组整数 &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^nA_iX_i\)&lt;/span&gt; 大于 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 且最小，输出这个最小值。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{A_i\}\mid \sum A_iX_i\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\{A_i\}\)&lt;/span&gt; 即为答案。&lt;/p&gt;
&lt;h3 id=&#34;基于值域预处理的快速-gcd&#34;&gt;基于值域预处理的快速 GCD&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5435&#34;&gt;P5435 基于值域预处理的快速 GCD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 5000\)&lt;/span&gt; 以及 &lt;span class=&#34;math inline&#34;&gt;\(a_{1,\cdots, n}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b_{1,\cdots, n}\)&lt;/span&gt;。值域 &lt;span class=&#34;math inline&#34;&gt;\(10^6\)&lt;/span&gt;，对所有 &lt;span class=&#34;math inline&#34;&gt;\((i,j)\)&lt;/span&gt; 求出 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_i, b_j)\)&lt;/span&gt;。输出格式见原题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一个当询问 gcd 的次数巨大多而值域 &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 有限（&lt;span class=&#34;math inline&#34;&gt;\(10^6\)&lt;/span&gt; 级别左右）时，可以 &lt;span class=&#34;math inline&#34;&gt;\(O(N)\)&lt;/span&gt; 预处理，&lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 回答单次询问的神奇方法。有些时候可以拯救你的常数。&lt;/p&gt;
&lt;p&gt;定义一个数集 &lt;span class=&#34;math inline&#34;&gt;\(\{a_1, \cdots, a_k\}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的分解当 &lt;span class=&#34;math inline&#34;&gt;\(\prod_{i =1}^ka_i = n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;引理：可以将值域内的每个数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 分解为 &lt;span class=&#34;math inline&#34;&gt;\(\{a, b, c\}\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a,b,c\le \sqrt n\)&lt;/span&gt; 或为质数。下面默认 &lt;span class=&#34;math inline&#34;&gt;\(a\le b\le c\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明：不妨设 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 不为质数且 &lt;span class=&#34;math inline&#34;&gt;\(c&amp;gt; \sqrt n\)&lt;/span&gt;。那么 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 显然可以分解为 &lt;span class=&#34;math inline&#34;&gt;\(\{d, e\}\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(d\le e\land d\le \sqrt n\)&lt;/span&gt;。而 &lt;span class=&#34;math inline&#34;&gt;\(a\times b= \dfrac nc&amp;lt; \sqrt n\)&lt;/span&gt;， 所以有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的分解 &lt;span class=&#34;math inline&#34;&gt;\(\{d, ab, e\}\)&lt;/span&gt;，于是乎可以这样一直分解下去到合法为止。&lt;/p&gt;
&lt;p&gt;然后对于询问 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x, y)\)&lt;/span&gt;，我们就分解 &lt;span class=&#34;math inline&#34;&gt;\(x = abc\)&lt;/span&gt;，分开考虑其贡献。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 对答案的贡献为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, y) = \gcd(a, y\bmod a)\)&lt;/span&gt;，然后将 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 除掉 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, y)\)&lt;/span&gt; 防止重复统计贡献，然后对 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 做同样的事情就可以了。&lt;/p&gt;
&lt;p&gt;现在的问题是如何在 &lt;span class=&#34;math inline&#34;&gt;\(O(N)\)&lt;/span&gt; 的时间内计算出每个数的分解。&lt;/p&gt;
&lt;p&gt;方法：对于 &lt;span class=&#34;math inline&#34;&gt;\(x = 1\)&lt;/span&gt;，显然为 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 1, 1\}\)&lt;/span&gt;；对于 &lt;span class=&#34;math inline&#34;&gt;\(x\ge 2\)&lt;/span&gt;，找到 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 以及 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac xp\)&lt;/span&gt; 的合法分解 &lt;span class=&#34;math inline&#34;&gt;\(\{a_0, b_0, c_0\}\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的一种合法分解为 &lt;span class=&#34;math inline&#34;&gt;\(\{a_0p, b_0, c_0\}\)&lt;/span&gt; 的升序排序。&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为质数时显然成立，为 &lt;span class=&#34;math inline&#34;&gt;\(\{1, 1, x\}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p\le\sqrt[4]x\)&lt;/span&gt; 时，由于 &lt;span class=&#34;math inline&#34;&gt;\(a_0\le\sqrt[3]{\dfrac{x}{p}}\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(a_op\le \sqrt x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p &amp;gt; \sqrt[4]x\)&lt;/span&gt; 时：
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_0 = 1\)&lt;/span&gt; 时，有 &lt;span class=&#34;math inline&#34;&gt;\(a_0p = p\le \sqrt x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(a_0\ne 1\)&lt;/span&gt; 时，由于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 不为素数，所以 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac xp\)&lt;/span&gt; 的最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 即为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的第二小质因子，一定 &lt;span class=&#34;math inline&#34;&gt;\(\ge p\)&lt;/span&gt;。我们又可以知道 &lt;span class=&#34;math inline&#34;&gt;\(p \le q\le a_0\le b_0\le c_0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(pa_0b_0c_0 &amp;gt; (\sqrt[4]x)^4 = x\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(pa_0b_0c_0 = x\)&lt;/span&gt; 矛盾，故该情况不存在。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么线性筛的时候顺带用最小质因子更新，预处理 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt N\)&lt;/span&gt; 范围的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 数组即可。代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; N = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt;, T = &lt;span class=&#34;fl&#34;&gt;1e3&lt;/span&gt;, maxn = &lt;span class=&#34;dv&#34;&gt;5005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; isp[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], p[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], cnt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fac[N + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;], _gcd[T + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][T + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fac[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = fac[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fac[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, N) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) p[++cnt] = i, fac[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fac[i][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = i;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * p[j] &amp;lt;= N &amp;amp;&amp;amp; j &amp;lt;= cnt; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = i * p[j];&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            isp[tmp] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            fac[tmp][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] * p[j];&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], fac[tmp][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = fac[i][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fac[tmp][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] &amp;gt; fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) myswap(fac[tmp][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt; fac[tmp][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]) myswap(fac[tmp][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], fac[tmp][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, T) _gcd[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = _gcd[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][i] = i;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, T)&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i)&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            _gcd[i][j] = _gcd[j][i] = _gcd[j][i % j];&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; gcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (fac[x][i] &amp;lt;= T) d = _gcd[fac[x][i]][y % fac[x][i]];&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (y % fac[x][i] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) d = fac[x][i];&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; d = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y /= d;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans *= d;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;类欧几里得算法&#34;&gt;类欧几里得算法&lt;/h3&gt;
&lt;p&gt;是一个比较阴间的东西。详细全文见&lt;a href=&#34;https://oi.imyangty.com/note-akin-euclidean-algo&#34;&gt;类欧学习笔记&lt;/a&gt;。该算法由洪华敦（SkyDec）于 WC2016 员交提出。递归过程类似于辗转相除，故称为”类“欧几里得。一般可以求直线下整点之类的问题。&lt;/p&gt;
&lt;p&gt;不是很重要的板块，大致了解其推导思想即可。&lt;/p&gt;
&lt;h4 id=&#34;基本形式&#34;&gt;基本形式&lt;/h4&gt;
若令 &lt;span class=&#34;math display&#34;&gt;\[
f(a, b, c, n) = \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c} \right\rfloor
\]&lt;/span&gt; 则若我们令 &lt;span class=&#34;math inline&#34;&gt;\(m = \displaystyle\left\lfloor\frac{an + b}{c}\right\rfloor\)&lt;/span&gt;，有 $$ f(a, b, c, n) =
&lt;span class=&#34;math display&#34;&gt;\[\begin{cases}
\displaystyle \frac{n(n + 1)}{2}\left\lfloor\frac ac\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor + f(a\bmod c, b\bmod c, c, n) &amp;amp; a\ge c\lor b\ge c\\
\displaystyle nm - f(c, c - b - 1, a, m - 1)&amp;amp;\text{otherwise}

\end{cases}\]&lt;/span&gt;
&lt;p&gt;$$ 而 &lt;span class=&#34;math inline&#34;&gt;\(f(a, b, c, n)\)&lt;/span&gt; 的意义即为直线 &lt;span class=&#34;math inline&#34;&gt;\(y = \dfrac{ai + b}{c}\)&lt;/span&gt; 下方整点的个数。&lt;/p&gt;
&lt;h4 id=&#34;简要推导&#34;&gt;简要推导&lt;/h4&gt;
&lt;p&gt;该问题较为复杂，不妨一步步考虑起。假设 &lt;span class=&#34;math inline&#34;&gt;\(a\ge c\lor b\ge c\)&lt;/span&gt;，则我们可以先将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 取模，即 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(a, b, c, n) &amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c}\right\rfloor\\
&amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{(\left\lfloor\frac a c\right\rfloor c + a\bmod c)i + \left\lfloor\frac b c\right\rfloor c + b\bmod c}{c}\right\rfloor\\
&amp;amp;= \frac{n(n + 1)}{2}\left\lfloor\frac ac\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor + f(a\bmod c, b\bmod c, c, n)
\end{aligned}
\]&lt;/span&gt; 然后问题就变成了 &lt;span class=&#34;math inline&#34;&gt;\(a,b&amp;lt; c\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;先考虑拆分贡献，将 $ $ 拆成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{j = 0}^{\left\lfloor\frac{ai + b}{c} \right\rfloor - 1}1\)&lt;/span&gt; 的形式，随后调换求和顺序，使得 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 不受 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 限制，&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{j = 0}^{\left\lfloor\frac{an + b}{c} \right\rfloor}\sum_{i = 0}^n\left[j &amp;lt; \left\lfloor\frac{ai + b}{c} \right\rfloor\right]\)&lt;/span&gt;，之后就是化简这个不等式，不等式的化简过程如下： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;j &amp;lt; \left\lfloor\frac{ai + b}{c} \right\rfloor\\
\iff &amp;amp; j + 1\le\left\lfloor\frac{ai + b}{c} \right\rfloor\\
\iff &amp;amp; j + 1\le \frac{ai + b}{c}\\
\iff &amp;amp; j c + c\le ai + b\\
\iff &amp;amp; jc + c - b\le ai\\
\iff &amp;amp; jc + c - b - 1 &amp;lt; ai\\
\iff &amp;amp; \left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor &amp;lt; i
\end{aligned}
\]&lt;/span&gt; 中间用到了几步比较巧妙的放缩。然后 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 就没了，令 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle m = \left\lfloor\frac{an + b}{c}\right\rfloor\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle f(a, b, c, n) = \sum_{j = 0}^{m - 1}\left(n - \left\lfloor\frac{jc + c - b - 1}{a}\right\rfloor\right)\)&lt;/span&gt;，拆开来发现其实其就是一个子问题。所以得到答案 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle f(a, b, c, n) = nm - f(c, c - b - 1, a, m - 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;写成代码就是下面这样，边界是 &lt;span class=&#34;math inline&#34;&gt;\(a = 0\)&lt;/span&gt;：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!a) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b / c * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a &amp;gt;= c || b &amp;gt;= c) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (a / c) + (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (b / c) + f(a % c, b % c, c, n);&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m = (a * n + b) / c;&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * m - f(c, c - b - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;扩展形式&#34;&gt;扩展形式&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(a, b, c, n) &amp;amp;= \sum_{i = 0}^ni\left\lfloor\frac{ai + b}{c}\right\rfloor\\
h(a, b, c, n) &amp;amp;= \sum_{i = 0}^n\left\lfloor\frac{ai + b}{c}\right\rfloor^2\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这两个函数的计算大同小异。都是分别考虑 &lt;span class=&#34;math inline&#34;&gt;\(a\ge c\lor b\ge c\)&lt;/span&gt; 并取模化简，然后一步步化简式子化成子问题。&lt;/p&gt;
&lt;p&gt;直接放结论： &lt;span class=&#34;math display&#34;&gt;\[
g(a,b,c,n) = \begin{cases}
\displaystyle\left\lfloor\frac ac\right\rfloor\frac{n(n + 1)(2n + 1)}{6} + \left\lfloor\frac bc\right\rfloor\frac{n(n + 1)}{2} + g(a\bmod c, b\bmod c, c, n) &amp;amp; a\ge c\lor b\ge c\\
\displaystyle\frac 12\left(mn(n + 1) - h(c, c - b - 1, a, m - 1) - f(c, c - b - 1, a, m - 1) \right)&amp;amp;\text{otherwise}
\end{cases}
\]&lt;/span&gt; 很阴间。 &lt;span class=&#34;math display&#34;&gt;\[
h(a, b, c, n) =
\begin{cases}
\begin{aligned}
&amp;amp;\left\lfloor\frac ac\right\rfloor^2\frac{n(n + 1)(2n + 1)}{6} + n(n + 1)\left\lfloor\frac ac\right\rfloor\left\lfloor\frac bc\right\rfloor + (n + 1)\left\lfloor\frac bc\right\rfloor^2 + \\&amp;amp;+2\left\lfloor\frac ac\right\rfloor g(a\bmod c, b\bmod c, c, n) + 2\left\lfloor\frac bc\right\rfloor f(a\bmod c, b\bmod c, c, n) \\
&amp;amp;+ h(a\bmod c, b\bmod c, c, n)
\end{aligned}&amp;amp;a\ge c\lor b\ge c\\\\\\
nm(m + 1) - 2g(c, c - b - 1, a, m - 1)\\
- 2f(c, c - b - 1, m - 1) - f(a, b, c, n)&amp;amp;\text{otherwise}
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;应用&#34;&gt;应用&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5170&#34;&gt;P5170 【模板】类欧几里得算法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求上文的 &lt;span class=&#34;math inline&#34;&gt;\(f,g,h\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;写在一起，一起递归计算即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P5171&#34;&gt;P5171 Earthquake&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le a,b\le 10^9\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(0\le c\le \min(a,b)\times 10^9\)&lt;/span&gt;。求 &lt;span class=&#34;math inline&#34;&gt;\(ax + by\le c\)&lt;/span&gt; 的非负整数解个数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;稍加转化：&lt;span class=&#34;math inline&#34;&gt;\(ax+by\le c\implies y\le \displaystyle\left\lfloor\frac{c - ax}{b}\right\rfloor\)&lt;/span&gt;。所以实际上要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=0}^{\lfloor a/c\rfloor}1 + \left\lfloor\frac{c - ai}{b}\right\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(-ai\)&lt;/span&gt; 的形式无法直接处理，那么就考虑在分子加上 &lt;span class=&#34;math inline&#34;&gt;\(bi\)&lt;/span&gt; 然后在外面减掉 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor bi / b\rfloor = i\)&lt;/span&gt;。假设 &lt;span class=&#34;math inline&#34;&gt;\(b &amp;gt; a\)&lt;/span&gt;（若不满足就 swap 之）可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=0}^{\lfloor c / a\rfloor}\left\lfloor\frac{(b - a)i + c}{b} \right\rfloor - \frac{\lfloor c /a\rfloor\times (\lfloor c / a\rfloor + 1)}{2} + \lfloor c / a\rfloor
\]&lt;/span&gt; 前半截直接类欧，后半截直接算。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1098E&#34;&gt;CF1098E Fedya the Potter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1182F&#34;&gt;CF1182F Maximum Sine&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;素数&#34;&gt;素数&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;定义见上文。&lt;/p&gt;
&lt;p&gt;关于素数密度，有如下重要结论：设小于等于 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的素数有 &lt;span class=&#34;math inline&#34;&gt;\(\pi(x)\)&lt;/span&gt; 个，则 &lt;span class=&#34;math display&#34;&gt;\[
\pi(x)\sim\frac{n}{\ln n}
\]&lt;/span&gt; 估计素数个数上很有用。&lt;/p&gt;
&lt;h3 id=&#34;筛法&#34;&gt;筛法&lt;/h3&gt;
&lt;p&gt;想要找出 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 内所有的数字，一般有如下两种方法：&lt;/p&gt;
&lt;h4 id=&#34;eratosthenes-筛法&#34;&gt;Eratosthenes 筛法&lt;/h4&gt;
&lt;p&gt;一般称为埃筛。思想：合数的倍数一定是合数，而质数的 &lt;span class=&#34;math inline&#34;&gt;\(\ge 2\)&lt;/span&gt; 倍数一定是合数。&lt;/p&gt;
&lt;p&gt;所以算法流程就是，当碰到一个质数时，标记其全部倍数。当碰到合数时直接跳过不管。&lt;/p&gt;
&lt;p&gt;时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log\log n)\)&lt;/span&gt;，暂时不要求掌握其证明。&lt;/p&gt;
&lt;p&gt;埃筛的应用其实有限，但是在 Dirichlet 前缀和还是运用到了其思想的。&lt;/p&gt;
&lt;h4 id=&#34;欧拉线性筛&#34;&gt;欧拉线性筛&lt;/h4&gt;
&lt;p&gt;上面的埃筛虽然实际跑的不慢，但当 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 达到 &lt;span class=&#34;math inline&#34;&gt;\(10^7\)&lt;/span&gt; 以至 &lt;span class=&#34;math inline&#34;&gt;\(10^8\)&lt;/span&gt; 级别时仍然会显得很吃力。&lt;/p&gt;
&lt;p&gt;我们考虑，如果每个合数只被其最小的质因子筛去，是不是时间复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;p&gt;算法流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遇到一个没被筛过的数时，其肯定为质数，标记一下。&lt;/li&gt;
&lt;li&gt;然后枚举已经有过的素数 &lt;span class=&#34;math inline&#34;&gt;\(p_j\)&lt;/span&gt;，标记 &lt;span class=&#34;math inline&#34;&gt;\(i\times p_j\)&lt;/span&gt; 为合数，&lt;strong&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p_j\mid i\)&lt;/span&gt; 时结束循环&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) pri[++cnt] = i;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= cnt &amp;amp;&amp;amp; i * pri[j] &amp;lt;= n; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        isp[i * pri[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!(i % pri[j])) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解释一下这样做的原理：我们注意到 &lt;span class=&#34;math inline&#34;&gt;\(p_j\mid i\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(p_j\)&lt;/span&gt; 一定是 &lt;span class=&#34;math inline&#34;&gt;\(i\times p_j\)&lt;/span&gt; 的最小质因子，因为如果存在更小的，一定会被先枚举到。由于一个合数需要被其最小质因子筛去，所以此时需要结束循环。&lt;/p&gt;
&lt;p&gt;本方法不仅可以筛质数，还可以求很多积性函数的值。&lt;strong&gt;每个合数都被其最小质因子筛去&lt;/strong&gt;这一关键性质决定了其极强的扩展性，详见下文筛法部分。&lt;/p&gt;
&lt;h3 id=&#34;素性测试&#34;&gt;素性测试&lt;/h3&gt;
&lt;h4 id=&#34;暴力判断&#34;&gt;暴力判断&lt;/h4&gt;
&lt;p&gt;我们可以 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 来判断单个数是不是质数。&lt;/p&gt;
&lt;p&gt;涉及到多个数的判断的话可以使用线性筛。&lt;/p&gt;
&lt;p&gt;但是如果数很大（&lt;span class=&#34;math inline&#34;&gt;\(10^{18}\)&lt;/span&gt; 级别）的话我们还是需要使用&lt;em&gt;概率性素性测试&lt;/em&gt;通过牺牲一部分正确率来换取更高的效率。&lt;/p&gt;
&lt;h4 id=&#34;fermat-素性测试&#34;&gt;Fermat 素性测试&lt;/h4&gt;
&lt;p&gt;根据下文提到的费马小定理，对于质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 和正整数 &lt;span class=&#34;math inline&#34;&gt;\(a &amp;lt; p\)&lt;/span&gt; 一定有 &lt;span class=&#34;math inline&#34;&gt;\(a^{p - 1}\equiv 1\pmod p\)&lt;/span&gt;，所以为了判断 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的素性，可以不断选取 &lt;span class=&#34;math inline&#34;&gt;\([2, n - 1]\)&lt;/span&gt; 中的基 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 然后判断是否有 &lt;span class=&#34;math inline&#34;&gt;\(a^{n - 1}\equiv 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;但是由于费马小定理的逆定理不存在，所以上述方法可能会错误判断。例如若 &lt;span class=&#34;math inline&#34;&gt;\(a^{n - 1}\equiv 1\pmod n\)&lt;/span&gt; 但 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 不是素数，则称 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为以 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为底的伪素数。同时还存在一类合数满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall a\perp n\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(a^{n -1}\equiv 1\)&lt;/span&gt; 成立，这样的数被称为&lt;em&gt;卡迈克尔数&lt;/em&gt;。&lt;/p&gt;
&lt;h4 id=&#34;miller-rabin-素性测试&#34;&gt;Miller-Rabin 素性测试&lt;/h4&gt;
&lt;p&gt;实战中可以使用的一种高效素数判断方法，对 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 进行 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 轮测试的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(k\log^3n)\)&lt;/span&gt;，且基本不会出错。&lt;/p&gt;
&lt;p&gt;二次探测定理：若 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为奇素数，则 &lt;span class=&#34;math inline&#34;&gt;\(x^2\equiv 1\pmod p\)&lt;/span&gt; 的解为 &lt;span class=&#34;math inline&#34;&gt;\(x\equiv \pm1\pmod p\)&lt;/span&gt;。证明考虑移项出 &lt;span class=&#34;math inline&#34;&gt;\((x + 1)(x - 1) \equiv 0\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;那么我们就将 Fermat 素性测试和二次探测定理联合起来使用，考虑将 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 分解成 &lt;span class=&#34;math inline&#34;&gt;\(u\times 2^t\)&lt;/span&gt;，然后先求出 &lt;span class=&#34;math inline&#34;&gt;\(a^u\pmod n\)&lt;/span&gt;，之后对他进行 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 次平方操作，若中途发现非平凡平方根则其不是素数，否则通过本轮测试。&lt;/p&gt;
&lt;p&gt;取 &lt;span class=&#34;math inline&#34;&gt;\(A = \{2,3,5,7,11,13,17,19,23\}\)&lt;/span&gt; 便可通过绝大部分数据。&lt;del&gt;&lt;strong&gt;给我背板子！&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-4&#34;&gt;&lt;a href=&#34;#cb9-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb9-5&#34;&gt;&lt;a href=&#34;#cb9-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-6&#34;&gt;&lt;a href=&#34;#cb9-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll a[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb9-7&#34;&gt;&lt;a href=&#34;#cb9-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-8&#34;&gt;&lt;a href=&#34;#cb9-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll base, ll exp, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb9-9&#34;&gt;&lt;a href=&#34;#cb9-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-10&#34;&gt;&lt;a href=&#34;#cb9-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(base) * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb9-11&#34;&gt;&lt;a href=&#34;#cb9-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(ret) * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb9-12&#34;&gt;&lt;a href=&#34;#cb9-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb9-13&#34;&gt;&lt;a href=&#34;#cb9-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-14&#34;&gt;&lt;a href=&#34;#cb9-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-15&#34;&gt;&lt;a href=&#34;#cb9-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; isPrime(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb9-16&#34;&gt;&lt;a href=&#34;#cb9-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == a[i]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-17&#34;&gt;&lt;a href=&#34;#cb9-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; || !(n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-18&#34;&gt;&lt;a href=&#34;#cb9-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, u = n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j;&lt;/span&gt;
&lt;span id=&#34;cb9-19&#34;&gt;&lt;a href=&#34;#cb9-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!(u &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) u &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++t;&lt;/span&gt;
&lt;span id=&#34;cb9-20&#34;&gt;&lt;a href=&#34;#cb9-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb9-21&#34;&gt;&lt;a href=&#34;#cb9-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll v = qPow(a[i], u, n);&lt;/span&gt;
&lt;span id=&#34;cb9-22&#34;&gt;&lt;a href=&#34;#cb9-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-23&#34;&gt;&lt;a href=&#34;#cb9-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= t; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb9-24&#34;&gt;&lt;a href=&#34;#cb9-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-25&#34;&gt;&lt;a href=&#34;#cb9-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            v = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(v) * v % n;&lt;/span&gt;
&lt;span id=&#34;cb9-26&#34;&gt;&lt;a href=&#34;#cb9-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb9-27&#34;&gt;&lt;a href=&#34;#cb9-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;gt; t) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-28&#34;&gt;&lt;a href=&#34;#cb9-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb9-29&#34;&gt;&lt;a href=&#34;#cb9-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-30&#34;&gt;&lt;a href=&#34;#cb9-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb9-31&#34;&gt;&lt;a href=&#34;#cb9-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb9-32&#34;&gt;&lt;a href=&#34;#cb9-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb9-33&#34;&gt;&lt;a href=&#34;#cb9-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll x;&lt;/span&gt;
&lt;span id=&#34;cb9-34&#34;&gt;&lt;a href=&#34;#cb9-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (cin &amp;gt;&amp;gt; x) puts(isPrime(x) ? &lt;span class=&#34;st&#34;&gt;&amp;quot;Y&amp;quot;&lt;/span&gt; : &lt;span class=&#34;st&#34;&gt;&amp;quot;N&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb9-35&#34;&gt;&lt;a href=&#34;#cb9-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb9-36&#34;&gt;&lt;a href=&#34;#cb9-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;质因数分解&#34;&gt;质因数分解&lt;/h3&gt;
&lt;p&gt;Pollard-Rho 会在 NOI 前重构。&lt;/p&gt;
&lt;h4 id=&#34;朴素分解&#34;&gt;朴素分解&lt;/h4&gt;
&lt;p&gt;最最最朴素的枚举因子然后 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 的分解方法略。&lt;/p&gt;
&lt;p&gt;需注意：若提前打好了质数表，复杂度降为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle O\left(\sqrt{\frac{n}{\ln n}}\right)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^{18}\)&lt;/span&gt; 级别时其显得无能为力。故我们还是考虑牺牲正确性来换取性能，考虑如何求出一个数的非平凡因子。&lt;/p&gt;
&lt;p&gt;有一个最朴素的随机算法：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; T rnd(T l, T r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; mt19937 eng(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; r) swpa(l, r);&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    uniform_int_distribution&amp;lt;T&amp;gt; dis(l, r);&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dis(eng);&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll findFact(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (isPrime(n)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll x;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;do&lt;/span&gt; x = rnd(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n % x);&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个想法确实非常的蠢（类比猴子排序），但这确实是 Pollard-Rho 算法的基础。&lt;/p&gt;
&lt;h4 id=&#34;生日悖论&#34;&gt;生日悖论&lt;/h4&gt;
&lt;p&gt;一个房间里有 23 个人，则他们中有两人生日相同的概率超过一半，这应该是个很经典的 fun fact。&lt;/p&gt;
&lt;p&gt;这启示我们，对于一个 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的随机整数生成器，生成序列中第一个重复数字前期望有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{\dfrac{\pi n}{2}}\)&lt;/span&gt; 个数，这里是&lt;a href=&#34;https://www.zhihu.com/question/367513670/answer/991562741&#34;&gt;证明&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这告诉我们，&lt;strong&gt;采用“组合随机采样”的方法，满足答案的组合比单体个数要多&lt;/strong&gt;，所以可以提高正确率。回到原来的问题，发现一个很关键的性质：&lt;span class=&#34;math inline&#34;&gt;\(\forall k\in\mathbb N, \gcd(k,n)\mid n\)&lt;/span&gt;。所以只要选到恰当的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(k, n) &amp;gt; 1\)&lt;/span&gt; 即可求得一个非平凡因子。关键是，这样的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的个数还不少。&lt;/p&gt;
&lt;p&gt;不妨选一组数 &lt;span class=&#34;math inline&#34;&gt;\(x_1,\cdots, x_m\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(|x_i - x_j|, n)&amp;gt; 1\)&lt;/span&gt;，则我们可以直接返回 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(|x_i - x_j|, n)\)&lt;/span&gt;，而如何选数显得尤为必要。&lt;/p&gt;
&lt;h4 id=&#34;伪随机函数&#34;&gt;伪随机函数&lt;/h4&gt;
&lt;p&gt;Pollard-Rho 算法使用了些技巧，通过 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = (x^2 + c)\bmod n\)&lt;/span&gt; 来生成一个随机数序列 &lt;span class=&#34;math inline&#34;&gt;\(\{x_i\}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 为随机出来的常数。&lt;/p&gt;
&lt;p&gt;随机一个 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(i\ge 2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x_i = f(x_{i - 1})\)&lt;/span&gt;，可以近似认为他随机。但是会发现其会进入一个环（所以叫做 &lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt; 算法）。例如取 &lt;span class=&#34;math inline&#34;&gt;\(c = 2, x_1 = 1\)&lt;/span&gt; 的情况： &lt;span class=&#34;math display&#34;&gt;\[
1,3,11,23,31, 11,23,31,\cdots
\]&lt;/span&gt; #### Floyd 判环&lt;/p&gt;
&lt;p&gt;“龟兔赛跑”。用两个数 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;，初始时 &lt;span class=&#34;math inline&#34;&gt;\(t = r = 1\)&lt;/span&gt;，然后每次兔子跳两格，乌龟走一步：&lt;span class=&#34;math inline&#34;&gt;\(x_t = x_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x_{r} = x_{2i}\)&lt;/span&gt;。注意到他们迟早是会相遇的。&lt;/p&gt;
&lt;p&gt;所以可以写出如下代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll findFact(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll c = rnd(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll t = f(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, c, n), r = f(f(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, c, n), c, n);&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t != r) {&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll d = gcd(myabs(t - r), n);&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t = f(t, c, n), r = f(f(r, c, n), c, n);&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;优化&#34;&gt;优化&lt;/h4&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的个数太多了，求一次就是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;，需要优化。&lt;/p&gt;
&lt;p&gt;考虑若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(x, n)&amp;gt;1\)&lt;/span&gt; 则 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(xy, n) &amp;gt; 1\)&lt;/span&gt;，更进一步的有 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(xy\bmod n, n) &amp;gt; 1\)&lt;/span&gt;。所以可以将所有的 &lt;span class=&#34;math inline&#34;&gt;\(|t - r|\)&lt;/span&gt; 在模意义下相乘，再做 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑倍增以避免 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 过多或者在环上停留过久。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll findFact(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll c = rnd(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; step = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; ; goal &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, s = t, val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (step = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; step &amp;lt;= goal; ++step) {&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t = f(t, c, n);&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(val) * myabs(t - s) % n;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (step % &lt;span class=&#34;dv&#34;&gt;127&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll d = gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll d = gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-18&#34;&gt;&lt;a href=&#34;#cb12-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb12-19&#34;&gt;&lt;a href=&#34;#cb12-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面是 &lt;a href=&#34;https://judge.yosupo.jp/problem/factorize&#34;&gt;Library Checker 质因数分解&lt;/a&gt;的模板实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll a[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;] = {&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;ll&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll base, ll exp, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(base) * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(ret) * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; isPrime(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] == n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; || !(n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, u = n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!(u &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) u &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ++t;&lt;/span&gt;
&lt;span id=&#34;cb13-22&#34;&gt;&lt;a href=&#34;#cb13-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-23&#34;&gt;&lt;a href=&#34;#cb13-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll v = qPow(a[i], u, n), j;&lt;/span&gt;
&lt;span id=&#34;cb13-24&#34;&gt;&lt;a href=&#34;#cb13-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-25&#34;&gt;&lt;a href=&#34;#cb13-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= t; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb13-26&#34;&gt;&lt;a href=&#34;#cb13-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-27&#34;&gt;&lt;a href=&#34;#cb13-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            v = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(v) * v % n;&lt;/span&gt;
&lt;span id=&#34;cb13-28&#34;&gt;&lt;a href=&#34;#cb13-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-29&#34;&gt;&lt;a href=&#34;#cb13-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j &amp;gt; t) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-30&#34;&gt;&lt;a href=&#34;#cb13-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-31&#34;&gt;&lt;a href=&#34;#cb13-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-32&#34;&gt;&lt;a href=&#34;#cb13-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-33&#34;&gt;&lt;a href=&#34;#cb13-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-34&#34;&gt;&lt;a href=&#34;#cb13-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f(ll x, ll c, ll mod) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(x) * x % mod + c) % mod;}&lt;/span&gt;
&lt;span id=&#34;cb13-35&#34;&gt;&lt;a href=&#34;#cb13-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll rnd(ll l, ll r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-36&#34;&gt;&lt;a href=&#34;#cb13-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; mt19937_64 eng(&lt;span class=&#34;dv&#34;&gt;20041031&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-37&#34;&gt;&lt;a href=&#34;#cb13-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l &amp;gt; r) swap(l, r);&lt;/span&gt;
&lt;span id=&#34;cb13-38&#34;&gt;&lt;a href=&#34;#cb13-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    uniform_int_distribution&amp;lt;ll&amp;gt; dis(l, r);&lt;/span&gt;
&lt;span id=&#34;cb13-39&#34;&gt;&lt;a href=&#34;#cb13-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dis(eng);&lt;/span&gt;
&lt;span id=&#34;cb13-40&#34;&gt;&lt;a href=&#34;#cb13-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-41&#34;&gt;&lt;a href=&#34;#cb13-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-42&#34;&gt;&lt;a href=&#34;#cb13-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll pollardRho(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb13-43&#34;&gt;&lt;a href=&#34;#cb13-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll c = rnd(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-44&#34;&gt;&lt;a href=&#34;#cb13-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, t = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-45&#34;&gt;&lt;a href=&#34;#cb13-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; step = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-46&#34;&gt;&lt;a href=&#34;#cb13-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (goal = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; ; goal &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, s = t, val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-47&#34;&gt;&lt;a href=&#34;#cb13-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (step = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; step &amp;lt;= goal; ++step) {&lt;/span&gt;
&lt;span id=&#34;cb13-48&#34;&gt;&lt;a href=&#34;#cb13-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            t = f(t, c, n);&lt;/span&gt;
&lt;span id=&#34;cb13-49&#34;&gt;&lt;a href=&#34;#cb13-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            val = &lt;span class=&#34;dt&#34;&gt;__int128&lt;/span&gt;(val) * &lt;span class=&#34;fu&#34;&gt;__builtin_llabs&lt;/span&gt;(s - t) % n;&lt;/span&gt;
&lt;span id=&#34;cb13-50&#34;&gt;&lt;a href=&#34;#cb13-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (step % &lt;span class=&#34;dv&#34;&gt;127&lt;/span&gt; == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-51&#34;&gt;&lt;a href=&#34;#cb13-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll d = __gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb13-52&#34;&gt;&lt;a href=&#34;#cb13-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb13-53&#34;&gt;&lt;a href=&#34;#cb13-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb13-54&#34;&gt;&lt;a href=&#34;#cb13-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb13-55&#34;&gt;&lt;a href=&#34;#cb13-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll d = __gcd(val, n);&lt;/span&gt;
&lt;span id=&#34;cb13-56&#34;&gt;&lt;a href=&#34;#cb13-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; d;&lt;/span&gt;
&lt;span id=&#34;cb13-57&#34;&gt;&lt;a href=&#34;#cb13-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-58&#34;&gt;&lt;a href=&#34;#cb13-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-59&#34;&gt;&lt;a href=&#34;#cb13-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-60&#34;&gt;&lt;a href=&#34;#cb13-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;ll&amp;gt; work(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb13-61&#34;&gt;&lt;a href=&#34;#cb13-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {};&lt;/span&gt;
&lt;span id=&#34;cb13-62&#34;&gt;&lt;a href=&#34;#cb13-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (isPrime(n)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; {n};&lt;/span&gt;
&lt;span id=&#34;cb13-63&#34;&gt;&lt;a href=&#34;#cb13-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll p = n;&lt;/span&gt;
&lt;span id=&#34;cb13-64&#34;&gt;&lt;a href=&#34;#cb13-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p &amp;gt;= n) p = pollardRho(n);&lt;/span&gt;
&lt;span id=&#34;cb13-65&#34;&gt;&lt;a href=&#34;#cb13-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    vector&amp;lt;ll&amp;gt; tmp = work(p), ret;&lt;/span&gt;
&lt;span id=&#34;cb13-66&#34;&gt;&lt;a href=&#34;#cb13-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n % p == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb13-67&#34;&gt;&lt;a href=&#34;#cb13-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : tmp) ret.emplace_back(x);&lt;/span&gt;
&lt;span id=&#34;cb13-68&#34;&gt;&lt;a href=&#34;#cb13-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n /= p;&lt;/span&gt;
&lt;span id=&#34;cb13-69&#34;&gt;&lt;a href=&#34;#cb13-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-70&#34;&gt;&lt;a href=&#34;#cb13-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tmp = work(n);&lt;/span&gt;
&lt;span id=&#34;cb13-71&#34;&gt;&lt;a href=&#34;#cb13-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : tmp) ret.emplace_back(x);&lt;/span&gt;
&lt;span id=&#34;cb13-72&#34;&gt;&lt;a href=&#34;#cb13-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb13-73&#34;&gt;&lt;a href=&#34;#cb13-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb13-74&#34;&gt;&lt;a href=&#34;#cb13-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-75&#34;&gt;&lt;a href=&#34;#cb13-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb13-76&#34;&gt;&lt;a href=&#34;#cb13-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T; cin &amp;gt;&amp;gt; T;&lt;/span&gt;
&lt;span id=&#34;cb13-77&#34;&gt;&lt;a href=&#34;#cb13-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb13-78&#34;&gt;&lt;a href=&#34;#cb13-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll n; cin &amp;gt;&amp;gt; n;&lt;/span&gt;
&lt;span id=&#34;cb13-79&#34;&gt;&lt;a href=&#34;#cb13-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; ans = work(n);&lt;/span&gt;
&lt;span id=&#34;cb13-80&#34;&gt;&lt;a href=&#34;#cb13-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sort(ans.begin(), ans.end());&lt;/span&gt;
&lt;span id=&#34;cb13-81&#34;&gt;&lt;a href=&#34;#cb13-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; ans.size() &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-82&#34;&gt;&lt;a href=&#34;#cb13-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; &amp;amp;x : ans) cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-83&#34;&gt;&lt;a href=&#34;#cb13-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cout &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb13-84&#34;&gt;&lt;a href=&#34;#cb13-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-85&#34;&gt;&lt;a href=&#34;#cb13-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-86&#34;&gt;&lt;a href=&#34;#cb13-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;反素数&#34;&gt;反素数&lt;/h3&gt;
&lt;h2 id=&#34;基础整除理论&#34;&gt;基础整除理论&lt;/h2&gt;
&lt;h3 id=&#34;同余类与剩余系&#34;&gt;同余类与剩余系&lt;/h3&gt;
&lt;p&gt;同余类（也称剩余类），指全体整数按照对一个正整数的同余关系而分成的类。具体地，设 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为给定正整数，&lt;span class=&#34;math inline&#34;&gt;\(C_r(r = 0,1,\cdots, m -1)\)&lt;/span&gt; 表示形如 &lt;span class=&#34;math inline&#34;&gt;\(qm + r\)&lt;/span&gt; 的整数构成的集合，其中 &lt;span class=&#34;math inline&#34;&gt;\(q\in\mathbb Z\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(C_0,\cdots, C_{m - 1}\)&lt;/span&gt; 称为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的同余类。&lt;/p&gt;
&lt;p&gt;相当于，每个整数被包含在一个类中，且同一个类内的元素彼此模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 同余。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(a_0,\cdots, a_{m - 1}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个整数，当他们两两之间都不在同一个同余类中，我们就称其为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的一个&lt;strong&gt;完全剩余系&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;若剩余系内的每个元素均与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 互质，则称其为&lt;strong&gt;简化剩余系/缩系/既约剩余系&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;乘法逆元&#34;&gt;乘法逆元&lt;/h3&gt;
&lt;h4 id=&#34;定义&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;又叫做数论倒数。若 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv1\pmod p\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 关于模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的乘法逆元，记作 &lt;span class=&#34;math inline&#34;&gt;\(x = a^{-1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;从群论的角度考虑的话：&lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 为群 &lt;span class=&#34;math inline&#34;&gt;\((\mathbb Z_p, \times)\)&lt;/span&gt; 的单位元，&lt;span class=&#34;math inline&#34;&gt;\(ax\equiv1\)&lt;/span&gt; 即意味着 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的逆元。&lt;/p&gt;
&lt;p&gt;一般来说，我们如果要计算 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac ab\pmod p\)&lt;/span&gt;， 那么我们可以考虑计算 &lt;span class=&#34;math inline&#34;&gt;\(a\times b^{-1}\pmod p\)&lt;/span&gt;，这即为有理数取模的意义。&lt;/p&gt;
&lt;h4 id=&#34;求单个逆元&#34;&gt;求单个逆元&lt;/h4&gt;
&lt;p&gt;求逆元是一个很重要的话题，是做大多数组合题/数论题的基础。&lt;/p&gt;
&lt;p&gt;第一种方法是当 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数时，用下面提到的费马小定理可以得到 &lt;span class=&#34;math display&#34;&gt;\[
a^{-1} \equiv a^{p - 2}\pmod p
\]&lt;/span&gt; 于是我们在模意义下求一个快速幂即可。&lt;/p&gt;
&lt;p&gt;第二种方法较为通用，我们列出方程 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv 1\pmod p\)&lt;/span&gt;，然后转化为不定方程 &lt;span class=&#34;math inline&#34;&gt;\(ax + py = 1\)&lt;/span&gt;，使用 exgcd 来求解 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的值。同时我们可以注意到，这个方程有解等价于 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt;。故当 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt; 时其关于模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的逆元才存在。&lt;/p&gt;
&lt;h4 id=&#34;线性求逆元&#34;&gt;线性求逆元&lt;/h4&gt;
&lt;p&gt;有一个很重要的技巧：线性求 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的逆元。我们如果每个单独的求的话，复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(n\log n\)&lt;/span&gt;，在 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(10^7\)&lt;/span&gt; 时显然是不够用的。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(p=ki+r\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(k=\lfloor \frac p i\rfloor\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(r=p\bmod i\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(1&amp;lt;r&amp;lt;i&amp;lt;p\)&lt;/span&gt;。则在模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 意义下有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
ki+r\equiv 0\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;两边同时乘以 &lt;span class=&#34;math inline&#34;&gt;\(r^{-1}i^{-1}\)&lt;/span&gt;，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
kr^{-1}+i^{-1}\equiv0\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;移项，&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
i^{-1}\equiv-kr^{-1}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代入 &lt;span class=&#34;math inline&#34;&gt;\(k=\lfloor \frac p i\rfloor\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(r=p\bmod i\)&lt;/span&gt;，有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
i^{-1}\equiv -\lfloor \frac p i\rfloor(p\bmod i)^{-1}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于要保证 &lt;span class=&#34;math inline&#34;&gt;\(i^{-1}&amp;gt;0\)&lt;/span&gt;，在最终式子的右边加上 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(p\equiv 0\pmod p\)&lt;/span&gt;），最终的式子就是：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
i^{-1}\equiv p-\lfloor \frac p i\rfloor(p\bmod i)^{-1}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;令 &lt;code&gt;inv[i]&lt;/code&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(i^{-1}\)&lt;/span&gt; 则递推式如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= n; i++)&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    inv[i] = (p - p / i) * inv[p % i] % p;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;事实上，这个东西没有必要记忆，在下文学习阶乘逆元后可以用更自然的方法求出来。本法的扩展性不如下面的方法强。&lt;/p&gt;
&lt;h4 id=&#34;阶乘逆元&#34;&gt;阶乘逆元&lt;/h4&gt;
&lt;p&gt;求组合数的时候经常用得到。&lt;/p&gt;
&lt;p&gt;首先可以把模意义下的阶乘全部求出来，然后快速幂求一下 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 的逆元。&lt;/p&gt;
&lt;p&gt;然后有 &lt;span class=&#34;math display&#34;&gt;\[
(i!)^{-1} = (i + 1)\times((i + 1)!)^{-1}
\]&lt;/span&gt; 显然，不证。推就推完了。我们还可以得到 &lt;span class=&#34;math inline&#34;&gt;\(i^{-1} = (i - 1)!\times (i!)^{-1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这种方法非常好理解并且有较好的扩展性，一定要牢记。&lt;/p&gt;
&lt;p&gt;小小扩展一下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5431&#34;&gt;P5431 【模板】乘法逆元 2&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;实际上就是类似于阶乘逆元的方法。我们考虑求一个前缀积，然后给最后一个 &lt;span class=&#34;math inline&#34;&gt;\(s_n\)&lt;/span&gt; 求一个逆元，之后就可以一步步倒推回去求出 &lt;span class=&#34;math inline&#34;&gt;\(a_i^{-1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;欧拉函数&#34;&gt;欧拉函数&lt;/h3&gt;
&lt;h4 id=&#34;定义-1&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;Euler’s totient function，&lt;span class=&#34;math inline&#34;&gt;\(\varphi(n)\)&lt;/span&gt;，表示 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 中和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互质的数的个数。即 &lt;span class=&#34;math display&#34;&gt;\[
\varphi(n) = \sum_{i = 1}^n[i\perp p]
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;性质&#34;&gt;性质&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;欧拉函数是积性函数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n = \sum_{d\mid n}\varphi(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;该点可以在下文中的莫比乌斯反演处进行进一步学习。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall n \gt 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\([1,n]\)&lt;/span&gt; 中与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互质的数之和为 &lt;span class=&#34;math inline&#34;&gt;\(n\varphi(n)/2\)&lt;/span&gt;。简证：与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 不互质的数 &lt;span class=&#34;math inline&#34;&gt;\(x,n-x\)&lt;/span&gt; 成对出现，所以平均值为 &lt;span class=&#34;math inline&#34;&gt;\(n/2\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(n = p^k\)&lt;/span&gt;（下文中若 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不加说明则默认为质数），则 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = p^k - p^{k - 1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明考虑定义即可。&lt;span class=&#34;math inline&#34;&gt;\([1, p^k]\)&lt;/span&gt; 中除了 &lt;span class=&#34;math inline&#34;&gt;\(p^{k} / p = p^{k - 1}\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数外都与 &lt;span class=&#34;math inline&#34;&gt;\(p^k\)&lt;/span&gt; 互质。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;单个欧拉函数的计算&lt;/strong&gt;：令 &lt;span class=&#34;math inline&#34;&gt;\(n = \prod p_i^{c_i}\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\varphi(n) = n\prod(1 - \frac{1}{p_i})
\]&lt;/span&gt; 证明：由欧拉函数的积性，我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(n) &amp;amp;= \prod\varphi(p_i^{k_i})\\
&amp;amp;= \prod p_i^{k_i - 1}(p_i - 1)\\
&amp;amp;= \prod p_i^{k_i}(1 - \frac{1}{p_i})\\
&amp;amp;= n\prod(1 - \frac 1{p_i})
\end{aligned}
\]&lt;/span&gt; 所以我们在求单个欧拉函数值时，可以用下面的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; phi(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = n;&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i * i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans / i * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) n /= i;&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans = ans / n * (n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;欧拉函数的线性筛法&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\varphi(1) = 1\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;质数：&lt;span class=&#34;math inline&#34;&gt;\(\varphi(p) = p - 1\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合数：我们知道每个合数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 都是被其最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 筛掉的，设 &lt;span class=&#34;math inline&#34;&gt;\(n = n&amp;#39;p\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\perp n&amp;#39;\)&lt;/span&gt; 时，由欧拉函数的积性显然有 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = \varphi(n&amp;#39;)(p - 1)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\not\perp n&amp;#39;\)&lt;/span&gt; 时，则 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 也是 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 的最小质因子，而且 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 包含了 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 所有的质因子。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(n) &amp;amp;= n\prod\frac{p_i - 1}{p_i}\\
&amp;amp;= pn&amp;#39;\prod\frac{p_i - 1}{p_i}\\
&amp;amp;= p\varphi(n&amp;#39;)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以就可以按照如下的代码线性求出 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的欧拉函数值。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init() {&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    phi[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i] = i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                phi[i * p[j]] = p[j] * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i * p[j]] = (p[j] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-17&#34;&gt;&lt;a href=&#34;#cb16-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-18&#34;&gt;&lt;a href=&#34;#cb16-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;欧拉函数的衰减速度是 &lt;span class=&#34;math inline&#34;&gt;\(O(\log)\)&lt;/span&gt; 级别的。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;应用-1&#34;&gt;应用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;（扩展）欧拉定理中有应用。&lt;/li&gt;
&lt;li&gt;在莫比乌斯反演中扮演重要角色。&lt;/li&gt;
&lt;li&gt;抓住欧拉函数与互质的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;欧拉定理&#34;&gt;欧拉定理&lt;/h3&gt;
&lt;h4 id=&#34;费马小定理&#34;&gt;费马小定理&lt;/h4&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为素数，且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a^{p - 1}\equiv 1\pmod p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;另一个形式：&lt;span class=&#34;math inline&#34;&gt;\(a^p\equiv p\pmod p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明见下面的欧拉定理。这个东西最重要的用途就是求逆元，见上文。&lt;/p&gt;
&lt;h4 id=&#34;欧拉定理-1&#34;&gt;欧拉定理&lt;/h4&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(a,n\in\mathbb{N}^+,a\perp n\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
a^{\varphi(n)}\equiv 1\pmod n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的简化剩余系为 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace\overline{a_1},\overline{a_2},\cdots,\overline{a_{\varphi(n)}} \rbrace\)&lt;/span&gt;。对 &lt;span class=&#34;math inline&#34;&gt;\(\forall a_i, a_j\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(aa_i\equiv aa_j\pmod n\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a(a_i-a_j)\equiv 0\pmod n\)&lt;/span&gt;。因为 &lt;span class=&#34;math inline&#34;&gt;\(a\perp n\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(a_i\equiv a_j\)&lt;/span&gt;。故当 &lt;span class=&#34;math inline&#34;&gt;\(a_i\not=a_j\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(aa_i,aa_j\)&lt;/span&gt; 也代表不同同余类。&lt;/p&gt;
&lt;p&gt;而简化剩余系关于模 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 乘法运算封闭 ，所以简化剩余系 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace\overline{a_1},\overline{a_2},\cdots,\overline{a_{\varphi(n)}} \rbrace\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace\overline{aa_1},\overline{aa_2},\cdots,\overline{aa_{\varphi(n)}} \rbrace\)&lt;/span&gt; 是等价的。综上： &lt;span class=&#34;math display&#34;&gt;\[
a^{\varphi(n)}a_1a_2\cdots a_{\varphi(n)}\equiv (aa_1)(aa_2)\cdots(aa_{\varphi(n)})\equiv a_1a_2\cdots a_{\varphi(n)}\equiv 1\pmod n
\]&lt;/span&gt; 欧拉定理得证。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数时，&lt;span class=&#34;math inline&#34;&gt;\(\varphi(p) = p - 1\)&lt;/span&gt;，且只有 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数与 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不互质。显然当 &lt;span class=&#34;math inline&#34;&gt;\(a\perp p\)&lt;/span&gt; 时 &lt;span class=&#34;math inline&#34;&gt;\(a^{p - 1} \equiv 1\pmod n\)&lt;/span&gt;，两边同乘 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 得到费马小定理。而当 &lt;span class=&#34;math inline&#34;&gt;\(a\not\perp p\)&lt;/span&gt; 时费马小定理显然成立。&lt;/p&gt;
&lt;h4 id=&#34;扩展欧拉定理&#34;&gt;扩展欧拉定理&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^b\equiv
\begin{cases}
a^{b\bmod \phi(m)}&amp;amp;,a\perp m\\
a^b&amp;amp;,a\not\perp m\land b&amp;lt;\phi(m)\\
a^{b \bmod \phi(m) + \phi(m)}&amp;amp;,a\not\perp m\land b \ge \phi(m)
\end{cases}
\pmod m
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;常用于&lt;strong&gt;降幂&lt;/strong&gt;，当指数特别大的时候可以降低指数。此处与欧拉定理不一样的是 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 无需互质。&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(m = p^r\times s\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(\gcd(p,s) = 1\)&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;由欧拉定理得 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(s)}\equiv 1\pmod s\)&lt;/span&gt;，由欧拉函数积性得 &lt;span class=&#34;math inline&#34;&gt;\(\phi(m) = \phi(s)\phi(p^r)\)&lt;/span&gt;。所以 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m)}\equiv 1\pmod s\)&lt;/span&gt;。设 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m)}=ks + 1\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m) + r} = km + p^r\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(p^{\phi(m) + r}\equiv p^r\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(b\ge r\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(p^b\equiv p^{b - r}\times p^r\equiv p^{b - r}\times p^{\phi(m) + b}\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;因为 &lt;span class=&#34;math inline&#34;&gt;\(r\le \phi(p^r)\le \phi(m)\)&lt;/span&gt;，所以当 &lt;span class=&#34;math inline&#34;&gt;\(b\ge 2\phi(m)\)&lt;/span&gt; 时 &lt;span class=&#34;math inline&#34;&gt;\(b - \phi(m)\ge r\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(p^b\equiv p^{b - \phi(m)}\pmod m\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(p^b\equiv p^{b\bmod \phi(m) + \phi(m)}\equiv m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 质因数分解之后乘起来，就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(a^b\equiv a^{b\bmod \phi(m) + \phi(m)}\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;但是需要注意当 &lt;span class=&#34;math inline&#34;&gt;\(b&amp;lt;\phi(m)\)&lt;/span&gt; 的时候上述结论不一定正确。&lt;/p&gt;
&lt;h4 id=&#34;应用降幂塔&#34;&gt;应用（降幂塔）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4139&#34;&gt;P4139 上帝与集合的正确用法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\le 10^3\)&lt;/span&gt; 次询问，求 &lt;span class=&#34;math inline&#34;&gt;\(2^{\infty}\bmod p\)&lt;/span&gt; 的值，&lt;span class=&#34;math inline&#34;&gt;\(p\le 10^7\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑使用扩展欧拉定理： &lt;span class=&#34;math display&#34;&gt;\[
2^\infty\equiv 2^{2^\infty \bmod \phi(p) + \phi(p)}\pmod{\phi(p)}
\]&lt;/span&gt; 现在我们发现需要求的变成了 &lt;span class=&#34;math inline&#34;&gt;\(2^\infty\bmod \phi(p)\)&lt;/span&gt;，这样子问题的规模就被缩小了，先线性筛出欧拉函数然后递归处理每组数据即可。返回的条件是 &lt;span class=&#34;math inline&#34;&gt;\(p = 1\)&lt;/span&gt; 时返回 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。时间复杂度&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p)&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qpow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, calc(phi[p]) + phi[p], p);&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF906D&#34;&gt;CF906D Power Tower&lt;/a&gt;。本题也是扩展欧拉定理的应用，乍一看直接 dfs 处理的复杂度跑不过去，但考虑到 &lt;span class=&#34;math inline&#34;&gt;\(\phi(n)\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 级别衰减的，所以不用担心跑不过去。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3934&#34;&gt;P3934 [Ynoi2016] 炸脖龙 I&lt;/a&gt; 区间加，查询 &lt;span class=&#34;math inline&#34;&gt;\(a_l^{a_{l + 1}^{a_{l + 2}^{\cdots^{a_r}}}}\)&lt;/span&gt;。同样只需要考虑 &lt;span class=&#34;math inline&#34;&gt;\(a_l\)&lt;/span&gt; 后面的一小段，&lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt; 值就会降到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3747&#34;&gt;P3747 [六省联考 2017] 相逢是问候&lt;/a&gt; 每次操作将 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 替换成 &lt;span class=&#34;math inline&#34;&gt;\(c^{a_i}\)&lt;/span&gt;，区间求和。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>数论复习 2（进阶数论）</title>
        <link>https://oi.imyangty.com/summary-number-theory2/</link>
        <pubDate>Thu, 12 Aug 2021 14:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-number-theory2/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg16.webp" alt="Featured image of post 数论复习 2（进阶数论）" /&gt;&lt;h2 id=&#34;线性同余方程&#34;&gt;线性同余方程&lt;/h2&gt;
&lt;h3 id=&#34;一般线性同余方程&#34;&gt;一般线性同余方程&lt;/h3&gt;
&lt;p&gt;一般的线性同余方程是形如 &lt;span class=&#34;math display&#34;&gt;\[
ax\equiv b\pmod m
\]&lt;/span&gt; 求解可以考虑使用 exgcd，将方程转化为 &lt;span class=&#34;math inline&#34;&gt;\(ax + my = b\)&lt;/span&gt;，便可以求出 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的一个解。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1082&#34;&gt;&lt;strong&gt;P1082&lt;/strong&gt; [NOIP2012 提高组] 同余方程&lt;/a&gt;。对于这种 &lt;span class=&#34;math inline&#34;&gt;\(ax\equiv 1\pmod m\)&lt;/span&gt; 的，根据逆元的定义可以直接求逆，这里不展开。&lt;/p&gt;
&lt;h3 id=&#34;中国剩余定理&#34;&gt;中国剩余定理&lt;/h3&gt;
&lt;h4 id=&#34;简介&#34;&gt;简介&lt;/h4&gt;
&lt;p&gt;又称孙子定理。用于求解线性同余方程组。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
x\equiv &amp;amp;a_1\pmod{m_1} \\
x\equiv&amp;amp; a_2\pmod{m_2} \\
&amp;amp;\vdots \\
x\equiv &amp;amp;a_n\pmod{m_n}
\end{cases}
\]&lt;/span&gt; 要求 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\ne j\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(m_i\perp m_j\)&lt;/span&gt;。即，模数要两两互质。&lt;/p&gt;
&lt;h4 id=&#34;结论&#34;&gt;结论&lt;/h4&gt;
&lt;p&gt;构造解：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;计算 &lt;span class=&#34;math inline&#34;&gt;\(M = \displaystyle\prod_{i = 1}^n m_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(M_i = \dfrac M {m_i}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;对于每个 &lt;span class=&#34;math inline&#34;&gt;\(M_i\)&lt;/span&gt; 计算其在模 &lt;span class=&#34;math inline&#34;&gt;\(m_i\)&lt;/span&gt; 意义下的逆元 &lt;span class=&#34;math inline&#34;&gt;\(t_i = M_i^{-1}\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;方程组的一个特解为 &lt;span class=&#34;math inline&#34;&gt;\(x_0 = \displaystyle\sum_{i = 1}^na_iM_it_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;最小正整数解即为 &lt;span class=&#34;math inline&#34;&gt;\(x_0\bmod M\)&lt;/span&gt;，方程组的解集为 &lt;span class=&#34;math inline&#34;&gt;\(\left\lbrace x|x=\displaystyle\sum_{i=1}^na_iM_it_i+kM,k\in\mathbb{Z}\right\rbrace\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;证明&#34;&gt;证明&lt;/h4&gt;
&lt;p&gt;首先，我们易知 &lt;span class=&#34;math inline&#34;&gt;\(\forall j\in[1,n]\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(i\neq j\)&lt;/span&gt; 时有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a_jM_jt_j\equiv 0\pmod{m_i}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(i=j\)&lt;/span&gt; 时有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a_iM_it_i\equiv a_iM_iM_i^{-1}\equiv a_i\pmod{m_i}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以对于我们得到的解 &lt;span class=&#34;math inline&#34;&gt;\(x=\displaystyle\sum_{i=1}^na_iM_it_i\)&lt;/span&gt;，对于任意的 &lt;span class=&#34;math inline&#34;&gt;\(m_i\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(x\equiv a_i\pmod{m_i}\)&lt;/span&gt;，定理得证。&lt;/p&gt;
&lt;p&gt;类比拉格朗日插值。&lt;/p&gt;
&lt;h4 id=&#34;应用&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;模板题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P1495&#34;&gt;https://www.luogu.com.cn/problem/P1495&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;代码实现如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, a[&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;], m[&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;], Mul, M[&lt;span class=&#34;dv&#34;&gt;16&lt;/span&gt;], inv[&lt;span class=&#34;dv&#34;&gt;16&lt;/span&gt;], x, y;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; exgcd(ll a, ll b, ll&amp;amp; x, ll&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Mul = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n);&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, m + i, a + i);&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Mul *= m[i];&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++) {&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        M[i] = Mul / m[i];&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        exgcd(M[i], m[i], x, y);&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        inv[i] = x &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ? x + m[i] : x;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += a[i] * M[i] * inv[i];&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans % Mul);&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一般来说可以在其他算法里面被使用，裸题很少。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3868&#34;&gt;P3868 [TJOI2009] 猜数字&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;线性同余方程的合并excrt&#34;&gt;线性同余方程的合并（exCRT）&lt;/h3&gt;
&lt;p&gt;当 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
x\equiv r_1\pmod{m_1}\\
x\equiv r_2\pmod{m_2}\\
\cdots\\
x\equiv r_n\pmod{m_n}
\end{cases}
\]&lt;/span&gt; 中的模数不两两互质时，CRT 需要的 &lt;span class=&#34;math inline&#34;&gt;\(M_i\)&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(m_i\)&lt;/span&gt; 的逆元就不一定存在。所以我们的方法是：两两合并这些方程，最后用 exgcd 求解。&lt;/p&gt;
&lt;p&gt;先考虑两个未知数的情况： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
x\equiv r_1\pmod{m_1} \\
x\equiv r_2\pmod{m_2} \\
\end{cases}
\]&lt;/span&gt; 这个方程可以改写为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x=k_1m_1+r_1=k_2m_2+r_2
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(k_1,k_2\)&lt;/span&gt; 为未知量，然后方程可以进一步改写为关于 &lt;span class=&#34;math inline&#34;&gt;\(k_1,k_2\)&lt;/span&gt; 的形式：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
k_1m_1 - k_2m_2=r_2-r_1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由裴蜀定理得这个方程有解的条件是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(m_1,m_2)\mid r_2-r_1\)&lt;/span&gt;，若有解， 则令 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle d = \gcd(m_1,m_2),p_1 = \frac{m_1}{d},p_2=\frac{m_2}{d}\)&lt;/span&gt;，方程化为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
k_1p_1-k_2p_2 = \frac{r_2-r_1}{d}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用 exgcd 求出方程 &lt;span class=&#34;math inline&#34;&gt;\(p_1\lambda_1 + p_2\lambda_2 = 1\)&lt;/span&gt; 的解 &lt;span class=&#34;math inline&#34;&gt;\(\lambda_1,\lambda_2\)&lt;/span&gt;，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
k_1=\lambda_1\cdot\dfrac{r_2-r_1}{d} \\
k_2=\lambda_2\cdot\dfrac{r_2-r_1}{d}
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(k_1\)&lt;/span&gt; 还原回去，得到满足原方程的一个特解&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x^* = m_1\lambda_1\cdot\dfrac{r_2-r_1}{d} + r_1
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;则这个方程所有的通解为 $x = x^* + k(m_1,m_2),k $。&lt;/p&gt;
&lt;p&gt;所以两个方程就合并为一个：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x\equiv x^*\pmod{\operatorname{lcm}(m_1,m_2)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这样子两两合并下去就可以将所有的方程合为一个，得解。&lt;/p&gt;
&lt;p&gt;应用较为广泛，可以在 exLucas 中发挥其作用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4777&#34;&gt;P4777 【模板】扩展中国剩余定理（EXCRT）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4774&#34;&gt;P4774 [NOI2018] 屠龙勇士&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;组合数取模&#34;&gt;组合数取模&lt;/h2&gt;
&lt;h3 id=&#34;lucas-定理&#34;&gt;Lucas 定理&lt;/h3&gt;
&lt;p&gt;原来主要是为了解决组合数取模的问题，在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制上的表示可以进行数位 dp。&lt;/p&gt;
&lt;p&gt;常见应用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接求 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom n m \bmod p\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为较小质数：这可以直接使用 Lucas 定理。&lt;/li&gt;
&lt;li&gt;使用 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle \binom n m \equiv \binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\cdot \binom{n\bmod p}{m\bmod p}\pmod p\)&lt;/span&gt; 化简式子，见超能粒子炮。&lt;/li&gt;
&lt;li&gt;利用其在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制表示下的性质进行数位 dp，见清华集训组合数问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;定理内容&#34;&gt;定理内容&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\cdot \binom{n\bmod p}{m\bmod p}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数。一般拿来求 &lt;span class=&#34;math inline&#34;&gt;\(\binom nm\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 范围较小时。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * lucas(n / p, m / p) * C(n % p, m % p) % p;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dbinom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\)&lt;/span&gt; 是可以递归算的，而 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n\bmod p}{m\bmod p}\)&lt;/span&gt; 可以直接算。&lt;/p&gt;
&lt;p&gt;另一种形式：对于整数 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 和素数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，若 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a &amp;amp;= \sum_{i = 0}^k a_ip^i\\
b &amp;amp;= \sum_{i = 0}^k b_ip^i
\end{aligned}
\]&lt;/span&gt; （相当于把 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下表示）则 &lt;span class=&#34;math display&#34;&gt;\[
\binom ab\equiv\prod_{i = 0}^k\binom{a_i}{b_i}\pmod p
\]&lt;/span&gt; 反复套用第一个形式会发现两个是等价的。&lt;/p&gt;
&lt;h4 id=&#34;证明-1&#34;&gt;证明&lt;/h4&gt;
&lt;p&gt;需要一定的组合数学基础。&lt;/p&gt;
&lt;h5 id=&#34;引理&#34;&gt;引理&lt;/h5&gt;
&lt;p&gt;首先考虑 &lt;span class=&#34;math display&#34;&gt;\[
\binom p n \bmod p
\]&lt;/span&gt; 的取值，注意到展开组合数之后其为如下形式： &lt;span class=&#34;math display&#34;&gt;\[
\frac{p!}{n!(p-n)!}\bmod p
\]&lt;/span&gt; 而显然，由于分子中 &lt;span class=&#34;math inline&#34;&gt;\(p!\)&lt;/span&gt; 是一定有质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的，所以只有当 &lt;span class=&#34;math inline&#34;&gt;\(n = 0\lor n = p\)&lt;/span&gt; 的时候（即 &lt;span class=&#34;math inline&#34;&gt;\(p!\)&lt;/span&gt; 能被消干净）整体的结果为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。即 &lt;span class=&#34;math display&#34;&gt;\[
\binom p n\bmod p = [n = 0\lor n = p]
\]&lt;/span&gt; 进而我们可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(a + b)^p&amp;amp;=\sum_{n = 0}^p\binom p na^nb^{p - n}\\
&amp;amp;\equiv \sum_{n= 0}^p[n = 0\lor n = p]a^nb^{p - n}\\
&amp;amp;\equiv a^p + b^p\pmod p
\end{aligned}
\]&lt;/span&gt; 然后将其推广到二项式的情况， &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(ax^n + bx^m)^p&amp;amp;\equiv a^px^{np} + b^px^{mp}\\
&amp;amp;\equiv ax^{np} + bx^{mp}
\end{aligned}
\]&lt;/span&gt; 即我们可以直接把指数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 给提进来。&lt;/p&gt;
&lt;h5 id=&#34;证明-2&#34;&gt;证明&lt;/h5&gt;
&lt;p&gt;考虑二项式 &lt;span class=&#34;math inline&#34;&gt;\((1+x)^n\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x^m\)&lt;/span&gt; 处的系数模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的结果，不难发现其即为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom n m\bmod p\)&lt;/span&gt;。利用上述引理，我们可以做出如下推导： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(1+x)^n&amp;amp;\equiv(1+x)^{p\lfloor n/p\rfloor}(1+x)^{n\bmod p}\\
&amp;amp;\equiv(1+x^p)^{\lfloor n/p\rfloor}(1+x)^{n\bmod p}
\end{aligned}
\]&lt;/span&gt; 我们将其看作两个多项式 &lt;span class=&#34;math inline&#34;&gt;\((1+x^p)^{\lfloor n/p\rfloor}\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\((1+x)^{n\bmod p}\)&lt;/span&gt; 的卷积，考虑这两个式子对 &lt;span class=&#34;math inline&#34;&gt;\((1 + x)^n\)&lt;/span&gt; 产生的贡献：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\((1+x^p)^{\lfloor n/p\rfloor}\)&lt;/span&gt; 展开后得到的项的次数均为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\((1+x)^{n\bmod p}\)&lt;/span&gt; 展开后得到的项的次数最多为 &lt;span class=&#34;math inline&#34;&gt;\(p - 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以对 &lt;span class=&#34;math inline&#34;&gt;\(x^m\)&lt;/span&gt; 的系数仅有一种产生贡献的方案，考虑一下这个贡献怎么来的：就是 &lt;span class=&#34;math inline&#34;&gt;\((1+x^p)^{\lfloor n/p\rfloor}\)&lt;/span&gt; 中取 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数次项，这部分的系数即 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\)&lt;/span&gt;，然后在 &lt;span class=&#34;math inline&#34;&gt;\((1+x)^{n\bmod p}\)&lt;/span&gt; 中取剩余的部分，这部分的系数即 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\binom{n\bmod p}{m\bmod p}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以我们得出结论 &lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \binom{\lfloor\frac n p\rfloor}{\lfloor\frac m p\rfloor}\cdot \binom{n\bmod p}{m\bmod p}\pmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;应用-1&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;一般拿来做组合数取模，是很基础的内容，可以辅助推式子。&lt;/p&gt;
&lt;p&gt;在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下的展开形式可以做数位 dp。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3807&#34;&gt;P3807 【模板】卢卡斯定理/Lucas 定理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2480&#34;&gt;P2480 [SDOI2010]古代猪文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4345&#34;&gt;P4345 [SHOI2015]超能粒子炮·改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1778&#34;&gt;51nod1778 小Q的集合&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kummer-定理&#34;&gt;Kummer 定理&lt;/h3&gt;
&lt;p&gt;是一个小番外。&lt;/p&gt;
&lt;h4 id=&#34;质数在阶乘中的幂次&#34;&gt;质数在阶乘中的幂次&lt;/h4&gt;
&lt;p&gt;勒让德在 1808 年提出 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 中含有的质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的幂次为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i\ge 1}\lfloor n / p^i\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;证明：&lt;span class=&#34;math inline&#34;&gt;\(n! = 1\times 2\times\cdots \times p\times \cdots\times 2p\times \cdots\times \lfloor n / p\rfloor p\times \cdots\times n\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数提出来，为 &lt;span class=&#34;math inline&#34;&gt;\(p^{\lfloor n / p\rfloor}\lfloor n / p\rfloor!\)&lt;/span&gt;，这里面显然有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n/p\rfloor\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。然后递归寻找 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n /p\rfloor!\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;p&gt;下面我们记 &lt;span class=&#34;math inline&#34;&gt;\(\nu(n!) = \sum_{i \ge 1}\lfloor n /p^i\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;当然还有一种公式是 &lt;span class=&#34;math inline&#34;&gt;\(v_p(n!) = \dfrac{n - S_p(n)}{1 - p}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(S_p(n)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的各位数字和。证明在这里先不写了。&lt;/p&gt;
&lt;h4 id=&#34;质数在组合数中的幂次&#34;&gt;质数在组合数中的幂次&lt;/h4&gt;
&lt;p&gt;我们可以发现： &lt;span class=&#34;math display&#34;&gt;\[
\nu\left(\binom{n+m}m\right) = \sum_{i = 1}(\lfloor(n + m)/  p^i\rfloor - \lfloor n / p^i\rfloor- \lfloor m / p^i\rfloor)
\]&lt;/span&gt; 我们可以注意到，对于某个 &lt;span class=&#34;math inline&#34;&gt;\(p^i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / p^i\rfloor\)&lt;/span&gt; 相当于在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下去掉后面的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，&lt;span class=&#34;math inline&#34;&gt;\(m + n\)&lt;/span&gt; 在第 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 位产生进位的条件显然就为 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor(n + m)/ p^i\rfloor - \lfloor n / p^i\rfloor- \lfloor m / p^i\rfloor\)&lt;/span&gt;，这就是 Kummer 定理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dbinom{n + m}{m}\)&lt;/span&gt; 中质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的个数为 &lt;span class=&#34;math inline&#34;&gt;\(n,m\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制下做加法的进位次数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF582D&#34;&gt;CF582D Number of Binominal Coefficients&lt;/a&gt;：利用上面的定理进行数位 dp。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;扩展卢卡斯&#34;&gt;扩展卢卡斯&lt;/h3&gt;
&lt;p&gt;求 &lt;span class=&#34;math display&#34;&gt;\[
\binom nm\bmod M
\]&lt;/span&gt; 的值。其中 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 不一定为质数。和卢卡斯定理关系不大。&lt;/p&gt;
&lt;p&gt;考虑使用唯一分解定理分解模数 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 得到 &lt;span class=&#34;math inline&#34;&gt;\(M = \prod p_i^{k_i}\)&lt;/span&gt; 的形式，然后对于每个 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{k_i}\)&lt;/span&gt; 单独求解，最后用 CRT 合并。拆开组合数的式子，我们发现：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\binom n m \equiv \frac{n!}{m!(n - m)!}\pmod{p^k}
\]&lt;/span&gt; 然而下面那个东西不一定能算模 &lt;span class=&#34;math inline&#34;&gt;\(p^k\)&lt;/span&gt; 意义下的乘法逆元，那么我们就把所有的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 提出来，设 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \frac{n!}{p^{\nu(n!)}}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\nu(n)\)&lt;/span&gt; 上面已经说明。提出来之后就可以得到 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\not\equiv 0\pmod{p^k}\)&lt;/span&gt;，可以求逆。现在就需要计算 &lt;span class=&#34;math display&#34;&gt;\[
\frac{f(n)}{f(m)f(n - m)}p^{\nu(n!) - \nu(m!) - \nu((n - m)!)}
\]&lt;/span&gt; 上文说过了 &lt;span class=&#34;math inline&#34;&gt;\(\nu(n!) = \sum_{i\ge 1}\lfloor n /p^i\rfloor\)&lt;/span&gt;，下面考虑如何求 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(p^{\nu(n!)}\)&lt;/span&gt; 是可以求逆的，这里就不再赘述。主要来看 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 怎么求。我们把 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 的式子展开来，提出 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的倍数： &lt;span class=&#34;math display&#34;&gt;\[
n! = 1\times2\times\cdots\times(p-1)\times p\times [(p+1)\times\cdots\times(2p - 1)]\times 2p\times\cdots
\]&lt;/span&gt; 中间是存在循环节的： &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp q}^{q^k}i\equiv\prod_{i,i\perp q}^{q^k}(i + tq^k)\pmod{q^k}\)&lt;/span&gt;，这个循环节循环了 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n}{p^k}\right\rfloor\)&lt;/span&gt; 次，所以考虑暴力把 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp p}^{p^k}i\)&lt;/span&gt; 求出来然后快速幂求一波 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n}{p^k}\right\rfloor\)&lt;/span&gt; 次幂。当然最后是需要乘上余项 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\prod_{i,i\perp p}^{n\bmod p^k}i\)&lt;/span&gt;，暴力就可以了。剩下的项是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle p^{\lfloor n/p\rfloor}\cdot\left(\left\lfloor\frac n p\right\rfloor\right)!\)&lt;/span&gt;。前者可以快速幂，后面的可以递归求，即为 &lt;span class=&#34;math inline&#34;&gt;\(f(\lfloor\frac np\rfloor)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;于是我们就做完了。来看下代码：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4720&#34;&gt;洛谷 P4720 【模板】扩展卢卡斯&lt;/a&gt;，细节巨大多。下面的写法，一次询问的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(M\log M)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, m, mod;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; exgcd(ll a, ll b, ll &amp;amp;x, ll &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(b, a % b, y, x), y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll inv(ll n, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll x, y;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(n, mod, x, y);&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll base, ll exp, ll mod) {&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; exp; exp &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exp &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll CRT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, ll *a, ll *m) {&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll M = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) M *= m[i];&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll w = M / m[i];&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = (ret + a[i] * w % mod * inv(w, m[i]) % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f(ll n, ll p, ll pk) {&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pk) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p) ret = ret * i % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = qPow(ret, n / pk, pk);&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n / pk * pk + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p) ret = ret * (i % pk) % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret * f(n / p, p, pk) % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll multiLucas(ll n, ll m, ll p, ll pk) {&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n; i; i /= p) cnt += i / p;&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = m; i; i /= p) cnt -= i / p;&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = n - m; i; i /= p) cnt -= i / p;&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(p, cnt, pk) * f(n, p, pk) % pk * inv(f(m, p, pk), pk) % pk * inv(f(n - m, p, pk), pk) % pk;&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll exLucas(ll n, ll m, ll p) {&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll pk[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;], a[&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i * i &amp;lt;= p; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            pk[++cnt] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (p % i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) pk[cnt] *= i, p /= i;&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a[cnt] = multiLucas(n, m, i, pk[cnt]);&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) pk[++cnt] = p, a[cnt] = multiLucas(n, m, p, p);&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; CRT(cnt, a, pk);&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n, m, mod);&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(exLucas(n, m, mod));&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，上面这种做法不是最快的。按理来说，如果模数 &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; 固定，可以预处理 + 光速幂，可以做到更更优，但是由于没有什么用所以不写了。&lt;/p&gt;
&lt;h2 id=&#34;阶与原根二次剩余离散对数&#34;&gt;阶与原根/二次剩余/离散对数&lt;/h2&gt;
&lt;h3 id=&#34;阶指数&#34;&gt;阶/指数&lt;/h3&gt;
&lt;h4 id=&#34;定义&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(a\in \mathbb Z\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\in\mathbb N^*\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp m\)&lt;/span&gt;，最小的满足 &lt;span class=&#34;math inline&#34;&gt;\(a^x\equiv 1\pmod m\)&lt;/span&gt; 的正整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 被称为 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的阶（或者指数），记作 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(a)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抽代中这里的阶就是模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 缩系关于乘法形成的群中，元素 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的阶。而 &lt;span class=&#34;math inline&#34;&gt;\(\delta\)&lt;/span&gt; 表示阶也仅限这个特殊群。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;性质&#34;&gt;性质&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;性质 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(a^0,a^1, \cdots, a^{\delta_m(a) - 1}\)&lt;/span&gt; 构成一个模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的剩余系（即两两不同余），并且剩余系内所有元与 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 互质。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：考虑反证法，设存在 &lt;span class=&#34;math inline&#34;&gt;\(0\le i&amp;lt;j&amp;lt; \delta_m(a)\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(a^i\equiv a^j\pmod m\)&lt;/span&gt;，那么一定有 &lt;span class=&#34;math inline&#34;&gt;\(a^{|i - j|}\equiv 1\pmod m\)&lt;/span&gt;，与阶的最小性矛盾，证毕。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;性质 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：若 &lt;span class=&#34;math inline&#34;&gt;\(a^n\equiv 1\pmod m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(a)\mid n\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：做带余除法，设 &lt;span class=&#34;math inline&#34;&gt;\(n = q\delta_m(a) + r\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(r &amp;gt; 0\)&lt;/span&gt; 则有 &lt;span class=&#34;math display&#34;&gt;\[
a^r\equiv a^r(a^{\delta_m(a)})^q\equiv a^n\equiv 1\pmod m
\]&lt;/span&gt; 和阶的最小性矛盾，故 &lt;span class=&#34;math inline&#34;&gt;\(r = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以推导出几个推论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(a^p\equiv a^q\pmod m\iff p\equiv q\pmod{\delta_a(m)}\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\delta_a(m)\mid \varphi(m)\)&lt;/span&gt;（考虑欧拉定理）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(k\in \mathbb N\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\delta_m(a^k) = \frac{\delta_m(a)}{\gcd(\delta_m(a), k)}
\]&lt;/span&gt; 证明： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
a^{k\delta_m(a^k)}=(a^k)^{\delta_m(a^k)}&amp;amp;\equiv 1\pmod m\\
\delta_m(a)&amp;amp;\mid k\delta_m(a^k)\\
\frac{\delta_m(a)}{\gcd(\delta_m(a), k)}&amp;amp;\mid \delta_m(a^k)
\end{aligned}
\]&lt;/span&gt; 而且 &lt;span class=&#34;math inline&#34;&gt;\(a^{\delta_m(a)}\equiv 1\pmod m\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
(a^k)^{\frac{\delta_m(a)}{\gcd(\delta_m(a), k)}} = (a^{\delta_m(a)})^{\frac{k}{\gcd(\delta_m(a), k)}}\equiv 1\pmod m
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\delta_m(a^k)\mid \frac{\delta_m(a)}{\gcd(\delta_m(a), k)}
\]&lt;/span&gt; 综合一下，证毕。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;（虽然看不出 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 那个有什么卵用）&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;性质 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：设 &lt;span class=&#34;math inline&#34;&gt;\(m\in\mathbb N^*\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a,b\in \mathbb Z\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(a\perp m, b\perp m\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\delta_m(ab) = \delta_m(a)\delta_m(b)\iff \delta_m(a)\perp \delta_m(b)
\]&lt;/span&gt; &lt;del&gt;可以理解为 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(x)\)&lt;/span&gt; 有“积性”。&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明先略去，赶时间。&lt;/p&gt;
&lt;h4 id=&#34;求法&#34;&gt;求法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(m)\)&lt;/span&gt; 的因子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好像没有什么卵用，略过。&lt;/p&gt;
&lt;h3 id=&#34;原根&#34;&gt;原根&lt;/h3&gt;
&lt;h4 id=&#34;定义-1&#34;&gt;定义&lt;/h4&gt;
&lt;p&gt;继承上文阶的定义，若 &lt;span class=&#34;math inline&#34;&gt;\(\delta_m(a) = \varphi(m)\)&lt;/span&gt;，则称 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抽代中，“原根”是循环群的生成元。并非每个模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 缩系关于乘法的群都是循环群，不是的话说明其不存在原根。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;性质-1&#34;&gt;性质&lt;/h4&gt;
&lt;p&gt;证明暂时不写了（笑）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原根判定定理：设 &lt;span class=&#34;math inline&#34;&gt;\(m\ge 3\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a\perp m\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根的充要条件是，对于 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(m)\)&lt;/span&gt; 的每个质因数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，都有 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{\varphi(m)}{p}}\not\equiv 1\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原根存在定理：&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 存在原根当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(m = 2,4,p^{\alpha}, 2p^{\alpha}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为奇素数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不写证明。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原根个数：若 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根存在，则个数为 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(\varphi(m))\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不写证明。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最小原根的数量级：&lt;span class=&#34;math inline&#34;&gt;\(O(m^{0.25 + \varepsilon})\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个告诉我们，暴力求原根是对的。&lt;/p&gt;
&lt;h4 id=&#34;求法-1&#34;&gt;求法&lt;/h4&gt;
&lt;p&gt;求单个原根就直接暴力从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 开始枚举并依次判定即可，利用原根判定定理。&lt;/p&gt;
&lt;h4 id=&#34;应用-2&#34;&gt;应用&lt;/h4&gt;
&lt;p&gt;NTT。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：ABC212G - Power Pair&lt;/p&gt;
&lt;p&gt;给定质数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，问数对 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 的个数模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(0\le x, y\le p - 1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\exists n, x^n\equiv y\pmod p\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le p\le 10^{12}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 的原根当且仅当最小的使得 &lt;span class=&#34;math inline&#34;&gt;\(r^e\equiv 1\pmod p\)&lt;/span&gt; 的正整数为 &lt;span class=&#34;math inline&#34;&gt;\(e = p - 1\)&lt;/span&gt;。本题需要用到的性质：&lt;span class=&#34;math inline&#34;&gt;\(r^i\bmod p, i\in[0, p - 1]\)&lt;/span&gt; 的值两两不同，且对于一个质数，一定有原根存在。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(x\equiv r^a\pmod p\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(y\equiv r^b\pmod p\)&lt;/span&gt;，不难发现 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 总能有一个 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 与之对应。于是就有 &lt;span class=&#34;math inline&#34;&gt;\(an\equiv b\pmod{p - 1}\)&lt;/span&gt;。现在就是需要找满足上式的 &lt;span class=&#34;math inline&#34;&gt;\((a, b)\)&lt;/span&gt; 的数量。&lt;/p&gt;
&lt;p&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，则上式有解的条件是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1)\mid b\)&lt;/span&gt;（裴蜀定理）。那对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 就可以写成： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{a = 1}^{p - 1}\frac{p - 1}{\gcd(a, p - 1)}
\]&lt;/span&gt; 然后 &lt;span class=&#34;math inline&#34;&gt;\(O(p)\)&lt;/span&gt; 是过不去的，要考虑优化。优化它的方法明显是寻找 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1)\)&lt;/span&gt; 相同的 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的个数。根据 &lt;span class=&#34;math inline&#34;&gt;\(p - 1\)&lt;/span&gt; 的因数个数 为 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p)\)&lt;/span&gt; 的，故这些 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 也只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p)\)&lt;/span&gt; 个。我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(a, p - 1) = g\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{g\mid p - 1}\frac{p - 1}{g}\times\phi\left(\frac{p - 1}{g}\right)
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\phi(n)\)&lt;/span&gt; 可以暴力计算。&lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt p\log p)\)&lt;/span&gt;，因为 $$ 的上界很松，轻松通过。&lt;/p&gt;
&lt;h3 id=&#34;离散对数&#34;&gt;离散对数&lt;/h3&gt;
&lt;p&gt;求最小的正整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(a^x\equiv b\pmod m\)&lt;/span&gt;，记作 &lt;span class=&#34;math inline&#34;&gt;\(x = \operatorname{lnd}_a b\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;bsgs&#34;&gt;BSGS&lt;/h4&gt;
&lt;p&gt;Baby-Step-Giant-Step（大步小步算法，BSGS）可以用来求解 &lt;span class=&#34;math inline&#34;&gt;\(a\perp m\)&lt;/span&gt; 的离散对数。&lt;/p&gt;
&lt;p&gt;首先由费马小定理可以知道答案一定在 &lt;span class=&#34;math inline&#34;&gt;\([1, m - 1]\)&lt;/span&gt; 之间。&lt;/p&gt;
&lt;p&gt;然后设 &lt;span class=&#34;math inline&#34;&gt;\(x = i\sqrt m - j\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(a^{i\sqrt m -j}\equiv b\pmod m\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(a^{i\sqrt m} \equiv ba^j\pmod m\)&lt;/span&gt;，而 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 都是 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt m\)&lt;/span&gt; 级别的，所以考虑在哈希表中预处理每个 &lt;span class=&#34;math inline&#34;&gt;\(ba^j\)&lt;/span&gt;，然后枚举 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 判断 &lt;span class=&#34;math inline&#34;&gt;\(a^{i\sqrt m}\)&lt;/span&gt; 是否在哈希表内出现过即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;&lt;span class=&#34;at&#34;&gt;register&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(R&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;unordered_map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; hash;&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ksm(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod) {&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; BSGS(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash.clear();&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a % p == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t = ceil(sqrt(p)), val, tmp;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash[val = b] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t)&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        hash[val = val * a % p] = j;&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = ksm(a, t, p), val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t) {&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        val = val * a % p;&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp = hash[val])&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val = i * t - tmp, (val % p + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p, a, b;&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;p, &amp;amp;a, &amp;amp;b);&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = BSGS(a, b, p);&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;no solution&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;exbsgs&#34;&gt;exBSGS&lt;/h4&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 不互质的时候，在模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的逆元不一定存在。所以考虑强行让他互质。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(d_1 = \gcd(a, p)\)&lt;/span&gt;，若 &lt;span class=&#34;math inline&#34;&gt;\(d_1\not\mid b\)&lt;/span&gt;，则无解。否则将方程同时除以 &lt;span class=&#34;math inline&#34;&gt;\(d_1\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\frac{a}{d_1}\cdot a^{x-1}\equiv \frac{b}{d_1}\pmod {\frac{p}{d_1}}
\]&lt;/span&gt; 若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{p}{d_1}\)&lt;/span&gt; 仍然不互质就接着上面的流程。直到 &lt;span class=&#34;math inline&#34;&gt;\(a\perp \dfrac{p}{\prod d_i}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;记所有的 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\frac{b}{\prod d} = B, \frac{p}{\prod d} = P,\prod\frac a d = A\)&lt;/span&gt;，则方程最后变为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
Aa^{x - k}\equiv B\pmod P
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此时 &lt;span class=&#34;math inline&#34;&gt;\(A\perp P\)&lt;/span&gt;，所以我们就可以愉快地求出 &lt;span class=&#34;math inline&#34;&gt;\(A^{-1}\pmod P\)&lt;/span&gt; 然后把他乘到右边来，方程就化为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
a^{x - k}\equiv A^{-1}B\pmod P
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;用 BSGS 求出该方程的解即可，然后记得加回 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;细节：如果 &lt;span class=&#34;math inline&#34;&gt;\(a = 1\or p = 1\)&lt;/span&gt;，最小自然数解必然为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，然后如果在递归的过程中发现 &lt;span class=&#34;math inline&#34;&gt;\(A=B\)&lt;/span&gt;，则说明 &lt;span class=&#34;math inline&#34;&gt;\(x = k\)&lt;/span&gt;，可直接返回答案。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;&lt;span class=&#34;at&#34;&gt;register&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(R&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;unordered_map&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; hash;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ksm(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; base, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod) {&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exgcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;amp; y) {&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b)&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, a;&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y -= a / b * x, tmp;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; inv(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod) {&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(a, mod, x, y);&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x % mod + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; BSGS(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash.clear();&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a % p == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-37&#34;&gt;&lt;a href=&#34;#cb5-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t = ceil(sqrt(p)), val, tmp;&lt;/span&gt;
&lt;span id=&#34;cb5-38&#34;&gt;&lt;a href=&#34;#cb5-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    hash[val = b] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-39&#34;&gt;&lt;a href=&#34;#cb5-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t)&lt;/span&gt;
&lt;span id=&#34;cb5-40&#34;&gt;&lt;a href=&#34;#cb5-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        hash[val = val * a % p] = j;&lt;/span&gt;
&lt;span id=&#34;cb5-41&#34;&gt;&lt;a href=&#34;#cb5-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = ksm(a, t, p), val = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-42&#34;&gt;&lt;a href=&#34;#cb5-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t) {&lt;/span&gt;
&lt;span id=&#34;cb5-43&#34;&gt;&lt;a href=&#34;#cb5-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        val = val * a % p;&lt;/span&gt;
&lt;span id=&#34;cb5-44&#34;&gt;&lt;a href=&#34;#cb5-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (tmp = hash[val])&lt;/span&gt;
&lt;span id=&#34;cb5-45&#34;&gt;&lt;a href=&#34;#cb5-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; val = i * t - tmp, (val % p + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb5-46&#34;&gt;&lt;a href=&#34;#cb5-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-47&#34;&gt;&lt;a href=&#34;#cb5-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-48&#34;&gt;&lt;a href=&#34;#cb5-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-49&#34;&gt;&lt;a href=&#34;#cb5-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-50&#34;&gt;&lt;a href=&#34;#cb5-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exBSGS(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb5-51&#34;&gt;&lt;a href=&#34;#cb5-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || p == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-52&#34;&gt;&lt;a href=&#34;#cb5-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-53&#34;&gt;&lt;a href=&#34;#cb5-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, na = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, g = exgcd(a, p, x, y);&lt;/span&gt;
&lt;span id=&#34;cb5-54&#34;&gt;&lt;a href=&#34;#cb5-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (g &amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-55&#34;&gt;&lt;a href=&#34;#cb5-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b % g)&lt;/span&gt;
&lt;span id=&#34;cb5-56&#34;&gt;&lt;a href=&#34;#cb5-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//判无解&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-57&#34;&gt;&lt;a href=&#34;#cb5-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++k, b /= g, p /= g, na = (na * (a / g)) % p;&lt;span class=&#34;co&#34;&gt;//递归&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-58&#34;&gt;&lt;a href=&#34;#cb5-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (na == b)&lt;span class=&#34;co&#34;&gt;//特判可以直接返回答案的情况&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-59&#34;&gt;&lt;a href=&#34;#cb5-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; k;&lt;/span&gt;
&lt;span id=&#34;cb5-60&#34;&gt;&lt;a href=&#34;#cb5-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g = exgcd(a, p, x, y);&lt;/span&gt;
&lt;span id=&#34;cb5-61&#34;&gt;&lt;a href=&#34;#cb5-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-62&#34;&gt;&lt;a href=&#34;#cb5-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = BSGS(a, b * inv(na, p) % p, p);&lt;/span&gt;
&lt;span id=&#34;cb5-63&#34;&gt;&lt;a href=&#34;#cb5-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : ans + k;&lt;/span&gt;
&lt;span id=&#34;cb5-64&#34;&gt;&lt;a href=&#34;#cb5-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb5-65&#34;&gt;&lt;a href=&#34;#cb5-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-66&#34;&gt;&lt;a href=&#34;#cb5-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-67&#34;&gt;&lt;a href=&#34;#cb5-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, p, b;&lt;/span&gt;
&lt;span id=&#34;cb5-68&#34;&gt;&lt;a href=&#34;#cb5-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;a, &amp;amp;p, &amp;amp;b); a || b || p; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;a, &amp;amp;p, &amp;amp;b)) {&lt;/span&gt;
&lt;span id=&#34;cb5-69&#34;&gt;&lt;a href=&#34;#cb5-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = exBSGS(a % p, b % p, p);&lt;/span&gt;
&lt;span id=&#34;cb5-70&#34;&gt;&lt;a href=&#34;#cb5-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-71&#34;&gt;&lt;a href=&#34;#cb5-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb5-72&#34;&gt;&lt;a href=&#34;#cb5-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;No Solution&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-73&#34;&gt;&lt;a href=&#34;#cb5-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-74&#34;&gt;&lt;a href=&#34;#cb5-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-75&#34;&gt;&lt;a href=&#34;#cb5-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;二次剩余&#34;&gt;二次剩余&lt;/h3&gt;
&lt;p&gt;求解 &lt;span class=&#34;math inline&#34;&gt;\(x^2\equiv a\pmod m\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为奇素数。若 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 存在则称 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的二次剩余。&lt;/p&gt;
&lt;h4 id=&#34;解的数量&#34;&gt;解的数量&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x^2\equiv m\)&lt;/span&gt; 的解？我们肯定知道 &lt;span class=&#34;math inline&#34;&gt;\(x_0^2\equiv x_1^2\)&lt;/span&gt;。移项，平方差，有 &lt;span class=&#34;math inline&#34;&gt;\((x_0 - x_1) (x_0 + x_1) \equiv 0\)&lt;/span&gt;。因为 &lt;span class=&#34;math inline&#34;&gt;\(x_0 - x_1\not\equiv0\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; 互为相反数。&lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为奇素数时模意义下的相反数就肯定不会相等，而且奇偶性不同。&lt;/p&gt;
&lt;p&gt;任意一对相反数都会对应一个二次剩余，故模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下的二次剩余一共有 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{m - 1}{2}\)&lt;/span&gt; 个，其余的非零数都是非二次剩余。&lt;/p&gt;
&lt;h4 id=&#34;欧拉准则&#34;&gt;欧拉准则&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Euler 判别准则：&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的二次剩余等价于 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\equiv 1\pmod m\)&lt;/span&gt;，否则 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\equiv -1\pmod m\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考虑费马小定理：&lt;span class=&#34;math inline&#34;&gt;\(a^{m - 1}\equiv 1\pmod m\)&lt;/span&gt;，由于 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 为奇素数，故 &lt;span class=&#34;math inline&#34;&gt;\(a^{2\times\frac{m - 1}{2}}\equiv 1\pmod m\)&lt;/span&gt;，相当于 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;“开根”后的结果，根据二次探测定理（上文 Miller-Rabin 处）其只可能为 &lt;span class=&#34;math inline&#34;&gt;\(\pm 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;考虑证明充分性：若 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 是二次剩余，则 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m - 1}{2}}\equiv (x^2)^{\frac{m-1}{2}}\equiv x^{m - 1}\equiv 1\pmod m\)&lt;/span&gt;，证毕。&lt;/p&gt;
&lt;p&gt;考虑证明必要性：若 &lt;span class=&#34;math inline&#34;&gt;\(a^{\frac{m-1}{2}}\equiv 1\pmod m\)&lt;/span&gt;，则将 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 表示为 &lt;span class=&#34;math inline&#34;&gt;\(g^k\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 为模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的原根，那么有 &lt;span class=&#34;math inline&#34;&gt;\(g^{k\frac{m-1}{2}}\equiv 1\)&lt;/span&gt;，由于 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 是原根，所以 &lt;span class=&#34;math inline&#34;&gt;\(m - 1=\varphi(m)\)&lt;/span&gt; 为其阶，故一定有 &lt;span class=&#34;math inline&#34;&gt;\(m - 1\mid k\dfrac{m-1}{2}\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为偶数。这就是说 &lt;span class=&#34;math inline&#34;&gt;\((g^{k/2})^2\equiv a\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 为二次剩余。&lt;/p&gt;
&lt;h4 id=&#34;cipolla-算法&#34;&gt;Cipolla 算法&lt;/h4&gt;
&lt;p&gt;由于模 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 意义下的二次剩余有 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{m - 1}{2}\)&lt;/span&gt; 个，所以期望两次就能找到一个 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(b^2 - a\)&lt;/span&gt; 为非二次剩余。&lt;/p&gt;
&lt;p&gt;然后便是 Cipolla 的核心思想：&lt;strong&gt;扩域&lt;/strong&gt;，人为定义 &lt;span class=&#34;math inline&#34;&gt;\(i^2 = b^2 - a\)&lt;/span&gt;，所以所有的数都可以被表达为 &lt;span class=&#34;math inline&#34;&gt;\(A + Bi\)&lt;/span&gt; 的形式，则 &lt;span class=&#34;math inline&#34;&gt;\(a \equiv (b + i)^{m + 1}\pmod m\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(x \equiv (a + i)^{\frac{m - 1}{2}}\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t, n, p, w;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx {&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il cmplx mul(cmplx a, cmplx b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx ans = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.x = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.x * b.x % p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.y * b.y % p * w % p) + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans.y = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.x * b.y % p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a.y * b.x % p) + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qPow(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a * a % p)&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * ret * a % p;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qPow(cmplx a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx ans = {&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a = mul(a, a, p))&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ans = mul(ans, a, p);&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans.x % p;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cipolla(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n %= p;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p == &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (qPow(n, (p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p) == p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a = rand() % p;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        w = ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a * a % p - n) % p + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (qPow(w, (p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p) == p - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx x = {a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(x, (p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, p);&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    srand(time(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(t);&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (t--) {&lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n), read(p);&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) {&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans1 = cipolla(n, p), ans2 = p - ans1;&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans1 == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;Hola!&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-55&#34;&gt;&lt;a href=&#34;#cb6-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-56&#34;&gt;&lt;a href=&#34;#cb6-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; print(min(ans1, ans2)), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), print(max(ans1, ans2));&lt;/span&gt;
&lt;span id=&#34;cb6-57&#34;&gt;&lt;a href=&#34;#cb6-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb6-58&#34;&gt;&lt;a href=&#34;#cb6-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-59&#34;&gt;&lt;a href=&#34;#cb6-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-60&#34;&gt;&lt;a href=&#34;#cb6-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>数论复习 3（反演与筛法）</title>
        <link>https://oi.imyangty.com/summary-number-theory3/</link>
        <pubDate>Thu, 12 Aug 2021 14:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-number-theory3/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg16.webp" alt="Featured image of post 数论复习 3（反演与筛法）" /&gt;&lt;h2 id=&#34;莫比乌斯反演相关&#34;&gt;莫比乌斯反演相关&lt;/h2&gt;
&lt;p&gt;警告：本节对推式子能力要求较高。&lt;/p&gt;
&lt;p&gt;这一部分内容在 OI 中的考察以式子的化简求值为主。&lt;/p&gt;
&lt;h3 id=&#34;整除分块&#34;&gt;整除分块&lt;/h3&gt;
&lt;p&gt;是学习莫比乌斯反演前的很重要的前置知识。&lt;/p&gt;
&lt;p&gt;是基于 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor\)&lt;/span&gt; 最多只有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 种取值的。可以加快运算。将相同的 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor\)&lt;/span&gt; 合在一起，体现了分块思想。&lt;/p&gt;
&lt;h4 id=&#34;基本形式&#34;&gt;基本形式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA11526&#34;&gt;UVA11526 H(n)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 组询问，每次给定 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;lt; 2^{31}\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\left\lfloor\frac{n}{i}\right\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 做法肯定是寄了的，考虑优化。打个表发现很多段 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor\)&lt;/span&gt; 的值都是一样的，并且下面说明这些不同的值只有 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 种。&lt;/p&gt;
&lt;p&gt;证明：对于 &lt;span class=&#34;math inline&#34;&gt;\(i\le \sqrt n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor\frac n i\rfloor\)&lt;/span&gt; 至多有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 个取值，然后对于 &lt;span class=&#34;math inline&#34;&gt;\(i\gt \sqrt n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor \frac n i\rfloor\lt \sqrt n\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor \frac n i\rfloor\)&lt;/span&gt; 也至多有 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt n\)&lt;/span&gt; 种取值。所以 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor\frac n i\rfloor\)&lt;/span&gt; 至多有 &lt;span class=&#34;math inline&#34;&gt;\(2\sqrt n\)&lt;/span&gt; 种取值。&lt;/p&gt;
&lt;p&gt;那么现在考虑给定 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt;，要求确定出分块右端点 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[l,r]\)&lt;/span&gt; 都有 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / i\rfloor = \lfloor n / l\rfloor\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 最大，那么就是如下限制条件： &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
k = \lfloor n / l\rfloor\\
r = \displaystyle\max_{ik\le n}\{i\}
\end{cases}
\]&lt;/span&gt; 那么就有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle r = \left\lfloor\frac nk\right\rfloor = \left\lfloor\frac{n}{\left\lfloor\frac n l\right\rfloor}\right\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;代码实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (n / l);&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3935&#34;&gt;P3935 Calculating&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 分解质因数结果为 &lt;span class=&#34;math inline&#34;&gt;\(x=p_1^{k_1}p_2^{k_2}\cdots p_n^{k_n}\)&lt;/span&gt;，令&lt;span class=&#34;math inline&#34;&gt;\(f(x)=(k_1+1)(k_2+1)\cdots (k_n+1)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i=l}^rf(i)\)&lt;/span&gt; 对 &lt;span class=&#34;math inline&#34;&gt;\(998\,244\,353\)&lt;/span&gt; 取模的结果。&lt;span class=&#34;math inline&#34;&gt;\(1\le l\le 10^{14}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le r\le 1.6\times 10^{14}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(r-l&amp;gt;10^{14}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先设 &lt;span class=&#34;math inline&#34;&gt;\(s(n) = \displaystyle\sum_{i=1}^n f(i)\)&lt;/span&gt;，然后答案即为 &lt;span class=&#34;math inline&#34;&gt;\(s(r) - s(l-1)\)&lt;/span&gt;，然后注意到 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 实际就是约数个数函数，那么 &lt;span class=&#34;math inline&#34;&gt;\(s(n)\)&lt;/span&gt; 即为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{d\mid i}1 = \sum_{i=1}^n\left\lfloor\frac{n}{i}\right\rfloor
\]&lt;/span&gt; 直接按上面方法做即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P2261&#34;&gt;P2261 [CQOI2007]余数求和&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le n,k\le 10^9\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^nk\bmod i\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(k\bmod i\)&lt;/span&gt; 可以拆成 &lt;span class=&#34;math inline&#34;&gt;\(k - i\lfloor k / i\rfloor\)&lt;/span&gt;，然后整个式子可以化为 &lt;span class=&#34;math display&#34;&gt;\[
kn - \sum_{i=1}^ni\left\lfloor \frac k i\right\rfloor
\]&lt;/span&gt; 每一块内统计平均值啥的即可。&lt;/p&gt;
&lt;h4 id=&#34;其他变形&#34;&gt;其他变形&lt;/h4&gt;
&lt;p&gt;使用类似的分析方法可以处理更多类似的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P2260&#34;&gt;P2260 [清华集训2012]模积和&lt;/a&gt; &lt;span class=&#34;math display&#34;&gt;\[
\sum_{1\le i\le n} \sum_{1\le j\le m,i\ne j} (n \bmod i) \times (m \bmod j)\bmod19940417
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(1\le n,m\le 10^9\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;二维整除分块。不妨假设 &lt;span class=&#34;math inline&#34;&gt;\(n\le m\)&lt;/span&gt;，首先容斥一波将 &lt;span class=&#34;math inline&#34;&gt;\(i\ne j\)&lt;/span&gt; 去掉： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n(n\bmod i)\sum_{j=1}^m(m\bmod j) - \sum_{i=1}^n(n\bmod i)(m\bmod i)
\]&lt;/span&gt; 然后用上面的化简方法把取模拆开： &lt;span class=&#34;math display&#34;&gt;\[
\left(n^2 - \sum_{i=1}^ni\left\lfloor\frac ni\right\rfloor \right)\times\left(m^2 - \sum_{i=1}^mi\left\lfloor\frac mi\right\rfloor \right) - \sum_{i=1}^n\left(n - i\left\lfloor \frac n i \right\rfloor\right)\left(m - i\left\lfloor \frac m i \right\rfloor\right)
\]&lt;/span&gt; 前面的两大坨是一般通过整除分块，我们看后面一部分： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i=1}^n\left(n - i\left\lfloor \frac n i \right\rfloor\right)\left(m - i\left\lfloor \frac m i \right\rfloor\right)\\
=&amp;amp;\sum_{i=1}^n\left(nm - ni\left\lfloor \frac n i \right\rfloor - mi\left\lfloor \frac m i \right\rfloor + i^2\left\lfloor \frac n i \right\rfloor\left\lfloor \frac m i \right\rfloor\right)\\
=&amp;amp;n^2m - n\sum_{i=1}^n\left\lfloor \frac n i \right\rfloor - m\sum_{i=1}^n\left\lfloor \frac m i \right\rfloor + \sum_{i=1}^ni^2\left\lfloor \frac n i \right\rfloor\left\lfloor \frac m i \right\rfloor
\end{aligned}
\]&lt;/span&gt; 前三项比较好做，主要问题是第四项。实际上你会发现由于 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n /i\rfloor\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor m / i\rfloor\)&lt;/span&gt; 都成块状，所以转折点一共也是 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 的，一样可以整除分块，每次对 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor n / \lfloor n / l\rfloor\rfloor\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\lfloor m / \lfloor m / l\rfloor\rfloor\)&lt;/span&gt; 取个 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt; 即可。而对于 &lt;span class=&#34;math inline&#34;&gt;\(\sum i^2\)&lt;/span&gt; 有公式在开头给出，在此不表。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; ll min(ll a, ll b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;dv&#34;&gt;19940417&lt;/span&gt;, inv2 = &lt;span class=&#34;dv&#34;&gt;9970209&lt;/span&gt;, inv6 = &lt;span class=&#34;dv&#34;&gt;3323403&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, m, ans;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc(ll n, ll k) {&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = min(n, k);&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n, k / (k / l));&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += ((r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (k / l * l) % mod + (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * (r - l) % mod * (k / l) % mod * inv2 % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret %= mod;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll summod(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (n * n % mod - calc(n, n) + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll sum(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; n * (n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * (&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * inv6 % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll calc2(ll n, ll m) {&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = n * m % mod * top % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret -= m * calc(top, n);&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret -= n * calc(top, m);&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(min(top, n / (n / l)), m / (m / l));&lt;span class=&#34;co&#34;&gt;//同时取min，注意上界问题&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll sqri = sum(r) - sum(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = (ret + sqri * (n / l) % mod * (m / l) % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m);&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = summod(n) * summod(m) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ans = (ans - calc2(n, m) + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{18}\)&lt;/span&gt;，求&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{k=1}^n \sum_{d^2 \mid k} d \bmod 998244353
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先我们不妨改变枚举顺序，先枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^{\lfloor\sqrt n\rfloor}d\sum_{k=1}^n[d^2\mid k]
\]&lt;/span&gt; 实际上就是 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^{\lfloor\sqrt n\rfloor}d\left\lfloor\frac{n}{d^2}\right\rfloor
\]&lt;/span&gt; 在这里，我们使用更一般化的思路，令 &lt;span class=&#34;math inline&#34;&gt;\(d^* = d^2\)&lt;/span&gt;，类似上面一样推导：&lt;span class=&#34;math inline&#34;&gt;\(\begin{cases}k = \lfloor n / l^2\rfloor\\r^* = \lfloor n / k\rfloor\end{cases}\)&lt;/span&gt;，那么就有 &lt;span class=&#34;math inline&#34;&gt;\(r^* = \displaystyle\left\lfloor\frac{n}{\left\lfloor\frac n l^2\right\rfloor}\right\rfloor\)&lt;/span&gt;，开个根即得到 &lt;span class=&#34;math inline&#34;&gt;\(r = \left\lfloor\sqrt{\left\lfloor\frac{n}{\left\lfloor\frac{n}{l^2}\right\rfloor}\right\rfloor}\right\rfloor\)&lt;/span&gt;。于是本题 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{1/4})\)&lt;/span&gt; 解决。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题：求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\left\lceil\frac ni\right\rceil
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;向上取整啥的不管，注意到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lceil\frac nm\right\rceil = \left\lfloor\frac{n + m - 1}{m}\right\rfloor\)&lt;/span&gt;，所以原式变为对 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\left\lfloor\frac{n+i-1}{i}\right\rfloor\)&lt;/span&gt; 求和。类似上面推导：&lt;span class=&#34;math inline&#34;&gt;\(k=\lfloor(n+l-1)/l\rfloor\)&lt;/span&gt;，然后 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 要满足 &lt;span class=&#34;math inline&#34;&gt;\(\lceil n / r\rceil = k\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(n\le kr\le n + r - 1\)&lt;/span&gt;，于是乎 &lt;span class=&#34;math inline&#34;&gt;\(r = \displaystyle\left\lfloor\frac{n - 1}{k - 1}\right\rfloor = \left\lfloor\frac{n - 1}{\left\lfloor\frac{n+l-1}{l}\right\rfloor - 1}\right\rfloor\)&lt;/span&gt;，记得最后一步特判，此时 &lt;span class=&#34;math inline&#34;&gt;\(k - 1 = 0\)&lt;/span&gt;，右边界为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;狄利克雷卷积&#34;&gt;狄利克雷卷积&lt;/h3&gt;
&lt;p&gt;定义两个数论函数 &lt;span class=&#34;math inline&#34;&gt;\(f(n),g(n)\)&lt;/span&gt; 的狄利克雷卷积 &lt;span class=&#34;math inline&#34;&gt;\((f*g)(n)\)&lt;/span&gt; 为 &lt;span class=&#34;math display&#34;&gt;\[
(f*g)(n) = \sum_{d\mid n}f(d)g\left(\frac nd\right)
\]&lt;/span&gt; 类比一下一般的加法卷积 &lt;span class=&#34;math inline&#34;&gt;\(c_k = \sum_{i}a_ib_{k - i}\)&lt;/span&gt;，我们可以发现狄利克雷卷积为&lt;strong&gt;关于乘法&lt;/strong&gt;的卷积。&lt;/p&gt;
&lt;p&gt;其具有如下常见性质：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;交换律：&lt;span class=&#34;math inline&#34;&gt;\(f*g = g*f\)&lt;/span&gt;，乘法满足交换律，得证。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结合律：&lt;span class=&#34;math inline&#34;&gt;\((f*g)*h=f*(g*h)\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{(ij)k = n}(f(i)g(j))h(k)=\sum_{i(jk) = n}f(i)(g(j)h(k))
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对加法的分配律：&lt;span class=&#34;math inline&#34;&gt;\((f+g)*h = f*h + g*h\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;(f(n) + g(n)) * h(n)\\
=&amp;amp;\sum_{d\mid n}(f(d) + d(d))h\left(\frac nd\right)\\
=&amp;amp;\sum_{d\mid n}f(d)h\left(\frac nd\right) + \sum_{d\in n}g(d)h\left(\frac nd\right)\\
=&amp;amp;f(n)*h(n) + g(n)*h(n)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与数乘的结合律：&lt;span class=&#34;math inline&#34;&gt;\((cf)*g = c(f*g)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;单位元&lt;/strong&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\epsilon * f = f\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\epsilon(n) = [n = 1]\)&lt;/span&gt;。即这个单位元函数当 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 时返回 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(n\not=1\)&lt;/span&gt; 时返回 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f * \epsilon &amp;amp;= \sum_{d\mid n} f(d)\epsilon\left(\frac nd\right)
\end{aligned}
\]&lt;/span&gt; 不难验证其正确性：只有当 &lt;span class=&#34;math inline&#34;&gt;\(d = n\)&lt;/span&gt; 时 &lt;span class=&#34;math inline&#34;&gt;\(\epsilon(n/d)\)&lt;/span&gt; 才等于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，只保留了 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt; 这一项。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;狄利克雷逆元：&lt;span class=&#34;math inline&#34;&gt;\(f^{-1}*f=\epsilon\)&lt;/span&gt;。考虑如何求这个逆元： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\epsilon &amp;amp;= f^{-1}*f\\
\epsilon &amp;amp;= \sum_{d\mid n}f^{-1}(d)f\left(\frac nd\right)\\
\epsilon(n) &amp;amp;= f^{-1}(n)f(1) + \sum_{d\mid n\land d &amp;lt; n} f^{-1}(d)f\left(\frac nd\right)\\
f^{-1}(n) &amp;amp;=\frac1{f(1)}\left(\epsilon(n) -  \sum_{d\mid n\land d &amp;lt; n} f^{-1}(d)f\left(\frac nd\right)\right)
\end{aligned}
\]&lt;/span&gt; 于是这个逆元就被求出来了。不难发现只要 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(f(1)\not=0\)&lt;/span&gt;，其就会具有逆元。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;莫比乌斯函数&#34;&gt;莫比乌斯函数&lt;/h3&gt;
&lt;p&gt;在这之前可能需要回顾一下之前讲过的几个数论函数，下面将不会重复提及。&lt;/p&gt;
&lt;p&gt;上面的 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n)\)&lt;/span&gt; 就是莫比乌斯函数。写得更清楚的定义为： &lt;span class=&#34;math display&#34;&gt;\[
\mu(n) = \begin{cases}
1&amp;amp;n = 1\\
0&amp;amp;n\text{ 含有平方因子}\\
(-1)^{\omega(n)}&amp;amp;\omega(n)\text{ 为 }n\text{ 的本质不同质因子个数}
\end{cases}
\]&lt;/span&gt; 同时其有一个等价的定义： &lt;span class=&#34;math display&#34;&gt;\[
\mu(n) = 1^{-1}(n)
\]&lt;/span&gt; 即，&lt;span class=&#34;math inline&#34;&gt;\(\mu(n)\)&lt;/span&gt; 为常函数 &lt;span class=&#34;math inline&#34;&gt;\(1(n)\)&lt;/span&gt; 的狄利克雷逆元。这就意味着 &lt;span class=&#34;math inline&#34;&gt;\(\mu*1 = \epsilon\)&lt;/span&gt;，所以 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d\mid n}\mu(d) = \epsilon(n) = [n = 1]
\]&lt;/span&gt; 有一个常见的反演结论是： &lt;span class=&#34;math display&#34;&gt;\[
[i\perp j] = [\gcd(i,j) = 1] = \sum_{d\mid\gcd(i,j)}\mu(d)
\]&lt;/span&gt; 这个意义应该是很好理解的，不赘述了。&lt;/p&gt;
&lt;p&gt;下面还有一个常见反演结论（欧拉反演）： &lt;span class=&#34;math display&#34;&gt;\[
\varphi * 1= \operatorname{id}
\]&lt;/span&gt; 证明：由于 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\)&lt;/span&gt; 为积性函数，所以我们只需证明 &lt;span class=&#34;math inline&#34;&gt;\(n = p^c\)&lt;/span&gt; 时其成立即可。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi * 1 &amp;amp;= \sum_{d\mid n}\varphi(d)\\
&amp;amp;= \sum_{i = 0}^c\varphi(p^i)\\
&amp;amp;= 1 + p^0(p - 1) + p^1(p -1) + \cdots + p^{c - 1}(p - 1)\\
&amp;amp;= p^c\\
&amp;amp;= \operatorname{id}
\end{aligned}
\]&lt;/span&gt; 另外，两边同时卷 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\varphi = \operatorname{id}*\mu = \sum_{d\mid n}d\mu\left(\frac nd\right)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的求法见下文线性筛部分。&lt;/p&gt;
&lt;h3 id=&#34;莫比乌斯反演公式&#34;&gt;莫比乌斯反演公式&lt;/h3&gt;
&lt;h4 id=&#34;基本形式-1&#34;&gt;基本形式&lt;/h4&gt;
&lt;p&gt;内容是，已知两数论函数 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{d\mid n}g(d)\iff g(n) = \sum_{d\mid n}\mu\left(\frac nd\right)f(d)
\]&lt;/span&gt; 这个公式被称为莫比乌斯反演公式（Möbius inversion formula），用狄利克雷卷积表示就是 &lt;span class=&#34;math display&#34;&gt;\[
f = g * 1\iff g = f * \mu
\]&lt;/span&gt; 写成狄利克雷卷积的形式就好证明了，直接左边卷上 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 就能得到右边。&lt;/p&gt;
&lt;h4 id=&#34;扩展形式&#34;&gt;扩展形式&lt;/h4&gt;
&lt;p&gt;乘积形式的： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \prod_{d\mid n}g(d) \iff g(n) = \prod f(d)^{\mu(\frac nd)},\forall n &amp;gt; 1
\]&lt;/span&gt; 证明：两边同时取对数： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\ln f(n) &amp;amp;= \sum_{d\mid n}\ln g(d)\\
\ln g(n) &amp;amp;= \sum_{d\mid n}\ln f(d)\mu\left(\frac nd\right)\\
g(n) &amp;amp;= \prod_{d\mid n}f(d)^{\mu(\frac nd)}
\end{aligned}
\]&lt;/span&gt; 倍数形式的： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{n\mid d}g(d)\iff g(n) = \sum_{n\mid d}\mu\left(\frac dn\right)f(d)
\]&lt;/span&gt; 证明： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{n\mid d}\mu\left(\frac dn\right)f(d)\\
=&amp;amp;\sum_{k= 1}^\infty\mu(k)f(kn) = \sum_{k = 1}^\infty\mu(k)\sum_{kn\mid d}g(d)\\
=&amp;amp;\sum_{n\mid d}g(d)\sum_{k\mid \frac{d}{n}}\mu(k)= \sum_{n\mid d}g(d)\epsilon\left(\frac dn\right)\\
=&amp;amp;g(n)
\end{aligned}
\]&lt;/span&gt; 将 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 表示成 &lt;span class=&#34;math inline&#34;&gt;\(kn\)&lt;/span&gt; 的形式，然后将左边的式子代入。之后交换枚举顺序变为枚举 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的倍数然后反求 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，最后发现就是 &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;莫比乌斯反演与容斥的关系&#34;&gt;莫比乌斯反演与容斥的关系&lt;/h3&gt;
&lt;p&gt;参考了论文哥的博客。&lt;/p&gt;
&lt;p&gt;首先根据算术基本定理，将一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 分解为 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{k_i}\)&lt;/span&gt; 的结构，然后对于一个数论函数 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;，定义其 zeta 变换 &lt;span class=&#34;math inline&#34;&gt;\(f\zeta\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
f\zeta(n) = \sum_{d\mid n}f(d)
\]&lt;/span&gt; 其实质是枚举了 &lt;span class=&#34;math inline&#34;&gt;\(k_i\)&lt;/span&gt; 表示中的每一维都不大于自己的数，相当于一个高维前缀和。（其实这个就是狄利克雷前缀和，&lt;a href=&#34;https://www.luogu.com.cn/problem/P5495&#34;&gt;P5495 Dirichlet 前缀和&lt;/a&gt;）求这个东西的时候可以像 FMT 一样，类似埃筛的 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后如何从高维前缀和还原成单点的值呢？考虑使用容斥原理，回顾一下高维前缀和的式子。需要枚举每一维相同或者小 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的数，以此决定容斥系数。定义 &lt;span class=&#34;math display&#34;&gt;\[
\mu(n) = \prod_{i = 1}^\infty (-1)^{[e_i = 1]}0^{[e_k &amp;gt; 1]}
\]&lt;/span&gt; 即：某一维为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 时，对函数值没有影响，某一维为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时，函数值乘上 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;，某一维大于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时，函数值为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。否则若 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 个质数的积，则 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = (-1)^c\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\mid n\)&lt;/span&gt;，用 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac nd\)&lt;/span&gt; 找到每一维的差，再用 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 找到对应的容斥系数，即： &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{d\mid n}\mu\left(\frac nd\right)f\zeta(d)
\]&lt;/span&gt; 把这个变换称为莫比乌斯变换，即 &lt;span class=&#34;math display&#34;&gt;\[
f\mu(n) = \sum_{d\mid n}\mu\left(\frac nd\right)f(d)
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(f\zeta\mu = f\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以本质上，莫比乌斯反演是一个容斥的过程。&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 充当着容斥系数这一角色。&lt;/p&gt;
&lt;h3 id=&#34;应用&#34;&gt;应用&lt;/h3&gt;
&lt;p&gt;下面放几个莫比乌斯反演的经典应用。假定 &lt;span class=&#34;math inline&#34;&gt;\(n\ge m\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;典例-0&#34;&gt;典例 0&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i =1 }^n\gcd(i,n) = \sum_{d\mid n}d\varphi(n/d)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P2303&#34;&gt;P2303 [SDOI2012] Longge 的问题&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里是一个比较常用的技巧：有很多的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,n)\)&lt;/span&gt; 都是一样的，我们枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d\mid n}d\sum_{i= 1}^n[\gcd(i, n)= d]\)&lt;/span&gt;，然后化为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,j) = 1\)&lt;/span&gt; 的形式：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d\mid n}d\sum_{i=1}^{n/d}[\gcd(i,n/d)=1]\)&lt;/span&gt;，注意到右边那个东西实际上就是 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n/d)\)&lt;/span&gt;，所以就化简完了。&lt;/p&gt;
&lt;h4 id=&#34;典例-1&#34;&gt;典例 1&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = k] = \sum_{d=1}^{\lfloor \frac nk\rfloor}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P3455&#34;&gt;P3455 [POI2007]ZAP-Queries&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简要推导：首先&lt;strong&gt;将其化为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, j) = 1\)&lt;/span&gt; 的形式&lt;/strong&gt;，得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}\sum_{d\mid\gcd(i,j)}\mu(d)\)&lt;/span&gt;，然后写成枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的形式：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}\sum_{d = 1}[d\mid\gcd(i,j)]\mu(d)\)&lt;/span&gt;，再调换一下求和顺序：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d=1}^{\min(n&amp;#39;,m&amp;#39;)}\mu(d)\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}[d\mid\gcd(i,j)]\)&lt;/span&gt;。最后的式子即要求 &lt;span class=&#34;math inline&#34;&gt;\(i,j\)&lt;/span&gt; 同为 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的倍数，所以最终得到答案。&lt;/p&gt;
&lt;h4 id=&#34;典例-2&#34;&gt;典例 2&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) \in P] = \sum_{T = 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T\land k\in P}\mu\left(\frac Tk\right)
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为质数集。对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P2257&#34;&gt;P2257 YY的GCD&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简要推导：首先枚举这个质数 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，然后像上一题一样化简可以得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{k\in P}\sum_{d=1}^{\lfloor \frac nk\rfloor}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor\)&lt;/span&gt;。现在仍然不够快，接下来&lt;strong&gt;巧妙换元令 &lt;span class=&#34;math inline&#34;&gt;\(T = kd\)&lt;/span&gt;&lt;/strong&gt;，然后调换枚举顺序改为枚举 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{T= 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T,k\in P}\mu\left(\frac Tk\right)\)&lt;/span&gt;。后者可以预处理，然后套整除分块即可。&lt;/p&gt;
&lt;h4 id=&#34;典例-3&#34;&gt;典例 3&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\operatorname{lcm}(i, j) = \sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)k^2\sum_{i = 1}^{\lfloor\frac{n}{kd}\rfloor}\sum_{j = 1}^{\lfloor\frac{m}{kd}\rfloor}ij
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对应例题&lt;a href=&#34;https://www.luogu.com.cn/problem/P1829&#34;&gt;P1829 [国家集训队]Crash的数字表格 / JZPTAB&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简要推导：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{\gcd(i, j)}\)&lt;/span&gt;，然后枚举 gcd，变成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^n\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{d}[\gcd(i,j) = d]\)&lt;/span&gt;，然后是经典反演，变成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^nd\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij\sum_{k\mid \gcd(i,j)}\mu(k)\)&lt;/span&gt;，再然后调换顺序枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij[k\mid i][k\mid j]\)&lt;/span&gt;，最后得到 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)k^2\sum_{i = 1}^{\lfloor\frac{n}{kd}\rfloor}\sum_{j = 1}^{\lfloor\frac{m}{kd}\rfloor}ij\)&lt;/span&gt;。这个东西的后半坨可以 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt;，然后就是套两层整除分块的事情了。&lt;/p&gt;
&lt;h4 id=&#34;典例-4&#34;&gt;典例 4&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{j=1}^m\sigma_0(ij) = \sum_{d=1}^n\mu(d)F(\lfloor n / d\rfloor)F(\lfloor m /d \rfloor)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;span class=&#34;math inline&#34;&gt;\(F(n) = \displaystyle\sum_{i=1}^n\left\lfloor\frac ni\right\rfloor = \sum_{i=1}^n\sigma_0(i)\)&lt;/span&gt;。推导：首先是一个经典结论，证明见下文： &lt;span class=&#34;math display&#34;&gt;\[
\sigma_0(xy) = \sum_{i\mid x}\sum_{j\mid y}[i\perp j]
\]&lt;/span&gt; 然后就可以开始反演了：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\sum_{j=1}^m\sigma_0(i,j) = \sum_{i=1}^n\sum_{j=1}^m\sum_{x\mid i}\sum_{y\mid j}[\gcd(x,y) = 1]\)&lt;/span&gt;，然后调换一下内外层求和顺序有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\sum_{j=1}^m[\gcd(i,j) = 1]\left\lfloor\frac ni\right\rfloor\left\lfloor \frac mj\right\rfloor\)&lt;/span&gt;。将 &lt;span class=&#34;math inline&#34;&gt;\([\gcd(i,j) = 1]\)&lt;/span&gt; 用 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 来化开之后变为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\sum_{j=1}^m\left\lfloor\frac ni\right\rfloor\left\lfloor \frac mj\right\rfloor\sum_{d\mid i,d\mid j}\mu(d)\)&lt;/span&gt;，再将 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 提到最外面就有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d=1}^n\mu(d)\left(\sum_{d\mid i, i\le n}\sum_{d\mid j,j\le m}\left\lfloor\frac ni\right\rfloor\left\lfloor \frac mj\right\rfloor\right)\)&lt;/span&gt;，里面直接再除以个 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 就有上面那个式子了。&lt;/p&gt;
&lt;p&gt;至于为什么 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\left\lfloor\frac ni\right\rfloor = \sum_{i=1}^n\sigma_0(i)\)&lt;/span&gt;，分析一下 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_0\)&lt;/span&gt; 是如何被贡献出来的即可。&lt;/p&gt;
&lt;h4 id=&#34;其余例题&#34;&gt;其余例题&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 1：&lt;a href=&#34;https://www.luogu.com.cn/problem/P1447&#34;&gt;P1447 [NOI2010] 能量采集&lt;/a&gt;：求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^n\sum_{j=1}^m(2\gcd(i,j) - 1)
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;显然将式子化简就变成 &lt;span class=&#34;math inline&#34;&gt;\(2\displaystyle\sum_{i=1}^n\sum_{j=1}^m\gcd(i,j)-nm\)&lt;/span&gt;。现在考虑 &lt;span class=&#34;math inline&#34;&gt;\(\sum_i\sum_j\gcd(i,j)\)&lt;/span&gt; 怎么求。考虑枚举之：&lt;span class=&#34;math inline&#34;&gt;\(\sum_{d}d\sum_i\sum_j[\gcd(i,j)=d]\)&lt;/span&gt;，发现后面就是上面的典例 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 干掉。但是其可以进一步优化。考虑答案式 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d=1}^nd\sum_{k=1}^{\lfloor n /d\rfloor}\mu(k)\lfloor n/kd\rfloor\lfloor m/kd\rfloor\)&lt;/span&gt;。用典例 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的换元，换得 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{T=1}^{n}\sum_{d\mid T}d\mu(T/d)\lfloor n / T\rfloor\lfloor m / T\rfloor\)&lt;/span&gt;，注意到前面的经典结论：&lt;span class=&#34;math inline&#34;&gt;\(\phi = \mu*\mathrm{id}\)&lt;/span&gt;，所以可以写成 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{T=1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor\phi(T)\)&lt;/span&gt;。这样就变成 &lt;span class=&#34;math inline&#34;&gt;\(O(n) - O(\sqrt n)\)&lt;/span&gt; 的了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：禁止查看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;禁止查看。&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3312&#34;&gt;洛谷 P3312 [SDOI2014]数表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(Q\le 2\times 10^4\)&lt;/span&gt; 次询问，给定 &lt;span class=&#34;math inline&#34;&gt;\(n,m\le 10^5,a\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\times[\sigma(\gcd(i,j)) \le a]\bmod 2^{31}
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨先忽略 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(\gcd(i,j)) \le a\)&lt;/span&gt; 的限制来化简式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{i = 1}^{\lfloor n/d\rfloor}\sum_{j = 1}^{\lfloor m / d\rfloor}\sum_{x\mid i\land x \mid j}\mu(x)\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{x = 1}^{\lfloor n / d\rfloor}\lfloor n / dx\rfloor\lfloor m/ dx\rfloor\mu(x)\\
=&amp;amp;\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor\sum_{d\mid T}\sigma(d)\mu(T/d)
\end{aligned}
\]&lt;/span&gt; 最后一步换了个元令 &lt;span class=&#34;math inline&#34;&gt;\(T = dx\)&lt;/span&gt;。若再考虑让 &lt;span class=&#34;math inline&#34;&gt;\(f(T) = \displaystyle\sum_{d\mid T}\sigma(d)\mu(T/d)\)&lt;/span&gt;，则要求的东西就被转化为了 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor f(T)
\]&lt;/span&gt; 然后注意到，&lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\)&lt;/span&gt; 能对 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 产生贡献当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\le a\)&lt;/span&gt;，那么不妨离线所有询问然后将询问按 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 排序，再将预处理好的 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\)&lt;/span&gt; 从小到大排序，用树状数组维护 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;，每次加 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\mu(T / d)\)&lt;/span&gt; 都会使得 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的倍数对应的 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 增加。对于每个询问直接整除分块。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q\sqrt n\log n + n \log^2 n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1139D&#34;&gt;CF1139D Steps to One&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定正整数 &lt;span class=&#34;math inline&#34;&gt;\(m\le 10^5\)&lt;/span&gt;，初始空数列，每次随机一个 &lt;span class=&#34;math inline&#34;&gt;\(1\sim m\)&lt;/span&gt; 的整数加在数列末尾，数列的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd = 1\)&lt;/span&gt; 时停止。问期望长度，对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不妨设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为当前数列 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 时，期望的剩余步数。则我们有朴素转移： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \frac 1m\sum_{j=1}^mf_{\gcd(j, i)} + 1
\]&lt;/span&gt; 边界条件为 &lt;span class=&#34;math inline&#34;&gt;\(f_1 = 0\)&lt;/span&gt;，答案即为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac 1m\sum f_i\)&lt;/span&gt;。需要注意特判 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,j) = i\)&lt;/span&gt; 的情况，解个方程后发现就是 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \frac{1 + \frac1m\sum_{j=1,i\not\mid j}^m f_{\gcd(i,j)}}{1 - \lfloor\frac{m}{i}\rfloor}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(O(m^2\log m)\)&lt;/span&gt; 显然有点寄，套路地枚举 &lt;span class=&#34;math inline&#34;&gt;\(g = \gcd(i,j)\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(c(i,g)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{x=1}^m[\gcd(x, i) = g]\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \frac{1 + \frac1m \sum_{g\mid i,g\ne i}f_gc(i,g)}{1 - \lfloor\frac mi\rfloor}
\]&lt;/span&gt; 现在推导 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
c(i,g) &amp;amp;= \sum_{x=1}^m[\gcd(x,i) = g]\\
&amp;amp;=\sum_{x&amp;#39; =1}^{\lfloor \frac mg\rfloor}[\gcd(x&amp;#39;, i/g) = 1]\\
&amp;amp;=\sum_{x&amp;#39;=1}^{\lfloor\frac mg\rfloor}\sum_{d\mid \gcd(x&amp;#39;, i / g)}\mu(d)\\
&amp;amp;=\sum_{d\mid \frac ig}\mu(d)\left\lfloor\frac{m}{gd} \right\rfloor
\end{aligned}
\]&lt;/span&gt; 于是求 &lt;span class=&#34;math inline&#34;&gt;\(c(i,g)\)&lt;/span&gt; 的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt{\frac ig})\)&lt;/span&gt;。设总时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(T(m)\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
T(m) = \sum_{i=2}^m\sum_{g\mid i}O\left(\sqrt{\frac ig}\right) = \sum_{i=2}^m\sum_{j\mid i}O(\sqrt j) \sim m\int_1^mj^{-0.5}\mathrm{d}j = O(m\sqrt m)
\]&lt;/span&gt; 但是这题还有另一种做法，即直接从期望开推： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E(n) &amp;amp;= \sum_{i\ge 1}P(i = n)\times i\\
&amp;amp;= \sum_{i\ge 1}P(i = n)\sum_{j=1}^i 1\\
&amp;amp;=\sum_{j\ge 1}\sum_{i\ge j}P(n = i)\\
&amp;amp;=\sum_{i\ge 1}P(n\ge i)\\
&amp;amp;= 1 + \sum_{i\ge1}P(n&amp;gt;i)
\end{aligned}
\]&lt;/span&gt; 求 &lt;span class=&#34;math inline&#34;&gt;\(P(n &amp;gt; i)\)&lt;/span&gt; 的时候考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd_{j=1}^{n}\{a_j\} = 1\)&lt;/span&gt; 的时候就会结束，简单容斥一下再反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
P(n&amp;gt;i) &amp;amp;= P\left(\gcd_{j=1}^i\{a_i\} &amp;gt;1\right)\\
&amp;amp;= 1 - P\left(\gcd_{j=1}^i\{a_i\} =1\right)\\
&amp;amp;= 1 - \frac{\sum_{d=1}^m\mu(d)\lfloor\frac md\rfloor^i}{m^i}\\
&amp;amp;= -\frac{\sum_{d=2}^m\mu(d)\lfloor\frac md\rfloor^i}{m^i}
\end{aligned}
\]&lt;/span&gt; 回代上面的式子，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E(n) &amp;amp;= 1 + \sum_{i\ge 1} P(n &amp;gt; i)\\
&amp;amp;= 1 - \sum_{i\ge 1}\frac{\sum_{d=2}^m\mu(d)\lfloor\frac md\rfloor^i}{m^i}\\
&amp;amp;= 1 - \sum_{i\ge 1}\frac{1}{m^i}\sum_{d=2}^m\mu(d)\left\lfloor\frac md\right\rfloor^i\\
&amp;amp;= 1 - \sum_{d=2}^m\mu(d)\sum_{i\ge 1}\left(\frac{\lfloor\frac md\rfloor}{m}\right)^i&amp;amp;\text{recall the formula }x + x^2+\cdots=\frac{x}{1-x}\\
&amp;amp;= 1 - \sum_{d=2}^m\mu(d)\frac{\lfloor\frac md\rfloor}{m - \lfloor\frac md\rfloor}
\end{aligned}
\]&lt;/span&gt; 可以 &lt;span class=&#34;math inline&#34;&gt;\(O(m)\)&lt;/span&gt;，但也可以上杜教做到 &lt;span class=&#34;math inline&#34;&gt;\(O(m^{2/3})\)&lt;/span&gt; 但没必要。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1559E&#34;&gt;CF1559E Mocha and Stars&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求满足如下条件的序列 &lt;span class=&#34;math inline&#34;&gt;\((a_1, a_2, \cdots , a_n)\)&lt;/span&gt; 的数量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, n], a_i\in[l_i, r_i]\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum a_i\le m\)&lt;/span&gt;；&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(a_1, a_2, \cdots, a_n) = 1\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 50\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le 10^5\)&lt;/span&gt;，答案对 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，发现其为一个背包。令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 为前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个物品，背包容量为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的方案数，则有转移方程： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \sum_{k = l_i}^{r_i}f_{i - 1, j - k}
\]&lt;/span&gt; 这样直接去做是 &lt;span class=&#34;math inline&#34;&gt;\(O(nm^2)\)&lt;/span&gt; 的，发现转移可以使用前缀和优化，具体设 &lt;span class=&#34;math inline&#34;&gt;\(s_{i, j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math display&#34;&gt;\[
s_{i, j} = \sum_{k = 0}^jf_{i, k}
\]&lt;/span&gt; 然后就有了转移方程 &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = s_{i - 1, j - l_i} - s_{i - 1, j - r_i - 1}
\]&lt;/span&gt; 背包部分的复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt;。接下来考虑 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的限制，对于这种多个的情况一样可以考虑反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}[\gcd(a_1,\cdots,a_n)=1]\left[\sum_{i = 1}^na_i\le m\right]\\
=&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d \mid \gcd(a_1,\cdots,a_n)}\mu(d)\\ =&amp;amp;\sum_{a_1=l_1}^{r_1}\sum_{a_2=l_2}^{r_2}\cdots\sum_{a_n=l_n}^{r_n}\left[\sum_{i = 1}^na_i\le m\right]\sum_{d\mid a_1,\cdots,d \mid a_n}\mu(d)\\
=&amp;amp;\sum_{d=1}^m\mu(d)\sum_{a_1=\lceil\frac{l_1}{d}\rceil}^{\lfloor\frac{r_1}{d}\rfloor}\sum_{a_2=\lceil\frac{l_2}{d}\rceil}^{\lfloor\frac{r_2}{d}\rfloor}\cdots\sum_{a_n=\lceil\frac{l_n}{d}\rceil}^{\lfloor\frac{r_n}{d}\rfloor}\left[\sum_{i = 1}^na_i\le \left\lfloor\frac m d\right\rfloor\right]
\end{aligned}
\]&lt;/span&gt; 然后枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\in[1, m]\)&lt;/span&gt;，发现其就是个子问题，&lt;span class=&#34;math inline&#34;&gt;\(O(nm\log m)\)&lt;/span&gt; 解决。对于 &lt;span class=&#34;math inline&#34;&gt;\(\mu(d) = 0\)&lt;/span&gt; 的情况跳过还可以加速。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P6271&#34;&gt;P6271 [湖北省队互测2014]一个人的数论&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(f_m(n)\)&lt;/span&gt; 为所有小于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 且与 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 互素的正整数的 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 次方之和。给定 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的值和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的质因数分解式，求 &lt;span class=&#34;math inline&#34;&gt;\(f_m(n)\bmod 10^9 + 7\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math display&#34;&gt;\[
n = \prod_{i = 1}^{w}p_i^{\alpha_i}
\]&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(1\le w \le 1000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(2\le p_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le \alpha_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le m \le 100\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一道非常牛逼的题。首先明确要求的内容为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i=1}^{n-1}i^m[\gcd(i, n) = 1]
\]&lt;/span&gt; 然后直接开始反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{i=1}^{n-1}i^m[\gcd(i, n) = 1] &amp;amp;= \sum_{i=1}^{n}i^m[\gcd(i, n) = 1]\\
&amp;amp;=\sum_{i=1}^ni^m\sum_{d\mid \gcd(i,n)}\mu(d)\\
&amp;amp;=\sum_{d\mid n}\mu(d)\sum_{i=1}^{\frac nd}(id)^m\\
&amp;amp;=\sum_{d\mid n}\mu(d)d^m\sum_{i=1}^{\frac nd} i^m
\end{aligned}
\]&lt;/span&gt; 然后似乎就化不动了。。但是注意到式子里有形如 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \displaystyle\sum_{i=1}^n i^m\)&lt;/span&gt;，即自然数幂之和，其必然为关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(m + 1\)&lt;/span&gt; 次多项式，因为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 很小所以可以暴力将 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = \displaystyle\sum_{i=0}^{m+1}f_ix^i\)&lt;/span&gt; 的系数消元出来。然后回代一下式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{d\mid n}\mu(d)d^m\sum_{i=1}^{\lfloor\frac nd\rfloor} i^m\\
=&amp;amp;\sum_{d\mid n}\mu(d)d^m\sum_{i=1}^{m+1}f_i\left(\frac nd\right)^{i}\\
=&amp;amp;\sum_{i=1}^{m+1}f_i\sum_{d\mid n}\mu(d)d^m\left(\frac nd\right)^{i}
\end{aligned}
\]&lt;/span&gt; 发现后面那坨是积性函数的卷积，所以可以对于所有的 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{\alpha_i}\)&lt;/span&gt; 求一遍然后乘起来，现在考虑怎么快速求之。&lt;/p&gt;
&lt;p&gt;注意到有个东西叫 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;，所以会产生贡献的只有 &lt;span class=&#34;math inline&#34;&gt;\(d = 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(d = p_i\)&lt;/span&gt; 的情况，所以要算的实际就是 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{\alpha_ii} - p_i^{m + \alpha_ii - i}\)&lt;/span&gt;。问题解决了，时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m^3 + m(m + w))\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;常见结论方法&#34;&gt;常见结论/方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;写代码的时候注意 &lt;code&gt;long long&lt;/code&gt; 和取模的问题，很容易出岔子。&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;化简式子的时候可以将无关变量提前： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^nf(n)\sum_{j = 1}^mk\times g(n) = \sum_{i = 1}^nf(n)k\sum_{j = 1}^mg(n)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交换枚举顺序： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^nf(n)\sum_{d\mid i}g(d) = \sum_{d = 1}^ng(d)\sum_{i = 1}^{\lfloor\frac nd\rfloor}f(id)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尝试构造 &lt;span class=&#34;math inline&#34;&gt;\(\epsilon = [n = 1]\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^mf(\gcd(i, j))\\
=&amp;amp;\sum_{d = 1}^n\sum_{i = 1}^n\sum_{j = 1}^mf(d)[\gcd(i,j) = d]\\
=&amp;amp;\sum_{d = 1}^nf(d)\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = d]
\end{aligned}
\]&lt;/span&gt; 之后就懒得写了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}(i,j) = \dfrac{ij}{\gcd(i,j)}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;过于平凡，不写。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;巧妙换元减少枚举数量： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{P(k)}\sum_{d = 1}^{\lfloor \frac nk\rfloor}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor = \sum_{T = 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T, P(k)}\mu\left(\frac Tk\right)
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除数函数的重要性质: &lt;span class=&#34;math display&#34;&gt;\[
d(xy) = \sum_{i\mid x}\sum_{j\mid y}[\gcd(i,j) = 1]
\]&lt;/span&gt; 证明：考虑一一映射每个因子。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(k\mid xy\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 中有因子 &lt;span class=&#34;math inline&#34;&gt;\(p^c\)&lt;/span&gt;，我们强行规定先取 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 中的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，除非不够，再去取 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 中的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。这样子，如若我们要求 &lt;span class=&#34;math inline&#34;&gt;\(i\perp j\)&lt;/span&gt;，则每个因子 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 都唯一对应一个 &lt;span class=&#34;math inline&#34;&gt;\((i, j)\)&lt;/span&gt;。命题得证。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于一般的除数函数 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k\)&lt;/span&gt;，上述性质仍然可以扩展： &lt;span class=&#34;math display&#34;&gt;\[
\sigma_k(xy) = \sum_{i\mid x}\sum_{j\mid y}\left(\frac{x}{i}\right)^kj^k[\gcd(i,j) = 1]
\]&lt;/span&gt; 证明依旧考虑上面的思路。可能写成这样会更好理解： &lt;span class=&#34;math display&#34;&gt;\[
\sigma_k(xy) = \sum_{i\mid x}\sum_{j\mid y}i^kj^k[\gcd(x / i, j) =1]
\]&lt;/span&gt; 然后换一下 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(x / i\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;欧拉函数的某性质： &lt;span class=&#34;math display&#34;&gt;\[
\varphi(ab) = \varphi(a)\varphi(b)\frac{\gcd(a,b)}{\varphi(\gcd(a,b))}
\]&lt;/span&gt; 证明：考虑唯一分解定理。对于某质因数 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，若他在 &lt;span class=&#34;math inline&#34;&gt;\(a,b\)&lt;/span&gt; 中都出现了，则 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(a)\varphi(b)\)&lt;/span&gt; 把两个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 变成了 &lt;span class=&#34;math inline&#34;&gt;\(p - 1\)&lt;/span&gt;，乘上一个 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{\gcd(a,b)}{\varphi(\gcd(a,b))}\)&lt;/span&gt; 可以将其修正过来。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;筛法&#34;&gt;筛法&lt;/h2&gt;
&lt;h3 id=&#34;埃筛&#34;&gt;埃筛&lt;/h3&gt;
&lt;p&gt;通过“&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 是合数，则 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的倍数也是合数”来减少标记次数，即只标记所有素数的倍数。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; Eratosthenes() {&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    isp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = isp[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= N; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) {&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prime[++totp] = i;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * i * i &amp;lt;= N)&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i * i; j &amp;lt;= N; j += i)&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    isp[j] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log\log n)\)&lt;/span&gt;，没有什么弔用，复杂度分析略（因为不会），唯一用处是可以拿来分析 Dirichlet 前缀和的复杂度。&lt;/p&gt;
&lt;h3 id=&#34;线性筛&#34;&gt;线性筛&lt;/h3&gt;
&lt;p&gt;又名欧拉筛，可以以线性的时间复杂度筛出给定值域内的素数。上文已经提到了如何用欧拉筛筛素数，但是欧拉筛的强大之处在于，其利用的&lt;strong&gt;每个合数被最小质因子筛去&lt;/strong&gt;性质使得它可以同时求出积性函数的值。&lt;/p&gt;
&lt;h4 id=&#34;欧拉函数莫比乌斯函数&#34;&gt;欧拉函数/莫比乌斯函数&lt;/h4&gt;
&lt;p&gt;首先再次强调：&lt;strong&gt;每个合数 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 会被其最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 筛去&lt;/strong&gt;，下面令 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39; = n / p\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 必然互质，此时有 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = \varphi(n&amp;#39;)\times \varphi(p) = (p - 1)\varphi(n&amp;#39;)\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;否则对于 &lt;span class=&#34;math inline&#34;&gt;\(p\mid n&amp;#39;\)&lt;/span&gt; 的情况，&lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 必然包含 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的所有质因子，拆开 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(n)\)&lt;/span&gt; 的表达式有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\varphi(n) &amp;amp;= n\times \prod \frac{p_i - 1}{p_i}\\
&amp;amp;= p\times n&amp;#39;\times \prod\frac{p_i - 1}{p_i}\\
&amp;amp;= p\times \varphi(n&amp;#39;)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么事情就变得明朗了，对于质数，&lt;span class=&#34;math inline&#34;&gt;\(\varphi(n) = n - 1\)&lt;/span&gt;，对于合数，在筛的过程中按照上面的公式求就可以了。注意边界 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(1) = 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    phi[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i] = i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                phi[i * p[j]] = p[j] * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            phi[i * p[j]] = (p[j] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * phi[i];&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;p&gt;而于莫比乌斯函数，则相对更好考虑。还是令 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39; = n / p\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的最小质因子。&lt;/p&gt;
&lt;p&gt;对于质数，&lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = -1\)&lt;/span&gt;，对于合数，按照上面的方式分类讨论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(n&amp;#39;\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 一定互质，&lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = -\mu(n&amp;#39;)\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;否则 &lt;span class=&#34;math inline&#34;&gt;\(p\mid n&amp;#39;\)&lt;/span&gt;，这说明 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 里面至少有一个平方因子（&lt;span class=&#34;math inline&#34;&gt;\(p^2\)&lt;/span&gt;），所以 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n) = 0\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还是注意边界，&lt;span class=&#34;math inline&#34;&gt;\(\mu(1) = 1\)&lt;/span&gt;，记不住的话考虑积性函数的性质。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= N; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i]) {&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prime[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * prime[j] &amp;lt;= N; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * prime[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % prime[j]) mu[i * prime[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;del&gt;当然一般是最后要做前缀和的，这个另说吧。&lt;/del&gt;&lt;/p&gt;
&lt;h4 id=&#34;除数函数&#34;&gt;除数函数&lt;/h4&gt;
&lt;p&gt;首先，若将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 唯一分解：&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle n = \prod_{i=1}^sp_i^{\alpha_i}\)&lt;/span&gt;，则有 &lt;span class=&#34;math inline&#34;&gt;\(d(n) = \displaystyle\prod_{i=1}^s(1 + \alpha_i)\)&lt;/span&gt;。其组合意义为：每个质因子选不大于 &lt;span class=&#34;math inline&#34;&gt;\(\alpha_i\)&lt;/span&gt; 个出来，其一定为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的因数。&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 会被最小质因子 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 筛去，所以还需要对每个数额外维护其最小质因子的幂次 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于质数，&lt;span class=&#34;math inline&#34;&gt;\(d(n) = 2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(n) = 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt;，根据 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的积性，有 &lt;span class=&#34;math inline&#34;&gt;\(d(n) = 2d(n&amp;#39;)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(n) = 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;否则，根据上面的公式有 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle d(n) = \frac{d(n&amp;#39;)}{1 + f(n&amp;#39;)} \times(2 + f(n’))\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f(n) = f(n&amp;#39;) + 1\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;对于 &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;，有如下公式：&lt;span class=&#34;math inline&#34;&gt;\(\sigma(n) = \displaystyle\prod_{i=1}^s\sum_{j=0}^{\alpha_i}p_i^j\)&lt;/span&gt;。组合意义为：考虑每个质因子里面选不同的次数出来组合成这 &lt;span class=&#34;math inline&#34;&gt;\(d(n)\)&lt;/span&gt; 个因数。&lt;/p&gt;
&lt;p&gt;类似的，需要维护最小质因子的各次幂之和 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于质数，&lt;span class=&#34;math inline&#34;&gt;\(\sigma(n) = g(n) = 1 + n\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(p\not\mid n&amp;#39;\)&lt;/span&gt;，根据 &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt; 的积性有 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(n) = (p + 1)\sigma(n&amp;#39;)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g(n) = 1 + p\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;否则，根据上面的公式有 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = pg(n&amp;#39;) + 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle \sigma(n) = \frac{\sigma(n&amp;#39;)}{g(n&amp;#39;)}\times g(n)\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码就不放了，感受了上面的过程之后遇到题目可以自己推导。&lt;/p&gt;
&lt;p&gt;而对于一般的 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k\)&lt;/span&gt;，一样有公式 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k(n) = \displaystyle\prod_{i=1}^s\sum_{j=0}^{\alpha_i} p_i^{jk}\)&lt;/span&gt;。同样维护一下 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h4 id=&#34;幂函数&#34;&gt;幂函数&lt;/h4&gt;
&lt;p&gt;当然，直接 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 求幂函数也是可以的，但是某些时候时限可能会卡的很紧。&lt;/p&gt;
&lt;p&gt;根据 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{id}_k\)&lt;/span&gt; 的完全积性，对于质数处的点值快速幂一下，其他情况直接乘起来就没问题了。&lt;/p&gt;
&lt;h3 id=&#34;杜教筛&#34;&gt;杜教筛&lt;/h3&gt;
&lt;p&gt;杜教筛可以在&lt;strong&gt;低于线性&lt;/strong&gt;的时间复杂度内求出一类&lt;strong&gt;积性函数&lt;/strong&gt;的前缀和。&lt;/p&gt;
&lt;p&gt;前置知识：上文莫比乌斯反演部分，积性函数部分。&lt;/p&gt;
&lt;h4 id=&#34;算法流程&#34;&gt;算法流程&lt;/h4&gt;
&lt;p&gt;是一种类似&lt;em&gt;硬构造&lt;/em&gt;的感觉。令我们要求的积性函数为 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;，其前缀和为 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在想办法构造一个 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt; 关于 &lt;span class=&#34;math inline&#34;&gt;\(S\left(\left\lfloor\dfrac ni\right\rfloor\right)\)&lt;/span&gt; 的递推式，不妨让 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 卷上另一个积性函数 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 然后考虑其前缀和： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i=1}^n (f*g)(i)\\
=&amp;amp;\sum_{i=1}^n\sum_{d\mid i}g(d)f\left(\frac id\right)\\
=&amp;amp;\sum_{d=1}^ng(d)\sum_{i=1}^{\lfloor\frac nd\rfloor}f(i)\\
=&amp;amp;\sum_{d=1}^ng(d)S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\end{aligned}
\]&lt;/span&gt; 第三行是交换枚举顺序然后提出了 &lt;span class=&#34;math inline&#34;&gt;\(g(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后将 &lt;span class=&#34;math inline&#34;&gt;\(g(1)S(n)\)&lt;/span&gt; 移项一下就得到了杜教筛的核心式子： &lt;span class=&#34;math display&#34;&gt;\[
g(1)S(n) = \sum_{i=1}^n(f*g)(i) - \sum_{d=2}^ng(d)S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt; 如果能快速算出 &lt;span class=&#34;math inline&#34;&gt;\((f*g)(n)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt; 的前缀和的话，就意味着上面的式子可以快速递归计算。见下面伪代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll getSum(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (hash[n]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; hash[n]; &lt;span class=&#34;co&#34;&gt;// 记忆化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = f_g_sum(n); &lt;span class=&#34;co&#34;&gt;// 求 (f*g)(i) 的前缀和&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) { &lt;span class=&#34;co&#34;&gt;// 整除分块&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n, n / (n / l));&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret -= (&lt;span class=&#34;va&#34;&gt;g_sum&lt;/span&gt;(r) - &lt;span class=&#34;va&#34;&gt;g_sum&lt;/span&gt;(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * getSum(n / l);&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于网上关于杜教筛复杂度的证明有各种说法，所以此处先咕着。总之一般而言，杜教筛时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{0.75})\)&lt;/span&gt;，若用线性筛提前处理好前 &lt;span class=&#34;math inline&#34;&gt;\(n^{2/3}\)&lt;/span&gt; 项的话复杂度则降低为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{2/3})\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;常见模型&#34;&gt;常见模型&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发现 &lt;span class=&#34;math inline&#34;&gt;\(\varphi * \boldsymbol 1 = \mathrm{id}\)&lt;/span&gt;，所以取 &lt;span class=&#34;math inline&#34;&gt;\(f = \varphi\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g = 1\)&lt;/span&gt;，然后就可以很容易杜教筛辣： &lt;span class=&#34;math display&#34;&gt;\[
S(n) = \frac{n(n+1)}{2} - \sum_{d=2}^n S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;会发现 &lt;span class=&#34;math inline&#34;&gt;\(\mu * \boldsymbol 1 = \varepsilon\)&lt;/span&gt;，所以取 &lt;span class=&#34;math inline&#34;&gt;\(f = \mu\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g = \boldsymbol 1\)&lt;/span&gt;，然后： &lt;span class=&#34;math display&#34;&gt;\[
S(n) = 1 - \sum_{d=2}^nS\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(2.5\)&lt;/span&gt;：求 &lt;span class=&#34;math inline&#34;&gt;\(\sum\limits_{i=1}^n[2\not\mid i]\mu(i)\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即奇数位置上的和。设其为 &lt;span class=&#34;math inline&#34;&gt;\(T(n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的前缀和为 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt;。考虑用 &lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt; 减去偶数位置上 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的和，至于偶数位置上 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的和，考虑若其只有一个 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 因子，那么 &lt;span class=&#34;math inline&#34;&gt;\(/2\)&lt;/span&gt; 之后其必然是奇数，而若有多个 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 的因子的话，显然我们可以不管，于是这部分贡献就是 &lt;span class=&#34;math inline&#34;&gt;\(-T(\lfloor n / 2\rfloor)\)&lt;/span&gt;。所以 &lt;span class=&#34;math display&#34;&gt;\[
T(n) = S(n) + T(\lfloor n / 2\rfloor)
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k\)&lt;/span&gt;，即除数函数，定义见上文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k = \boldsymbol 1 * \mathrm{id}_k\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(\sigma_k * \mu = \mathrm{id}_k\)&lt;/span&gt;，然后： &lt;span class=&#34;math display&#34;&gt;\[
S(n) = \sum_{i=1}^n\mathrm{id}_k(i) - \sum_{d=2}^n\mu(d)S\left(\left\lfloor\dfrac nd\right\rfloor\right)
\]&lt;/span&gt; 顺便需要筛出 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt;：&lt;span class=&#34;math inline&#34;&gt;\(\mu\cdot \mathrm{id}_k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\cdot \mathrm{id}_k\)&lt;/span&gt;。点乘型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;构造 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的时候让 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 来一个 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{id}_k\)&lt;/span&gt; 卷掉即可。具体地： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(\mu\cdot \mathrm{id}_k)* \mathrm{id}_k &amp;amp;= \sum_{d\mid n}\mu(d)d^k\left(\frac nd\right)^k\\
&amp;amp;= n^k\sum_{d\mid n}\mu(d)\\
&amp;amp;= \varepsilon
\end{aligned}
\]&lt;/span&gt; 至于欧拉，则有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(\varphi \cdot \mathrm{id}_k) * \mathrm{id}_k &amp;amp;= \sum_{d\mid n}\varphi(d)d^k\left(\frac nd\right)^k\\
&amp;amp;= n^k\sum_{d\mid n}\varphi(d)\\
&amp;amp;= \mathrm{id}^{k + 1}
\end{aligned}
\]&lt;/span&gt; 然后杜教筛的过程略。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;note：常见的 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{id}_k\)&lt;/span&gt; 前缀和：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\mathrm{id}(i) = \frac{n(n+1)}{2}\)&lt;/span&gt;，这个应该是较常规的等差数列求和。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\mathrm{id}_2(i) = \frac{n(n+1)(2n+1)}{6}\)&lt;/span&gt;，证明可以考虑数归。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i=1}^n\mathrm{id}_3(i) = \left[\frac{n(n+1)}{2}\right]^2\)&lt;/span&gt;，证明同样考虑数归。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，由于 &lt;span class=&#34;math inline&#34;&gt;\((\sum \mathrm{id}_k)(n)\)&lt;/span&gt; 是关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(k+ 1\)&lt;/span&gt; 次多项式（经典结论），故当 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 不大时可以考虑将系数插出来然后 &lt;span class=&#34;math inline&#34;&gt;\(O(k)\)&lt;/span&gt; 单次求值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的几个式子建议牢记，可以省去自己推的麻烦。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模型 &lt;span class=&#34;math inline&#34;&gt;\(6\)&lt;/span&gt;：筛 &lt;span class=&#34;math inline&#34;&gt;\(\mu^2\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应该是比较神仙的构造 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 函数了。&lt;/p&gt;
&lt;p&gt;此处取 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = [n = k^2, k\in \mathbb{N}_+]\)&lt;/span&gt;。虽然 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 的前缀和看似不好求，但是我们对于&lt;strong&gt;这种真值表达式的函数，可以改变枚举的策略使得其恒成立，变为常数函数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\((f*g)(n) = \displaystyle\sum_{d\mid n}g(d)f(n / d)\)&lt;/span&gt;，观察发现 &lt;span class=&#34;math inline&#34;&gt;\(g(d)f(n / d)\)&lt;/span&gt; 仅在 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 取到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的最大平方因子时为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，否则为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。因为若 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 不为最大平方因子，则 &lt;span class=&#34;math inline&#34;&gt;\(n / d\)&lt;/span&gt; 肯定含平方因子，&lt;span class=&#34;math inline&#34;&gt;\(\mu^2(n / d) = 0\)&lt;/span&gt;。否则 &lt;span class=&#34;math inline&#34;&gt;\(n / d\)&lt;/span&gt; 一定不含平方因子，&lt;span class=&#34;math inline&#34;&gt;\(f(n / d) = g(d) = 1\)&lt;/span&gt;。所以 &lt;span class=&#34;math inline&#34;&gt;\(f*g = \boldsymbol 1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;套回杜教筛的式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
S(n) &amp;amp;= \sum_{i=1}^n (f*g)(i) - \sum_{d=2}^ng(d)S\left(\left\lfloor\frac nd\right\rfloor \right)\\
&amp;amp;= n - \sum_{d=2}^{\lfloor \sqrt n\rfloor} S\left(\left\lfloor\frac{n}{d^2}\right\rfloor \right)
\end{aligned}
\]&lt;/span&gt; 没法整除分块，所以可能复杂度危。&lt;/p&gt;
&lt;p&gt;但其实还有另一种方法：我们考虑容斥。&lt;span class=&#34;math inline&#34;&gt;\(S(n)\)&lt;/span&gt; 可以看作 总数 - 一个平方数的倍数 + 两个平方数的倍数 - …..，发现容斥系数就是 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;，所以 &lt;span class=&#34;math inline&#34;&gt;\(S(n) = \displaystyle\sum_{i=1}^{\lfloor \sqrt n\rfloor}\mu(i)\lfloor n / i^2\rfloor\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;另有小结论 &lt;span class=&#34;math inline&#34;&gt;\(\mu^2(n) = \displaystyle\sum_{d^2\mid n}\mu(d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;应用-1&#34;&gt;应用&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4213&#34;&gt;P4213 【模板】杜教筛（Sum）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\le 10\)&lt;/span&gt; 组询问，一次询问查询 &lt;span class=&#34;math inline&#34;&gt;\(\varphi\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的前缀和，&lt;span class=&#34;math inline&#34;&gt;\(n&amp;lt; 2^{31}\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要看下代码怎么写的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;unordered_map&amp;lt;ll, ll&amp;gt; Mu, Phi;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll mu[maxn], phi[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; vis[maxn], p[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init() {&lt;span class=&#34;co&#34;&gt;// 线性筛 mu 和 phi 在 1e7 处前缀和的过程省略}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll getSumPhi(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt;= maxn)&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; phi[n];&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (Phi[n])&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Phi[n];&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = (ll)(n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (ll)n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;; &lt;span class=&#34;co&#34;&gt;// id 的前缀和&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans -= (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt;) * getSumPhi(n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Phi[n] = ans; &lt;span class=&#34;co&#34;&gt;// 记忆化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll getSumMu(ll n) {&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt;= maxn)&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; mu[n];&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (Mu[n])&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Mu[n];&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;co&#34;&gt;// epsilon 的前缀和就是 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (ll l = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-30&#34;&gt;&lt;a href=&#34;#cb7-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans -= (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt;) * getSumMu(n / l);&lt;/span&gt;
&lt;span id=&#34;cb7-31&#34;&gt;&lt;a href=&#34;#cb7-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-32&#34;&gt;&lt;a href=&#34;#cb7-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Mu[n] = ans; &lt;span class=&#34;co&#34;&gt;// 记忆化&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-33&#34;&gt;&lt;a href=&#34;#cb7-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt;：&lt;a href=&#34;https://loj.ac/p/6491&#34;&gt;LOJ#6491. 「XXOI 2018」简单的最大公约数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ABC162E - Sum of gcd of Tuples (Hard) 的加强：给定 &lt;span class=&#34;math inline&#34;&gt;\(1\le N, K\le 10^{11}\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{a_1 = 1}^K\sum_{a_2 = 1}^K\cdots\sum_{a_N = 1}^K\gcd_{i = 1}^N\{a_i\}\bmod {10^9 + 7}
\]&lt;/span&gt; 答案对 &lt;span class=&#34;math inline&#34;&gt;\(2^{64}\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先考虑反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{a_1 = 1}^K\sum_{a_2 = 1}^K\cdots\sum_{a_N = 1}^K\gcd_{i = 1}^N\{a_i\}\\
=&amp;amp;\sum_{a_1 = 1}^K\cdots\sum_{a_N = 1}^K\sum_{d\mid a_1,\cdots d\mid a_N}\varphi(d)\\
=&amp;amp;\sum_{d = 1}^K\varphi(d)\sum_{a_1 = 1}^K\cdots\sum_{a_N = 1}^K[d\mid \gcd\{a_i\}]\\
=&amp;amp;\sum_{d = 1}^K\varphi(d)\left\lfloor\frac Kd\right\rfloor^N
\end{aligned}
\]&lt;/span&gt; 然后就可以整除分块 + 杜教筛了，时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^{2/3})\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例题 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt;：&lt;a href=&#34;https://www.luogu.com.cn/problem/P3768&#34;&gt;P3768 简单的数学题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\le 10^{10}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(5\times 10^8\le p\le 1.1\times 10^9\)&lt;/span&gt;，保证 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 为质数，求 &lt;span class=&#34;math display&#34;&gt;\[
\left(\sum_{i=1}^n\sum_{j=1}^nij\gcd(i,j) \right)\bmod p
\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先显然先欧拉反演： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sum_{i=1}^n\sum_{j=1}^nij\gcd(i,j) &amp;amp;= \sum_{i=1}^n\sum_{j=1}^nij\sum_{d\mid \gcd(i,j)}\varphi(d)\\
&amp;amp;= \sum_{d=1}^n\varphi(d)\sum_{i=1}^n[d\mid i]i\sum_{j=1}^n[d\mid j]j\\
&amp;amp;= \sum_{d=1}^n\varphi(d)d^2 \left( \frac{(1 + \lfloor n / d\rfloor)\lfloor n / d\rfloor}{2}\right)^2
\end{aligned}
\]&lt;/span&gt; 发现后面那坨式子可以整除分块，而 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(d)d^2\)&lt;/span&gt; 就是上面讲的 &lt;span class=&#34;math inline&#34;&gt;\(\varphi \cdot \mathrm{id}_k\)&lt;/span&gt; 类型，直接做即可。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年8月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-08/</link>
        <pubDate>Mon, 02 Aug 2021 01:02:45 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-08/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg61.webp" alt="Featured image of post 2021年8月 OI学习记录" /&gt;&lt;p&gt;password procted.&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;20041031&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;7.28 - 8.13 ZROI 强度好大/kk&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;多项式全家桶&lt;/li&gt;
&lt;li&gt;奇怪的操作&lt;/li&gt;
&lt;li&gt;FWT&lt;/li&gt;
&lt;li&gt;高维前缀和&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/08/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GYM102501I Rats&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A 题，直接做&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GYM102500I Inverted Deck&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;M 题，复制一遍，排序，直接判&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GYM102536L Break the Pattern!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;F 题，&lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 去重后暴力卷出一个 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 次多项式，然后每次乘个系数就可以了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GYM102501J Counting Trees&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每次找到一个区间的最小元素然后卡特兰数统计贡献再递归分治。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1549&#34;&gt;Codeforces Round #736 (Div. 2)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3301&#34;&gt;P3301 [SDOI2013]方程&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;容斥 + 扩展 Lucas&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/08/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeforces.com/contest/1548/problem/C&#34;&gt;CF1548C The Three Little Pigs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;补题，奇怪的组合数计算。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7429&#34;&gt;P7429 [THUPC2017] 气氛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;奇怪的&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p7429/&#34;&gt;行列式&lt;/a&gt;题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/08/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2633&#34;&gt;P2633 Count on a tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;树上主席树 + 树上差分&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3302&#34;&gt;P3302 [SDOI2013]森林&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3302/&#34;&gt;启发式合并 + 主席树&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2839&#34;&gt;P2839 [国家集训队]middle&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2839/&#34;&gt;主席树的巧妙应用&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/08/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ZROI 模拟赛 Day 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A，rk&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://hydro.ac/d/bzoj/p/2564&#34;&gt;BZOJ#2564. 集合的面积&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;闵可夫斯基和模板。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/08/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ZROI 模拟赛 Day 2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;爆零&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6669&#34;&gt;P6669 [清华集训2016] 组合数问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;卢卡斯定理 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 进制意义下的那个神奇式子，然后直接数位 dp。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1778&#34;&gt;51nod1778 小Q的集合&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-51nod1778/&#34;&gt;Lucas 定理&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/08/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ZROI 模拟赛 Day 3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;100 + 30 + 42 T3 赛后 AC。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/08/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4717&#34;&gt;P4717 【模板】快速莫比乌斯/沃尔什变换 (FMT/FWT)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FWT 模板，输出量大到日爆我快读了。。。下次要估输出量上界了。。。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/08/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4726&#34;&gt;P4726 【模板】多项式指数函数（多项式 exp）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;牛迭跑多项式 exp。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5245&#34;&gt;P5245 【模板】多项式快速幂&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;取个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，乘上 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，然后 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 回去。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5273&#34;&gt;P5273 【模板】多项式幂函数 (加强版)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;平移一下即可，&lt;code&gt;modint&lt;/code&gt; 类被卡常了。。。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/08/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5205&#34;&gt;&lt;strong&gt;P5205&lt;/strong&gt; 【模板】多项式开根&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;多项式开根。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF741C&#34;&gt;&lt;strong&gt;CF741C&lt;/strong&gt; Arpa’s overnight party and Mehrdad’s silent entering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比赛的 T1 原题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/08/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4512&#34;&gt;P4512 【模板】多项式除法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;多项式带余除法&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5264&#34;&gt;P5264 多项式三角函数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;多项式三角函数&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5265&#34;&gt;P5265 多项式反三角函数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先求导后积分。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4389&#34;&gt;P4389 付公主的背包&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推式子然后多项式 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5488&#34;&gt;P5488 差分与前缀和&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以用大常数的多项式快速幂做，也可以二项式定理分析&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5488/&#34;&gt;生成函数的性质&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/08/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6091&#34;&gt;P6091 【模板】原根&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;原根。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;P5491 【模板】二次剩余&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二次剩余。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5277&#34;&gt;P5277 【模板】多项式开根（加强版）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修锅。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/150&#34;&gt;LOJ#150. 挑战多项式&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;检验板子正确性。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/08/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4245&#34;&gt;P4245 【模板】任意模数多项式乘法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆系数进行 MTT。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4239&#34;&gt;P4239 任意模数多项式乘法逆&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;检验 MTT 正确性。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/08/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5050&#34;&gt;P5050 【模板】多项式多点求值&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;多点求值模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5158&#34;&gt;P5158 【模板】多项式快速插值&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;快速插值模板。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF438E&#34;&gt;CF438E The Child and Binary Tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf438e/&#34;&gt;生成函数&lt;/a&gt;优化 DP。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/08/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4451&#34;&gt;P4451 [国家集训队]整数的lqp拆分&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4451/&#34;&gt;生成函数&lt;/a&gt;推式子&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/08/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5641&#34;&gt;P5641 【CSGRound2】开拓者的卓识&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑每个 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的贡献，搞出组合意义后 &lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5641/&#34;&gt;NTT&lt;/a&gt; 优化卷积。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/08/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7113&#34;&gt;P7113 [NOIP2020] 排水系统&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;补题&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/T184057&#34;&gt;T184057 Mobius&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-t184057/&#34;&gt;莫比乌斯反演&lt;/a&gt;好题。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/08/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4723&#34;&gt;P4723 【模板】常系数齐次线性递推&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;常系数齐次线性递推。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/08/19-21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;冲文化课作业&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/08/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ARC125&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-19&#34;&gt;21/08/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/arc125/tasks/arc125_d&#34;&gt;ARC125D - Unique Subsequence&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;补题，BIT 优化简单 DP。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-20&#34;&gt;21/08/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3934&#34;&gt;P3934 [Ynoi2016] 炸脖龙 I&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;欧拉降幂，用树状数组实现区间加单点查，然后只考虑 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 往后的一小段。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3747&#34;&gt;P3747 [六省联考 2017] 相逢是问候&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;欧拉降幂。暴力修改叶子节点，需要光速幂，记得欧拉定理的分类讨论。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Codeforces Round #740 (Div. 2, based on VK Cup 2021 - Final (Engine))&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A + B + C + D1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-21&#34;&gt;21/08/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1559D2&#34;&gt;CF1559D2 Mocha and Diana (Hard Version)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces/&#34;&gt;并查集 + 贪心&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1559E&#34;&gt;CF1559E Mocha and Stars&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-codeforces&#34;&gt;莫比乌斯反演 + 背包&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc212/tasks/abc212_g&#34;&gt;ABC212G - Power Pair&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;原根 + 化简式子（&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;合并重复贡献&lt;/a&gt;）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-22&#34;&gt;21/08/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P7848&#34;&gt;P7848 「dWoi R2」FFT / 狒狒贴&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DFT 的本质是乘上范德蒙矩阵，考虑 &lt;span class=&#34;math inline&#34;&gt;\(M^2\)&lt;/span&gt; 的性质相当于就是乘上 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; 再翻转后面 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 位，故所有乘上 &lt;span class=&#34;math inline&#34;&gt;\((n^2)^{\lfloor k / 4\rfloor}\)&lt;/span&gt; 再做 &lt;span class=&#34;math inline&#34;&gt;\(k\bmod 4\)&lt;/span&gt; 次 DFT。&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p7848&#34;&gt;此处&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc212/tasks/abc212_h&#34;&gt;ABC212H - Nim Counting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FWT + &lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;生成函数&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-23&#34;&gt;21/08/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF449D&#34;&gt;CF449D Jzzhu and Numbers&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生成函数的位运算卷积，考虑到每个多项式只有两项不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，发掘其性质然后 &lt;a href=&#34;https://oi.imyangty.com/sol-cf449d/&#34;&gt;FWT&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-24&#34;&gt;21/08/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/165&#34;&gt;LOJ#165. 拉格朗日插值&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重心拉格朗日插值法。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/AT4168&#34;&gt;[ARC100C] Or Plus Max&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;维护高维前缀最大值和次大值，然后取最大前缀答案。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-25&#34;&gt;21/08/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ABC213H - Stroll&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/summary-atcoder/&#34;&gt;分治 NTT&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF165E&#34;&gt;CF165E Compatible Numbers&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先对 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 做高维前缀和，然后查询时对于每个 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 取反查询子集即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-26&#34;&gt;21/08/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1208F&#34;&gt;CF1208F Bits And Pieces&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先处理出超集的最右边两个下标，然后按位从高到低贪心选择即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6442&#34;&gt;P6442 [COCI2011-2012#6] KOŠARE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所有位取反变成按位与为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的方案数。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{msk}\)&lt;/span&gt; 为状态为 &lt;span class=&#34;math inline&#34;&gt;\(msk\)&lt;/span&gt; 的超集的箱子数量，不难发现方案数为 &lt;span class=&#34;math inline&#34;&gt;\(2^{f_{msk}} - 1\)&lt;/span&gt;。统计答案的时候使用容斥，当 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{popcount}(msk)\)&lt;/span&gt; 为奇数时贡献为负。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP2829&#34;&gt;SP2829 TLE - Time Limit Exceeded&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单高维前缀和。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF383E&#34;&gt;CF383E Vowels&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要求的是 &lt;span class=&#34;math inline&#34;&gt;\(S \land a_i\)&lt;/span&gt; 不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 数量，转化为求为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 数量后直接高维前缀和取反查询即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA1194&#34;&gt;UVA1194 Machine Schedule&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二分图最小点覆盖。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3355&#34;&gt;P3355 骑士共存问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二分图最大独立集。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1962&#34;&gt;P1962 斐波那契数列&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;矩阵快速幂。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1306&#34;&gt;P1306 斐波那契公约数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(F_n, F_m) = F_{\gcd(n, m)}\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2774&#34;&gt;P2774 方格取数问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二分图 + 最小割。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>正睿 OI 暑高端峰会补题日记</title>
        <link>https://oi.imyangty.com/note-zroi202107/</link>
        <pubDate>Wed, 28 Jul 2021 18:49:34 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-zroi202107/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg29.webp" alt="Featured image of post 正睿 OI 暑高端峰会补题日记" /&gt;&lt;p&gt;密码：ACM password 5&lt;/p&gt;
&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;点击验证&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;clbnb&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;p&gt;加粗了的题目较为重要，先补。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;R&lt;/th&gt;
&lt;th&gt;出题人&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;review&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;yjz&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;yjz&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;袁浩天&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;袁浩天&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;csl&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;csl&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;xtq&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;xtq&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;lk&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;lk&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;day-1-dp&#34;&gt;Day 1 dp&lt;/h2&gt;
&lt;h3 id=&#34;例题&#34;&gt;例题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf1238e/&#34;&gt;Sol.&lt;/a&gt;】【状压】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1238E&#34;&gt;CF1238E Keyboard Purchase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【数位】&lt;a href=&#34;https://www.luogu.com.cn/problem/P7609&#34;&gt;P7609 [THUPC2021] 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望】&lt;a href=&#34;https://codeforces.com/gym/101623/problem/E&#34;&gt;NWERC 2017 E - English Restaurant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf1237f/&#34;&gt;Sol.&lt;/a&gt;】【计数】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1237F&#34;&gt;CF1237F Balanced Domino Placements&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【计数】&lt;a href=&#34;https://atcoder.jp/contests/arc112/tasks/arc112_e&#34;&gt;ARC112E - Cigar Box&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-uva1322/&#34;&gt;Sol.&lt;/a&gt;】【DS优化】&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA1322&#34;&gt;UVA1322 优化最大值电路 Minimizing Maximizer&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【DS优化】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=6856&#34;&gt;HDU6856 Breaking Down News&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【倍增】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1322D&#34;&gt;CF1322D Reality Show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【决策单调性】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=6065&#34;&gt;HDU6065 RXD, tree and sequence&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望 + 四边形不等式】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=6065&#34;&gt;AOJ2591 Speedrun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;习题&#34;&gt;习题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1106E&#34;&gt;CF1106E Lunar New Year and Red Envelopes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5492&#34;&gt;P5492 [PKUWC2018]随机算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://atcoder.jp/contests/dp/tasks/dp_y&#34;&gt;ATC DP Y - Grid 2&lt;/a&gt; &lt;a href=&#34;https://www.luogu.com.cn/problem/AT4546&#34;&gt;洛谷&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://atcoder.jp/contests/dp/tasks/dp_w&#34;&gt;ATC DP W - Intervals&lt;/a&gt; &lt;a href=&#34;https://www.luogu.com.cn/problem/AT4544&#34;&gt;洛谷&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Unknown】&lt;a href=&#34;https://www.luogu.com.cn/problem/P2612&#34;&gt;P2612 [ZJOI2012]波浪&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-2-字符串&#34;&gt;Day 2 字符串&lt;/h2&gt;
&lt;h3 id=&#34;例题-1&#34;&gt;例题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【&lt;strong&gt;Done&lt;/strong&gt;】【最小表示法】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=2609&#34;&gt;HDU2609 How many&lt;/a&gt; 找出最小表示后去重计数即可&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【Manacher】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4287&#34;&gt;P4287 [SHOI2011]双倍回文&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5446/&#34;&gt;Sol.&lt;/a&gt;】【Manacher】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5446&#34;&gt;P5446 [THUPC2018]绿绿和串串&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Z 算法】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5334&#34;&gt;P5334 [JSOI2019]节日庆典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Z 算法】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1466G&#34;&gt;CF1466G Song of the Sirens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf696d/&#34;&gt;Sol.&lt;/a&gt;】【ACAM】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF696D&#34;&gt;CF696D Legen…&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SA 和 SAM 的题不打算补了。。。要慢慢学&lt;/p&gt;
&lt;h2 id=&#34;day-3-数论&#34;&gt;Day 3 数论&lt;/h2&gt;
&lt;h3 id=&#34;例题-2&#34;&gt;例题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;【Done】【类欧】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5170&#34;&gt;P5170 【模板】类欧几里得算法&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【素数】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4718&#34;&gt;P4718 【模板】Pollard-Rho算法&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-cf338d/&#34;&gt;Sol.&lt;/a&gt;】【CRT】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF338D&#34;&gt;CF338D GCD Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【原根】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6091&#34;&gt;P6091 【模板】原根&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3321/&#34;&gt;Sol.&lt;/a&gt;】【原根、FFT】&lt;a href=&#34;https://www.luogu.com.cn/problem/P3321&#34;&gt;P3321 [SDOI2015]序列统计&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Stern-Brocot】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/2852&#34;&gt;BZOJ#2852. 强大的区间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【Stern-Brocot】&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1517&#34;&gt;51nod 1517 递推、平方根与误差&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【Lucas】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6669&#34;&gt;P6669 [清华集训2016] 组合数问题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-51nod1778/&#34;&gt;Sol.&lt;/a&gt;】【Lucas】&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1778&#34;&gt;51nod 1778 小Q的集合&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-hdu4944/&#34;&gt;Sol.&lt;/a&gt;】【莫反】&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=4944&#34;&gt;hdu 4944 FSF’s game&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-bzoj3601/&#34;&gt;Sol.&lt;/a&gt;】【莫反】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3601&#34;&gt;BZOJ #3601. 一个人的数论&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【莫反】&lt;a href=&#34;https://uoj.ac/problem/62&#34;&gt;UOJ#62. 【UR #5】怎样跑得更快&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Done】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5495&#34;&gt;P5495 Dirichlet 前缀和&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;习题-1&#34;&gt;习题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;【Todo】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3853&#34;&gt;BZOJ#3853. GCD Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】&lt;a href=&#34;https://www.luogu.com.cn/problem/SP20173&#34;&gt;SP20173 DIVCNT2 - Counting Divisors (square)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】&lt;a href=&#34;http://www.51nod.com/Challenge/Problem.html#problemId=1986&#34;&gt;51nod 1986 Jason曾不想做的数论题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/2142&#34;&gt;BZOJ#2142. 礼物&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-4-数学&#34;&gt;Day 4 数学&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;【Done】【逆阵】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4783&#34;&gt;P4783 【模板】矩阵求逆&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Done】【高消】&lt;a href=&#34;https://www.luogu.com.cn/problem/P2455&#34;&gt;P2455 [SDOI2006]线性方程组&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【高消】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF446D&#34;&gt;CF446D DZY Loves Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p7429/&#34;&gt;Sol.&lt;/a&gt;】【行列式】&lt;a href=&#34;https://www.luogu.com.cn/problem/P7429&#34;&gt;P7429 [THUPC2017] 气氛&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【LGV】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6657&#34;&gt;P6657 【模板】LGV 引理&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【LGV】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF348D&#34;&gt;CF348D Turtles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【LGV】&lt;a href=&#34;https://www.luogu.com.cn/problem/P7736&#34;&gt;P7736 [NOI2021] 路径交点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【BEST】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5807&#34;&gt;P5807 Which Dreamed It /【模板】BEST 定理&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【BEST】&lt;a href=&#34;https://uoj.ac/problem/226&#34;&gt;UOJ#226. 【UR #15】奥林匹克环城马拉松&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/P4007&#34;&gt;P4007 小 Y 和恐怖的奴隶主&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6899&#34;&gt;P6899 [ICPC2014 WF]Pachinko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF963E&#34;&gt;CF963E Circles of Waiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF923E&#34;&gt;CF923E Perpetual Subtraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-12305&#34;&gt;TopCoder 12305 Orienteering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【期望】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-14156&#34;&gt;TopCoder 14156 RandomWalkOnGrid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【组合】&lt;a href=&#34;https://www.luogu.com.cn/problem/AT2705&#34;&gt;AGC019F Yes or No&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【组合】&lt;a href=&#34;https://www.luogu.com.cn/problem/AT1983&#34;&gt;AGC001E BBQ Hard&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3301/&#34;&gt;Sol.&lt;/a&gt;】【容斥】&lt;a href=&#34;https://www.luogu.com.cn/problem/P3301&#34;&gt;P3301 [SDOI2013]方程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【组合】&lt;a href=&#34;https://vjudge.net/problem/TopCoder-14170&#34;&gt;TopCoder 14170 DivFree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p6076/&#34;&gt;Sol.&lt;/a&gt;】【容斥】&lt;a href=&#34;https://www.luogu.com.cn/problem/P6076&#34;&gt;P6076 [JSOI2015]染色问题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【容斥】&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3782&#34;&gt;BZOJ#3782. 上学路线&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【组合】&lt;a href=&#34;https://www.luogu.com.cn/problem/P2159&#34;&gt;P2159 [SHOI2009]舞会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Todo】【minmax】&lt;a href=&#34;https://www.luogu.com.cn/problem/P5643&#34;&gt;P5643 [PKUWC2018]随机游走&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【minmax】&lt;a href=&#34;https://www.luogu.com.cn/problem/P3349&#34;&gt;P3349 [ZJOI2016]小星星&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【Todo】【minmax】&lt;a href=&#34;https://www.luogu.com.cn/problem/CF53E&#34;&gt;CF53E Dead Ends&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;day-5-acm&#34;&gt;Day 5 ACM&lt;/h2&gt;
&lt;h3 id=&#34;donea-gym102501i-rats&#34;&gt;【Done】A GYM102501I Rats&lt;/h3&gt;
&lt;p&gt;SB 题&lt;/p&gt;
&lt;h3 id=&#34;b-gym102483f-fastest-speedrun&#34;&gt;B GYM102483F Fastest Speedrun&lt;/h3&gt;
&lt;p&gt;理解题意。&lt;/p&gt;
&lt;p&gt;化为图论来做，将捷径通关的关系化为基环森林&lt;/p&gt;
&lt;h3 id=&#34;c-gym102576k-to-argue-or-not-to-argue&#34;&gt;C GYM102576K To argue, or not to argue&lt;/h3&gt;
&lt;p&gt;容斥一下，然后使用轮廓线 dp。&lt;/p&gt;
&lt;h3 id=&#34;d-gym102483d-date-pickup&#34;&gt;D GYM102483D Date Pickup&lt;/h3&gt;
&lt;p&gt;二分答案&lt;/p&gt;
&lt;h3 id=&#34;e-gym102536m-thin-ice&#34;&gt;E GYM102536M Thin Ice&lt;/h3&gt;
&lt;p&gt;大力分类讨论&lt;/p&gt;
&lt;p&gt;奇偶分类讨论，构造方案&lt;/p&gt;
&lt;h3 id=&#34;donef-gym102536l-break-the-pattern&#34;&gt;【Done】F GYM102536L Break the Pattern!&lt;/h3&gt;
&lt;p&gt;题意：求 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个次数最高为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的多项式，满足 &lt;span class=&#34;math inline&#34;&gt;\(s_1,\cdots,s_l\)&lt;/span&gt; 均为其根。&lt;/p&gt;
&lt;p&gt;去重 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 之后直接暴力卷积卷出一个 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 次多项式，然后乘上常数 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 输出即可。&lt;/p&gt;
&lt;h3 id=&#34;doneg-gym102501j-counting-trees&#34;&gt;【Done】G GYM102501J Counting Trees&lt;/h3&gt;
&lt;p&gt;比较有意思的题。&lt;/p&gt;
&lt;p&gt;题意：给定一棵二叉树的点权的中序遍历，问有多少种满足条件的二叉树。条件为父亲的点权小于等于儿子的点权。&lt;/p&gt;
&lt;p&gt;首先注意到可以递归分治。&lt;/p&gt;
&lt;p&gt;在处理 &lt;span class=&#34;math inline&#34;&gt;\([l, r]\)&lt;/span&gt; 的时候可以找到所有的最小元素 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;，然后考虑对于只含 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的所有二叉树，剩下的区间都是只有唯一的位置插入的，所以可以继续分治下去。含 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的所有二叉树的数量即为卡特兰数，可以直接做。&lt;/p&gt;
&lt;h3 id=&#34;h-gym101385g-power-sum-graphs&#34;&gt;H GYM101385G Power Sum Graphs&lt;/h3&gt;
&lt;p&gt;阅读理解，每条边代表一个条件表示一个数小于另一个数。&lt;/p&gt;
&lt;p&gt;拓扑排序然后直接构造。有环表示不合法。&lt;/p&gt;
&lt;h3 id=&#34;i-gym102501k-birdwatching&#34;&gt;I GYM102501K Birdwatching&lt;/h3&gt;
&lt;p&gt;阅读理解题，反向建图。&lt;/p&gt;
&lt;h3 id=&#34;j-gym102576e-contamination&#34;&gt;J GYM102576E Contamination&lt;/h3&gt;
&lt;p&gt;询问离线，然后扫描线。&lt;/p&gt;
&lt;h3 id=&#34;k-gym102984a-mango&#34;&gt;K GYM102984A Mango&lt;/h3&gt;
&lt;h3 id=&#34;l-gym102984b-koosagas-problem&#34;&gt;L GYM102984B Koosaga’s Problem&lt;/h3&gt;
&lt;p&gt;基本环，随机&lt;/p&gt;
&lt;p&gt;较重要&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;就是用异或和来求有没有某条边或者某两条边被每个奇环全部覆盖且不会影响到偶环&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;donem-gym102500i-inverted-deck&#34;&gt;【Done】M GYM102500I Inverted Deck&lt;/h3&gt;
&lt;p&gt;问能否将一个序列的一段翻转以使序列单调非减。&lt;/p&gt;
&lt;p&gt;直接复制一份，排序，直接从两边找反转端点。&lt;/p&gt;
&lt;h2 id=&#34;day-6-杂题&#34;&gt;Day 6 杂题&lt;/h2&gt;
&lt;h3 id=&#34;loj3036.-joisc-2019-day3指定城市&#34;&gt;LOJ#3036. 「JOISC 2019 Day3」指定城市&lt;/h3&gt;
&lt;p&gt;考虑确定一个点为根之后的情况，发现就是将所有的长链排个序。&lt;/p&gt;
&lt;p&gt;选 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个点的方案包含选 $k -1 $ 个点的方案&lt;/p&gt;
&lt;h3 id=&#34;loj3037.-joisc-2019-day3开关游戏&#34;&gt;LOJ#3037. 「JOISC 2019 Day3」开关游戏&lt;/h3&gt;
&lt;p&gt;考虑 dp，若证明一个位置最多被操作两次，便可以直接暴力 dp。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, k}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，第一次操作为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，第二次操作为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的答案。直接暴力转移。&lt;/p&gt;
&lt;p&gt;考虑证明：&lt;/p&gt;
&lt;h3 id=&#34;loj3038.-joisc-2019-day3穿越时空-bitaro&#34;&gt;LOJ#3038. 「JOISC 2019 Day3」穿越时空 Bitaro&lt;/h3&gt;
&lt;p&gt;线段树维护每个区间信息，直接查询&lt;/p&gt;
&lt;h3 id=&#34;loj3033.-joisc-2019-day2两个天线&#34;&gt;LOJ#3033. 「JOISC 2019 Day2」两个天线&lt;/h3&gt;
&lt;p&gt;先考虑 &lt;span class=&#34;math inline&#34;&gt;\(l = 1, r = n\)&lt;/span&gt; 的情况。线段树上加 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 扫 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;正解主席树。&lt;/p&gt;
&lt;h3 id=&#34;loj3034.-joisc-2019-day2两道料理&#34;&gt;LOJ#3034. 「JOISC 2019 Day2」两道料理&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(nm)\)&lt;/span&gt; 的 dp trivial。&lt;/p&gt;
&lt;p&gt;线段树优化 dp，对于一列的 dp 值用线段树来维护。&lt;/p&gt;
&lt;h3 id=&#34;loj2399.-joisc-2017-day-4绑架-2&#34;&gt;LOJ#2399. 「JOISC 2017 Day 4」绑架 2&lt;/h3&gt;
&lt;p&gt;走的道路权值单调不降。注意到走的时候只能往两个方向走一个区间的位置，可以进行 dp。&lt;/p&gt;
&lt;p&gt;复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q(h + w))\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;loj2392.-joisc-2017-day-1烟花棒&#34;&gt;LOJ#2392. 「JOISC 2017 Day 1」烟花棒&lt;/h3&gt;
&lt;p&gt;神奇的二分答案 + 贪心&lt;/p&gt;
&lt;h3 id=&#34;loj2737.-joisc-2016-day-3电报&#34;&gt;LOJ#2737. 「JOISC 2016 Day 3」电报&lt;/h3&gt;
&lt;p&gt;显然要构造一个环。&lt;/p&gt;
&lt;p&gt;把我们要删的边删掉，剩下的显然为链。&lt;/p&gt;
&lt;p&gt;在基环树上面 dp，划分为若干条链然后要求链尾的权值和最小。&lt;/p&gt;
&lt;h3 id=&#34;loj2736.-joisc-2016-day-3回转寿司&#34;&gt;LOJ#2736. 「JOISC 2016 Day 3」回转寿司&lt;/h3&gt;
&lt;p&gt;分块。先考虑 &lt;span class=&#34;math inline&#34;&gt;\([1, n]\)&lt;/span&gt; 的情况，不难发现我们只关心数字的集合，对于整块可以维护一个堆进行类似处理，而对于散块则需要暴力重构。复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q\sqrt n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;loj3523.-ioi2021分糖果&#34;&gt;LOJ#3523. 「IOI2021」分糖果&lt;/h3&gt;
&lt;p&gt;考虑上面那题类似的想法。&lt;/p&gt;
&lt;p&gt;对于散块，每次需要找到前缀最小值/最大值的位置，当前缀最大值和最小值的差小于等于 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 的时候就会停下来&lt;/p&gt;
&lt;h3 id=&#34;loj2882.-joisc-2014-day4两个人的星座&#34;&gt;LOJ#2882. 「JOISC 2014 Day4」两个人的星座&lt;/h3&gt;
&lt;p&gt;考虑枚举两个点，连一条线 &lt;span class=&#34;math inline&#34;&gt;\(AA&amp;#39;\)&lt;/span&gt;，在 &lt;span class=&#34;math inline&#34;&gt;\(AA&amp;#39;\)&lt;/span&gt; 的一侧找 &lt;span class=&#34;math inline&#34;&gt;\(\triangle ABC\)&lt;/span&gt;，另一侧找 &lt;span class=&#34;math inline&#34;&gt;\(\triangle A&amp;#39;B&amp;#39;C&amp;#39;\)&lt;/span&gt;，一定会是合法的。而且这样子每对合法三角形都会被统计两次。&lt;/p&gt;
&lt;p&gt;枚举点对，然后用极角排序维护方案。&lt;/p&gt;
&lt;h3 id=&#34;loj2393.-joisc-2017-day-2门票安排&#34;&gt;LOJ#2393. 「JOISC 2017 Day 2」门票安排&lt;/h3&gt;
&lt;p&gt;神仙贪心？咕咕咕&lt;/p&gt;
&lt;h2 id=&#34;day-7-ds&#34;&gt;Day 7 DS&lt;/h2&gt;
&lt;p&gt;呜呜，全部不会。&lt;/p&gt;
&lt;h3 id=&#34;p3642-apio2016烟火表演&#34;&gt;P3642 [APIO2016]烟火表演&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_{i,j} = \sum_{v\in S(i)}\min_{x\le j}\{f_{v, j - x} + |x - w_{i,j}|\}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(|x - w_{i,j}|\)&lt;/span&gt; 是下凸的，大胆猜想 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 为凸函数。&lt;/p&gt;
&lt;p&gt;用可并堆维护&lt;/p&gt;
&lt;h3 id=&#34;hdu6800-play-osu-on-your-tablet&#34;&gt;HDU6800 Play osu! on Your Tablet&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; dp 较 trivial&lt;/p&gt;
&lt;h3 id=&#34;p5163-wd与地图&#34;&gt;P5163 WD与地图&lt;/h3&gt;
&lt;p&gt;难点在于如何维护 SCC。&lt;/p&gt;
&lt;p&gt;整体二分&lt;/p&gt;
&lt;h3 id=&#34;p4690-ynoi2016-镜中的昆虫&#34;&gt;P4690 [Ynoi2016] 镜中的昆虫&lt;/h3&gt;
&lt;p&gt;树套树二维数点，需要维护奇怪的信息。合并连续段&lt;/p&gt;
&lt;h3 id=&#34;bzoj3779-重组病毒&#34;&gt;BZOJ3779 重组病毒&lt;/h3&gt;
&lt;p&gt;LCT。P3703&lt;/p&gt;
&lt;h3 id=&#34;uoj228.-基础数据结构练习题&#34;&gt;UOJ#228. 基础数据结构练习题&lt;/h3&gt;
&lt;p&gt;神奇的势能分析 + 线段树&lt;/p&gt;
&lt;h3 id=&#34;p5073-ynoi2015-世上最幸福的女孩&#34;&gt;P5073 [Ynoi2015] 世上最幸福的女孩&lt;/h3&gt;
&lt;p&gt;线段树 + 凸包 + 闵可夫斯基和&lt;/p&gt;
&lt;h3 id=&#34;donep3302-sdoi2013森林&#34;&gt;【Done】P3302 [SDOI2013]森林&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3302/&#34;&gt;solution&lt;/a&gt;启发式合并+主席树。先补P2633 Count on a tree（done）&lt;/p&gt;
&lt;h3 id=&#34;p4602-ctsc2018混合果汁&#34;&gt;P4602 [CTSC2018]混合果汁&lt;/h3&gt;
&lt;p&gt;主席树 + 二分贪心&lt;/p&gt;
&lt;h3 id=&#34;p6765-apio2020交换城市&#34;&gt;P6765 [APIO2020]交换城市&lt;/h3&gt;
&lt;p&gt;二分答案。加入所有的长度 &amp;lt;= 当前答案的边。 考虑一对点可行当且仅当它们在一个连通块里，且该连通块有环或者包含一个度数 &amp;gt;=3 的点&lt;/p&gt;
&lt;p&gt;用并查集维护连通块内度数最小和最大的点&lt;/p&gt;
&lt;p&gt;或者使用 Kruskal 重构树&lt;/p&gt;
&lt;h3 id=&#34;donep2839-国家集训队middle&#34;&gt;【Done】P2839 [国家集训队]middle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2839/&#34;&gt;Sol&lt;/a&gt;。区间中位数有令为 &lt;span class=&#34;math inline&#34;&gt;\(-1, 0, 1\)&lt;/span&gt; 的套路。主席树。&lt;/p&gt;
&lt;h3 id=&#34;hdu5756-boss-bo&#34;&gt;HDU5756 Boss Bo&lt;/h3&gt;
&lt;p&gt;好点在 dfs 序上最多 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 个连续的区间&lt;/p&gt;
&lt;p&gt;主席树维护。&lt;/p&gt;
&lt;h2 id=&#34;day-8-模拟赛-1&#34;&gt;Day 8 模拟赛 1&lt;/h2&gt;
&lt;h3 id=&#34;a&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;玄学向外扩展&lt;/p&gt;
&lt;h3 id=&#34;b&#34;&gt;B&lt;/h3&gt;
&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;
&lt;p&gt;给定一 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点构成的网格状四连通块，起初全是白色，要求涂黑最少数量的点，然后能通过下面的操作使得所有点被染黑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若田字格中有三个黑色，则第四个会自动变成黑色。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能要构造方案。&lt;/p&gt;
&lt;h4 id=&#34;solution&#34;&gt;Solution&lt;/h4&gt;
&lt;p&gt;答案为 &lt;span class=&#34;math inline&#34;&gt;\(C / 2 + 1\)&lt;/span&gt;，方案不难构造。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Point {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y, id;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;&amp;lt;(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Point &amp;amp;b) &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x == b.x ? y &amp;lt; b.y : x &amp;lt; b.x;}&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} p[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;map&amp;lt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; exist;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define mp&lt;/span&gt;(x,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;y)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;make_pair(x,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;y)&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(type);&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(p[i].x), read(p[i].y), exist[mp(p[i].x, p[i].y)] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p[i].id = i;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(p + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (exist[mp(p[i].x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p[i].y)] &amp;amp;&amp;amp; exist[mp(p[i].x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p[i].y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] &amp;amp;&amp;amp; exist[mp(p[i].x, p[i].y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)]);&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; ans.push_back(p[i].id);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans.size()), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (type) &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; i : ans) print(i), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;c&#34;&gt;C&lt;/h3&gt;
&lt;h4 id=&#34;description-1&#34;&gt;Description&lt;/h4&gt;
&lt;h4 id=&#34;solution-1&#34;&gt;Solution&lt;/h4&gt;
&lt;h2 id=&#34;day-9-模拟赛2&#34;&gt;Day 9 模拟赛2&lt;/h2&gt;
&lt;h3 id=&#34;a-1&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;BC都不会，不补了。&lt;/p&gt;
&lt;h2 id=&#34;day-10-模拟赛3&#34;&gt;Day 10 模拟赛3&lt;/h2&gt;
&lt;h3 id=&#34;a-2&#34;&gt;A&lt;/h3&gt;
&lt;p&gt;傻逼结论题&lt;/p&gt;
&lt;p&gt;考虑一个 &lt;span class=&#34;math inline&#34;&gt;\(t = 2\)&lt;/span&gt; 的情况。&lt;/p&gt;
&lt;p&gt;我们就是要求 &lt;span class=&#34;math inline&#34;&gt;\(x_1 + Dx_2\ge W_0\)&lt;/span&gt; 而且要最小化 &lt;span class=&#34;math inline&#34;&gt;\(x_1^2 + x_2^2\)&lt;/span&gt;。左边那个东西很像线性规划，所以我们在坐标系里面画出来这个可行域。然后既然要最小化 &lt;span class=&#34;math inline&#34;&gt;\(x_1^2 + x_2^2\)&lt;/span&gt;，并且这条直线的斜率小于 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;，那么就是点到直线的距离公式，答案就是： &lt;span class=&#34;math display&#34;&gt;\[
(\frac{|-W_0|}{\sqrt{1^2 }})^2 =(\frac{|-W_0|}{\sqrt{1^2 + D^2}})^2 = \frac{W_0^2}{1 + D^2}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后推广一下，我们会发现 &lt;span class=&#34;math inline&#34;&gt;\(x_1 + Dx_2 + D^2x_3= W_0\)&lt;/span&gt; 是一个平面，然后把上面的形式一推广，就是点到平面的距离公式，于是答案就是 &lt;span class=&#34;math display&#34;&gt;\[
\frac{W_0^2}{1 + D^2 + D^4}
\]&lt;/span&gt; 然后依次推广，结论就是 &lt;span class=&#34;math display&#34;&gt;\[
\frac{W_0^2}{\sum_{i = 0}^{t - 1}D^{2i}}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;b-1&#34;&gt;B&lt;/h3&gt;
&lt;h3 id=&#34;c-1&#34;&gt;C&lt;/h3&gt;
&lt;p&gt;朴素的 dp 显然，&lt;span class=&#34;math inline&#34;&gt;\(O(nmk)\)&lt;/span&gt;，可以通过随机数据。&lt;/p&gt;
&lt;p&gt;由于所有 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的总长最小为 &lt;span class=&#34;math inline&#34;&gt;\(2\times 10^5\)&lt;/span&gt;，而不同串长个数又是 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{|T|}\)&lt;/span&gt; 级别的，所以直接记录一下 fail 树上面第一个有 end 的节点，然后这样跳的复杂度就是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;h2 id=&#34;day-11-模拟赛-4&#34;&gt;Day 11 模拟赛 4&lt;/h2&gt;
&lt;h2 id=&#34;day-12-模拟赛-5&#34;&gt;Day 12 模拟赛 5&lt;/h2&gt;
&lt;h2 id=&#34;day-13-模拟赛-6&#34;&gt;Day 13 模拟赛 6&lt;/h2&gt;
&lt;h2 id=&#34;day-14-模拟赛-7&#34;&gt;Day 14 模拟赛 7&lt;/h2&gt;
&lt;h2 id=&#34;day-15-模拟赛-8&#34;&gt;Day 15 模拟赛 8&lt;/h2&gt;
&lt;h2 id=&#34;day-16-模拟赛-9&#34;&gt;Day 16 模拟赛 9&lt;/h2&gt;
&lt;h2 id=&#34;day-17-模拟赛-10&#34;&gt;Day 17 模拟赛 10&lt;/h2&gt;

  &lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>2021年7月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-07/</link>
        <pubDate>Thu, 01 Jul 2021 13:43:39 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-07/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg60.webp" alt="Featured image of post 2021年7月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;感觉自己是 sb。&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;莫队（带修，树上）&lt;/li&gt;
&lt;li&gt;cdq 分治&lt;/li&gt;
&lt;li&gt;K-D Tree&lt;/li&gt;
&lt;li&gt;SAM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/07/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3648&#34;&gt;P3648 [APIO2014]序列分割&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3648/&#34;&gt;毒瘤斜率优化&lt;/a&gt;，这题是真的卡常，判斜率使用乘法判会快一些且不掉精度。开 &lt;code&gt;long long&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5785&#34;&gt;P5785 [SDOI2012]任务安排&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;卡精度的题，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5785/&#34;&gt;斜率优化&lt;/a&gt;随便推一下即可。需要二分单调栈查找最优决策点。&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/07/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF311B&#34;&gt;CF311B Cats Transport&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf311b/&#34;&gt;斜率优化&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/07/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[P4097 &lt;a href=&#34;https://www.luogu.com.cn/problem/P4097&#34;&gt;HEOI2013]Segment&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-lichao/&#34;&gt;李超树模板&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/07/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4254&#34;&gt;P4254 [JSOI2008]Blue Mary开公司&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不用维护线段端点的&lt;a href=&#34;https://oi.imyangty.com/note-lichao/&#34;&gt;李超树&lt;/a&gt;，非常好写。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://darkbzoj.tk/problem/3938&#34;&gt;BZOJ#3938. Robot&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将时间离散化之后用&lt;a href=&#34;https://oi.imyangty.com/note-lichao/&#34;&gt;李超树&lt;/a&gt;维护 &lt;span class=&#34;math inline&#34;&gt;\(x-t\)&lt;/span&gt; 图，统一进行查询。需要注意细节。&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/07/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4069&#34;&gt;P4069 [SDOI2016]游戏&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;细节十分恶心的&lt;a href=&#34;https://oi.imyangty.com/note-lichao/&#34;&gt;李超树&lt;/a&gt; + 树链剖分。&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/07/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1303G&#34;&gt;CF1303G Sum of Prefix Sums&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点分治 + 李超树&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4655&#34;&gt;P4655 [CEOI2017]Building Bridges&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4655/&#34;&gt;李超树优化 dp&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/07/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2900&#34;&gt;P2900 [USACO08MAR]Land Acquisition G&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;斜率优化。注意到有些土地根本不会对答案产生贡献，排除掉即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2120&#34;&gt;P2120 [ZJOI2007]仓库建设&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自己推出来的，简单斜优。&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/07/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4360&#34;&gt;P4360 [CEOI2004]锯木厂选址&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自己口胡了一种神奇的更为通用的做法，斜率优化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3628&#34;&gt;P3628 [APIO2010]特别行动队&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;斜率优化，注意单调性有变化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4072&#34;&gt;P4072 [SDOI2016]征途&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4072/&#34;&gt;斜率优化&lt;/a&gt;，需要提前处理出 &lt;span class=&#34;math inline&#34;&gt;\(f_1\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/07/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4027&#34;&gt;P4027 [NOI2007] 货币兑换&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4027/&#34;&gt;李超树优化 dp&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1721&#34;&gt;P1721 [NOI2016] 国王饮水记&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p1721/&#34;&gt;神仙题&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/07/17&lt;/h3&gt;
&lt;p&gt;之前考试周比较耽误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc210&#34;&gt;AtCoder Beginner Contest 210&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + B + C + D + E rk485&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2305&#34;&gt;P2305 [NOI2014] 购票&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点分治 + &lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2305/&#34;&gt;斜率优化&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/07/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3374&#34;&gt;P3374 【模板】树状数组 1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cdq 分治做法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF713C&#34;&gt;CF713C Sonya and Problem Wihtout a Legend&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;奇怪的&lt;a href=&#34;https://blog.csdn.net/lycheng1215/article/details/80089004&#34;&gt;数形结合优化 dp&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/07/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3157&#34;&gt;P3157 [CQOI2011]动态逆序对&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cdq 分治&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF323C&#34;&gt;CF323C Two permutations&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf323c/&#34;&gt;主席树&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1972&#34;&gt;P1972 [SDOI2009]HH的项链&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树状数组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2709&#34;&gt;P2709 小B的询问&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫队&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF86D&#34;&gt;CF86D Powerful array&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫队&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/07/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU6756 Finding a MEX&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-hdu6756/&#34;&gt;按照度数大小分块&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1903&#34;&gt;P1903 [国家集训队]数颜色 / 维护队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;带修莫队模板&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/07/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1494&#34;&gt;P1494 [国家集训队]小Z的袜子&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫队&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP10707&#34;&gt;SP10707 COT2 - Count on a tree II&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树上莫队&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF940F&#34;&gt;CF940F Machine Learning&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;带修莫队，由于数字出现次数的 mex 是 &lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt; 级别的，所以可以暴力 mex&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4137&#34;&gt;P4137 Rmq Problem / mex&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫队，对值域分块来维护 mex&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4148&#34;&gt;P4148 简单题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;卡空间 + 强制在线，KDT 二维数点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4357&#34;&gt;P4357 [CQOI2016]K 远点对&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KDT 剪枝 + 堆，查询 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 远点&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/07/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2042&#34;&gt;P2042 [NOI2005] 维护数列&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用平衡树维护序列&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3835&#34;&gt;P3835 【模板】可持久化平衡树&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;板子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3380&#34;&gt;P3380 【模板】二逼平衡树（树套树）&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;板子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5055&#34;&gt;P5055 【模板】可持久化文艺平衡树&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;板子&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/07/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4074&#34;&gt;P4074 [WC2013] 糖果公园&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树上带修莫队&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/07/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/UVA10304&#34;&gt;UVA10304 Optimal Binary Search Tree&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四边形不等式 + 区间dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1238E&#34;&gt;CF1238E Keyboard Purchase&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-cf1238e/&#34;&gt;状压 dp&lt;/a&gt;，拆开每个字母的贡献&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2197&#34;&gt;P2197 【模板】nim 游戏&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;nim 游戏&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/07/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3804&#34;&gt;P3804 【模板】后缀自动机 (SAM)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SAM 模板，parent 树上跑 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4070&#34;&gt;P4070 [SDOI2016]生成魔咒&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SAM&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3975&#34;&gt;P3975 [TJOI2015]弦论&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SAM 找子串个数。endpos 类的大小&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=2609&#34;&gt;HDU2609 How many&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找出每个串的最小表示然后去重计数即可&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/07/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4132&#34;&gt;P4132 [BJOI2012]算不出的等式&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其几何意义为直线下数点。注意特判 &lt;span class=&#34;math inline&#34;&gt;\(p = q\)&lt;/span&gt; 的情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=4944&#34;&gt;HDU 4944 FSF’s game&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫反，&lt;a href=&#34;https://oi.imyangty.com/sol-hdu4944/&#34;&gt;Sol.&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3601&#34;&gt;BZOJ #3601. 一个人的数论&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫反 + 高斯消元，&lt;a href=&#34;https://oi.imyangty.com/sol-bzoj3601/&#34;&gt;Sol.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-19&#34;&gt;21/07/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4783&#34;&gt;P4783 【模板】矩阵求逆&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高斯消元。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P6076&#34;&gt;P6076 [JSOI2015]染色问题&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;容斥。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4718 【模板】Pollard-Rho算法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;miller_rabin + pollard-rho&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2455&#34;&gt;P2455 [SDOI2006]线性方程组&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高斯消元&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc212&#34;&gt;AtCoder Beginner Contest 212&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + B + C + D + E 赛后 F&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3232 [HNOI2013]游走&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3232/&#34;&gt;高斯消元 + 期望&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年6月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-06/</link>
        <pubDate>Tue, 01 Jun 2021 18:04:58 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-06/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg59.webp" alt="Featured image of post 2021年6月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;不再颓废，再战一年&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;状压 dp&lt;/li&gt;
&lt;li&gt;动态 dp&lt;/li&gt;
&lt;li&gt;AC 自动机 + dp&lt;/li&gt;
&lt;li&gt;AC 自动机与 fail 树&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/06/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3829 [SHOI2012]信用卡凸包&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;旋转函数横纵坐标写反了有 50pts。。。&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/06/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3303 [SDOI2013] 淘金&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, j, 0/1}\)&lt;/span&gt; 表示从小到大第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位，当前乘积为 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，有没有卡着 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的上界，顺推跑数位 dp。之后给每个元素记录一个指针，放进优先队列里面找结果。&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/06/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3694 邦邦的大合唱站队&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状压 dp，考虑 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 为乐队排好的状态（0 为没有排，1 为排了），之后从小到大枚举状态，枚举最后一个位置的乐队&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1441 砝码称重&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;枚举每个状态然后 bitset&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3092 [USACO13NOV]No Change G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状压，&lt;span class=&#34;math inline&#34;&gt;\(f_S\)&lt;/span&gt; 为硬币状态 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 能买到最多物品的个数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3052 [USACO12MAR]Cows in a Skyscraper G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状压，设 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 两个 dp 数组求解&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/06/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2915 [USACO08NOV]Mixed Up Cows G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状压，状态内记入最后一个摆的牛（后效性）&lt;span class=&#34;math inline&#34;&gt;\(O(2^nn^2)\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3959 [NOIP2017 提高组] 宝藏&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p3959/&#34;&gt;思路比较清奇的状压&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/06/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4719 【模板】“动态 DP”&amp;amp;动态树分治&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-ddp&#34;&gt;动态 dp&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/06/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SP1716 GSS3 - Can you answer these queries III&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P5024 [NOIP2018 提高组] 保卫王国&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态 dp&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/06/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA1336 修缮长城 Fixing the Great Wall&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间 dp，注意结果是向下取整&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/06/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4556 [Vani有约会]雨天的尾巴 /【模板】线段树合并&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线段树合并模板，注意一定是边遍历树边合并线段树边统计答案，因为线段树在合并之后就会发生奇怪的改变。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3521 [POI2011]ROT-Tree Rotations&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线段树合并&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3919 【模板】可持久化线段树 1（可持久化数组）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主席树初探&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3834 【模板】可持久化线段树 2（主席树）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;静态区间第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 小。对于每个位置都建上 &lt;span class=&#34;math inline&#34;&gt;\([1, r]\)&lt;/span&gt; 的权值线段树（使用主席树），然后用差分的思想查询即可。&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/06/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BZOJ #3545. [ONTAK2010]Peaks&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并查集 + 权值树上二分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2824 [HEOI2016/TJOI2016]排序&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案经典题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5494 【模板】线段树分裂&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线段树分裂。注意垃圾回收不要写炸&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/06/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF558E A Simple Task&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线段树分裂，注意细节。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5829 【模板】失配树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;fail 树上的 lca&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/06/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4516 [JSOI2018]潜入行动&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重在复杂度分析的树形背包，&lt;span class=&#34;math inline&#34;&gt;\(O(nk)\)&lt;/span&gt;，转移方程平凡。需要注意细节的处理，要先复制一份 dp 数组，且注意 &lt;code&gt;long long&lt;/code&gt; 问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF490F Treeland Tour&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线段树合并优化 dp&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/06/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3572 [POI2014]PTA-Little Bird&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单调队列优化 dp。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P7114 [NOIP2020] 字符串匹配&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Z 算法，思维好题。&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/06/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3426 [POI2005]SZA-Template&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP + dp，注意到 &lt;span class=&#34;math inline&#34;&gt;\(f_i = i\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(f_i = \mathrm{fail}_i\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(f_i = \mathrm{fail}_i\)&lt;/span&gt; 的充要条件是 &lt;span class=&#34;math inline&#34;&gt;\(\exists j \le i - \mathrm{fail}_i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(f_j = f_{\mathrm{fail}_i}\)&lt;/span&gt;。因为从 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 最多接上 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{fail}_i\)&lt;/span&gt; 个字符串。开桶记录最大位置即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3041 [USACO12JAN]Video Game G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AC 自动机 + dp，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, u}\)&lt;/span&gt; 为长度为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，在 trie 上节点为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的最大收益。转移：&lt;span class=&#34;math inline&#34;&gt;\(f_{i, \mathrm{ch}(u)} = \max\{f_{i - 1, u} \} + \mathrm{val}_{\mathrm{ch}(u)}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/06/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF808G Anthem of Berland&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP + DP，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为到 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 为止的最大匹配数，&lt;span class=&#34;math inline&#34;&gt;\(g_i\)&lt;/span&gt; 为到 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 为止，最后一段强制为 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的最大匹配数，有 &lt;span class=&#34;math inline&#34;&gt;\(g_i := f_{i - m} + 1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g_i = \max_{j = \mathrm{fail}(j)}\{g_{i - m + j} + 1\}\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11022 String Factoring&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间 DP 和 KMP。使用 KMP 找子串的循环节，通过循环节进行转移。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6216 回文匹配&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP + Manacher&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/06/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4555 [国家集训队]最长双回文串&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;manacher。可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 处理以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 开头的最长回文子串长度 &lt;span class=&#34;math inline&#34;&gt;\(l_i\)&lt;/span&gt; 和以 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 结尾的 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt;，枚举 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{#}\)&lt;/span&gt; 为断点统计答案即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4052 [JSOI2007]文本生成器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;容斥转化，用 &lt;span class=&#34;math inline&#34;&gt;\(26^m\)&lt;/span&gt; 减去不可读的状态数量。&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/06/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2414 [NOI2011] 阿狸的打字机&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ACAM + fail 树 + dfs 序 + 树状数组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3311 [SDOI2014] 数数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ACAM + 数位 dp，还是使用记忆化搜索&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF163E e-Government&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ACAM + fail 树 + dfs 序 + 树状数组&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/06/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/144&#34;&gt;LOJ#144. DFS 序 1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dfs 序 + 树状数组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/145&#34;&gt;LOJ#145. DFS 序 2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dfs 序 + 树状数组&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/06/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/146&#34;&gt;LOJ#146. DFS 序 3，树上差分 1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树上差分，修改路径，单点查询，子树查询。使用两个树状数组维护不同内容实现。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://loj.ac/p/147&#34;&gt;LOJ#147. DFS 序 4&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树上前缀和，单点修改，子树修改，路径查询。使用两个树状数组维护不同内容实现。&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/06/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1207G&#34;&gt;CF1207G Indie Album&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同阿狸的打字机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF1202E&#34;&gt;CF1202E You Are Given Some Strings…&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;枚举 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 的分界点，记作 &lt;span class=&#34;math inline&#34;&gt;\(f_1(i)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_2(i)\)&lt;/span&gt;，对模式串正反建 AC 自动机求出 &lt;span class=&#34;math inline&#34;&gt;\(f_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_2\)&lt;/span&gt;。然后乘法原理合并答案得解。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2444&#34;&gt;P2444 [POI2000]病毒&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Trie 图上面找环&lt;/p&gt;
&lt;h3 id=&#34;section-19&#34;&gt;21/06/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2292&#34;&gt;P2292 [HNOI2004]L语言&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AC 自动机 + dp，使用状压将长度为 10 压进 &lt;code&gt;int&lt;/code&gt; 里面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5840&#34;&gt;P5840 [COCI2015]Divljak&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好题，&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5840/&#34;&gt;fail 树 + 树链并&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-20&#34;&gt;21/06/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[P2150 &lt;a href=&#34;https://www.luogu.com.cn/problem/P2150&#34;&gt;NOI2015] 寿司晚宴&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状压好题。由于大于 &lt;span class=&#34;math inline&#34;&gt;\(19\)&lt;/span&gt; 的质因子只可能有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个，所以把前八个质数状压起来，后面的单独进行考虑来 dp 就可以了。具体地，使用 &lt;span class=&#34;math inline&#34;&gt;\(f_1(S_1, S_2)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_2(S_1, S_2)\)&lt;/span&gt; 两个数组，分别代表这个大质数选/不选的方案数。每处理完一种大质数就合并一下答案就行了。&lt;/p&gt;
&lt;h3 id=&#34;section-21&#34;&gt;21/06/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[P4547 &lt;a href=&#34;https://www.luogu.com.cn/problem/P4547&#34;&gt;THUWC2017]随机二分图&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;妙不可言的状压期望 dp。由于期望的线性性，对于第 1 和第 2 种类型的边组，可以拆成两条概率为 1/2 的边和一组概率为 &lt;span class=&#34;math inline&#34;&gt;\(\pm 1/4\)&lt;/span&gt; 的边组。这样子做是因为对于单条边，1/2 的贡献是一定有的，而对于边组，分别会少了和多出 &lt;span class=&#34;math inline&#34;&gt;\(1/4\)&lt;/span&gt; 的贡献。总状态数为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = 1}^{n}\binom n i^2 = \binom{2n}n\)&lt;/span&gt;，可以用 map 记录状态配合记忆化搜索卡过去。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ABC207 A + B + C&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-22&#34;&gt;21/06/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[&lt;a href=&#34;https://www.luogu.com.cn/problem/AT4120&#34;&gt;ARC096D] Sweet Alchemy&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树上差分之后变为价值很小，体积很大的多重背包，使用大范围贪心，小范围多重背包求解。&lt;/p&gt;
&lt;h3 id=&#34;section-23&#34;&gt;21/06/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6069. 「2017 山东一轮集训 Day4」塔&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-loj6069/&#34;&gt;一种加数字 dp 的思想&lt;/a&gt;，矩阵快速幂求组合数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF704B Ant Man&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;神仙贪心题，&lt;a href=&#34;https://oi.imyangty.com/sol-cf704b/&#34;&gt;增量构造法&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年5月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-05/</link>
        <pubDate>Fri, 07 May 2021 21:53:30 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-05/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg58.webp" alt="Featured image of post 2021年5月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;暂时的离开是为了更好的开始&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一些贪心&lt;/li&gt;
&lt;li&gt;一些奇怪的 dp&lt;/li&gt;
&lt;li&gt;一些数位 dp&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/05/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5021 [NOIP2018 提高组] 赛道修建&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案+贪心&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/05/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[AGC032E] Modulo Pairing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;调整法，贪心，二分查找分界点&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/05/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARC118 A&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状态奇差&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/05/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[ARC118C] Coprime Set&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于神奇的引理：在满足条件的序列后面继续加满足条件的数的倍数，仍然满足&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/05/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[AGC037E] Reversing and Concatenating&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符串贪心，直接贪心，注意代码的实现细节。&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/05/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[ARC118B] Village of M People&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案+贪心&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/05/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5657 [CSP-S2019] 格雷码&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接模拟&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/05/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARC119&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + B&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/05/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[ARC119C] ARC Wrecker 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利用奇下标和偶下标的性质，巧妙做题。&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/05/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[ARC119D] Grid Repainting 3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分图&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/05/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5659 [CSP-S2019] 树上的数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;神仙题，贪心&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/05/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[AGC010C] Cleaning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较神奇的结论题，考虑内部和伸出去的路径&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/05/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ABC202 A-E&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E题被降智&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/05/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARC120 A + B + C&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/05/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2742 [USACO5.1]圈奶牛Fencing the Cows /【模板】二维凸包&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;凸包模板题，Graham，Andrew&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/05/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[ABC202F] Integer Convex Hull&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-abc202f/&#34;&gt;凸包 + 计数 dp&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[AGC020C] Median Sum&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;bitset 优化背包，中位数的对称性&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/05/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF280C Game on Tree&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;期望的线性性，答案为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_u \frac 1{d_u}\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1297 [国家集训队]单选错位&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;期望，&lt;span class=&#34;math inline&#34;&gt;\(\sum_{i}\frac{1}{\max(a_i, a_{i + 1})}\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4317 花神的数论题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二进制的数位 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2602 [ZJOI2010]数字计数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数位 dp，设 &lt;code&gt;f[len][lim][sum][zero]&lt;/code&gt;，考虑顶着最高位和前导零两种特殊情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4124 [CQOI2016]手机号码&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数位 dp，需要记录后两位和是否已经合法，以及不能同时有 4 和 8。&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/05/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;hdu2089 不要62&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数位 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3413 SAC#1 - 萌数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数位 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF55D Beautiful numbers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数位 dp，观察到 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{lcm}_{1\le i\le 9} = 2520\)&lt;/span&gt;，所以状态只存储到 &lt;span class=&#34;math inline&#34;&gt;\(2520\)&lt;/span&gt; 个，设 &lt;code&gt;f[len][cur][_lcm]&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4999 烦人的数学作业&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数位 dp，可以分位考虑，从 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt;，答案为 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{0\le i\le 9}f_i \times i\)&lt;/span&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年4月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-04/</link>
        <pubDate>Thu, 01 Apr 2021 16:22:57 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-04/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg57.webp" alt="Featured image of post 2021年4月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;NOIOL 有点小爆炸 省选爆炸了。。。AFO&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Link-Cut Tree&lt;/li&gt;
&lt;li&gt;线性基&lt;/li&gt;
&lt;li&gt;后缀数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/04/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3565 [POI2014]HOT-Hotels&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P5904 [POI2014]HOT-Hotels 加强版&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长链剖分优化 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5384 [Cnoi2019]雪松果树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长链剖分&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/04/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3899 [湖南集训]谈笑风生&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长链剖分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF208E Blood Cousins&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长链剖分&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/04/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF246E Blood Cousins Return&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dsu on tree&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/04/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6625 [省选联考 2020 B 卷] 卡牌游戏&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sb 贪心&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4178 Tree&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点分治，使用树状数组维护贡献&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6626 [省选联考 2020 B 卷] 消息传递&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点分治&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3690 【模板】Link Cut Tree （动态树）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LCT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6136 【模板】普通平衡树（数据加强版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新码风 Splay&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/04/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3203 [HNOI2010]弹飞绵羊&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LCT。建边，然后找根到该节点的路径长（一遍 access 和一遍 splay 即可）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1501 [国家集训队]Tree II&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意标记的下传即可&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/04/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2870 [USACO07DEC]Best Cow Line G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SA。&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/04/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2852 [USACO06DEC]Milk Patterns G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SA，求出现超过 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次的子串的最大长度，即为寻找每 &lt;span class=&#34;math inline&#34;&gt;\(k - 1\)&lt;/span&gt; 个相邻的 &lt;code&gt;ht[i]&lt;/code&gt; 的最小值的最大值。可以使用 &lt;code&gt;multiset&amp;lt;int&amp;gt;&lt;/code&gt; 维护。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4149 [IOI2011]Race&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点分治&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3812 【模板】线性基&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性基&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU3949 XOR&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性基求异或 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BZOJ#3513. [MUTC2013]idiots&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求随机选三个数边长可以组成三角形的概率。正难则反，算不能拼成三角形的方案数。考虑自身卷积，并去重，得到两个木棍能拼出的方案数，然后再做一下前缀和，得到两边之和小于等于该边的方案数，对于所有木棍长度求个和就得到了不能的方案数，直接算即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BZOJ#2194. 快速傅立叶之二&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推式子，&lt;span class=&#34;math inline&#34;&gt;\(C\_k = \\sum\_{k\\le i\\lt n} a\_ib\_{i - k}\)&lt;/span&gt;，推完之后换元化为卷积形式然后 FFT。&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/04/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2659 美丽的序列&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单调栈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[AGC005B] Minimum Sum&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单调栈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4248 [AHOI2013]差异&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SA 与单调栈&lt;/p&gt;
&lt;h3 id=&#34;省选-day-1&#34;&gt;21/04/10 省选 Day 1&lt;/h3&gt;
&lt;p&gt;100 + [40, ?] + [0, 16] = [140, 156?] 炸干净了，T3 暴力爆炸了，希望 Day 2 能翻盘吧&lt;/p&gt;
&lt;h3 id=&#34;省选-day-2&#34;&gt;21/04/11 省选 Day 2&lt;/h3&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/04/15&lt;/h3&gt;
&lt;p&gt;省选出分，没进队&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/04/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARC117 A + B + D rk597&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/04/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARC117C Tricolor Pyramid&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很巧的杨辉三角二项式系数题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3807 【模板】卢卡斯定理&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lucas 定理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AGC023A - Zero-Sum Ranges&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前缀和水题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4720 【模板】扩展卢卡斯&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;exLucas&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/04/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2480 [SDOI2010]古代猪文&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欧拉定理 + Lucas + CRT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4345 [SHOI2015]超能粒子炮·改&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lucas + 推式子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2183 [国家集训队]礼物&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;exLucas&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/04/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VP ARC116 A + B + C&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/04/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SP5971 LCMSUM - LCM Sum&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫比乌斯反演 + 欧拉函数&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/04/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5091 【模板】扩展欧拉定理&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欧拉降幂&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4139 上帝与集合的正确用法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展欧拉定理求 &lt;span class=&#34;math inline&#34;&gt;\(2^\\infty\\bmod p\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/04/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF906D Power Tower&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展欧拉定理，因为 &lt;span class=&#34;math inline&#34;&gt;\(\\phi(n)\)&lt;/span&gt; 是 &lt;span class=&#34;math inline&#34;&gt;\(\\log\)&lt;/span&gt; 级别衰减，所以复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q\\log p)\)&lt;/span&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年3月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-03/</link>
        <pubDate>Mon, 01 Mar 2021 22:33:25 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-03/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg56.webp" alt="Featured image of post 2021年3月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;联合省选 rp++ 不想开学/kk&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;分数规划&lt;/li&gt;
&lt;li&gt;整体二分&lt;/li&gt;
&lt;li&gt;cdq 分治&lt;/li&gt;
&lt;li&gt;Matrix-Tree 定理&lt;/li&gt;
&lt;li&gt;Borůvka 算法&lt;/li&gt;
&lt;li&gt;长链剖分&lt;/li&gt;
&lt;li&gt;dsu on tree&lt;/li&gt;
&lt;li&gt;点分治&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/03/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF126B Password&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP 算法的理解问题，找到 &lt;span class=&#34;math inline&#34;&gt;\(\max_{1\le i\lt n}fail_i\)&lt;/span&gt;，然后判定哪个最长的 Border 能作为答案即可。&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/03/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3435 [POI2006]OKR-Periods of Words&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;涉及到 KMP 的理解。需要求出每个前缀的最小 Border——直接跳 fail 跳到 fail = 0 即可，但是不能暴跳，需要记忆化递推。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3538 [POI2012]OKR-A Horrible Poem&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符串哈希判循环串模板。考虑枚举循环节的长度（分解质因数），然后通过哈希实现判定&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4503 [CTSC2014]企鹅QQ&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哈希，枚举每一位判定即可，通过 sort 加速判断。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1659 [国家集训队]拉拉队排练&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;manacher 求奇数长度回文串，需要前缀和一下而且还要快速幂&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/03/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#149. 01 分数规划&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;01 分数规划裸题，二分答案&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1404 平均数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;01 分数规划&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4377 [USACO18OPEN]Talent Show G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;01 分数规划套了个背包而已&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11475 Extend to Palindrome&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求一个最长回文后缀即可&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/03/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4824 [USACO15FEB]Censoring S&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP + 栈&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/03/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3121 [USACO15FEB]Censoring G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上题的 AC 自动机版本&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/03/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF526D Om Nom and Necklace&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP 循环节&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3193 [HNOI2008]GT考试&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1319&#34; title=&#34;KMP + 矩阵快速幂加速 dp&#34;&gt;KMP + 矩阵快速幂加速 dp&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Codeforces Round #705 (Div. 2)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + B + D rk1057&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/03/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;U155026 给给&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;紫书题变种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4986 逃离&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;牛顿迭代法&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/03/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P7115 [NOIP2020] 移球游戏&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构造&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF622F The Sum of the k-th Powers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拉格朗日插值&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/03/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2055 [ZJOI2009]假期的宿舍&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最大流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Codeforces Round #706 (Div. 2)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + B+ C&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/03/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1495B Let’s Go Hiking&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;博弈论，补题&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/03/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1495C Garden of the Sun&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构造，赛后补题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5431 【模板】乘法逆元2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;氵&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/03/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Codeforces Round #707 (Div. 2, based on Moscow Open Olympiad in Informatics)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + B&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5104 红包发红包&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先分析第一个人能得到多少： &lt;span class=&#34;math inline&#34;&gt;\(\int_0^w \frac 1w x\mathrm dx = \frac w 2\)&lt;/span&gt;，所以这样推下去知答案为 &lt;span class=&#34;math inline&#34;&gt;\(\frac{w}{2^k}\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1500A Going Home&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;毒瘤暴力题分析复杂度&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/03/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARC069D Flags&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案 + 线段树优化建图 + &lt;a href=&#34;https://imyangty.com/oi/1329&#34; title=&#34;2-SAT&#34;&gt;2-SAT&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/03/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;POJ 3352 Road Construction&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求最小添加的边数使得去掉所有桥，答案为边双连通分量缩点后叶子的数量加一除以二。&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/03/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BZOJ#4398. 福慧双修&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 1 号点拆点之后二进制分组连边跑最短路保证每对出点都被枚举到。&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/03/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5958 [POI2017]Sabotaż&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_u = \max\lbrace\min\lbrace \frac{size_v}{size_u - 1}, f_v \rbrace\rbrace\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3177 [HAOI2015]树上染色&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;毒瘤树形dp，细节繁多，只需考虑每条边产生的贡献。需要注意状态转移的合法性，可以使用 tmp 数组进行暂存&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/03/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF708C Centroids&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;换根 dp，考虑找到一个大小大于 n/2 的子树然后将其接走即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2515 [HAOI2010]软件安装&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tarjan 缩点 + 树上背包，注意图不连通的情况，需要特判&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5304 [GXOI/GZOI2019]旅行者&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二进制分组跑最短路&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/03/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4298 [CTSC2008]祭祀&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构造一个 DAG 的最长反链。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11419 SAM I AM&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把横行和纵列作为二分图的左部和右部，中间的点连边，跑最小覆盖即可。&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/03/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6062 [USACO05JAN]Muddy Fields G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把所有极长木板看作点，左右部分别为横和纵&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P7112 【模板】行列式求值&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任意模数行列式求值，考虑两行之间辗转相减&lt;/p&gt;
&lt;h3 id=&#34;section-19&#34;&gt;21/03/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6178 【模板】Matrix-Tree 定理&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Matrix-Tree 定理的带权版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4336 [SHOI2016]黑暗前的幻想乡&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Matrix-Tree 加容斥&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4455 [CQOI2018]社交网络&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Matrix-Tree 模板&lt;/p&gt;
&lt;h3 id=&#34;section-20&#34;&gt;21/03/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NOI Online #1 提高组&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\([0, 10] + [80,100] + 20\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-21&#34;&gt;21/03/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3810 【模板】三维偏序（陌上花开）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cdq 分治&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1429 平面最近点对（加强版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平面最近点对，分治法&lt;/p&gt;
&lt;h3 id=&#34;section-22&#34;&gt;21/03/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU4343 Interval query&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;倍增优化贪心&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU6031 Innumerable Ancestors&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两点集 LCA 查询，树上倍增+二分答案&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3366 【模板】最小生成树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Borůvka 算法通过&lt;/p&gt;
&lt;h3 id=&#34;section-23&#34;&gt;21/03/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF888G Xor-MST&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1335&#34; title=&#34;最小 xor 生成树&#34;&gt;最小 xor 生成树&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5903 【模板】树上 k 级祖先&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1336&#34; title=&#34;长链剖分&#34;&gt;长链剖分&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;U41492 树上数颜色&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dsu on tree 模板&lt;/p&gt;
&lt;h3 id=&#34;section-24&#34;&gt;21/03/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF600E Lomsat gelral&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dsu on tree&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF570D Tree Requests&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dsu on tree&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6669. Nauuo and Binary Tree&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1337&#34; title=&#34;交互好题，树链剖分&#34;&gt;交互好题，树链剖分&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1009F Dominant Indices&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长链剖分优化 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3806 【模板】点分治1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点分治&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NOIOL 1 0 + 80 + 20 = 100&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>莫反/杜教筛做题记录</title>
        <link>https://oi.imyangty.com/summary-mobius/</link>
        <pubDate>Mon, 01 Feb 2021 20:40:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-mobius/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg14.webp" alt="Featured image of post 莫反/杜教筛做题记录" /&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p3455-poi2007zap-queries&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3455&#34;&gt;洛谷 P3455 [POI2007]ZAP-Queries&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;求： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^a\sum_{j = 1}^b[\gcd(i,j) = d]
\]&lt;/span&gt; ### Solution&lt;/p&gt;
&lt;p&gt;莫比乌斯反演时，一般要将含 &lt;span class=&#34;math inline&#34;&gt;\(\gcd\)&lt;/span&gt; 的式子化为 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i,j) = 1\)&lt;/span&gt; 的形式才好反演。因此考虑设 &lt;span class=&#34;math inline&#34;&gt;\(a&amp;#39; = a/d\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b&amp;#39; = b/d\)&lt;/span&gt;，原式化为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}[\gcd(i,j) = 1]
\]&lt;/span&gt; 然后就可以愉快的反演了。我们知道 &lt;span class=&#34;math display&#34;&gt;\[
\mu * 1 = \varepsilon
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\varepsilon(n) = \sum_{d\mid n}\mu(d)
\]&lt;/span&gt; 稍微变一下： &lt;span class=&#34;math display&#34;&gt;\[
\varepsilon(\gcd(i,j)) = \sum_{d\mid \gcd(i,j)}\mu(d)
\]&lt;/span&gt; 所以原式化为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}\sum_{d\mid \gcd(i,j)}\mu(d)
\]&lt;/span&gt; 考虑写成枚举 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的形式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}\sum_{d\mid \gcd(i,j)}\mu(d)\\
=&amp;amp;\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}\sum_{d = 1}^{\min(a&amp;#39;,b&amp;#39;)}[d\mid\gcd(i,j)]\mu(d)\\
=&amp;amp;\sum_{d=1}^{\min(a&amp;#39;,b&amp;#39;)}\mu(d)\sum_{i = 1}^{a&amp;#39;}\sum_{j = 1}^{b&amp;#39;}[d\mid\gcd(i,j)]
\end{aligned}
\]&lt;/span&gt; 考虑到若要使 &lt;span class=&#34;math inline&#34;&gt;\(d\mid \gcd(i,j)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 必须同为 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的倍数，根据乘法原理，原式可以化为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^{\min(a&amp;#39;,b&amp;#39;)}\mu(d)\left\lfloor\frac{a&amp;#39;}{d}\right\rfloor\left\lfloor\frac{b&amp;#39;}{d}\right\rfloor
\]&lt;/span&gt; 预处理出 &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; 的前缀和，再套一个整除分块即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mu[maxn], prime[maxn], tot, vis[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getmu()&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prime[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * prime[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * prime[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % prime[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * prime[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * prime[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mu[i] += mu[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getmu();&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T = read();&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a = read(), b = read(), d = read();&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a /= d, b /= d;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(a, b), ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; l &amp;lt;= top &amp;amp;&amp;amp; r &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r = min(top, min(a / (a / l), b / (b / l)));&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += (a / l) * (b / l) * (mu[r] - mu[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2522&#34;&gt;洛谷 P2522 [HAOI2011]Problem b&lt;/a&gt; 与此题类似，只不过需要套一个容斥。&lt;/p&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;将含有 gcd 的式子化为 &lt;span class=&#34;math inline&#34;&gt;\([\gcd(i,j) = 1]\)&lt;/span&gt;，然后就可以使用 &lt;span class=&#34;math inline&#34;&gt;\(\varepsilon = 1 * \mu\)&lt;/span&gt; 进行反演。&lt;/p&gt;
&lt;p&gt;推式子的时候随时记得可以改变枚举的顺序。&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p2257-yy的gcd&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2257&#34;&gt;洛谷 P2257 YY的GCD&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-1&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) \in P]
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; 为质数集。&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;不妨枚举这个质数，如下： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{k\in P}\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = k]
\]&lt;/span&gt; 然后就是像上题一样化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{k\in P}\sum_{i = 1}^n\sum_{j = 1}^m[\gcd(i,j) = k]\\
=&amp;amp;\sum_{k\in P}\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}[\gcd(i,j) = 1],\quad n&amp;#39; = \left\lfloor\frac nk \right\rfloor,m&amp;#39; = \left\lfloor\frac mk \right\rfloor\\
=&amp;amp;\sum_{k\in P}\sum_{i = 1}^{n&amp;#39;}\sum_{j = 1}^{m&amp;#39;}\sum_{d\mid \gcd(i,j)}\mu(d)\\
=&amp;amp;\sum_{k\in P}\sum_{d = 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor
\end{aligned}
\]&lt;/span&gt; 此时这个式子看上去已经差不多了，但是实际运行的时候还是会 T 掉，考虑设 &lt;span class=&#34;math inline&#34;&gt;\(T = kd\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{k\in P}\sum_{d = 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu(d)\left\lfloor\frac{n}{kd}\right\rfloor\left\lfloor\frac{m}{kd}\right\rfloor\\
=&amp;amp;\sum_{k\in P}\sum_{d= 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu\left(\frac Tk\right)\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\\
\end{aligned}
\]&lt;/span&gt; 换成枚举 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，提前： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{k\in P}\sum_{d= 1}^{\min(n&amp;#39;,m&amp;#39;)}\mu\left(\frac Tk\right)\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\\
=&amp;amp;\sum_{T = 1}^n\left\lfloor\frac{n}{T}\right\rfloor\left\lfloor\frac{m}{T}\right\rfloor\sum_{k\mid T\land k\in P}\mu\left(\frac Tk\right)
\end{aligned}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{k\mid T\land k\in P}\mu\left(\frac Tk\right)\)&lt;/span&gt; 是可以预处理的，预处理然后整除分块就可以了。实际实现的时候记得开 &lt;code&gt;long long&lt;/code&gt; 并卡卡常（不要处处 &lt;code&gt;long long&lt;/code&gt;）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mu[maxn], p[maxn], vis[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll sum[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getmu()&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot)&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            sum[i * p[j]] += mu[i];&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sum[i] += sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getmu();&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; kase = read();&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (kase--)&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r = min(top, min(n / (n / l), m / (m / l)));&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += (ll)(n / l) * (ll)(m / l) * (sum[r] - sum[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-1&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;适当的时候设 &lt;span class=&#34;math inline&#34;&gt;\(T=kd\)&lt;/span&gt; 是可以化简式子减小运算的时间复杂度的。&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p3312-sdoi2014数表&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3312&#34;&gt;洛谷 P3312 [SDOI2014]数表&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-2&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n,m\le 10^5,a\)&lt;/span&gt;，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\times[\sigma(\gcd(i,j)) \le a]\bmod 2^{31}
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(x)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的正约数之和。&lt;/p&gt;
&lt;h3 id=&#34;solution-1&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;先忽略 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(\gcd(i,j))\le a\)&lt;/span&gt; 的条件，并假定 &lt;span class=&#34;math inline&#34;&gt;\(n\le m\)&lt;/span&gt;，化简上面的式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sigma(\gcd(i,j))\\
=&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sum_{d = 1}^n\sigma(d)[\gcd(i,j) = d]\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{i = 1}^{\lfloor n/d\rfloor}\sum_{j = 1}^{\lfloor m / d\rfloor}[\gcd(i,j) = 1]\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{i = 1}^{\lfloor n/d\rfloor}\sum_{j = 1}^{\lfloor m / d\rfloor}\sum_{x\mid i\land x \mid j}\mu(x)\\
=&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{x = 1}^{\lfloor n / d\rfloor}\lfloor n / dx\rfloor\lfloor m/ dx\rfloor\mu(x)\\
\end{aligned}
\]&lt;/span&gt; 令 &lt;span class=&#34;math inline&#34;&gt;\(T = dx\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{d = 1}^n\sigma(d)\sum_{x = 1}^{\lfloor n / d\rfloor}\lfloor n / dx\rfloor\lfloor m/ dx\rfloor\mu(x)\\
=&amp;amp;\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor\sum_{d\mid T}\sigma(d)\mu(T/d)
\end{aligned}
\]&lt;/span&gt; 再令 &lt;span class=&#34;math inline&#34;&gt;\(f(T) = \displaystyle\sum_{d\mid T}\sigma(d)\mu(T/d)\)&lt;/span&gt;，则要求的东西就是： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{T = 1}^n\lfloor n / T\rfloor\lfloor m / T\rfloor f(T)
\]&lt;/span&gt; 然后我们可以发现的是：只有当 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\le a\)&lt;/span&gt; 时，其才会对 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 产生贡献，所以考虑离线处理每个询问，按照 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 从小到大排序，再将预处理好的 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\)&lt;/span&gt; 从小到大排序，然后动态更新 &lt;span class=&#34;math inline&#34;&gt;\(f(T)\)&lt;/span&gt; 的前缀和。可以发现的是我们每次加入一个 &lt;span class=&#34;math inline&#34;&gt;\(\sigma(d)\mu(T/d)\)&lt;/span&gt; 都会让 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 的每个倍数的 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 对应增加。所以使用树状数组维护。对于每个询问整除分块即可。总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(q\sqrt n\log n + n \log^2 n)\)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;utility&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define int &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define lowbit&lt;/span&gt;(x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;((x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(-x))&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define Fi &lt;/span&gt;first&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define Se &lt;/span&gt;second&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define mk&lt;/span&gt;(a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;make_pair(a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;13&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; queries&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, a, id;&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} q[&lt;span class=&#34;dv&#34;&gt;20000&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; cmp(queries a, queries b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a.a &amp;lt; b.a;}&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c =getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-33&#34;&gt;&lt;a href=&#34;#cb3-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-34&#34;&gt;&lt;a href=&#34;#cb3-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; g[maxn], mu[maxn], vis[maxn], p[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb3-35&#34;&gt;&lt;a href=&#34;#cb3-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-36&#34;&gt;&lt;a href=&#34;#cb3-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tree[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-37&#34;&gt;&lt;a href=&#34;#cb3-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-38&#34;&gt;&lt;a href=&#34;#cb3-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; modify(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; val)&lt;/span&gt;
&lt;span id=&#34;cb3-39&#34;&gt;&lt;a href=&#34;#cb3-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-40&#34;&gt;&lt;a href=&#34;#cb3-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; x += lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb3-41&#34;&gt;&lt;a href=&#34;#cb3-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tree[x] += val;&lt;/span&gt;
&lt;span id=&#34;cb3-42&#34;&gt;&lt;a href=&#34;#cb3-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-43&#34;&gt;&lt;a href=&#34;#cb3-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-44&#34;&gt;&lt;a href=&#34;#cb3-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-45&#34;&gt;&lt;a href=&#34;#cb3-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb3-46&#34;&gt;&lt;a href=&#34;#cb3-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-47&#34;&gt;&lt;a href=&#34;#cb3-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-48&#34;&gt;&lt;a href=&#34;#cb3-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x; x -= lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb3-49&#34;&gt;&lt;a href=&#34;#cb3-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += tree[x];&lt;/span&gt;
&lt;span id=&#34;cb3-50&#34;&gt;&lt;a href=&#34;#cb3-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-51&#34;&gt;&lt;a href=&#34;#cb3-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-52&#34;&gt;&lt;a href=&#34;#cb3-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-53&#34;&gt;&lt;a href=&#34;#cb3-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; pre()&lt;/span&gt;
&lt;span id=&#34;cb3-54&#34;&gt;&lt;a href=&#34;#cb3-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-55&#34;&gt;&lt;a href=&#34;#cb3-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-56&#34;&gt;&lt;a href=&#34;#cb3-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = mk(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-57&#34;&gt;&lt;a href=&#34;#cb3-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-58&#34;&gt;&lt;a href=&#34;#cb3-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-59&#34;&gt;&lt;a href=&#34;#cb3-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb3-60&#34;&gt;&lt;a href=&#34;#cb3-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb3-61&#34;&gt;&lt;a href=&#34;#cb3-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-62&#34;&gt;&lt;a href=&#34;#cb3-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb3-63&#34;&gt;&lt;a href=&#34;#cb3-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-64&#34;&gt;&lt;a href=&#34;#cb3-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = mk(g[i] = i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb3-65&#34;&gt;&lt;a href=&#34;#cb3-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-66&#34;&gt;&lt;a href=&#34;#cb3-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb3-67&#34;&gt;&lt;a href=&#34;#cb3-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb3-68&#34;&gt;&lt;a href=&#34;#cb3-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-69&#34;&gt;&lt;a href=&#34;#cb3-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-70&#34;&gt;&lt;a href=&#34;#cb3-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb3-71&#34;&gt;&lt;a href=&#34;#cb3-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i * p[j]] = g[i] * p[j] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-72&#34;&gt;&lt;a href=&#34;#cb3-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i * p[j]] = mk(f[i].Fi / g[i] * g[i * p[j]], i * p[j]);&lt;/span&gt;
&lt;span id=&#34;cb3-73&#34;&gt;&lt;a href=&#34;#cb3-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-74&#34;&gt;&lt;a href=&#34;#cb3-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-75&#34;&gt;&lt;a href=&#34;#cb3-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb3-76&#34;&gt;&lt;a href=&#34;#cb3-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-77&#34;&gt;&lt;a href=&#34;#cb3-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb3-78&#34;&gt;&lt;a href=&#34;#cb3-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb3-79&#34;&gt;&lt;a href=&#34;#cb3-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i * p[j]] = mk(f[i].Fi * f[p[j]].Fi, i * p[j]);&lt;/span&gt;
&lt;span id=&#34;cb3-80&#34;&gt;&lt;a href=&#34;#cb3-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i * p[j]] = p[j] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-81&#34;&gt;&lt;a href=&#34;#cb3-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb3-82&#34;&gt;&lt;a href=&#34;#cb3-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-83&#34;&gt;&lt;a href=&#34;#cb3-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-84&#34;&gt;&lt;a href=&#34;#cb3-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-85&#34;&gt;&lt;a href=&#34;#cb3-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-86&#34;&gt;&lt;a href=&#34;#cb3-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb3-87&#34;&gt;&lt;a href=&#34;#cb3-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-88&#34;&gt;&lt;a href=&#34;#cb3-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;gt; m) {&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t = n; n = m; m = t;}&lt;/span&gt;
&lt;span id=&#34;cb3-89&#34;&gt;&lt;a href=&#34;#cb3-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-90&#34;&gt;&lt;a href=&#34;#cb3-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-91&#34;&gt;&lt;a href=&#34;#cb3-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-92&#34;&gt;&lt;a href=&#34;#cb3-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l));&lt;/span&gt;
&lt;span id=&#34;cb3-93&#34;&gt;&lt;a href=&#34;#cb3-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += (query(r) - query(l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) * (n / l) * (m / l);&lt;/span&gt;
&lt;span id=&#34;cb3-94&#34;&gt;&lt;a href=&#34;#cb3-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-95&#34;&gt;&lt;a href=&#34;#cb3-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb3-96&#34;&gt;&lt;a href=&#34;#cb3-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb3-97&#34;&gt;&lt;a href=&#34;#cb3-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-98&#34;&gt;&lt;a href=&#34;#cb3-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb3-99&#34;&gt;&lt;a href=&#34;#cb3-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb3-100&#34;&gt;&lt;a href=&#34;#cb3-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pre();&lt;/span&gt;
&lt;span id=&#34;cb3-101&#34;&gt;&lt;a href=&#34;#cb3-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(f + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f + maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb3-102&#34;&gt;&lt;a href=&#34;#cb3-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; Q = read();&lt;/span&gt;
&lt;span id=&#34;cb3-103&#34;&gt;&lt;a href=&#34;#cb3-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, Q)&lt;/span&gt;
&lt;span id=&#34;cb3-104&#34;&gt;&lt;a href=&#34;#cb3-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[i].id = i, q[i].n = read(), q[i].m = read(), q[i].a = read();&lt;/span&gt;
&lt;span id=&#34;cb3-105&#34;&gt;&lt;a href=&#34;#cb3-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(q + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, q + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; + Q, cmp);&lt;/span&gt;
&lt;span id=&#34;cb3-106&#34;&gt;&lt;a href=&#34;#cb3-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= Q; ++i)&lt;/span&gt;
&lt;span id=&#34;cb3-107&#34;&gt;&lt;a href=&#34;#cb3-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb3-108&#34;&gt;&lt;a href=&#34;#cb3-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; f[j].Fi &amp;lt;= q[i].a &amp;amp;&amp;amp; j &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb3-109&#34;&gt;&lt;a href=&#34;#cb3-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = f[j].Se; k &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; k += f[j].Se)&lt;/span&gt;
&lt;span id=&#34;cb3-110&#34;&gt;&lt;a href=&#34;#cb3-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                modify(k, f[j].Fi * mu[k / f[j].Se]);&lt;/span&gt;
&lt;span id=&#34;cb3-111&#34;&gt;&lt;a href=&#34;#cb3-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[q[i].id] = solve(q[i].n, q[i].m);&lt;/span&gt;
&lt;span id=&#34;cb3-112&#34;&gt;&lt;a href=&#34;#cb3-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-113&#34;&gt;&lt;a href=&#34;#cb3-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, Q) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans[i] % (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;LL&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;31&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb3-114&#34;&gt;&lt;a href=&#34;#cb3-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-115&#34;&gt;&lt;a href=&#34;#cb3-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-2&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;适当使用 &lt;span class=&#34;math inline&#34;&gt;\(T = kd\)&lt;/span&gt; 进行换元。考虑贡献是如何产生的然后就可以使用恰当的数据结构进行维护。&lt;/p&gt;
&lt;h2 id=&#34;洛谷-p3327-sdoi2015约数个数和&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3327&#34;&gt;洛谷 P3327 [SDOI2015]约数个数和&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-3&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(\tau(n)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的约数个数，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\tau(ij)
\]&lt;/span&gt; ### Solution&lt;/p&gt;
&lt;p&gt;引理： &lt;span class=&#34;math display&#34;&gt;\[
\tau(ij) = \sum_{x\mid i}\sum_{y\mid j}[\gcd(x, y) = 1]
\]&lt;/span&gt; 证明考虑 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的质因子即可。&lt;/p&gt;
&lt;p&gt;原式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\tau(ij)\\
=&amp;amp;\sum_{i = 1}^n\sum_{j = 1}^m\sum_{x\mid i}\sum_{y\mid j}[\gcd(x, y) = 1]\\
=&amp;amp;\sum_{x = 1}^n\sum_{y = 1}^m\left\lfloor\frac nx\right\rfloor\left\lfloor\frac my\right\rfloor[\gcd(x,y) = 1]\\
=&amp;amp;\sum_{x = 1}^n\sum_{y = 1}^m\left\lfloor\frac nx\right\rfloor\left\lfloor\frac my\right\rfloor\sum_{d\mid \gcd(x,y)}\mu(d)\\
=&amp;amp;\sum_{d = 1}^{\min\{n,m\}}\mu(d)\sum_{x = 1}^{\left\lfloor\frac nd\right\rfloor}\left\lfloor\frac n{dx}\right\rfloor\sum_{y = 1}^{\left\lfloor\frac md\right\rfloor}\left\lfloor\frac m{dy}\right\rfloor
\end{aligned}
\]&lt;/span&gt; 设 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \sum_{1\le i\le n}\left\lfloor\dfrac ni\right\rfloor\)&lt;/span&gt;，则原式进一步化简为 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^{\min\{n,m\}}\mu(d)f\left(\left\lfloor\frac nd\right\rfloor\right)f\left(\left\lfloor\frac md\right\rfloor\right)
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 的值可以一开始 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n)\)&lt;/span&gt; 求出来，然后总的复杂度明显为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\sqrt n + T\sqrt n)\)&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;50005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mu[maxn], p[maxn], vis[maxn], tot;&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; get_mu()&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[i])&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= tot &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            vis[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                mu[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; i &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++i)&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mu[i] += mu[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; get_f()&lt;/span&gt;
&lt;span id=&#34;cb4-51&#34;&gt;&lt;a href=&#34;#cb4-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-52&#34;&gt;&lt;a href=&#34;#cb4-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; n &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;; ++n)&lt;/span&gt;
&lt;span id=&#34;cb4-53&#34;&gt;&lt;a href=&#34;#cb4-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= n; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-54&#34;&gt;&lt;a href=&#34;#cb4-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-55&#34;&gt;&lt;a href=&#34;#cb4-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            r = n / (n / l);&lt;/span&gt;
&lt;span id=&#34;cb4-56&#34;&gt;&lt;a href=&#34;#cb4-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[n] += (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (n / l);&lt;/span&gt;
&lt;span id=&#34;cb4-57&#34;&gt;&lt;a href=&#34;#cb4-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-58&#34;&gt;&lt;a href=&#34;#cb4-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-59&#34;&gt;&lt;a href=&#34;#cb4-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-60&#34;&gt;&lt;a href=&#34;#cb4-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-61&#34;&gt;&lt;a href=&#34;#cb4-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb4-62&#34;&gt;&lt;a href=&#34;#cb4-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-63&#34;&gt;&lt;a href=&#34;#cb4-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-64&#34;&gt;&lt;a href=&#34;#cb4-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; up = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb4-65&#34;&gt;&lt;a href=&#34;#cb4-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= up; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-66&#34;&gt;&lt;a href=&#34;#cb4-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-67&#34;&gt;&lt;a href=&#34;#cb4-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l));&lt;/span&gt;
&lt;span id=&#34;cb4-68&#34;&gt;&lt;a href=&#34;#cb4-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += (ll)(mu[r] - mu[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * f[n / l] * f[m / l];&lt;/span&gt;
&lt;span id=&#34;cb4-69&#34;&gt;&lt;a href=&#34;#cb4-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-70&#34;&gt;&lt;a href=&#34;#cb4-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb4-71&#34;&gt;&lt;a href=&#34;#cb4-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-72&#34;&gt;&lt;a href=&#34;#cb4-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-73&#34;&gt;&lt;a href=&#34;#cb4-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;signed&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb4-74&#34;&gt;&lt;a href=&#34;#cb4-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb4-75&#34;&gt;&lt;a href=&#34;#cb4-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    get_mu();&lt;/span&gt;
&lt;span id=&#34;cb4-76&#34;&gt;&lt;a href=&#34;#cb4-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    get_f();&lt;/span&gt;
&lt;span id=&#34;cb4-77&#34;&gt;&lt;a href=&#34;#cb4-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T = read();&lt;/span&gt;
&lt;span id=&#34;cb4-78&#34;&gt;&lt;a href=&#34;#cb4-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb4-79&#34;&gt;&lt;a href=&#34;#cb4-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb4-80&#34;&gt;&lt;a href=&#34;#cb4-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb4-81&#34;&gt;&lt;a href=&#34;#cb4-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, solve(n, m));&lt;/span&gt;
&lt;span id=&#34;cb4-82&#34;&gt;&lt;a href=&#34;#cb4-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-83&#34;&gt;&lt;a href=&#34;#cb4-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-84&#34;&gt;&lt;a href=&#34;#cb4-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-3&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\tau(ij) = \sum_{x\mid i}\sum_{y\mid j}[\gcd(x, y) = 1]
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;重要结论。&lt;/p&gt;
&lt;h2 id=&#34;spoj5971-lcmsum---lcm-sum&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/SP5971&#34;&gt;SPOJ5971 LCMSUM - LCM Sum&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-4&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 组数据，求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\operatorname{lcm}(i,n)\quad\text{s.t. }1\le T\le 3\times 10^5,1\le n\le 10^6
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;solution-2&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;先推式子： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\operatorname{lcm}(i, n) = \sum_{i = 1}^n\frac{in}{\gcd(i,n)}
\]&lt;/span&gt; 这一步相当显然。接下来由于这个式子不是很好处理，而我们知道 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = \gcd(n - i, n)\)&lt;/span&gt;，所以考虑把 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 这一项提出来，然后复制一遍倒序求和： &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\left(\sum_{i = 1}^{n - 1}\frac{in}{\gcd(i, n)} + \sum_{i = n - 1}^1\frac{in}{\gcd(n - i, n)} \right)
\]&lt;/span&gt; 合并分母相同的项， &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\sum_{i = 1}^{n - 1}\frac{n^2}{\gcd(i, n)} + n
\]&lt;/span&gt; 最后让这个式子好看一点： &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\sum_{i = 1}^n\frac{n^2}{\gcd(i, n)} + \frac n 2
\]&lt;/span&gt; 由于很多的 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n)\)&lt;/span&gt; 是相同的，所以考虑把它们并在一起计算。枚举 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = d\)&lt;/span&gt;，那会有多少个 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = d\)&lt;/span&gt; 呢？我们知道 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\gcd(i, n) = d\iff \gcd(\frac id, \frac nd) = 1\)&lt;/span&gt;，所以有 &lt;span class=&#34;math inline&#34;&gt;\(\phi(\frac nd)\)&lt;/span&gt; 个这样的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 是满足的。 &lt;span class=&#34;math display&#34;&gt;\[
=\frac12\sum_{d|n}\frac{n^2\phi(\frac nd)}{d} + \frac n2
\]&lt;/span&gt; 提出一个 &lt;span class=&#34;math inline&#34;&gt;\(n/2\)&lt;/span&gt;，然后换一下元 &lt;span class=&#34;math inline&#34;&gt;\(d&amp;#39; = n / d\)&lt;/span&gt;，得到 &lt;span class=&#34;math display&#34;&gt;\[
=\frac 12 n\left(\sum_{d&amp;#39;|n}d&amp;#39;\phi(d&amp;#39;) + 1\right)
\]&lt;/span&gt; 令 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = \displaystyle\sum_{d|n}d\phi(d)\)&lt;/span&gt;，则我们最终要求的就是 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\frac12(g(n) + 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt; 为积性函数，所以可以线性筛做到 &lt;span class=&#34;math inline&#34;&gt;\(O(n)-O(1)\)&lt;/span&gt; 的复杂度。下面考虑如何线性筛出 &lt;span class=&#34;math inline&#34;&gt;\(g(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;首先对于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为质数，显然 &lt;span class=&#34;math inline&#34;&gt;\(g(n) = 1 + n\phi(n) = 1 + n(n - 1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后考虑正在用 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 来筛 &lt;span class=&#34;math inline&#34;&gt;\(g(i\cdot p_j)\)&lt;/span&gt; 的过程。若 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, p_j) = 1\)&lt;/span&gt;，直接使用积性函数的性质即可。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(p_j|i\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(i = i&amp;#39;\cdot p_j^w\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(i&amp;#39;, p_j) = 1\)&lt;/span&gt;，然后可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
g(i\cdot p_j) &amp;amp;= g(i&amp;#39;)\cdot g(p_j^{w + 1})\\
g(i)&amp;amp;=g(i’)\cdot g(p_j^w)
\end{aligned}
\]&lt;/span&gt; 然后我们考虑计算 &lt;span class=&#34;math inline&#34;&gt;\(g(p_j^k)\)&lt;/span&gt;，显然地， &lt;span class=&#34;math display&#34;&gt;\[
g(p_j^k) = \sum_{w = 0}^kp_j^w\cdot\phi(p_j^w)
\]&lt;/span&gt; 而 &lt;span class=&#34;math inline&#34;&gt;\(\phi(p_j^w) = p_j^{w - 1}\cdot(p_j - 1)\)&lt;/span&gt;，所以 &lt;span class=&#34;math display&#34;&gt;\[
g(p_j^k) = \sum_{w = 0}^kp_j^{2w-1}(p_j - 1)
\]&lt;/span&gt; 于是 &lt;span class=&#34;math inline&#34;&gt;\(g(p_j^{w + 1}) = p_j^{2w + 1}(p_j - 1) + g(p_j^k)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;回到之前的两个式子，将两式相减，可以得到 &lt;span class=&#34;math display&#34;&gt;\[
g(i\cdot p_j) - g(i) = g(i&amp;#39;)\cdot p_j^{2w + 1}\cdot(p_j - 1)
\]&lt;/span&gt; 同理，由于 &lt;span class=&#34;math inline&#34;&gt;\(p_j|i\)&lt;/span&gt;，所以 &lt;span class=&#34;math display&#34;&gt;\[
g(i) - g(\frac{i}{p_j}) = g(i&amp;#39;)\cdot p_j^{2w - 1}\cdot(p_j - 1)
\]&lt;/span&gt; 所以两式相除消去 &lt;span class=&#34;math inline&#34;&gt;\(g(i&amp;#39;)\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
g(i\cdot p_j) = g(i) + \left(g(i) - g(\frac{i}{p_j})\right)\cdot p_j^2
\]&lt;/span&gt; 所以我们就在 &lt;span class=&#34;math inline&#34;&gt;\(O(n + T)\)&lt;/span&gt; 的时间内解决了这题。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p[maxn], flg[maxn], cntp;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, maxn - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!flg[i]) p[++cntp] = i, g[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= cntp &amp;amp;&amp;amp; i * p[j] &amp;lt;= maxn - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;; ++j)&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            flg[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i * p[j]] = g[i] + (g[i] - g[i / p[j]]) * p[j] * p[j];&lt;/span&gt;
&lt;span id=&#34;cb5-24&#34;&gt;&lt;a href=&#34;#cb5-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-25&#34;&gt;&lt;a href=&#34;#cb5-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb5-26&#34;&gt;&lt;a href=&#34;#cb5-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            g[i * p[j]] = g[i] * g[p[j]];&lt;/span&gt;
&lt;span id=&#34;cb5-27&#34;&gt;&lt;a href=&#34;#cb5-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb5-28&#34;&gt;&lt;a href=&#34;#cb5-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-29&#34;&gt;&lt;a href=&#34;#cb5-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T = read();&lt;/span&gt;
&lt;span id=&#34;cb5-30&#34;&gt;&lt;a href=&#34;#cb5-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb5-31&#34;&gt;&lt;a href=&#34;#cb5-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb5-32&#34;&gt;&lt;a href=&#34;#cb5-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read();&lt;/span&gt;
&lt;span id=&#34;cb5-33&#34;&gt;&lt;a href=&#34;#cb5-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, (g[n] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-34&#34;&gt;&lt;a href=&#34;#cb5-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-35&#34;&gt;&lt;a href=&#34;#cb5-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-36&#34;&gt;&lt;a href=&#34;#cb5-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary-4&#34;&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gcd(i, n) = \gcd(n - i, n)\)&lt;/span&gt;（更相减损术）&lt;/li&gt;
&lt;li&gt;对于很多项取值相等的项可以考虑提出来（类似整除分块的思想）&lt;/li&gt;
&lt;li&gt;对于积性函数是可以线性筛的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hdu-4944-fsfs-game&#34;&gt;&lt;a href=&#34;https://acm.hdu.edu.cn/showproblem.php?pid=4944&#34;&gt;hdu 4944 FSF’s game&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;见 &lt;a href=&#34;https://oi.imyangty.com/sol-hdu4944/&#34;&gt;题解 hdu 4944 FSF’s game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要就是把奇奇怪怪的东西化简了。把问题化归到求 LCMSUM 那道题去。&lt;/p&gt;
&lt;h2 id=&#34;bzoj-3601.-一个人的数论&#34;&gt;&lt;a href=&#34;https://hydro.ac/d/bzoj/p/3601&#34;&gt;BZOJ #3601. 一个人的数论&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;见 &lt;a href=&#34;https://oi.imyangty.com/sol-bzoj3601/&#34;&gt;题解 BZOJ #3601. 一个人的数论&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要是化简之后将自然数幂之和化开用高斯消元，之后 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 计算那个积性函数的值。&lt;/p&gt;
&lt;h2 id=&#34;p1829-国家集训队crash的数字表格-jzptab&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1829&#34;&gt;&lt;strong&gt;P1829&lt;/strong&gt; [国家集训队]Crash的数字表格 / JZPTAB&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;description-5&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\operatorname{lcm}(i, j)\bmod 20101009
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;solution-3&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;先把 lcm 变成 gcd： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{\gcd(i, j)}
\]&lt;/span&gt; 枚举 gcd： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^n\sum_{i = 1}^n\sum_{j = 1}^m\frac{ij}{d}[\gcd(i,j) = d]
\]&lt;/span&gt; 然后是经典套路： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^nd\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij\sum_{k\mid \gcd(i,j)}\mu(k)
\]&lt;/span&gt; 再然后，枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)\sum_{i = 1}^{\lfloor\frac nd\rfloor}\sum_{j = 1}^{\lfloor\frac md\rfloor}ij[k\mid i][k\mid j]
\]&lt;/span&gt; 之后应该就能化简了： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d = 1}^nd\sum_{k = 1}^{\lfloor\frac nd\rfloor}\mu(k)k^2\sum_{i = 1}^{\lfloor\frac{n}{kd}\rfloor}\sum_{j = 1}^{\lfloor\frac{m}{kd}\rfloor}ij
\]&lt;/span&gt; 后面这个 &lt;span class=&#34;math inline&#34;&gt;\(f(x,y)=\sum_{i= 1}^x\sum_{j= 1}^yij\)&lt;/span&gt; 可以化简成 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{n(n+ 1)m(m+1)}{4}\)&lt;/span&gt;，然后我们最终得到的式子就是 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{d=1}^nd\sum_{k=1}^{\lfloor\frac nd\rfloor}\mu(k)k^2f(\lfloor n/kd\rfloor, \lfloor m/kd\rfloor)
\]&lt;/span&gt; 我们令 &lt;span class=&#34;math inline&#34;&gt;\(S(n,m) = \displaystyle\sum_{k=1}^{\min(n,m)}\mu(k)k^2f(\lfloor n/k\rfloor, \lfloor m/k\rfloor)\)&lt;/span&gt;。这个东西可以先筛出 &lt;span class=&#34;math inline&#34;&gt;\(\mu(n)n^2\)&lt;/span&gt; 之后用整除分块来做。然后，我们的答案明显为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{d= 1}^{\min(n,m)}dS(\lfloor n/d\rfloor,\lfloor m/d\rfloor)\)&lt;/span&gt;。可以再套一层分块来做。&lt;/p&gt;
&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;
&lt;p&gt;取模和 ll 的细节是有点烦的。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; isp[maxn], p[maxn], mu[maxn], cnt;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint sum[maxn];&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; sieve() {&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mu[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, N) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!isp[i]) p[++cnt] = i, mu[i] = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= cnt &amp;amp;&amp;amp; i * p[j] &amp;lt;= N; ++j) {&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            isp[i * p[j]] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i % p[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            mu[i * p[j]] = -mu[i];&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, N) sum[i] = sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + (modint)i * i * mu[i];&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint f(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; modint(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * x * (x + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; % mod) * modint(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * y * (y + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; % mod);}&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint S(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l), top);&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += (sum[r] - sum[l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) * f(n / l, m / l);&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    sieve();&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m; read(n, m);&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = min(n, m);&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r; l &amp;lt;= top; l = r + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        r = min(n / (n / l), m / (m / l), top);&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans += (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) * (l + r) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; % mod * S(n / l, m / l);&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>2021年2月 OI 学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-02/</link>
        <pubDate>Mon, 01 Feb 2021 13:55:30 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-02/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg55.webp" alt="Featured image of post 2021年2月 OI 学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;仍旧菜的抠脚。 WC 2021 rp ++&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;轮廓线 dp&lt;/li&gt;
&lt;li&gt;上下界网络流&lt;/li&gt;
&lt;li&gt;Manacher&lt;/li&gt;
&lt;li&gt;最小表示法&lt;/li&gt;
&lt;li&gt;exKMP&lt;/li&gt;
&lt;li&gt;SA&lt;/li&gt;
&lt;li&gt;多项式乘法逆&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/02/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1198D Rectangle Painting 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二维区间 dp，以 x 和 y 方向分别划分即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU4283 You Are The One&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较清奇的区间 dp，考虑第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个人放到第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个出场造成的影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11270 Tiling Dominoes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;插头 dp，参见&lt;a href=&#34;https://www.luogu.com.cn/blog/cluster-yw/uva11270&#34; title=&#34;大佬题解&#34;&gt;大佬题解&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU3507 Print Article&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;斜率优化 dp&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/02/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3254 圆桌问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络流。源向单位连大小为单位人数的边，餐桌向汇连大小为餐桌人数的边，每个单位连每个餐桌，跑最大流，满流有解，找流有东西的边输出即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2763 试题库问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络流。试题向属于的类型连 1，类型向汇连需要的题数，跑最大流，满流有解，输出方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2891 [USACO07OPEN]Dining G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拆点，源-&amp;gt;食物-&amp;gt;牛in-&amp;gt;牛out-&amp;gt;饮料-&amp;gt;汇，保证流过牛的流量为 1，跑最大流即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3805 【模板】manacher算法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;manacher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1368 【模板】最小表示法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最小表示法&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/02/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF734E Anton and Tree&lt;/strong&gt; ————————&lt;strong&gt;&lt;em&gt;AC500 祭&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1304&#34; title=&#34;缩点 + 树的直径&#34;&gt;缩点 + 树的直径&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF911F Tree Destruction&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1305&#34; title=&#34;树的直径 + 贪心&#34;&gt;树的直径 + 贪心&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/02/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1000E We Need More Bosses&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1306&#34; title=&#34;边双 + 缩点 + 树的直径&#34;&gt;边双 + 缩点 + 树的直径&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2766 最长不下降子序列问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拆点 + 最大流&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/02/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WC 2021&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Codeforces Round #699 (Div. 2)&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A + B + C&lt;/strong&gt; rk2134 该死终于能做三道题出来了/kk&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/02/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WC2021 10 + 50 + 20 = 80，Cu&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;LOJ#115. 无源汇有上下界可行流&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上下界网络流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#116. 有源汇有上下界最大流&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上下界网络流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5192 Zoj3229 Shoot the Bullet东方文花帖【模板】有源汇上下界最大流&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建模 + 上下界网络流&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/02/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2764 最小路径覆盖问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最小路径覆盖数 = 点数 - 最大匹配数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2765 魔术球问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上题的加强版，从小往大枚举答案，每次在残量网络上继续跑 Dinic&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2754 [CTSC1999]家园 / 星际转移问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最大流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4015 运输问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;费用流。套路：费用取负可以得到最大费用最大流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4016 负载平衡问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;费用流&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/02/08&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1475D Cleaning the Phone&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;补题，贪心 + 二分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1475F Unusual Matrix&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;异或运算的性质：考虑先异或两个矩阵，然后判断这个矩阵是否能变为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1475G Strange Beauty&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较神奇的数论dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1476C Longest Simple Cycle&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp，注意 &lt;code&gt;long long&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2770 航空路线问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最大费用最大流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4014 分配问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分图最大权匹配，费用流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4013 数字梯形问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拆点 + 费用流，注意细节&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/02/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1476D Journey&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记忆化搜索/dp。注意到其实就是最多往左走的加上最多往右走的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1476E Pattern Matching&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符串哈希/Trie + 拓扑排序。找到 s 能匹配的所有 p，然后加边，拓扑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2580 于是他错误的点名开始了&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trie 模板，注意数组开够&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SP4033 PHONELST - Phone List&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trie，如果在插入过程中遇到结束标记或者没有建立新的节点，则说明有前缀包含&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU4825 Xor Sum&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;01-Trie 模板，考虑将每个数字化成 01 二进制串插入 Trie 树。为了找到异或的最大值需往反方向下跳（相同为 0，不同为 1）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDU5536 Chip Factory&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;01-Trie。要开够空间，多测清空。注意 &lt;span class=&#34;math inline&#34;&gt;\(i,j,k\)&lt;/span&gt; 两两不同，需要删点/加点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4551 最长异或路径&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;01-Trie。考虑处理每个点到根异或和 &lt;span class=&#34;math inline&#34;&gt;\(d_i\)&lt;/span&gt;，则答案为 &lt;span class=&#34;math inline&#34;&gt;\(\max\lbrace d_x, d_y\rbrace\)&lt;/span&gt;。因为到根重复的一段会被消去（异或运算的性质）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3358 最长k可重区间集问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较精巧的网络流建模，费用流。&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/02/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3808 【模板】AC自动机（简单版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AC 自动机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3796 【模板】AC自动机（加强版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AC 自动机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2375 [NOI2014] 动物园&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP，首先求出所有的 fail 然后建好 fail 树，在 fail 树上面进行动态统计即可。&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/02/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5357 【模板】AC自动机（二次加强版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;避免每次跳 fail，直接建 fail 树最后树上差分即可。&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/02/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1485B Replace and Keep Sorted&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/02/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4782 【模板】2-SAT 问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2-SAT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4171 [JSOI2010]满汉全席&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2-SAT，读清楚题意是每种食材要么满要么汉&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2341 [USACO03FALL][HAOI2006]受欢迎的牛 G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tarjan 求 scc，只需要找出出度为 0 的 scc 即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2002 消息扩散&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tarjan scc，找入度为 0 的点，即没有别的城市传信的城市&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Educational Codeforces Round 104 (Rated for Div. 2)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + D，赛后补 B，C&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/02/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;P3357 &lt;strong&gt;最长k可重线段集问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;费用流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4012 深海机器人问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;费用流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1251 餐巾计划问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;费用流&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Codeforces Round #702 (Div. 3)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;赛中 A + B + C + D + F，赛后补 E &lt;strong&gt;不开 &lt;code&gt;long long&lt;/code&gt; 见祖宗&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/02/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1490G Old Floppy Drive&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;赛后补题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1481D AB Graph&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;图论 + 构造。比较巧妙的构造题&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/02/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA1660 电视网络 Cable TV Network&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最小割&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/02/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1481E Sorting Books&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较诡诈的 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3809 【模板】后缀排序&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学习 SA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4051 [JSOI2007]字符加密&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;断环为链，即倍长串之后跑 SA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BZOJ#3771. Triple&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1311&#34; title=&#34;NTT + 容斥&#34;&gt;NTT + 容斥&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2408 不同子串个数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4391 [BOI2009]Radio Transmission 无线传输&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP 求循环节：&lt;span class=&#34;math inline&#34;&gt;\(N - fail(N)\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA10298 Power Strings&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1200E Compress Words&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找后缀和前缀的最长公共部分，那就 KMP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5410 【模板】扩展 KMP（Z 函数）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Z 算法&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/02/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4238 【模板】多项式乘法逆&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多项式乘法逆，倍增&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/02/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4173 残缺的字符串&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NTT 做带通配符的字符串匹配&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF528D Fuzzy Search&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;myy 论文题，单独考虑每个字符跑 NTT&lt;/p&gt;
&lt;h3 id=&#34;section-19&#34;&gt;21/02/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3518 [POI2011]SEJ-Strongbox&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1315&#34; title=&#34;gcd&#34;&gt;gcd&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年1月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2021-01/</link>
        <pubDate>Fri, 01 Jan 2021 23:33:40 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2021-01/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg54.webp" alt="Featured image of post 2021年1月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;新年快乐！终于活过 2020 年了。 WC2021 GZOI2021 NOI2021（如果有可能的话）rp++&lt;/p&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;欧拉函数&lt;/li&gt;
&lt;li&gt;(ex)BSGS&lt;/li&gt;
&lt;li&gt;矩阵乘法的应用&lt;/li&gt;
&lt;li&gt;高斯消元&lt;/li&gt;
&lt;li&gt;基础分块&lt;/li&gt;
&lt;li&gt;基础线性代数&lt;/li&gt;
&lt;li&gt;数位 dp&lt;/li&gt;
&lt;li&gt;复杂度分析&lt;/li&gt;
&lt;li&gt;狄利克雷卷积&lt;/li&gt;
&lt;li&gt;莫比乌斯反演&lt;/li&gt;
&lt;li&gt;杜教筛&lt;/li&gt;
&lt;li&gt;FFT&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;21/01/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;EOJ monthly 2020.01 A+C+E rk80&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P1072 [NOIP2009 提高组] Hankson 的趣味题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要特别注意处理 &lt;span class=&#34;math inline&#34;&gt;\(a_0,a_1,b_0,b_1&amp;gt;\sqrt n\)&lt;/span&gt; 的情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2158 [SDOI2008]仪仗队&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设左下角 &lt;span class=&#34;math inline&#34;&gt;\((0, 0)\)&lt;/span&gt;，右上角 &lt;span class=&#34;math inline&#34;&gt;\((n-1, n - 1)\)&lt;/span&gt;。抛开 &lt;span class=&#34;math inline&#34;&gt;\((1,0)(0,1)(1,1)\)&lt;/span&gt; 三个点，发现能看到的关于对角线对称，考虑一半即可。这一半就是求 &lt;span class=&#34;math inline&#34;&gt;\(1\le x\lt y\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(x \perp y\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 对数，发现对于每个 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 来说这样的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 对数即为 &lt;span class=&#34;math inline&#34;&gt;\(\varphi(y)\)&lt;/span&gt;。 答案为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle3 + 2\sum_{i=2}^{n-1}\varphi(i)\)&lt;/span&gt;，特判 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 的情况&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;21/01/06&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;POJ3696 The Luckiest number&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欧拉定理的推论 https://imyangty.com/oi/1280&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3846 [TJOI2007] 可爱的质数/【模板】BSGS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BSGS&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;21/01/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4861 按钮&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求满足 &lt;span class=&#34;math inline&#34;&gt;\(k^x\equiv 1\pmod m\)&lt;/span&gt; 的最小正整数 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。由裴蜀定理可得有解的充要条件是 &lt;span class=&#34;math inline&#34;&gt;\(\gcd(k, m) = 1\)&lt;/span&gt;，所以直接 BSGS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2485 [SDOI2011]计算器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速幂取模 + exgcd + BSGS 综合题&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;21/01/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4195 【模板】扩展BSGS/SP3105 MOD - Power Modulo Inverted&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;exBSGS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1063B Labyrinth&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;双端队列优化 01bfs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF786B Legacy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线段树优化建图模板&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;21/01/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BZOJ2973 石子游戏&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构造转移矩阵，&lt;a href=&#34;https://imyangty.com/oi/1287&#34; title=&#34;矩阵乘法&#34;&gt;矩阵乘法&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;21/01/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3389 【模板】高斯消元法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高斯消元&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ6208 树上询问&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1288&#34; title=&#34;线段树维护矩阵和&#34;&gt;线段树维护矩阵和&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4035 [JSOI2008]球形空间产生器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推式子，二次项消去后高斯消元&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;21/01/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6277. 数列分块入门 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间修改单点求值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6278. 数列分块入门 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间修改区间询问某数排名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3372 【模板】线段树 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分块重写&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;21/01/16&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF149D Coloring Brackets&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间 dp（记忆化搜索）， &lt;span class=&#34;math inline&#34;&gt;\(f(i, j, k_1, k_2)\)&lt;/span&gt; 为合法序列 &lt;span class=&#34;math inline&#34;&gt;\([i,j]\)&lt;/span&gt;，两端状态 &lt;span class=&#34;math inline&#34;&gt;\(k_1, k_2\)&lt;/span&gt;，需注意合法序列两端未必就是匹配的，所以之前定义 &lt;span class=&#34;math inline&#34;&gt;\(f(i, j, k)\)&lt;/span&gt; 是错误的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF242E XOR on Segment&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间 xor 区间求和，按位拆分方便处理区间 xor，对于每一位都建一棵线段树，xor 就是集体取反。&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;21/01/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF607A Chain Reaction&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性 dp，&lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为从位置 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 开始激活最多保留的激光塔个数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1005 [NOIP2007 提高组] 矩阵取数游戏&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很水的区间dp，难点高精，int128 过之&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6279. 数列分块入门 3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间修改区间询问某数前驱&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;21/01/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6280. 数列分块入门 4&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间修改区间查询&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6281. 数列分块入门 5&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间开根区间查询&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;21/01/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;POJ1830 开关问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高斯消元求解 xor 方程组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1102 A-B 数对&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;std::map&lt;/code&gt; 或二分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6282. 数列分块入门 6&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单点插入单点查询（块状链表）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6283. 数列分块入门 7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间乘区间加单点查询&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6284. 数列分块入门 8&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间查询某数出现个数并赋值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4168 [Violet]蒲公英&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;强制在线区间众数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LOJ#6285. 数列分块入门 9&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间众数&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;21/01/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4127 [AHOI2009]同类分布&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P2657 [SCOI2009] windy 数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数位 dp&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;21/01/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Codeforces Round #697 (Div. 3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A+B+C+E，是否 fst 未知&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;21/01/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Codeforces Round #697 (Div. 3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;没有 fst，A+B+C+E&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3455 [POI2007]ZAP-Queries&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P2522 [HAOI2011]Problem b&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P2257 YY的GCD&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫比乌斯反演&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;21/01/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4213 【模板】杜教筛（Sum）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;杜教筛&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;21/01/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Codeforces Round #698 (Div. 2)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A + B，菜的我直接爬&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;21/01/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3803 【模板】多项式乘法（FFT）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FFT 板子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1919 【模板】A*B Problem升级版（FFT快速傅里叶）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FFT 实现高精度乘法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Educational Codeforces Round 103&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;菜的抠脚依旧 A + B，C 没调出来&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;21/01/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3338 [ZJOI2014]力&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转化式子之后使用 FFT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3312 [SDOI2014]数表&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫反 + 树状数组，比较巧妙&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3377 【模板】左偏树（可并堆）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;左偏树模板&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;21/01/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3723 [AH2017/HNOI2017]礼物&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FFT/NTT 加速卷积&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2224 [HNOI2001]产品加工&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;奇葩的状态定义：https://imyangty.com/oi/1298&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2020年12月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2020-12/</link>
        <pubDate>Tue, 01 Dec 2020 17:35:25 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2020-12/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg53.webp" alt="Featured image of post 2020年12月 OI学习记录" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;11 月是水过来的，12 月活过 NOIP 之后要努力了。 第一周复习 NOIP，之后到寒假前全力冲刺弱的板块，起码达到提高组水平：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;贪心&lt;/li&gt;
&lt;li&gt;二分&lt;/li&gt;
&lt;li&gt;数论&lt;/li&gt;
&lt;li&gt;组合计数&lt;/li&gt;
&lt;li&gt;分治&lt;/li&gt;
&lt;li&gt;dp&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Trie&lt;/li&gt;
&lt;li&gt;平衡树（Treap、Splay、FHQ-Treap）&lt;/li&gt;
&lt;li&gt;exCRT&lt;/li&gt;
&lt;li&gt;拉格朗日插值&lt;/li&gt;
&lt;li&gt;整除分块&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;20/12/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1052 过河&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp，需要对坐标轴上进行缩点，（特判 &lt;span class=&#34;math inline&#34;&gt;\(s=t\)&lt;/span&gt;）考虑如果一个石头无论如何可以被前面的石头不跳过，就直接缩，之后就是 &lt;span class=&#34;math inline&#34;&gt;\(f_i=\min_{j\in[s,t]}\lbrace f_{i-j}+[i为石子] \rbrace\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3951 小凯的疑惑&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打表找规律，答案为 &lt;span class=&#34;math inline&#34;&gt;\(ab-a-b\)&lt;/span&gt;，证明一下写&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SP666 VOCV - Con-Junctions&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一问直接照搬没有上司的舞会，第二问根据乘法原理和加法原理分类讨论即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1099 树网的核&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;题面十分毒瘤的树形 dp，综合考察了直径的性质。&lt;a href=&#34;https://imyangty.com/oi/1234&#34;&gt;https://imyangty.com/oi/1234&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;20/12/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5664 Emiya 家今天的饭&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1235&#34; title=&#34;计数 dp&#34;&gt;计数 dp&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5858 「SWTR-03」Golden Sword&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性 dp，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 为放入第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个元素后锅中有 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个元素可达到的最大耐久值，显然有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_{i,j}=\min_{k=\max(0,1-j)}^{\min(s,w+i-j)}\lbrace f_{i-1,j-1+k}+j\times a_i\rbrace
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为我们要拿掉的元素数量。这样做复杂度可视为 &lt;span class=&#34;math inline&#34;&gt;\(O(nws)\)&lt;/span&gt;，单调队列稍加优化可达到 &lt;span class=&#34;math inline&#34;&gt;\(O(nw)\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;20/12/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5017 摆渡车&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1237&#34; title=&#34;斜率优化&#34;&gt;斜率优化&lt;/a&gt;，&lt;strong&gt;在奇奇怪怪的问题上调了很久&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;noip-爆炸&#34;&gt;20/12/05 NOIP 爆炸&lt;/h3&gt;
&lt;h3 id=&#34;section-3&#34;&gt;20/12/07&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3174 [HAOI2009]毛毛虫&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树形 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA1401 Remember the Word&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trie 优化 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11732 “strcmp()” Anyone?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trie 上计数 &lt;a href=&#34;https://imyangty.com/oi/1241&#34;&gt;https://imyangty.com/oi/1241&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;20/12/12&lt;/h3&gt;
&lt;p&gt;学习平衡树&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3369 【模板】普通平衡树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Treap 和 Splay 通过&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6136 【模板】普通平衡树（数据加强版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Treap 通过&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;20/12/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6136 【模板】普通平衡树（数据加强版）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Splay 通过&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;20/12/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2286 [HNOI2004]宠物收养场&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平衡树，练习 Splay&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3391 【模板】文艺平衡树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Splay 通过&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1486 [NOI2004]郁闷的出纳员&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平衡树裸题，运用了差量思想。考虑全局变量记录所有人工资的加减情况，然后插入时插入 &lt;span class=&#34;math inline&#34;&gt;\(k-\Delta\)&lt;/span&gt; 以消除影响。删除时可将所有会被删除的集中起来然后直接删掉。注意 &lt;code&gt;kth()&lt;/code&gt; 函数的实现是求第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 大&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;20/12/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3165 [CQOI2014]排序机械臂&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;调了三天的题，&lt;a href=&#34;https://imyangty.com/oi/1261&#34; title=&#34;Splay 维护区间信息&#34;&gt;Splay 维护区间信息&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 FHQ-Treap 通过普通平衡树和文艺平衡树&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section-8&#34;&gt;20/12/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2596 [ZJOI2006]书架&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FHQ 的一个 trick：可以记录每个节点的父亲，这样可以快速查找某值在序列中的位置，同时不要忘了 pushup&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4146 序列终结者&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平衡树维护区间信息，标记比较多，注意维护即可&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;20/12/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3224 [HNOI2012]永无乡&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启发式合并 FHQ-Treap，使用并查集维护连通性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5338 [TJOI2019]甲苯先生的滚榜&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平衡树板子，卡常&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;20/12/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;POJ2689 Prime Distance&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1271&#34; title=&#34;区间筛素数板子&#34;&gt;区间筛素数板子&lt;/a&gt;，注意特判&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;20/12/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1463 [POI2002][HAOI2007]反素数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dfs&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;20/12/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11526 H(n)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1273&#34; title=&#34;整除分块&#34;&gt;整除分块&lt;/a&gt;，&lt;span class=&#34;math inline&#34;&gt;\(O(\sqrt n)\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2261 [CQOI2007]余数求和&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1273&#34; title=&#34;整除分块 + 等差数列&#34;&gt;整除分块 + 等差数列&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;20/12/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2260 [清华集训2012]模积和&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推式子 + 整除分块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3935 Calculating&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推式子 + 整除分块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4781 【模板】拉格朗日插值&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1275&#34; title=&#34;拉插&#34;&gt;拉插&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;20/12/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4280 [AHOI2008]逆序对&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性 dp + 树状数组，注意讨论 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt; 可能产生的贡献&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4777 【模板】扩展中国剩余定理（EXCRT）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;exCRT&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;20/12/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3868 [TJOI2009]猜数字&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CRT，需要快速乘防溢出&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;20/12/31&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4774 [NOI2018] 屠龙勇士&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;细节相当繁琐的 &lt;a href=&#34;https://imyangty.com/oi/1277&#34; title=&#34;exCRT&#34;&gt;exCRT&lt;/a&gt;，第一道黑题祭&lt;/p&gt;
</description>
        </item>
        <item>
        <title>网络流记录合集</title>
        <link>https://oi.imyangty.com/summary-networkflow/</link>
        <pubDate>Mon, 23 Nov 2020 22:02:23 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-networkflow/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg15.webp" alt="Featured image of post 网络流记录合集" /&gt;&lt;p&gt;网络流好毒瘤 qwq&lt;/p&gt;
&lt;h2 id=&#34;最大流&#34;&gt;最大流&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;20/11/21 &lt;strong&gt;P3376 【模板】网络最大流&lt;/strong&gt; 学习最基础的网络流&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20/11/22 &lt;strong&gt;P1343 地震逃生&lt;/strong&gt; 最大流模板&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20/11/23 &lt;strong&gt;P3153 舞会&lt;/strong&gt; 最大流 + 二分答案 &lt;a href=&#34;https://imyangty.com/oi/1218&#34;&gt;https://imyangty.com/oi/1218&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/02 &lt;strong&gt;P3254 圆桌问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;源向单位连大小为单位人数的边，餐桌向汇连大小为餐桌人数的边，每个单位连每个餐桌，跑最大流，满流有解，找流有东西的边输出即可&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/02 &lt;strong&gt;P2763 试题库问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;试题向属于的类型连 1，类型向汇连需要的题数，跑最大流，满流有解，输出方案。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20/02/02 &lt;strong&gt;P2891 [USACO07OPEN]Dining G&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆点，源-&amp;gt;食物-&amp;gt;牛in-&amp;gt;牛out-&amp;gt;饮料-&amp;gt;汇，保证流过牛的流量为 1，跑最大流即可&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/04 &lt;strong&gt;P2766 最长不下降子序列问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一问使用 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt; dp，然后拆点处理第二问和第三问。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/07 &lt;strong&gt;P2764 最小路径覆盖问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从每个路径长度为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 开始想，此时有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 条路径，然后考虑合并两个相邻的路径，发现每次合并都会造成路径个数减一。所以考虑使用网络流来做这件事情。 建源汇，拆点成入和出，源连向所有的入，所有的出连向汇，对于原图的每一条边将入连向出。所有的边容量都是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，这样就可以跑出新图的最大匹配，使用原图的点数减去即可&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/07 &lt;strong&gt;P2765 魔术球问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上题的加强版，考虑把每个柱子都看成一条路径，然后每个点像上题一样连边。从小到大枚举答案，在残量网络上跑 Dinic 跑出增加的流量，判断是否可行，然后像上题一样输出路径。 需要注意数组一定要开够，往大了开绝对不会出问题，然后注意点编号的映射&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/07 &lt;strong&gt;P2754 [CTSC1999]家园 / 星际转移问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于每天每个太空站都建点，枚举天数逐天加飞船边判断能流多少，流到了就成功了。一开始先用并查集判无解的情况。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/09/01 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2423&#34;&gt;P2423 [HEOI2012]朋友圈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;求原图最大团等价于求补图最大独立集，建模成&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2423&#34;&gt;二分图&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/09/02 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1231&#34;&gt;P1231 教辅的组成&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆点最大流。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/09/02 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2472&#34;&gt;P2472 [SCOI2007]蜥蜴&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;蜥蜴建成流，柱子拆点容量为高度，跑最大流即可。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;费用流&#34;&gt;费用流&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;20/11/23 &lt;strong&gt;P3381 【模板】最小费用最大流&lt;/strong&gt; 学习基础费用流&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/07 &lt;strong&gt;P4015 运输问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基础费用流，第二问求最大费用时直接重新建图，把所有费用取反相反数然后求出的最小费用取相反数就是最大费用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/07 &lt;strong&gt;P4016 负载平衡问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不用拆点，源向每个点连对应初始货量的边，费用为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，每个点向汇连对应最后要达到的边，费用为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，相邻两个点之间连双向边，容量无限，费用 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，跑费用流即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/08 &lt;strong&gt;P2770 航空路线问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先逆向看问题，把问题转化为找到两条从左到右不相交的路径，然后在航线连边，费用 1，容量 1。拆点。每个入点向出点连容量 1，费用 0，特别地，最左和最右连的容量为 2（因为要走两次），跑最大费用最大流。最大流为 2 说明有解，城市数即为费用；最大流为 1 时特判航线从最左直飞到最右的情况即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/08 &lt;strong&gt;P4014 分配问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;二分图最大权完美匹配，KM 和费用流均可过。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/08 &lt;strong&gt;P4013 数字梯形问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拆点 + 费用流。第一个子任务对应的是所有边容量为 1，第二个把原点与拆点之间的容量改成 inf，&lt;strong&gt;同时把最后一排到 t 的容量改为 inf&lt;/strong&gt;，第三个直接把剩余除了 s 到第一排的都改为 inf 即可。原点与拆点间的费用为点权，剩余费用为 0。跑最大费用最大流。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/09 &lt;strong&gt;P3358 最长k可重区间集问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所有重复了的区间最多被选择 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次，所以考虑流量为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 寻找费用流解法。离散化每个端点，然后从左到右连流量无限费用 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的边，然后对于每个区间从左往右连流量为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 费用为区间长度的边。跑最大费用最大流。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/16 &lt;strong&gt;P3357 最长k可重线段集问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;和上题基本类似，我们会发现只需要投影到 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 轴上做并判断与 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 轴垂直的线段即可。考虑将每个端点横坐标乘以二，对于 &lt;span class=&#34;math inline&#34;&gt;\((x_1, x_2)\)&lt;/span&gt; 类型的我们再将 &lt;span class=&#34;math inline&#34;&gt;\(x_1 + 1\)&lt;/span&gt;，对于 &lt;span class=&#34;math inline&#34;&gt;\((x,x)\)&lt;/span&gt; 类型的变为 &lt;span class=&#34;math inline&#34;&gt;\((x, x + 1)\)&lt;/span&gt;，不难发现这样可以轻松处理垂直的线段。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/16 &lt;strong&gt;P4012 深海机器人问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较简单的费用流。对于网格内每个能走的路径建两条边，一条表示取海洋生物，一条不取。源向每个起点连，每个终点连向汇。跑最大费用最大流即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/16 &lt;strong&gt;P1251 餐巾计划问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;非常清奇的建模。显然把每天拆成早上和晚上，&lt;strong&gt;每天晚上都会获得 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt; 条脏餐巾，所以源向第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天晚上连边&lt;/strong&gt;，同理，每天早上都会送出去 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt; 条干净餐巾，所以往汇连。购买操作从源买即可，算起费用，洗餐巾的操作同理。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/09/03 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4452&#34;&gt;P4452 [国家集训队]航班安排&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对每个包机请求拆点来做。将飞机视作流。&lt;/p&gt;
&lt;p&gt;对于一个需求，如果 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 能飞到起点，那么从假源点连 &lt;span class=&#34;math inline&#34;&gt;\((s_0, i_0 +\infty, w(0, a_i))\)&lt;/span&gt;，如果能从终点飞回 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，那么连 &lt;span class=&#34;math inline&#34;&gt;\((i_1, t, +\infty, w(b_i, 0)\)&lt;/span&gt;，为了保证只有一架飞机飞连 &lt;span class=&#34;math inline&#34;&gt;\((i_0, i_1, t, -c)\)&lt;/span&gt;（因为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 是净利润）。之后能一个飞完到另一个的也都连边，最后连 &lt;span class=&#34;math inline&#34;&gt;\((s, s_0, k, 0)\)&lt;/span&gt;。跑最小费用最大流然后取相反数。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最小割&#34;&gt;最小割&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;21/02/18 &lt;strong&gt;UVA1660 电视网络 Cable TV Network&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑枚举不连通的两个点，作为源和汇。然后拆点，连容量为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的边，再把原来的无向图的边化为出点到入点容量为 inf 的边，跑最大流就可以求出最小割，最小割即为容量为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的边数——去掉的点数。如果最小割为 inf 说明没办法使图不连通。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/09/01 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2057&#34;&gt;P2057 [SHOI2007]善意的投票 / [JLOI2010]冠军调查&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最小割之集合划分问题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/09/01 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4126&#34;&gt;P4126 [AHOI2009]最小割&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/note-bi-graph-and-networkflow/&#34;&gt;最小割的可行边和必须边问题&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/09/11 &lt;strong&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2805&#34;&gt;P2805 [NOI2009] 植物大战僵尸&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p2805/&#34;&gt;最大权闭合图&lt;/a&gt;，注意到存在环，所以需要拓扑排序把环先去掉。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;上下界网络流&#34;&gt;上下界网络流&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;21/02/06 &lt;strong&gt;LOJ#115. 无源汇有上下界可行流&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无源汇有上下界可行流，考虑低保网络和增量网络，为了使增量网络和低保网络会在一起之后流量守恒，需建虚拟源/汇使得多了的流量有归宿&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/06 &lt;strong&gt;LOJ#116. 有源汇有上下界最大流&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;转换模型，从原来的 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 向 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 连 &lt;span class=&#34;math inline&#34;&gt;\([0,+\infty)\)&lt;/span&gt; 的边，保证源汇点流量平衡，然后就可以找到一个可行流（这个可行流的流量即为 &lt;span class=&#34;math inline&#34;&gt;\(&amp;lt;t,s&amp;gt;\)&lt;/span&gt; 的流量。之后在残量网络上跑从 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; 的最大流榨干剩余的流量即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21/02/06 &lt;strong&gt;P5192 Zoj3229 Shoot the Bullet东方文花帖【模板】有源汇上下界最大流&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;源向每天连 &lt;span class=&#34;math inline&#34;&gt;\([0,D_i]\)&lt;/span&gt; 的边，每天向对应的每个少女连对应 &lt;span class=&#34;math inline&#34;&gt;\([L,R]\)&lt;/span&gt; 的边，每个少女向汇连 &lt;span class=&#34;math inline&#34;&gt;\([G_i,+\infty)\)&lt;/span&gt; 的边，然后跑有源汇上下界最大流&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>2020年11月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2020-11/</link>
        <pubDate>Mon, 02 Nov 2020 19:32:08 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2020-11/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg52.webp" alt="Featured image of post 2020年11月 OI学习记录" /&gt;&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;撑过 CSP 复赛（确信）&lt;/li&gt;
&lt;li&gt;dpdpdp&lt;/li&gt;
&lt;li&gt;dsdsds&lt;/li&gt;
&lt;li&gt;数论数论数论&lt;/li&gt;
&lt;li&gt;图论图论图论&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;树上差分&lt;/li&gt;
&lt;li&gt;换根 dp&lt;/li&gt;
&lt;li&gt;扫描线&lt;/li&gt;
&lt;li&gt;网络流基础&lt;/li&gt;
&lt;li&gt;斜率优化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;20/11/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3128 [USACO15DEC]Max Flow P&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树上差分模板&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4408 [NOI2003]逃学的小孩&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求直径并枚举点即可，开 &lt;code&gt;long long&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2052 [NOI2011]道路修建&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;水&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1967 货车运输&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kruskal 求最大瓶颈生成森林，然后树剖处理路径上最小边的询问&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;20/11/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1983 车站分级&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建图，拓扑排序找层数即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2597 [ZJOI2012]灾难&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一道紫题，思路比较巧妙。 首先对图拓扑排序，建出的拓扑序列保证后面的不是前面的猎物。然后尝试建一棵树，保证根节点灭绝后整个子树会跟着灭绝。考虑按照拓扑序列给树加点，每次将一个点加到其所有食物的 LCA 上（拓扑序保证了这些食物已经被加进树里面），求 LCA 的过程使用倍增维护。然后 dfs 一遍求出所有节点的子树大小即可。总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log n+n\log n)\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;20/11/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3478 [POI2008]STA-Station&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;换根 dp 板子题，考虑当前节点的贡献以及父亲节点的贡献即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2986 [USACO10MAR]Great Cow Gathering G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还是换根 dp，&lt;strong&gt;ans 初始值要赋超级大（1e18）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3047 [USACO12FEB]Nearby Cows G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;换根 dp，&lt;span class=&#34;math inline&#34;&gt;\(f_{i,k}\)&lt;/span&gt; 为答案，&lt;span class=&#34;math inline&#34;&gt;\(g_{i,k}\)&lt;/span&gt; 表示点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的儿子中到 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的距离不超过 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的权值和，则 &lt;span class=&#34;math inline&#34;&gt;\(f_{v,k}=f_{u,k-1}+g_{v,k}-g_{v,k-2}\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF1187E Tree Painting&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;题意：给定一棵n个点的树 初始全是白点 要求你做n步操作，每一次选定一个与一个黑点相隔一条边的白点，将它染成黑点，然后获得该白点被染色前所在的白色联通块大小的权值。 第一次操作可以任意选点。 求可获得的最大权值 设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为先选 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 号点获得的最大答案，&lt;span class=&#34;math inline&#34;&gt;\(g_u\)&lt;/span&gt; 为先选 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 点在子树中的最大答案，则 &lt;span class=&#34;math inline&#34;&gt;\(g_u=size(u)+\sum g_v\)&lt;/span&gt;，然后通过换根求出 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h3 id=&#34;csp-爆炸&#34;&gt;20/11/07 csp 爆炸&lt;/h3&gt;
&lt;h3 id=&#34;section-3&#34;&gt;20/11/09&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4427 [BJOI2018]求和&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;复习树剖模板&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1944 最长括号匹配&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性 dp，使用 dp 解决括号串匹配问题，找准转移关键即可。&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;20/11/10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2572 [SCOI2010]序列操作&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sb 题，&lt;strong&gt;区间推平的时候要清空反转标记&lt;/strong&gt;，维护区间和，前缀 0/1，后缀 0/1，最大连续 0/1 和两个懒标记即可。&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;20/11/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1772 [ZJOI2006]物流运输&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较巧的线性 dp，设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为到第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天为止的最少花费。转移时对于第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天，倒序枚举天数 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，意思为从第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 天开始改线路，同时记录 &lt;span class=&#34;math inline&#34;&gt;\(\[j,i\]\)&lt;/span&gt; 天不可用的点，跑最短路即可。 有 &lt;span class=&#34;math inline&#34;&gt;\(f_i=\min\lbrace f_{j-1}+k+\operatorname{dis}(1,m)\cdot (j-i+1)\rbrace\)&lt;/span&gt;，即改了线之后的最短路乘以改线后的天数，并寻找最佳改线的时间点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]=-k;&lt;span class=&#34;co&#34;&gt;//边界条件&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;i&amp;lt;=n;i++)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;j&amp;lt;=m;j++)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now[j]=&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//now[u] 维护在 [j,i] 天区间内点 u 是否可用&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j=i;j&amp;gt;=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;j--)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;u&amp;lt;=m;u++)&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(avl[u][j])&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    now[u]=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll dis=dij();&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(dis&amp;gt;=&lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//如果已经无法继续到达就可以直接结束&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i]=&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;min(f[i],f[j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]+(i-j+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)*dis+k);&lt;span class=&#34;co&#34;&gt;//状态转移&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;section-6&#34;&gt;20/11/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5490 【模板】扫描线&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扫描线求面积并模板&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1856 [USACO5.5]矩形周长Picture&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扫描线求周长并模板&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;20/11/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1502 窗口的星星&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转化成扫描线问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2146 [NOI2015]软件包管理器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树剖，对于每个安装操作，统计从根到该节点上的和并全部赋 1，对于每个卸载操作，统计这个节点的子树大小并全部赋 0 即可。&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;20/11/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1608 路径统计&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最短路计数问题，注意判断重边（当然如果从 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 存在 &lt;span class=&#34;math inline&#34;&gt;\(w_1&amp;lt;w_2\)&lt;/span&gt; 的话显然选 &lt;span class=&#34;math inline&#34;&gt;\(w_1\)&lt;/span&gt;，所以不能直接简单的 bool 数组判重）。跑 dij 的时候再记录 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 表示到 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的最短路条数，恰当转移即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1144 最短路计数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无需思考重边和自环&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;20/11/15&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CF915E Physical Education Lessons&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态开点线段树&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5459 [BJOI2016]回转寿司&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问有多少组 &lt;span class=&#34;math inline&#34;&gt;\((l,r)\)&lt;/span&gt; 满足 $L_{i=l}^ra_i R $的 &lt;span class=&#34;math inline&#34;&gt;\((l,r)\)&lt;/span&gt; 对数。 预处理前缀和 &lt;span class=&#34;math inline&#34;&gt;\(sum(i)\)&lt;/span&gt;，变换式子后不难发现变为 &lt;span class=&#34;math inline&#34;&gt;\(sum(y)-R\le S_{x-1}\le sum(y)-L\)&lt;/span&gt;，使用权值线段树维护即可。&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;20/11/17&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1955 [NOI2015]程序自动分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;离散化+并查集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2279 [HNOI2003]消防局的设立&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树形dp，&lt;a href=&#34;https://imyangty.com/oi/1216&#34;&gt;https://imyangty.com/oi/1216&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;20/11/18&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA1347 旅行 Tour/P1523 旅行商简化版&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;20/11/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA12563 劲歌金曲 Jin Ge Jin Qu hao&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转化后即为 0-1 背包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11400 照明系统设计 Lighting System Design&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前缀和+线性dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11584 划分成回文串 Partitioning by Palindromes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;划分为回文串的最小分割数，dp&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;20/11/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3376 【模板】网络最大流&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EK dinic&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2170 选学霸&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并查集+ 0-1 背包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2359 三素数数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较神奇的 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1799 数列&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性 dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1343 地震逃生&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;裸的最大流，AC400 祭&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;20/11/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1453 城市环路&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基环树 dp，考虑使用并查集找环然后暴力断环跑两次没有上司的舞会&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2607 [ZJOI2008]骑士&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基环森林 dp，可以使用有向图，把 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 讨厌的人 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 设成 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的父亲，然后连边 &lt;span class=&#34;math inline&#34;&gt;\((j,i)\)&lt;/span&gt;。这样的话只有“根节点”有机会形成环，这样就可以很容易的断环为链跑两次 dp 统计每个连通块的答案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5144 蜈蚣&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;水，线性 dp&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;20/11/23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3153 [CQOI2009]跳舞&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1218&#34; title=&#34;最大流 + 二分答案&#34;&gt;最大流 + 二分答案&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3381 【模板】最小费用最大流&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EK+SPFA&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;20/11/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3853 [TJOI2007]路标设置&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3743 kotori的设备&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案，对于每个使用时间考虑每个设备需要充的总电量充电宝能不能提供，如果 &lt;span class=&#34;math inline&#34;&gt;\(\sum a_i\le p\)&lt;/span&gt; 则输出 -1 即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1850 换教室&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1221&#34; title=&#34;期望 dp&#34;&gt;期望 dp&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;20/11/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1281 书的复制&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp+贪心输出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2370 yyy2015c01 的 U 盘&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案套背包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1577 切绳子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;20/11/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA11582 巨大的斐波那契数！ Colossal Fibonacci Numbers!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;斐波那契数列在模 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的意义下必然会出现循环节（如果 &lt;span class=&#34;math inline&#34;&gt;\(f_i=f_{i-1}=1\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(i&amp;gt;2\)&lt;/span&gt;，则周期为 &lt;span class=&#34;math inline&#34;&gt;\(i-2\)&lt;/span&gt;），注意到这一点之后打一个快速幂取模即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA12169 不爽的裁判 Disgruntled Judge&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;水&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA10375 选择与除法 Choose and divide&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑给答案乘上 &lt;span class=&#34;math inline&#34;&gt;\(p^1q^{-1}(p-q)^{-1}r^{-1}s^1(r-s)^1\)&lt;/span&gt;，对答案的质因数分解进行处理即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA10791 最小公倍数的最小和 Minimum Sum LCM&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(n=\prod p_i^{a_i}\)&lt;/span&gt;，所以每个数分别为 &lt;span class=&#34;math inline&#34;&gt;\(p_i^{a_i}\)&lt;/span&gt; 时可以有最优解，注意 &lt;span class=&#34;math inline&#34;&gt;\(n=1\)&lt;/span&gt; 时以及 &lt;span class=&#34;math inline&#34;&gt;\(n=p_i^{a_i}\)&lt;/span&gt; 时的特判即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA12716 GCD等于XOR GCD XOR&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较巧的结论题，利用了 gcd 和异或的性质 &lt;a href=&#34;https://imyangty.com/oi/1222&#34;&gt;https://imyangty.com/oi/1222&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-19&#34;&gt;20/11/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1593 因子和&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;唯一分解定理，等比数列求和以及费马小定理求逆元的综合应用&lt;a href=&#34;https://imyangty.com/oi/1223&#34;&gt;https://imyangty.com/oi/1223&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-20&#34;&gt;20/11/28&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1156 垃圾陷阱&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类背包的 dp，坑点较多&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3957 跳房子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分答案套单调队列优化 dp 坑点：&lt;strong&gt;入队/出队顺序，二分上下界，答案初始化为-1，该状态无法被转移到时不能直接终止 dp&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3195 [HNOI2008]玩具装箱&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1224&#34; title=&#34;斜率优化模板&#34;&gt;斜率优化模板&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2365 任务安排&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 可过，但可斜率优化&lt;/p&gt;
&lt;h3 id=&#34;section-21&#34;&gt;20/11/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5520 [yLOI2019] 青原樱&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑种下的 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 棵树之间必须要有至少 &lt;span class=&#34;math inline&#34;&gt;\(m-1\)&lt;/span&gt; 个空位，将其空出来之后发现还有 &lt;span class=&#34;math inline&#34;&gt;\(n-m+1\)&lt;/span&gt; 个位置可以种树，因此答案为 &lt;span class=&#34;math inline&#34;&gt;\(A_{n-m+1}^m=\frac{(n-m+1)\times(n-m)\times\cdots\times1}{(n-2m+1)\times(n-2m)\times(n-2m-1)\times\cdots\times1}=(n-m+1)\times(n-m)\times\cdots\times(n-2m+2)\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3197 [HNOI2008]越狱&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑补集思想，所有的犯人状态有 &lt;span class=&#34;math inline&#34;&gt;\(m^n\)&lt;/span&gt; 种，减去两两不相邻的 &lt;span class=&#34;math inline&#34;&gt;\(m(m-1)^{n-1}\)&lt;/span&gt; 种即为答案，输出加上 mod 再取模。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P7076 动物园&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSP2020 赛题，要特判 &lt;span class=&#34;math inline&#34;&gt;\(n=0\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k=64\)&lt;/span&gt; 的情况，输出 &lt;span class=&#34;math inline&#34;&gt;\(2^{64}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;section-22&#34;&gt;20/11/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P7077 函数调用&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSP2020 赛题，拓扑排序讨论乘法对加法产生的贡献&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5022 旅行&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOIP2018，考虑直接枚举基环树环上的边然后暴力断边&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2020年10月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2020-10/</link>
        <pubDate>Thu, 01 Oct 2020 22:35:26 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2020-10/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg51.webp" alt="Featured image of post 2020年10月 OI学习记录" /&gt;&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;撑过联赛初赛&lt;/li&gt;
&lt;li&gt;推进 dp 能力&lt;/li&gt;
&lt;li&gt;推进图论知识&lt;/li&gt;
&lt;li&gt;数据结构什么的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;20/10/01&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3038 [USACO11DEC]Grass Planting G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树剖，调了很久的原因是 query 的时候没有下传标记&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SP1043 GSS1 - Can you answer these queries I&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线段树维护稍微复杂的信息——求最大子段和 需要维护最大前缀和，最大后缀和，最大字段和和区间和，难点在于 pushup&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SP1716 GSS3 - Can you answer these queries III&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;带修版 GSS1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://imyangty.com/oi/748&#34; title=&#34;**P1908 逆序对**&#34;&gt;&lt;strong&gt;P1908 逆序对&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用权值线段树和树状数组重做本题&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;20/10/02&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;重写了一波高精度&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P3369 【模板】普通平衡树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用权值线段树过去的（而且跑的不慢），除了查排名对应的数之外其他都很好想，想通了就可以直接 A 掉&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;20/10/03&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1111 修复公路&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并查集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1346 电车&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;01bfs 优化的最短路&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://imyangty.com/oi/1203&#34; title=&#34;**P3386 【模板】二分图最大匹配**&#34;&gt;&lt;strong&gt;P3386 【模板】二分图最大匹配&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;匈牙利算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2756 飞行员配对方案问题&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二分图最大匹配，匈牙利算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P6190 [NOI Online #1 入门组]魔法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用矩阵快速幂优化 Floyd，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3+n^2m+n^3\log k)\)&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(F_{i,j}\)&lt;/span&gt; 为使用过一次魔法,从 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的最短路。单位矩阵为 &lt;span class=&#34;math inline&#34;&gt;\(D_{i,j}\)&lt;/span&gt;，即不使用魔法，求出 &lt;span class=&#34;math inline&#34;&gt;\(D\times F^k\)&lt;/span&gt; 即可。此处矩阵乘法变成了 min&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1637 三元上升子序列&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;权值线段树可以水过去 &lt;strong&gt;线段树不开 4 倍空间见祖宗&lt;/strong&gt; &lt;strong&gt;不开 long long 见祖宗&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-3&#34;&gt;20/10/04&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3385 【模板】负环&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SPFA，如果一个点入队 &lt;span class=&#34;math inline&#34;&gt;\(n-1\)&lt;/span&gt; 次，说明这个图存在负环，判断即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5960 【模板】差分约束算法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;差分约束&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3388 【模板】割点（割顶）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;割点，注意图可能不连通，要分别对每个连通块 tarjan&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;20/10/05&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3370 【模板】字符串哈希&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符串哈希&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3375 【模板】KMP字符串匹配&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KMP&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;20/10/11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1993 小 K 的农场&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;差分约束&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4114 Qtree1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;边转点，树剖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2294 [HNOI2005]狡猾的商人&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前缀和思想+差分约束（第一次用链式前向星存图嘻嘻嘻）&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;20/10/12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1351 联合权值&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \sum\sum w_iw_j-\sum w_i^2=(\sum w_i)^2-\sum w_i^2 \]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;20/10/13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P4513 小白逛公园&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;带修区间最大子段和，练代码能力（&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1272 重建道路&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树形背包，设 &lt;span class=&#34;math inline&#34;&gt;\(f_{u,j}\)&lt;/span&gt; 表示以 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为根节点的子树保留 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 个节点需要删的边的最少数量（保留与父节点连边）。预处理 &lt;span class=&#34;math inline&#34;&gt;\(f_{u,1}=size_u\)&lt;/span&gt;。则 &lt;span class=&#34;math inline&#34;&gt;\(f_{u,j}=\min_k^{size_u}\lbrace f_{u,j-k}+f_{v,k}-1\rbrace\)&lt;/span&gt;，这里的 -1 是因为初始化的时候删过了，重新加回来。 取答案时 &lt;span class=&#34;math inline&#34;&gt;\(ans=\min(f_{1,p},\min_{u=2}^n\lbrace f_{u,p}+1\rbrace)\)&lt;/span&gt; 这里 +1 是因为连接其父亲的边要删掉&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;20/10/14&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3387 【模板】缩点&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tarjan + 拓扑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1726 上白泽慧音&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;强连通分量裸题&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;20/10/19&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2656 采蘑菇&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;强联通分量 + spfa 最长路&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;20/10/20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;T143332 区间统计&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学长的题，给定一个序列，&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次询问，求 &lt;span class=&#34;math inline&#34;&gt;\(\[l,r\]\)&lt;/span&gt; 内 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的个数。 离线做法复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n+q)\)&lt;/span&gt;，注意到 &lt;span class=&#34;math inline&#34;&gt;\(ans(l,r,x)=count(1,r,x)-count(1,l-1,x)\)&lt;/span&gt;，故把所有询问读入，分别按照 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 桶排序，存储下其对应的询问编号，最后暴力扫一遍序列，两个指针遍历排序过的询问，记录 &lt;span class=&#34;math inline&#34;&gt;\(ans(l,r,x)\)&lt;/span&gt;，最后输出即可。&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;20/10/21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2679 子串&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp，&lt;code&gt;f[i][j][k][0/1]&lt;/code&gt; 表示到了 a 串第 i 位，匹配到了 b 串第 j 位，使用了 k 个子串，a 串第 i 位是否选（0/1）的方案数 则 &lt;code&gt;f[i][j][k][0]=f[i-1][j][k][0]+f[i-1][j][k][1]&lt;/code&gt;，若 &lt;code&gt;a[i] == b[j]&lt;/code&gt;，则 &lt;code&gt;f[i][j][k][1]=f[i-1][j-1][k-1][0]+f[i-1][j-1][k-1][1]+f[i-1][j-1][k][1]&lt;/code&gt; 最后输出 &lt;code&gt;f[n][m][k][0]+f[n][m][k][1]&lt;/code&gt; 即可，i 的那一维滚动掉即可。&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;20/10/22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1514 引水入城&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp+搜索+贪心 &lt;strong&gt;注意读题！！！注意判边界！！！注意贪心！！！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2585 [ZJOI2006]三色二叉树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树上dp，氵&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;20/10/24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1569 Generic Cow Protests&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性dp - &lt;strong&gt;[SDOI2005]区间&lt;/strong&gt; 求区间并 差分，水、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2426 删数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间dp&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;20/10/25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1435 [IOI2000]回文字串&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间dp，poj卡空间，被迫滚动数组 注意到 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 只可能由 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j-1}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_{i+1,j}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(f_{i+1,j-1}\)&lt;/span&gt; 转移而来，所以可以倒序枚举 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，并将其滚动掉。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=n-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;i&amp;gt;=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;i--)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j=i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;j&amp;lt;=n;j++)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(s[i]==s[j]) f[i&amp;amp;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]=f[(i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&amp;amp;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; f[i&amp;amp;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]=min(f[(i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&amp;amp;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j],f[i&amp;amp;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA10617 Again Palindrome&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区间dp统计回文子串个数&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len=&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;len&amp;lt;=n;len++)&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,j=i+len-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;j&amp;lt;=n;i++,j++)&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(s[i]==s[j])&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[i][j]=f[i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]+f[i][j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[i][j]=f[i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]+f[i][j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]-f[i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不开 &lt;code&gt;long long&lt;/code&gt; 见祖宗 - &lt;strong&gt;hdu1421 搬寝室&lt;/strong&gt; 贪心+dp 不注意多测见祖宗，不注意初始化见祖宗&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2401 不等数列&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dp 题意：将1到n任意排列，然后在排列的每两个数之间根据他们的大小关系插入“&amp;gt;”和“&amp;lt;”。问在所有排列中，有多少个排列恰好有k个“&amp;lt;”。答案对2015取模。 每次考虑已经排好 &lt;span class=&#34;math inline&#34;&gt;\(\[1,n-1\]\)&lt;/span&gt; 的答案，然后考虑插入 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，如果将 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 放在序列尾，会多出来一个小于号，即包含一个 &lt;span class=&#34;math inline&#34;&gt;\(f_{n-1,k-1}\)&lt;/span&gt;，如果把 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 放在序列首，会多出一个大于号，即包含一个 &lt;span class=&#34;math inline&#34;&gt;\(f_{n-1,k}\)&lt;/span&gt;，如果把原来小于号换成 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，小于号个数不会变，即多出来 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(f_{n-1,k}\)&lt;/span&gt;，如果把大于号换成 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，多一个小于号，即多出来 &lt;span class=&#34;math inline&#34;&gt;\(i-1-k\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(f_{n-1,k-1}\)&lt;/span&gt; 即 &lt;span class=&#34;math inline&#34;&gt;\(f_{n,k}=(k+1)f_{n-1,k}+(i-k)f_{n-1,k-1}\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;20/10/26&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3275 [SCOI2011]糖果&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;差分约束，SPFA时需要注意：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;前向星空间开够，留下超级源的空间&lt;/li&gt;
&lt;li&gt;SPFA 写递归式的&lt;/li&gt;
&lt;li&gt;玄学数据卡 SPFA 需要倒序建超级源的边&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缩点+拓扑做法待填坑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1594 护卫队&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性 dp&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;20/10/27&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3147 [USACO16OPEN]262144 P&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据经过加强，只能用一些奇奇怪怪的方法混过去。 发现若想合成 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，就需要先有两个 &lt;span class=&#34;math inline&#34;&gt;\(i-1\)&lt;/span&gt;，关键点便在这里。设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 为从 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 为左端点能合成 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的右端点。所以有状态转移方程 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}=f_{i-1,f_{i-1,j}+1}\)&lt;/span&gt;，即倍增思想。因为需要先合成第一个 &lt;span class=&#34;math inline&#34;&gt;\(i-1\)&lt;/span&gt;，右端点就是 &lt;span class=&#34;math inline&#34;&gt;\(f_{i-1,j}\)&lt;/span&gt;，现在要从这个右端点开始继续向后寻找第二个 &lt;span class=&#34;math inline&#34;&gt;\(i-1\)&lt;/span&gt;，所以是 &lt;span class=&#34;math inline&#34;&gt;\(f_{i-1,f_{i-1,j}+1}\)&lt;/span&gt; 初始条件是 &lt;span class=&#34;math inline&#34;&gt;\(f_{a_i,i}=i\)&lt;/span&gt;，转移要求上面转移过来的两个量都有意义。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;i&amp;lt;=n;i++)&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[read()][i]=i;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans=&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;dv&#34;&gt;58&lt;/span&gt;;i++)&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;j&amp;lt;=n;j++)&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(!f[i][j] &amp;amp;&amp;amp; f[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j] &amp;amp;&amp;amp; f[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][f[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j]=f[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][f[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;],&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans=i;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1220 关路灯&lt;/strong&gt; &lt;strong&gt;一定时间内关闭的路灯必然是连续的&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_{i,j,0/1}\)&lt;/span&gt; 表示关闭路灯 &lt;span class=&#34;math inline&#34;&gt;\([i,j]\)&lt;/span&gt; 后站在 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 或站在 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 所耗费的最小功率。则 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j,0}\)&lt;/span&gt; 通过 &lt;span class=&#34;math inline&#34;&gt;\(f_{i+1,j,0/1}\)&lt;/span&gt; 转移得到，反之亦然。 转移太长懒得写了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P3205 [HNOI2010]合唱队&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;i&amp;lt;=n;i++)&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i]=read(),f[i][i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len=&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;len&amp;lt;=n;len++)&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,j=i+len-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;j&amp;lt;=n;i++,j++)&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(a[i]&amp;lt;a[i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]=(f[i][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]+f[i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])%mod;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(a[i]&amp;lt;a[j])&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]=(f[i][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]+f[i+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])%mod;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(a[j]&amp;gt;a[i])&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]=(f[i][j][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]+f[i][j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;])%mod;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(a[j]&amp;gt;a[j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][j][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]=(f[i][j][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]+f[i][j-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])%mod;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;初始化的时候默认是左边进的不然会被重复计算&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;20/10/28&lt;/h3&gt;
&lt;p&gt;三道状压dp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;P1879 [USACO06NOV]Corn Fields G&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;P1896 [SCOI2005]互不侵犯&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;P2704 [NOI2001]炮兵阵地&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状压dp：预处理状态，判别，转移&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;20/10/29&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P5658 括号树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;括号匹配扩展到树上 要注意树上的栈要进行回溯&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P1868 饥饿的奶牛&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性 dp，使用二分进行优化&lt;/p&gt;
&lt;h3 id=&#34;section-19&#34;&gt;20/10/30&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P2583 地铁间谍/UVA1205&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线性dp，思路较为巧妙&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UVA437 巴比伦塔 The Tower of Babylon&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以记忆化搜索可以 DAG 上 dp 快读会锅不知道为什么&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2020年8-9月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2020-08-09/</link>
        <pubDate>Fri, 28 Aug 2020 13:20:51 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2020-08-09/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg50.webp" alt="Featured image of post 2020年8-9月 OI学习记录" /&gt;&lt;h2 id=&#34;计划&#34;&gt;计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全面推进 dp 能力&lt;/li&gt;
&lt;li&gt;学习提高组树上相关算法&lt;/li&gt;
&lt;li&gt;学习提高组数论及组合&lt;/li&gt;
&lt;li&gt;搞过联赛这一关&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;h3 id=&#34;section&#34;&gt;20/08/28&lt;/h3&gt;
&lt;h4 id=&#34;cf543a-writing-code&#34;&gt;CF543A Writing Code&lt;/h4&gt;
&lt;p&gt;二维费用完全背包求方案数&lt;/p&gt;
&lt;h4 id=&#34;p4316-绿豆蛙的归宿&#34;&gt;P4316 绿豆蛙的归宿&lt;/h4&gt;
&lt;p&gt;拓扑排序+期望dp&lt;/p&gt;
&lt;h4 id=&#34;p1107-bjwc2008雷涛的小猫&#34;&gt;P1107 [BJWC2008]雷涛的小猫&lt;/h4&gt;
&lt;p&gt;稍加优化的线性dp&lt;/p&gt;
&lt;h4 id=&#34;cf414b-mashmokh-and-acm&#34;&gt;CF414B Mashmokh and ACM&lt;/h4&gt;
&lt;p&gt;线性dp&lt;/p&gt;
&lt;h3 id=&#34;section-1&#34;&gt;20/08/29&lt;/h3&gt;
&lt;h4 id=&#34;p6064-usaco05jannaptime-gsp283-naptime&#34;&gt;P6064 [USACO05JAN]Naptime G/SP283 NAPTIME&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1177&#34; title=&#34;P6064 [USACO05JAN]Naptime G/SP283 NAPTIME&#34;&gt;P6064 [USACO05JAN]Naptime G/SP283 NAPTIME&lt;/a&gt; 线性dp&lt;/p&gt;
&lt;h4 id=&#34;p2933-usaco09janthe-baric-bovine-g&#34;&gt;P2933 [USACO09JAN]The Baric Bovine G&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1174&#34; title=&#34;P2933 [USACO09JAN]The Baric Bovine G&#34;&gt;P2933 [USACO09JAN]The Baric Bovine G&lt;/a&gt; 线性dp&lt;/p&gt;
&lt;h3 id=&#34;section-2&#34;&gt;20/09/03&lt;/h3&gt;
&lt;h4 id=&#34;poj2524-ubiquitous-religions&#34;&gt;poj2524 Ubiquitous Religions&lt;/h4&gt;
&lt;p&gt;并查集+连通块&lt;/p&gt;
&lt;h4 id=&#34;section-3&#34;&gt;20/09/04&lt;/h4&gt;
&lt;h4 id=&#34;p1197-jsoi2008星球大战&#34;&gt;P1197 [JSOI2008]星球大战&lt;/h4&gt;
&lt;p&gt;逆向思维并查集+连通块&lt;/p&gt;
&lt;h4 id=&#34;poj2236-wireless-network&#34;&gt;poj2236 Wireless Network&lt;/h4&gt;
&lt;p&gt;并查集&lt;/p&gt;
&lt;h4 id=&#34;p1525-关押罪犯&#34;&gt;P1525 关押罪犯&lt;/h4&gt;
&lt;p&gt;种类并查集&lt;/p&gt;
&lt;h4 id=&#34;p2024-noi2001食物链&#34;&gt;P2024 [NOI2001]食物链&lt;/h4&gt;
&lt;p&gt;种类并查集&lt;/p&gt;
&lt;h4 id=&#34;hdu3092-least-common-multiple&#34;&gt;hdu3092 Least common multiple&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1178&#34; title=&#34;hdu3092 Least common multiple&#34;&gt;hdu3092 Least common multiple&lt;/a&gt; 完全背包+数论+对数背包&lt;/p&gt;
&lt;h4 id=&#34;hdu2182-frog&#34;&gt;hdu2182 Frog&lt;/h4&gt;
&lt;p&gt;简单线性dp&lt;/p&gt;
&lt;h3 id=&#34;section-4&#34;&gt;20/09/05&lt;/h3&gt;
&lt;h4 id=&#34;hdu4489-the-kings-ups-and-downs&#34;&gt;hdu4489 The King’s Ups and Downs&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1179&#34; title=&#34;hdu4489 The King’s Ups and Downs&#34;&gt;hdu4489 The King’s Ups and Downs&lt;/a&gt; 组合数学+dp，&lt;a href=&#34;http://oeis.org/A001250&#34; title=&#34;OEIS A001250&#34;&gt;OEIS A001250&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;hdu1003-max-sum&#34;&gt;hdu1003 Max Sum&lt;/h4&gt;
&lt;p&gt;需要记录状态的最大子段和&lt;/p&gt;
&lt;h4 id=&#34;hdu1087-super-jumping&#34;&gt;hdu1087 Super Jumping!&lt;/h4&gt;
&lt;p&gt;线性dp&lt;/p&gt;
&lt;h4 id=&#34;hdu1503-advanced-fruits&#34;&gt;hdu1503 Advanced Fruits&lt;/h4&gt;
&lt;p&gt;LCS变形（记录方案+混合字符串）&lt;/p&gt;
&lt;h3 id=&#34;section-5&#34;&gt;20/09/06&lt;/h3&gt;
&lt;h4 id=&#34;hdu2476-string-painter&#34;&gt;hdu2476 String Painter&lt;/h4&gt;
&lt;p&gt;洛谷P4170变形，两次dp&lt;/p&gt;
&lt;h4 id=&#34;p2016-战略游戏&#34;&gt;P2016 战略游戏&lt;/h4&gt;
&lt;p&gt;简单树形dp&lt;/p&gt;
&lt;h3 id=&#34;section-6&#34;&gt;20/09/07&lt;/h3&gt;
&lt;h4 id=&#34;p2458-sdoi2006保安站岗&#34;&gt;P2458 [SDOI2006]保安站岗&lt;/h4&gt;
&lt;p&gt;树形dp&lt;/p&gt;
&lt;h4 id=&#34;p2563-ahoi2001质数和分解&#34;&gt;P2563 [AHOI2001]质数和分解&lt;/h4&gt;
&lt;p&gt;完全背包&lt;/p&gt;
&lt;h3 id=&#34;section-7&#34;&gt;20/09/08&lt;/h3&gt;
&lt;h4 id=&#34;p3379-模板最近公共祖先lca&#34;&gt;P3379 【模板】最近公共祖先（LCA）&lt;/h4&gt;
&lt;p&gt;倍增求 LCA&lt;/p&gt;
&lt;h3 id=&#34;section-8&#34;&gt;20/09/09&lt;/h3&gt;
&lt;h4 id=&#34;p4281-ahoi2008紧急集合-聚会&#34;&gt;P4281 [AHOI2008]紧急集合 / 聚会&lt;/h4&gt;
&lt;p&gt;LCA的一些性质&lt;/p&gt;
&lt;h3 id=&#34;section-9&#34;&gt;20/09/10&lt;/h3&gt;
&lt;h4 id=&#34;p1395-会议&#34;&gt;P1395 会议&lt;/h4&gt;
&lt;p&gt;树的重心&lt;/p&gt;
&lt;h4 id=&#34;p1133-教主的花园&#34;&gt;P1133 教主的花园&lt;/h4&gt;
&lt;p&gt;线性dp&lt;/p&gt;
&lt;h4 id=&#34;p1266-速度限制&#34;&gt;P1266 速度限制&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1182&#34; title=&#34;P1266 速度限制&#34;&gt;P1266 速度限制&lt;/a&gt; 二维状态限定的最短路（分层图）&lt;/p&gt;
&lt;h3 id=&#34;section-10&#34;&gt;20/09/12&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1183&#34; title=&#34;校内模拟赛&#34;&gt;校内模拟赛&lt;/a&gt; 25+100+65=190 rk2&lt;/p&gt;
&lt;h3 id=&#34;section-11&#34;&gt;20/09/14&lt;/h3&gt;
&lt;h4 id=&#34;p1273-有线电视网&#34;&gt;P1273 有线电视网&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1185&#34; title=&#34;P1273 有线电视网&#34;&gt;P1273 有线电视网&lt;/a&gt; 树上背包&lt;/p&gt;
&lt;h3 id=&#34;section-12&#34;&gt;20/09/15&lt;/h3&gt;
&lt;h4 id=&#34;p1613-跑路&#34;&gt;P1613 跑路&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1186&#34; title=&#34;P1613 跑路&#34;&gt;P1613 跑路&lt;/a&gt; 倍增优化 dp&lt;/p&gt;
&lt;h4 id=&#34;p3811-模板乘法逆元-线性求逆元&#34;&gt;P3811 【模板】乘法逆元 线性求逆元&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1187&#34; title=&#34;P3811 【模板】乘法逆元&#34;&gt;P3811 【模板】乘法逆元&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-13&#34;&gt;20/09/16&lt;/h3&gt;
&lt;h4 id=&#34;p1082-同余方程&#34;&gt;P1082 同余方程&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1187&#34; title=&#34;P1082 同余方程&#34;&gt;P1082 同余方程&lt;/a&gt; 拓欧求逆元&lt;/p&gt;
&lt;h4 id=&#34;p1495-模板中国剩余定理crt曹冲养猪&#34;&gt;P1495 【模板】中国剩余定理(CRT)/曹冲养猪&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1189&#34; title=&#34;P1495 【模板】中国剩余定理(CRT)/曹冲养猪&#34;&gt;P1495 【模板】中国剩余定理(CRT)/曹冲养猪&lt;/a&gt; CRT&lt;/p&gt;
&lt;h3 id=&#34;section-14&#34;&gt;20/09/17&lt;/h3&gt;
&lt;h4 id=&#34;p1516-青蛙的约会&#34;&gt;P1516 青蛙的约会&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1193&#34; title=&#34;P1516 青蛙的约会&#34;&gt;P1516 青蛙的约会&lt;/a&gt; exgcd&lt;/p&gt;
&lt;h3 id=&#34;section-15&#34;&gt;20/09/18&lt;/h3&gt;
&lt;p&gt;校内练习赛&lt;/p&gt;
&lt;h3 id=&#34;section-16&#34;&gt;20/09/19&lt;/h3&gt;
&lt;p&gt;校内模拟赛 80+8+85=193 rk2&lt;/p&gt;
&lt;h3 id=&#34;section-17&#34;&gt;20/09/21&lt;/h3&gt;
&lt;h4 id=&#34;p1364-医院设置&#34;&gt;P1364 医院设置&lt;/h4&gt;
&lt;p&gt;带点权的树的重心&lt;/p&gt;
&lt;h4 id=&#34;p1122-最大子树和&#34;&gt;P1122 最大子树和&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(f_u=max(f_v+f_u,f_u)\)&lt;/span&gt; 只需统计 &lt;span class=&#34;math inline&#34;&gt;\(f_{u_{max}}\)&lt;/span&gt; 即可，因为选出来最后的结果必然有一个节点是子树的根节点，所以不用考虑过多。&lt;/p&gt;
&lt;h3 id=&#34;section-18&#34;&gt;20/09/22&lt;/h3&gt;
&lt;h4 id=&#34;p4310-绝世好题&#34;&gt;P4310 绝世好题&lt;/h4&gt;
&lt;p&gt;求给定序列的最长子序列 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace b_i\rbrace\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 按位与 &lt;span class=&#34;math inline&#34;&gt;\(b_{i-1}\)&lt;/span&gt; 不为0 令 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 表示当前子序列第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位为 1 的最大长度，读入时按位转移，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;p2015-二叉苹果树&#34;&gt;P2015 二叉苹果树&lt;/h4&gt;
&lt;p&gt;树上背包，&lt;code&gt;f[u][j]=max(f[u][j],f[u][j-k-1]+f[v][k]+w);&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-19&#34;&gt;20/09/23&lt;/h3&gt;
&lt;h4 id=&#34;p1131-zjoi2007时态同步&#34;&gt;P1131 [ZJOI2007]时态同步&lt;/h4&gt;
&lt;p&gt;树上dp，直接 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 扫描并计算即可&lt;/p&gt;
&lt;h3 id=&#34;section-20&#34;&gt;20/09/25&lt;/h3&gt;
&lt;h4 id=&#34;p1440-求m区间内的最小值&#34;&gt;P1440 求m区间内的最小值&lt;/h4&gt;
&lt;p&gt;单调队列裸体&lt;/p&gt;
&lt;h3 id=&#34;section-21&#34;&gt;20/09/26&lt;/h3&gt;
&lt;h4 id=&#34;p2627-usaco11openmowing-the-lawn-g-p2034-选择数字&#34;&gt;P2627 [USACO11OPEN]Mowing the Lawn G &amp;amp;&amp;amp; P2034 选择数字&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(i,0)=\max\lbrace f(i-1,0),f(i-1,1)\rbrace
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(i,1)=\max_{j\in(i-k,i)}\lbrace f(j,0)+s_i-s_j\rbrace=\max_{j\in(i-k,i)}\lbrace f(j,0)-s_j\rbrace+s_i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;开一个单调队列维护 &lt;span class=&#34;math inline&#34;&gt;\(\max\lbrace f(j,0)-s_j\rbrace\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h3 id=&#34;section-22&#34;&gt;20/09/28&lt;/h3&gt;
&lt;h4 id=&#34;p3384-模板轻重链剖分&#34;&gt;P3384 【模板】轻重链剖分&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://imyangty.com/oi/1197&#34; title=&#34;轻重链剖分模板&#34;&gt;轻重链剖分模板&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;section-23&#34;&gt;20/09/29&lt;/h3&gt;
&lt;h4 id=&#34;p3379-模板最近公共祖先lca-1&#34;&gt;P3379 【模板】最近公共祖先（LCA）&lt;/h4&gt;
&lt;p&gt;这次使用&lt;a href=&#34;https://imyangty.com/oi/1197&#34; title=&#34;树剖求解 lca&#34;&gt;树剖求解 lca&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2020年5月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2020-05/</link>
        <pubDate>Sun, 10 May 2020 14:26:55 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2020-05/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg49.webp" alt="Featured image of post 2020年5月 OI学习记录" /&gt;&lt;h2 id=&#34;计划&#34;&gt;计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;学习组合数学基础&lt;/li&gt;
&lt;li&gt;继续练习 dp&lt;/li&gt;
&lt;li&gt;AC 280&lt;/li&gt;
&lt;li&gt;AC 300&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;20/05/10 P2623 物品选取 混合背包+泛化物品&lt;/li&gt;
&lt;li&gt;20/05/16 P1137 旅行计划 拓扑排序+dp&lt;/li&gt;
&lt;li&gt;20/05/16 &lt;a href=&#34;https://imyangty.com/oi/1165&#34; title=&#34;P2822 组合数问题&#34;&gt;P2822 组合数问题&lt;/a&gt; 递推组合数+二维前缀和&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>2020年4月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2020-04/</link>
        <pubDate>Fri, 03 Apr 2020 18:11:18 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2020-04/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg48.webp" alt="Featured image of post 2020年4月 OI学习记录" /&gt;&lt;h2 id=&#34;计划&#34;&gt;计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能在周末尽量做题就尽量做吧&lt;/li&gt;
&lt;li&gt;AC 270（已达成）&lt;/li&gt;
&lt;li&gt;AC 280（未达成）&lt;/li&gt;
&lt;li&gt;依旧不学新内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;做题记录&#34;&gt;做题记录&lt;/h2&gt;
&lt;p&gt;开学了，所以一个月只有 23 道题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;20/04/03 &lt;a href=&#34;https://imyangty.com/oi/1129&#34; title=&#34;P6082 [JSOI2015]salesman&#34;&gt;P6082 [JSOI2015]salesman&lt;/a&gt; 树形 dp + 贪心&lt;/li&gt;
&lt;li&gt;20/04/03 &lt;a href=&#34;https://imyangty.com/oi/1130&#34; title=&#34;P3574 [POI2014]FAR-FarmCraft&#34;&gt;P3574 [POI2014]FAR-FarmCraft&lt;/a&gt; 树形 dp + 贪心&lt;/li&gt;
&lt;li&gt;20/04/03 P4514 上帝造题的七分钟 二维树状数组&lt;/li&gt;
&lt;li&gt;20/04/03 &lt;a href=&#34;https://imyangty.com/oi/1132&#34; title=&#34;CF607B Zuma&#34;&gt;CF607B Zuma&lt;/a&gt; 区间 dp&lt;/li&gt;
&lt;li&gt;20/04/03 &lt;a href=&#34;https://imyangty.com/oi/1134&#34; title=&#34;P1396 营救&#34;&gt;P1396 营救&lt;/a&gt; 最小生成树&lt;/li&gt;
&lt;li&gt;20/04/04 &lt;a href=&#34;https://imyangty.com/oi/1140&#34; title=&#34;P2782 友好城市&#34;&gt;P2782 友好城市&lt;/a&gt; dp LIS&lt;/li&gt;
&lt;li&gt;20/04/04 &lt;a href=&#34;https://imyangty.com/oi/1142&#34; title=&#34;P4198 楼房重建&#34;&gt;P4198 楼房重建&lt;/a&gt; 线段树维护动态 LIS&lt;/li&gt;
&lt;li&gt;20/04/04 &lt;a href=&#34;https://imyangty.com/oi/1143&#34; title=&#34;P2901 [USACO08MAR]Cow Jogging G&#34;&gt;P2901 [USACO08MAR]Cow Jogging G&lt;/a&gt; A* 求 k 短路&lt;/li&gt;
&lt;li&gt;20/04/04 P1816 忠诚 ST表模板&lt;/li&gt;
&lt;li&gt;20/04/04 &lt;a href=&#34;https://imyangty.com/oi/1145#T3&#34; title=&#34;P5662 纪念品&#34;&gt;P5662 纪念品&lt;/a&gt; 完全背包&lt;/li&gt;
&lt;li&gt;20/04/05 &lt;a href=&#34;https://imyangty.com/oi/1148&#34; title=&#34;P1119 灾后重建&#34;&gt;P1119 灾后重建&lt;/a&gt; 巧妙的 Floyd&lt;/li&gt;
&lt;li&gt;20/04/11 &lt;a href=&#34;https://imyangty.com/oi/1149&#34; title=&#34;UVA12657 移动盒子 Boxes in a Line&#34;&gt;UVA12657 移动盒子 Boxes in a Line&lt;/a&gt; 链表&lt;/li&gt;
&lt;li&gt;20/04/11 &lt;a href=&#34;https://imyangty.com/oi/1150&#34; title=&#34;UVA679 小球下落 Dropping Balls&#34;&gt;UVA679 小球下落 Dropping Balls&lt;/a&gt; 二叉树的性质&lt;/li&gt;
&lt;li&gt;20/04/11 &lt;a href=&#34;https://imyangty.com/oi/1151&#34; title=&#34;UVA122 树的层次遍历 Trees on the level&#34;&gt;UVA122 树的层次遍历 Trees on the level&lt;/a&gt; 动态开点存储二叉树以及树的层次遍历&lt;/li&gt;
&lt;li&gt;20/04/12 &lt;a href=&#34;https://imyangty.com/oi/1153&#34; title=&#34;UVA548 树 Tree&#34;&gt;UVA548 树 Tree&lt;/a&gt; 思路类似求先序排列&lt;/li&gt;
&lt;li&gt;20/04/12 &lt;a href=&#34;https://imyangty.com/oi/1154&#34; title=&#34;UVA839 天平 Not so Mobile&#34;&gt;UVA839 天平 Not so Mobile&lt;/a&gt; 递归好题&lt;/li&gt;
&lt;li&gt;20/04/12 &lt;a href=&#34;https://imyangty.com/oi/1155&#34; title=&#34;UVA297 四分树 Quadtrees&#34;&gt;UVA297 四分树 Quadtrees&lt;/a&gt; 非二叉树的遍历&lt;/li&gt;
&lt;li&gt;20/04/12 &lt;a href=&#34;https://imyangty.com/oi/1156&#34; title=&#34;UVA816 Abbott的复仇 Abbott’s Revenge&#34;&gt;UVA816 Abbott的复仇 Abbott’s Revenge&lt;/a&gt; 细节 bfs&lt;/li&gt;
&lt;li&gt;20/04/19 &lt;a href=&#34;https://imyangty.com/oi/1157&#34; title=&#34;P2858 [USACO06FEB]Treats for the Cows G/S&#34;&gt;P2858 [USACO06FEB]Treats for the Cows G/S&lt;/a&gt; 区间 dp&lt;/li&gt;
&lt;li&gt;20/04/19 UVA725 除法 Division 暴力&lt;/li&gt;
&lt;li&gt;20/04/19 UVA1600 巡逻机器人 Patrol Robot bfs&lt;/li&gt;
&lt;li&gt;20/04/25 P1947 猜数 交互题实验&lt;/li&gt;
&lt;li&gt;20/04/25 &lt;a href=&#34;https://imyangty.com/oi/1159&#34; title=&#34;NOIOL 2&#34;&gt;NOIOL 2&lt;/a&gt; 100+55+0=155&lt;/li&gt;
&lt;li&gt;20/04/26 UVA524 素数环 Prime Ring Problem dfs&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>2020年3月 OI学习记录</title>
        <link>https://oi.imyangty.com/summary-2020-03/</link>
        <pubDate>Sun, 01 Mar 2020 16:08:31 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/summary-2020-03/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg47.webp" alt="Featured image of post 2020年3月 OI学习记录" /&gt;&lt;h1 id=&#34;afoed-temporarily-on-20200314&#34;&gt;AFOed temporarily on 2020/03/14&lt;/h1&gt;
&lt;p&gt;因为要开学准备中考了（微笑）&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;计划完成的还是不错的，至少没有倒退，也成功的 AC 250 了，接下来就是与文化课搏斗了（微笑）顺便吐槽下 dp 好难啊好吧我知道我刷题少。 总之还是学到新东西了，没有倒退，我觉得还是令人比较满意的一个月半个月 &lt;strong&gt;然而这并不能改变我很菜的事实啊 /kk/kk&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;计划&#34;&gt;计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;每天至少三题&lt;/li&gt;
&lt;li&gt;不学新内容（好吧是我菜）&lt;/li&gt;
&lt;li&gt;刷 dp&lt;/li&gt;
&lt;li&gt;刷学过的一些 ds&lt;/li&gt;
&lt;li&gt;AC 200（已达成）&lt;/li&gt;
&lt;li&gt;AC 230（已达成）&lt;/li&gt;
&lt;li&gt;AC 240（已达成）&lt;/li&gt;
&lt;li&gt;AC 250（月末达成）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习内容&#34;&gt;学习内容&lt;/h2&gt;
&lt;p&gt;都说了这个月不搞新东西实际上还是学了点技巧的&lt;/p&gt;
&lt;h2 id=&#34;刷题记录&#34;&gt;刷题记录&lt;/h2&gt;
&lt;p&gt;共 65 题，难度介于橙（一般都是 dp，果然我这个废物连橙的 dp 都做不熟）与紫（一道 IDA*，两道线段树水过去的）之间，至少没有颓废，hhhh。 每道题都认真写解题报告了/kk（但是改变不了我菜啊），除了一些模板和双倍经验题重题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;20/03/01 &lt;a href=&#34;https://imyangty.com/oi/1043&#34; title=&#34;P2534 [AHOI2012]铁盘整理&#34;&gt;P2534 [AHOI2012]铁盘整理&lt;/a&gt; IDA*&lt;/li&gt;
&lt;li&gt;20/03/01 &lt;a href=&#34;https://imyangty.com/oi/1050&#34; title=&#34;P1006 传纸条&#34;&gt;P1006 传纸条&lt;/a&gt; 二维 dp&lt;/li&gt;
&lt;li&gt;20/03/01 &lt;a href=&#34;https://imyangty.com/oi/1051&#34; title=&#34;P1508 Likecloud-吃、吃、吃&#34;&gt;P1508 Likecloud-吃、吃、吃&lt;/a&gt; 二维 dp，类似数字三角形&lt;/li&gt;
&lt;li&gt;20/03/02 &lt;a href=&#34;https://imyangty.com/oi/1053&#34; title=&#34;P1040 加分二叉树&#34;&gt;P1040 加分二叉树&lt;/a&gt; 树上dp，注意二叉树的性质&lt;/li&gt;
&lt;li&gt;20/03/02 &lt;a href=&#34;https://imyangty.com/oi/1054&#34; title=&#34;P1546 最短网络 Agri-Net&#34;&gt;P1546 最短网络 Agri-Net&lt;/a&gt; 最小生成树&lt;/li&gt;
&lt;li&gt;20/03/02 &lt;a href=&#34;https://imyangty.com/oi/1055&#34; title=&#34;P2330 [SCOI2005]繁忙的都市&#34;&gt;P2330 [SCOI2005]繁忙的都市&lt;/a&gt; 最小生成树&lt;/li&gt;
&lt;li&gt;20/03/02 &lt;a href=&#34;https://imyangty.com/oi/1057&#34; title=&#34;P1991 无线通讯网&#34;&gt;P1991 无线通讯网&lt;/a&gt; 需要逻辑思维的最小生成树&lt;/li&gt;
&lt;li&gt;20/03/03 &lt;a href=&#34;https://imyangty.com/oi/1065&#34; title=&#34;P1541 乌龟棋&#34;&gt;P1541 乌龟棋&lt;/a&gt; 多维 dp&lt;/li&gt;
&lt;li&gt;20/03/03 &lt;a href=&#34;https://imyangty.com/oi/1066&#34; title=&#34;P1880 [NOI1995]石子合并&#34;&gt;P1880 [NOI1995]石子合并&lt;/a&gt; 区间 dp&lt;/li&gt;
&lt;li&gt;20/03/03 &lt;a href=&#34;https://imyangty.com/oi/1067&#34; title=&#34;P1063 能量项链&#34;&gt;P1063 能量项链&lt;/a&gt; 区间 dp&lt;/li&gt;
&lt;li&gt;20/03/03 &lt;a href=&#34;https://imyangty.com/oi/1068&#34; title=&#34;P1126 机器人搬重物&#34;&gt;P1126 机器人搬重物&lt;/a&gt; 细节 bfs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AC200 祭&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;20/03/04 &lt;a href=&#34;https://imyangty.com/oi/1069&#34; title=&#34;P1182 数列分段 Section II&#34;&gt;P1182 数列分段 Section II&lt;/a&gt; 二分答案&lt;/li&gt;
&lt;li&gt;20/03/04 &lt;a href=&#34;https://imyangty.com/oi/1070&#34; title=&#34;P1140 相似基因&#34;&gt;P1140 相似基因&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/04 &lt;a href=&#34;https://imyangty.com/oi/1074&#34; title=&#34;P1019 单词接龙&#34;&gt;P1019 单词接龙&lt;/a&gt; 细节 dfs&lt;/li&gt;
&lt;li&gt;20/03/04 P1339 [USACO09OCT]Heat Wave 最短路模板&lt;/li&gt;
&lt;li&gt;20/03/05 &lt;a href=&#34;https://imyangty.com/oi/1075&#34; title=&#34;P1417 烹调方案&#34;&gt;P1417 烹调方案&lt;/a&gt; 变种背包&lt;/li&gt;
&lt;li&gt;20/03/05 &lt;a href=&#34;https://imyangty.com/oi/1076&#34; title=&#34;P1387 最大正方形&#34;&gt;P1387 最大正方形&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/05 &lt;a href=&#34;https://imyangty.com/oi/1077&#34; title=&#34;P1282 多米诺骨牌&#34;&gt;P1282 多米诺骨牌&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/06 &lt;a href=&#34;https://imyangty.com/oi/1078&#34; title=&#34;P1736 创意吃鱼法&#34;&gt;P1736 创意吃鱼法&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/06 &lt;a href=&#34;https://imyangty.com/oi/1079&#34; title=&#34;P1832 A+B Problem（再升级）&#34;&gt;P1832 A+B Problem（再升级）&lt;/a&gt; 完全背包求方案数&lt;/li&gt;
&lt;li&gt;20/03/06 &lt;a href=&#34;https://imyangty.com/oi/1084&#34; title=&#34;P1681 最大正方形II&#34;&gt;P1681 最大正方形II&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/06 &lt;a href=&#34;https://imyangty.com/oi/1085&#34; title=&#34;P1719 最大加权矩形&#34;&gt;P1719 最大加权矩形&lt;/a&gt; 最大子矩阵和，矩阵降维&lt;/li&gt;
&lt;li&gt;20/03/07 &lt;strong&gt;&lt;a href=&#34;https://imyangty.com/oi/1086&#34; title=&#34;NOIOL&#34;&gt;NOIOL&lt;/a&gt;&lt;/strong&gt; 170，够菜&lt;/li&gt;
&lt;li&gt;20/03/07 &lt;a href=&#34;https://imyangty.com/oi/1087&#34; title=&#34;P4568 [JLOI2011]飞行路线&#34;&gt;P4568 [JLOI2011]飞行路线&lt;/a&gt; 分层图最短路&lt;/li&gt;
&lt;li&gt;20/03/07 &lt;a href=&#34;https://imyangty.com/oi/1088&#34; title=&#34;P1020 导弹拦截&#34;&gt;P1020 导弹拦截&lt;/a&gt; 填坑 &lt;span class=&#34;math inline&#34;&gt;\(O(n\\log n)\)&lt;/span&gt;做法&lt;/li&gt;
&lt;li&gt;20/03/07 &lt;a href=&#34;https://imyangty.com/oi/1089&#34; title=&#34;P1439 【模板】LCS&#34;&gt;P1439【模板】LCS&lt;/a&gt; dp 求 LCS&lt;/li&gt;
&lt;li&gt;20/03/08 LGR-070 div2 120min 100+100+1+0=201 &lt;strong&gt;rk.316&lt;/strong&gt;，不愧是我，够菜&lt;/li&gt;
&lt;li&gt;20/03/09 &lt;a href=&#34;https://imyangty.com/oi/1090&#34; title=&#34;P1095 守望者的逃离&#34;&gt;P1095 守望者的逃离&lt;/a&gt; 基于时间轴的 dp&lt;/li&gt;
&lt;li&gt;20/03/09 线段树模板 2&lt;/li&gt;
&lt;li&gt;20/03/10 &lt;a href=&#34;https://imyangty.com/oi/1091&#34; title=&#34;P1198 [JSOI2008]最大数&#34;&gt;P1198 [JSOI2008]最大数&lt;/a&gt; RMQ 线段树&lt;/li&gt;
&lt;li&gt;20/03/10 &lt;a href=&#34;https://imyangty.com/oi/1093&#34; title=&#34;P4145 上帝造题的七分钟2 / 花神游历各国&#34;&gt;P4145 上帝造题的七分钟2 / 花神游历各国&lt;/a&gt; 线段树区间开根&lt;/li&gt;
&lt;li&gt;20/03/10 P2023 [AHOI2009]维护序列 相当于线段树模板 2&lt;/li&gt;
&lt;li&gt;20/03/10 &lt;a href=&#34;https://imyangty.com/oi/1094&#34; title=&#34;P5057 [CQOI2006]简单题&#34;&gt;P5057 [CQOI2006]简单题&lt;/a&gt; 树状数组区间修改单点查询&lt;/li&gt;
&lt;li&gt;20/03/10 &lt;a href=&#34;https://imyangty.com/oi/1097&#34; title=&#34;二维树状数组模板 1 单点修改区间查询&#34;&gt;二维树状数组模板 1 单点修改区间查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;20/03/10 &lt;a href=&#34;https://imyangty.com/oi/1097&#34; title=&#34;二维树状数组模板 2 区间修改单点查询&#34;&gt;二维树状数组模板 2 区间修改单点查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;20/03/10 &lt;a href=&#34;https://imyangty.com/oi/1097&#34; title=&#34;二维树状数组模板 3 区间修改区间查询&#34;&gt;二维树状数组模板 3 区间修改区间查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;20/03/11 &lt;a href=&#34;https://imyangty.com/oi/1099&#34; title=&#34;P2574 XOR的艺术&#34;&gt;P2574 XOR的艺术&lt;/a&gt; 线段树&lt;/li&gt;
&lt;li&gt;20/03/11 &lt;a href=&#34;https://imyangty.com/oi/1100&#34; title=&#34;P1077 摆花&#34;&gt;P1077 摆花&lt;/a&gt; 背包求方案数&lt;/li&gt;
&lt;li&gt;20/03/11 &lt;a href=&#34;https://imyangty.com/oi/1101&#34; title=&#34;P3146 [USACO16OPEN]248 G&#34;&gt;P3146 [USACO16OPEN]248 G&lt;/a&gt; 区间 dp&lt;/li&gt;
&lt;li&gt;20/03/11 &lt;a href=&#34;https://imyangty.com/oi/1102&#34; title=&#34;P1471 方差&#34;&gt;P1471 方差&lt;/a&gt; 线段树维护区间方差和平均值&lt;/li&gt;
&lt;li&gt;20/03/12 &lt;a href=&#34;https://imyangty.com/oi/1103&#34; title=&#34;P1438 无聊的数列&#34;&gt;P1438 无聊的数列&lt;/a&gt; 线段树，区间加等差&lt;/li&gt;
&lt;li&gt;20/03/12 &lt;a href=&#34;https://imyangty.com/oi/1104&#34; title=&#34;P1352 没有上司的舞会&#34;&gt;P1352 没有上司的舞会&lt;/a&gt; 树形 dp&lt;/li&gt;
&lt;li&gt;20/03/12 &lt;a href=&#34;https://imyangty.com/oi/1105&#34; title=&#34;P2014 [CTSC1997]选课&#34;&gt;P2014 [CTSC1997]选课&lt;/a&gt; 树上背包&lt;/li&gt;
&lt;li&gt;20/03/12 SP2713 GSS4 - Can you answer these queries IV IO 有特殊要求的 P4145&lt;/li&gt;
&lt;li&gt;20/03/12 P1531 I Hate It 线段树 RMQ，相似 HDU1754&lt;/li&gt;
&lt;li&gt;20/03/12 &lt;a href=&#34;https://imyangty.com/oi/1106&#34; title=&#34;P1103 书本整理&#34;&gt;P1103 书本整理&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/13 &lt;a href=&#34;https://imyangty.com/oi/1107&#34; title=&#34;P1359 租用游艇&#34;&gt;P1359 租用游艇&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/13 P2068 统计和 树状数组模板 1&lt;/li&gt;
&lt;li&gt;20/03/13 &lt;a href=&#34;https://imyangty.com/oi/1108&#34; title=&#34;P2196 挖地雷&#34;&gt;P2196 挖地雷&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/13 &lt;a href=&#34;https://imyangty.com/oi/1109&#34; title=&#34;P1802 5倍经验日&#34;&gt;P1802 5倍经验日&lt;/a&gt; 背包&lt;/li&gt;
&lt;li&gt;20/03/13 &lt;a href=&#34;https://imyangty.com/oi/1110&#34; title=&#34;P4017 最大食物链计数&#34;&gt;P4017 最大食物链计数&lt;/a&gt; 拓扑排序&lt;/li&gt;
&lt;li&gt;20/03/13 P3183 [HAOI2016]食物链 P4017 加特判&lt;/li&gt;
&lt;li&gt;20/03/13 &lt;a href=&#34;https://imyangty.com/oi/1111&#34; title=&#34;P5507 机关&#34;&gt;P5507 机关&lt;/a&gt; A*可过&lt;/li&gt;
&lt;li&gt;20/03/13 &lt;a href=&#34;https://imyangty.com/oi/1112&#34; title=&#34;P1347 排序&#34;&gt;P1347 排序&lt;/a&gt; 拓扑排序&lt;/li&gt;
&lt;li&gt;20/03/14 &lt;a href=&#34;https://imyangty.com/oi/1113&#34; title=&#34;P1233 木棍加工&#34;&gt;P1233 木棍加工&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/14 &lt;a href=&#34;https://imyangty.com/oi/1114&#34; title=&#34;P2758 编辑距离&#34;&gt;P2758 编辑距离&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/14 &lt;a href=&#34;https://imyangty.com/oi/1115&#34; title=&#34;P5524 [Ynoi2012]NOIP2015洋溢着希望&#34;&gt;P5524 [Ynoi2012]NOIP2015洋溢着希望&lt;/a&gt; 线段树维护 &lt;span class=&#34;math inline&#34;&gt;\(\\sum\\sin a\_i\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;20/03/27 &lt;a href=&#34;https://imyangty.com/oi/1117&#34; title=&#34;P1941 飞扬的小鸟&#34;&gt;P1941 飞扬的小鸟&lt;/a&gt; 背包&lt;/li&gt;
&lt;li&gt;20/03/27 &lt;a href=&#34;https://imyangty.com/oi/1119&#34; title=&#34;P1336 最佳课题选择&#34;&gt;P1336 最佳课题选择&lt;/a&gt; 背包&lt;/li&gt;
&lt;li&gt;20/03/27 &lt;a href=&#34;https://imyangty.com/oi/1121&#34; title=&#34;P2831 愤怒的小鸟&#34;&gt;P2831 愤怒的小鸟&lt;/a&gt; 状压dp&lt;/li&gt;
&lt;li&gt;20/03/28 &lt;a href=&#34;https://imyangty.com/oi/1122&#34; title=&#34;P4933 大师&#34;&gt;P4933 大师&lt;/a&gt; dp&lt;/li&gt;
&lt;li&gt;20/03/28 &lt;a href=&#34;https://imyangty.com/oi/1123&#34; title=&#34;P4170 [CQOI2007]涂色&#34;&gt;P4170 [CQOI2007]涂色&lt;/a&gt; 区间 dp&lt;/li&gt;
&lt;li&gt;20/03/28 &lt;a href=&#34;https://imyangty.com/oi/1124&#34; title=&#34;P1827 [USACO3.4]美国血统 American Heritage&#34;&gt;P1827 [USACO3.4]美国血统 American Heritage&lt;/a&gt; 求后序排列&lt;/li&gt;
&lt;li&gt;20/03/28 P4913 【深基16.例3】二叉树深度 弱智 dfs&lt;/li&gt;
&lt;li&gt;20/03/29 &lt;a href=&#34;https://imyangty.com/oi/1125&#34; title=&#34;P4868 Preprefix sum&#34;&gt;P4868 Preprefix sum&lt;/a&gt; 单点修改，前前缀和查询&lt;/li&gt;
&lt;li&gt;20/03/29 &lt;a href=&#34;https://imyangty.com/oi/1126&#34; title=&#34;P4231 三步必杀&#34;&gt;P4231 三步必杀&lt;/a&gt; 区间加等差，最后求最值及异或和&lt;/li&gt;
&lt;li&gt;20/03/29 P2367 语文成绩 差分&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AC 250 祭&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>

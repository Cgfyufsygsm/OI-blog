<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>容斥原理 on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/inclusion-exclusion-principle/</link>
        <description>Recent content in 容斥原理 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Thu, 24 Mar 2022 15:31:08 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/inclusion-exclusion-principle/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>P3301 [SDOI2013]方程</title>
        <link>https://oi.imyangty.com/sol-luogu-p3301/</link>
        <pubDate>Mon, 02 Aug 2021 00:00:57 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p3301/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg56.webp" alt="Featured image of post P3301 [SDOI2013]方程" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定不定方程 &lt;span class=&#34;math display&#34;&gt;\[
x_1 + x_2 + \cdots + x_n = m
\]&lt;/span&gt; 对于 &lt;span class=&#34;math inline&#34;&gt;\(i\in[1, n_1]\)&lt;/span&gt;，有如下限制： &lt;span class=&#34;math display&#34;&gt;\[
x_i\le A_i
\]&lt;/span&gt; 对于 &lt;span class=&#34;math inline&#34;&gt;\(i\in (n_1,n_2]\)&lt;/span&gt;，有如下限制： &lt;span class=&#34;math display&#34;&gt;\[
x_i\ge A_i
\]&lt;/span&gt; 求该方程正整数解的组数。答案对 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 取模，&lt;span class=&#34;math inline&#34;&gt;\(p\in\{10007,262203414,437367875\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;首先考虑不定方程 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i =1}^nx_i = m\)&lt;/span&gt; 的&lt;strong&gt;正整数解个数&lt;/strong&gt;，显然其为插板法： &lt;span class=&#34;math display&#34;&gt;\[
\binom{m - 1}{n - 1}
\]&lt;/span&gt; 然后我们考虑 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i\)&lt;/span&gt; 的限制，显然，我们把 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 减去 &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = n_1 + 1}^{n_2}(A_i - 1)\)&lt;/span&gt;，然后就把问题转化为了直接插板。&lt;/p&gt;
&lt;p&gt;然后考虑到 &lt;span class=&#34;math inline&#34;&gt;\(x_i\le A_i\)&lt;/span&gt; 的限制不好处理，既然限制数最大为 &lt;span class=&#34;math inline&#34;&gt;\(8\)&lt;/span&gt;，不如考虑容斥，将其转化为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\ge A_i + 1\)&lt;/span&gt; 的形式来处理。&lt;/p&gt;
&lt;p&gt;这样子每次计算的答案为 &lt;span class=&#34;math display&#34;&gt;\[
\binom{m&amp;#39; - 1}{n - 1}\bmod p
\]&lt;/span&gt; 然后这一坨式子是可以使用扩展 Lucas 来算的（因为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 不为质数）。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;分解一下三个模数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(262203414 = 2\times 3\times 11\times397\times10007\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(437367875 = 5^3\times7^3\times101^2\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(10007\)&lt;/span&gt; 是质数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样子可以省去扩展卢卡斯分析 &lt;span class=&#34;math inline&#34;&gt;\(q^k\)&lt;/span&gt; 的过程，大大减少常数。&lt;/p&gt;
&lt;p&gt;同时优化一下扩展卢卡斯处理阶乘的过程，提前计算好，这样也可以大力卡常。不然根本卡不过去。&lt;/p&gt;
&lt;p&gt;一定要注意传进去计算 &lt;span class=&#34;math inline&#34;&gt;\(\dbinom n m\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(n &amp;lt; m\)&lt;/span&gt; 的情况是存在的，一定要特判掉。&lt;/p&gt;
&lt;p&gt;细节较多。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cassert&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {}&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T, p;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, n1, n2, m;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[&lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qPow(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a * a % p)&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * ret * a % p;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; p10007 {&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod = &lt;span class=&#34;dv&#34;&gt;10007&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fac[&lt;span class=&#34;dv&#34;&gt;10050&lt;/span&gt;], invfac[&lt;span class=&#34;dv&#34;&gt;10050&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init() {&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fac[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) fac[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        invfac[mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = qPow(fac[mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, mod);&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) invfac[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * invfac[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; C(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * fac[n] * invfac[m] % mod * invfac[n - m] % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * lucas(n / p, m / p, p) * C(n % p, m % p, p) % p;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; exgcd(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!b) {&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(b, a % b, y, x);&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    y -= a / b * x;&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; inv(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    exgcd(n, p, x, y);&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (x + p) % p;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q1[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;397&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10007&lt;/span&gt;}, q2[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;101&lt;/span&gt;}, q[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; qk1[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;397&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10007&lt;/span&gt;}, qk2[] = {&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;125&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;343&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10201&lt;/span&gt;}, qk[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;], d;&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; retfac[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = retfac[i];&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ret = qPow(ret, n / qk[i], qk[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, n / qk[i] * qk[i] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j % q[i]) ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * ret * (j % qk[i]) % qk[i];&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * ret * calc(n / q[i], i) % qk[i];&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; multiLucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = n; j; j /= q[i]) cnt += j / q[i];&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = m; j; j /= q[i]) cnt -= j / q[i];&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = n - m; j; j /= q[i]) cnt -= j / q[i];&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * qPow(q[i], cnt, qk[i]) * calc(n, i) % qk[i] * inv(calc(m, i), qk[i]) % qk[i] * inv(calc(n - m, i), qk[i]) % qk[i];&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; CRT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod) {&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; M = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) M *= m[i];&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; w = M / m[i];&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret = (ret + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * a[i] * w % mod * inv(w, m[i]) % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (ret + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; exLucas(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p) {&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;lt; m) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p == &lt;span class=&#34;dv&#34;&gt;10007&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p10007::lucas(n, m, p);&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d) a[i] = multiLucas(n, m, i);&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; CRT(d, a, qk, p);&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; init() {&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p == &lt;span class=&#34;dv&#34;&gt;262203414&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        d = &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d) qk[i] = qk1[i], q[i] = q1[i];&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-109&#34;&gt;&lt;a href=&#34;#cb1-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        d = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-110&#34;&gt;&lt;a href=&#34;#cb1-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d) qk[i] = qk2[i], q[i] = q2[i];&lt;/span&gt;
&lt;span id=&#34;cb1-111&#34;&gt;&lt;a href=&#34;#cb1-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-112&#34;&gt;&lt;a href=&#34;#cb1-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d) {&lt;/span&gt;
&lt;span id=&#34;cb1-113&#34;&gt;&lt;a href=&#34;#cb1-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        retfac[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-114&#34;&gt;&lt;a href=&#34;#cb1-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, qk[i])&lt;/span&gt;
&lt;span id=&#34;cb1-115&#34;&gt;&lt;a href=&#34;#cb1-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j % q[i]) retfac[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * retfac[i] * j % qk[i];&lt;/span&gt;
&lt;span id=&#34;cb1-116&#34;&gt;&lt;a href=&#34;#cb1-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-117&#34;&gt;&lt;a href=&#34;#cb1-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-118&#34;&gt;&lt;a href=&#34;#cb1-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-119&#34;&gt;&lt;a href=&#34;#cb1-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-120&#34;&gt;&lt;a href=&#34;#cb1-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-121&#34;&gt;&lt;a href=&#34;#cb1-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(T), read(p);&lt;/span&gt;
&lt;span id=&#34;cb1-122&#34;&gt;&lt;a href=&#34;#cb1-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    p10007::init();&lt;/span&gt;
&lt;span id=&#34;cb1-123&#34;&gt;&lt;a href=&#34;#cb1-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    init();&lt;/span&gt;
&lt;span id=&#34;cb1-124&#34;&gt;&lt;a href=&#34;#cb1-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--) {&lt;/span&gt;
&lt;span id=&#34;cb1-125&#34;&gt;&lt;a href=&#34;#cb1-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(n), read(n1), read(n2), read(m);&lt;/span&gt;
&lt;span id=&#34;cb1-126&#34;&gt;&lt;a href=&#34;#cb1-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n1 + n2) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-127&#34;&gt;&lt;a href=&#34;#cb1-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, n1 + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n1 + n2) m -= a[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-128&#34;&gt;&lt;a href=&#34;#cb1-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-129&#34;&gt;&lt;a href=&#34;#cb1-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(S, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; n1) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-130&#34;&gt;&lt;a href=&#34;#cb1-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; popcnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, nowm = m;&lt;/span&gt;
&lt;span id=&#34;cb1-131&#34;&gt;&lt;a href=&#34;#cb1-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n1)&lt;/span&gt;
&lt;span id=&#34;cb1-132&#34;&gt;&lt;a href=&#34;#cb1-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &amp;amp; S) nowm -= a[i], ++popcnt;&lt;/span&gt;
&lt;span id=&#34;cb1-133&#34;&gt;&lt;a href=&#34;#cb1-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = exLucas(nowm - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p);&lt;/span&gt;
&lt;span id=&#34;cb1-134&#34;&gt;&lt;a href=&#34;#cb1-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = (ans + ((popcnt &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (p - tmp + p) % p : tmp)) % p;&lt;/span&gt;
&lt;span id=&#34;cb1-135&#34;&gt;&lt;a href=&#34;#cb1-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-136&#34;&gt;&lt;a href=&#34;#cb1-136&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(ans), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-137&#34;&gt;&lt;a href=&#34;#cb1-137&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-138&#34;&gt;&lt;a href=&#34;#cb1-138&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-139&#34;&gt;&lt;a href=&#34;#cb1-139&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P6076 [JSOI2015]染色问题</title>
        <link>https://oi.imyangty.com/sol-luogu-p6076/</link>
        <pubDate>Sat, 31 Jul 2021 15:47:12 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p6076/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg21.webp" alt="Featured image of post P6076 [JSOI2015]染色问题" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;萌萌家有一个棋盘，这个棋盘是一个 &lt;span class=&#34;math inline&#34;&gt;\(n \times m\)&lt;/span&gt; 的矩形，分成 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 行 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 列共 &lt;span class=&#34;math inline&#34;&gt;\(n \times m\)&lt;/span&gt; 个小方格。 现在萌萌和南南有 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 种不同颜色的颜料，他们希望把棋盘用这些颜料染色，并满足以下规定：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;棋盘的每一个小方格既可以染色（染成 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 种颜色中的一种），也可以不染色。&lt;/li&gt;
&lt;li&gt;棋盘的每一行至少有一个小方格被染色。&lt;/li&gt;
&lt;li&gt;棋盘的每一列至少有一个小方格被染色。&lt;/li&gt;
&lt;li&gt;每种颜色都在棋盘上出现至少一次。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;求染色方案总数模 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 的值&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;考虑容斥：枚举 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 行 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 列没有染色，有 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 种颜色没有染。那么答案就是 &lt;span class=&#34;math display&#34;&gt;\[
(C + 1)^{nm} - \sum_{i = 1}^n\sum_{j = 1}^m\sum_{k = 1}^C (C - k + 1)^{(n - i)(m - j)}\binom n i\binom m j\binom c k(-1)^{i + j + k}
\]&lt;/span&gt; 直接算这个答案就可以了。复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nmc)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;快速幂太慢了，考虑先枚举 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，然后预处理出所有的 &lt;span class=&#34;math inline&#34;&gt;\((c - k + 1)\)&lt;/span&gt; 的幂。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;405&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, m, c, binom[maxn][maxn], pow[maxn * maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;m, &amp;amp;c);&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    binom[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = binom[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;400&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        binom[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, binom[i][i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            binom[i][j] = (binom[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + binom[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, c) {&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pow[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n * m) pow[i] = pow[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (c - k + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ans = (ans + (((i + j + k) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * binom[n][i] % mod * binom[m][j] % mod * binom[c][k] % mod * pow[(n - i) * (m - j)]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>多项式全家桶笔记</title>
        <link>https://oi.imyangty.com/note-poly/</link>
        <pubDate>Sat, 13 Mar 2021 12:41:09 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-poly/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg23.webp" alt="Featured image of post 多项式全家桶笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;upd：笔者写这篇文章的时候水平不足，在省选后可能会考虑重构，并将生成函数计数和形式幂级数科技分开。&lt;/p&gt;
&lt;p&gt;多项式全家桶的总结笔记。篇幅极长，善用 TOC 进行跳转。&lt;/p&gt;
&lt;p&gt;如有错漏之处烦请指出。&lt;/p&gt;
&lt;h2 id=&#34;开始全家桶之前&#34;&gt;开始全家桶之前&lt;/h2&gt;
&lt;h3 id=&#34;形式化定义&#34;&gt;形式化定义&lt;/h3&gt;
&lt;p&gt;约定：&lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;（或者 &lt;span class=&#34;math inline&#34;&gt;\([x^i]f(x)\)&lt;/span&gt;）表示 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x^i\)&lt;/span&gt; 处的系数，即一个多项式可以表示为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{i = 0} f_ix^i\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;两个多项式的加减法定义为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) \pm g(x) = \sum_{i = 0}(f_i \pm g_i)x^i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;两个多项式的乘法（加法卷积）定义为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x)*g(x) = \sum_{i = 0}x^i\sum_{j = 0}f_jg_{i - j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不难发现其正确性。可以手动模拟一下多项式的乘法看看是不是这样子的。其本质也就是卷完之后合并同类项。朴素的做的话复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，下面要讲的 FFT/NTT 可以加速到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;界&#34;&gt;界&lt;/h3&gt;
&lt;p&gt;有些时候，题目只对多项式的前若干项感兴趣，所以我们给运算设定一个上界，即 &lt;span class=&#34;math inline&#34;&gt;\(\pmod{x^n}\)&lt;/span&gt;。意思就是&lt;strong&gt;只考虑这个多项式的前 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 项&lt;/strong&gt;，从 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 开始以后的全部舍掉。&lt;/p&gt;
&lt;p&gt;不难发现由加法和乘法是从低位到高位贡献的，所以&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(f(x) \bmod{x^n} \pm g(x)\bmod{x^n})\bmod{x^n} &amp;amp;= (f(x) \pm g(x))\bmod{x^n}\\
(f(x) \bmod{x^n}) * (g(x)\bmod{x^n})\bmod{x^n} &amp;amp;= (f(x) * g(x))\bmod{x^n}\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下面我们就开始学习多项式的各种操作吧&lt;/p&gt;
&lt;h2 id=&#34;快速傅里叶变换fft&#34;&gt;快速傅里叶变换（FFT)&lt;/h2&gt;
&lt;p&gt;FFT 可以加速卷积，让时间复杂度从 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 降到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;，学习 FFT 的基础操作前，需要先了解复数，因为 FFT 就是基于单位复数根的良好性质实现的。&lt;/p&gt;
&lt;h3 id=&#34;复数基础&#34;&gt;复数基础&lt;/h3&gt;
&lt;p&gt;（数学旧人教选修 2-2 内容）&lt;/p&gt;
&lt;p&gt;定义虚数单位 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm i = \sqrt{-1}\)&lt;/span&gt;，把形如 &lt;span class=&#34;math inline&#34;&gt;\(a + b\mathrm i\:(a,b\in\mathbb R)\)&lt;/span&gt; 的数称为复数，所有复数的集合称为复数集 &lt;span class=&#34;math inline&#34;&gt;\(\mathbb C\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;复数一般使用 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 表示，表示为 &lt;span class=&#34;math inline&#34;&gt;\(z = a + b\mathrm i\)&lt;/span&gt;，这种形式称为复数的代数形式。&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 被称为复数的实部，&lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; 称为复数的虚部，未加说明的情况下一般认为 &lt;span class=&#34;math inline&#34;&gt;\(a,b\in\mathbb R\)&lt;/span&gt;。很明显地，当 &lt;span class=&#34;math inline&#34;&gt;\(a = 0\land b\not=0\)&lt;/span&gt; 时，这个复数为纯虚数，当 &lt;span class=&#34;math inline&#34;&gt;\(b=0\)&lt;/span&gt; 时，这个复数为实数。&lt;/p&gt;
&lt;p&gt;每个复数 &lt;span class=&#34;math inline&#34;&gt;\(a + b\mathrm i\)&lt;/span&gt; 都能对应平面直角坐标系里面的一个点 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\)&lt;/span&gt;，同样的也可以对应一个向量 &lt;span class=&#34;math inline&#34;&gt;\((a,b)\)&lt;/span&gt;。故定义复数的模为 &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{a^2 + b^2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;定义复数的加法与乘法： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;(a + b\mathrm i) + (c + d\mathrm i)\\
=&amp;amp;(a + c) + (b + d)\mathrm i
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;(a+b\mathrm i)(c + d\mathrm i)\\
=&amp;amp;ac + ad\mathrm i + cb\mathrm i + bd\mathrm i^2\\
=&amp;amp;(ac - bd) + (ad + bc)\mathrm i
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这都是比较显然的。&lt;/p&gt;
&lt;p&gt;容易看出复数满足很多实数的运算律。&lt;/p&gt;
&lt;p&gt;定义复数 &lt;span class=&#34;math inline&#34;&gt;\(z=a+b\mathrm i\)&lt;/span&gt; 的共轭复数为 &lt;span class=&#34;math inline&#34;&gt;\(\overline{z} = a - b\mathrm i\)&lt;/span&gt;，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(\overline{z}\)&lt;/span&gt; 关于实轴对称。 &lt;span class=&#34;math display&#34;&gt;\[
z\overline z=(a+b\mathrm i)(a-b\mathrm i) = a^2 + b^2=|z|^2
\]&lt;/span&gt; 复数既然可以对应平面直角坐标系中的向量，不难发现其可以使用其模长与辐角来表示： &lt;span class=&#34;math display&#34;&gt;\[
z=a+b\mathrm i\iff z = r(\cos\theta+\mathrm i\sin\theta)
\]&lt;/span&gt; 其中 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; 的模长，&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; 为其辐角。即我们可以把一个复数表示成二元组 &lt;span class=&#34;math inline&#34;&gt;\((r,\theta)\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;p&gt;现在考虑两个复数 &lt;span class=&#34;math inline&#34;&gt;\((r_1,\theta_1)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\((r_2,\theta_2)\)&lt;/span&gt; 相乘得到的结果： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(r_1,\theta_1)\times(r_2,\theta_2) &amp;amp;= r_1(\cos\theta_1 + \mathrm i\sin\theta_1)r_2(\cos\theta_2 + \mathrm i\sin\theta_2)\\
&amp;amp;=r_1r_2(\cos\theta_1\cos\theta_2 - \sin\theta_1\sin\theta_2 + \mathrm i\sin\theta_1\cos\theta_2 + \mathrm i\sin\theta_2\cos\theta_1)\\
&amp;amp;=r_1r_2\left(\cos(\theta_1 + \theta_2) + \mathrm i\sin(\theta_1 + \theta_2)\right)\\
&amp;amp;=(r_1r_2,\theta_1 + \theta_2)
\end{aligned}
\]&lt;/span&gt; 于是我们可以概括复数乘法的法则：模长相乘，辐角相加。（上述推导需要掌握基本的三角恒等变换）&lt;/p&gt;
&lt;h3 id=&#34;从欧拉公式到单位圆&#34;&gt;从欧拉公式到单位圆&lt;/h3&gt;
&lt;p&gt;给出复数指数幂的定义： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm e^{x +y\mathrm i} = e^x(\cos y + \mathrm i\sin y)
\]&lt;/span&gt; 这个公式是基于如下事实（可以理解为这几个函数在 &lt;span class=&#34;math inline&#34;&gt;\(x = 0\)&lt;/span&gt; 处的泰勒展开）： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sin(x) &amp;amp;= x - \frac{x^3}{3!}+\frac{x^5}{5!} - \frac{x^7}{7!} + \frac{x^9}{9!} + \cdots = \sum_{k = 1}^\infty\frac{(-1)^{k - 1}x^{2k - 1}}{(2k-1)!}\\
\cos(x) &amp;amp;= 1 - \frac{x^2}{2!} + \frac{x^4}{4!} - \frac{x^6}{6!} + \frac{x^8}{8!} + \cdots = \sum_{k = 0}^\infty\frac{(-1)^{k} x^{2k}}{(2k)!}\\
\mathrm e^x &amp;amp;= 1 + x + \frac{x^2}{2!} + \frac{x^3}{3!} + \frac{x^4}{4!} + \cdots = \sum_{k = 0}^\infty\frac{x^k}{k!}
\end{aligned}
\]&lt;/span&gt; 将 &lt;span class=&#34;math inline&#34;&gt;\(x + y\mathrm i\)&lt;/span&gt; 代入进去即可推导。&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&#34;math inline&#34;&gt;\(x = 0\)&lt;/span&gt;，我们就得到大名鼎鼎的欧拉公式： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm e^{x\mathrm i} = \cos x + \mathrm i\sin x
\]&lt;/span&gt; 更特殊地，如果 &lt;span class=&#34;math inline&#34;&gt;\(x = \pi\)&lt;/span&gt;，得到的就是下面这个神奇的式子： &lt;span class=&#34;math display&#34;&gt;\[
\mathrm e^{\pi\mathrm i} = -1
\]&lt;/span&gt; 复平面上我们可以定义类似于平面直角坐标系上的单位圆，单位圆上的所有复数构成集合 &lt;span class=&#34;math inline&#34;&gt;\(\{z: |z| = 1\}\)&lt;/span&gt;。这些复数都可以表示为 &lt;span class=&#34;math inline&#34;&gt;\(\cos\theta + \mathrm i\sin\theta\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(e^{\theta \mathrm i}\)&lt;/span&gt; 的形式。&lt;/p&gt;
&lt;h3 id=&#34;多项式的表示法&#34;&gt;多项式的表示法&lt;/h3&gt;
&lt;p&gt;系数表示法：顾名思义 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = a_0 + a_1x + a_2x^2 + \cdots + a_nx^n\iff f(x) = \{a_0,a_1,a_2,\cdots,a_n\} = 
\begin{bmatrix}
x^0 &amp;amp; x^1 &amp;amp; x^2 &amp;amp;\cdots &amp;amp; x^n
\end{bmatrix}
\begin{bmatrix}
a_0\\a_1\\a_2\\\vdots\\a_n
\end{bmatrix}
\]&lt;/span&gt; 点值表示法：&lt;/p&gt;
&lt;p&gt;我们知道由一个多项式在 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 个点上的取值是可以唯一确定一个多项式的，其本质也就是线性方程组的解。所以一个 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次多项式可以用 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 个点表示：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) = \{(x_0,y_0),(x_1,y_1),\cdots,(x_n,y_n)\}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;或者：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
x_0^0 &amp;amp; x_0^1 &amp;amp; x_0^2 &amp;amp;\cdots &amp;amp;x_0^n\\
x_1^0 &amp;amp; x_1^1 &amp;amp; x_1^2 &amp;amp;\cdots &amp;amp; x_1^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
x_n^0 &amp;amp; x_n^1 &amp;amp; x_n^2 &amp;amp; \cdots &amp;amp; x_n^n
\end{bmatrix}\begin{bmatrix}
a_0\\a_1\\ \vdots \\ a_n
\end{bmatrix}
=\begin{bmatrix}
y_0\\y_1\\ \vdots\\ y_n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;通过下面的这个形式我们看得出来其就是一个典型的线性方程组的形式，不难证明其解的唯一性。&lt;/p&gt;
&lt;p&gt;并且我们发现点值表示法有一个很明显的优势：可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的时间内将两个多项式乘起来，只需把对应点的 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; 乘起来即可。&lt;/p&gt;
&lt;p&gt;通俗的来说，FFT 实现的就是快速求多项式乘法的过程：先把系数表示法转成点值表示法（DFT，离散傅里叶变换），乘完之后再把点值还原为插值（IDFT，离散傅里叶逆变换）。可是朴素的 DFT 需要的时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;，IDFT 还回其系数需要高斯消元是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的。而 FFT 利用了一些很特殊很特殊的值加速了 DFT 和 IDFT 的过程，使得总时间复杂度降低到了 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;单位复数根&#34;&gt;单位复数根&lt;/h3&gt;
&lt;p&gt;解这个方程： &lt;span class=&#34;math display&#34;&gt;\[
x^n = 1
\]&lt;/span&gt; 我们会发现这个方程在实数范围内只有 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 或者 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 个解。然而代数基本定理告诉我们这样的方程有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个复数域上的解。由模长相乘辐角相加我们知道因为最终 &lt;span class=&#34;math inline&#34;&gt;\(x^n = 1\)&lt;/span&gt;，所以这些满足条件的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的模长必定也是 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。然后需要满足他们的辐角的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 倍能被 &lt;span class=&#34;math inline&#34;&gt;\(2\pi\)&lt;/span&gt; 整除。&lt;/p&gt;
&lt;p&gt;不难发现其就是 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 等分单位圆：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://oi-wiki.org/math/poly/images/fft2.jpg&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;我们记 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 次单位根的第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个记为 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n^k\)&lt;/span&gt;，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\omega_k^n = \mathrm e^{\frac{2k\pi i}{n}}\)&lt;/span&gt;。由此可见，单位复数根具有一些非常好的性质比如： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\omega_n^0 = \omega_n^n &amp;amp;= 1\\
\omega_n^k &amp;amp;= \omega_{2n}^{2k}\\
\omega_{2n}^{k + n} &amp;amp;= -\omega_{2n}^k\\
\left(\omega_{2n}^{k + n}\right)^2 &amp;amp;=\omega_n^k 
\end{aligned}
\]&lt;/span&gt; 利用这些性质，我们可以加速 DFT 的过程。FFT 就是利用分治思想加速求每个 &lt;span class=&#34;math inline&#34;&gt;\(f(\omega_n^k)\)&lt;/span&gt; 的值&lt;/p&gt;
&lt;h3 id=&#34;dft&#34;&gt;DFT&lt;/h3&gt;
&lt;p&gt;此时 DFT 的分治思想就是分开考虑奇次项和偶次项：&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = a_0x^0 + a_1x^1 + a_2x^2 + \cdots
\]&lt;/span&gt; 将其分为两个多项式 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(x) &amp;amp;= a_0x^0 + a_2x^2 + a_4x^4 + a_6x^6 + a_8x^8 + \cdots +a_1x^1 + a_3x^3 + a_5x^5 + a_7x^7 + a_9x^9 + \cdots\\
&amp;amp;= a_0x^0 + a_2x^2 + a_4x^4 + a_6x^6 + a_8x^8+\cdots +x(a_1x^0 + a_3x^2 + a_5x^4 + a_7x^6 + \cdots)
\end{aligned}
\]&lt;/span&gt; 考虑两个新多项式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_0(x) &amp;amp;= a_0x^0 + a_2x^1 + a_4x^2 + a_6x^3 + \cdots\\
f_1(x) &amp;amp;= a_1x^0 + a_3x^1 + a_5x^2 + a_7x^3 + \cdots
\end{aligned}
\]&lt;/span&gt; 不难发现 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = f_0(x^2) + xf_1(x^2)
\]&lt;/span&gt; 利用单位复数根的性质： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm{DFT}(f(\omega_n^k)) &amp;amp;= \mathrm{DFT}(f_0(\omega_n^{2k})) + \omega_n^k\mathrm{DFT}(f_1(\omega_n^{2k}))\\
&amp;amp;=\mathrm{DFT}(f_0(\omega_{\frac n2^k})) + \omega_n^k\mathrm{DFT}(f_1(\omega_{\frac n2^k}))
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm{DFT}(f(\omega_n^{k + \frac n2})) &amp;amp;= \mathrm{DFT}(f_0(\omega_n^{2k + n})) + \omega_{n}^{k + \frac n2}\mathrm{DFT}(f_1(\omega_n^{2k + n}))\\
&amp;amp;=\mathrm{DFT}(f_0(\omega_n^n\omega_n^{2k})) - \omega_n^k\mathrm{DFT}(f_1(\omega_n^n\omega_n^{2k}))\\
&amp;amp;=\mathrm{DFT}(f_0(\omega_{\frac n2^k})) - \omega_n^k\mathrm{DFT}(f_1(\omega_{\frac n2^k}))
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(k &amp;lt; \displaystyle\frac n2\)&lt;/span&gt;。不难发现只要我们求得出 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f_0(\omega_{\frac n2^k}))\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f_1(\omega_{\frac n2^k}))\)&lt;/span&gt; 的话，就可以同时求出 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f(\omega_n^k))\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f(\omega_n^{k + \frac n2}))\)&lt;/span&gt;。接下来再对 &lt;span class=&#34;math inline&#34;&gt;\(f_0\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(f_1\)&lt;/span&gt; 递归 DFT 即可。其时间复杂度函数是形如下面这样的： &lt;span class=&#34;math display&#34;&gt;\[
T(n) = T(n/2) + O(n)
\]&lt;/span&gt; 所以总复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(\Theta(n\log n)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;实际实现的时候一定要注意传进去的系数一定要是 &lt;span class=&#34;math inline&#34;&gt;\(2^m\)&lt;/span&gt; 个的，不然分治的过程中左右不一样会出问题。第一次传进去的时候就高位补 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，补成最高项次数为 &lt;span class=&#34;math inline&#34;&gt;\(2^{m - 1}\)&lt;/span&gt; 的多项式。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lim == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//常数项直接返回&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex a1[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], a2[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; lim; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a1[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i], a2[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;span class=&#34;co&#34;&gt;//把系数按照奇偶分开&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a1, type);&lt;span class=&#34;co&#34;&gt;//求 DFT(f_0())&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a2, type);&lt;span class=&#34;co&#34;&gt;//求 DFT(f_1())&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex Wn = complex(cos(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim), sin(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim)), w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); ++i, w = w * Wn)&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a1[i] + w * a2[i];&lt;span class=&#34;co&#34;&gt;//求 DFT(f(\omega_n^k))&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i + (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] = a1[i] - w * a2[i];&lt;span class=&#34;co&#34;&gt;//求 DFT(f(\omega_n^{k+\fracn2}))&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;idft&#34;&gt;IDFT&lt;/h3&gt;
&lt;p&gt;好了现在假装我们已经求出了两个多项式的点值表达并已经将他们乘起来，但是我们最终还是要把他还原回去到系数表示的。这个过程就叫做 IDFT。&lt;/p&gt;
&lt;p&gt;其实就是我们需要求解下面关于 &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; 的线性方程组：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
(\omega_n^0)^0 &amp;amp; (\omega_n^0)^1 &amp;amp; (\omega_n^0)^2 &amp;amp;\cdots &amp;amp;(\omega_n^0)^n\\
(\omega_n^1)^0 &amp;amp; (\omega_n^1)^1 &amp;amp; (\omega_n^1)^2 &amp;amp;\cdots &amp;amp; (\omega_n^1)^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{n})^0 &amp;amp; (\omega_n^{n})^1 &amp;amp; (\omega_n^{n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^n)^n
\end{bmatrix}
\begin{bmatrix}
a_0\\a_1\\ \vdots \\ a_n
\end{bmatrix}=\begin{bmatrix}
y_0\\y_1\\ \vdots\\ y_n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们将其乘上左边矩阵的逆：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
a_0\\a_1\\ \vdots \\ a_n
\end{bmatrix}=\begin{bmatrix}
(\omega_n^0)^0 &amp;amp; (\omega_n^0)^1 &amp;amp; (\omega_n^0)^2 &amp;amp;\cdots &amp;amp;(\omega_n^0)^n\\
(\omega_n^1)^0 &amp;amp; (\omega_n^1)^1 &amp;amp; (\omega_n^1)^2 &amp;amp;\cdots &amp;amp; (\omega_n^1)^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{n})^0 &amp;amp; (\omega_n^{n})^1 &amp;amp; (\omega_n^{n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^n)^n
\end{bmatrix}^{-1}
\begin{bmatrix}
y_0\\y_1\\ \vdots\\ y_n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;模相同的正交列向量构成的矩阵的逆是转置的模分之一倍，所以：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
(\omega_n^0)^0 &amp;amp; (\omega_n^0)^1 &amp;amp; (\omega_n^0)^2 &amp;amp;\cdots &amp;amp;(\omega_n^0)^n\\
(\omega_n^1)^0 &amp;amp; (\omega_n^1)^1 &amp;amp; (\omega_n^1)^2 &amp;amp;\cdots &amp;amp; (\omega_n^1)^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{n})^0 &amp;amp; (\omega_n^{n})^1 &amp;amp; (\omega_n^{n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^n)^n
\end{bmatrix}^{-1} =\frac {1}{n+1} \begin{bmatrix}
(\omega_n^{-0})^0 &amp;amp; (\omega_n^{-0})^1 &amp;amp; (\omega_n^{-0})^2 &amp;amp;\cdots &amp;amp;(\omega_n^{-0})^n\\
(\omega_n^{-1})^0 &amp;amp; (\omega_n^{-1})^1 &amp;amp; (\omega_n^{-1})^2 &amp;amp;\cdots &amp;amp; (\omega_n^{-1})^n\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; &amp;amp;\vdots\\
(\omega_n^{-n})^0 &amp;amp; (\omega_n^{-n})^1 &amp;amp; (\omega_n^{-n})^2 &amp;amp; \cdots &amp;amp; (\omega_n^{-n})^n
\end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以不难发现，IDFT 其实就是再做了一遍 DFT，只不过是反起来的。只是算出来最后的系数结果都要除以点值的个数，反映在代码里面就是那个 &lt;code&gt;lim&lt;/code&gt; 变量。&lt;/p&gt;
&lt;p&gt;不难发现 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n^k\)&lt;/span&gt; 的共轭就是虚部取反，所以可以在 DFT 函数里面传一个参数表示是否为 IDFT。&lt;/p&gt;
&lt;p&gt;这样子一个递归版的 FFT 就写完了，总体的代码如下：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; complex&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex(&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = xx, y = yy;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dft(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;span class=&#34;co&#34;&gt;//type = 1 DFT；type = -1 IDFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lim == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//返回常数项&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex a1[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], a2[lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; lim; i += &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a1[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i], a2[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = a[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a1, type);&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a2, type);&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex Wn = complex(cos(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim), type * sin(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / lim)), w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt; (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); ++i, w = w * Wn)&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a1[i] + w * a2[i];&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i + (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)] = a1[i] - w * a2[i];&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) b[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//lim一定要大于 n + m&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim, a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim, b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i];&lt;span class=&#34;co&#34;&gt;//点值乘起来&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dft(lim, a, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//IDFT还回去&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].x / lim + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;span class=&#34;co&#34;&gt;//最后要除那个数然后还原回去，四舍五入&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;位逆序置换&#34;&gt;位逆序置换&lt;/h3&gt;
&lt;p&gt;然而，上面的代码连模板都跑不过去……&lt;/p&gt;
&lt;p&gt;考虑继续优化 DFT 的过程。递归的过程中开了大量的空间并且常数巨大，考虑非递归写法。&lt;/p&gt;
&lt;p&gt;只考虑我们对 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt; 操作：&lt;/p&gt;
&lt;p&gt;递归的过程：&lt;/p&gt;
&lt;pre class=&#34;plain&#34;&gt;&lt;code&gt;original        0   1   2   3   4   5   6   7
recursion#1     0   2   4   6   1   3   5   7
recursion#2     0   4   2   6   1   5   3   7
recursion#3     0   4   2   6   1   5   3   7
original bin    000 001 010 011 100 101 110 111
now bin         000 100 010 110 001 101 011 111&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可见递归到最后的结果无非就是一个二进制反转。&lt;/p&gt;
&lt;p&gt;所以我们可以考虑非递归，一开始就先把所有的数放到最后的位置，然后迭代的时候一步步还回去即可。这个过程就是位逆序置换（蝴蝶变换）&lt;/p&gt;
&lt;p&gt;考虑处理出 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 二进制位翻转之后的数 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;。易知 &lt;span class=&#34;math inline&#34;&gt;\(R(0) = 0\)&lt;/span&gt;。我们可以从小到大求 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;。很明显，&lt;span class=&#34;math inline&#34;&gt;\(\lfloor x/2\rfloor\)&lt;/span&gt; 的二进制位是 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 右移一位，那么如果知道了 &lt;span class=&#34;math inline&#34;&gt;\(R(\lfloor x/2\rfloor)\)&lt;/span&gt; 就可以很容易的求出 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;，再分 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的奇偶性判断就可以了。 &lt;span class=&#34;math display&#34;&gt;\[
R(x) = \left\lfloor\frac{R(\lfloor x/2\rfloor)}{2}\right\rfloor + (x\bmod 2)\times\frac{len}2
\]&lt;/span&gt; 举个例子：翻转 &lt;span class=&#34;math inline&#34;&gt;\((10101110)_2\)&lt;/span&gt;，首先我们知道它的二分之一倍为 &lt;span class=&#34;math inline&#34;&gt;\((01010111)_2\)&lt;/span&gt;，其翻转结果为 &lt;span class=&#34;math inline&#34;&gt;\((11101010)_2\)&lt;/span&gt;，除以二变为 &lt;span class=&#34;math inline&#34;&gt;\((01110101)_2\)&lt;/span&gt;，由于它是偶数所以前面不用补 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。不难发现其就是一开始要求的翻转结果。&lt;/p&gt;
&lt;p&gt;预处理翻转结果的代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | (((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后在处理翻转的时候只需要下面几行：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        myswap(a[i], a[rev[i]]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不难验证其正确性。&lt;/p&gt;
&lt;p&gt;而且观察我们在求 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{DFT}(f(\omega_n^k))\)&lt;/span&gt; 时我们需要算两遍 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n^k\mathrm{DFT}(f_1(\omega_{\frac n2^k}))\)&lt;/span&gt;，复数的乘法常数很大，考虑使用临时变量记录以降低常数。&lt;/p&gt;
&lt;p&gt;这样子的话迭代版的 DFT 过程就很好写了：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(a[i], a[rev[i]]);&lt;span class=&#34;co&#34;&gt;//先预处理翻转完了的结果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//模拟合并答案的过程，即为所谓的 n&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//即上面的 n / 2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        complex Wp = complex(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p));&lt;span class=&#34;co&#34;&gt;//处理出 p 次单位根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;span class=&#34;co&#34;&gt;//对每一个进行合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            complex w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//处理 \omega_p^0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;span class=&#34;co&#34;&gt;//开始合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;co&#34;&gt;//此时的 a[l] 就是之前的 a1[i]，a[len + l] 就是之前的 a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                complex tmp = w * a[len + l];&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[len + l] = a[l] - tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i + (lim &amp;gt;&amp;gt; 1)] = a1[i] - w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[l] = a[l] + tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i] = a1[i] + w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;多项式乘法的实现&#34;&gt;多项式乘法的实现&lt;/h3&gt;
&lt;p&gt;总的一个非递归版 FFT 的实现如下（&lt;a href=&#34;https://www.luogu.com.cn/problem/P3803&#34;&gt;洛谷 P3803&lt;/a&gt;）：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-7&#34;&gt;&lt;a href=&#34;#cb7-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb7-8&#34;&gt;&lt;a href=&#34;#cb7-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-9&#34;&gt;&lt;a href=&#34;#cb7-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb7-10&#34;&gt;&lt;a href=&#34;#cb7-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-11&#34;&gt;&lt;a href=&#34;#cb7-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb7-12&#34;&gt;&lt;a href=&#34;#cb7-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-13&#34;&gt;&lt;a href=&#34;#cb7-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb7-14&#34;&gt;&lt;a href=&#34;#cb7-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb7-15&#34;&gt;&lt;a href=&#34;#cb7-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb7-16&#34;&gt;&lt;a href=&#34;#cb7-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb7-17&#34;&gt;&lt;a href=&#34;#cb7-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb7-18&#34;&gt;&lt;a href=&#34;#cb7-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-19&#34;&gt;&lt;a href=&#34;#cb7-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-20&#34;&gt;&lt;a href=&#34;#cb7-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb7-21&#34;&gt;&lt;a href=&#34;#cb7-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-22&#34;&gt;&lt;a href=&#34;#cb7-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb7-23&#34;&gt;&lt;a href=&#34;#cb7-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b;&lt;/span&gt;
&lt;span id=&#34;cb7-24&#34;&gt;&lt;a href=&#34;#cb7-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = t;&lt;/span&gt;
&lt;span id=&#34;cb7-25&#34;&gt;&lt;a href=&#34;#cb7-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-26&#34;&gt;&lt;a href=&#34;#cb7-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-27&#34;&gt;&lt;a href=&#34;#cb7-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-28&#34;&gt;&lt;a href=&#34;#cb7-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; complex&lt;/span&gt;
&lt;span id=&#34;cb7-29&#34;&gt;&lt;a href=&#34;#cb7-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-30&#34;&gt;&lt;a href=&#34;#cb7-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; x, y;&lt;/span&gt;
&lt;span id=&#34;cb7-31&#34;&gt;&lt;a href=&#34;#cb7-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    complex(&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-32&#34;&gt;&lt;a href=&#34;#cb7-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-33&#34;&gt;&lt;a href=&#34;#cb7-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = xx, y = yy;&lt;/span&gt;
&lt;span id=&#34;cb7-34&#34;&gt;&lt;a href=&#34;#cb7-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-35&#34;&gt;&lt;a href=&#34;#cb7-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-36&#34;&gt;&lt;a href=&#34;#cb7-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-37&#34;&gt;&lt;a href=&#34;#cb7-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb7-38&#34;&gt;&lt;a href=&#34;#cb7-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-39&#34;&gt;&lt;a href=&#34;#cb7-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb7-40&#34;&gt;&lt;a href=&#34;#cb7-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb7-41&#34;&gt;&lt;a href=&#34;#cb7-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;complex &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; complex &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; complex(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb7-42&#34;&gt;&lt;a href=&#34;#cb7-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-43&#34;&gt;&lt;a href=&#34;#cb7-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, complex *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb7-44&#34;&gt;&lt;a href=&#34;#cb7-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-45&#34;&gt;&lt;a href=&#34;#cb7-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-46&#34;&gt;&lt;a href=&#34;#cb7-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb7-47&#34;&gt;&lt;a href=&#34;#cb7-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(a[i], a[rev[i]]);&lt;span class=&#34;co&#34;&gt;//先预处理翻转完了的结果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-48&#34;&gt;&lt;a href=&#34;#cb7-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;co&#34;&gt;//模拟合并答案的过程，即为所谓的 n&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-49&#34;&gt;&lt;a href=&#34;#cb7-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb7-50&#34;&gt;&lt;a href=&#34;#cb7-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//即上面的 n / 2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-51&#34;&gt;&lt;a href=&#34;#cb7-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        complex Wp = complex(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p));&lt;span class=&#34;co&#34;&gt;//处理出 p 次单位根&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-52&#34;&gt;&lt;a href=&#34;#cb7-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;span class=&#34;co&#34;&gt;//对每一个进行合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-53&#34;&gt;&lt;a href=&#34;#cb7-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb7-54&#34;&gt;&lt;a href=&#34;#cb7-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            complex w = complex(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//处理 \omega_p^0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-55&#34;&gt;&lt;a href=&#34;#cb7-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;span class=&#34;co&#34;&gt;//开始合并&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-56&#34;&gt;&lt;a href=&#34;#cb7-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb7-57&#34;&gt;&lt;a href=&#34;#cb7-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;co&#34;&gt;//此时的 a[l] 就是之前的 a1[i]，a[len + l] 就是之前的 a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-58&#34;&gt;&lt;a href=&#34;#cb7-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                complex tmp = w * a[len + l];&lt;/span&gt;
&lt;span id=&#34;cb7-59&#34;&gt;&lt;a href=&#34;#cb7-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[len + l] = a[l] - tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i + (lim &amp;gt;&amp;gt; 1)] = a1[i] - w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-60&#34;&gt;&lt;a href=&#34;#cb7-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                a[l] = a[l] + tmp;&lt;span class=&#34;co&#34;&gt;//相当于上面的 a[i] = a1[i] + w * a2[i]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-61&#34;&gt;&lt;a href=&#34;#cb7-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb7-62&#34;&gt;&lt;a href=&#34;#cb7-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb7-63&#34;&gt;&lt;a href=&#34;#cb7-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb7-64&#34;&gt;&lt;a href=&#34;#cb7-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb7-65&#34;&gt;&lt;a href=&#34;#cb7-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-66&#34;&gt;&lt;a href=&#34;#cb7-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb7-67&#34;&gt;&lt;a href=&#34;#cb7-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb7-68&#34;&gt;&lt;a href=&#34;#cb7-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb7-69&#34;&gt;&lt;a href=&#34;#cb7-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb7-70&#34;&gt;&lt;a href=&#34;#cb7-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) b[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb7-71&#34;&gt;&lt;a href=&#34;#cb7-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-72&#34;&gt;&lt;a href=&#34;#cb7-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//补齐高位&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-73&#34;&gt;&lt;a href=&#34;#cb7-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-74&#34;&gt;&lt;a href=&#34;#cb7-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | (((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)));&lt;span class=&#34;co&#34;&gt;//先处理翻转完的结果&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-75&#34;&gt;&lt;a href=&#34;#cb7-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(lim, a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//DFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-76&#34;&gt;&lt;a href=&#34;#cb7-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(lim, b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//DFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-77&#34;&gt;&lt;a href=&#34;#cb7-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb7-78&#34;&gt;&lt;a href=&#34;#cb7-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i];&lt;span class=&#34;co&#34;&gt;//对处理出来的点值进行乘法&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-79&#34;&gt;&lt;a href=&#34;#cb7-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(lim, a, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;span class=&#34;co&#34;&gt;//IDFT&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-80&#34;&gt;&lt;a href=&#34;#cb7-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb7-81&#34;&gt;&lt;a href=&#34;#cb7-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].x / lim + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb7-82&#34;&gt;&lt;a href=&#34;#cb7-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb7-83&#34;&gt;&lt;a href=&#34;#cb7-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 FFT 来求高精度整数乘法的实现（&lt;a href=&#34;https://www.luogu.com.cn/problem/P1919&#34;&gt;洛谷 P1919&lt;/a&gt;）：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b) {T t = a; a = b; b = t; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;}&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;3000000&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db x, y;&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx(db xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, db yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {x = xx, y = yy;}&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb8-23&#34;&gt;&lt;a href=&#34;#cb8-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-24&#34;&gt;&lt;a href=&#34;#cb8-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s1[maxn], s2[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-25&#34;&gt;&lt;a href=&#34;#cb8-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb8-26&#34;&gt;&lt;a href=&#34;#cb8-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-27&#34;&gt;&lt;a href=&#34;#cb8-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(cmplx *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb8-28&#34;&gt;&lt;a href=&#34;#cb8-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-29&#34;&gt;&lt;a href=&#34;#cb8-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-30&#34;&gt;&lt;a href=&#34;#cb8-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb8-31&#34;&gt;&lt;a href=&#34;#cb8-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb8-32&#34;&gt;&lt;a href=&#34;#cb8-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-33&#34;&gt;&lt;a href=&#34;#cb8-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb8-34&#34;&gt;&lt;a href=&#34;#cb8-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-35&#34;&gt;&lt;a href=&#34;#cb8-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cmplx Wp(cos(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; * pi / p));&lt;/span&gt;
&lt;span id=&#34;cb8-36&#34;&gt;&lt;a href=&#34;#cb8-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb8-37&#34;&gt;&lt;a href=&#34;#cb8-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb8-38&#34;&gt;&lt;a href=&#34;#cb8-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cmplx w(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-39&#34;&gt;&lt;a href=&#34;#cb8-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;/span&gt;
&lt;span id=&#34;cb8-40&#34;&gt;&lt;a href=&#34;#cb8-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb8-41&#34;&gt;&lt;a href=&#34;#cb8-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cmplx tmp = w * f[l + len];&lt;/span&gt;
&lt;span id=&#34;cb8-42&#34;&gt;&lt;a href=&#34;#cb8-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l + len] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-43&#34;&gt;&lt;a href=&#34;#cb8-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb8-44&#34;&gt;&lt;a href=&#34;#cb8-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb8-45&#34;&gt;&lt;a href=&#34;#cb8-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb8-46&#34;&gt;&lt;a href=&#34;#cb8-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb8-47&#34;&gt;&lt;a href=&#34;#cb8-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-48&#34;&gt;&lt;a href=&#34;#cb8-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb8-49&#34;&gt;&lt;a href=&#34;#cb8-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-50&#34;&gt;&lt;a href=&#34;#cb8-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb8-51&#34;&gt;&lt;a href=&#34;#cb8-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb8-52&#34;&gt;&lt;a href=&#34;#cb8-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s\n%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s1, s2);&lt;/span&gt;
&lt;span id=&#34;cb8-53&#34;&gt;&lt;a href=&#34;#cb8-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n1 = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n2 = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-54&#34;&gt;&lt;a href=&#34;#cb8-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, strlen(s1) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) a[++n1].x = s1[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-55&#34;&gt;&lt;a href=&#34;#cb8-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, strlen(s2) - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) b[++n2].x = s2[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-56&#34;&gt;&lt;a href=&#34;#cb8-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-57&#34;&gt;&lt;a href=&#34;#cb8-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n1 + n2) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-58&#34;&gt;&lt;a href=&#34;#cb8-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-59&#34;&gt;&lt;a href=&#34;#cb8-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | (((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)));&lt;/span&gt;
&lt;span id=&#34;cb8-60&#34;&gt;&lt;a href=&#34;#cb8-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-61&#34;&gt;&lt;a href=&#34;#cb8-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(b, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-62&#34;&gt;&lt;a href=&#34;#cb8-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb8-63&#34;&gt;&lt;a href=&#34;#cb8-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i];&lt;/span&gt;
&lt;span id=&#34;cb8-64&#34;&gt;&lt;a href=&#34;#cb8-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-65&#34;&gt;&lt;a href=&#34;#cb8-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb8-66&#34;&gt;&lt;a href=&#34;#cb8-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] = (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].x / lim + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-67&#34;&gt;&lt;a href=&#34;#cb8-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb8-68&#34;&gt;&lt;a href=&#34;#cb8-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[i] &amp;gt;= &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;) ans[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] += ans[i] / &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, ans[i] %= &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, lim += (i == lim);&lt;/span&gt;
&lt;span id=&#34;cb8-69&#34;&gt;&lt;a href=&#34;#cb8-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!ans[lim] &amp;amp;&amp;amp; lim &amp;gt; -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) --lim;&lt;/span&gt;
&lt;span id=&#34;cb8-70&#34;&gt;&lt;a href=&#34;#cb8-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lim == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) puts(&lt;span class=&#34;st&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb8-71&#34;&gt;&lt;a href=&#34;#cb8-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; DEC(i, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb8-72&#34;&gt;&lt;a href=&#34;#cb8-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb8-73&#34;&gt;&lt;a href=&#34;#cb8-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;当然，千万要记得 IDFT 还回去的时候要除以 &lt;code&gt;lim&lt;/code&gt;，实在怕记不住就在 DFT 函数里面加几句话直接处理好&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (type == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-3&#34;&gt;&lt;a href=&#34;#cb9-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i].x /= lim;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;针对多项式乘法三次变两次优化&#34;&gt;针对多项式乘法：三次变两次优化&lt;/h3&gt;
&lt;p&gt;我们发现我们在做多项式乘法的时候，需要先 DFT &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt;，乘在一起之后再 IDFT 还回来 &lt;span class=&#34;math inline&#34;&gt;\(C(x)\)&lt;/span&gt;，一共进行了三次这样的操作。考虑如何减少我们调用 DFT 的次数。&lt;/p&gt;
&lt;p&gt;可以把 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 的系数放到 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt; 系数的虚部上面，即 &lt;span class=&#34;math inline&#34;&gt;\(a + b\mathrm i\)&lt;/span&gt;，然后 DFT 一下 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt; 再求个平方，得到 &lt;span class=&#34;math inline&#34;&gt;\(A^2(x)\)&lt;/span&gt;，再 IDFT 回去。我们可以发现得到的系数都是 &lt;span class=&#34;math inline&#34;&gt;\((a + b\mathrm i)^2 = a^2 - b^2 + 2ab\mathrm i\)&lt;/span&gt; 的形式的，所以只需要取出虚部再除以二就得到答案了。&lt;/p&gt;
&lt;p&gt;这样的写法可以减小常数，跑的比 NTT 还快。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-3&#34;&gt;&lt;a href=&#34;#cb10-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-4&#34;&gt;&lt;a href=&#34;#cb10-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb10-5&#34;&gt;&lt;a href=&#34;#cb10-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-6&#34;&gt;&lt;a href=&#34;#cb10-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb10-7&#34;&gt;&lt;a href=&#34;#cb10-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-8&#34;&gt;&lt;a href=&#34;#cb10-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-9&#34;&gt;&lt;a href=&#34;#cb10-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db pi = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-10&#34;&gt;&lt;a href=&#34;#cb10-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-11&#34;&gt;&lt;a href=&#34;#cb10-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb10-12&#34;&gt;&lt;a href=&#34;#cb10-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-13&#34;&gt;&lt;a href=&#34;#cb10-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-14&#34;&gt;&lt;a href=&#34;#cb10-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-15&#34;&gt;&lt;a href=&#34;#cb10-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-16&#34;&gt;&lt;a href=&#34;#cb10-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-17&#34;&gt;&lt;a href=&#34;#cb10-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb10-18&#34;&gt;&lt;a href=&#34;#cb10-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb10-19&#34;&gt;&lt;a href=&#34;#cb10-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb10-20&#34;&gt;&lt;a href=&#34;#cb10-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-21&#34;&gt;&lt;a href=&#34;#cb10-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-22&#34;&gt;&lt;a href=&#34;#cb10-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb10-23&#34;&gt;&lt;a href=&#34;#cb10-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-24&#34;&gt;&lt;a href=&#34;#cb10-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb10-25&#34;&gt;&lt;a href=&#34;#cb10-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b;&lt;/span&gt;
&lt;span id=&#34;cb10-26&#34;&gt;&lt;a href=&#34;#cb10-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = t;&lt;/span&gt;
&lt;span id=&#34;cb10-27&#34;&gt;&lt;a href=&#34;#cb10-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-28&#34;&gt;&lt;a href=&#34;#cb10-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-29&#34;&gt;&lt;a href=&#34;#cb10-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-30&#34;&gt;&lt;a href=&#34;#cb10-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx&lt;/span&gt;
&lt;span id=&#34;cb10-31&#34;&gt;&lt;a href=&#34;#cb10-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-32&#34;&gt;&lt;a href=&#34;#cb10-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db x, y;&lt;/span&gt;
&lt;span id=&#34;cb10-33&#34;&gt;&lt;a href=&#34;#cb10-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cmplx(db xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, db yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-34&#34;&gt;&lt;a href=&#34;#cb10-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-35&#34;&gt;&lt;a href=&#34;#cb10-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = xx, y = yy;&lt;/span&gt;
&lt;span id=&#34;cb10-36&#34;&gt;&lt;a href=&#34;#cb10-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-37&#34;&gt;&lt;a href=&#34;#cb10-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-38&#34;&gt;&lt;a href=&#34;#cb10-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-39&#34;&gt;&lt;a href=&#34;#cb10-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb10-40&#34;&gt;&lt;a href=&#34;#cb10-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-41&#34;&gt;&lt;a href=&#34;#cb10-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb10-42&#34;&gt;&lt;a href=&#34;#cb10-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb10-43&#34;&gt;&lt;a href=&#34;#cb10-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb10-44&#34;&gt;&lt;a href=&#34;#cb10-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-45&#34;&gt;&lt;a href=&#34;#cb10-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(cmplx *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb10-46&#34;&gt;&lt;a href=&#34;#cb10-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-47&#34;&gt;&lt;a href=&#34;#cb10-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-48&#34;&gt;&lt;a href=&#34;#cb10-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb10-49&#34;&gt;&lt;a href=&#34;#cb10-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb10-50&#34;&gt;&lt;a href=&#34;#cb10-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-51&#34;&gt;&lt;a href=&#34;#cb10-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb10-52&#34;&gt;&lt;a href=&#34;#cb10-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-53&#34;&gt;&lt;a href=&#34;#cb10-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cmplx Wp(cos(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p), type * sin(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * pi / p));&lt;/span&gt;
&lt;span id=&#34;cb10-54&#34;&gt;&lt;a href=&#34;#cb10-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb10-55&#34;&gt;&lt;a href=&#34;#cb10-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb10-56&#34;&gt;&lt;a href=&#34;#cb10-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cmplx w(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-57&#34;&gt;&lt;a href=&#34;#cb10-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp)&lt;/span&gt;
&lt;span id=&#34;cb10-58&#34;&gt;&lt;a href=&#34;#cb10-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb10-59&#34;&gt;&lt;a href=&#34;#cb10-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cmplx tmp = w * f[len + l];&lt;/span&gt;
&lt;span id=&#34;cb10-60&#34;&gt;&lt;a href=&#34;#cb10-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[len + l] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb10-61&#34;&gt;&lt;a href=&#34;#cb10-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb10-62&#34;&gt;&lt;a href=&#34;#cb10-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb10-63&#34;&gt;&lt;a href=&#34;#cb10-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb10-64&#34;&gt;&lt;a href=&#34;#cb10-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb10-65&#34;&gt;&lt;a href=&#34;#cb10-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb10-66&#34;&gt;&lt;a href=&#34;#cb10-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb10-67&#34;&gt;&lt;a href=&#34;#cb10-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb10-68&#34;&gt;&lt;a href=&#34;#cb10-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb10-69&#34;&gt;&lt;a href=&#34;#cb10-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb10-70&#34;&gt;&lt;a href=&#34;#cb10-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) a[i].x = read();&lt;/span&gt;
&lt;span id=&#34;cb10-71&#34;&gt;&lt;a href=&#34;#cb10-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) a[i].y = read();&lt;/span&gt;
&lt;span id=&#34;cb10-72&#34;&gt;&lt;a href=&#34;#cb10-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-73&#34;&gt;&lt;a href=&#34;#cb10-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-74&#34;&gt;&lt;a href=&#34;#cb10-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-75&#34;&gt;&lt;a href=&#34;#cb10-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb10-76&#34;&gt;&lt;a href=&#34;#cb10-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-77&#34;&gt;&lt;a href=&#34;#cb10-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-78&#34;&gt;&lt;a href=&#34;#cb10-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * a[i];&lt;/span&gt;
&lt;span id=&#34;cb10-79&#34;&gt;&lt;a href=&#34;#cb10-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb10-80&#34;&gt;&lt;a href=&#34;#cb10-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb10-81&#34;&gt;&lt;a href=&#34;#cb10-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(a[i].y / lim / &lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb10-82&#34;&gt;&lt;a href=&#34;#cb10-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb10-83&#34;&gt;&lt;a href=&#34;#cb10-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;快速数论变换ntt&#34;&gt;快速数论变换（NTT）&lt;/h2&gt;
&lt;p&gt;有了 FFT，我们已经有能力在 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 的时间内求出两个多项式的卷积了。但是 FFT 也有它的缺点：复数采用的浮点运算不仅造成精度的问题，还会增大常数。遗憾的是数学家们已经证明了 &lt;span class=&#34;math inline&#34;&gt;\(\mathbb C\)&lt;/span&gt; 中只有单位复数根满足 FFT 的要求。&lt;/p&gt;
&lt;p&gt;考虑到利用多项式的计数题很多都是模意义下的，所以自然希望为单位复数根找一个模意义下的替代品。此时就进入下面的前置知识：原根。&lt;/p&gt;
&lt;h3 id=&#34;原根&#34;&gt;原根&lt;/h3&gt;
&lt;p&gt;设整数 &lt;span class=&#34;math inline&#34;&gt;\(r,n\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(r\perp n\land r \not= 0 \land n &amp;gt; 0\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(r^x \equiv 1\pmod n\)&lt;/span&gt; 的&lt;strong&gt;最小正整数&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 称为 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的&lt;strong&gt;阶&lt;/strong&gt;，记为 &lt;span class=&#34;math inline&#34;&gt;\(\mathrm{ord}_nr\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(\delta_n(r)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(r,n\in\mathbb N^+\land r\perp n\)&lt;/span&gt;，当 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{ord}_nr = \phi(n)\)&lt;/span&gt; 时，称 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; 是模 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的原根或者 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的原根。&lt;/p&gt;
&lt;h3 id=&#34;ntt&#34;&gt;NTT&lt;/h3&gt;
&lt;p&gt;对于质数 &lt;span class=&#34;math inline&#34;&gt;\(p = qn + 1\:(n = 2^m)\)&lt;/span&gt;，原根 &lt;span class=&#34;math inline&#34;&gt;\(g\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(g^{qn}\equiv 1\pmod p\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(g_n = g^q\pmod p\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(\omega_n\)&lt;/span&gt; 的等价，其满足相似的性质，比如 &lt;span class=&#34;math inline&#34;&gt;\(g_n^n\equiv 1\pmod p,g_n^{n/2} \equiv -1\pmod p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;常见的质数 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
p &amp;amp;= 998244353 = 7\times17\times2^{23} + 1,&amp;amp;g = 3\\
p &amp;amp;= 1004535809 = 479\times 2^{21} + 1,&amp;amp;g =  3
\end{aligned}
\]&lt;/span&gt; 迭代到长度为 &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; 时，&lt;span class=&#34;math inline&#34;&gt;\(g_l = g^{\frac{p - 1}{l}}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;直接看代码：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb11-6&#34;&gt;&lt;a href=&#34;#cb11-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-7&#34;&gt;&lt;a href=&#34;#cb11-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll G = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-8&#34;&gt;&lt;a href=&#34;#cb11-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-9&#34;&gt;&lt;a href=&#34;#cb11-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-10&#34;&gt;&lt;a href=&#34;#cb11-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-11&#34;&gt;&lt;a href=&#34;#cb11-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb11-12&#34;&gt;&lt;a href=&#34;#cb11-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-13&#34;&gt;&lt;a href=&#34;#cb11-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-14&#34;&gt;&lt;a href=&#34;#cb11-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-15&#34;&gt;&lt;a href=&#34;#cb11-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-16&#34;&gt;&lt;a href=&#34;#cb11-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-17&#34;&gt;&lt;a href=&#34;#cb11-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb11-18&#34;&gt;&lt;a href=&#34;#cb11-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb11-19&#34;&gt;&lt;a href=&#34;#cb11-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb11-20&#34;&gt;&lt;a href=&#34;#cb11-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-21&#34;&gt;&lt;a href=&#34;#cb11-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-22&#34;&gt;&lt;a href=&#34;#cb11-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb11-23&#34;&gt;&lt;a href=&#34;#cb11-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-24&#34;&gt;&lt;a href=&#34;#cb11-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb11-25&#34;&gt;&lt;a href=&#34;#cb11-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b;&lt;/span&gt;
&lt;span id=&#34;cb11-26&#34;&gt;&lt;a href=&#34;#cb11-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = t;&lt;/span&gt;
&lt;span id=&#34;cb11-27&#34;&gt;&lt;a href=&#34;#cb11-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-28&#34;&gt;&lt;a href=&#34;#cb11-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-29&#34;&gt;&lt;a href=&#34;#cb11-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-30&#34;&gt;&lt;a href=&#34;#cb11-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll pow(ll base, ll p = mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-31&#34;&gt;&lt;a href=&#34;#cb11-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-32&#34;&gt;&lt;a href=&#34;#cb11-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-33&#34;&gt;&lt;a href=&#34;#cb11-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-34&#34;&gt;&lt;a href=&#34;#cb11-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-35&#34;&gt;&lt;a href=&#34;#cb11-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-36&#34;&gt;&lt;a href=&#34;#cb11-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-37&#34;&gt;&lt;a href=&#34;#cb11-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-38&#34;&gt;&lt;a href=&#34;#cb11-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-39&#34;&gt;&lt;a href=&#34;#cb11-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb11-40&#34;&gt;&lt;a href=&#34;#cb11-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-41&#34;&gt;&lt;a href=&#34;#cb11-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-42&#34;&gt;&lt;a href=&#34;#cb11-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb11-43&#34;&gt;&lt;a href=&#34;#cb11-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn], g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb11-44&#34;&gt;&lt;a href=&#34;#cb11-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll invG = pow(G);&lt;/span&gt;
&lt;span id=&#34;cb11-45&#34;&gt;&lt;a href=&#34;#cb11-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-46&#34;&gt;&lt;a href=&#34;#cb11-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; NTT(ll *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb11-47&#34;&gt;&lt;a href=&#34;#cb11-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-48&#34;&gt;&lt;a href=&#34;#cb11-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-49&#34;&gt;&lt;a href=&#34;#cb11-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb11-50&#34;&gt;&lt;a href=&#34;#cb11-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb11-51&#34;&gt;&lt;a href=&#34;#cb11-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-52&#34;&gt;&lt;a href=&#34;#cb11-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb11-53&#34;&gt;&lt;a href=&#34;#cb11-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-54&#34;&gt;&lt;a href=&#34;#cb11-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll tG = pow(type ? G : invG, (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / p);&lt;/span&gt;
&lt;span id=&#34;cb11-55&#34;&gt;&lt;a href=&#34;#cb11-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb11-56&#34;&gt;&lt;a href=&#34;#cb11-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb11-57&#34;&gt;&lt;a href=&#34;#cb11-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll buf = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-58&#34;&gt;&lt;a href=&#34;#cb11-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, buf = buf * tG % mod)&lt;/span&gt;
&lt;span id=&#34;cb11-59&#34;&gt;&lt;a href=&#34;#cb11-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb11-60&#34;&gt;&lt;a href=&#34;#cb11-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll tmp = buf * f[len + l] % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-61&#34;&gt;&lt;a href=&#34;#cb11-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[len + l] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb11-62&#34;&gt;&lt;a href=&#34;#cb11-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[len + l] &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) f[len + l] += mod;&lt;span class=&#34;co&#34;&gt;//及时取模&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-63&#34;&gt;&lt;a href=&#34;#cb11-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb11-64&#34;&gt;&lt;a href=&#34;#cb11-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[l] &amp;gt; mod) f[l] -= mod;&lt;span class=&#34;co&#34;&gt;//及时取模&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-65&#34;&gt;&lt;a href=&#34;#cb11-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb11-66&#34;&gt;&lt;a href=&#34;#cb11-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb11-67&#34;&gt;&lt;a href=&#34;#cb11-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb11-68&#34;&gt;&lt;a href=&#34;#cb11-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll invlim = pow(lim);&lt;span class=&#34;co&#34;&gt;//最后还回去，除以lim相当于乘上lim的逆元&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-69&#34;&gt;&lt;a href=&#34;#cb11-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!type)&lt;/span&gt;
&lt;span id=&#34;cb11-70&#34;&gt;&lt;a href=&#34;#cb11-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-71&#34;&gt;&lt;a href=&#34;#cb11-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = (f[i] * invlim % mod);&lt;/span&gt;
&lt;span id=&#34;cb11-72&#34;&gt;&lt;a href=&#34;#cb11-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-73&#34;&gt;&lt;a href=&#34;#cb11-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb11-74&#34;&gt;&lt;a href=&#34;#cb11-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-75&#34;&gt;&lt;a href=&#34;#cb11-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb11-76&#34;&gt;&lt;a href=&#34;#cb11-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb11-77&#34;&gt;&lt;a href=&#34;#cb11-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb11-78&#34;&gt;&lt;a href=&#34;#cb11-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) f[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb11-79&#34;&gt;&lt;a href=&#34;#cb11-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m) g[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb11-80&#34;&gt;&lt;a href=&#34;#cb11-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-81&#34;&gt;&lt;a href=&#34;#cb11-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-82&#34;&gt;&lt;a href=&#34;#cb11-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-83&#34;&gt;&lt;a href=&#34;#cb11-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = (rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-84&#34;&gt;&lt;a href=&#34;#cb11-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-85&#34;&gt;&lt;a href=&#34;#cb11-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb11-86&#34;&gt;&lt;a href=&#34;#cb11-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = f[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb11-87&#34;&gt;&lt;a href=&#34;#cb11-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb11-88&#34;&gt;&lt;a href=&#34;#cb11-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n + m)&lt;/span&gt;
&lt;span id=&#34;cb11-89&#34;&gt;&lt;a href=&#34;#cb11-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)f[i]);&lt;/span&gt;
&lt;span id=&#34;cb11-90&#34;&gt;&lt;a href=&#34;#cb11-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb11-91&#34;&gt;&lt;a href=&#34;#cb11-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;任意模数多项式乘法&#34;&gt;任意模数多项式乘法&lt;/h2&gt;
&lt;h3 id=&#34;问题描述&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;有些毒瘤题目里面，模数不一定是满足 &lt;span class=&#34;math inline&#34;&gt;\(p = a\times2^k + 1\)&lt;/span&gt; 的形式，这就意味着 NTT 是不能用的，而普通的 FFT 精度又不够，怎么办呢？&lt;/p&gt;
&lt;p&gt;一般的问题形式：给定 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(h(x) = f(x)\times g(x)\)&lt;/span&gt;，系数对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模。&lt;/p&gt;
&lt;h3 id=&#34;法-1三模-ntt&#34;&gt;法 1：三模 NTT&lt;/h3&gt;
&lt;p&gt;分析可得最大的数应该是 &lt;span class=&#34;math inline&#34;&gt;\(p^2\times\max\{\deg f, \deg g\}\)&lt;/span&gt;，是 &lt;span class=&#34;math inline&#34;&gt;\(10^{23}\)&lt;/span&gt; 级别的。所以选三个模数分别做 NTT 然后用 CRT 合并即可。需要做 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt; 次 DFT，常数较大，暂不考虑。&lt;/p&gt;
&lt;h3 id=&#34;法-2拆系数-fftmtt&#34;&gt;法 2：拆系数 FFT（MTT）&lt;/h3&gt;
&lt;p&gt;考虑把多项式的系数拆成形如 &lt;span class=&#34;math inline&#34;&gt;\(a\times 2^{15} + b\)&lt;/span&gt; 的形式，那么 &lt;span class=&#34;math inline&#34;&gt;\(a, b\le 2^{15}\)&lt;/span&gt;。这样子相乘的值域大概是 &lt;span class=&#34;math inline&#34;&gt;\(10^{14}\)&lt;/span&gt; 级别的。&lt;/p&gt;
&lt;p&gt;于是有 &lt;span class=&#34;math inline&#34;&gt;\(c_1c_2 = (a_1\times 2^{15} + b_1)(a_2\times 2^{15}+b_2) = a_1a_2\times 2^{30} + (a_1b_2 + a_2b_1)2^{15} + b_1b_2\)&lt;/span&gt;。然而这样看似要求四次多项式乘法，&lt;span class=&#34;math inline&#34;&gt;\(12\)&lt;/span&gt; 次 DFT，似乎更加屑了。&lt;/p&gt;
&lt;p&gt;冷静分析一下：现在的问题是有四个多项式 &lt;span class=&#34;math inline&#34;&gt;\(A_1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(A_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B_1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B_2\)&lt;/span&gt;，要求这些多项式的两两乘积。&lt;/p&gt;
&lt;p&gt;利用复数的性质：考虑 &lt;span class=&#34;math inline&#34;&gt;\((a + bi)(c + di) = ac - bd + (ad + bc)i\)&lt;/span&gt;。那么令复多项式 &lt;span class=&#34;math inline&#34;&gt;\(P = A_1 + iA_2\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(Q = B_1 + iB_2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有 &lt;span class=&#34;math inline&#34;&gt;\(T_1 = P\times Q = A_1B_1 - A_2B_2 + (A_1B_2 + A_2B_1)i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;再设 &lt;span class=&#34;math inline&#34;&gt;\(P&amp;#39; = A_1 - iA_2\)&lt;/span&gt;，那么有 &lt;span class=&#34;math inline&#34;&gt;\(T_2 = P&amp;#39;\times Q = A_1B_1 + A_2B_2 + (A_1B_2 - A_2B_1)i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;两式相加可以得到 &lt;span class=&#34;math inline&#34;&gt;\(2A_1B_1 + 2A_1B_2i\)&lt;/span&gt;，两式相减可以得到 &lt;span class=&#34;math inline&#34;&gt;\(2A_2B_2 - 2A_2B_1i\)&lt;/span&gt;。把这两个多项式的实部虚部拆出来就得到我们想要的结果了。&lt;/p&gt;
&lt;p&gt;这样子需要做 &lt;span class=&#34;math inline&#34;&gt;\(5\)&lt;/span&gt; 次 DFT，常数不小但比 &lt;span class=&#34;math inline&#34;&gt;\(9\)&lt;/span&gt; 次 NTT 优。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;可以直接配合后面的 &lt;code&gt;vector&lt;/code&gt; 版多项式板子食用。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; complex {&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; cmplx {&lt;/span&gt;
&lt;span id=&#34;cb12-3&#34;&gt;&lt;a href=&#34;#cb12-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        db x, y;&lt;/span&gt;
&lt;span id=&#34;cb12-4&#34;&gt;&lt;a href=&#34;#cb12-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cmplx(db xx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, db yy = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) : x(xx), y(yy) {}&lt;/span&gt;
&lt;span id=&#34;cb12-5&#34;&gt;&lt;a href=&#34;#cb12-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    };&lt;/span&gt;
&lt;span id=&#34;cb12-6&#34;&gt;&lt;a href=&#34;#cb12-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x + b.x, a.y + b.y);}&lt;/span&gt;
&lt;span id=&#34;cb12-7&#34;&gt;&lt;a href=&#34;#cb12-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x - b.x, a.y - b.y);}&lt;/span&gt;
&lt;span id=&#34;cb12-8&#34;&gt;&lt;a href=&#34;#cb12-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il cmplx &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; cmplx &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; cmplx(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);}&lt;/span&gt;
&lt;span id=&#34;cb12-9&#34;&gt;&lt;a href=&#34;#cb12-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; complex;&lt;/span&gt;
&lt;span id=&#34;cb12-10&#34;&gt;&lt;a href=&#34;#cb12-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-11&#34;&gt;&lt;a href=&#34;#cb12-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; MTT {&lt;/span&gt;
&lt;span id=&#34;cb12-12&#34;&gt;&lt;a href=&#34;#cb12-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sin;&lt;/span&gt;
&lt;span id=&#34;cb12-13&#34;&gt;&lt;a href=&#34;#cb12-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cos;&lt;/span&gt;
&lt;span id=&#34;cb12-14&#34;&gt;&lt;a href=&#34;#cb12-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;acos;&lt;/span&gt;
&lt;span id=&#34;cb12-15&#34;&gt;&lt;a href=&#34;#cb12-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;floor;&lt;/span&gt;
&lt;span id=&#34;cb12-16&#34;&gt;&lt;a href=&#34;#cb12-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db PI = acos(-&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-17&#34;&gt;&lt;a href=&#34;#cb12-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; DIV = &lt;span class=&#34;dv&#34;&gt;32768&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-18&#34;&gt;&lt;a href=&#34;#cb12-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; mod;&lt;/span&gt;
&lt;span id=&#34;cb12-19&#34;&gt;&lt;a href=&#34;#cb12-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-20&#34;&gt;&lt;a href=&#34;#cb12-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;pp&#34;&gt;#define clr2&lt;/span&gt;(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memset(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;(cmplx))&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;*&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;/span&gt;
&lt;span id=&#34;cb12-21&#34;&gt;&lt;a href=&#34;#cb12-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-22&#34;&gt;&lt;a href=&#34;#cb12-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; DFT(cmplx *g, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim) {&lt;/span&gt;
&lt;span id=&#34;cb12-23&#34;&gt;&lt;a href=&#34;#cb12-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; cmplx f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb12-24&#34;&gt;&lt;a href=&#34;#cb12-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getTr(lim);&lt;/span&gt;
&lt;span id=&#34;cb12-25&#34;&gt;&lt;a href=&#34;#cb12-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = g[&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i]];&lt;/span&gt;
&lt;span id=&#34;cb12-26&#34;&gt;&lt;a href=&#34;#cb12-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb12-27&#34;&gt;&lt;a href=&#34;#cb12-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-28&#34;&gt;&lt;a href=&#34;#cb12-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            cmplx Wp(&lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cos(PI / len), type * &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sin(PI / len));&lt;/span&gt;
&lt;span id=&#34;cb12-29&#34;&gt;&lt;a href=&#34;#cb12-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p) {&lt;/span&gt;
&lt;span id=&#34;cb12-30&#34;&gt;&lt;a href=&#34;#cb12-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                cmplx w(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-31&#34;&gt;&lt;a href=&#34;#cb12-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, w = w * Wp) {&lt;/span&gt;
&lt;span id=&#34;cb12-32&#34;&gt;&lt;a href=&#34;#cb12-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    cmplx tmp = w * f[len + l];&lt;/span&gt;
&lt;span id=&#34;cb12-33&#34;&gt;&lt;a href=&#34;#cb12-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[len + l] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb12-34&#34;&gt;&lt;a href=&#34;#cb12-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb12-35&#34;&gt;&lt;a href=&#34;#cb12-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb12-36&#34;&gt;&lt;a href=&#34;#cb12-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb12-37&#34;&gt;&lt;a href=&#34;#cb12-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-38&#34;&gt;&lt;a href=&#34;#cb12-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb12-39&#34;&gt;&lt;a href=&#34;#cb12-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (type == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) g[i] = cmplx(f[i].x / lim, f[i].y / lim);&lt;/span&gt;
&lt;span id=&#34;cb12-40&#34;&gt;&lt;a href=&#34;#cb12-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; g[i] = f[i];&lt;/span&gt;
&lt;span id=&#34;cb12-41&#34;&gt;&lt;a href=&#34;#cb12-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb12-42&#34;&gt;&lt;a href=&#34;#cb12-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-43&#34;&gt;&lt;a href=&#34;#cb12-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-44&#34;&gt;&lt;a href=&#34;#cb12-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb12-45&#34;&gt;&lt;a href=&#34;#cb12-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; cmplx p1[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], p2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], q[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t1[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb12-46&#34;&gt;&lt;a href=&#34;#cb12-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, A) p1[i] = cmplx(A[i] / DIV, A[i] % DIV), p2[i] = cmplx(A[i] / DIV, -p1[i].y);&lt;/span&gt;
&lt;span id=&#34;cb12-47&#34;&gt;&lt;a href=&#34;#cb12-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, B) q[i] = cmplx(B[i] / DIV, B[i] % DIV);&lt;/span&gt;
&lt;span id=&#34;cb12-48&#34;&gt;&lt;a href=&#34;#cb12-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Poly C; C.resize(min(lim, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)A.size() + (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb12-49&#34;&gt;&lt;a href=&#34;#cb12-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; n &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(A.size() + B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); n &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb12-50&#34;&gt;&lt;a href=&#34;#cb12-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-51&#34;&gt;&lt;a href=&#34;#cb12-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DFT(p1, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), DFT(p2, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), DFT(q, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb12-52&#34;&gt;&lt;a href=&#34;#cb12-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) t1[i] = p1[i] * q[i], t2[i] = p2[i] * q[i];&lt;/span&gt;
&lt;span id=&#34;cb12-53&#34;&gt;&lt;a href=&#34;#cb12-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DFT(t1, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), DFT(t2, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb12-54&#34;&gt;&lt;a href=&#34;#cb12-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-55&#34;&gt;&lt;a href=&#34;#cb12-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, C) {&lt;/span&gt;
&lt;span id=&#34;cb12-56&#34;&gt;&lt;a href=&#34;#cb12-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll a1b1, a1b2, a2b1, a2b2;&lt;/span&gt;
&lt;span id=&#34;cb12-57&#34;&gt;&lt;a href=&#34;#cb12-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a1b1 = (ll)floor((t1[i].x + t2[i].x) / &lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-58&#34;&gt;&lt;a href=&#34;#cb12-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a1b2 = (ll)floor((t1[i].y + t2[i].y) / &lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt; + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-59&#34;&gt;&lt;a href=&#34;#cb12-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a2b1 = ((ll)floor(t1[i].y + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) - a1b2) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-60&#34;&gt;&lt;a href=&#34;#cb12-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            a2b2 = ((ll)floor(t2[i].x + &lt;span class=&#34;fl&#34;&gt;0.49&lt;/span&gt;) - a1b1) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-61&#34;&gt;&lt;a href=&#34;#cb12-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            C[i] = ((((a1b1 &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;) + (a1b2 + a2b1)) &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;) + a2b2) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-62&#34;&gt;&lt;a href=&#34;#cb12-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            C[i] = (C[i] + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb12-63&#34;&gt;&lt;a href=&#34;#cb12-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb12-64&#34;&gt;&lt;a href=&#34;#cb12-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-65&#34;&gt;&lt;a href=&#34;#cb12-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        clr2(p1, n), clr2(p2, n), clr2(q, n), clr2(t1, n), clr2(t2, n);&lt;/span&gt;
&lt;span id=&#34;cb12-66&#34;&gt;&lt;a href=&#34;#cb12-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb12-67&#34;&gt;&lt;a href=&#34;#cb12-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb12-68&#34;&gt;&lt;a href=&#34;#cb12-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; MTT;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;fftntt-优化卷积的一些例子&#34;&gt;FFT/NTT 优化卷积的一些例子&lt;/h2&gt;
&lt;p&gt;在继续之前，我们先来看看 FFT/NTT 的一些应用。（高精度乘法就不说了，记得最后进位就可以了）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化一般的卷积&lt;/li&gt;
&lt;li&gt;和生成函数一起食用&lt;/li&gt;
&lt;li&gt;字符串匹配（你没看错）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;洛谷-p3338-zjoi2014力&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3338&#34;&gt;洛谷 P3338 [ZJOI2014]力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(\{q\}\)&lt;/span&gt;，定义 &lt;span class=&#34;math display&#34;&gt;\[
F_i = \sum_{j = 1}^{i - 1}\frac{q_iq_j}{(i - j)^2} - \sum_{j = i + 1}^n\frac{q_iq_j}{(i - j)^2}
\]&lt;/span&gt; 求 &lt;span class=&#34;math display&#34;&gt;\[
E_i=\frac{F_i}{q_i}
\]&lt;/span&gt; 考虑暴力的话，这道题是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 的，过不去，考虑转化式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E_i &amp;amp;= \frac{F_i}{q_i}\\
&amp;amp;=\sum_{j = 1}^{i - 1}\frac{q_j}{(i - j)^2} - \sum_{j = i + 1}^n\frac{q_j}{(i - j)^2}\\
\end{aligned}
\]&lt;/span&gt; 我们尝试将其化为卷积的形式，令 &lt;span class=&#34;math inline&#34;&gt;\(f_i = q_i\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(f_0 = 0\)&lt;/span&gt;；&lt;span class=&#34;math inline&#34;&gt;\(g_i =\dfrac{1}{i^2}\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(g_0 = 0\)&lt;/span&gt;，回代： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
E_i &amp;amp;= \sum_{j = 0}^{i}f_jg_{i - j} - \sum_{j = i}^nf_jg_{j - i}
\end{aligned}
\]&lt;/span&gt; 左边的部分已经是一个卷积的形式了，考虑继续化简右边。此时我们可以使用一个翻转的技巧，令 &lt;span class=&#34;math inline&#34;&gt;\(f&amp;#39;_i = f_{n - i}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(t = n - i\)&lt;/span&gt;，则右半边的式子可以化为 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle\sum_{j = 0}^{t}f&amp;#39;_{t - j}g_j\)&lt;/span&gt;。现在两边都化为卷积的形式了，可以愉快的使用 FFT 加速了。&lt;/p&gt;
&lt;p&gt;即我们设多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x) =\displaystyle\sum_{i = 0}^nf_ix^n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B(x) = \displaystyle\sum_{i = 0}^ng_ix^n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(C(x) = \displaystyle\sum_{i = 0}^nf&amp;#39;_i\)&lt;/span&gt;。再令 &lt;span class=&#34;math inline&#34;&gt;\(L(x) = A(x)B(x)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(R(x) = B(x)C(x)\)&lt;/span&gt;，不难发现答案 &lt;span class=&#34;math inline&#34;&gt;\(E_i = l_i - r_{n - i}\)&lt;/span&gt;，其中 &lt;span class=&#34;math inline&#34;&gt;\(l_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(r_i\)&lt;/span&gt; 分别为 &lt;span class=&#34;math inline&#34;&gt;\(L(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt; 中 &lt;span class=&#34;math inline&#34;&gt;\(x^i\)&lt;/span&gt; 的系数。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n);&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;a[i].x);&lt;/span&gt;
&lt;span id=&#34;cb13-7&#34;&gt;&lt;a href=&#34;#cb13-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        b[i].x = (&lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt; / i / i);&lt;/span&gt;
&lt;span id=&#34;cb13-8&#34;&gt;&lt;a href=&#34;#cb13-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c[n - i].x = a[i].x;&lt;/span&gt;
&lt;span id=&#34;cb13-9&#34;&gt;&lt;a href=&#34;#cb13-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb13-10&#34;&gt;&lt;a href=&#34;#cb13-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-11&#34;&gt;&lt;a href=&#34;#cb13-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= (n &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-12&#34;&gt;&lt;a href=&#34;#cb13-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb13-13&#34;&gt;&lt;a href=&#34;#cb13-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = ((rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb13-14&#34;&gt;&lt;a href=&#34;#cb13-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), DFT(b, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), DFT(c, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-15&#34;&gt;&lt;a href=&#34;#cb13-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb13-16&#34;&gt;&lt;a href=&#34;#cb13-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i], c[i] = b[i] * c[i];&lt;/span&gt;
&lt;span id=&#34;cb13-17&#34;&gt;&lt;a href=&#34;#cb13-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DFT(a, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), DFT(c, lim, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb13-18&#34;&gt;&lt;a href=&#34;#cb13-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb13-19&#34;&gt;&lt;a href=&#34;#cb13-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%.3lf\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a[i].x - c[n - i].x);&lt;/span&gt;
&lt;span id=&#34;cb13-20&#34;&gt;&lt;a href=&#34;#cb13-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb13-21&#34;&gt;&lt;a href=&#34;#cb13-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;洛谷-p3723-ah2017hnoi2017礼物&#34;&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3723&#34;&gt;洛谷 P3723 [AH2017/HNOI2017]礼物&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;题意：给定两个序列 &lt;span class=&#34;math inline&#34;&gt;\(\{x\}\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\{y\}\)&lt;/span&gt;，可以整体平移序列或者整体加/减某个数，求最终序列&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n(x_i - y_i)^2
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;的最小值。&lt;/p&gt;
&lt;p&gt;分析：设整体加减的数为 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 可正可负），我们需要最小化的就是下面这个式子：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^n(x_i - y_i + c)^2
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;展开上面的式子，由 &lt;span class=&#34;math inline&#34;&gt;\((x_i - y_i +c)^2 = x_i^2 + y_i^2 + c^2 + 2x_ic - 2y_ic - 2x_iy_i\)&lt;/span&gt; 可以得到原式可化简为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum x_i^2 + \sum y_i^2 + nc^2 + 2c\sum x_i - 2c\sum y_i - 2\sum x_iy_i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（下标省略）&lt;/p&gt;
&lt;p&gt;不难发现我们只需要最大化 &lt;span class=&#34;math inline&#34;&gt;\(\sum x_iy_i\)&lt;/span&gt; 就可以啦。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_k\)&lt;/span&gt; 为旋转了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个单位后 &lt;span class=&#34;math inline&#34;&gt;\(\sum x_iy_i\)&lt;/span&gt; 的取值，先把 &lt;span class=&#34;math inline&#34;&gt;\(\{x\}\)&lt;/span&gt; 倍长一波，则&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_k = \sum_{i = 1}^nx_{i + k}y_k
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;翻转 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_k = \sum_{i = 1}^nx_{i + k}y_{n - i + 1}&amp;#39;
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;考虑多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(t) = \sum_{i = 1}^n x_it^i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g(t) = \sum_{i = 1}^n y_it^i\)&lt;/span&gt;，令 &lt;span class=&#34;math inline&#34;&gt;\(h(t) = f(t) * g(t)\)&lt;/span&gt;，不难发现其 &lt;span class=&#34;math inline&#34;&gt;\(t^{n + k + 1}\)&lt;/span&gt; 的系数即为 &lt;span class=&#34;math inline&#34;&gt;\(f_k\)&lt;/span&gt;。因此可以使用 FFT/NTT 将倍长过的 &lt;span class=&#34;math inline&#34;&gt;\(\{x\}\)&lt;/span&gt; 与翻转过的 &lt;span class=&#34;math inline&#34;&gt;\(\{y\}\)&lt;/span&gt; 卷起来，然后把结果从第 &lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 到第 &lt;span class=&#34;math inline&#34;&gt;\(2n\)&lt;/span&gt; 处找最值就可以了&lt;/p&gt;
&lt;p&gt;NTT 的实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll suma, sumb, suma2, sumb2, n, m;&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; NTT(ll *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            swap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb14-10&#34;&gt;&lt;a href=&#34;#cb14-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-11&#34;&gt;&lt;a href=&#34;#cb14-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb14-12&#34;&gt;&lt;a href=&#34;#cb14-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-13&#34;&gt;&lt;a href=&#34;#cb14-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll Gp = pow(type ? G : invG, (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / p);&lt;/span&gt;
&lt;span id=&#34;cb14-14&#34;&gt;&lt;a href=&#34;#cb14-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb14-15&#34;&gt;&lt;a href=&#34;#cb14-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb14-16&#34;&gt;&lt;a href=&#34;#cb14-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll buf = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-17&#34;&gt;&lt;a href=&#34;#cb14-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, buf = buf * Gp % mod)&lt;/span&gt;
&lt;span id=&#34;cb14-18&#34;&gt;&lt;a href=&#34;#cb14-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb14-19&#34;&gt;&lt;a href=&#34;#cb14-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll tmp = buf * f[l + len] % mod;&lt;/span&gt;
&lt;span id=&#34;cb14-20&#34;&gt;&lt;a href=&#34;#cb14-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l + len] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb14-21&#34;&gt;&lt;a href=&#34;#cb14-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[l + len] &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) f[l + len] += mod;&lt;/span&gt;
&lt;span id=&#34;cb14-22&#34;&gt;&lt;a href=&#34;#cb14-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb14-23&#34;&gt;&lt;a href=&#34;#cb14-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[l] &amp;gt; mod) f[l] -= mod;&lt;/span&gt;
&lt;span id=&#34;cb14-24&#34;&gt;&lt;a href=&#34;#cb14-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb14-25&#34;&gt;&lt;a href=&#34;#cb14-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb14-26&#34;&gt;&lt;a href=&#34;#cb14-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb14-27&#34;&gt;&lt;a href=&#34;#cb14-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll invlim = pow(lim);&lt;/span&gt;
&lt;span id=&#34;cb14-28&#34;&gt;&lt;a href=&#34;#cb14-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!type)&lt;/span&gt;
&lt;span id=&#34;cb14-29&#34;&gt;&lt;a href=&#34;#cb14-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-30&#34;&gt;&lt;a href=&#34;#cb14-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = f[i] * invlim % mod;&lt;/span&gt;
&lt;span id=&#34;cb14-31&#34;&gt;&lt;a href=&#34;#cb14-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-32&#34;&gt;&lt;a href=&#34;#cb14-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb14-33&#34;&gt;&lt;a href=&#34;#cb14-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-34&#34;&gt;&lt;a href=&#34;#cb14-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb14-35&#34;&gt;&lt;a href=&#34;#cb14-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb14-36&#34;&gt;&lt;a href=&#34;#cb14-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb14-37&#34;&gt;&lt;a href=&#34;#cb14-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb14-38&#34;&gt;&lt;a href=&#34;#cb14-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i + n] = read(), suma += a[i], suma2 += a[i] * a[i];&lt;/span&gt;
&lt;span id=&#34;cb14-39&#34;&gt;&lt;a href=&#34;#cb14-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb14-40&#34;&gt;&lt;a href=&#34;#cb14-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = read(), sumb += b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], sumb2 += b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * b[n - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb14-41&#34;&gt;&lt;a href=&#34;#cb14-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-42&#34;&gt;&lt;a href=&#34;#cb14-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * n) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-43&#34;&gt;&lt;a href=&#34;#cb14-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb14-44&#34;&gt;&lt;a href=&#34;#cb14-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = (rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-45&#34;&gt;&lt;a href=&#34;#cb14-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(a, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(b, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-46&#34;&gt;&lt;a href=&#34;#cb14-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim)&lt;/span&gt;
&lt;span id=&#34;cb14-47&#34;&gt;&lt;a href=&#34;#cb14-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = a[i] * b[i] % mod;&lt;span class=&#34;co&#34;&gt;//千万不要忘记取模&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb14-48&#34;&gt;&lt;a href=&#34;#cb14-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(a, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb14-49&#34;&gt;&lt;a href=&#34;#cb14-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-50&#34;&gt;&lt;a href=&#34;#cb14-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb14-51&#34;&gt;&lt;a href=&#34;#cb14-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, -m, m)&lt;/span&gt;
&lt;span id=&#34;cb14-52&#34;&gt;&lt;a href=&#34;#cb14-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = min(ans, suma2 + sumb2 + j * j * n + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * j * (suma - sumb) - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * a[i + n]);&lt;/span&gt;
&lt;span id=&#34;cb14-53&#34;&gt;&lt;a href=&#34;#cb14-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb14-54&#34;&gt;&lt;a href=&#34;#cb14-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb14-55&#34;&gt;&lt;a href=&#34;#cb14-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;bzoj3771-triple&#34;&gt;BZOJ3771 Triple&lt;/h3&gt;
&lt;p&gt;题意：有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 把价值分别为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的斧子，河神可能拿走 1 - 3 把，问每种可能的损失价值及其对应方案数。（不计顺序）&lt;/p&gt;
&lt;p&gt;思路：这是一道生成函数的入门题。&lt;/p&gt;
&lt;p&gt;考虑设出多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，其系数有 &lt;span class=&#34;math inline&#34;&gt;\(A[a_i] = 1\)&lt;/span&gt;，代表选一把的。则你可能会觉得答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x) + A^2(x) + A^3(x)\)&lt;/span&gt;。但是这样是显然不对的。为什么？&lt;/p&gt;
&lt;p&gt;因为这样的话同一个元素可能被选两次或三次，对于这种情况定义 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(C(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B[2a_i] = 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(C[3a_i] = 1\)&lt;/span&gt;，代表同时选两次/三次的，减掉这些方案数就可以了。然后需要注意顺序问题：&lt;/p&gt;
&lt;p&gt;选一把的答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，不难发现选两种的即为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{A^2(x) - B(x)}{2}\)&lt;/span&gt;，选三种的比较麻烦：不能同时选两种一样的，即减去 &lt;span class=&#34;math inline&#34;&gt;\(3A(x)B(x)\)&lt;/span&gt;，，但是选三种同样的又会被多减两次，最后除以 &lt;span class=&#34;math inline&#34;&gt;\(3!\)&lt;/span&gt; 去掉顺序问题，所以最终答案为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
A(x) + \frac{A^2(x) - B(x)}{2} + \frac{A^3(x) - 3A(x)B(x) + 2C(x)}{6}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;生成函数的卷积使用 NTT 或 FFT 优化即可。注意此时 NTT 模数要取一个更大的质数。&lt;strong&gt;不知道为什么生成函数能这样对应的可以意会一下多项式卷积的定义式以及这些系数的组合意义&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f1[maxn], f2[maxn], f3[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll g[maxn], t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb15-3&#34;&gt;&lt;a href=&#34;#cb15-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb15-4&#34;&gt;&lt;a href=&#34;#cb15-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb15-5&#34;&gt;&lt;a href=&#34;#cb15-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb15-6&#34;&gt;&lt;a href=&#34;#cb15-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read();&lt;/span&gt;
&lt;span id=&#34;cb15-7&#34;&gt;&lt;a href=&#34;#cb15-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb15-8&#34;&gt;&lt;a href=&#34;#cb15-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb15-9&#34;&gt;&lt;a href=&#34;#cb15-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = read();&lt;/span&gt;
&lt;span id=&#34;cb15-10&#34;&gt;&lt;a href=&#34;#cb15-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++f1[tmp], ++g[tmp], ++ans[tmp];&lt;/span&gt;
&lt;span id=&#34;cb15-11&#34;&gt;&lt;a href=&#34;#cb15-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++f2[tmp &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ++f3[tmp * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb15-12&#34;&gt;&lt;a href=&#34;#cb15-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-13&#34;&gt;&lt;a href=&#34;#cb15-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-14&#34;&gt;&lt;a href=&#34;#cb15-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= (&lt;span class=&#34;dv&#34;&gt;40000&lt;/span&gt; * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-15&#34;&gt;&lt;a href=&#34;#cb15-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-16&#34;&gt;&lt;a href=&#34;#cb15-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = (rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-17&#34;&gt;&lt;a href=&#34;#cb15-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f1, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-18&#34;&gt;&lt;a href=&#34;#cb15-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-19&#34;&gt;&lt;a href=&#34;#cb15-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = f1[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb15-20&#34;&gt;&lt;a href=&#34;#cb15-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-21&#34;&gt;&lt;a href=&#34;#cb15-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-22&#34;&gt;&lt;a href=&#34;#cb15-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += (g[i] - f2[i]) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-23&#34;&gt;&lt;a href=&#34;#cb15-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-24&#34;&gt;&lt;a href=&#34;#cb15-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-25&#34;&gt;&lt;a href=&#34;#cb15-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = f1[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb15-26&#34;&gt;&lt;a href=&#34;#cb15-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-27&#34;&gt;&lt;a href=&#34;#cb15-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-28&#34;&gt;&lt;a href=&#34;#cb15-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-29&#34;&gt;&lt;a href=&#34;#cb15-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f2[i] = f2[i] * f1[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb15-30&#34;&gt;&lt;a href=&#34;#cb15-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb15-31&#34;&gt;&lt;a href=&#34;#cb15-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-32&#34;&gt;&lt;a href=&#34;#cb15-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb15-33&#34;&gt;&lt;a href=&#34;#cb15-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += (g[i] - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * f2[i] + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * f3[i]) / &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-34&#34;&gt;&lt;a href=&#34;#cb15-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[i]) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, i, ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb15-35&#34;&gt;&lt;a href=&#34;#cb15-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb15-36&#34;&gt;&lt;a href=&#34;#cb15-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb15-37&#34;&gt;&lt;a href=&#34;#cb15-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;fftntt-与字符串匹配&#34;&gt;FFT/NTT 与字符串匹配&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;字符串下标从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 开始&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;最一般的情况&#34;&gt;最一般的情况&lt;/h4&gt;
&lt;p&gt;考虑文本串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 和模式串 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;，串长 &lt;span class=&#34;math inline&#34;&gt;\(n = |S|\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = |T|\)&lt;/span&gt;，保证 &lt;span class=&#34;math inline&#34;&gt;\(n \ge m\)&lt;/span&gt;，现在需要找出 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中出现的每个位置。直接跑 KMP 就可以了，但是这个不是要提的重点。考虑串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个字符为 &lt;span class=&#34;math inline&#34;&gt;\(S[i]\)&lt;/span&gt;，那么匹配就可以写成 &lt;span class=&#34;math inline&#34;&gt;\(S[i] - T[j] = 0\)&lt;/span&gt;，这个应该是比较好想的。&lt;/p&gt;
&lt;p&gt;假设 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位开始成功匹配，则我们有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^{m} (S[i + j - 1] - T[j])^2 = 0
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;为了防止正负号相互抵消，所以需要平方。由于 &lt;span class=&#34;math inline&#34;&gt;\(i + j - 1 + j\)&lt;/span&gt; 不是定值，不符合我们需要的卷积的形式，所以翻转一下 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 让其变为 &lt;span class=&#34;math inline&#34;&gt;\(T&amp;#39;\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^{m} (S[i + j - 1] - T[m - j + 1])^2 = 0
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;打开来我们就会发现&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^{m} (S[i + j - 1]^2 + T[j]^2 - 2S[i + j - 1]T[m - j + 1]) = 0
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(i + j - 1 + m - j + 1 = i + m\)&lt;/span&gt;，为定值。&lt;/p&gt;
&lt;p&gt;所以上面的式子就可以化成&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\sum_{j = 1}^m S[i + j - 1]^2 + \sum_{j = 1}^m T[j]^2 - 2\sum_{x + y = i + m}S[x]T[y]
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第一项直接前缀和就可以解决，第二项常数，第三项使用 FFT/NTT。&lt;/p&gt;
&lt;p&gt;更加好理解地，设 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = \sum_{i + j = x + m}S[i]T[j]\)&lt;/span&gt;，我们只需要求出这个 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;问题来了，这样难写复杂度高常数大全方位被 KMP 吊打的算法有什么存在的意义吗？对不起还真的有：&lt;/p&gt;
&lt;h4 id=&#34;带通配符的字符串匹配&#34;&gt;带通配符的字符串匹配&lt;/h4&gt;
&lt;p&gt;请看例题 &lt;a href=&#34;https://www.luogu.com.cn/problem/P4173&#34;&gt;洛谷 P4173 残缺的字符串&lt;/a&gt;。仍然是字符串匹配，但是每个串都有&lt;strong&gt;通配符&lt;/strong&gt;，这个时候 KMP 就显得无能为力了。怎么办呢？好好思考一下两个字符如何才能匹配：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个字符完全一样&lt;/li&gt;
&lt;li&gt;其中至少一个为通配符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两者是逻辑或的关系，我们魔改一下上面的式子，不难发现我们只需要把通配符的值设为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 就可以解决了：&lt;/p&gt;
&lt;p&gt;定义匹配函数 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 位开始和 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 是否匹配，匹配的话 &lt;span class=&#34;math inline&#34;&gt;\(F(x) = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{j = 1}^m(S[x + j - 1] - T[j])^2S[x + j - 1]T[j]
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;化简：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
F(x) &amp;amp;= \sum_{j = 1}^m(S[x + j - 1] - T[j])^2S[x + j - 1]T[j]\\
&amp;amp;= \sum_{j = 1}^m(S[x + j - 1] - T&amp;#39;[m - j + 1])^2S[x + j - 1]T&amp;#39;[m - j + 1]\\
&amp;amp;= \sum_{j = 1}^m(S[x + j - 1]^2 + T&amp;#39;[m - j + 1]^2 - 2S[x + j - 1]T&amp;#39;[m - j + 1])S[x + j - 1]T&amp;#39;[m - j + 1]\\
&amp;amp;= \sum_{j = 1}^m S[x + j - 1]^3T&amp;#39;[m - j + 1] + \sum_{j = 1}^m S[x + j - 1]T&amp;#39;[m - j + 1]^3- 2\sum_{j = 1}^m S[x + j - 1]^2T&amp;#39;[m - j + 1]^2\\
&amp;amp;= \sum_{i + j = x + m}S[i]^3T&amp;#39;[j] + \sum_{i + j = x + m}S[i]T&amp;#39;[j]^3 - 2\sum_{i + j = x + m}S[i]^2T[j]^2
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;于是问题就解决了，只需要用 NTT/FFT 计算出上面三项恶心的东西出来就 OK 了。一共进行 &lt;span class=&#34;math inline&#34;&gt;\(7\)&lt;/span&gt; 次 NTT 即可。&lt;/p&gt;
&lt;p&gt;需要注意的是最后枚举答案的时候只能枚举到 &lt;span class=&#34;math inline&#34;&gt;\(n - m + 1\)&lt;/span&gt; 处，否则只有 &lt;span class=&#34;math inline&#34;&gt;\(35\)&lt;/span&gt; 分。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], f2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g2[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], f3[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g3[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], vec[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], tot;&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; a[maxn], b[maxn];&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-7&#34;&gt;&lt;a href=&#34;#cb16-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb16-8&#34;&gt;&lt;a href=&#34;#cb16-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb16-9&#34;&gt;&lt;a href=&#34;#cb16-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    m = readInt(), n = readInt();&lt;/span&gt;
&lt;span id=&#34;cb16-10&#34;&gt;&lt;a href=&#34;#cb16-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-11&#34;&gt;&lt;a href=&#34;#cb16-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, b + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-12&#34;&gt;&lt;a href=&#34;#cb16-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb16-13&#34;&gt;&lt;a href=&#34;#cb16-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb16-14&#34;&gt;&lt;a href=&#34;#cb16-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = (a[m - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;) ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : a[m - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-15&#34;&gt;&lt;a href=&#34;#cb16-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g2[i] = g[i] * g[i], g3[i] = g2[i] * g[i];&lt;/span&gt;
&lt;span id=&#34;cb16-16&#34;&gt;&lt;a href=&#34;#cb16-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-17&#34;&gt;&lt;a href=&#34;#cb16-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb16-18&#34;&gt;&lt;a href=&#34;#cb16-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb16-19&#34;&gt;&lt;a href=&#34;#cb16-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = (b[i] == &lt;span class=&#34;ch&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;) ? &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; : b[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-20&#34;&gt;&lt;a href=&#34;#cb16-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f2[i] = f[i] * f[i], f3[i] = f2[i] * f[i];&lt;/span&gt;
&lt;span id=&#34;cb16-21&#34;&gt;&lt;a href=&#34;#cb16-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb16-22&#34;&gt;&lt;a href=&#34;#cb16-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-23&#34;&gt;&lt;a href=&#34;#cb16-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-24&#34;&gt;&lt;a href=&#34;#cb16-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(f3, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-25&#34;&gt;&lt;a href=&#34;#cb16-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g2, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g3, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-26&#34;&gt;&lt;a href=&#34;#cb16-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-27&#34;&gt;&lt;a href=&#34;#cb16-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f3[i] * g[i] % mod + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * g3[i] % mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f2[i] * g2[i] % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb16-28&#34;&gt;&lt;a href=&#34;#cb16-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(ans, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb16-29&#34;&gt;&lt;a href=&#34;#cb16-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-30&#34;&gt;&lt;a href=&#34;#cb16-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-31&#34;&gt;&lt;a href=&#34;#cb16-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[i + m] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb16-32&#34;&gt;&lt;a href=&#34;#cb16-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++cnt, vec[++tot] = i;&lt;/span&gt;
&lt;span id=&#34;cb16-33&#34;&gt;&lt;a href=&#34;#cb16-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, cnt);&lt;/span&gt;
&lt;span id=&#34;cb16-34&#34;&gt;&lt;a href=&#34;#cb16-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, vec[i]);&lt;/span&gt;
&lt;span id=&#34;cb16-35&#34;&gt;&lt;a href=&#34;#cb16-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb16-36&#34;&gt;&lt;a href=&#34;#cb16-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;另外一道例题&#34;&gt;另外一道例题&lt;/h4&gt;
&lt;p&gt;请看 &lt;a href=&#34;https://www.luogu.com.cn/problem/CF528D&#34;&gt;CF528D Fuzzy Search&lt;/a&gt;。题意：字符串匹配，&lt;span class=&#34;math inline&#34;&gt;\(1\le |T| \le |S| \le 2\times 10^5\)&lt;/span&gt;，字符集只有 &lt;span class=&#34;math inline&#34;&gt;\(\texttt{ATCG}\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 中的第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个位置出现当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(\forall j\in [1,T]\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\exists p\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(|i + j - 1 - p|\le k \land S[p] = T[j]\)&lt;/span&gt;。即偏移量不能超过 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意到字符集很小，只有 &lt;span class=&#34;math inline&#34;&gt;\(4\)&lt;/span&gt; 个字符，所以我们可以把字符串 01 化，分开考虑每个字母。比如 &lt;span class=&#34;math inline&#34;&gt;\(S = \texttt{ATCGAA}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(T = \texttt{ACAA}\)&lt;/span&gt;，现在只考虑字母 &lt;span class=&#34;math inline&#34;&gt;\(\texttt A\)&lt;/span&gt;，把 &lt;span class=&#34;math inline&#34;&gt;\(\texttt A\)&lt;/span&gt; 化成 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 而其他的化为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(S = \texttt{100011}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(T= \texttt{1011}\)&lt;/span&gt;。然后假设 &lt;span class=&#34;math inline&#34;&gt;\(k = 1\)&lt;/span&gt;，把能扩展的都往两边扩展，则 &lt;span class=&#34;math inline&#34;&gt;\(S = \texttt{110111}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这个时候，我们就可以设匹配 &lt;span class=&#34;math inline&#34;&gt;\(F(x, c)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 的第 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 位开始字符 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 能匹配的数量，最终答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x) = \sum_{c\in\lbrace\texttt{A,T,C,G}\rbrace}F(x,c)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; 匹配成功当且仅当 &lt;span class=&#34;math inline&#34;&gt;\(A(x) = m\)&lt;/span&gt;，即所有字符都匹配到了，否则失败。&lt;/p&gt;
&lt;p&gt;不难发现 &lt;span class=&#34;math inline&#34;&gt;\(F(x, c) = \sum_{j = 1}^mS[x + j - 1]T[j]\)&lt;/span&gt;，老套路翻转一下变为 &lt;span class=&#34;math inline&#34;&gt;\(F(x, c) = \sum_{j = 1}^m S[x + j - 1]T[m - j + 1] = \sum_{i + j = x + m}S[i]T[j]\)&lt;/span&gt;。这就是喜闻乐见的卷积形式了。NTT 直接上就完了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, k, lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; proc(&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c)&lt;/span&gt;
&lt;span id=&#34;cb17-8&#34;&gt;&lt;a href=&#34;#cb17-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb17-9&#34;&gt;&lt;a href=&#34;#cb17-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(f, lim), clr(g, lim);&lt;/span&gt;
&lt;span id=&#34;cb17-10&#34;&gt;&lt;a href=&#34;#cb17-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, lst = -&lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb17-11&#34;&gt;&lt;a href=&#34;#cb17-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb17-12&#34;&gt;&lt;a href=&#34;#cb17-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == c)&lt;/span&gt;
&lt;span id=&#34;cb17-13&#34;&gt;&lt;a href=&#34;#cb17-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lst = i;&lt;/span&gt;
&lt;span id=&#34;cb17-14&#34;&gt;&lt;a href=&#34;#cb17-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i - lst &amp;lt;= k)&lt;/span&gt;
&lt;span id=&#34;cb17-15&#34;&gt;&lt;a href=&#34;#cb17-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-16&#34;&gt;&lt;a href=&#34;#cb17-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-17&#34;&gt;&lt;a href=&#34;#cb17-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = n, lst = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt;; i; --i)&lt;/span&gt;
&lt;span id=&#34;cb17-18&#34;&gt;&lt;a href=&#34;#cb17-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb17-19&#34;&gt;&lt;a href=&#34;#cb17-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (s[i] == c)&lt;/span&gt;
&lt;span id=&#34;cb17-20&#34;&gt;&lt;a href=&#34;#cb17-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lst = i;&lt;/span&gt;
&lt;span id=&#34;cb17-21&#34;&gt;&lt;a href=&#34;#cb17-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (lst - i &amp;lt;= k)&lt;/span&gt;
&lt;span id=&#34;cb17-22&#34;&gt;&lt;a href=&#34;#cb17-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-23&#34;&gt;&lt;a href=&#34;#cb17-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb17-24&#34;&gt;&lt;a href=&#34;#cb17-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb17-25&#34;&gt;&lt;a href=&#34;#cb17-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = (t[m - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == c);&lt;/span&gt;
&lt;span id=&#34;cb17-26&#34;&gt;&lt;a href=&#34;#cb17-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-27&#34;&gt;&lt;a href=&#34;#cb17-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb17-28&#34;&gt;&lt;a href=&#34;#cb17-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb17-29&#34;&gt;&lt;a href=&#34;#cb17-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-30&#34;&gt;&lt;a href=&#34;#cb17-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb17-31&#34;&gt;&lt;a href=&#34;#cb17-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += f[i + m];&lt;/span&gt;
&lt;span id=&#34;cb17-32&#34;&gt;&lt;a href=&#34;#cb17-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb17-33&#34;&gt;&lt;a href=&#34;#cb17-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb17-34&#34;&gt;&lt;a href=&#34;#cb17-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb17-35&#34;&gt;&lt;a href=&#34;#cb17-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb17-36&#34;&gt;&lt;a href=&#34;#cb17-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = readInt(), m = readInt(), k = readInt();&lt;/span&gt;
&lt;span id=&#34;cb17-37&#34;&gt;&lt;a href=&#34;#cb17-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-38&#34;&gt;&lt;a href=&#34;#cb17-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, t + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb17-39&#34;&gt;&lt;a href=&#34;#cb17-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= n + m) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-40&#34;&gt;&lt;a href=&#34;#cb17-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;) proc(&lt;span class=&#34;st&#34;&gt;&amp;quot;ATCG&amp;quot;&lt;/span&gt;[i]);&lt;/span&gt;
&lt;span id=&#34;cb17-41&#34;&gt;&lt;a href=&#34;#cb17-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-42&#34;&gt;&lt;a href=&#34;#cb17-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb17-43&#34;&gt;&lt;a href=&#34;#cb17-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cnt += (ans[i] == m);&lt;/span&gt;
&lt;span id=&#34;cb17-44&#34;&gt;&lt;a href=&#34;#cb17-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, cnt);&lt;/span&gt;
&lt;span id=&#34;cb17-45&#34;&gt;&lt;a href=&#34;#cb17-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb17-46&#34;&gt;&lt;a href=&#34;#cb17-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;关于封装&#34;&gt;关于封装&lt;/h2&gt;
&lt;p&gt;以后的全家桶会大量使用 NTT 等基础操作，考虑实现一个常数较小的且方便阅读的封装：&lt;/p&gt;
&lt;p&gt;首先是各种 &lt;code&gt;#define&lt;/code&gt;。由于我们在进行多项式运算的时候需要考虑界的问题，&lt;strong&gt;因此一定要把超过界了的给清零&lt;/strong&gt;，不然可能出现各种奇奇怪怪的问题比如多卷了之类的：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define VEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)v.size();&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ll &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define ull &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define clr&lt;/span&gt;(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memset(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;))&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;*&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(n))&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define cpy&lt;/span&gt;(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;g,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;n)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memcpy(f,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;g,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;))&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;*&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(n))&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define MOD &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;memset&lt;/code&gt; 和 &lt;code&gt;memcpy&lt;/code&gt; 的用法建议自己去查。&lt;/p&gt;
&lt;p&gt;接下来是一些基本的东西，下面我们使用 &lt;code&gt;vector&lt;/code&gt; 来实现多项式，这样子的好处是常数不大而且方便好写：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; G = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, mod = MOD, maxn = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt; | &lt;span class=&#34;dv&#34;&gt;500&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; Poly;&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qPow(ll a, ll b = mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; b; b &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, a = a * a % mod)&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ret = a * ret % mod;&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; invG = qPow(G);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NTT 时需要用到的位逆序置换：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], revLim;&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getTr(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (revLim == n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    revLim = n;&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i] = (&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) | ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样子可以在需要进行很多次 NTT 的时候智能的求出对应需要的 &lt;code&gt;tr&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;NTT：&lt;strong&gt;关于 &lt;code&gt;static&lt;/code&gt; 关键字相关的建议自己查一下。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; NTT(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *g, &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; op, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getTr(n);&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; ull f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], w[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    w[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb21-5&#34;&gt;&lt;a href=&#34;#cb21-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = (((ll)mod &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) + g[&lt;span class=&#34;fu&#34;&gt;tr&lt;/span&gt;[i]]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-6&#34;&gt;&lt;a href=&#34;#cb21-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; l &amp;lt; n; l &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb21-7&#34;&gt;&lt;a href=&#34;#cb21-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ull tG = qPow(op ? G : invG, (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / (l &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;
&lt;span id=&#34;cb21-8&#34;&gt;&lt;a href=&#34;#cb21-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, l - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) w[i] = w[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * tG % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-9&#34;&gt;&lt;a href=&#34;#cb21-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; n; k += (l &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb21-10&#34;&gt;&lt;a href=&#34;#cb21-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; p &amp;lt; l; ++p) {&lt;/span&gt;
&lt;span id=&#34;cb21-11&#34;&gt;&lt;a href=&#34;#cb21-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tt = w[p] * f[k | l | p] % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-12&#34;&gt;&lt;a href=&#34;#cb21-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[k | l | p] = f[k | p] + mod - tt;&lt;/span&gt;
&lt;span id=&#34;cb21-13&#34;&gt;&lt;a href=&#34;#cb21-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[k | p] += tt;&lt;/span&gt;
&lt;span id=&#34;cb21-14&#34;&gt;&lt;a href=&#34;#cb21-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb21-15&#34;&gt;&lt;a href=&#34;#cb21-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb21-16&#34;&gt;&lt;a href=&#34;#cb21-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] %= mod;&lt;/span&gt;
&lt;span id=&#34;cb21-17&#34;&gt;&lt;a href=&#34;#cb21-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb21-18&#34;&gt;&lt;a href=&#34;#cb21-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!op) {&lt;/span&gt;
&lt;span id=&#34;cb21-19&#34;&gt;&lt;a href=&#34;#cb21-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ull invn = qPow(n);&lt;/span&gt;
&lt;span id=&#34;cb21-20&#34;&gt;&lt;a href=&#34;#cb21-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) g[i] = f[i] % mod * invn % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-21&#34;&gt;&lt;a href=&#34;#cb21-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) g[i] = f[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb21-22&#34;&gt;&lt;a href=&#34;#cb21-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中有几个需要注意的点。使用 &lt;code&gt;ull&lt;/code&gt; 是因为 &lt;code&gt;ull&lt;/code&gt; 可以大幅减少需要的取模操作，我们可以在迭代 &lt;span class=&#34;math inline&#34;&gt;\(10\)&lt;/span&gt; 次再取模，减少常数。而第五行则为去掉传进来的 &lt;span class=&#34;math inline&#34;&gt;\([x^i]g(x)\)&lt;/span&gt; 为负数时可能产生的影响。&lt;/p&gt;
&lt;p&gt;然后是 &lt;code&gt;poly&lt;/code&gt; 的常见运算，重载了之后会非常方便。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; mul(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *g, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb22-4&#34;&gt;&lt;a href=&#34;#cb22-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-5&#34;&gt;&lt;a href=&#34;#cb22-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-6&#34;&gt;&lt;a href=&#34;#cb22-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb22-7&#34;&gt;&lt;a href=&#34;#cb22-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A; C.resize(max(A.size(), B.size()));&lt;/span&gt;
&lt;span id=&#34;cb22-8&#34;&gt;&lt;a href=&#34;#cb22-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    VEC(i, B) C[i] = (C[i] + B[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-9&#34;&gt;&lt;a href=&#34;#cb22-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-10&#34;&gt;&lt;a href=&#34;#cb22-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-11&#34;&gt;&lt;a href=&#34;#cb22-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;-(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb22-12&#34;&gt;&lt;a href=&#34;#cb22-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A; C.resize(max(A.size(), B.size()));&lt;/span&gt;
&lt;span id=&#34;cb22-13&#34;&gt;&lt;a href=&#34;#cb22-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    VEC(i, B) C[i] = (C[i] + mod - B[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-14&#34;&gt;&lt;a href=&#34;#cb22-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-15&#34;&gt;&lt;a href=&#34;#cb22-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-16&#34;&gt;&lt;a href=&#34;#cb22-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb22-17&#34;&gt;&lt;a href=&#34;#cb22-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A;&lt;/span&gt;
&lt;span id=&#34;cb22-18&#34;&gt;&lt;a href=&#34;#cb22-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    VEC(i, A) C[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * c * C[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb22-19&#34;&gt;&lt;a href=&#34;#cb22-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-20&#34;&gt;&lt;a href=&#34;#cb22-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb22-21&#34;&gt;&lt;a href=&#34;#cb22-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-22&#34;&gt;&lt;a href=&#34;#cb22-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim;&lt;span class=&#34;co&#34;&gt;//代表多项式运算时的界&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-23&#34;&gt;&lt;a href=&#34;#cb22-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb22-24&#34;&gt;&lt;a href=&#34;#cb22-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B) {&lt;/span&gt;
&lt;span id=&#34;cb22-25&#34;&gt;&lt;a href=&#34;#cb22-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], b[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb22-26&#34;&gt;&lt;a href=&#34;#cb22-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(a, &amp;amp;A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], A.size());&lt;/span&gt;
&lt;span id=&#34;cb22-27&#34;&gt;&lt;a href=&#34;#cb22-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(b, &amp;amp;B[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], B.size());&lt;/span&gt;
&lt;span id=&#34;cb22-28&#34;&gt;&lt;a href=&#34;#cb22-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C; C.resize(min(lim, (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(A.size() + B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)));&lt;/span&gt;
&lt;span id=&#34;cb22-29&#34;&gt;&lt;a href=&#34;#cb22-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (n = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; n &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)(A.size() + B.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); n &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb22-30&#34;&gt;&lt;a href=&#34;#cb22-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(a, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n), NTT(b, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb22-31&#34;&gt;&lt;a href=&#34;#cb22-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    mul(a, b, n), NTT(a, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb22-32&#34;&gt;&lt;a href=&#34;#cb22-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(&amp;amp;C[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], a, C.size());&lt;/span&gt;
&lt;span id=&#34;cb22-33&#34;&gt;&lt;a href=&#34;#cb22-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(a, n), clr(b, n);&lt;/span&gt;
&lt;span id=&#34;cb22-34&#34;&gt;&lt;a href=&#34;#cb22-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb22-35&#34;&gt;&lt;a href=&#34;#cb22-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式乘法逆&#34;&gt;多项式乘法逆&lt;/h2&gt;
&lt;h3 id=&#34;定义&#34;&gt;定义&lt;/h3&gt;
&lt;p&gt;当两个多项式 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 在每一项系数模 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 时有 &lt;span class=&#34;math inline&#34;&gt;\(F(x)*G(x)\equiv 1\pmod{x^n}\)&lt;/span&gt; 时，称 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 与 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 互为乘法逆元。此处 &lt;span class=&#34;math inline&#34;&gt;\(\pmod{x^n}\)&lt;/span&gt; 代表次数高于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的项都不考虑。&lt;/p&gt;
&lt;p&gt;需要的前置知识：NTT。&lt;/p&gt;
&lt;h3 id=&#34;求法&#34;&gt;求法&lt;/h3&gt;
&lt;p&gt;考虑倍增。假设我们要求满足 &lt;span class=&#34;math inline&#34;&gt;\(F(x)*G(x)\equiv 1\pmod{x^k}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt;，并且已经求出了满足 &lt;span class=&#34;math inline&#34;&gt;\(F(x)*G&amp;#39;(x)\equiv1\pmod{x^{\lceil\frac x 2\rceil}}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(G&amp;#39;(x)\)&lt;/span&gt;。那么我们由 &lt;span class=&#34;math display&#34;&gt;\[
F(x)*G&amp;#39;(x)\equiv1\pmod{x^{\lceil\frac x 2\rceil}}
\]&lt;/span&gt; 必然可以推出 &lt;span class=&#34;math display&#34;&gt;\[
F(x)*G(x)\equiv1\pmod{x^{\lceil\frac x 2\rceil}}
\]&lt;/span&gt; 那么 &lt;span class=&#34;math display&#34;&gt;\[
G(x) \equiv G&amp;#39;(x)\pmod{x^{\lceil\frac x 2\rceil}}
\]&lt;/span&gt; 作差， &lt;span class=&#34;math display&#34;&gt;\[
G(x) - G&amp;#39;(x)\equiv 0\pmod{x^{\lceil\frac x2\rceil}}
\]&lt;/span&gt; 将两边同时平方，不难发现界会从 &lt;span class=&#34;math inline&#34;&gt;\(\lceil\frac n2\rceil\)&lt;/span&gt; 变为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
G^2(x) - 2G(x)G&amp;#39;(x) + G&amp;#39;^2(x)\equiv 0\pmod{x^n}
\]&lt;/span&gt; 现在要求的是 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt;，而我们发现 &lt;span class=&#34;math inline&#34;&gt;\(G^2(x)\)&lt;/span&gt; 不好处理，怎么办？同时乘以 &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; 就可以消掉一个 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
G(x) - 2G&amp;#39;(x) + G&amp;#39;^2(x)F(x)\equiv 0\pmod{x^n}
\]&lt;/span&gt; 所以我们得到了 &lt;span class=&#34;math display&#34;&gt;\[
G(x)\equiv 2G&amp;#39;(x) - G&amp;#39;^2(x)F(x)\pmod{x^n}
\]&lt;/span&gt; 根据这个，我们就可以从 &lt;span class=&#34;math inline&#34;&gt;\(G&amp;#39;(x)\)&lt;/span&gt; 推出 &lt;span class=&#34;math inline&#34;&gt;\(G(x)\)&lt;/span&gt; 的值出来了。从上往下递归求解，到常数项的时候直接费马小定理求逆元然后一步步回溯上去。不难发现复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(T(n) = T(n/2) + O(n\log n)\)&lt;/span&gt;，由主定理知总复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-1&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;递归版多项式求逆，套用上面的板子：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyInv(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, Poly &amp;amp;B, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-3&#34;&gt;&lt;a href=&#34;#cb23-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) B.push_back(qPow(A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]));&lt;/span&gt;
&lt;span id=&#34;cb23-4&#34;&gt;&lt;a href=&#34;#cb23-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb23-5&#34;&gt;&lt;a href=&#34;#cb23-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyInv(A, B, --n);&lt;/span&gt;
&lt;span id=&#34;cb23-6&#34;&gt;&lt;a href=&#34;#cb23-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sav = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-7&#34;&gt;&lt;a href=&#34;#cb23-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) sav = (sav + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * B[i] * A[n - i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb23-8&#34;&gt;&lt;a href=&#34;#cb23-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * sav * qPow(mod - A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]) % mod);&lt;/span&gt;
&lt;span id=&#34;cb23-9&#34;&gt;&lt;a href=&#34;#cb23-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb23-10&#34;&gt;&lt;a href=&#34;#cb23-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyInv(A, B, n &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb23-11&#34;&gt;&lt;a href=&#34;#cb23-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Poly sA; sA.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb23-12&#34;&gt;&lt;a href=&#34;#cb23-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        cpy(&amp;amp;sA[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], &amp;amp;A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;], n);&lt;/span&gt;
&lt;span id=&#34;cb23-13&#34;&gt;&lt;a href=&#34;#cb23-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * B - B * B * sA;&lt;/span&gt;
&lt;span id=&#34;cb23-14&#34;&gt;&lt;a href=&#34;#cb23-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb23-15&#34;&gt;&lt;a href=&#34;#cb23-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb23-16&#34;&gt;&lt;a href=&#34;#cb23-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb23-17&#34;&gt;&lt;a href=&#34;#cb23-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb23-18&#34;&gt;&lt;a href=&#34;#cb23-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyInv(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb23-19&#34;&gt;&lt;a href=&#34;#cb23-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C; polyInv(A, C, A.size());&lt;/span&gt;
&lt;span id=&#34;cb23-20&#34;&gt;&lt;a href=&#34;#cb23-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb23-21&#34;&gt;&lt;a href=&#34;#cb23-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中把 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为奇数的情况进行了特判优化，调用就直接对下面的 &lt;code&gt;polyInv&lt;/code&gt; 函数传入一个 &lt;code&gt;vector&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2 id=&#34;多项式的导数积分复合&#34;&gt;多项式的导数/积分/复合&lt;/h2&gt;
&lt;p&gt;回顾一下一些基础的导数公式： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(x) = e^x&amp;amp;\implies f&amp;#39;(x) = e^x\\
f(x) = \ln x&amp;amp;\implies f&amp;#39;(x) = \frac1x\\
f(x) = ax^k&amp;amp;\implies f&amp;#39;(x) = akx^{k - 1}\\
(f(x)\pm g(x))&amp;#39;&amp;amp;= f&amp;#39;(x)\pm g&amp;#39;(x)\\
(f(g(x)))&amp;#39; &amp;amp;=f&amp;#39;(g(x))\times g&amp;#39;(x)
\end{aligned}
\]&lt;/span&gt; 我们在这里定义一下多项式的求导： &lt;span class=&#34;math display&#34;&gt;\[
f(x) = \sum_{i = 0}^na_ix^i\implies f&amp;#39;(x) = \sum_{i = 0}^{n - 1}(i + 1)a_{i + 1}x^i
\]&lt;/span&gt; 积分为求导的逆运算： &lt;span class=&#34;math display&#34;&gt;\[
f(x) = \sum_{i = 0}^na_ix_i\implies\int f(x) \mathrm dx= \sum_{i = 1}^{n + 1}\frac{a_{i - 1}x^i}{i}
\]&lt;/span&gt; 所以多项式求导和求积分的代码就很容易写出来了，当然需要一开始线性预处理一下逆元。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; inv[maxn];&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; initInv() {&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    inv[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, lim) inv[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * inv[mod % i] * (mod - mod / i) % mod;&lt;/span&gt;
&lt;span id=&#34;cb24-5&#34;&gt;&lt;a href=&#34;#cb24-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-6&#34;&gt;&lt;a href=&#34;#cb24-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb24-7&#34;&gt;&lt;a href=&#34;#cb24-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-8&#34;&gt;&lt;a href=&#34;#cb24-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly deri(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb24-9&#34;&gt;&lt;a href=&#34;#cb24-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A;&lt;/span&gt;
&lt;span id=&#34;cb24-10&#34;&gt;&lt;a href=&#34;#cb24-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)C.size(); ++i) C[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * C[i] * i % mod;&lt;/span&gt;
&lt;span id=&#34;cb24-11&#34;&gt;&lt;a href=&#34;#cb24-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!C.empty()) C.pop_back();&lt;/span&gt;
&lt;span id=&#34;cb24-12&#34;&gt;&lt;a href=&#34;#cb24-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb24-13&#34;&gt;&lt;a href=&#34;#cb24-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb24-14&#34;&gt;&lt;a href=&#34;#cb24-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb24-15&#34;&gt;&lt;a href=&#34;#cb24-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly ints(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb24-16&#34;&gt;&lt;a href=&#34;#cb24-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C = A;&lt;/span&gt;
&lt;span id=&#34;cb24-17&#34;&gt;&lt;a href=&#34;#cb24-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;)C.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; --i)&lt;/span&gt;
&lt;span id=&#34;cb24-18&#34;&gt;&lt;a href=&#34;#cb24-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        C[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * C[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * inv[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb24-19&#34;&gt;&lt;a href=&#34;#cb24-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!C.empty()) C[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb24-20&#34;&gt;&lt;a href=&#34;#cb24-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb24-21&#34;&gt;&lt;a href=&#34;#cb24-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要非常注意传进来的多项式为空的情况，对空 &lt;code&gt;vector&lt;/code&gt; 进行调用 &lt;code&gt;pop_back()&lt;/code&gt; 和访问元素会直接 RE，需要注意。&lt;/p&gt;
&lt;p&gt;定义多项式的复合：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(g(x)) = \sum_{i = 0}f_i(g(x))^i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;应该比较好理解，直接把 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 代入即可。后面学习牛顿迭代的时候需要用到。&lt;/p&gt;
&lt;h2 id=&#34;牛顿迭代法&#34;&gt;牛顿迭代法&lt;/h2&gt;
&lt;p&gt;这节内容相当重要，是后面学习开根和 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 的基础，建议掌握好。&lt;/p&gt;
&lt;h3 id=&#34;牛迭求函数零点&#34;&gt;牛迭求函数零点&lt;/h3&gt;
&lt;p&gt;首先各位如果学过旧人教版选修 2-2 的话应该都有看到过牛顿迭代。&lt;/p&gt;
&lt;p&gt;牛顿迭代是一种求函数零点的方法。设初始近似值为 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt;，则我们有这点的切线方程 &lt;span class=&#34;math display&#34;&gt;\[
y = f&amp;#39;(x_0)(x - x_0) + f(x_0)
\]&lt;/span&gt; 令 &lt;span class=&#34;math inline&#34;&gt;\(y = 0\)&lt;/span&gt;，得 &lt;span class=&#34;math inline&#34;&gt;\(x = x_0 - \dfrac{f(x_0)}{f&amp;#39;(x_0)}\)&lt;/span&gt;。这样子我们就可以一直迭代下去，令 &lt;span class=&#34;math inline&#34;&gt;\(x_0\leftarrow x\)&lt;/span&gt;，就可以在很短的时间内很接近地得到 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的零点。&lt;/p&gt;
&lt;h3 id=&#34;泰勒展开&#34;&gt;泰勒展开&lt;/h3&gt;
&lt;p&gt;简单扯一扯吧，实际上就是使用多项式函数来拟合 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 啊 &lt;span class=&#34;math inline&#34;&gt;\(\sin\)&lt;/span&gt; 啊这类的函数（因为多项式真的方便啊），其原理就是在要求的函数 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 上找一个点 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt;，构造一个多项式 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 使得这个多项式在 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 处的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 阶导数都相等，随着 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 越来越大，拟合的效果就越来越好。&lt;/p&gt;
&lt;p&gt;泰勒展开的公式是长这样的：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) = \frac{f(x_0)}{0!}(x - x_0)^0 + \frac{f&amp;#39;(x_0)}{1!}(x - x_0)^1 + \frac{f&amp;#39;&amp;#39;(x_0)}{2!}(x - x_0)^2 + \cdots + \frac{f^{(n)}(x_0)}{n!}(x - x_0)^n + R_n(x)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;或者写成&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(x) \approx \sum_{i = 0}^n\frac{f^{(i)}(x_0)}{i!}(x - x_0)^i
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(f^{(i)}(x_0)\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; 处的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 阶导数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x_0 = 0\)&lt;/span&gt; 时得到的级数就是麦克劳林级数，下面的东西需要牢记：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\mathrm e^x &amp;amp;= \sum_{k = 0}^\infty\frac{x^k}{k!}\\
\sin x &amp;amp;= x - \frac{x^3}{3!} + \frac{x^5}{5!} - \cdots + (-1)^n\frac{x^{2n - 1}}{(2n - 1)!} + \cdots\\
&amp;amp;= \sum_{i = 0}^\infty(-1)^i\frac{x^{2i - 1}}{(2i - 1)!}\\
\cos x &amp;amp;= 1 - \frac{x^2}{2!} + \frac{x^4}{4!} - \cdots + (-1)^n\frac{x^{2n}}{(2n)!}+\cdots\\
&amp;amp;= \sum_{i = 0}^\infty(-1)^i\frac{x^{2i}}{(2i)!}\\
\ln(1 + x) &amp;amp;= \sum_{i = 1}^\infty(-1)^{i - 1}\frac{x^i}{i}\\
\ln(1 - x) &amp;amp;= -\sum_{i = 1}^\infty\frac{x^i}{i}
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;多项式的 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 是如是定义的： &lt;span class=&#34;math display&#34;&gt;\[
\ln(1 - f(x)) = -\sum_{i = 1}^{+\infty}\frac{f^i(x)}{i}\\\ln(1 + f(x)) = \sum_{i = 1}^{+\infty}\frac{(-1)^{i - 1}f^i(x)}{i}
\]&lt;/span&gt; 多项式的 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 则是这样： &lt;span class=&#34;math display&#34;&gt;\[
\exp f(x) = e^{f(x)}=\sum_{i = 0}^{+\infty}\frac{f^i(x)}{i!}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;多项式牛迭&#34;&gt;多项式牛迭&lt;/h3&gt;
&lt;p&gt;现在要解决的是给定 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;，求满足 &lt;span class=&#34;math inline&#34;&gt;\(g(f(x))\equiv 0\pmod{x^n}\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;（模 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 意义下）。&lt;/p&gt;
&lt;p&gt;考虑倍增。&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 的时候，&lt;span class=&#34;math inline&#34;&gt;\([x^0]g(f(x)) = 0\)&lt;/span&gt; 的解要单独的算。&lt;/p&gt;
&lt;p&gt;假设已经求出了模 &lt;span class=&#34;math inline&#34;&gt;\(x^{\left\lceil\frac n 2\right\rceil}\)&lt;/span&gt; 意义下的解 &lt;span class=&#34;math inline&#34;&gt;\(f_0(x)\)&lt;/span&gt;，要求模 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(g(f(x))\)&lt;/span&gt; 在 &lt;span class=&#34;math inline&#34;&gt;\(f_0(x)\)&lt;/span&gt; 处泰勒展开，有： &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 0}^{+\infty}\frac{g^{(i)}(f_0(x))}{i!}(f(x) - f_0(x))^i\equiv 0\pmod{x^n}
\]&lt;/span&gt; 因为 &lt;span class=&#34;math inline&#34;&gt;\(f(x) - f_0(x)\)&lt;/span&gt; 的最低非零项次数最低为 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\frac n 2\right\rceil\)&lt;/span&gt;，所以当 &lt;span class=&#34;math inline&#34;&gt;\(i\ge 2\)&lt;/span&gt; 时有 &lt;span class=&#34;math display&#34;&gt;\[
(f(x) - f_0(x))^i\equiv 0\pmod{x^n}
\]&lt;/span&gt; 所以泰勒展开的结果为 &lt;span class=&#34;math display&#34;&gt;\[
g(f_0(x)) + g&amp;#39;(f_0(x))(f(x) - f_0(x))\equiv 0\pmod{x^n}
\]&lt;/span&gt; 化简下来就是 &lt;span class=&#34;math display&#34;&gt;\[
f(x)\equiv f_0(x) - \frac{g(f_0(x))}{g&amp;#39;(f_0(x))}\pmod{x^n}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;应用&#34;&gt;应用&lt;/h3&gt;
&lt;p&gt;这个形式可能暂时看不出来有什么用，但是等一下涉及到 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 和多项式开根等操作时其就会发挥大作用。&lt;/p&gt;
&lt;h2 id=&#34;多项式对指开根&#34;&gt;多项式对指开根&lt;/h2&gt;
&lt;p&gt;建议先了解清楚高中数学必修 1 中的对数函数/指数函数/幂函数以及一些最基础的微积分知识（基础导数公式，泰勒展开）&lt;/p&gt;
&lt;h3 id=&#34;多项式-ln&#34;&gt;多项式 ln&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-1&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\equiv \ln A(x) \pmod{x^n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;由上文多项式对数的定义，&lt;strong&gt;多项式的对数仅在常数项为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 时才有意义。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;求法-1&#34;&gt;求法&lt;/h4&gt;
&lt;p&gt;不管那么多了，直接求导再积分积回去就可以了：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
(\ln A(x))&amp;#39; &amp;amp;= \frac{A&amp;#39;(x)}{A(x)}\\
\ln A(x) &amp;amp;= \int \frac{A&amp;#39;(x)}{A(x)}\mathrm{d}x
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;均在 &lt;span class=&#34;math inline&#34;&gt;\(\pmod{x^n}\)&lt;/span&gt; 意义下进行。所以我们只需求导，求逆，乘起来再积个分就可以了。&lt;/p&gt;
&lt;h4 id=&#34;实现-2&#34;&gt;实现&lt;/h4&gt;
&lt;p&gt;就一行，超级短。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyLn(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb25-2&#34;&gt;&lt;a href=&#34;#cb25-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ints(deri(A) * polyInv(A));&lt;/span&gt;
&lt;span id=&#34;cb25-3&#34;&gt;&lt;a href=&#34;#cb25-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4725&#34;&gt;洛谷 4725&lt;/a&gt; 的实现：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb26-6&#34;&gt;&lt;a href=&#34;#cb26-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lim = n; initInv();&lt;/span&gt;
&lt;span id=&#34;cb26-7&#34;&gt;&lt;a href=&#34;#cb26-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb26-8&#34;&gt;&lt;a href=&#34;#cb26-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb26-9&#34;&gt;&lt;a href=&#34;#cb26-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = polyLn(f);&lt;/span&gt;
&lt;span id=&#34;cb26-10&#34;&gt;&lt;a href=&#34;#cb26-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f);&lt;/span&gt;
&lt;span id=&#34;cb26-11&#34;&gt;&lt;a href=&#34;#cb26-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb26-12&#34;&gt;&lt;a href=&#34;#cb26-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;多项式-exp&#34;&gt;多项式 exp&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-2&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\equiv \exp A(x)\pmod{x^n}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多项式的指数函数仅在常数项为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 时才有意义，&lt;/strong&gt;否则常数项将不收敛。&lt;/p&gt;
&lt;h4 id=&#34;求法-1-牛顿迭代&#34;&gt;求法 1 牛顿迭代&lt;/h4&gt;
&lt;p&gt;考虑使用牛顿迭代。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}B(x)&amp;amp;\equiv \exp A(x)&amp;amp;\pmod{x^n}\\\ln B(x) - A(x)&amp;amp;\equiv 0&amp;amp;\pmod{x^n}\\\end{aligned}
\]&lt;/span&gt; 现在我们把 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt; 看成一个常数，&lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 看成一个变量，则我们就是要求这个勾八东西的零点。令 &lt;span class=&#34;math inline&#34;&gt;\(G(B(x)) \equiv \ln B(x) - A(x)\pmod{x^n}\)&lt;/span&gt;，这个东西求导是 &lt;span class=&#34;math inline&#34;&gt;\(G&amp;#39;(B(x))\equiv \dfrac{1}{B(x)}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;套用一下上面的牛迭式子，假设我们已经搞定了模 &lt;span class=&#34;math inline&#34;&gt;\(x^{\left\lceil\frac n 2\right\rceil}\)&lt;/span&gt; 意义下的解 &lt;span class=&#34;math inline&#34;&gt;\(B_0(x)\)&lt;/span&gt;，要求模 &lt;span class=&#34;math inline&#34;&gt;\(x^n\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt;。然后就有了 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}B(x) &amp;amp;\equiv B_0(x) - \frac{G(B_0(x))}{G&amp;#39;(B_0(x))}\\&amp;amp;\equiv B_0(x) - (\ln B_0(x) - A(x))B_0(x)\\&amp;amp;\equiv B_0(x)(1 - \ln B_0(x) + A(x))\pmod{x^n}\end{aligned}
\]&lt;/span&gt; 这样子我们就成功的把递推式写出来了。&lt;/p&gt;
&lt;h4 id=&#34;实现-1-1&#34;&gt;实现 1&lt;/h4&gt;
&lt;p&gt;这种递归写起方便的就写递归好一点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyExp(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, Poly &amp;amp;B, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!n) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) B.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (n &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyExp(A, B, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;); n -= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-6&#34;&gt;&lt;a href=&#34;#cb27-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; sav = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-7&#34;&gt;&lt;a href=&#34;#cb27-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n) sav = (sav + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * (i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * A[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod * B[n - i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb27-8&#34;&gt;&lt;a href=&#34;#cb27-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * sav * inv[n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod);&lt;/span&gt;
&lt;span id=&#34;cb27-9&#34;&gt;&lt;a href=&#34;#cb27-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb27-10&#34;&gt;&lt;a href=&#34;#cb27-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        polyExp(A, B, n / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb27-11&#34;&gt;&lt;a href=&#34;#cb27-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Poly lnB = B;&lt;/span&gt;
&lt;span id=&#34;cb27-12&#34;&gt;&lt;a href=&#34;#cb27-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        lnB.resize(n); lnB = polyLn(lnB);&lt;/span&gt;
&lt;span id=&#34;cb27-13&#34;&gt;&lt;a href=&#34;#cb27-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        VEC(i, lnB) lnB[i] = (mod + A[i] - lnB[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb27-14&#34;&gt;&lt;a href=&#34;#cb27-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++lnB[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb27-15&#34;&gt;&lt;a href=&#34;#cb27-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B = B * lnB;&lt;/span&gt;
&lt;span id=&#34;cb27-16&#34;&gt;&lt;a href=&#34;#cb27-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb27-17&#34;&gt;&lt;a href=&#34;#cb27-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb27-18&#34;&gt;&lt;a href=&#34;#cb27-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb27-19&#34;&gt;&lt;a href=&#34;#cb27-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb27-20&#34;&gt;&lt;a href=&#34;#cb27-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-21&#34;&gt;&lt;a href=&#34;#cb27-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyExp(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;f) {&lt;/span&gt;
&lt;span id=&#34;cb27-22&#34;&gt;&lt;a href=&#34;#cb27-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly ret;&lt;/span&gt;
&lt;span id=&#34;cb27-23&#34;&gt;&lt;a href=&#34;#cb27-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyExp(f, ret, f.size());&lt;/span&gt;
&lt;span id=&#34;cb27-24&#34;&gt;&lt;a href=&#34;#cb27-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb27-25&#34;&gt;&lt;a href=&#34;#cb27-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是需要注意的是，这个多项式 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 的常数还是比较大的，需要尽量减少其调用。&lt;/p&gt;
&lt;h4 id=&#34;求法-2-分治-fft&#34;&gt;求法 2 分治 FFT&lt;/h4&gt;
&lt;p&gt;分治 FFT 可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 的复杂度下以极优的常数（比一个 &lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt; 快）求出结果。暂时不想写，咕咕咕。&lt;/p&gt;
&lt;h3 id=&#34;多项式开根&#34;&gt;多项式开根&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-3&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定一个多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(B^2(x)\equiv A(x)\pmod{x^n}\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;求解&#34;&gt;求解&lt;/h4&gt;
&lt;p&gt;考虑使用牛顿迭代，令 &lt;span class=&#34;math inline&#34;&gt;\(f(B(x)) = B^2(x) - A(x)\pmod{x^n}\)&lt;/span&gt;。则 &lt;span class=&#34;math inline&#34;&gt;\(f&amp;#39;(B(x)) = 2B(x)\)&lt;/span&gt;，套牛迭式子： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}B(x) &amp;amp;\equiv B_0(x) - \frac{f(B_0(x))}{f&amp;#39;(B_0(x))}\\&amp;amp;\equiv B_0(x) - \frac{B_0^2(x) - A(x)}{2B_0(x)}\\&amp;amp;\equiv \frac{B_0^2(x) + A(x)}{2B_0(x)}\end{aligned}
\]&lt;/span&gt; 时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意一下如果常数项不为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 的话是需要二次剩余来求出答案的常数项的。&lt;/p&gt;
&lt;h4 id=&#34;实现-3&#34;&gt;实现&lt;/h4&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polySqrt(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, Poly &amp;amp;B, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (m == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        B.push_back(QuadResidue::cipolla(A[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]));&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb28-6&#34;&gt;&lt;a href=&#34;#cb28-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polySqrt(A, B, (m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb28-7&#34;&gt;&lt;a href=&#34;#cb28-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    B.resize(m);&lt;/span&gt;
&lt;span id=&#34;cb28-8&#34;&gt;&lt;a href=&#34;#cb28-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly invB = polyInv(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * B), sA(A.begin(), A.begin() + m);&lt;/span&gt;
&lt;span id=&#34;cb28-9&#34;&gt;&lt;a href=&#34;#cb28-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    B = qPow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) * B + invB * sA;&lt;/span&gt;
&lt;span id=&#34;cb28-10&#34;&gt;&lt;a href=&#34;#cb28-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb28-11&#34;&gt;&lt;a href=&#34;#cb28-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb28-12&#34;&gt;&lt;a href=&#34;#cb28-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-13&#34;&gt;&lt;a href=&#34;#cb28-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polySqrt(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb28-14&#34;&gt;&lt;a href=&#34;#cb28-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly C; polySqrt(A, C, A.size());&lt;/span&gt;
&lt;span id=&#34;cb28-15&#34;&gt;&lt;a href=&#34;#cb28-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C;&lt;/span&gt;
&lt;span id=&#34;cb28-16&#34;&gt;&lt;a href=&#34;#cb28-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用-1-多项式快速幂&#34;&gt;应用 1 多项式快速幂&lt;/h3&gt;
&lt;p&gt;分两种情况。第一种 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x) = 1\)&lt;/span&gt;，此时我们不难发现 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}g(x) &amp;amp;\equiv f^k(x)\\\ln g(x) &amp;amp;\equiv k\ln f(x)\\g(x) &amp;amp;\equiv \exp(k\ln f(x))\pmod{x^n}\end{aligned}
\]&lt;/span&gt; 然后就一个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，乘上 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，再 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 一下，这题就做完了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb29&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb29-1&#34;&gt;&lt;a href=&#34;#cb29-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb29-2&#34;&gt;&lt;a href=&#34;#cb29-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k;&lt;/span&gt;
&lt;span id=&#34;cb29-3&#34;&gt;&lt;a href=&#34;#cb29-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb29-4&#34;&gt;&lt;a href=&#34;#cb29-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-5&#34;&gt;&lt;a href=&#34;#cb29-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb29-6&#34;&gt;&lt;a href=&#34;#cb29-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(s); f.resize(lim = n);&lt;/span&gt;
&lt;span id=&#34;cb29-7&#34;&gt;&lt;a href=&#34;#cb29-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; s[i]; ++i) k = (&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k + s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb29-8&#34;&gt;&lt;a href=&#34;#cb29-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb29-9&#34;&gt;&lt;a href=&#34;#cb29-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initInv();&lt;/span&gt;
&lt;span id=&#34;cb29-10&#34;&gt;&lt;a href=&#34;#cb29-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = polyExp(k * polyLn(f));&lt;/span&gt;
&lt;span id=&#34;cb29-11&#34;&gt;&lt;a href=&#34;#cb29-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f);&lt;/span&gt;
&lt;span id=&#34;cb29-12&#34;&gt;&lt;a href=&#34;#cb29-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb29-13&#34;&gt;&lt;a href=&#34;#cb29-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二种情况 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x) \not= 1\)&lt;/span&gt;，此时我们应该做的，就是创造条件强上。&lt;/p&gt;
&lt;p&gt;怎么上呢？当 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x)\not= 0\)&lt;/span&gt; 时，我们就直接： &lt;span class=&#34;math display&#34;&gt;\[
f^k(x)\equiv \left(\frac{f(x)}{[x^0]f(x)} \right)^k\times \left([x^0]f(x)\right)^k
\]&lt;/span&gt; 当 &lt;span class=&#34;math inline&#34;&gt;\([x^0]f(x) = 0\)&lt;/span&gt; 时，我们就把多项式平移一下，然后强行按上面上，最后平移回去就可以了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb30&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb30-1&#34;&gt;&lt;a href=&#34;#cb30-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb30-2&#34;&gt;&lt;a href=&#34;#cb30-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, k2;&lt;/span&gt;
&lt;span id=&#34;cb30-3&#34;&gt;&lt;a href=&#34;#cb30-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb30-4&#34;&gt;&lt;a href=&#34;#cb30-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-5&#34;&gt;&lt;a href=&#34;#cb30-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb30-6&#34;&gt;&lt;a href=&#34;#cb30-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(s);&lt;/span&gt;
&lt;span id=&#34;cb30-7&#34;&gt;&lt;a href=&#34;#cb30-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(n);&lt;/span&gt;
&lt;span id=&#34;cb30-8&#34;&gt;&lt;a href=&#34;#cb30-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb30-9&#34;&gt;&lt;a href=&#34;#cb30-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-10&#34;&gt;&lt;a href=&#34;#cb30-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-11&#34;&gt;&lt;a href=&#34;#cb30-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (f[p] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; p &amp;lt; n) ++p;&lt;/span&gt;
&lt;span id=&#34;cb30-12&#34;&gt;&lt;a href=&#34;#cb30-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-13&#34;&gt;&lt;a href=&#34;#cb30-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; s[i]; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb30-14&#34;&gt;&lt;a href=&#34;#cb30-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        k = (&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k + s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) % mod;&lt;/span&gt;
&lt;span id=&#34;cb30-15&#34;&gt;&lt;a href=&#34;#cb30-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        k2 = (&lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k2 + s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) % (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb30-16&#34;&gt;&lt;a href=&#34;#cb30-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * k * p &amp;gt; n) {&lt;/span&gt;
&lt;span id=&#34;cb30-17&#34;&gt;&lt;a href=&#34;#cb30-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb30-18&#34;&gt;&lt;a href=&#34;#cb30-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-19&#34;&gt;&lt;a href=&#34;#cb30-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb30-20&#34;&gt;&lt;a href=&#34;#cb30-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb30-21&#34;&gt;&lt;a href=&#34;#cb30-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-22&#34;&gt;&lt;a href=&#34;#cb30-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lim = n = n - p * k, initInv();&lt;/span&gt;
&lt;span id=&#34;cb30-23&#34;&gt;&lt;a href=&#34;#cb30-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb30-24&#34;&gt;&lt;a href=&#34;#cb30-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = qPow(f[p], MOD - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;), v = qPow(f[p], k2);&lt;/span&gt;
&lt;span id=&#34;cb30-25&#34;&gt;&lt;a href=&#34;#cb30-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i + p] * u % mod;&lt;/span&gt;
&lt;span id=&#34;cb30-26&#34;&gt;&lt;a href=&#34;#cb30-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(&amp;amp;f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + n, p * k);&lt;/span&gt;
&lt;span id=&#34;cb30-27&#34;&gt;&lt;a href=&#34;#cb30-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = v * polyExp(k * polyLn(f));&lt;/span&gt;
&lt;span id=&#34;cb30-28&#34;&gt;&lt;a href=&#34;#cb30-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, p * k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb30-29&#34;&gt;&lt;a href=&#34;#cb30-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(f);&lt;/span&gt;
&lt;span id=&#34;cb30-30&#34;&gt;&lt;a href=&#34;#cb30-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb30-31&#34;&gt;&lt;a href=&#34;#cb30-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用-2-ln-的组合意义&#34;&gt;应用 2 ln 的组合意义&lt;/h3&gt;
&lt;p&gt;看例题：&lt;a href=&#34;https://www.luogu.com.cn/problem/P4841&#34;&gt;洛谷 P4841 [集训队作业2013]城市规划&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;求 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的有标号无向连通图的个数 &lt;span class=&#34;math inline&#34;&gt;\(\bmod 1004535809\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;p&gt;可以先不考虑标号，最后得到的答案乘以 &lt;span class=&#34;math inline&#34;&gt;\(n!\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;然后不考虑联通的话，&lt;span class=&#34;math inline&#34;&gt;\(g_n = 2^{\binom n 2}\)&lt;/span&gt;，即考虑每条边选还是不选，设联通的情况的方案数为 &lt;span class=&#34;math inline&#34;&gt;\(f_n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;构造一下联通的 EGF：&lt;span class=&#34;math inline&#34;&gt;\(F(x) = \displaystyle\sum_{i = 0}^\infty f_i\frac{x^i}{i!}\)&lt;/span&gt;，不连通的类似：&lt;span class=&#34;math inline&#34;&gt;\(G(x) = \displaystyle\sum_{i = 0}^\infty g_i\frac{x^i}{i!}\)&lt;/span&gt;。根据 EGF 的性质发现 &lt;span class=&#34;math inline&#34;&gt;\(G(x) = \mathrm e^{F(x)}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;所以求个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;配合封装过的 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 是这样的：（upd：下面的代码未更新新的封装，请看准了食用）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb31&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb31-1&#34;&gt;&lt;a href=&#34;#cb31-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyln(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m)&lt;/span&gt;
&lt;span id=&#34;cb31-2&#34;&gt;&lt;a href=&#34;#cb31-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb31-3&#34;&gt;&lt;a href=&#34;#cb31-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; invf[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb31-4&#34;&gt;&lt;a href=&#34;#cb31-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-5&#34;&gt;&lt;a href=&#34;#cb31-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt; m &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-6&#34;&gt;&lt;a href=&#34;#cb31-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initinv(lim);&lt;/span&gt;
&lt;span id=&#34;cb31-7&#34;&gt;&lt;a href=&#34;#cb31-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cpy(invf, f, m);&lt;/span&gt;
&lt;span id=&#34;cb31-8&#34;&gt;&lt;a href=&#34;#cb31-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    invpoly(invf, m);&lt;/span&gt;
&lt;span id=&#34;cb31-9&#34;&gt;&lt;a href=&#34;#cb31-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    derivate(f, m);&lt;/span&gt;
&lt;span id=&#34;cb31-10&#34;&gt;&lt;a href=&#34;#cb31-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(invf, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb31-11&#34;&gt;&lt;a href=&#34;#cb31-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb31-12&#34;&gt;&lt;a href=&#34;#cb31-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[i] * invf[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb31-13&#34;&gt;&lt;a href=&#34;#cb31-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb31-14&#34;&gt;&lt;a href=&#34;#cb31-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    intergrate(f, m);&lt;/span&gt;
&lt;span id=&#34;cb31-15&#34;&gt;&lt;a href=&#34;#cb31-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(invf, lim);&lt;/span&gt;
&lt;span id=&#34;cb31-16&#34;&gt;&lt;a href=&#34;#cb31-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    clr(f + m, lim - m);&lt;/span&gt;
&lt;span id=&#34;cb31-17&#34;&gt;&lt;a href=&#34;#cb31-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb31-18&#34;&gt;&lt;a href=&#34;#cb31-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb31-19&#34;&gt;&lt;a href=&#34;#cb31-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], invf[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb31-20&#34;&gt;&lt;a href=&#34;#cb31-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fact[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb31-21&#34;&gt;&lt;a href=&#34;#cb31-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb31-22&#34;&gt;&lt;a href=&#34;#cb31-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb31-23&#34;&gt;&lt;a href=&#34;#cb31-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb31-24&#34;&gt;&lt;a href=&#34;#cb31-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb31-25&#34;&gt;&lt;a href=&#34;#cb31-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb31-26&#34;&gt;&lt;a href=&#34;#cb31-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = readInt();&lt;/span&gt;
&lt;span id=&#34;cb31-27&#34;&gt;&lt;a href=&#34;#cb31-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    fact[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-28&#34;&gt;&lt;a href=&#34;#cb31-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb31-29&#34;&gt;&lt;a href=&#34;#cb31-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        fact[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * fact[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i % mod,&lt;/span&gt;
&lt;span id=&#34;cb31-30&#34;&gt;&lt;a href=&#34;#cb31-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * qpow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * i * (i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) % mod * qpow(fact[i]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb31-31&#34;&gt;&lt;a href=&#34;#cb31-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyln(f, n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb31-32&#34;&gt;&lt;a href=&#34;#cb31-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * f[n] * fact[n] % mod);&lt;/span&gt;
&lt;span id=&#34;cb31-33&#34;&gt;&lt;a href=&#34;#cb31-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb31-34&#34;&gt;&lt;a href=&#34;#cb31-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;应用-3-配合生成函数推式子&#34;&gt;应用 3 配合生成函数推式子&lt;/h3&gt;
&lt;p&gt;请看 &lt;a href=&#34;https://www.luogu.com.cn/problem/P4389&#34;&gt;P4389 付公主的背包&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;设容量为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的物品的个数为 &lt;span class=&#34;math inline&#34;&gt;\(k_i\)&lt;/span&gt; 个，则其生成函数为 &lt;span class=&#34;math display&#34;&gt;\[
A_i(x) =  \left(\sum_{j = 0}^{+\infty}x^{ji}\right)^{k_i} =\left(\frac{1}{1 - x^i}\right)^{k_i}
\]&lt;/span&gt; 所以我们要求的就是 &lt;span class=&#34;math display&#34;&gt;\[
f(x) = \prod_{i = 1}^n A_i(x)
\]&lt;/span&gt; 的每项系数。暴力乘起来是 &lt;span class=&#34;math inline&#34;&gt;\(O(nm\log n)\)&lt;/span&gt; 的，无法通过本题。&lt;/p&gt;
&lt;p&gt;我们试一下求个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，则我们有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f(x) &amp;amp;= \prod_{i = 1}^nA_i(x)\\
\ln f(x) &amp;amp;= \sum_{i = 1}^n\ln A_i(x)\\
\ln f(x) &amp;amp;= \sum_{i = 1}^nk_i(\ln 1 - \ln(1 - x^i))\\
\ln f(x) &amp;amp;= -\sum_{i = 1}^nk_i\ln(1 - x^i)
\end{aligned}
\]&lt;/span&gt; 然后我们注意到这个 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt; 的形式，回顾一下上面讲过的一个式子： &lt;span class=&#34;math display&#34;&gt;\[
\ln(1 - x) = -\sum_{m = 1}^{+\infty}\frac{x^{m}}{m}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\ln f(x) &amp;amp;= \sum_{i = 1}^nk_i\sum_{j = 1}^{+\infty}\frac{x^{ij}}{j}
\end{aligned}
\]&lt;/span&gt; 然后问题就转化为了求 &lt;span class=&#34;math display&#34;&gt;\[
\exp\left(\sum_{i = 1}^nk_i\sum_{j = 1}^{+\infty}\frac{x^{ij}}{j} \right)
\]&lt;/span&gt; 里面的东西可以 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log m)\)&lt;/span&gt; 算，总时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(m\log m)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb32&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb32-1&#34;&gt;&lt;a href=&#34;#cb32-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, cnt[maxn];&lt;/span&gt;
&lt;span id=&#34;cb32-2&#34;&gt;&lt;a href=&#34;#cb32-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb32-3&#34;&gt;&lt;a href=&#34;#cb32-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-4&#34;&gt;&lt;a href=&#34;#cb32-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb32-5&#34;&gt;&lt;a href=&#34;#cb32-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb32-6&#34;&gt;&lt;a href=&#34;#cb32-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(lim = m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb32-7&#34;&gt;&lt;a href=&#34;#cb32-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initInv();&lt;/span&gt;
&lt;span id=&#34;cb32-8&#34;&gt;&lt;a href=&#34;#cb32-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb32-9&#34;&gt;&lt;a href=&#34;#cb32-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp; read(tmp);&lt;/span&gt;
&lt;span id=&#34;cb32-10&#34;&gt;&lt;a href=&#34;#cb32-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++cnt[tmp];&lt;/span&gt;
&lt;span id=&#34;cb32-11&#34;&gt;&lt;a href=&#34;#cb32-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb32-12&#34;&gt;&lt;a href=&#34;#cb32-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb32-13&#34;&gt;&lt;a href=&#34;#cb32-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (cnt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb32-14&#34;&gt;&lt;a href=&#34;#cb32-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = i; j &amp;lt;= m; j += i) {&lt;/span&gt;
&lt;span id=&#34;cb32-15&#34;&gt;&lt;a href=&#34;#cb32-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[j] += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * cnt[i] * inv[j / i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb32-16&#34;&gt;&lt;a href=&#34;#cb32-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[j] &amp;gt; mod) f[j] -= mod;&lt;/span&gt;
&lt;span id=&#34;cb32-17&#34;&gt;&lt;a href=&#34;#cb32-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb32-18&#34;&gt;&lt;a href=&#34;#cb32-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb32-19&#34;&gt;&lt;a href=&#34;#cb32-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb32-20&#34;&gt;&lt;a href=&#34;#cb32-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f = polyExp(f);&lt;/span&gt;
&lt;span id=&#34;cb32-21&#34;&gt;&lt;a href=&#34;#cb32-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) print(f[i]), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb32-22&#34;&gt;&lt;a href=&#34;#cb32-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb32-23&#34;&gt;&lt;a href=&#34;#cb32-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式带余除法&#34;&gt;多项式带余除法&lt;/h2&gt;
&lt;h3 id=&#34;问题描述-4&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;给定多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;。求 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 除以 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt; 的商 &lt;span class=&#34;math inline&#34;&gt;\(Q(x)\)&lt;/span&gt; 和余数 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若令 &lt;span class=&#34;math inline&#34;&gt;\(n = \deg f\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = \deg g\)&lt;/span&gt;，则要求满足 &lt;span class=&#34;math inline&#34;&gt;\(\deg Q = n - m\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\deg R &amp;lt; m\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;问题求解&#34;&gt;问题求解&lt;/h3&gt;
&lt;p&gt;最关键的问题就是 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt;，如果我们能把 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt; 的影响消去，那么就可以直接求逆来求出 &lt;span class=&#34;math inline&#34;&gt;\(Q(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(n = \deg f\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = \deg g\)&lt;/span&gt;。主要思想是构造 &lt;span class=&#34;math display&#34;&gt;\[
f^R(x) = x^nf\left(\frac1x\right)
\]&lt;/span&gt; 然后不难发现这个东西的实质就是反转 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的系数。&lt;/p&gt;
&lt;p&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = Q(x)g(x) + R(x)\)&lt;/span&gt; 中的 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 换成 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac 1x\)&lt;/span&gt; 进行化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}f\left(\frac1x\right) &amp;amp;= Q\left(\frac1x\right)g\left(\frac1x\right) + R\left(\frac1x\right)\\x^nf\left(\frac1x\right) &amp;amp;= x^{n - m}Q\left(\frac1x\right)x^mg\left(\frac1x\right) + x^{n - m + 1}x^{m - 1}R\left(\frac1x\right)\\f^R(x)&amp;amp;=Q^R(x)g^R(x) + x^{n - m + 1}R^R(x)\\f^R(x)&amp;amp;\equiv Q^R(x)g^R(x)\pmod{x^{n - m + 1}}\end{aligned}
\]&lt;/span&gt; 所以我们可以用求逆求出 &lt;span class=&#34;math inline&#34;&gt;\(Q(x)\)&lt;/span&gt;，然后回代就可以求出 &lt;span class=&#34;math inline&#34;&gt;\(R(x)\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;p&gt;时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-4&#34;&gt;实现&lt;/h3&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb33&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb33-1&#34;&gt;&lt;a href=&#34;#cb33-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; polyDiv(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;B, Poly &amp;amp;Q, Poly &amp;amp;R) {&lt;/span&gt;
&lt;span id=&#34;cb33-2&#34;&gt;&lt;a href=&#34;#cb33-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly rA = A, rB = B;&lt;/span&gt;
&lt;span id=&#34;cb33-3&#34;&gt;&lt;a href=&#34;#cb33-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    reverse(rA), reverse(rB);&lt;/span&gt;
&lt;span id=&#34;cb33-4&#34;&gt;&lt;a href=&#34;#cb33-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = A.size(), m = B.size();&lt;/span&gt;
&lt;span id=&#34;cb33-5&#34;&gt;&lt;a href=&#34;#cb33-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rA.resize(n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), rB.resize(n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb33-6&#34;&gt;&lt;a href=&#34;#cb33-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Q = rA * polyInv(rB), Q.resize(n - m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), reverse(Q);&lt;/span&gt;
&lt;span id=&#34;cb33-7&#34;&gt;&lt;a href=&#34;#cb33-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    R = A - B * Q, R.resize(m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb33-8&#34;&gt;&lt;a href=&#34;#cb33-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb33-9&#34;&gt;&lt;a href=&#34;#cb33-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主函数调用：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb34&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb34-1&#34;&gt;&lt;a href=&#34;#cb34-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb34-2&#34;&gt;&lt;a href=&#34;#cb34-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f, g, R, Q;&lt;/span&gt;
&lt;span id=&#34;cb34-3&#34;&gt;&lt;a href=&#34;#cb34-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb34-4&#34;&gt;&lt;a href=&#34;#cb34-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb34-5&#34;&gt;&lt;a href=&#34;#cb34-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb34-6&#34;&gt;&lt;a href=&#34;#cb34-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(++n), g.resize(++m);&lt;/span&gt;
&lt;span id=&#34;cb34-7&#34;&gt;&lt;a href=&#34;#cb34-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    lim = n;&lt;/span&gt;
&lt;span id=&#34;cb34-8&#34;&gt;&lt;a href=&#34;#cb34-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb34-9&#34;&gt;&lt;a href=&#34;#cb34-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, m - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(g[i]);&lt;/span&gt;
&lt;span id=&#34;cb34-10&#34;&gt;&lt;a href=&#34;#cb34-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyDiv(f, g, Q, R);&lt;/span&gt;
&lt;span id=&#34;cb34-11&#34;&gt;&lt;a href=&#34;#cb34-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(Q);&lt;/span&gt;
&lt;span id=&#34;cb34-12&#34;&gt;&lt;a href=&#34;#cb34-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(R);&lt;/span&gt;
&lt;span id=&#34;cb34-13&#34;&gt;&lt;a href=&#34;#cb34-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb34-14&#34;&gt;&lt;a href=&#34;#cb34-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式三角函数反三角函数&#34;&gt;多项式三角函数/反三角函数&lt;/h2&gt;
&lt;p&gt;感觉这东西没什么用。。。&lt;/p&gt;
&lt;h3 id=&#34;多项式三角函数&#34;&gt;多项式三角函数&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-5&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;，求模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(\sin f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\cos f(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;式子推导&#34;&gt;式子推导&lt;/h4&gt;
&lt;p&gt;欧拉公式： &lt;span class=&#34;math display&#34;&gt;\[
e^{i\theta} = \cos \theta + i\sin\theta
\]&lt;/span&gt; 用诱导公式日一通之后可以得到 &lt;span class=&#34;math display&#34;&gt;\[
e^{i(-\theta)} = \cos\theta - i\sin\theta
\]&lt;/span&gt; 由上面两个式子就可以得到 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sin\theta &amp;amp;= \frac{e^{i\theta} - e^{-i\theta}}{2i}\\
\cos\theta &amp;amp;= \frac{e^{i\theta} + e^{-i\theta}}{2}
\end{aligned}
\]&lt;/span&gt; 把 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 带进去： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\sin f(x) &amp;amp;= \frac{\exp(if(x)) - \exp(-if(x))}{2i}\\
\cos f(x) &amp;amp;= \frac{\exp(if(x)) + \exp(-if(x))}{2}
\end{aligned}
\]&lt;/span&gt; 现在看来似乎直接 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 就可以做完了，然而 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 是什么东西呢？&lt;/p&gt;
&lt;p&gt;回顾一下在复数域下，我们有 &lt;span class=&#34;math inline&#34;&gt;\(i^2 = -1\)&lt;/span&gt;。放在 &lt;span class=&#34;math inline&#34;&gt;\(\mathbb Z_{998244353}\)&lt;/span&gt; 下不就是 &lt;span class=&#34;math inline&#34;&gt;\(i^2\equiv 998244352\pmod{998244353}\)&lt;/span&gt;。取 &lt;span class=&#34;math inline&#34;&gt;\(998244352\)&lt;/span&gt; 的一个二次剩余 &lt;span class=&#34;math inline&#34;&gt;\(86583718\)&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h4 id=&#34;实现-5&#34;&gt;实现&lt;/h4&gt;
&lt;p&gt;注意一下我们能尽量少求 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt; 就少求 &lt;span class=&#34;math inline&#34;&gt;\(\exp\)&lt;/span&gt;（有 &lt;span class=&#34;math inline&#34;&gt;\(\exp(-if(x)) = (\exp(if(x)))^{-1}\)&lt;/span&gt;），可以很大程度地优化常数&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb35&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb35-1&#34;&gt;&lt;a href=&#34;#cb35-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polySin(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb35-2&#34;&gt;&lt;a href=&#34;#cb35-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly tmp = polyExp(imgunit * A);&lt;/span&gt;
&lt;span id=&#34;cb35-3&#34;&gt;&lt;a href=&#34;#cb35-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * imgunit % mod) * (tmp - polyInv(tmp));&lt;/span&gt;
&lt;span id=&#34;cb35-4&#34;&gt;&lt;a href=&#34;#cb35-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb35-5&#34;&gt;&lt;a href=&#34;#cb35-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb35-6&#34;&gt;&lt;a href=&#34;#cb35-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyCos(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb35-7&#34;&gt;&lt;a href=&#34;#cb35-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly tmp = polyExp(imgunit * A);&lt;/span&gt;
&lt;span id=&#34;cb35-8&#34;&gt;&lt;a href=&#34;#cb35-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; qPow(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;) * (tmp + polyInv(tmp));&lt;/span&gt;
&lt;span id=&#34;cb35-9&#34;&gt;&lt;a href=&#34;#cb35-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;超级短。。。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb36&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb36-1&#34;&gt;&lt;a href=&#34;#cb36-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, type;&lt;/span&gt;
&lt;span id=&#34;cb36-2&#34;&gt;&lt;a href=&#34;#cb36-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly f;&lt;/span&gt;
&lt;span id=&#34;cb36-3&#34;&gt;&lt;a href=&#34;#cb36-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb36-4&#34;&gt;&lt;a href=&#34;#cb36-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb36-5&#34;&gt;&lt;a href=&#34;#cb36-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(type);&lt;/span&gt;
&lt;span id=&#34;cb36-6&#34;&gt;&lt;a href=&#34;#cb36-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f.resize(lim = n), initInv();&lt;/span&gt;
&lt;span id=&#34;cb36-7&#34;&gt;&lt;a href=&#34;#cb36-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(f[i]);&lt;/span&gt;
&lt;span id=&#34;cb36-8&#34;&gt;&lt;a href=&#34;#cb36-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(type ? polyCos(f) : polySin(f));&lt;/span&gt;
&lt;span id=&#34;cb36-9&#34;&gt;&lt;a href=&#34;#cb36-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb36-10&#34;&gt;&lt;a href=&#34;#cb36-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;多项式反三角函数&#34;&gt;多项式反三角函数&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-6&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt;，求模 &lt;span class=&#34;math inline&#34;&gt;\(998244353\)&lt;/span&gt; 意义下的 &lt;span class=&#34;math inline&#34;&gt;\(\arcsin f(x)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\arccos f(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(\arctan f(x)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;式子推导-1&#34;&gt;式子推导&lt;/h4&gt;
&lt;p&gt;首先需要知道 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\arcsin&amp;#39;x &amp;amp;= \frac{1}{\sqrt{1 - x^2}}\\
\arccos&amp;#39;x &amp;amp;= -\frac{1}{\sqrt{1 - x^2}}\\
\arctan&amp;#39;x &amp;amp;= \frac{1}{1 + x^2}
\end{aligned}
\]&lt;/span&gt; 然后类似 &lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;，先求求导后积分我们就可以得到： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\arcsin f(x) &amp;amp;= \int\frac{f&amp;#39;(x)}{\sqrt{1 - f^2(x)}}\\
\arccos f(x) &amp;amp;= -\int\frac{f&amp;#39;(x)}{\sqrt{1 - f^2(x)}}\\
\arctan f(x) &amp;amp;= \int\frac{f&amp;#39;(x)}{1 + f^2(x)}
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;实现-6&#34;&gt;实现&lt;/h4&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb37&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb37-1&#34;&gt;&lt;a href=&#34;#cb37-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyAsin(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb37-2&#34;&gt;&lt;a href=&#34;#cb37-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly one; one.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-3&#34;&gt;&lt;a href=&#34;#cb37-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ints(deri(A) * polyInv(polySqrt(one - A * A)));&lt;/span&gt;
&lt;span id=&#34;cb37-4&#34;&gt;&lt;a href=&#34;#cb37-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb37-5&#34;&gt;&lt;a href=&#34;#cb37-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb37-6&#34;&gt;&lt;a href=&#34;#cb37-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly polyAtan(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Poly &amp;amp;A) {&lt;/span&gt;
&lt;span id=&#34;cb37-7&#34;&gt;&lt;a href=&#34;#cb37-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly one; one.push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb37-8&#34;&gt;&lt;a href=&#34;#cb37-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ints(deri(A) * polyInv(one + A * A));&lt;/span&gt;
&lt;span id=&#34;cb37-9&#34;&gt;&lt;a href=&#34;#cb37-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vector&lt;/code&gt; 封装的优势得到体现。&lt;/p&gt;
&lt;h2 id=&#34;拉格朗日插值&#34;&gt;拉格朗日插值&lt;/h2&gt;
&lt;h3 id=&#34;问题背景&#34;&gt;问题背景&lt;/h3&gt;
&lt;p&gt;给出 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\((x_i,y_i)\)&lt;/span&gt;，令这 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点确定的多项式为 &lt;span class=&#34;math inline&#34;&gt;\(L(x)\)&lt;/span&gt;，求 &lt;span class=&#34;math inline&#34;&gt;\(L(x)\)&lt;/span&gt; 的系数表示。&lt;/p&gt;
&lt;h3 id=&#34;结论&#34;&gt;结论&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
L(x) = \sum_{i=1}^n y_il_i(x)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中每个 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x)\)&lt;/span&gt; 为拉格朗日基本多项式，表达式为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
l_i(x) = \prod_{j=1,j\ne i}^n\frac{x-x_j}{x_i-x_j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其特点是 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x_i)=1\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\forall j\ne i\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x_j)=0\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;推导&#34;&gt;推导&lt;/h3&gt;
&lt;p&gt;抛开拉插，这道题明显可以列方程组然后使用高斯消元求解，但是复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 且精度问题明显，所以拉格朗日是这样考虑的：&lt;/p&gt;
&lt;p&gt;对于每个点 &lt;span class=&#34;math inline&#34;&gt;\(P_i(x_i,y_i)\)&lt;/span&gt;，构造一个 &lt;span class=&#34;math inline&#34;&gt;\(n-1\)&lt;/span&gt; 次多项式 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x)\)&lt;/span&gt; 使其在 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 上取值为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，在其余 &lt;span class=&#34;math inline&#34;&gt;\(x_j\)&lt;/span&gt; 上为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。构造的结果就是上面的结论：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
l_i(x) = \prod_{j=1,j\ne i}^n\frac{x-x_j}{x_i-x_j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;不加证明地，上面这个多项式是正确且唯一的。&lt;/p&gt;
&lt;p&gt;然后考虑构造答案：很显然对于点 &lt;span class=&#34;math inline&#34;&gt;\(P_i(x_i,y_i)\)&lt;/span&gt;，只有 &lt;span class=&#34;math inline&#34;&gt;\(l_i(x_i)\)&lt;/span&gt; 的取值为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，其他的都为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。所以答案的正确性也是比较显然的：对于 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt;，只有 &lt;span class=&#34;math inline&#34;&gt;\(y_il_i(x_i)\)&lt;/span&gt; 产生了贡献，其余的都是 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。故这个多项式是正确的。&lt;/p&gt;
&lt;p&gt;所以回到一开始，若我们需要求 &lt;span class=&#34;math inline&#34;&gt;\(f(k)\)&lt;/span&gt; 的值，则我们需要的就是&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f(k) = \sum_{i=1}^n y_i\prod_{j=1,j\ne i}^n\frac{k-x_j}{x_i-x_j}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于模数是质数，所以使用费马小定理求逆元，跑得飞快。&lt;/p&gt;
&lt;p&gt;复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt;，求逆元就是个很小的常数&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb38&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb38-1&#34;&gt;&lt;a href=&#34;#cb38-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-2&#34;&gt;&lt;a href=&#34;#cb38-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-3&#34;&gt;&lt;a href=&#34;#cb38-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-4&#34;&gt;&lt;a href=&#34;#cb38-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-5&#34;&gt;&lt;a href=&#34;#cb38-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb38-6&#34;&gt;&lt;a href=&#34;#cb38-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-7&#34;&gt;&lt;a href=&#34;#cb38-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; ll read()&lt;/span&gt;
&lt;span id=&#34;cb38-8&#34;&gt;&lt;a href=&#34;#cb38-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-9&#34;&gt;&lt;a href=&#34;#cb38-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb38-10&#34;&gt;&lt;a href=&#34;#cb38-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-11&#34;&gt;&lt;a href=&#34;#cb38-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-12&#34;&gt;&lt;a href=&#34;#cb38-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb38-13&#34;&gt;&lt;a href=&#34;#cb38-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = x | (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb38-14&#34;&gt;&lt;a href=&#34;#cb38-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb38-15&#34;&gt;&lt;a href=&#34;#cb38-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb38-16&#34;&gt;&lt;a href=&#34;#cb38-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb38-17&#34;&gt;&lt;a href=&#34;#cb38-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb38-18&#34;&gt;&lt;a href=&#34;#cb38-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-19&#34;&gt;&lt;a href=&#34;#cb38-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll maxn = &lt;span class=&#34;fl&#34;&gt;2e3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, mod = &lt;span class=&#34;dv&#34;&gt;998244353&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-20&#34;&gt;&lt;a href=&#34;#cb38-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll x[maxn], y[maxn];&lt;/span&gt;
&lt;span id=&#34;cb38-21&#34;&gt;&lt;a href=&#34;#cb38-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-22&#34;&gt;&lt;a href=&#34;#cb38-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll pow(ll base, ll p)&lt;/span&gt;
&lt;span id=&#34;cb38-23&#34;&gt;&lt;a href=&#34;#cb38-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-24&#34;&gt;&lt;a href=&#34;#cb38-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-25&#34;&gt;&lt;a href=&#34;#cb38-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    base = (base + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-26&#34;&gt;&lt;a href=&#34;#cb38-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb38-27&#34;&gt;&lt;a href=&#34;#cb38-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb38-28&#34;&gt;&lt;a href=&#34;#cb38-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb38-29&#34;&gt;&lt;a href=&#34;#cb38-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans = ans * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-30&#34;&gt;&lt;a href=&#34;#cb38-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-31&#34;&gt;&lt;a href=&#34;#cb38-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-32&#34;&gt;&lt;a href=&#34;#cb38-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;
&lt;span id=&#34;cb38-33&#34;&gt;&lt;a href=&#34;#cb38-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb38-34&#34;&gt;&lt;a href=&#34;#cb38-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-35&#34;&gt;&lt;a href=&#34;#cb38-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll inv(ll n)&lt;/span&gt;
&lt;span id=&#34;cb38-36&#34;&gt;&lt;a href=&#34;#cb38-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-37&#34;&gt;&lt;a href=&#34;#cb38-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pow(n, mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb38-38&#34;&gt;&lt;a href=&#34;#cb38-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb38-39&#34;&gt;&lt;a href=&#34;#cb38-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb38-40&#34;&gt;&lt;a href=&#34;#cb38-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb38-41&#34;&gt;&lt;a href=&#34;#cb38-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb38-42&#34;&gt;&lt;a href=&#34;#cb38-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll n = read(), k = read();&lt;/span&gt;
&lt;span id=&#34;cb38-43&#34;&gt;&lt;a href=&#34;#cb38-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb38-44&#34;&gt;&lt;a href=&#34;#cb38-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x[i] = read(), y[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb38-45&#34;&gt;&lt;a href=&#34;#cb38-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-46&#34;&gt;&lt;a href=&#34;#cb38-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb38-47&#34;&gt;&lt;a href=&#34;#cb38-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb38-48&#34;&gt;&lt;a href=&#34;#cb38-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll prod1 = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, prod2 = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-49&#34;&gt;&lt;a href=&#34;#cb38-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= n; ++j)&lt;/span&gt;
&lt;span id=&#34;cb38-50&#34;&gt;&lt;a href=&#34;#cb38-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb38-51&#34;&gt;&lt;a href=&#34;#cb38-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j)&lt;/span&gt;
&lt;span id=&#34;cb38-52&#34;&gt;&lt;a href=&#34;#cb38-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-53&#34;&gt;&lt;a href=&#34;#cb38-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prod1 = prod1 * (k - x[j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-54&#34;&gt;&lt;a href=&#34;#cb38-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            prod2 = prod2 * (x[i] - x[j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-55&#34;&gt;&lt;a href=&#34;#cb38-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb38-56&#34;&gt;&lt;a href=&#34;#cb38-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = (ans + prod1 * y[i] % mod * inv(prod2) % mod + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb38-57&#34;&gt;&lt;a href=&#34;#cb38-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb38-58&#34;&gt;&lt;a href=&#34;#cb38-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb38-59&#34;&gt;&lt;a href=&#34;#cb38-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb38-60&#34;&gt;&lt;a href=&#34;#cb38-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;重心型拉格朗日插值法&#34;&gt;重心型拉格朗日插值法&lt;/h3&gt;
&lt;p&gt;上面的做法在需要动态加点/删点的情况下是有弊端的，因为一次加点就需要 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 重新计算，这样肯定是不优秀的。&lt;/p&gt;
&lt;p&gt;继续推导式子。 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}f(k) &amp;amp;= \sum_{i = 1}^nf(x_i)\prod_{j\not=i}\frac{k - x_j}{x_i - x_j}\\&amp;amp;=\sum_{i = 1}^nf(x_i)\frac{\prod_{j = 1}^n(k - x_j)}{(k - x_i)\prod_{j \not= i}(x_i - x_j)}\\&amp;amp;=\prod_{i = 1}^n(k - x_i)\sum_{i = 1}^nf(x_i)\frac{1}{(k - x_i)\prod_{j \not= i}(x_i - x_j)}\end{aligned}
\]&lt;/span&gt; 设 &lt;span class=&#34;math inline&#34;&gt;\(w_i = \dfrac{f(x_i)}{\prod_{j\not=i}(x_i - x_j)}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(g = \displaystyle\prod_{i = 1}^n(k - x_i)\)&lt;/span&gt;，则 &lt;span class=&#34;math display&#34;&gt;\[
f(k) = g\sum_{i = 1}^n\frac{w_i}{k - x_i}
\]&lt;/span&gt; 这个 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt; 称为重心权。每次加点更新的话其复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt;（更新 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(w_i\)&lt;/span&gt;，求逆 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt;）。这样做就可以快速加点删点。&lt;/p&gt;
&lt;p&gt;模板题：&lt;a href=&#34;https://loj.ac/p/165&#34;&gt;LOJ#165. 拉格朗日插值&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本题需要特判 &lt;span class=&#34;math inline&#34;&gt;\(k = x_i\)&lt;/span&gt; 的情况。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb39&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb39-1&#34;&gt;&lt;a href=&#34;#cb39-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;3005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-2&#34;&gt;&lt;a href=&#34;#cb39-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint g = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, w[maxn], x[maxn], y[maxn];&lt;/span&gt;
&lt;span id=&#34;cb39-3&#34;&gt;&lt;a href=&#34;#cb39-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt;&lt;/span&gt;
&lt;span id=&#34;cb39-4&#34;&gt;&lt;a href=&#34;#cb39-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-5&#34;&gt;&lt;a href=&#34;#cb39-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; ins(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; cnt) {&lt;/span&gt;
&lt;span id=&#34;cb39-6&#34;&gt;&lt;a href=&#34;#cb39-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    w[cnt] = y[cnt];&lt;/span&gt;
&lt;span id=&#34;cb39-7&#34;&gt;&lt;a href=&#34;#cb39-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) w[i] *= qPow(x[i] - x[cnt], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;), w[cnt] *= qPow(x[cnt] - x[i], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-8&#34;&gt;&lt;a href=&#34;#cb39-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-9&#34;&gt;&lt;a href=&#34;#cb39-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-10&#34;&gt;&lt;a href=&#34;#cb39-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-11&#34;&gt;&lt;a href=&#34;#cb39-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;modint calc(modint k) {&lt;/span&gt;
&lt;span id=&#34;cb39-12&#34;&gt;&lt;a href=&#34;#cb39-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k == x[i]) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; y[i];&lt;/span&gt;
&lt;span id=&#34;cb39-13&#34;&gt;&lt;a href=&#34;#cb39-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint g = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-14&#34;&gt;&lt;a href=&#34;#cb39-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) g *= (k - x[i]);&lt;/span&gt;
&lt;span id=&#34;cb39-15&#34;&gt;&lt;a href=&#34;#cb39-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    modint ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-16&#34;&gt;&lt;a href=&#34;#cb39-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) ret += w[i] * qPow(k - x[i], mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-17&#34;&gt;&lt;a href=&#34;#cb39-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret * g;&lt;/span&gt;
&lt;span id=&#34;cb39-18&#34;&gt;&lt;a href=&#34;#cb39-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb39-19&#34;&gt;&lt;a href=&#34;#cb39-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb39-20&#34;&gt;&lt;a href=&#34;#cb39-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb39-21&#34;&gt;&lt;a href=&#34;#cb39-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n; read(n);&lt;/span&gt;
&lt;span id=&#34;cb39-22&#34;&gt;&lt;a href=&#34;#cb39-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--) {&lt;/span&gt;
&lt;span id=&#34;cb39-23&#34;&gt;&lt;a href=&#34;#cb39-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; op;&lt;/span&gt;
&lt;span id=&#34;cb39-24&#34;&gt;&lt;a href=&#34;#cb39-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(op);&lt;/span&gt;
&lt;span id=&#34;cb39-25&#34;&gt;&lt;a href=&#34;#cb39-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb39-26&#34;&gt;&lt;a href=&#34;#cb39-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            read(x[++cnt]), read(y[cnt]);&lt;/span&gt;
&lt;span id=&#34;cb39-27&#34;&gt;&lt;a href=&#34;#cb39-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ins(cnt);&lt;/span&gt;
&lt;span id=&#34;cb39-28&#34;&gt;&lt;a href=&#34;#cb39-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb39-29&#34;&gt;&lt;a href=&#34;#cb39-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; read(x);&lt;/span&gt;
&lt;span id=&#34;cb39-30&#34;&gt;&lt;a href=&#34;#cb39-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            print(calc(x));&lt;/span&gt;
&lt;span id=&#34;cb39-31&#34;&gt;&lt;a href=&#34;#cb39-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb39-32&#34;&gt;&lt;a href=&#34;#cb39-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb39-33&#34;&gt;&lt;a href=&#34;#cb39-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb39-34&#34;&gt;&lt;a href=&#34;#cb39-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb39-35&#34;&gt;&lt;a href=&#34;#cb39-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;正整数的-k-次方之和&#34;&gt;正整数的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次方之和&lt;/h3&gt;
&lt;h4 id=&#34;问题描述-7&#34;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF622F&#34;&gt;CF622F&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题意：给定 &lt;span class=&#34;math inline&#34;&gt;\(n,k\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 10^9,0\le k\le 10^6\)&lt;/span&gt;），求 &lt;span class=&#34;math display&#34;&gt;\[
\sum_{i = 1}^ni^k = 1^k + 2^k + 3^k +\cdots + n^k
\]&lt;/span&gt; 模 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 的值。&lt;/p&gt;
&lt;h4 id=&#34;题解&#34;&gt;题解&lt;/h4&gt;
&lt;p&gt;下面的证明会讲到，这个东西可以看作以 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 为变量的 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;p&gt;而我们很容易就可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(k\log k)\)&lt;/span&gt; 的时间内求出求出 &lt;span class=&#34;math inline&#34;&gt;\(f(1),f(2),\cdots,f(k+ 1)\)&lt;/span&gt;，我们需要求的是 &lt;span class=&#34;math inline&#34;&gt;\(f(n)\)&lt;/span&gt;，故考虑拉格朗日插值，得出如下公式 &lt;span class=&#34;math display&#34;&gt;\[
f(n) = \sum_{i = 1}^{k + 2}f(i)\prod_{j\neq i}\frac{n - j}{i - j}
\]&lt;/span&gt; 如果朴素地做的话，复杂度显然是 &lt;span class=&#34;math inline&#34;&gt;\(O(k^2)\)&lt;/span&gt; 的，但是注意到我们用于取点值的数都是连续的，所以 &lt;span class=&#34;math inline&#34;&gt;\(\prod\)&lt;/span&gt; 这一堆是可以 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 预处理然后 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 求的。怎么预处理呢？我们考虑把他打开看看规律 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\prod_{j = 1,j\neq i}^{k + 2}\frac{n - j}{i - j} &amp;amp;= \frac{(n - 1)(n - 2)\cdots(n - j + 1)(n - j - 1)\cdots(n - k - 1)(n - k - 2)}{(i - 1)(i - 2)\cdots(i - j + 1)(i - j - 1)\cdots(i - k - 2)}\\
&amp;amp;=\frac{\prod_{j = 1}^{i - 1}(n - j)\times\prod_{j = i + 1}^{k + 2}(n - j)}{(-1)^{k -i}\times i!\times (k + 2 - i)!}
\end{aligned}
\]&lt;/span&gt; 所以维护一下 &lt;span class=&#34;math inline&#34;&gt;\((n - j)\)&lt;/span&gt; 的前/后缀积和 &lt;span class=&#34;math inline&#34;&gt;\([1, k + 1]\)&lt;/span&gt; 的阶乘逆元，这道题就可以在 &lt;span class=&#34;math inline&#34;&gt;\(O(k\log k)\)&lt;/span&gt; 的时间内做出来了。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb40&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb40-1&#34;&gt;&lt;a href=&#34;#cb40-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-2&#34;&gt;&lt;a href=&#34;#cb40-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb40-3&#34;&gt;&lt;a href=&#34;#cb40-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb40-4&#34;&gt;&lt;a href=&#34;#cb40-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-5&#34;&gt;&lt;a href=&#34;#cb40-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb40-6&#34;&gt;&lt;a href=&#34;#cb40-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll mod = &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-7&#34;&gt;&lt;a href=&#34;#cb40-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e6&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-8&#34;&gt;&lt;a href=&#34;#cb40-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-9&#34;&gt;&lt;a href=&#34;#cb40-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, k;&lt;/span&gt;
&lt;span id=&#34;cb40-10&#34;&gt;&lt;a href=&#34;#cb40-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-11&#34;&gt;&lt;a href=&#34;#cb40-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll fac[maxn], pre[maxn], suf[maxn];&lt;/span&gt;
&lt;span id=&#34;cb40-12&#34;&gt;&lt;a href=&#34;#cb40-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-13&#34;&gt;&lt;a href=&#34;#cb40-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll qpow(ll base, ll p = mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-14&#34;&gt;&lt;a href=&#34;#cb40-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb40-15&#34;&gt;&lt;a href=&#34;#cb40-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-16&#34;&gt;&lt;a href=&#34;#cb40-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, base = base * base % mod)&lt;/span&gt;
&lt;span id=&#34;cb40-17&#34;&gt;&lt;a href=&#34;#cb40-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-18&#34;&gt;&lt;a href=&#34;#cb40-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-19&#34;&gt;&lt;a href=&#34;#cb40-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb40-20&#34;&gt;&lt;a href=&#34;#cb40-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb40-21&#34;&gt;&lt;a href=&#34;#cb40-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb40-22&#34;&gt;&lt;a href=&#34;#cb40-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb40-23&#34;&gt;&lt;a href=&#34;#cb40-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb40-24&#34;&gt;&lt;a href=&#34;#cb40-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;k);&lt;/span&gt;
&lt;span id=&#34;cb40-25&#34;&gt;&lt;a href=&#34;#cb40-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!k)&lt;/span&gt;
&lt;span id=&#34;cb40-26&#34;&gt;&lt;a href=&#34;#cb40-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb40-27&#34;&gt;&lt;a href=&#34;#cb40-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb40-28&#34;&gt;&lt;a href=&#34;#cb40-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-29&#34;&gt;&lt;a href=&#34;#cb40-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-30&#34;&gt;&lt;a href=&#34;#cb40-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-31&#34;&gt;&lt;a href=&#34;#cb40-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    pre[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, fac[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-32&#34;&gt;&lt;a href=&#34;#cb40-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-33&#34;&gt;&lt;a href=&#34;#cb40-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pre[i] = pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (n - i) % mod, fac[i] = fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * i % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-34&#34;&gt;&lt;a href=&#34;#cb40-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    suf[k + &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-35&#34;&gt;&lt;a href=&#34;#cb40-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-36&#34;&gt;&lt;a href=&#34;#cb40-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        suf[i] = suf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * (n - i) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-37&#34;&gt;&lt;a href=&#34;#cb40-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb40-38&#34;&gt;&lt;a href=&#34;#cb40-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb40-39&#34;&gt;&lt;a href=&#34;#cb40-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        y = (y + qpow(i, k)) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-40&#34;&gt;&lt;a href=&#34;#cb40-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll tmp = y * pre[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod * suf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] % mod * (((k - i) &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) * qpow(fac[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * fac[k + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; - i] % mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-41&#34;&gt;&lt;a href=&#34;#cb40-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans = (ans + tmp + mod) % mod;&lt;/span&gt;
&lt;span id=&#34;cb40-42&#34;&gt;&lt;a href=&#34;#cb40-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb40-43&#34;&gt;&lt;a href=&#34;#cb40-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb40-44&#34;&gt;&lt;a href=&#34;#cb40-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb40-45&#34;&gt;&lt;a href=&#34;#cb40-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;证明&#34;&gt;证明&lt;/h4&gt;
&lt;p&gt;这里的证明使用差分（参考数竞小蓝本数列那一册）。&lt;/p&gt;
&lt;p&gt;定义多项式 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的一阶差分为 &lt;span class=&#34;math inline&#34;&gt;\(\Delta f(x) = f(x + 1) - f(x)\)&lt;/span&gt;，把得到的多项式再作次差分得到 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\)&lt;/span&gt; 的二阶差分 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\Delta^2f(x) &amp;amp;= \Delta (\Delta f(x))\\
&amp;amp;= \Delta (f(x + 1) - f(x))\\
&amp;amp;= (f(x + 2) - f(x + 1)) - (f(x + 1) - f(x))\\
&amp;amp;= f(x + 2) - 2f(x + 1) + f(x)
\end{aligned}
\]&lt;/span&gt; 类似的可以定义 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶差分，即 &lt;span class=&#34;math inline&#34;&gt;\(\Delta^p f(x) = \Delta(\Delta^{p - 1}f(x))\)&lt;/span&gt;。类似的我们对数列也是可以进行差分操作的。如果一个数列的 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶差分为一个非零常数列，则称其为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶等差数列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数列 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶等差数列的充要条件是其通项公式为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的一个 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;已知数列 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶等差数列，设数列 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 的通项为一个关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 次多项式，即 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = \sum_{i = 0}^vu_ix^i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace a_n\rbrace\)&lt;/span&gt; 的差分为 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace b_n\rbrace\)&lt;/span&gt;，则 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace b_n\rbrace\)&lt;/span&gt; 的通项公式为 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\Delta f(x) &amp;amp;= f(x + 1) - f(x)\\
&amp;amp;= \sum_{i = 0}^v u_i(x + 1)^i - \sum_{i = 0}^vu_ix_i
\end{aligned}
\]&lt;/span&gt; 打开后我们发现 &lt;span class=&#34;math inline&#34;&gt;\(x^v\)&lt;/span&gt; 的系数变为了 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，说明差分之后通项公式的次数减了 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，从其 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 阶差分为一个非零常数列可反推知其通项公式的次数为 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;回到本题，定义出数列 &lt;span class=&#34;math display&#34;&gt;\[
\lbrace a_n\rbrace = \sum_{i = 1}^1i^k, \sum_{i = 1}^2i^k,\cdots,\sum_{i = 1}^ni^k
\]&lt;/span&gt; 对这个数列作差分可以得到 &lt;span class=&#34;math inline&#34;&gt;\(1^k,2^k,3^k,\cdots, n^k\)&lt;/span&gt;，发现其通项公式为 &lt;span class=&#34;math inline&#34;&gt;\(f(n) = n^k\)&lt;/span&gt;，所以原数列的通项就是关于 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的一个 &lt;span class=&#34;math inline&#34;&gt;\(k + 1\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;h2 id=&#34;多项式多点求值&#34;&gt;多项式多点求值&lt;/h2&gt;
&lt;p&gt;前置知识：多项式带余除法、简单的分治思想。&lt;/p&gt;
&lt;h3 id=&#34;问题描述-8&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;给定一个多项式和 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\(\{a_1,\cdots, a_m\}\)&lt;/span&gt;，要求分别求出 &lt;span class=&#34;math inline&#34;&gt;\(f(a_1),f(a_2),\cdots, f(a_m)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;问题求解-1&#34;&gt;问题求解&lt;/h3&gt;
&lt;p&gt;核心思想是构造 + 分治。&lt;/p&gt;
&lt;p&gt;考虑现在正在处理子问题 &lt;span class=&#34;math display&#34;&gt;\[
\{a_1, a_2, \cdots, a_m\}
\]&lt;/span&gt; 将其分为两个部分 &lt;span class=&#34;math display&#34;&gt;\[
\{a_1, a_2,\cdots, a_{\left\lfloor\frac m2\right\rfloor}\}\quad \{a_{\left\lfloor\frac m2\right\rfloor + 1}, \cdots, a_m\}
\]&lt;/span&gt; 然后构造两个多项式 &lt;span class=&#34;math display&#34;&gt;\[
g_0(x) = \prod_{i = 1}^{\lfloor\frac m2\rfloor}(x - a_i)\\g_1(x) = \prod_{i = \lfloor\frac m2\rfloor + 1}^m(x - a_i)
\]&lt;/span&gt; 然后我们令 &lt;span class=&#34;math inline&#34;&gt;\(f(x) = g_0(x)Q(x) + f_0(x)\)&lt;/span&gt;，则显然有 &lt;span class=&#34;math inline&#34;&gt;\(\forall i\in[1, \lfloor\frac m2\rfloor]\)&lt;/span&gt;，一定有 &lt;span class=&#34;math inline&#34;&gt;\(g_0(a_i) = 0\)&lt;/span&gt;。所以有 &lt;span class=&#34;math inline&#34;&gt;\(f(x)\equiv f_0(x)\pmod {g_0(x)}\)&lt;/span&gt;。这就是一个多项式取模的事情。对于右边则同理。&lt;/p&gt;
&lt;p&gt;这样子我们就成功将问题的规模减半。时间复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-7&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;一开始就需要求出所有的 &lt;span class=&#34;math inline&#34;&gt;\(g(x)\)&lt;/span&gt;，这个过程类似于线段树，是 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt; 的。然后每一层也要给他个多项式取模。&lt;/p&gt;
&lt;p&gt;然后鉴于多项式取模的巨大常数，当区间比较小的时候可以考虑直接暴算，优化常数。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb41&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb41-1&#34;&gt;&lt;a href=&#34;#cb41-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-2&#34;&gt;&lt;a href=&#34;#cb41-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-3&#34;&gt;&lt;a href=&#34;#cb41-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((l&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;r)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-4&#34;&gt;&lt;a href=&#34;#cb41-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly g[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], Q;&lt;/span&gt;
&lt;span id=&#34;cb41-5&#34;&gt;&lt;a href=&#34;#cb41-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-6&#34;&gt;&lt;a href=&#34;#cb41-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; initG(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *a) {&lt;/span&gt;
&lt;span id=&#34;cb41-7&#34;&gt;&lt;a href=&#34;#cb41-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r) {&lt;/span&gt;
&lt;span id=&#34;cb41-8&#34;&gt;&lt;a href=&#34;#cb41-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[k].push_back(a[l] ? mod - a[l] : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb41-9&#34;&gt;&lt;a href=&#34;#cb41-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[k].push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb41-10&#34;&gt;&lt;a href=&#34;#cb41-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-11&#34;&gt;&lt;a href=&#34;#cb41-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-12&#34;&gt;&lt;a href=&#34;#cb41-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initG(L, l, M, a);&lt;/span&gt;
&lt;span id=&#34;cb41-13&#34;&gt;&lt;a href=&#34;#cb41-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initG(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, a);&lt;/span&gt;
&lt;span id=&#34;cb41-14&#34;&gt;&lt;a href=&#34;#cb41-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    g[k] = g[L] * g[R];&lt;/span&gt;
&lt;span id=&#34;cb41-15&#34;&gt;&lt;a href=&#34;#cb41-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-16&#34;&gt;&lt;a href=&#34;#cb41-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-17&#34;&gt;&lt;a href=&#34;#cb41-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-18&#34;&gt;&lt;a href=&#34;#cb41-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; work(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, Poly A, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *ans) {&lt;/span&gt;
&lt;span id=&#34;cb41-19&#34;&gt;&lt;a href=&#34;#cb41-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (r - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb41-20&#34;&gt;&lt;a href=&#34;#cb41-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, l, r) {&lt;/span&gt;
&lt;span id=&#34;cb41-21&#34;&gt;&lt;a href=&#34;#cb41-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-22&#34;&gt;&lt;a href=&#34;#cb41-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            DEC(j, A.size() - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb41-23&#34;&gt;&lt;a href=&#34;#cb41-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                s = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * s * a[i] % mod + A[j]) % mod;&lt;/span&gt;
&lt;span id=&#34;cb41-24&#34;&gt;&lt;a href=&#34;#cb41-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans[i] = s;&lt;/span&gt;
&lt;span id=&#34;cb41-25&#34;&gt;&lt;a href=&#34;#cb41-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb41-26&#34;&gt;&lt;a href=&#34;#cb41-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-27&#34;&gt;&lt;a href=&#34;#cb41-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb41-28&#34;&gt;&lt;a href=&#34;#cb41-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Poly B;&lt;/span&gt;
&lt;span id=&#34;cb41-29&#34;&gt;&lt;a href=&#34;#cb41-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyDiv(A, g[L], Q, B);&lt;/span&gt;
&lt;span id=&#34;cb41-30&#34;&gt;&lt;a href=&#34;#cb41-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    work(L, l, M, B, a, ans);&lt;/span&gt;
&lt;span id=&#34;cb41-31&#34;&gt;&lt;a href=&#34;#cb41-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    polyDiv(A, g[R], Q, B);&lt;/span&gt;
&lt;span id=&#34;cb41-32&#34;&gt;&lt;a href=&#34;#cb41-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    work(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, B, a, ans);&lt;/span&gt;
&lt;span id=&#34;cb41-33&#34;&gt;&lt;a href=&#34;#cb41-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-34&#34;&gt;&lt;a href=&#34;#cb41-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-35&#34;&gt;&lt;a href=&#34;#cb41-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-36&#34;&gt;&lt;a href=&#34;#cb41-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; evaluate(Poly f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *ans) {&lt;/span&gt;
&lt;span id=&#34;cb41-37&#34;&gt;&lt;a href=&#34;#cb41-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initG(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m, a);&lt;/span&gt;
&lt;span id=&#34;cb41-38&#34;&gt;&lt;a href=&#34;#cb41-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    work(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m, f, a, ans);&lt;/span&gt;
&lt;span id=&#34;cb41-39&#34;&gt;&lt;a href=&#34;#cb41-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb41-40&#34;&gt;&lt;a href=&#34;#cb41-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb41-41&#34;&gt;&lt;a href=&#34;#cb41-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef L&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-42&#34;&gt;&lt;a href=&#34;#cb41-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef R&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb41-43&#34;&gt;&lt;a href=&#34;#cb41-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#undef M&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;多项式快速插值&#34;&gt;多项式快速插值&lt;/h2&gt;
&lt;p&gt;前置知识：多点求值，洛必达法则&lt;/p&gt;
&lt;h3 id=&#34;问题描述-9&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点 &lt;span class=&#34;math inline&#34;&gt;\((x_i, y_i)\)&lt;/span&gt;，求出经过这 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 次多项式。&lt;/p&gt;
&lt;h3 id=&#34;问题求解-2&#34;&gt;问题求解&lt;/h3&gt;
&lt;p&gt;回顾一下拉格朗日插值公式： &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{i = 1}^n y_i\prod_{j \not=i}\frac{x - x_j}{x_i - x_j}
\]&lt;/span&gt; 先把后面的分母提到前面来： &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{i = 1}^n\frac{y_i}{\prod_{j\not=i}(x_i - x_j)}\prod_{j \not= i}(x - x_j)
\]&lt;/span&gt; 首先发现 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{y_i}{\prod_{j\not=i}(x_i - x_j)}\)&lt;/span&gt;，考虑先计算这个常数。令 &lt;span class=&#34;math inline&#34;&gt;\(\delta(x) = \displaystyle\prod_{j = 1}^n(x - x_j)\)&lt;/span&gt;，这个东西可以分治 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2 n)\)&lt;/span&gt; 求。然后看 &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; 的分母： &lt;span class=&#34;math display&#34;&gt;\[
\prod_{j\not= i}(x_i - x_j) = \lim_{x\to x_i}\frac{\delta(x)}{x - x_i}
\]&lt;/span&gt; 这个东西就是导数的定义式，不难发现 &lt;span class=&#34;math display&#34;&gt;\[
\lim_{x\to x_i}\frac{\delta(x)}{x - x_i} = \delta&amp;#39;(x_i)
\]&lt;/span&gt; 求出 &lt;span class=&#34;math inline&#34;&gt;\(\delta(x)\)&lt;/span&gt; 之后求个导再写个多点求值就可以搞定了。&lt;/p&gt;
&lt;p&gt;然后问题就化简到了 &lt;span class=&#34;math display&#34;&gt;\[
F(x) = \sum_{i = 1}^n\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j\not=i}(x - x_j)
\]&lt;/span&gt; 还是用分治大法。设 &lt;span class=&#34;math inline&#34;&gt;\(\displaystyle F_{l, r}(x) = \sum_{i = l}^r\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j\not=i}(x - x_j)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(\delta_{l,r}(x) = \displaystyle\prod_{j = l}^r(x - x_j)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m = \left\lfloor\dfrac {i+ j}2\right\rfloor\)&lt;/span&gt;，开始化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}F_{l, r}(x) &amp;amp;= \sum_{i = l}^r\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j\not=i}(x - x_j)\\&amp;amp;=\sum_{i = l}^m\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j = l, j\not=i}^m(x - x_j)\prod_{j = m + 1, j\not= i}^r(x - x_j) + \sum_{i = m + 1}^r\frac{y_i}{\delta&amp;#39;(x_i)}\prod_{j = l, j\not=i}^m(x - x_j)\prod_{j = m + 1, j\not= i}^r(x - x_j)\\&amp;amp;=F_{l,m}(x)\delta_{m + 1, r}(x) + F_{m + 1, r}(x)\delta_{l, m}(x)\end{aligned}
\]&lt;/span&gt; 边界肯定就是 &lt;span class=&#34;math inline&#34;&gt;\(l = r\)&lt;/span&gt; 的时候 &lt;span class=&#34;math inline&#34;&gt;\(F_{l,l}(x) = \dfrac{y_l}{\delta&amp;#39;(x_l)}\)&lt;/span&gt;。总复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;实现-8&#34;&gt;实现&lt;/h3&gt;
&lt;p&gt;配合上面的封装，其实不难写。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb42&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb42-1&#34;&gt;&lt;a href=&#34;#cb42-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly delta[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], ddelta;&lt;/span&gt;
&lt;span id=&#34;cb42-2&#34;&gt;&lt;a href=&#34;#cb42-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; dval[maxn];&lt;/span&gt;
&lt;span id=&#34;cb42-3&#34;&gt;&lt;a href=&#34;#cb42-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-4&#34;&gt;&lt;a href=&#34;#cb42-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; initDelta(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *x) {&lt;/span&gt;
&lt;span id=&#34;cb42-5&#34;&gt;&lt;a href=&#34;#cb42-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r) {&lt;/span&gt;
&lt;span id=&#34;cb42-6&#34;&gt;&lt;a href=&#34;#cb42-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        delta[k].push_back(x[l] ? mod - x[l] : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-7&#34;&gt;&lt;a href=&#34;#cb42-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        delta[k].push_back(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb42-8&#34;&gt;&lt;a href=&#34;#cb42-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-9&#34;&gt;&lt;a href=&#34;#cb42-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb42-10&#34;&gt;&lt;a href=&#34;#cb42-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initDelta(L, l, M, x);&lt;/span&gt;
&lt;span id=&#34;cb42-11&#34;&gt;&lt;a href=&#34;#cb42-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initDelta(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x);&lt;/span&gt;
&lt;span id=&#34;cb42-12&#34;&gt;&lt;a href=&#34;#cb42-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    delta[k] = delta[L] * delta[R];&lt;/span&gt;
&lt;span id=&#34;cb42-13&#34;&gt;&lt;a href=&#34;#cb42-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb42-14&#34;&gt;&lt;a href=&#34;#cb42-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-15&#34;&gt;&lt;a href=&#34;#cb42-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-16&#34;&gt;&lt;a href=&#34;#cb42-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly interpolation(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *y) {&lt;/span&gt;
&lt;span id=&#34;cb42-17&#34;&gt;&lt;a href=&#34;#cb42-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (l == r)&lt;/span&gt;
&lt;span id=&#34;cb42-18&#34;&gt;&lt;a href=&#34;#cb42-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Poly(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * y[l] * qPow(dval[l]) % mod);&lt;/span&gt;
&lt;span id=&#34;cb42-19&#34;&gt;&lt;a href=&#34;#cb42-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; interpolation(L, l, M, x, y) * delta[R] + interpolation(R, M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r, x, y) * delta[L];&lt;/span&gt;
&lt;span id=&#34;cb42-20&#34;&gt;&lt;a href=&#34;#cb42-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb42-21&#34;&gt;&lt;a href=&#34;#cb42-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb42-22&#34;&gt;&lt;a href=&#34;#cb42-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Poly interpolation(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; *y) {&lt;/span&gt;
&lt;span id=&#34;cb42-23&#34;&gt;&lt;a href=&#34;#cb42-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    initDelta(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, x);&lt;/span&gt;
&lt;span id=&#34;cb42-24&#34;&gt;&lt;a href=&#34;#cb42-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ddelta = deri(delta[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb42-25&#34;&gt;&lt;a href=&#34;#cb42-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    evaluate(ddelta, n, x, dval);&lt;/span&gt;
&lt;span id=&#34;cb42-26&#34;&gt;&lt;a href=&#34;#cb42-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; interpolation(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, x, y);&lt;/span&gt;
&lt;span id=&#34;cb42-27&#34;&gt;&lt;a href=&#34;#cb42-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>BZOJ3771. Triple</title>
        <link>https://oi.imyangty.com/sol-bzoj3771/</link>
        <pubDate>Fri, 19 Feb 2021 17:47:07 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-bzoj3771/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg50.webp" alt="Featured image of post BZOJ3771. Triple" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 把价值分别为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 的斧子，河神可能拿走 1 - 3 把，问每种可能的损失价值及其对应方案数。（不计顺序）&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;生成函数入门题。 考虑设出多项式 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，其系数有 &lt;span class=&#34;math inline&#34;&gt;\(A[a_i] = 1\)&lt;/span&gt;，代表选一把的。则答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x) + A^2(x) + A^3(x)\)&lt;/span&gt;。但是这样是显然不对的。为什么？ 因为这样的话同一个元素可能被选两次或三次，对于这种情况定义 &lt;span class=&#34;math inline&#34;&gt;\(B(x)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(C(x)\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(B[2a_i] = 1\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(C[3a_i] = 1\)&lt;/span&gt;，代表同时选两次/三次的，减掉这些方案数就可以了。然后需要注意顺序问题： 选一把的答案为 &lt;span class=&#34;math inline&#34;&gt;\(A(x)\)&lt;/span&gt;，不难发现选两种的即为 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{A^2(x) - B(x)}{2}\)&lt;/span&gt;，选三种的比较麻烦：不能同时选两种一样的，即减去 &lt;span class=&#34;math inline&#34;&gt;\(3A(x)B(x)\)&lt;/span&gt;，，但是选三种同样的又会被多减两次，最后除以 &lt;span class=&#34;math inline&#34;&gt;\(3!\)&lt;/span&gt; 去掉顺序问题，所以最终答案为： &lt;span class=&#34;math inline&#34;&gt;\(A(x) + \frac{A^2(x) - B(x)}{2} + \frac{A^3(x) - 3A(x)B(x) + 2C(x)}{6}\)&lt;/span&gt; 生成函数的卷积使用 NTT 或 FFT 优化即可。注意此时 NTT 模数要取一个更大的质数。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll G = &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, mod = &lt;span class=&#34;dv&#34;&gt;2281701377&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; myswap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    T t = a;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    a = b;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b = t;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll pow(ll base, ll p = mod - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; p; p &amp;gt;&amp;gt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (p &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ret = ret * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        base = base * base % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; rev[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll invG = pow(G);&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; NTT(ll *f, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; type)&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt; rev[i])&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            myswap(f[i], f[rev[i]]);&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; p &amp;lt;= lim; p &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; len = p &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll tG = pow(type ? G : invG, (mod - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / p);&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; k &amp;lt; lim; k += p)&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll buf = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = k; l &amp;lt; k + len; ++l, buf = buf * tG % mod)&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            {&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                ll tmp = buf * f[len + l] % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[len + l] = f[l] - tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[len + l] &amp;lt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) f[len + l] += mod;&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[l] = f[l] + tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[l] &amp;gt; mod) f[l] -= mod;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll invlim = pow(lim);&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!type)&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = f[i] * invlim % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f1[maxn], f2[maxn], f3[maxn], ans[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll g[maxn], t[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n = read();&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (n--)&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = read();&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++f1[tmp], ++g[tmp], ++ans[tmp];&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++f2[tmp &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], ++f3[tmp * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; lim = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (lim &amp;lt;= (&lt;span class=&#34;dv&#34;&gt;40000&lt;/span&gt; * &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)) lim &amp;lt;&amp;lt;= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        rev[i] = (rev[i &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)  ((i &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? (lim &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) : &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f1, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = f1[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += (g[i] - f2[i]) / &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        g[i] = f1[i] * g[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(g, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f2[i] = f2[i] * f1[i] % mod;&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    NTT(f2, lim, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, lim - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans[i] += (g[i] - &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; * f2[i] + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * f3[i]) / &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (ans[i]) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, i, ans[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-109&#34;&gt;&lt;a href=&#34;#cb1-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        
    </channel>
</rss>

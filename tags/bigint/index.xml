<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>高精度 on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/bigint/</link>
        <description>Recent content in 高精度 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Sat, 25 Sep 2021 22:31:22 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/bigint/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>历年联赛真题选做</title>
        <link>https://oi.imyangty.com/sol-past-noip/</link>
        <pubDate>Sat, 25 Sep 2021 22:31:22 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-past-noip/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg35.webp" alt="Featured image of post 历年联赛真题选做" /&gt;&lt;p&gt;笑死了还是没补完。&lt;/p&gt;
&lt;h2 id=&#34;noip2011&#34;&gt;NOIP2011&lt;/h2&gt;
&lt;h3 id=&#34;d1t2-选择客栈&#34;&gt;D1T2 选择客栈&lt;/h3&gt;
&lt;p&gt;直接维护一个点能匹配到的客栈个数即可。&lt;/p&gt;
&lt;p&gt;要开 &lt;code&gt;long long&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d1t3-mayan-游戏&#34;&gt;D1T3 Mayan 游戏&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1312&#34;&gt;题面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;首先下落函数可以这样写：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; fall() {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; top = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(y, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[x][y]) ret |= (top != y), a[x][top++] = a[x][y];&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;lt;= &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) a[x][top++] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后是检查的函数&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; del() {&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; vis[&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) FOR(y, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) vis[x][y] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) FOR(y, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[x][y] &amp;amp;&amp;amp; a[x][y - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] == a[x][y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;amp;&amp;amp; a[x][y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == a[x][y]) vis[x][y - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;] = vis[x][y - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = vis[x][y] = ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(y, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) FOR(x, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[x][y] &amp;amp;&amp;amp; a[x - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][y] == a[x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][y] &amp;amp;&amp;amp; a[x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][y] == a[x][y]) vis[x - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][y] = vis[x - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][y] = vis[x][y] = ret = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;) FOR(y, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;6&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[x][y]) a[x][y] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里容易写锅。&lt;/p&gt;
&lt;p&gt;然后修复的时候一定先掉落后删除。&lt;/p&gt;
&lt;p&gt;剪枝：左移的话只有左边没有方块才移动，否则一定有往右边的移动是等价的并且先被遍历到。&lt;/p&gt;
&lt;p&gt;然后 dfs 的时候按照他的字典序枚举即可。&lt;/p&gt;
&lt;h3 id=&#34;d2t1-计算系数&#34;&gt;D2T1 计算系数&lt;/h3&gt;
&lt;p&gt;二项式定理裸题。&lt;/p&gt;
&lt;h3 id=&#34;d2t2-聪明的质监员&#34;&gt;D2T2 聪明的质监员&lt;/h3&gt;
&lt;p&gt;傻逼二分答案。&lt;/p&gt;
&lt;h3 id=&#34;d2t3-观光公交&#34;&gt;D2T3 观光公交&lt;/h3&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(S_i\)&lt;/span&gt; 为在 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点出发的最大时间，则不难发现，公交车在 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号点到达的时间 &lt;span class=&#34;math inline&#34;&gt;\(t(i) = D_{i - 1} + \max\{t(i - 1), S_{i - 1}\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然后 &lt;span class=&#34;math inline&#34;&gt;\(ans = \sum_i\{t(B_i) - T_i\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;现在考虑每个氮气加速器的作用。其作用于 &lt;span class=&#34;math inline&#34;&gt;\(D_{i - 1}\)&lt;/span&gt; 后能惠及的乘客需要尽可能多。所以只考虑这个找后面第一个人等车之前的人数即可。&lt;/p&gt;
&lt;p&gt;所以考虑维护一个氮气加速器能影响到的右端点 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;，有 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
f_n = n\\
f_{n - 1} = n\\
f_i = \begin{cases}
f_{i + 1} &amp;amp;t(i + 1) &amp;gt; S_{i + 1}\\
i + 1 &amp;amp;\text{otherwise}
\end{cases}
\end{cases}
\]&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(t(i+1) &amp;gt; S_{i + 1}\)&lt;/span&gt; 即为人等车的情况，只有这些情况是能被优化掉的，因为后面的就与他无关了。&lt;/p&gt;
&lt;p&gt;每次维护一下 &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;，并找到能影响最多乘客的 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 即可，复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(nk)\)&lt;/span&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e3&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxm = &lt;span class=&#34;fl&#34;&gt;1e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, k;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll maxt[maxn], D[maxn], T[maxm], A[maxm], B[maxm], t[maxn], arrive[maxn], f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; il T max(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;a, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; T &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m), read(k);&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) read(D[i]);&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(T[i]), read(A[i]), read(B[i]), maxt[A[i]] = max(maxt[A[i]], T[i]), ++arrive[B[i]];&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) t[i] = max(maxt[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) + D[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], arrive[i] += arrive[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) ans += t[B[i]] - T[i];&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (k--) {&lt;/span&gt;
&lt;span id=&#34;cb3-17&#34;&gt;&lt;a href=&#34;#cb3-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = f[n] = n;&lt;/span&gt;
&lt;span id=&#34;cb3-18&#34;&gt;&lt;a href=&#34;#cb3-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-19&#34;&gt;&lt;a href=&#34;#cb3-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;gt; maxt[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;
&lt;span id=&#34;cb3-20&#34;&gt;&lt;a href=&#34;#cb3-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i] = f[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-21&#34;&gt;&lt;a href=&#34;#cb3-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; f[i] = i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-22&#34;&gt;&lt;a href=&#34;#cb3-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb3-23&#34;&gt;&lt;a href=&#34;#cb3-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll maxx = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, pos = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-24&#34;&gt;&lt;a href=&#34;#cb3-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-25&#34;&gt;&lt;a href=&#34;#cb3-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (maxx &amp;lt; arrive[f[i]] - arrive[i] &amp;amp;&amp;amp; D[i]) maxx = arrive[f[i]] - arrive[i], pos = i;&lt;/span&gt;
&lt;span id=&#34;cb3-26&#34;&gt;&lt;a href=&#34;#cb3-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!pos) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-27&#34;&gt;&lt;a href=&#34;#cb3-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans -= maxx, --D[pos];&lt;/span&gt;
&lt;span id=&#34;cb3-28&#34;&gt;&lt;a href=&#34;#cb3-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, pos, n) t[i] = max(maxt[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], t[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) + D[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb3-29&#34;&gt;&lt;a href=&#34;#cb3-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb3-30&#34;&gt;&lt;a href=&#34;#cb3-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans);&lt;/span&gt;
&lt;span id=&#34;cb3-31&#34;&gt;&lt;a href=&#34;#cb3-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb3-32&#34;&gt;&lt;a href=&#34;#cb3-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;加强版咕咕咕。&lt;/p&gt;
&lt;h2 id=&#34;noip2012&#34;&gt;NOIP2012&lt;/h2&gt;
&lt;h3 id=&#34;d1t1-vigenère-密码&#34;&gt;D1T1 Vigenère 密码&lt;/h3&gt;
&lt;p&gt;模拟 + 字符串。&lt;/p&gt;
&lt;h3 id=&#34;d1t2-国王游戏&#34;&gt;D1T2 国王游戏&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;没妈高精题&lt;/del&gt;。据说是很著名的贪心。&lt;/p&gt;
&lt;p&gt;不妨考虑调整法。考虑有两个人 &lt;span class=&#34;math inline&#34;&gt;\((a_1, b_1)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\((a_2, b_2)\)&lt;/span&gt;。令之前的数的乘积为 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，若第一个人在前面比第二个人在前面优，则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\max\left(\frac{A}{b_1}, \frac{Aa_1}{b_2}\right)&amp;amp;&amp;lt; \max\left(\frac{A}{b_2},\frac{Aa_2}{b_1}\right)\\
(\text{obviously there is }&amp;amp; \frac{A}{b_1} &amp;lt; \frac{Aa_2}{b_1})\\
Aa_1b_1 &amp;amp;&amp;lt; Aa_2b_2\\
a_1b_1 &amp;amp;&amp;lt; a_2b_2
\end{aligned}
\]&lt;/span&gt; 按照 &lt;span class=&#34;math inline&#34;&gt;\(a_ib_i\)&lt;/span&gt; 排序然后依次算就行了，但是需要高精度。&lt;/p&gt;
&lt;h3 id=&#34;d1t3-开车旅行&#34;&gt;D1T3 开车旅行&lt;/h3&gt;
&lt;p&gt;不难发现这个东西满足倍增需要的性质。设 &lt;span class=&#34;math inline&#34;&gt;\(f(i, k, 0/1, 0/1)\)&lt;/span&gt; 为从第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个城市 A/B 先开车（取决于第三维），开 &lt;span class=&#34;math inline&#34;&gt;\(2^k\)&lt;/span&gt; 天后 A/B 走的路程（取决于第四维）。&lt;/p&gt;
&lt;p&gt;比较烦反正就是。注意一开始需要熟练使用 STL 找最近的和次近的点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; pair&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; pii;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; h[maxn], f[maxn][&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;], g[maxn][&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;set&amp;lt;pii&amp;gt; S;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; myabs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt;= &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; ? a : -a;}&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; la, lb;&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) {&lt;/span&gt;
&lt;span id=&#34;cb4-13&#34;&gt;&lt;a href=&#34;#cb4-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; p = s;&lt;/span&gt;
&lt;span id=&#34;cb4-14&#34;&gt;&lt;a href=&#34;#cb4-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    la = lb = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-15&#34;&gt;&lt;a href=&#34;#cb4-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(j, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-16&#34;&gt;&lt;a href=&#34;#cb4-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~g[p][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] &amp;amp;&amp;amp; la + lb + f[p][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + f[p][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt;= x) {&lt;/span&gt;
&lt;span id=&#34;cb4-17&#34;&gt;&lt;a href=&#34;#cb4-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            la += f[p][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-18&#34;&gt;&lt;a href=&#34;#cb4-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            lb += f[p][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-19&#34;&gt;&lt;a href=&#34;#cb4-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            p = g[p][j][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-20&#34;&gt;&lt;a href=&#34;#cb4-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-21&#34;&gt;&lt;a href=&#34;#cb4-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-22&#34;&gt;&lt;a href=&#34;#cb4-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-23&#34;&gt;&lt;a href=&#34;#cb4-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb4-24&#34;&gt;&lt;a href=&#34;#cb4-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-25&#34;&gt;&lt;a href=&#34;#cb4-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb4-26&#34;&gt;&lt;a href=&#34;#cb4-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb4-27&#34;&gt;&lt;a href=&#34;#cb4-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(h[i]);&lt;/span&gt;
&lt;span id=&#34;cb4-28&#34;&gt;&lt;a href=&#34;#cb4-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(f, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb4-29&#34;&gt;&lt;a href=&#34;#cb4-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(g, -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; g);&lt;/span&gt;
&lt;span id=&#34;cb4-30&#34;&gt;&lt;a href=&#34;#cb4-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    S.insert(make_pair(h[n], n));&lt;/span&gt;
&lt;span id=&#34;cb4-31&#34;&gt;&lt;a href=&#34;#cb4-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    DEC(i, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-32&#34;&gt;&lt;a href=&#34;#cb4-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; it0 = S.lower_bound(make_pair(h[i], i)), it = it0;&lt;/span&gt;
&lt;span id=&#34;cb4-33&#34;&gt;&lt;a href=&#34;#cb4-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (it != S.begin()) {&lt;/span&gt;
&lt;span id=&#34;cb4-34&#34;&gt;&lt;a href=&#34;#cb4-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --it;&lt;/span&gt;
&lt;span id=&#34;cb4-35&#34;&gt;&lt;a href=&#34;#cb4-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;; ++j, --it) {&lt;/span&gt;
&lt;span id=&#34;cb4-36&#34;&gt;&lt;a href=&#34;#cb4-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || myabs(h[i] - it-&amp;gt;first) &amp;lt; myabs(h[i] - h[g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]]))&lt;/span&gt;
&lt;span id=&#34;cb4-37&#34;&gt;&lt;a href=&#34;#cb4-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = it-&amp;gt;second;&lt;/span&gt;
&lt;span id=&#34;cb4-38&#34;&gt;&lt;a href=&#34;#cb4-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || myabs(h[i] - it-&amp;gt;first) &amp;lt; myabs(h[i] - h[g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]]))&lt;/span&gt;
&lt;span id=&#34;cb4-39&#34;&gt;&lt;a href=&#34;#cb4-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = it-&amp;gt;second;&lt;/span&gt;
&lt;span id=&#34;cb4-40&#34;&gt;&lt;a href=&#34;#cb4-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (it == S.begin()) &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-41&#34;&gt;&lt;a href=&#34;#cb4-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-42&#34;&gt;&lt;a href=&#34;#cb4-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-43&#34;&gt;&lt;a href=&#34;#cb4-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        it = it0;&lt;/span&gt;
&lt;span id=&#34;cb4-44&#34;&gt;&lt;a href=&#34;#cb4-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; j &amp;lt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;amp;&amp;amp; it != S.end(); ++j, ++it) {&lt;/span&gt;
&lt;span id=&#34;cb4-45&#34;&gt;&lt;a href=&#34;#cb4-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || myabs(h[i] - it-&amp;gt;first) &amp;lt; myabs(h[i] - h[g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]]))&lt;/span&gt;
&lt;span id=&#34;cb4-46&#34;&gt;&lt;a href=&#34;#cb4-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = it-&amp;gt;second;&lt;/span&gt;
&lt;span id=&#34;cb4-47&#34;&gt;&lt;a href=&#34;#cb4-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] == -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; || myabs(h[i] - it-&amp;gt;first) &amp;lt; myabs(h[i] - h[g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;]]))&lt;/span&gt;
&lt;span id=&#34;cb4-48&#34;&gt;&lt;a href=&#34;#cb4-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = it-&amp;gt;second;&lt;/span&gt;
&lt;span id=&#34;cb4-49&#34;&gt;&lt;a href=&#34;#cb4-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-50&#34;&gt;&lt;a href=&#34;#cb4-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        S.insert(make_pair(h[i], i));&lt;/span&gt;
&lt;span id=&#34;cb4-51&#34;&gt;&lt;a href=&#34;#cb4-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-52&#34;&gt;&lt;a href=&#34;#cb4-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb4-53&#34;&gt;&lt;a href=&#34;#cb4-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-54&#34;&gt;&lt;a href=&#34;#cb4-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][k]) {&lt;/span&gt;
&lt;span id=&#34;cb4-55&#34;&gt;&lt;a href=&#34;#cb4-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][k][k ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-56&#34;&gt;&lt;a href=&#34;#cb4-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                f[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][k][k] = myabs(h[g[i][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;][k]] - h[i]);&lt;/span&gt;
&lt;span id=&#34;cb4-57&#34;&gt;&lt;a href=&#34;#cb4-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-58&#34;&gt;&lt;a href=&#34;#cb4-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-59&#34;&gt;&lt;a href=&#34;#cb4-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-60&#34;&gt;&lt;a href=&#34;#cb4-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;19&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-61&#34;&gt;&lt;a href=&#34;#cb4-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb4-62&#34;&gt;&lt;a href=&#34;#cb4-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(k, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-63&#34;&gt;&lt;a href=&#34;#cb4-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb4-64&#34;&gt;&lt;a href=&#34;#cb4-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k] &amp;amp;&amp;amp; ~g[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) {&lt;/span&gt;
&lt;span id=&#34;cb4-65&#34;&gt;&lt;a href=&#34;#cb4-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        g[i][j][k] = g[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-66&#34;&gt;&lt;a href=&#34;#cb4-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        f[i][j][k][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = f[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + f[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-67&#34;&gt;&lt;a href=&#34;#cb4-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        f[i][j][k][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = f[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + f[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-68&#34;&gt;&lt;a href=&#34;#cb4-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    }&lt;/span&gt;
&lt;span id=&#34;cb4-69&#34;&gt;&lt;a href=&#34;#cb4-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb4-70&#34;&gt;&lt;a href=&#34;#cb4-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (~g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k] &amp;amp;&amp;amp; ~g[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]) {&lt;/span&gt;
&lt;span id=&#34;cb4-71&#34;&gt;&lt;a href=&#34;#cb4-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        g[i][j][k] = g[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k];&lt;/span&gt;
&lt;span id=&#34;cb4-72&#34;&gt;&lt;a href=&#34;#cb4-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        f[i][j][k][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = f[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + f[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-73&#34;&gt;&lt;a href=&#34;#cb4-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                        f[i][j][k][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = f[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + f[g[i][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k]][j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][k][&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb4-74&#34;&gt;&lt;a href=&#34;#cb4-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    }&lt;/span&gt;
&lt;span id=&#34;cb4-75&#34;&gt;&lt;a href=&#34;#cb4-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                }&lt;/span&gt;
&lt;span id=&#34;cb4-76&#34;&gt;&lt;a href=&#34;#cb4-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            }&lt;/span&gt;
&lt;span id=&#34;cb4-77&#34;&gt;&lt;a href=&#34;#cb4-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb4-78&#34;&gt;&lt;a href=&#34;#cb4-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-79&#34;&gt;&lt;a href=&#34;#cb4-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x0; read(x0);&lt;/span&gt;
&lt;span id=&#34;cb4-80&#34;&gt;&lt;a href=&#34;#cb4-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans = -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-81&#34;&gt;&lt;a href=&#34;#cb4-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; rate = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-82&#34;&gt;&lt;a href=&#34;#cb4-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(s, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb4-83&#34;&gt;&lt;a href=&#34;#cb4-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        calc(s, x0);&lt;/span&gt;
&lt;span id=&#34;cb4-84&#34;&gt;&lt;a href=&#34;#cb4-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; now = (!lb ? &lt;span class=&#34;fl&#34;&gt;1e9&lt;/span&gt; : (&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt;)la / lb);&lt;/span&gt;
&lt;span id=&#34;cb4-85&#34;&gt;&lt;a href=&#34;#cb4-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now &amp;lt; rate) rate = now, ans = s;&lt;/span&gt;
&lt;span id=&#34;cb4-86&#34;&gt;&lt;a href=&#34;#cb4-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (now == rate &amp;amp;&amp;amp; h[s] &amp;gt; h[ans])&lt;/span&gt;
&lt;span id=&#34;cb4-87&#34;&gt;&lt;a href=&#34;#cb4-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            rate = now, ans = s;&lt;/span&gt;
&lt;span id=&#34;cb4-88&#34;&gt;&lt;a href=&#34;#cb4-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-89&#34;&gt;&lt;a href=&#34;#cb4-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(ans), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-90&#34;&gt;&lt;a href=&#34;#cb4-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m; read(m);&lt;/span&gt;
&lt;span id=&#34;cb4-91&#34;&gt;&lt;a href=&#34;#cb4-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb4-92&#34;&gt;&lt;a href=&#34;#cb4-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s, x; read(s), read(x);&lt;/span&gt;
&lt;span id=&#34;cb4-93&#34;&gt;&lt;a href=&#34;#cb4-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        calc(s, x);&lt;/span&gt;
&lt;span id=&#34;cb4-94&#34;&gt;&lt;a href=&#34;#cb4-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        print(la), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), print(lb), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb4-95&#34;&gt;&lt;a href=&#34;#cb4-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb4-96&#34;&gt;&lt;a href=&#34;#cb4-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb4-97&#34;&gt;&lt;a href=&#34;#cb4-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d2t3-疫情控制&#34;&gt;D2T3 疫情控制&lt;/h3&gt;
&lt;p&gt;稍加分析问题即可得到我们是需要将所有的军队从原来的位置移到特定的位置上使得根节点到每个叶子的路径都被覆盖到。而最优方案明显是每支军队同时移动，总代价就是花费时间最长的军队花费的时间。&lt;/p&gt;
&lt;p&gt;“最大的最小”类型，并且该问题满足单调性，不难想到可以二分答案进行处理，二分的上界显然为树的直径，现在问题的关键是如何判定给定一个时间，能否在给定的时间内完成驻守。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(m \le n\le 5\times 10^4\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的范围不是很好 dp，所以就需要想一些神奇的贪心了。&lt;/p&gt;
&lt;p&gt;一个军队在的深度越浅，能控制的叶子节点越多，所以首先贪心的在二分的时间允许的范围内把每个军队往上提。这样子答案是不会更劣的。当然肯定有军队能到达根节点，这个时候先把其提到根下面的一级节点。然后再将其贪心地分配到没有被覆盖的根的儿子处。&lt;/p&gt;
&lt;p&gt;提根的过程可以用倍增优化，无解的话就是如果军队个数少于根节点的度数就肯定无解。比较难写，&lt;a href=&#34;https://www.luogu.com.cn/record/59726452&#34;&gt;代码&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;noip2013&#34;&gt;NOIP2013&lt;/h2&gt;
&lt;h3 id=&#34;d1t1-转圈游戏&#34;&gt;D1T1 转圈游戏&lt;/h3&gt;
&lt;p&gt;秒得答案为 &lt;span class=&#34;math inline&#34;&gt;\((m\times 10^k + x)\bmod n\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;d1t2-火柴排队&#34;&gt;D1T2 火柴排队&lt;/h3&gt;
&lt;p&gt;排序不等式贪心的应用，离散化，新建序列，求逆序对即可。&lt;/p&gt;
&lt;h3 id=&#34;d2t1-积木大赛&#34;&gt;D2T1 积木大赛&lt;/h3&gt;
&lt;p&gt;考虑差分数组，每次操作相当于可以给正的差分值减一并对应给负的加一。所以把所有的正差分值加起来即可。&lt;/p&gt;
&lt;h3 id=&#34;d2t2-花匠&#34;&gt;D2T2 花匠&lt;/h3&gt;
&lt;p&gt;什么毒瘤贪心。。。暴力找拐点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, a[maxn];&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (b &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] &amp;gt; a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ++b;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] &amp;lt; a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ++b;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (c &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] &amp;lt; a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ++c;&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (a[i] &amp;gt; a[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ++c;&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    print(max(b, c), &lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;d2t3-华容道&#34;&gt;D2T3 华容道&lt;/h3&gt;
&lt;h2 id=&#34;noip2015&#34;&gt;NOIP2015&lt;/h2&gt;
&lt;h3 id=&#34;d2t3-运输计划&#34;&gt;D2T3 运输计划&lt;/h3&gt;
&lt;p&gt;题意：给定树上若干条链，可以点一条边为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，问最长链长度的最小值。&lt;/p&gt;
&lt;p&gt;考虑二分答案。二分一个 &lt;span class=&#34;math inline&#34;&gt;\(mid\)&lt;/span&gt;，然后只考虑长 &lt;span class=&#34;math inline&#34;&gt;\(&amp;gt; mid\)&lt;/span&gt; 的链，找到一条最长的被这些链覆盖的边，判断最长链减去这条边之后能否满足 &lt;span class=&#34;math inline&#34;&gt;\(mid\)&lt;/span&gt;。整个过程可以树上差分，十分简单。&lt;/p&gt;
&lt;h2 id=&#34;noip2016&#34;&gt;NOIP2016&lt;/h2&gt;
&lt;h3 id=&#34;d1t2-天天爱跑步&#34;&gt;D1T2 天天爱跑步&lt;/h3&gt;
&lt;p&gt;题意：一棵树，&lt;/p&gt;
&lt;h2 id=&#34;noip2017&#34;&gt;NOIP2017&lt;/h2&gt;
&lt;h3 id=&#34;d1t3-逛公园&#34;&gt;D1T3 逛公园&lt;/h3&gt;
&lt;p&gt;题意：给定一张有向图，设 &lt;span class=&#34;math inline&#34;&gt;\(1\to N\)&lt;/span&gt; 的最短路为 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，求出长度不超过 &lt;span class=&#34;math inline&#34;&gt;\(d + K\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(1\to N\)&lt;/span&gt; 路径的数量，或报告无解。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(N = 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(M = 2\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(K\le 50\)&lt;/span&gt;，可能有 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 权边。&lt;/p&gt;
&lt;p&gt;注意到 &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt; 很小，尝试创造条件进行 &lt;span class=&#34;math inline&#34;&gt;\(O(NK)\)&lt;/span&gt; 的 dp。首先考虑正反两边最短路跑出 &lt;span class=&#34;math inline&#34;&gt;\(d_1(u)\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(d_N(u)\)&lt;/span&gt; 分别表示 &lt;span class=&#34;math inline&#34;&gt;\(1\to u\)&lt;/span&gt; 的最短路和 &lt;span class=&#34;math inline&#34;&gt;\(u\to N\)&lt;/span&gt; 的最短路。然后考虑 dp 状态为 &lt;span class=&#34;math inline&#34;&gt;\(f_{u, j}\)&lt;/span&gt; 表示 &lt;span class=&#34;math inline&#34;&gt;\(1\to u\)&lt;/span&gt;，路径长 &lt;span class=&#34;math inline&#34;&gt;\(= d_1(u) + j\)&lt;/span&gt; 的计数。我们可以写出转移： &lt;span class=&#34;math display&#34;&gt;\[
f_{v, j + w(u,v) + d_1(u) - d_1(v)} := f_{v, j + w(u,v) + d_1(u) - d_1(v)} + f_{u, j}
\]&lt;/span&gt; 根据三角形不等式：&lt;span class=&#34;math inline&#34;&gt;\(d_1(v)\le d_1(u) + w(u,v)\)&lt;/span&gt; 可以得到 &lt;span class=&#34;math inline&#34;&gt;\(d_1(u) - d_1(v) + w(u,v)\ge 0\)&lt;/span&gt;。所以按照 &lt;span class=&#34;math inline&#34;&gt;\(d_1\)&lt;/span&gt; 排个序然后 dp 就可以解出所有答案有穷的情况。&lt;/p&gt;
&lt;p&gt;对于答案无穷的情况，则为可行路径上能出现 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 环。将 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 权边单独拎出来建图然后拓扑排序即得到 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 环，若 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 环上的点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 满足 &lt;span class=&#34;math inline&#34;&gt;\(d_1(u) + d_N(u)\le d_1(N) + K\)&lt;/span&gt; 则说明其在可行路上。判断即可。&lt;/p&gt;
&lt;p&gt;过不了 UOJ extra test 14。懒得研究正解了。&lt;/p&gt;
&lt;h3 id=&#34;d2t3-列队&#34;&gt;D2T3 列队&lt;/h3&gt;
&lt;p&gt;题意：&lt;span class=&#34;math inline&#34;&gt;\(n\times m\)&lt;/span&gt; 列队，学生依次编号。&lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 次操作，每次操作选择 &lt;span class=&#34;math inline&#34;&gt;\((x, y)\)&lt;/span&gt; 的学生出队，然后向左看齐+向前看齐，学生在 &lt;span class=&#34;math inline&#34;&gt;\((n,m)\)&lt;/span&gt; 归队。输出每次出队学生的编号。&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(n = 1\)&lt;/span&gt; 的情况，可以用一个平衡树维护。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\ne 1\)&lt;/span&gt; 的情况，可以用 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个平衡树维护前 &lt;span class=&#34;math inline&#34;&gt;\(m - 1\)&lt;/span&gt; 列，用一个平衡树单独维护第 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 列。发现我们若是动态开点（一个节点维护一个连续段）的话复杂度可以接受。&lt;/p&gt;
&lt;p&gt;难写死了，qnmd。可以考虑直接利用 fhq-treap 的 split 特性，size 维护区间长度。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, ll k) { &lt;span class=&#34;co&#34;&gt;// 将 u 节点的大小更改为 k&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (k &amp;gt;= t[u].r - t[u].l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll want = t[u].l + k - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = newnode(want + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t[u].r);&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    t[u].r = want;&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rs(u) = merge(v, rs(u));&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; split(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, ll sz, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;y) {&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!u) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, y = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (t[ls(u)].size &amp;gt;= sz) y = u, split(ls(u), sz, x, ls(u));&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        split(u, sz - t[ls(u)].size);&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x = u, split(rs(u), sz - t[ls(u)].size - (t[u].r - t[u].l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), rs(u), y);&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; pushup(u);&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>NOIP2020 题解</title>
        <link>https://oi.imyangty.com/sol-noip2020/</link>
        <pubDate>Tue, 09 Mar 2021 19:25:17 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-noip2020/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg33.webp" alt="Featured image of post NOIP2020 题解" /&gt;&lt;h2 id=&#34;t1-排水系统&#34;&gt;T1 排水系统&lt;/h2&gt;
&lt;p&gt;不想说什么，拓扑排序即可。&lt;/p&gt;
&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;
&lt;p&gt;实现的时候注意一下，可以直接将所有的分数以 &lt;span class=&#34;math inline&#34;&gt;\(60^{11}\)&lt;/span&gt; 为分母进行运算，然后需要用两个 &lt;code&gt;long long&lt;/code&gt; 来实现一个 &lt;code&gt;Bigint&lt;/code&gt; 类。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(a);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(b);&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; ibuf[maxc], *__p1 = ibuf, *__p2 = ibuf;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; __p1 == __p2 &amp;amp;&amp;amp; (__p2 = (__p1 = ibuf) + fread(ibuf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), __p1 == __p2) ? EOF : *__p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&#34;kw&#34;&gt;typename&lt;/span&gt; T&amp;gt; &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; read(T &amp;amp;n) {&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = n * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = x ? -n : n;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} &lt;span class=&#34;co&#34;&gt;// namespace fastIO&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Bigint {&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll base = &lt;span class=&#34;fl&#34;&gt;1e15&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll upper, lower;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Bigint(ll u, ll l) : upper(u), lower(l) {}&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Bigint &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Bigint(lhs.upper + rhs.upper + (lhs.lower + rhs.lower) / base, (lhs.lower + rhs.lower) % base);&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Bigint &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;*(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Bigint(lhs.upper * rhs + lhs.lower * rhs / base, lhs.lower * rhs % base);&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Bigint &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;/(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Bigint(lhs.upper / rhs, (lhs.lower + lhs.upper % rhs * base) / rhs);&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; ll &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;%(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Bigint &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (lhs.upper % rhs * base + lhs.lower) % rhs;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; print() {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (upper) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld%015lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, upper, lower);&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, lower);&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxm = &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt; * maxn;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; prime[] = {&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;};&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; head[maxn], to[maxm], nxt[maxm], n, m, cnte;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; oud[maxn], ind[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Frac {&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Bigint upper, lower;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Frac(Bigint x = Bigint(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), Bigint y = Bigint(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) : upper(x), lower(y) {}&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Frac &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;+(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Frac &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Frac &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Frac(lhs.upper + rhs.upper, lhs.lower);&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;kw&#34;&gt;friend&lt;/span&gt; Frac &lt;span class=&#34;kw&#34;&gt;operator&lt;/span&gt;/(&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; Frac &amp;amp;lhs, &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll &amp;amp;rhs) {&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Frac(lhs.upper / rhs, lhs.lower);&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], qhead = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, qtail = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Bigint base(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;) base = base * &lt;span class=&#34;dv&#34;&gt;60&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n), read(m);&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        read(oud[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, oud[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; to; read(to);&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(i, to), ++ind[to];&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = Frac(Bigint(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;), base);&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[++qtail] = i, f[i].upper = base;&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (qhead &amp;lt;= qtail) {&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u = q[qhead++];&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        Frac add;&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (oud[u]) add = f[u] / oud[u];&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = head[u]; i; i = nxt[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;v = to[i];&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[v] = f[v] + add;&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!--ind[v])&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                q[++qtail] = v;&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!oud[i]) {&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            FOR(j, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (f[i].upper % prime[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; f[i].lower % prime[j] == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                    f[i].upper = f[i].upper / prime[j], f[i].lower = f[i].lower / prime[j];&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i].upper.print(), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;), f[i].lower.print(), putchar(&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;&amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;t2-字符串匹配&#34;&gt;T2 字符串匹配&lt;/h2&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(A^i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 拼接而成的字符串。令 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 为非空字符串，求 &lt;span class=&#34;math inline&#34;&gt;\(S = (AB)^kC\)&lt;/span&gt; 的方案数。其中 &lt;span class=&#34;math inline&#34;&gt;\(F(A)\le F(C)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(F(A)\)&lt;/span&gt; 意为 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 中出现次数为奇数的字符数量。&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;p&gt;直接说 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 做法。字符串下标从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 开始。&lt;/p&gt;
&lt;p&gt;考虑枚举 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 的长度 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，则这个循环前缀的长度为 &lt;span class=&#34;math inline&#34;&gt;\(ik\)&lt;/span&gt;。现在的&lt;strong&gt;第一个问题是不知道有多少个合法的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意到一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的字符串 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 有长度为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 的循环节的充要条件是 &lt;span class=&#34;math inline&#34;&gt;\(S_{[1, n - m]} = S_{[m + 1, n]}\)&lt;/span&gt;（这是 KMP 相关题目的经典套路）。体现在本题中就是 &lt;span class=&#34;math inline&#34;&gt;\(S_{[1, (k - 1)i]} = S_{i + 1, ki}\)&lt;/span&gt;。即从 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 开始长度为 &lt;span class=&#34;math inline&#34;&gt;\((k - 1)i\)&lt;/span&gt; 的子串与长度为 &lt;span class=&#34;math inline&#34;&gt;\((k - 1)i\)&lt;/span&gt; 的前缀相同。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(S_{[i +1, ki]}\)&lt;/span&gt; 其实即为后缀 &lt;span class=&#34;math inline&#34;&gt;\(i + 1\)&lt;/span&gt; 的前缀。考虑 Z 算法。则如果有 &lt;span class=&#34;math inline&#34;&gt;\((k - 1)i\le Z_{i + 1}\)&lt;/span&gt;，即这个前缀的长度不大于 &lt;span class=&#34;math inline&#34;&gt;\(Z_{i+ 1}\)&lt;/span&gt;，则根据 &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; 的定义，有 &lt;span class=&#34;math inline&#34;&gt;\(S_{[1, (k - 1)i]} = S_{i + 1, ki}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;于是对于一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt;，有 &lt;span class=&#34;math inline&#34;&gt;\(\dfrac{Z_{i + 1}}{i} + 1\)&lt;/span&gt; 个合法的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的取值。当然由于 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 要非空，所以 &lt;span class=&#34;math inline&#34;&gt;\(Z_{i + 1}\)&lt;/span&gt; 要与 &lt;span class=&#34;math inline&#34;&gt;\(n - i - 1\)&lt;/span&gt; 取 &lt;span class=&#34;math inline&#34;&gt;\(\min\)&lt;/span&gt;。至此，合法的 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的个数得到了解决。下面的问题就是 &lt;span class=&#34;math inline&#34;&gt;\(F(A)\le F(C)\)&lt;/span&gt; 的限定。&lt;/p&gt;
&lt;p&gt;现在我们考虑 &lt;span class=&#34;math inline&#34;&gt;\(F(C)\)&lt;/span&gt;。很明显，其为整串除掉了长度为 &lt;span class=&#34;math inline&#34;&gt;\(ik\)&lt;/span&gt; 的前缀之后得到的后缀。现在分 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的奇偶性讨论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为奇数时，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(F(C) = F(\mathrm{suf}(i + 1))\)&lt;/span&gt;，因为从第二个重复的 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 一直到第 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 是不产生贡献的。这样的 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 一共有 &lt;span class=&#34;math inline&#34;&gt;\(\left\lceil\dfrac{\frac{Z_{i + 1}}{i} + 1}{2}\right\rceil\)&lt;/span&gt; 个。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为偶数时，不难发现 &lt;span class=&#34;math inline&#34;&gt;\(F(C) = F(S)\)&lt;/span&gt;，因为 &lt;span class=&#34;math inline&#34;&gt;\(F((AB)^k)\)&lt;/span&gt; 必然为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。这样的 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 有 &lt;span class=&#34;math inline&#34;&gt;\(\left\lfloor\dfrac{\frac{Z_{i + 1}}{i} + 1}{2}\right\rfloor\)&lt;/span&gt; 个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来考虑合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;。其实 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 也就是一个长度小于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的前缀。所以大力分类一波：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为奇数时合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的数量即为 &lt;span class=&#34;math inline&#34;&gt;\(1\le j&amp;lt; i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{pre}(j))\le F(\mathrm{suf}(i + 1))\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的个数。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为偶数时合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的数量即为 &lt;span class=&#34;math inline&#34;&gt;\(1\le j &amp;lt; i\)&lt;/span&gt; 使得 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{pre}(j))\le F(S)\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的个数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分别用乘法原理合并即可。然后至于上面提到的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，可以预先处理出所有的 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{suf}(j))\)&lt;/span&gt;，然后边枚举 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 就边计算 &lt;span class=&#34;math inline&#34;&gt;\(F(\mathrm{pre}(j))\)&lt;/span&gt; 了。&lt;/p&gt;
&lt;h3 id=&#34;implementation-1&#34;&gt;Implementation&lt;/h3&gt;
&lt;p&gt;对于查询 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 为奇数时合法的 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 的数量，这里使用树状数组以减少编写难度。树状数组带来的常数很小，可以忽略不计。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define clr&lt;/span&gt;(a)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;memset(a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = (&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; z[maxn], n, fsuf[maxn], buc[&lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define lowbit&lt;/span&gt;(x)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(x&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;amp;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;-x)&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t[&lt;span class=&#34;dv&#34;&gt;27&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x &amp;lt;= &lt;span class=&#34;dv&#34;&gt;26&lt;/span&gt;; x += lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++t[x];&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ret = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (; x; x -= lowbit(x))&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ret += t[x];&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; T;&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;T);&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (T--)&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        n = strlen(s + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        clr(z), clr(fsuf), clr(buc);&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        z[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = n;&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, l = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, r = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;; i &amp;lt;= n; ++i)&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i &amp;lt;= r) z[i] = min(z[i - l + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], r - i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (i + z[i] &amp;lt;= n &amp;amp;&amp;amp; s[i + z[i]] == s[z[i] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) ++z[i];&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i + z[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &amp;gt; r) l = i, r = i + z[i] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;//计算 z 数组&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        DEC(i, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;] &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) fsuf[i] = fsuf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; fsuf[i] = fsuf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;//处理出所有后缀的 F 值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        clr(buc), clr(t);&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; f = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//当前前缀的 f 值&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll ans = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-64&#34;&gt;&lt;a href=&#34;#cb2-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f += ((buc[s[i] - &lt;span class=&#34;ch&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;] &amp;amp; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) ? &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; : -&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-65&#34;&gt;&lt;a href=&#34;#cb2-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; totk = min(z[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], n - i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) / i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-66&#34;&gt;&lt;a href=&#34;#cb2-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot0 = totk &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, tot1 = (totk + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//k 为偶数/奇数的数量&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-67&#34;&gt;&lt;a href=&#34;#cb2-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ans += &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * tot0 * query(fsuf[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;bu&#34;&gt;ll&lt;/span&gt; * tot1 * query(fsuf[i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-68&#34;&gt;&lt;a href=&#34;#cb2-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            add(f + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-69&#34;&gt;&lt;a href=&#34;#cb2-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;co&#34;&gt;//树状数组传进去的要全部加 1 是因为会有 0 的贡献&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-70&#34;&gt;&lt;a href=&#34;#cb2-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb2-71&#34;&gt;&lt;a href=&#34;#cb2-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, ans);&lt;/span&gt;
&lt;span id=&#34;cb2-72&#34;&gt;&lt;a href=&#34;#cb2-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-73&#34;&gt;&lt;a href=&#34;#cb2-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-74&#34;&gt;&lt;a href=&#34;#cb2-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;t3-移球游戏&#34;&gt;T3 移球游戏&lt;/h2&gt;
&lt;p&gt;NOIP 考了构造/jk。今天补题。第一次做这种难度的构造题？&lt;/p&gt;
&lt;h3 id=&#34;description-1&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n + 1\)&lt;/span&gt; 个柱子上 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个柱子有打乱排的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 种颜色的球，每个柱子上面有 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 个，构造出一种步数在 &lt;span class=&#34;math inline&#34;&gt;\(820000\)&lt;/span&gt; 内的方案使得每个柱子上颜色相同。 每次操作只能为拿某柱子最顶端的一个球放到另一个柱子的最顶端，并且始终保持一个柱子上球个数不超过 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;法一&#34;&gt;法一&lt;/h3&gt;
&lt;h2 id=&#34;t4-微信步数&#34;&gt;T4 微信步数&lt;/h2&gt;
&lt;p&gt;我都不敢相信这是 NOIP 题。。。&lt;/p&gt;
&lt;h3 id=&#34;description-2&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 维空间的场地，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 维坐标限制在 &lt;span class=&#34;math inline&#34;&gt;\([1, w_i]\)&lt;/span&gt; 中。某人跑步，在接下来的 &lt;span class=&#34;math inline&#34;&gt;\(\prod w_i\)&lt;/span&gt; 天中每天从一个不同坐标出发，按照如下规则跑步：&lt;/p&gt;
&lt;p&gt;一共 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 步，每步用 &lt;span class=&#34;math inline&#34;&gt;\((c_i, d_i)\)&lt;/span&gt; 描述，表示在第 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 维移动 &lt;span class=&#34;math inline&#34;&gt;\(d_i\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(d_i\in\{-1, 1\}\)&lt;/span&gt;），重复如上路线直到走出场地。&lt;/p&gt;
&lt;p&gt;问这些天内走了多少步，答案对 &lt;span class=&#34;math inline&#34;&gt;\(10^9 + 7\)&lt;/span&gt; 取模，若存在某一天会在场内循环，输出 &lt;span class=&#34;math inline&#34;&gt;\(-1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 5\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le k\le 10\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le w_i\le 10^9\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(d_i\in\{-1, 1\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;solution-1&#34;&gt;Solution&lt;/h3&gt;
</description>
        </item>
        
    </channel>
</rss>

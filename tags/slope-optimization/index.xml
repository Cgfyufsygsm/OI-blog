<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>斜率优化 on 清烛的博客</title>
        <link>https://oi.imyangty.com/tags/slope-optimization/</link>
        <description>Recent content in 斜率优化 on 清烛的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Mon, 22 Aug 2022 10:32:46 +0800</lastBuildDate><atom:link href="https://oi.imyangty.com/tags/slope-optimization/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>P5468 [NOI2019] 回家路线</title>
        <link>https://oi.imyangty.com/sol-luogu-p5468/</link>
        <pubDate>Mon, 22 Aug 2022 10:32:46 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p5468/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg01.webp" alt="Featured image of post P5468 [NOI2019] 回家路线" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;猫国的铁路系统中有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个站点，从 &lt;span class=&#34;math inline&#34;&gt;\(1 - n\)&lt;/span&gt; 编号。小猫准备从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 号站点出发，乘坐列车回到猫窝所在的 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 号站点。它查询了能够乘坐的列车，这些列车共 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 班，从&lt;span class=&#34;math inline&#34;&gt;\(1 - m\)&lt;/span&gt;编号。小猫将在 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt; 时刻到达 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 号站点。对于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号列车，它将在时刻 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 从站点 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 出发，在时刻 &lt;span class=&#34;math inline&#34;&gt;\(q_i\)&lt;/span&gt; 直达站点 &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;，小猫只能在时刻 &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; 上 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号列车，也只能在时刻 &lt;span class=&#34;math inline&#34;&gt;\(q_i\)&lt;/span&gt; 下 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 号列车。小猫可以通过多次换乘到达 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 号站点。一次换乘是指对于两班列车，假设分别为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;号与 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 号列车，若 &lt;span class=&#34;math inline&#34;&gt;\(y_u = x_v\)&lt;/span&gt; 并且 &lt;span class=&#34;math inline&#34;&gt;\(q_u \leq p_v\)&lt;/span&gt;，那么小猫可以乘坐完 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 号列车后在 &lt;span class=&#34;math inline&#34;&gt;\(y_u\)&lt;/span&gt; 号站点等待 &lt;span class=&#34;math inline&#34;&gt;\(p_v - q_u\)&lt;/span&gt; 个时刻，并在时刻 &lt;span class=&#34;math inline&#34;&gt;\(p_v\)&lt;/span&gt; 乘坐 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 号列车。&lt;/p&gt;
&lt;p&gt;若小猫共乘坐了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 班列车，依次乘坐的列车编号可用序列 &lt;span class=&#34;math inline&#34;&gt;\(s_1, s_2, \cdots , s_k\)&lt;/span&gt;表示。该方案被称作一条可行的回家路线，当且仅当它满足下列两个条件：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x_{s1} = 1\)&lt;/span&gt; , &lt;span class=&#34;math inline&#34;&gt;\(y_{sk} = n\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于所有 &lt;span class=&#34;math inline&#34;&gt;\(j (1 \leq j &amp;lt; k)\)&lt;/span&gt;，满足 &lt;span class=&#34;math inline&#34;&gt;\(y_{sj} = x_{s_{j+1}}\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(q_{sj}\leq p_{s_{j+1}}\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于该回家路线，小猫得到的烦躁值将为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
q_{s_k}+(A\times p_{s_1}^2+B\times p_{s_1}+C)+\sum_{j=1}^{k-1}(A(p_{s_{j+1}}-q_{s_j})^2+B(p_{s_{j+1}}-q_{s_j})+C)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;小猫想让自己的烦躁值尽量小，请你帮它求出所有可行的回家路线中，能得到的最小的烦躁值。题目保证至少存在一条可行的回家路线。&lt;/p&gt;
&lt;p&gt;对于所有测试点：&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 10^5,1\le m\le 2\times 10^5,0 \le A \le 10 , 0 \le B, C \le 10^6,1 \le x_i, y_i \le n , x_i \neq y_i , 0 \le p_i &amp;lt; q_i \le 10^3\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;首先考虑一个 dp：设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i,j}\)&lt;/span&gt; 表示在 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 时刻到达 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 点的最小答案。&lt;/p&gt;
&lt;p&gt;那么对于一个 &lt;span class=&#34;math inline&#34;&gt;\((x,p)\to (y,q)\)&lt;/span&gt; 的路径，有如下转移： &lt;span class=&#34;math display&#34;&gt;\[
f_{y,q}\leftarrow \min_{q&amp;#39;\le p}\{f_{x, q&amp;#39;} + A(p-q&amp;#39;)^2 + B(p - q&amp;#39;) + C\}
\]&lt;/span&gt; 拆开一下发现就是 &lt;span class=&#34;math display&#34;&gt;\[
f_{y,q} \leftarrow \min_{q&amp;#39;\le p}\{f_{x, q&amp;#39;} + Aq&amp;#39;^2 - Bq&amp;#39; - 2Apq&amp;#39;\} +  Ap^2 + Bp + C
\]&lt;/span&gt; 一脸斜率优化的模样&lt;img src=&#34;https://啧.tk/qd&#34; /&gt;。&lt;/p&gt;
&lt;p&gt;好于是我们考虑 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 何时优于 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_{i} + Ai^2- Bi -2Api &amp;amp;&amp;lt; f_j + Aj^2-Bj-2Apj\\
\frac{(f_i + Ai^2 - Bi) - (f_j + Aj^2 - Bj)}{2Ai-2Aj}&amp;amp;&amp;lt;p
\end{aligned}
\]&lt;/span&gt; 横坐标单调，斜率 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 单调，直接单调队列斜率优化即可。&lt;/p&gt;
&lt;p&gt;额但是怎么转移呢。。。。。。按照 &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 排序然后依次转移应该可以吧？应该可以吧？好像没啥问题捏。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CF932F Escape Through Leaf</title>
        <link>https://oi.imyangty.com/sol-cf932f/</link>
        <pubDate>Thu, 02 Dec 2021 20:58:55 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-cf932f/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg7.webp" alt="Featured image of post CF932F Escape Through Leaf" /&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个点的树，每个点有点权 &lt;span class=&#34;math inline&#34;&gt;\((a_i, b_i)\)&lt;/span&gt;。每次可以从 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 跳到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 子树的任意一个子节点 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 上，费用为 &lt;span class=&#34;math inline&#34;&gt;\(a_u\times b_v\)&lt;/span&gt;。问每个节点跳跃到每个叶子节点的费用最小值。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le |a_i|, |b_i|\le 10^5\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;容易设计出一个 dp 状态 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 表示节点 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的答案。然后即有如下转移： &lt;span class=&#34;math display&#34;&gt;\[
f_u = \min_v\{f_v + a_ub_v\}
\]&lt;/span&gt; 特别地，若 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为叶子节点，则 &lt;span class=&#34;math inline&#34;&gt;\(f_u = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;然而这样做是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的，考虑优化。&lt;/p&gt;
&lt;p&gt;不难发现，如果我们将 &lt;span class=&#34;math inline&#34;&gt;\(a_u\)&lt;/span&gt; 看作一个变量，则 &lt;span class=&#34;math inline&#34;&gt;\(f_v + a_ub_v\)&lt;/span&gt; 就是一个关于 &lt;span class=&#34;math inline&#34;&gt;\(a_u\)&lt;/span&gt; 的一次函数，维护一车一次函数的最值——李超树。（回忆 &lt;span class=&#34;math inline&#34;&gt;\(0\le |a_i|\le 10^5\)&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;于是，线段树合并维护一下即可。&lt;/p&gt;
&lt;p&gt;注意，李超树写动态开点的时候是无需平移下标的。&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; ll = &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, N = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; ll INF = &lt;span class=&#34;bn&#34;&gt;0x7fffffffffffffff&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, root[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll a[maxn], b[maxn], f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;vector&amp;lt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&amp;gt; G[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tot = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, ls[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], rs[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;], t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll calc(ll x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b[u] * x + f[u];}&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!k) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; k = ++tot, t[k] = u, &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt;();&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(M, t[k]) &amp;gt; calc(M, u)) swap(u, t[k]);&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(i, t[k]) &amp;lt;= calc(i, u) &amp;amp;&amp;amp; calc(j, t[k]) &amp;lt;= calc(j, u)) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (calc(i, t[k]) &amp;gt; calc(i, u)) insert(ls[k], i, M, u);&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; insert(rs[k], M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, u);&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; merge(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j) {&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!x || !y) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(x, i, j, t[y]);&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ls[x] = merge(ls[x], ls[y], i, M);&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    rs[x] = merge(rs[x], rs[y], M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j);&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, ll x) {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!k) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; INF;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; min(calc(x, t[k]), x &amp;lt;= M ? query(ls[k], i, M, x) : query(rs[k], M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, x));&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa) {&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;kw&#34;&gt;auto&lt;/span&gt; v : G[u]) {&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (v == fa) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dfs(v, u);&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        root[u] = merge(root[u], root[v], -N, N);&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[u] = query(root[u], -N, N, a[u]);&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (f[u] == INF) f[u] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(root[u], -N, N, u);&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    read(n);&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(a[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) read(b[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, v; read(u, v);&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        G[u].push_back(v), G[v].push_back(u);&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    dfs(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) print(f[i], &lt;span class=&#34;ch&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; output(), &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P2305 [NOI2014] 购票</title>
        <link>https://oi.imyangty.com/sol-luogu-p2305/</link>
        <pubDate>Sun, 11 Jul 2021 21:21:18 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p2305/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg43.webp" alt="Featured image of post P2305 [NOI2014] 购票" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;一棵 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个节点，根为 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的有根树（&lt;span class=&#34;math inline&#34;&gt;\(n\le 2\times 10^5\)&lt;/span&gt;），给出每条边的长度 &lt;span class=&#34;math inline&#34;&gt;\(s_u\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为儿子节点）。&lt;/p&gt;
&lt;p&gt;现要从 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 节点前往 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;，方法为选择一个祖先 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;，支付购票的费用，乘坐交通工具到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;。然后重复以上过程直到到达 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对于任何一个 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt;，有一个交通工具的距离限制 &lt;span class=&#34;math inline&#34;&gt;\(l_u\)&lt;/span&gt;，即 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 的距离不超过 &lt;span class=&#34;math inline&#34;&gt;\(l_u\)&lt;/span&gt; 时才可以乘坐交通工具。票价为 &lt;span class=&#34;math inline&#34;&gt;\(p_u\times d + q_u\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对于每个 &lt;span class=&#34;math inline&#34;&gt;\(u\in [2,n]\)&lt;/span&gt;，求出其到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的最小票价费用。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的最小费用。设 &lt;span class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的祖先，&lt;span class=&#34;math inline&#34;&gt;\(d_u\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的距离，则有转移： &lt;span class=&#34;math display&#34;&gt;\[
f_u = \min_{d_u - d_v\le l_u}\{f_v + p_u(d_u - d_v) + q_u\}
\]&lt;/span&gt; 化开： &lt;span class=&#34;math display&#34;&gt;\[
f_u = \min\{f_v - p_ud_v\} + p_ud_u + q_u
\]&lt;/span&gt; 考虑转移点 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 何时优于 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_i - p_ud_i &amp;amp;&amp;lt; f_j - p_ud_j\\
f_i - f_j &amp;amp;&amp;lt; p_u(d_i - d_j)\\
\frac{f_i - f_j}{d_i - d_j} &amp;amp;&amp;lt; p_u
\end{aligned}
\]&lt;/span&gt; 所以斜率优化的形式就出来了。&lt;/p&gt;
&lt;p&gt;但是这题的转移不是在一个序列上完成的，所以我们需要用一个栈来维护沿途经过的点，而且注意到斜率 &lt;span class=&#34;math inline&#34;&gt;\(p_u\)&lt;/span&gt; 不单调，故使用二分维护。&lt;/p&gt;
&lt;p&gt;然后。。。交上去就爆零了。。。&lt;/p&gt;
&lt;p&gt;为什么呢？&lt;/p&gt;
&lt;p&gt;考虑 &lt;span class=&#34;math inline&#34;&gt;\(A, B, C, D\)&lt;/span&gt; 四个决策点，其中 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 由于不凸被弹出了，但是当 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 不能作为转移点的时候 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 就可能合法了。&lt;/p&gt;
&lt;p&gt;怎么做？考虑点分治。&lt;/p&gt;
&lt;p&gt;假设目前正在处理一个以 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 为根的子树。&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;找到重心 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;把 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; 的这段连通块递归处理。&lt;/li&gt;
&lt;li&gt;将 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 子树中除 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 以外的点按照其能到达的祖先的最小深度从大到小排序。&lt;/li&gt;
&lt;li&gt;依次处理这些节点，把新能达到的祖先加进凸壳中，单调栈维护一下，然后二分最优决策点。&lt;/li&gt;
&lt;li&gt;依次分治 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 的子树们。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;复杂度 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log^2n)\)&lt;/span&gt;。需要注意的细节很多，注意不要写错。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define GO&lt;/span&gt;(u)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;head[u],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i];&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;nxt[i],&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;v&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;to[i])&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; buf[maxc], *p1 = buf, *p2 = buf;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p1 == p2 &amp;amp;&amp;amp; (p2 = (p1 = buf) + fread(buf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), p1 == p2) ? EOF : *p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    ll read() {&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll min(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll max(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;2e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, head[maxn], to[maxn], nxt[maxn], cnte, fa[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll p[maxn], q[maxn], dis[maxn], lim[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; add(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    to[++cnte] = v;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    nxt[cnte] = head[u];&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head[u] = cnte;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxp[maxn], root, vis[maxn], size[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getRoot(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    size[u] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxp[u] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u) {&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (vis[v]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getRoot(v, m);&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        size[u] += size[v];&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxp[u] = max(maxp[u], size[v]);&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    maxp[u] = max(maxp[u], m - size[u]);&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (maxp[u] &amp;lt;= maxp[root]) root = u;&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getDis(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u) {&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[v] += dis[u];&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        getDis(v);&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; son[maxn], cnt, stk[maxn], top;&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; getSon(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    son[++cnt] = u;&lt;/span&gt;
&lt;span id=&#34;cb1-72&#34;&gt;&lt;a href=&#34;#cb1-72&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(u)&lt;/span&gt;
&lt;span id=&#34;cb1-73&#34;&gt;&lt;a href=&#34;#cb1-73&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!vis[v]) getSon(v);&lt;/span&gt;
&lt;span id=&#34;cb1-74&#34;&gt;&lt;a href=&#34;#cb1-74&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-75&#34;&gt;&lt;a href=&#34;#cb1-75&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-76&#34;&gt;&lt;a href=&#34;#cb1-76&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-77&#34;&gt;&lt;a href=&#34;#cb1-77&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il &lt;span class=&#34;dt&#34;&gt;bool&lt;/span&gt; cmp(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;/span&gt;
&lt;span id=&#34;cb1-78&#34;&gt;&lt;a href=&#34;#cb1-78&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; dis[u] - lim[u] &amp;gt; dis[v] - lim[v];&lt;/span&gt;
&lt;span id=&#34;cb1-79&#34;&gt;&lt;a href=&#34;#cb1-79&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-80&#34;&gt;&lt;a href=&#34;#cb1-80&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-81&#34;&gt;&lt;a href=&#34;#cb1-81&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db slope(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; db(f[u] - f[v]) / db(dis[u] - dis[v]);}&lt;/span&gt;
&lt;span id=&#34;cb1-82&#34;&gt;&lt;a href=&#34;#cb1-82&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-83&#34;&gt;&lt;a href=&#34;#cb1-83&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-84&#34;&gt;&lt;a href=&#34;#cb1-84&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (top &amp;gt;= &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &amp;amp;&amp;amp; slope(stk[top - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], stk[top]) &amp;lt;= slope(stk[top], u)) --top;&lt;/span&gt;
&lt;span id=&#34;cb1-85&#34;&gt;&lt;a href=&#34;#cb1-85&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    stk[++top] = u;&lt;/span&gt;
&lt;span id=&#34;cb1-86&#34;&gt;&lt;a href=&#34;#cb1-86&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-87&#34;&gt;&lt;a href=&#34;#cb1-87&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-88&#34;&gt;&lt;a href=&#34;#cb1-88&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-89&#34;&gt;&lt;a href=&#34;#cb1-89&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; query(db x) {&lt;/span&gt;
&lt;span id=&#34;cb1-90&#34;&gt;&lt;a href=&#34;#cb1-90&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, r = top, mid, ret = top;&lt;/span&gt;
&lt;span id=&#34;cb1-91&#34;&gt;&lt;a href=&#34;#cb1-91&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt; r) {&lt;/span&gt;
&lt;span id=&#34;cb1-92&#34;&gt;&lt;a href=&#34;#cb1-92&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-93&#34;&gt;&lt;a href=&#34;#cb1-93&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (slope(stk[mid], stk[mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt;= x) r = mid, ret = mid;&lt;/span&gt;
&lt;span id=&#34;cb1-94&#34;&gt;&lt;a href=&#34;#cb1-94&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-95&#34;&gt;&lt;a href=&#34;#cb1-95&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-96&#34;&gt;&lt;a href=&#34;#cb1-96&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; stk[ret];&lt;/span&gt;
&lt;span id=&#34;cb1-97&#34;&gt;&lt;a href=&#34;#cb1-97&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-98&#34;&gt;&lt;a href=&#34;#cb1-98&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-99&#34;&gt;&lt;a href=&#34;#cb1-99&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; solve(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; m) {&lt;/span&gt;
&lt;span id=&#34;cb1-100&#34;&gt;&lt;a href=&#34;#cb1-100&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (m == &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-101&#34;&gt;&lt;a href=&#34;#cb1-101&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    root = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, maxp[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = n, getRoot(u, m);&lt;/span&gt;
&lt;span id=&#34;cb1-102&#34;&gt;&lt;a href=&#34;#cb1-102&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = root;&lt;/span&gt;
&lt;span id=&#34;cb1-103&#34;&gt;&lt;a href=&#34;#cb1-103&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(x) vis[v] = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m -= size[v];&lt;/span&gt;
&lt;span id=&#34;cb1-104&#34;&gt;&lt;a href=&#34;#cb1-104&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(u, m);&lt;/span&gt;
&lt;span id=&#34;cb1-105&#34;&gt;&lt;a href=&#34;#cb1-105&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cnt = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-106&#34;&gt;&lt;a href=&#34;#cb1-106&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(x) getSon(v);&lt;/span&gt;
&lt;span id=&#34;cb1-107&#34;&gt;&lt;a href=&#34;#cb1-107&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(son + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, son + cnt + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cmp);&lt;/span&gt;
&lt;span id=&#34;cb1-108&#34;&gt;&lt;a href=&#34;#cb1-108&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-109&#34;&gt;&lt;a href=&#34;#cb1-109&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = x;&lt;/span&gt;
&lt;span id=&#34;cb1-110&#34;&gt;&lt;a href=&#34;#cb1-110&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    top = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-111&#34;&gt;&lt;a href=&#34;#cb1-111&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, cnt) {&lt;/span&gt;
&lt;span id=&#34;cb1-112&#34;&gt;&lt;a href=&#34;#cb1-112&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; y = son[i];&lt;/span&gt;
&lt;span id=&#34;cb1-113&#34;&gt;&lt;a href=&#34;#cb1-113&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (j != fa[u] &amp;amp;&amp;amp; dis[j] &amp;gt;= dis[y] - lim[y]) insert(j), j = fa[j];&lt;/span&gt;
&lt;span id=&#34;cb1-114&#34;&gt;&lt;a href=&#34;#cb1-114&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (top) {&lt;/span&gt;
&lt;span id=&#34;cb1-115&#34;&gt;&lt;a href=&#34;#cb1-115&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = query(p[y]);&lt;/span&gt;
&lt;span id=&#34;cb1-116&#34;&gt;&lt;a href=&#34;#cb1-116&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[y] = min(f[y], f[x] + p[y] * (dis[y] - dis[x]) + q[y]);&lt;/span&gt;
&lt;span id=&#34;cb1-117&#34;&gt;&lt;a href=&#34;#cb1-117&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-118&#34;&gt;&lt;a href=&#34;#cb1-118&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-119&#34;&gt;&lt;a href=&#34;#cb1-119&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-120&#34;&gt;&lt;a href=&#34;#cb1-120&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    GO(x) solve(v, size[v]);&lt;/span&gt;
&lt;span id=&#34;cb1-121&#34;&gt;&lt;a href=&#34;#cb1-121&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-122&#34;&gt;&lt;a href=&#34;#cb1-122&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-123&#34;&gt;&lt;a href=&#34;#cb1-123&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-124&#34;&gt;&lt;a href=&#34;#cb1-124&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-125&#34;&gt;&lt;a href=&#34;#cb1-125&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), read();&lt;/span&gt;
&lt;span id=&#34;cb1-126&#34;&gt;&lt;a href=&#34;#cb1-126&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-127&#34;&gt;&lt;a href=&#34;#cb1-127&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        add(fa[i] = read(), i);&lt;/span&gt;
&lt;span id=&#34;cb1-128&#34;&gt;&lt;a href=&#34;#cb1-128&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        dis[i] = read(), p[i] = read(), q[i] = read(), lim[i] = read();&lt;/span&gt;
&lt;span id=&#34;cb1-129&#34;&gt;&lt;a href=&#34;#cb1-129&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = &lt;span class=&#34;fl&#34;&gt;1e18&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-130&#34;&gt;&lt;a href=&#34;#cb1-130&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-131&#34;&gt;&lt;a href=&#34;#cb1-131&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    getDis(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-132&#34;&gt;&lt;a href=&#34;#cb1-132&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    solve(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n);&lt;/span&gt;
&lt;span id=&#34;cb1-133&#34;&gt;&lt;a href=&#34;#cb1-133&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-134&#34;&gt;&lt;a href=&#34;#cb1-134&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-135&#34;&gt;&lt;a href=&#34;#cb1-135&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P1721 [NOI2016] 国王饮水记</title>
        <link>https://oi.imyangty.com/sol-luogu-p1721/</link>
        <pubDate>Sun, 11 Jul 2021 14:24:55 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p1721/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg35.webp" alt="Featured image of post P1721 [NOI2016] 国王饮水记" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;给定序列 &lt;span class=&#34;math inline&#34;&gt;\(\{h_i\}\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(1\le h_i\le 10^5\)&lt;/span&gt; 且 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt; 互不相同），进行至多 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次操作，每次操作选定一些 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt; 然后将这些 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt; 赋为他们的平均值，求最大的 &lt;span class=&#34;math inline&#34;&gt;\(h_1\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\le 8000\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k\le 10^9\)&lt;/span&gt;，保留 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 位小数（&lt;span class=&#34;math inline&#34;&gt;\(p\le 3000\)&lt;/span&gt;）。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;神仙题，看了很久，都没有头绪。面对这种问题我们先思考性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性质一：&lt;strong&gt;高度低于 &lt;span class=&#34;math inline&#34;&gt;\(h_1\)&lt;/span&gt; 的肯定是没有用的&lt;/strong&gt;，为什么？拖后腿啊，肯定不要，一开始就先把小于 &lt;span class=&#34;math inline&#34;&gt;\(h_1\)&lt;/span&gt; 的 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt; 删掉。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据这个性质，我们先把高度低于 &lt;span class=&#34;math inline&#34;&gt;\(h_1\)&lt;/span&gt; 的水箱删掉，然后考虑别的性质。&lt;/p&gt;
&lt;p&gt;现在先想想：如果有 &lt;span class=&#34;math inline&#34;&gt;\(h_1 &amp;lt; h_2 &amp;lt; h_3\)&lt;/span&gt;，怎么合并会最优？&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{h_1 + h_2 + h_3}{3}\)&lt;/span&gt; 肯定是不够优的（代数据可得），&lt;span class=&#34;math inline&#34;&gt;\(\dfrac12\dfrac{(h_1 + h_2)}2 + \dfrac12h_3 = \dfrac14h_1 + \dfrac14h_2 + \dfrac12 h_3 &amp;gt; \dfrac14h_1 + \dfrac14h_3 + \dfrac12h_2\)&lt;/span&gt;。说明两两合并比三三合并优，且合并要从小往大。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性质二：合并要从小往大合并&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后根据这种方法，最多最多只用合并 &lt;span class=&#34;math inline&#34;&gt;\(n - 1\)&lt;/span&gt; 次，所以 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 过大是没有用的，可以看作 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 同阶。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性质三：合并的区间一定连续&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不然的话把左边的往右边移肯定是更优的。&lt;/p&gt;
&lt;p&gt;于是可以设状态了：&lt;span class=&#34;math inline&#34;&gt;\(f_{i, j}\)&lt;/span&gt; 表示第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 次联通，最后一次联通到 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的最大答案。记排序过 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt; 的前缀和为 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt;，则转移： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, j} = \max_{i - 1\le k&amp;lt; j}\left\{\frac{f_{i - 1, k} + s_j - s_k}{j - k + 1}\right\}
\]&lt;/span&gt; 右边这坨式子，就很像 &lt;span class=&#34;math inline&#34;&gt;\((j, s_j)\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\((k - 1, s_k - f_{i - 1, k})\)&lt;/span&gt; 的斜率。因此维护一个下凸壳，然后打表发现决策单调性，所以直接单调队列上去。&lt;/p&gt;
&lt;p&gt;后面用的结论太难了，不太会证。&lt;/p&gt;
&lt;p&gt;但是可以保存决策点，然后再用高精度类算一遍答案。就可以了。&lt;/p&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;p&gt;为了避免精度出问题，一开始把所有的 &lt;span class=&#34;math inline&#34;&gt;\(h_i\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(i &amp;gt; 1\)&lt;/span&gt;）先减去 &lt;span class=&#34;math inline&#34;&gt;\(h_1\)&lt;/span&gt;，最后计算的时候再加回来即可。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; DecimalLib;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cin;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;cout;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;endl;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;8192&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; h[maxn], s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, k, p;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;struct&lt;/span&gt; Point {&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db x, y;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;} pt[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db slope(Point &amp;amp;a, Point &amp;amp;b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (a.y - b.y) / (a.x - b.x);}&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db f[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;][maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;short&lt;/span&gt; g[maxn][maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;Decimal dfs(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j) {&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; Decimal(h[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; pos = g[i][j];&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Decimal res = dfs(i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pos), tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    tmp = res + (s[j] - s[pos]);&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    res = tmp / (j - pos + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; k &amp;gt;&amp;gt; p;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; tmp = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x; cin &amp;gt;&amp;gt; x;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (x &amp;lt;= h[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;cf&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        h[++tmp] = x;&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = tmp;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    k = k &amp;lt; n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; ? k : n - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(h + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, h + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) h[i] -= h[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], s[i] = s[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + h[i];&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; c = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Point now;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k) {&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c ^= &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[head = tail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        pt[i].x = i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pt[i].y = s[i] - f[c ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][i];&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(j, i + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            now.x = j, now.y = s[j];&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(pt[q[head]], now) &amp;lt; slope(pt[q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]], now)) ++head;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[c][j] = slope(pt[q[head]], now);&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            g[i][j] = q[head];&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            pt[j].x = j - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, pt[j].y = s[j] - f[c ^ &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;][j];&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(pt[q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]], pt[q[tail]]) &amp;gt; slope(pt[q[tail]], pt[j])) --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++tail] = j;&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) h[i] += h[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], s[i] = s[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + h[i];&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    Decimal ans = dfs(k, n);&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    cout &amp;lt;&amp;lt; ans.to_string(p) &amp;lt;&amp;lt; endl;&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P4027 [NOI2007] 货币兑换</title>
        <link>https://oi.imyangty.com/sol-luogu-p4027/</link>
        <pubDate>Fri, 09 Jul 2021 16:19:49 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p4027/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg65.webp" alt="Featured image of post P4027 [NOI2007] 货币兑换" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;一家金券交易所。有 A 和 B 两种金券。第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天的价值分别是 &lt;span class=&#34;math inline&#34;&gt;\(A_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B_i\)&lt;/span&gt;（元/单位金券）。金券的个数可以是实数。&lt;/p&gt;
&lt;p&gt;交易方法有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顾客将名下 &lt;span class=&#34;math inline&#34;&gt;\(OP\%\)&lt;/span&gt; 的 A 券和 &lt;span class=&#34;math inline&#34;&gt;\(OP\%\)&lt;/span&gt; 的 B 券卖出，以当天价值兑换人民币（&lt;span class=&#34;math inline&#34;&gt;\(OP\in [0, 100]\)&lt;/span&gt;）。&lt;/li&gt;
&lt;li&gt;顾客支付 &lt;span class=&#34;math inline&#34;&gt;\(IP\)&lt;/span&gt; 元人民币，交易所兑换 &lt;span class=&#34;math inline&#34;&gt;\(IP\)&lt;/span&gt; 元对应的金券给用户，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天 A 券和 B 券的比例为 &lt;span class=&#34;math inline&#34;&gt;\(R_i\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问开始时有 &lt;span class=&#34;math inline&#34;&gt;\(S\)&lt;/span&gt; 元，&lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 天后最多能有多少钱，保留三位小数。&lt;/p&gt;
&lt;p&gt;每天可以多次交易，且存在最优解满足每次卖出操作卖出全部金券，买入操作用完所有人民币。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;首先，题面给了我们非常清楚的提示：要卖出就全部卖出，要买入就全部买入。而数据范围提示了我们的时间复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的。&lt;/p&gt;
&lt;p&gt;因此，我们设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天能获得的最多钱。后效性和最优子结构比较显然，然后考虑转移。一个状态如何得到？无非就是在第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 天用全部的人民币买入金券，然后在第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 天卖掉全部的金券换成人民币。&lt;/p&gt;
&lt;p&gt;第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 天的钱为 &lt;span class=&#34;math inline&#34;&gt;\(f_j\)&lt;/span&gt; 元，第 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 天金券的价格分别为 &lt;span class=&#34;math inline&#34;&gt;\(A_j\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(B_j\)&lt;/span&gt;，A 和 B 的比例应为 &lt;span class=&#34;math inline&#34;&gt;\(R_j\)&lt;/span&gt;。所以设买入的金券 A 的个数为 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，B 的个数为 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;。则 &lt;span class=&#34;math display&#34;&gt;\[
\begin{cases}
xA_j + yB_j = f_j\\
\dfrac x y = R_j
\end{cases}
\]&lt;/span&gt; 不难解得 &lt;span class=&#34;math inline&#34;&gt;\(y = \dfrac{f_j}{R_jA_j + B_j}\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(x = \dfrac{R_jf_j}{R_jA_j + B_j}\)&lt;/span&gt;。卖掉后得到的钱就有了：&lt;span class=&#34;math inline&#34;&gt;\(\dfrac{(A_iR_j + B_i)f_j}{R_jA_j + B_j}\)&lt;/span&gt;。 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \max_{1\le j&amp;lt; i}\left\{\dfrac{(A_iR_j + B_i)f_j}{R_jA_j + B_j}\right\}
\]&lt;/span&gt; 让这个式子变得好看点： &lt;span class=&#34;math display&#34;&gt;\[
f_i = B_i\max\left\{\dfrac{R_jf_j}{R_jA_j + B_j}\rtimes \dfrac{A_i}{B_i}+ \dfrac{f_j}{R_jA_j + B_j}\right\}
\]&lt;/span&gt; 这东西，长得明显就是 &lt;span class=&#34;math inline&#34;&gt;\(y = kx + b\)&lt;/span&gt; 的形式！直接上李超树来做就可以了。&lt;/p&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;p&gt;dp 的初始值为 &lt;span class=&#34;math inline&#34;&gt;\(f_1 = S\)&lt;/span&gt;，然后记得插入初始直线就可以了。&lt;/p&gt;
&lt;p&gt;那么问题来了，李超树里面的坐标是 &lt;span class=&#34;math inline&#34;&gt;\(A_i / B_i\)&lt;/span&gt;，可能为小数。&lt;/p&gt;
&lt;p&gt;我会动态开点：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; db EPS = &lt;span class=&#34;fl&#34;&gt;1e-9&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db a[maxn], b[maxn], r[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db f[maxn], K[maxn], B[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t[maxn], ls[maxn], rs[maxn], cnt, root;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, db X) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; K[i] * X + B[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db max(db a, db b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;/&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;2.0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;ls[k]&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;rs[k]&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(db i, db j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j - i &amp;lt;= EPS) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (!k) k = ++cnt;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = t[k];&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db resu = calc(u, M), resv = calc(v, M);&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (K[u] &amp;gt; K[v]) {&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(i, M, L, v), t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; insert(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, u);&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, v), t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; insert(i, M, L, u);&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db query(db i, db j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, db X) {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db ret = calc(t[k], X);&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (j - i &amp;lt; EPS) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (X &amp;lt;= M) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(ret, query(i, M, L, X));&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(ret, query(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, X));&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%Lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, f + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%Lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%Lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%Lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a + i, b + i, r + i);&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    K[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = (f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * r[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) / (r[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + b[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]), B[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] / (r[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + b[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, root, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = max(f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], b[i] * query(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, root, a[i] / b[i]));&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        K[i] = f[i] * r[i] / (r[i] * a[i] + b[i]), B[i] = f[i] / (r[i] * a[i] + b[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, root, i);&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;co&#34;&gt;//printf(&amp;quot;i %d %.3Lf\n&amp;quot;, i, f[i]);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%.3Lf\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[n]);&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后只有 40 分。。。&lt;/p&gt;
&lt;p&gt;正确的做法是把横坐标 &lt;span class=&#34;math inline&#34;&gt;\(A_i / B_i\)&lt;/span&gt; 离散化，然后再使用李超树来做就绝对不会出现精度问题了。而且常数很小，跑得飞快（比 splay 维护动态凸包和 cdq 分治快得多）&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; db;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db a[maxn], b[maxn], r[maxn], c[maxn], d[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db f[maxn], K[maxn], B[maxn];&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; t[maxn &amp;lt;&amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db calc(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; K[i] * c[u] + B[i];}&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il db max(db a, db b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define M &lt;/span&gt;((i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;+&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;j)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define L &lt;/span&gt;(k&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define R &lt;/span&gt;(L&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;|&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;void&lt;/span&gt; insert(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; v = t[k];&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db resu = calc(u, M), resv = calc(v, M);&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) {&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv) t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (K[u] &amp;gt; K[v]) {&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(i, M, L, v), t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; insert(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, u);&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/span&gt;
&lt;span id=&#34;cb2-36&#34;&gt;&lt;a href=&#34;#cb2-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (resu &amp;gt; resv)&lt;/span&gt;
&lt;span id=&#34;cb2-37&#34;&gt;&lt;a href=&#34;#cb2-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            insert(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, v), t[k] = u;&lt;/span&gt;
&lt;span id=&#34;cb2-38&#34;&gt;&lt;a href=&#34;#cb2-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; insert(i, M, L, u);&lt;/span&gt;
&lt;span id=&#34;cb2-39&#34;&gt;&lt;a href=&#34;#cb2-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-40&#34;&gt;&lt;a href=&#34;#cb2-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-41&#34;&gt;&lt;a href=&#34;#cb2-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-42&#34;&gt;&lt;a href=&#34;#cb2-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-43&#34;&gt;&lt;a href=&#34;#cb2-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;db query(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; u) {&lt;/span&gt;
&lt;span id=&#34;cb2-44&#34;&gt;&lt;a href=&#34;#cb2-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    db ret = calc(t[k], u);&lt;/span&gt;
&lt;span id=&#34;cb2-45&#34;&gt;&lt;a href=&#34;#cb2-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (i == j) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;
&lt;span id=&#34;cb2-46&#34;&gt;&lt;a href=&#34;#cb2-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (u &amp;lt;= M) &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(ret, query(i, M, L, u));&lt;/span&gt;
&lt;span id=&#34;cb2-47&#34;&gt;&lt;a href=&#34;#cb2-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; max(ret, query(M + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, j, R, u));&lt;/span&gt;
&lt;span id=&#34;cb2-48&#34;&gt;&lt;a href=&#34;#cb2-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb2-49&#34;&gt;&lt;a href=&#34;#cb2-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-50&#34;&gt;&lt;a href=&#34;#cb2-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-51&#34;&gt;&lt;a href=&#34;#cb2-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, &amp;amp;n, f + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-52&#34;&gt;&lt;a href=&#34;#cb2-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) scanf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lf&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, a + i, b + i, r + i), c[i] = a[i] / b[i], d[i] = c[i];&lt;/span&gt;
&lt;span id=&#34;cb2-53&#34;&gt;&lt;a href=&#34;#cb2-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(c + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-54&#34;&gt;&lt;a href=&#34;#cb2-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    K[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = (f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * r[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) / (r[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + b[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]), B[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = f[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] / (r[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] * a[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + b[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;
&lt;span id=&#34;cb2-55&#34;&gt;&lt;a href=&#34;#cb2-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    insert(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb2-56&#34;&gt;&lt;a href=&#34;#cb2-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb2-57&#34;&gt;&lt;a href=&#34;#cb2-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = max(f[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], b[i] * query(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;lower_bound(c + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, c + n + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, d[i]) - c));&lt;/span&gt;
&lt;span id=&#34;cb2-58&#34;&gt;&lt;a href=&#34;#cb2-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        K[i] = f[i] * r[i] / (r[i] * a[i] + b[i]), B[i] = f[i] / (r[i] * a[i] + b[i]);&lt;/span&gt;
&lt;span id=&#34;cb2-59&#34;&gt;&lt;a href=&#34;#cb2-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        insert(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, i);&lt;/span&gt;
&lt;span id=&#34;cb2-60&#34;&gt;&lt;a href=&#34;#cb2-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-61&#34;&gt;&lt;a href=&#34;#cb2-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%.3lf\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[n]);&lt;/span&gt;
&lt;span id=&#34;cb2-62&#34;&gt;&lt;a href=&#34;#cb2-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-63&#34;&gt;&lt;a href=&#34;#cb2-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P4072 [SDOI2016]征途</title>
        <link>https://oi.imyangty.com/sol-luogu-p4072/</link>
        <pubDate>Fri, 09 Jul 2021 11:50:19 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p4072/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg67.webp" alt="Featured image of post P4072 [SDOI2016]征途" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;给定一段长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的序列 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt;，划分为 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 段，使得每一段的和的方差最小，输出 &lt;span class=&#34;math inline&#34;&gt;\(m^2\sigma\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(m\le n\le 3000\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;方差的计算公式为 &lt;span class=&#34;math display&#34;&gt;\[
\frac{\sum(X_i - \overline X)^2}{m}
\]&lt;/span&gt; 然后注意到，&lt;span class=&#34;math inline&#34;&gt;\(\overline X = \sum x/ m\)&lt;/span&gt;，可以提前计算出来。我们继续化简一下式子，先同时乘上 &lt;span class=&#34;math inline&#34;&gt;\(m^2\)&lt;/span&gt;，可以发现 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;\frac{\sum_{i = 1}^m (X_i - \overline X)^2}{m}\times m^2\\
=&amp;amp;\sum_{i = 1}^m m(X_i^2 - 2X_i\overline X + \overline X^2)\\
=&amp;amp;\sum_{i = 1}^m (mX_i^2 - 2X_i\sum X + (\sum X)^2 / m)\\
=&amp;amp;\sum_{i = 1}^m (mX_i^2 - 2X_i\sum X) + (\sum X)^2
\end{aligned}
\]&lt;/span&gt; 对于后面一部分 &lt;span class=&#34;math inline&#34;&gt;\((\sum X)^2\)&lt;/span&gt;，可以直接提前计算好，而对于前面这段东西我们需要对其最小化，考虑 dp。&lt;/p&gt;
&lt;p&gt;令 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k}\)&lt;/span&gt; 为前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个路，分成 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 段的最小贡献，则转移不难。直接把 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 做一个前缀和就有： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, k} = \min_j\{f_{j, k - 1} + m(x_i - x_j)^2 - 2(x_i - x_j)x_n\}
\]&lt;/span&gt; 这个方程的状态转移为 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 个状态，总共 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的复杂度 biss 无疑。这个东西长得有点像斜率优化，那化简一下看看能不能优化到 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 转移。&lt;/p&gt;
&lt;p&gt;化简： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_{i, k} &amp;amp;= \min_j \{f_{j, k - 1} + mx_i^2 - 2mx_ix_j + mx_j^2 - 2x_nx_i + 2x_nx_j\}\\
&amp;amp;= \min_j\{f_{j, k - 1} - 2mx_ix_j + mx_j^2 + 2x_nx_j\} + mx_i^2 - 2x_nx_i\\
&amp;amp;= \min_j\{f_{j, k - 1} + 2x_nx_j - 2mx_ix_j + mx_j^2\} + mx_i^2 - 2x_nx_i
\end{aligned}
\]&lt;/span&gt; 考虑决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 何时会优于决策点 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_j + 2x_nx_j - 2mx_ix_j + mx_j^2 &amp;amp;&amp;lt; f_k + 2x_nx_k - 2mx_ix_k + mx_k^2\\
\frac{(f_j + 2x_nx_j + mx_j^2) - (f_k + 2x_nx_k + mx_k^2)}{x_j - x_k} &amp;amp;&amp;lt; 2mx_i
\end{aligned}
\]&lt;/span&gt; 横坐标为 &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt;，单调增，斜率为 &lt;span class=&#34;math inline&#34;&gt;\(2mx_i\)&lt;/span&gt;，也单调增。于是我们可以愉快单调队列。&lt;/p&gt;
&lt;p&gt;但是需要注意的是，为了防止在计算 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, 1}\)&lt;/span&gt; 时从奇奇怪怪的东西转移过来，我们需要提前处理出 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, 1}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;p&gt;开 &lt;code&gt;long long&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO {&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; buf[maxc], *p1 = buf, *p2 = buf;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p1 == p2 &amp;amp;&amp;amp; (p2 = (p1 = buf) + fread(buf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), p1 == p2) ? EOF : *p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;dv&#34;&gt;3005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll x[maxn], f[maxn], g[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll X(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll Y(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; g[i] + &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * x[n] * x[i] + m * x[i] * x[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read();&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) x[i] = read() + x[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) f[i] = m * x[i] * x[i] - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * x[i] * x[n];&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, m) {&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memcpy(g, f, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[head = tail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ll k = &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * m * x[i];&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; Y(q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) - Y(q[head]) &amp;lt;= k * (X(q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) - X(q[head]))) ++head;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;j = q[head];&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = g[j] + m * (x[i] - x[j]) * (x[i] - x[j]) - &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * (x[i] - x[j]) * x[n];&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; (Y(q[tail]) - Y(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])) * (X(i) - X(q[tail])) &amp;gt;= (Y(i) - Y(q[tail])) * (X(q[tail]) - X(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))) --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++tail] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[n] + x[n] * x[n]);&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>CF311B Cats Transport</title>
        <link>https://oi.imyangty.com/sol-cf311b/</link>
        <pubDate>Thu, 01 Jul 2021 22:22:50 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-cf311b/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg63.webp" alt="Featured image of post CF311B Cats Transport" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;Zxr960115 是一个大农场主。他养了 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 只可爱的猫子,雇佣了 &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; 个铲屎官。这里有一条又直又长的道路穿过了农场，有n个山丘坐落在道路周围，编号自左往右从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 到 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。山丘 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 与山丘 &lt;span class=&#34;math inline&#34;&gt;\(i-1\)&lt;/span&gt; 的距离是 &lt;span class=&#34;math inline&#34;&gt;\(D_i\)&lt;/span&gt; 米。铲屎官们住在 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 号山丘。&lt;/p&gt;
&lt;p&gt;一天，猫子们外出玩耍。猫子 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 去山丘 &lt;span class=&#34;math inline&#34;&gt;\(H_i\)&lt;/span&gt; 游玩，在 &lt;span class=&#34;math inline&#34;&gt;\(T_i\)&lt;/span&gt; 时间结束他的游玩，然后在山丘 &lt;span class=&#34;math inline&#34;&gt;\(H_i\)&lt;/span&gt; 傻等铲屎官。铲屎官们必须把所有的猫子带上。每个铲屎官直接从 &lt;span class=&#34;math inline&#34;&gt;\(H_1\)&lt;/span&gt; 走到 &lt;span class=&#34;math inline&#34;&gt;\(H_n\)&lt;/span&gt; ，中间不停下，可以认为不花费时间的把游玩结束的猫子带上。每个铲屎官的速度为一米每单位时间，并且足够强壮来带上任意数量的猫子。&lt;/p&gt;
&lt;p&gt;举个栗子，假装我们有两个山丘( &lt;span class=&#34;math inline&#34;&gt;\(D_2=1\)&lt;/span&gt; )，有一只猫子，他想去山丘 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 玩到时间 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 。然后嘞铲屎官如果在时间 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 或者时间 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 从 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 号山丘出发，他就能抱走猫子。如果他在时间 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 出发那么就不行(猫子还在玩耍)。如果铲屎官在时间 &lt;span class=&#34;math inline&#34;&gt;\(2\)&lt;/span&gt; 出发，猫子就不用等他（&lt;span class=&#34;math inline&#34;&gt;\(\Delta T=0\)&lt;/span&gt;）。如果他在时间 &lt;span class=&#34;math inline&#34;&gt;\(3\)&lt;/span&gt; 出发，猫子就要等他 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 个单位时间。&lt;/p&gt;
&lt;p&gt;你的任务是安排每个铲屎官出发的时间，最小化猫子们等待的时间之和。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(2\le n\le10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le m\le10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le p\le100\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le D_i&amp;lt;10^4\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le H_i\le n\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le t\le10^9\)&lt;/span&gt;，翻译来源洛谷。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;首先很重要的一点就是，我们如果令 &lt;span class=&#34;math inline&#34;&gt;\(t_i = T_i - H_i\)&lt;/span&gt;，则如果一个铲屎官从时间 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; 出发，则第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 只猫等待的时间就是 &lt;span class=&#34;math inline&#34;&gt;\(x - t_i\)&lt;/span&gt;。同时要求 &lt;span class=&#34;math inline&#34;&gt;\(x \ge t_i\)&lt;/span&gt;。对 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt; 做个前缀和，记作 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k}\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 个铲屎官搞定前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 只猫，最小的等待时间。答案即为 &lt;span class=&#34;math inline&#34;&gt;\(f_{m, p}\)&lt;/span&gt;。如何 dp？在计算 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k}\)&lt;/span&gt; 的时候，我们是从 &lt;span class=&#34;math inline&#34;&gt;\(f_{j, k - 1}\)&lt;/span&gt; 转移过来的。所以我们这个铲屎官领走的猫的区间是 &lt;span class=&#34;math inline&#34;&gt;\([j + 1, i]\)&lt;/span&gt;。这些猫猫的等待时间即为用 &lt;span class=&#34;math inline&#34;&gt;\((i - j)\)&lt;/span&gt; 乘上 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt; 再减去 &lt;span class=&#34;math inline&#34;&gt;\(s_i - s_j\)&lt;/span&gt; &lt;span class=&#34;math display&#34;&gt;\[
f_{i,k} = \min_{j}\{f_{j, k - 1} + (i - j)t_i - s_i + s_j\}
\]&lt;/span&gt; 稍加化简（把 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 那维滚掉）： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \min\{f_j - t_ij + s_j\} + it_i - s_i
\]&lt;/span&gt; 考虑决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 何时比 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 优 &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_j - t_ij + s_j &amp;amp;&amp;lt; f_k - t_ik + s_k\\
(f_j + s_j) - (f_k + s_k) &amp;amp; &amp;lt; t_i(j - k)\\
\frac{(f_j + s_j) - (f_k + s_k)}{j - k} &amp;amp; &amp;lt; t_i
\end{aligned}
\]&lt;/span&gt; 所以横坐标 &lt;span class=&#34;math inline&#34;&gt;\(x_i = i\)&lt;/span&gt;，纵坐标 &lt;span class=&#34;math inline&#34;&gt;\(y_i = f_i + s_i\)&lt;/span&gt;，斜率 &lt;span class=&#34;math inline&#34;&gt;\(k = t_i\)&lt;/span&gt;。&lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt; 单调，&lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; 单调，简单使用单调队列维护一个下凸壳就可以了。&lt;/p&gt;
&lt;p&gt;需要注意的细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量写乘法&lt;/li&gt;
&lt;li&gt;记得滚动数组的时候调用的 dp 值。&lt;/li&gt;
&lt;li&gt;&lt;del&gt;式子不要抄错&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; buf[maxc], *p1 = buf, *p2 = buf;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p1 == p2 &amp;amp;&amp;amp; (p2 = (p1 = buf) + fread(buf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), p1 == p2) ? EOF : *p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n, m, p;&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll d[maxn], t[maxn], s[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll f[maxn], g[maxn];&lt;span class=&#34;co&#34;&gt;//f[i][j] 前 i 只猫猫用 j 个铲屎官都搞定了的最小时间花费&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll X(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; i;}&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll Y(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; g[i] + s[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll min(ll a, ll b) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a &amp;lt; b ? a : b;}&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), m = read(), p = read();&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, n) d[i] = d[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + read();&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ll h = read();&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        t[i] = read() - d[h];&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bu&#34;&gt;std::&lt;/span&gt;sort(t + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, t + m + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m) s[i] = s[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + t[i];&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    memset(f, &lt;span class=&#34;bn&#34;&gt;0x3f&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(k, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, p)&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memcpy(g, f, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[head = tail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, m)&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k = t[i];&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; (Y(q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) - Y(q[head])) &amp;lt;= k * (X(q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) - X(q[head]))) ++head;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = q[head];&lt;/span&gt;
&lt;span id=&#34;cb1-64&#34;&gt;&lt;a href=&#34;#cb1-64&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = g[j] - t[i] * j + s[j] + i * t[i] - s[i];&lt;/span&gt;
&lt;span id=&#34;cb1-65&#34;&gt;&lt;a href=&#34;#cb1-65&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; (Y(q[tail]) - Y(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])) * (X(i) - X(q[tail])) &amp;gt;= (Y(i) - Y(q[tail])) * (X(q[tail]) - X(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))) --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-66&#34;&gt;&lt;a href=&#34;#cb1-66&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++tail] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-67&#34;&gt;&lt;a href=&#34;#cb1-67&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-68&#34;&gt;&lt;a href=&#34;#cb1-68&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-69&#34;&gt;&lt;a href=&#34;#cb1-69&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[m]);&lt;/span&gt;
&lt;span id=&#34;cb1-70&#34;&gt;&lt;a href=&#34;#cb1-70&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-71&#34;&gt;&lt;a href=&#34;#cb1-71&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P5785 [SDOI2012]任务安排</title>
        <link>https://oi.imyangty.com/sol-luogu-p5785/</link>
        <pubDate>Thu, 01 Jul 2021 20:22:30 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p5785/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg17.webp" alt="Featured image of post P5785 [SDOI2012]任务安排" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 个任务，从 &lt;span class=&#34;math inline&#34;&gt;\(1, 2, 3, \cdots, n\)&lt;/span&gt; 连续分组完成任务，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个任务需时间 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt;，每批任务开始前机器启动 &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; 时间，完成这批任务的时间是这批任务的 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt; 总和。同一批任务将在同一时刻完成，每个任务的费用是完成时刻乘以一个费用系数 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;确定一个分组方案使总费用最小。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(1\le n\le 3\times 10^5\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(1\le s\le 256\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(|t_i|\le 256\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(0\le c_i\le 2^8\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 表示前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个任务分好组后的最小花费。重新令 &lt;span class=&#34;math inline&#34;&gt;\(T_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt; 的前缀和，&lt;span class=&#34;math inline&#34;&gt;\(C_i\)&lt;/span&gt; 为 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 的前缀和，结合费用提前计算的思想可以得到转移方程 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \min_j\{f_j + T_i(C_i - C_j) + s(C_n - C_j)\}
\]&lt;/span&gt; 稍加化简一下： &lt;span class=&#34;math display&#34;&gt;\[
f_i = \min\{f_j - (T_i + s)C_j\} + sC_n + T_iC_i
\]&lt;/span&gt; 老套路，考虑 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 比 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 更优会发生什么： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_j - (T_i + s)C_j &amp;amp;&amp;lt; f_k - (T_i + s)C_k\\
f_j - f_k &amp;amp;&amp;lt;  (T_i + s)(C_j - C_k)\\
\frac{f_j - f_k}{C_j - C_k} &amp;amp;&amp;lt; (T_i + s)
\end{aligned}
\]&lt;/span&gt; 所以 &lt;span class=&#34;math inline&#34;&gt;\(Y_i = f_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(X_i = C_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(k = T_i + s\)&lt;/span&gt;。需要注意的的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 可以等于 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，故 &lt;span class=&#34;math inline&#34;&gt;\(C_j - C_k\)&lt;/span&gt; 可能为 &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;，需要注意，而且 &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt; 的大小直接决定这个斜率是正无穷还是负无穷。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(T_i\)&lt;/span&gt; 不一定单调，所以单调队列不能用了，需要在单调栈维护的凸壳上面二分找到最优决策点。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好在这题的 &lt;span class=&#34;math inline&#34;&gt;\(C_i\)&lt;/span&gt; 是（非严格）单调的，因此可以只在凸壳的一边加点，不需要李超树或平衡树来维护。&lt;/p&gt;
&lt;p&gt;二分的细节需要特别注意，如果是 &lt;code&gt;l &amp;lt; r&lt;/code&gt; 的话 &lt;code&gt;+1&lt;/code&gt; 和 &lt;code&gt;-1&lt;/code&gt; 一定不能同时出现。凸壳里面如果只有一个点的话就要返回对应的元素。然后如果搜了半天都没搜出来一个斜率大于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 的点，说明答案就是队尾。&lt;/p&gt;
&lt;p&gt;开 &lt;code&gt;long long&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; buf[maxc], *p1 = buf, *p2 = buf;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p1 == p2 &amp;amp;&amp;amp; (p2 = (p1 = buf) + fread(buf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), p1 == p2) ? EOF : *p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;3e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll n, s, T[maxn], C[maxn], f[maxn];&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll X(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; C[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll Y(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; search(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; l = head, r = tail, mid, ret = tail;&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (l &amp;lt; r)&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        mid = (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = q[mid], j = q[mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; ((Y(j) - Y(i)) &amp;gt;= k * (X(j) - X(i))) ret = mid, r = mid;&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; l = mid + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; q[ret];&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), s = read();&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) T[i] = T[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + read(), C[i] = C[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + read();&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    q[head = tail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = search(s + T[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = f[j] + T[i] * (C[i] - C[j]) + s * (C[n] - C[j]);&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; &lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                (Y(q[tail]) - Y(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])) * (X(i) - X(q[tail])) &amp;gt;= (Y(i) - Y(q[tail])) * (X(q[tail]) - X(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))) --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[++tail] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-61&#34;&gt;&lt;a href=&#34;#cb1-61&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[n]);&lt;/span&gt;
&lt;span id=&#34;cb1-62&#34;&gt;&lt;a href=&#34;#cb1-62&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-63&#34;&gt;&lt;a href=&#34;#cb1-63&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>P3648 [APIO2014]序列分割</title>
        <link>https://oi.imyangty.com/sol-luogu-p3648/</link>
        <pubDate>Wed, 30 Jun 2021 22:11:05 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p3648/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg63.webp" alt="Featured image of post P3648 [APIO2014]序列分割" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;对一个长度为 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 的块进行 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选取一个长度大于 &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; 的块并找一个位置切开&lt;/li&gt;
&lt;li&gt;答案加上这切开的两个块的元素和的乘积&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求最大答案以及构造方案。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;首先明确一点：我们切的顺序是不会对答案产生影响的。为什么呢：简单考虑一下 &lt;span class=&#34;math inline&#34;&gt;\(\{a, b, c\}\)&lt;/span&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\{a, b, c\}\rightarrow\{a\},\{b, c\}\rightarrow\{a\}, \{b\}, \{c\}\)&lt;/span&gt;。答案为 &lt;span class=&#34;math inline&#34;&gt;\(a(b + c) + bc = ab + ac + bc\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\{a, b, c\}\rightarrow\{a, b\}, \{c\}\rightarrow \{a\},\{b\},\{c\}\)&lt;/span&gt;。答案为 &lt;span class=&#34;math inline&#34;&gt;\((a + b)c + ab = ab + ac + bc\)&lt;/span&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以设计 dp 状态为 &lt;span class=&#34;math inline&#34;&gt;\(f_{i, k}\)&lt;/span&gt; 表示前 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 个元素，切了 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 刀（最后的部分强制断开），能达到的最大价值。&lt;/p&gt;
&lt;p&gt;则转移不难： &lt;span class=&#34;math display&#34;&gt;\[
f_{i, k} = \max_{k\le j &amp;lt; i}\{f_{j, k - 1} + s(1, j) \times s(j + 1, i)\}
\]&lt;/span&gt; 化简了（把 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 那维滚动掉）就是 &lt;span class=&#34;math display&#34;&gt;\[
f_{i} = \max\{f_j + s_is_j - s_j^2\}
\]&lt;/span&gt; 这个东西长得就很斜率优化。考虑从 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 转移何时会比从 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 转移优： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_j + s_is_j - s_j^2 &amp;amp;&amp;gt; f_k + s_is_k - s_k^2\\
f_j - s_j^2 - (f_k - s_k^2) &amp;amp; &amp;gt; s_i(s_k - s_j)\\
\frac{f_j - s_j^2 - (f_k - s_k^2)}{-s_j - (-s_k)} &amp;amp;&amp;gt; s_i
\end{aligned}
\]&lt;/span&gt; 于是横纵坐标就有了：&lt;span class=&#34;math inline&#34;&gt;\(X_i = -s_i\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(Y_i = f_i - s_i^2\)&lt;/span&gt;。每次转移就相当于用一个斜率为 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 的直线去碰下凸壳。&lt;/p&gt;
&lt;p&gt;维护单调队列即可。注意 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 可能出现相同情况，如果求斜率的话要特判成负无穷。&lt;/p&gt;
&lt;p&gt;当然这题卡常而且卡精度，所以建议使用乘法，且开 &lt;code&gt;long long&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define il &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define FOR&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;lt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#define DEC&lt;/span&gt;(i,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a,&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b)&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;a;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;i&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;&amp;gt;=&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;b;&lt;span class=&#34;pp&#34;&gt; &lt;/span&gt;--i)&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxc = &lt;span class=&#34;fl&#34;&gt;1e7&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; buf[maxc], *p1 = buf, *p2 = buf;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    il &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; getchar() {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; p1 == p2 &amp;amp;&amp;amp; (p2 = (p1 = buf) + fread(buf, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, maxc, stdin), p1 == p2) ? EOF : *p1++;}&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, x = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            x |= (c == &lt;span class=&#34;ch&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;), c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            s = s * &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; x ? -s : s;&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;namespace&lt;/span&gt; fastIO;&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;1e5&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, maxk = &lt;span class=&#34;dv&#34;&gt;205&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; ll;&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;ll s[maxn], f[maxn], g[maxn], n, k;&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; fa[maxn][maxk];&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll X(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; -s[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;il ll Y(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i) {&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; g[i] - s[i] * s[i];}&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), k = read();&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n) s[i] = s[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + read();&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    FOR(t, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, k)&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        memcpy(g, f, &lt;span class=&#34;kw&#34;&gt;sizeof&lt;/span&gt; f);&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[head = tail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        FOR(i, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n)&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; (Y(q[head]) - Y(q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])) &amp;lt;= s[i] * (X(q[head]) - X(q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]))) ++head;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; &amp;amp;j = q[head];&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            fa[i][t] = j;&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i] = g[j] + s[i] * s[j] - s[j] * s[j];&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; (Y(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) - Y(q[tail])) * (X(q[tail]) - X(i)) &amp;gt;= (Y(q[tail]) - Y(i)) * (X(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) - X(q[tail]))) --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++tail] = i;&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, f[n]);&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x = fa[n][k]; k; x = fa[x][--k]) printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &amp;quot;&lt;/span&gt;, x);&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>斜率优化学习笔记</title>
        <link>https://oi.imyangty.com/note-slope-dp/</link>
        <pubDate>Thu, 22 Apr 2021 20:25:59 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/note-slope-dp/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg26.webp" alt="Featured image of post 斜率优化学习笔记" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;有些时候，我们会碰到形如 &lt;span class=&#34;math inline&#34;&gt;\(f_i = \min/\max\{f_j + g(i)h(j)\}\)&lt;/span&gt; 的状态转移方程，此时朴素的做的时间复杂度是 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 乃至 &lt;span class=&#34;math inline&#34;&gt;\(O(n^3)\)&lt;/span&gt; 的。而我们可以按照线性规划的思想，把其建模成 &lt;span class=&#34;math inline&#34;&gt;\(y = kx + b\)&lt;/span&gt; 的形式去截一个凸壳来使截距最大，达到 &lt;span class=&#34;math inline&#34;&gt;\(O(\log n)\)&lt;/span&gt; 甚至 &lt;span class=&#34;math inline&#34;&gt;\(O(1)\)&lt;/span&gt; 的转移从而使复杂度降低到 &lt;span class=&#34;math inline&#34;&gt;\(O(n\log n)\)&lt;/span&gt; 或 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这个方法就叫做斜率优化。具体的实现难度取决于题目性质。&lt;/p&gt;
&lt;p&gt;一般来说，只要转移方程中出现类似一次函数的东西，都可以考虑斜率优化。&lt;/p&gt;
&lt;h2 id=&#34;例题&#34;&gt;例题&lt;/h2&gt;
&lt;p&gt;先来看一道斜率优化的模板题。&lt;/p&gt;
&lt;h3 id=&#34;题意&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3195&#34; title=&#34;P3195 [HNOI2008]玩具装箱&#34;&gt;P3195 [HNOI2008]玩具装箱&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将一段序列 &lt;span class=&#34;math inline&#34;&gt;\(c_i\)&lt;/span&gt; 分成若干段，每一段的代价为 &lt;span class=&#34;math inline&#34;&gt;\((j-i+\sum_{k=i}^jc_k-L)^2\)&lt;/span&gt;，求最小总代价。&lt;/p&gt;
&lt;h3 id=&#34;从状态转移方程说起&#34;&gt;从状态转移方程说起&lt;/h3&gt;
&lt;p&gt;不难发现状态转移方程为（如果有困难建议先去补 dp 的基础知识）&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_i=\min_{j&amp;lt;i}\lbrace f_j+(s_i-s_j+i-j-1-L)^2\rbrace
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&#34;math inline&#34;&gt;\(s_i=\sum_{k=1}^ic_k\)&lt;/span&gt;。时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(n^2\)&lt;/span&gt;，考虑进行优化。&lt;/p&gt;
&lt;p&gt;为了简化方程，不妨采用&lt;strong&gt;参变分离&lt;/strong&gt;的思想，将只与 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有关的 &lt;span class=&#34;math inline&#34;&gt;\(s_i+i\)&lt;/span&gt; 令为 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt;，将只与 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 有关的 &lt;span class=&#34;math inline&#34;&gt;\(s_j+j+L+1\)&lt;/span&gt; 令为 &lt;span class=&#34;math inline&#34;&gt;\(b_j\)&lt;/span&gt;，现在的方程为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_i=\min_{j&amp;lt;i}\lbrace f_j+(a_i-b_j)^2\rbrace
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;理一下思路：现在我们需要找到一个最优的 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;，使得 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 达到最优，注意到此时所有关于 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的量都是确定的。&lt;/p&gt;
&lt;p&gt;去掉 min 然后化简转移方程可得：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
2a_ib_j+f_i-a_i^2=f_j+b_j^2
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;第一种理解数形结合&#34;&gt;第一种理解：数形结合&lt;/h3&gt;
&lt;p&gt;斜率优化的精髓，就是要把转移方程化为直线方程 &lt;span class=&#34;math inline&#34;&gt;\(y=kx+b\)&lt;/span&gt; 的形式然后使用数据结构维护一个凸壳。下面来实现这个过程。如果没有学过高一数学线性规划的话建议先去了解或者是直接看第二种更好理解的方式。&lt;/p&gt;
&lt;p&gt;一般地，&lt;strong&gt;我们将所有只跟 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 有关的项 &lt;span class=&#34;math inline&#34;&gt;\(f_1(j)\)&lt;/span&gt;&lt;/strong&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;strong&gt;将所有只跟 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有关的项&lt;span class=&#34;math inline&#34;&gt;\(f_2(i)\)&lt;/span&gt;&lt;/strong&gt; 看作截距 &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;，会剩下一项 &lt;span class=&#34;math inline&#34;&gt;\(f_3(i)f_4(j)\)&lt;/span&gt;，考虑将 &lt;span class=&#34;math inline&#34;&gt;\(f_3(i)\)&lt;/span&gt; 看作斜率 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_4(j)\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这里就是 &lt;span class=&#34;math inline&#34;&gt;\(f_j+b_j^2=y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(b_j=x\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;方程化作&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
2a_ix+f_i-a_i^2=y
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意到除 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 以外的与 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 有关的项都是确定的，所以现在的问题就是在坐标系中找到这个 &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; 使直线的截距最小（因为要最小化 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;）。用含 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 的形式方便理解的话就是找到过&lt;strong&gt;确定&lt;/strong&gt;点 &lt;span class=&#34;math inline&#34;&gt;\((b_j,f_j+b_j^2)\)&lt;/span&gt; 的斜率为 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 的直线的最小截距。&lt;/p&gt;
&lt;p&gt;怎么找呢？看下面的图： &lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/斜率优化1.png&#34; title=&#34;寻找最优的截距&#34; alt=&#34;寻找最优的截距&#34; /&gt;&lt;/p&gt;
&lt;p&gt;很显然，&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 点是我们的最优选择，至于 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 点，因为我们的斜率 &lt;span class=&#34;math inline&#34;&gt;\(k=2a_i\)&lt;/span&gt; 满足&lt;strong&gt;单调递增&lt;/strong&gt;，所以可以让 &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; 点滚蛋了，至于 &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; 点，如果我们当前的斜率足够大：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://yangty-pic.oss-cn-beijing.aliyuncs.com/斜率优化2.png&#34; title=&#34;现在 C 点为最优决策点&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;现在 C 点为最优决策点&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;则 &lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt; 点这辈子以后也不可能用到了，可以让他拜拜了。&lt;/p&gt;
&lt;p&gt;定义 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{slope}(A,B)\)&lt;/span&gt; 为直线 &lt;span class=&#34;math inline&#34;&gt;\(AB\)&lt;/span&gt; 的斜率&lt;/p&gt;
&lt;p&gt;我们不难发现这样的性质：为了让我们使用的决策点 &lt;span class=&#34;math inline&#34;&gt;\((b_j,f_j+b_j^2)\)&lt;/span&gt; 最优，我们需要让这些可供选择的决策点形成一个凸壳，即形式化地，设我们维护的这些点序列为 &lt;span class=&#34;math inline&#34;&gt;\(\lbrace P_i\rbrace\)&lt;/span&gt;，且要求 &lt;span class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt; 为需要的决策点，则一定要有 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{slope}(P_{i-1},P_i)&amp;lt;\operatorname{slope}(P_i,P_{i+1})\)&lt;/span&gt;，即相邻两点间的斜率要单调递增。&lt;/p&gt;
&lt;p&gt;同时如果 &lt;span class=&#34;math inline&#34;&gt;\(\operatorname{slope}(P_1,P_2)&amp;lt;k\)&lt;/span&gt;，则选择 &lt;span class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt; 一定不优（在坐标系里面画图可以感受一下），需要弹掉这些点。&lt;/p&gt;
&lt;p&gt;做完决策（即求出 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 之后），我们需要将 &lt;span class=&#34;math inline&#34;&gt;\((b_i,f_i+b_i^2)\)&lt;/span&gt; 放入这个序列的末尾，但是还是要满足凸壳的性质。因此考虑用单调队列维护这些点。&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(q[head], q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * a[i])&lt;span class=&#34;co&#34;&gt;//这里是一开始的弹点操作&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++head;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = q[head];&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    f[i] = f[j] + (a[i] - b[j]) * (a[i] - b[j]);&lt;span class=&#34;co&#34;&gt;//进行决策&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(i, q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; slope(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], q[tail]))&lt;span class=&#34;co&#34;&gt;//弹尾部的点维护凸性&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    q[++tail] = i;&lt;span class=&#34;co&#34;&gt;//加入凸壳&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;整道题的代码就是：&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;fl&#34;&gt;5e4&lt;/span&gt; + &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; a[maxn], b[maxn], f[maxn], sum[maxn], L;&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxn], head, tail;&lt;/span&gt;
&lt;span id=&#34;cb2-8&#34;&gt;&lt;a href=&#34;#cb2-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-9&#34;&gt;&lt;a href=&#34;#cb2-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; X(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; b[x]; }&lt;/span&gt;
&lt;span id=&#34;cb2-10&#34;&gt;&lt;a href=&#34;#cb2-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; Y(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; x) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; f[x] + b[x] * b[x]; }&lt;/span&gt;
&lt;span id=&#34;cb2-11&#34;&gt;&lt;a href=&#34;#cb2-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; slope(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a, &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b) { &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (Y(a) - Y(b)) / (X(a) - X(b)); }&lt;/span&gt;
&lt;span id=&#34;cb2-12&#34;&gt;&lt;a href=&#34;#cb2-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-13&#34;&gt;&lt;a href=&#34;#cb2-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read() {...}&lt;/span&gt;
&lt;span id=&#34;cb2-14&#34;&gt;&lt;a href=&#34;#cb2-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-15&#34;&gt;&lt;a href=&#34;#cb2-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main() {&lt;/span&gt;
&lt;span id=&#34;cb2-16&#34;&gt;&lt;a href=&#34;#cb2-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n = read(), L = read();&lt;/span&gt;
&lt;span id=&#34;cb2-17&#34;&gt;&lt;a href=&#34;#cb2-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb2-18&#34;&gt;&lt;a href=&#34;#cb2-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        sum[i] = sum[i - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] + read();&lt;/span&gt;
&lt;span id=&#34;cb2-19&#34;&gt;&lt;a href=&#34;#cb2-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        a[i] = sum[i] + i;&lt;/span&gt;
&lt;span id=&#34;cb2-20&#34;&gt;&lt;a href=&#34;#cb2-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        b[i] = sum[i] + i + L + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-21&#34;&gt;&lt;a href=&#34;#cb2-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-22&#34;&gt;&lt;a href=&#34;#cb2-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    b[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] = sum[&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;] + &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; + L + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;co&#34;&gt;//注意，$b_0$ 不等于 0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-23&#34;&gt;&lt;a href=&#34;#cb2-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    head = tail = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-24&#34;&gt;&lt;a href=&#34;#cb2-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; ++i) {&lt;/span&gt;
&lt;span id=&#34;cb2-25&#34;&gt;&lt;a href=&#34;#cb2-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(q[head], q[head + &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; * a[i])&lt;/span&gt;
&lt;span id=&#34;cb2-26&#34;&gt;&lt;a href=&#34;#cb2-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            ++head;&lt;/span&gt;
&lt;span id=&#34;cb2-27&#34;&gt;&lt;a href=&#34;#cb2-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j = q[head];&lt;/span&gt;
&lt;span id=&#34;cb2-28&#34;&gt;&lt;a href=&#34;#cb2-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i] = f[j] + (a[i] - b[j]) * (a[i] - b[j]);&lt;/span&gt;
&lt;span id=&#34;cb2-29&#34;&gt;&lt;a href=&#34;#cb2-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (head &amp;lt; tail &amp;amp;&amp;amp; slope(i, q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]) &amp;lt; slope(q[tail - &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;], q[tail]))&lt;/span&gt;
&lt;span id=&#34;cb2-30&#34;&gt;&lt;a href=&#34;#cb2-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            --tail;&lt;/span&gt;
&lt;span id=&#34;cb2-31&#34;&gt;&lt;a href=&#34;#cb2-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        q[++tail] = i;&lt;/span&gt;
&lt;span id=&#34;cb2-32&#34;&gt;&lt;a href=&#34;#cb2-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb2-33&#34;&gt;&lt;a href=&#34;#cb2-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%lld\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;long&lt;/span&gt;)f[n]);&lt;span class=&#34;co&#34;&gt;//观察数据范围发现这东西会爆int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb2-34&#34;&gt;&lt;a href=&#34;#cb2-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb2-35&#34;&gt;&lt;a href=&#34;#cb2-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;第二种理解方式代数&#34;&gt;第二种理解方式：代数&lt;/h3&gt;
&lt;p&gt;现在的方程是 &lt;span class=&#34;math inline&#34;&gt;\(f_i = \min\{f_j + a_i^2 - 2a_ib_j + b_j^2\}\)&lt;/span&gt;，首先肯定是将与决策点无关的项提出来，方程化为 &lt;span class=&#34;math display&#34;&gt;\[
f_i = \min\{f_j - 2a_ib_j + b_j^2\} + a_i^2
\]&lt;/span&gt; 现在需要最小化的，就是 &lt;span class=&#34;math inline&#34;&gt;\(f_j - 2a_ib_j + b_j^2\)&lt;/span&gt;。那么我们考虑一下决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 何时会比决策点 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 更优： &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
f_j - 2a_ib_j + b_j^2 &amp;amp;&amp;lt; f_k - 2a_ib_k + b_k^2\\
(f_j + b_j^2) - (f_k + b_k^2) &amp;amp;&amp;lt; 2a_i(b_j - b_k)\\
\frac{(f_j + b_j^2) - (f_k + b_k^2)}{b_j - b_k} &amp;amp;&amp;lt; 2a_i
\end{aligned}
\]&lt;/span&gt; 第二行是参变分离，把带有 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 的移到一边。第三行就是化为斜率的形式。&lt;/p&gt;
&lt;p&gt;不难发现这样子更加好找斜率和坐标的定义。&lt;span class=&#34;math inline&#34;&gt;\(f_i + b_i^2\)&lt;/span&gt; 就是纵坐标，&lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 就是横坐标，&lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 即为斜率。&lt;/p&gt;
&lt;p&gt;因此我们知道了，如果一个决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 优于 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，那么 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; 所代表的点到 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 所代表的点的连线的斜率一定小于 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt;。而我们就是要在 &lt;span class=&#34;math inline&#34;&gt;\([1, i)\)&lt;/span&gt; 这些决策点里面找到一个最优的决策点，相当于斜率刚刚好好小于等于 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt;。由于横坐标 &lt;span class=&#34;math inline&#34;&gt;\(b_i\)&lt;/span&gt; 递增，这个过程是可以在凸包上面二分实现的。&lt;/p&gt;
&lt;p&gt;然而我们注意到每次查询的斜率 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 是单调增的，所以我们可以把那些斜率小于 &lt;span class=&#34;math inline&#34;&gt;\(2a_i\)&lt;/span&gt; 的点先删掉，因为他们肯定不会最优。而且我们要维护一个斜率递增的决策点序列（就是一个凸包），所以算完了 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 并加点的时候要维护凸包后端的斜率单调性。这可以解释上面的一系列过程。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;对于形如 &lt;span class=&#34;math inline&#34;&gt;\(f_i=\min_{j&amp;lt;i}\lbrace f_j-a_id_j\rbrace\)&lt;/span&gt;，且 &lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(d_i\)&lt;/span&gt; 满足单调递增的状态转移方程，我们可以使用斜率优化将其从朴素的 &lt;span class=&#34;math inline&#34;&gt;\(O(n^2)\)&lt;/span&gt; 优化到 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;具体地，我们将其看作一条直线方程的形式：&lt;span class=&#34;math inline&#34;&gt;\(f_j=f_i+a_id_j\)&lt;/span&gt;，将 &lt;span class=&#34;math inline&#34;&gt;\(f_j\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(d_j\)&lt;/span&gt; 看作 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(a_i\)&lt;/span&gt; 看作斜率 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;，&lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 看作截距。我们就可以利用其单调性维护一个凸壳，来起到加速转移的效果。&lt;/p&gt;
&lt;p&gt;步骤一般是如下三步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弹出队首的点，找到最优决策点 &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;根据转移方程算出 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;维护凸壳的右端&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;一些需要注意的点&#34;&gt;一些需要注意的点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;有些时候需要使用 &lt;code&gt;long double&lt;/code&gt;，一部分题卡精度卡的很凶，所以建议使用乘法来判断斜率，&lt;strong&gt;当然一定要看清楚不等号的方向（负数乘过去要变号）&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;大多数时候需要 &lt;code&gt;long long&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;大多数时候，队列中一开始需要有&lt;strong&gt;初始转移点&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;在删点的时候的判定一定是基于&lt;strong&gt;两个点&lt;/strong&gt;的斜率的，&lt;strong&gt;所以队列中必须有两个或以上的元素&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;关于要维护的东西的单调性是增还是减：一定自己推式子看清楚，不要觉得是什么就是什么。&lt;/li&gt;
&lt;li&gt;有些毒瘤题的斜率或横坐标&lt;strong&gt;没有单调性&lt;/strong&gt;，这时候需要在凸壳上二分（斜率不单调）或者&lt;strong&gt;李超树&lt;/strong&gt;（都不单调）。一般推荐使用李超树，十分好理解且代码不难写。&lt;/li&gt;
&lt;li&gt;有些复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(nk)\)&lt;/span&gt; 的题（相当于做 &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; 次 &lt;span class=&#34;math inline&#34;&gt;\(O(n)\)&lt;/span&gt; 的 dp），一定要处理好滚动数组，要清楚调用的是哪个 dp 值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他例题&#34;&gt;其他例题&lt;/h2&gt;
&lt;p&gt;一般比较有代表性，篇幅问题，只给出详细的题解。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5785/&#34;&gt;P5785 [SDOI2012]任务安排&lt;/a&gt; 斜率不一定单调的题目，需要在凸壳上二分。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p4655/&#34;&gt;P4655 [CEOI2017]Building Bridges&lt;/a&gt; 斜率和横坐标都不单调，需要 cdq 分治或者李超树。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oi.imyangty.com/sol-luogu-p5017/&#34;&gt;P5017 摆渡车&lt;/a&gt; 比较经典的斜优模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;习题&#34;&gt;习题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3648&#34;&gt;P3648 [APIO2014]序列分割&lt;/a&gt; 经典卡常卡精度毒瘤题。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF311B&#34;&gt;CF311B Cats Transport&lt;/a&gt; 和摆渡车类似的经典模型。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2120&#34;&gt;P2120 [ZJOI2007]仓库建设&lt;/a&gt; 经典套路模型。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4360&#34;&gt;P4360 [CEOI2004]锯木厂选址&lt;/a&gt; 经典套路模型。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P3628&#34;&gt;P3628 [APIO2010]特别行动队&lt;/a&gt; 简单推推式子。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4072&#34;&gt;P4072 [SDOI2016]征途&lt;/a&gt; 要注意 dp 值的初始化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的几道题难度递增，都是比较好想的经典斜优题。敲完了这几道就上手斜优了。&lt;/p&gt;
&lt;p&gt;然后是一些较难的题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P4027&#34;&gt;P4027 [NOI2007] 货币兑换&lt;/a&gt; 其实也没多难，只是不单调。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1721&#34;&gt;P1721 [NOI2016] 国王饮水记&lt;/a&gt; 神仙结论题。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2305&#34;&gt;P2305 [NOI2014] 购票&lt;/a&gt; 树上转移，需要点分治。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/CF932F&#34;&gt;CF932F Escape Through Leaf&lt;/a&gt; 使用李超树的线段树合并非常好写。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>解题报告 P5017 摆渡车</title>
        <link>https://oi.imyangty.com/sol-luogu-p5017/</link>
        <pubDate>Thu, 03 Dec 2020 21:54:32 +0800</pubDate>
        
        <guid>https://oi.imyangty.com/sol-luogu-p5017/</guid>
        <description>&lt;img src="https://yangty-pic.oss-cn-beijing.aliyuncs.com/bg7.webp" alt="Featured image of post 解题报告 P5017 摆渡车" /&gt;&lt;h2 id=&#34;题意&#34;&gt;题意&lt;/h2&gt;
&lt;p&gt;有 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 名同学要乘坐摆渡车从人大附中前往人民大学，第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 位同学在第 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt; 分钟去等车。只有一辆摆渡车在工作，但摆渡车容量可以视为无限大。摆渡车从人大附中出发、 把车上的同学送到人民大学、再回到人大附中（去接其他同学），这样往返一趟总共花费 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 分钟（同学上下车时间忽略不计）。摆渡车要将所有同学都送到人民大学。 凯凯很好奇，如果他能任意安排摆渡车出发的时间，那么这些同学的等车时间之和最小为多少呢？ 注意：摆渡车回到人大附中后可以即刻出发。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;考虑以时间为维度进行 dp，即设 &lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 为第 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 秒摆渡车出发时所有同学的最小等车时间之和。答案即为 &lt;span class=&#34;math inline&#34;&gt;\(\min_{i\in [t_{\max},t_{\max}+m)}\lbrace f_i\rbrace\)&lt;/span&gt; &lt;strong&gt;注意摆渡车不一定要在 &lt;span class=&#34;math inline&#34;&gt;\(t_{\max}\)&lt;/span&gt; 分钟出发，因为可能最优方案中他还没回来&lt;/strong&gt; 预处理一下人数的前缀和 &lt;span class=&#34;math inline&#34;&gt;\(s_i\)&lt;/span&gt; 和所有人等车时间的前缀和 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt;，则不难得到转移方程：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
f_i=\min_{j\in[0,i-m]}\lbrace f_j+t_i-t_j+(i-j)\times s_j\rbrace
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(t_{\max}^2)\)&lt;/span&gt;，无法通过本题。考虑优化： 展开方程发现很像斜率优化的形式： &lt;span class=&#34;math inline&#34;&gt;\(f_j-t_j+j\times s_j=f_i-t_i+i\times s_j\)&lt;/span&gt; 而且 &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; 和 &lt;span class=&#34;math inline&#34;&gt;\(s_j\)&lt;/span&gt; 都单增，所以可以使用单调队列的斜率优化，时间复杂度为 &lt;span class=&#34;math inline&#34;&gt;\(O(t_{\max})\)&lt;/span&gt;，可以通过本题。&lt;/p&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;斜率优化如果两点横坐标相同，则 &lt;span class=&#34;math inline&#34;&gt;\(\Delta x\)&lt;/span&gt; 应该赋一个很小的数如 &lt;span class=&#34;math inline&#34;&gt;\(10^{-9}\)&lt;/span&gt;，但是一定要注意先后顺序！！！！！！！！！包括 &lt;code&gt;slope()&lt;/code&gt; 函数传参的顺序！！！！不然惨 WA，斜率会变成诸如负无穷之类的奇奇怪怪的东西&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一开始 &lt;code&gt;head=1,tail=0&lt;/code&gt;，即&lt;strong&gt;开始时队列应该为空&lt;/strong&gt;，不然会从非法状态进行转移，只有 65pts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果判定斜率涉及到两个点，则边界应为 &lt;code&gt;head&amp;lt;tail&lt;/code&gt;，不加解释&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;注意边界条件：&lt;span class=&#34;math inline&#34;&gt;\(f_i\)&lt;/span&gt; 的初始值应赋为 &lt;span class=&#34;math inline&#34;&gt;\(t_i\)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;花了三个小时在各种 debug 上，心力憔悴&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode cpp&#34;&gt;&lt;code class=&#34;sourceCode cpp&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;pp&#34;&gt;#include &lt;/span&gt;&lt;span class=&#34;im&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;at&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; maxn=&lt;span class=&#34;dv&#34;&gt;505&lt;/span&gt;,maxt=&lt;span class=&#34;fl&#34;&gt;4e6&lt;/span&gt;+&lt;span class=&#34;dv&#34;&gt;1005&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; n,m;&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s[maxt],t[maxt],f[maxt],maxtime;&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; q[maxt],head,tail;&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; X(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt;)s[j];}&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; Y(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt;)(f[j]-t[j]+j*s[j]);}&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; slope(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; (Y(b)-Y(a))/(s[a]==s[b]?&lt;span class=&#34;fl&#34;&gt;1e-9&lt;/span&gt;:X(b)-X(a));}&lt;span class=&#34;co&#34;&gt;//千万注意这里&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-13&#34;&gt;&lt;a href=&#34;#cb1-13&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-14&#34;&gt;&lt;a href=&#34;#cb1-14&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; read()&lt;/span&gt;
&lt;span id=&#34;cb1-15&#34;&gt;&lt;a href=&#34;#cb1-15&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-16&#34;&gt;&lt;a href=&#34;#cb1-16&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;char&lt;/span&gt; c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-17&#34;&gt;&lt;a href=&#34;#cb1-17&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; s = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-18&#34;&gt;&lt;a href=&#34;#cb1-18&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (!isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-19&#34;&gt;&lt;a href=&#34;#cb1-19&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-20&#34;&gt;&lt;a href=&#34;#cb1-20&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt; (isdigit(c))&lt;/span&gt;
&lt;span id=&#34;cb1-21&#34;&gt;&lt;a href=&#34;#cb1-21&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s = &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt; * s + c - &lt;span class=&#34;ch&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, c = getchar();&lt;/span&gt;
&lt;span id=&#34;cb1-22&#34;&gt;&lt;a href=&#34;#cb1-22&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;
&lt;span id=&#34;cb1-23&#34;&gt;&lt;a href=&#34;#cb1-23&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb1-24&#34;&gt;&lt;a href=&#34;#cb1-24&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-25&#34;&gt;&lt;a href=&#34;#cb1-25&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; max(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a&amp;gt;b?a:b;}&lt;/span&gt;
&lt;span id=&#34;cb1-26&#34;&gt;&lt;a href=&#34;#cb1-26&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; min(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; b){&lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; a&amp;lt;b?a:b;}&lt;/span&gt;
&lt;span id=&#34;cb1-27&#34;&gt;&lt;a href=&#34;#cb1-27&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-28&#34;&gt;&lt;a href=&#34;#cb1-28&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; main()&lt;/span&gt;
&lt;span id=&#34;cb1-29&#34;&gt;&lt;a href=&#34;#cb1-29&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;{&lt;/span&gt;
&lt;span id=&#34;cb1-30&#34;&gt;&lt;a href=&#34;#cb1-30&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    n=read(),m=read();&lt;/span&gt;
&lt;span id=&#34;cb1-31&#34;&gt;&lt;a href=&#34;#cb1-31&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,tmp;i&amp;lt;=n;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-32&#34;&gt;&lt;a href=&#34;#cb1-32&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-33&#34;&gt;&lt;a href=&#34;#cb1-33&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        tmp=read();&lt;/span&gt;
&lt;span id=&#34;cb1-34&#34;&gt;&lt;a href=&#34;#cb1-34&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ++s[tmp];&lt;/span&gt;
&lt;span id=&#34;cb1-35&#34;&gt;&lt;a href=&#34;#cb1-35&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        maxtime=max(tmp,maxtime);&lt;/span&gt;
&lt;span id=&#34;cb1-36&#34;&gt;&lt;a href=&#34;#cb1-36&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-37&#34;&gt;&lt;a href=&#34;#cb1-37&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;;i&amp;lt;maxtime+m;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-38&#34;&gt;&lt;a href=&#34;#cb1-38&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        s[i]+=s[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;],t[i]=t[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]+s[i-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;
&lt;span id=&#34;cb1-39&#34;&gt;&lt;a href=&#34;#cb1-39&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    q[head=&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-40&#34;&gt;&lt;a href=&#34;#cb1-40&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;i&amp;lt;maxtime+m;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-41&#34;&gt;&lt;a href=&#34;#cb1-41&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    {&lt;/span&gt;
&lt;span id=&#34;cb1-42&#34;&gt;&lt;a href=&#34;#cb1-42&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        f[i]=t[i];&lt;/span&gt;
&lt;span id=&#34;cb1-43&#34;&gt;&lt;a href=&#34;#cb1-43&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;double&lt;/span&gt; k=i;&lt;/span&gt;
&lt;span id=&#34;cb1-44&#34;&gt;&lt;a href=&#34;#cb1-44&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(i-m&amp;gt;=&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-45&#34;&gt;&lt;a href=&#34;#cb1-45&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        {&lt;/span&gt;
&lt;span id=&#34;cb1-46&#34;&gt;&lt;a href=&#34;#cb1-46&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt;(head&amp;lt;tail &amp;amp;&amp;amp; slope(q[tail-&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;],q[tail])&amp;gt;=slope(q[tail],i-m))&lt;/span&gt;
&lt;span id=&#34;cb1-47&#34;&gt;&lt;a href=&#34;#cb1-47&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;                --tail;&lt;/span&gt;
&lt;span id=&#34;cb1-48&#34;&gt;&lt;a href=&#34;#cb1-48&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            q[++tail]=i-m;&lt;/span&gt;
&lt;span id=&#34;cb1-49&#34;&gt;&lt;a href=&#34;#cb1-49&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        }&lt;/span&gt;
&lt;span id=&#34;cb1-50&#34;&gt;&lt;a href=&#34;#cb1-50&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;while&lt;/span&gt;(head&amp;lt;tail &amp;amp;&amp;amp; slope(q[head],q[head+&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;])&amp;lt;=k)++head;&lt;/span&gt;
&lt;span id=&#34;cb1-51&#34;&gt;&lt;a href=&#34;#cb1-51&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; j=q[head];&lt;/span&gt;
&lt;span id=&#34;cb1-52&#34;&gt;&lt;a href=&#34;#cb1-52&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(head&amp;lt;=tail)&lt;/span&gt;
&lt;span id=&#34;cb1-53&#34;&gt;&lt;a href=&#34;#cb1-53&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;            f[i]=min(f[i],f[j]+t[i]-t[j]-(i-j)*s[j]);&lt;/span&gt;
&lt;span id=&#34;cb1-54&#34;&gt;&lt;a href=&#34;#cb1-54&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb1-55&#34;&gt;&lt;a href=&#34;#cb1-55&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; ans=&lt;span class=&#34;bn&#34;&gt;0x3f3f3f3f&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-56&#34;&gt;&lt;a href=&#34;#cb1-56&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;int&lt;/span&gt; i=maxtime;i&amp;lt;maxtime+m;++i)&lt;/span&gt;
&lt;span id=&#34;cb1-57&#34;&gt;&lt;a href=&#34;#cb1-57&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;        ans=min(ans,f[i]);&lt;/span&gt;
&lt;span id=&#34;cb1-58&#34;&gt;&lt;a href=&#34;#cb1-58&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    printf(&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;%d\n&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;&lt;/span&gt;,ans);&lt;/span&gt;
&lt;span id=&#34;cb1-59&#34;&gt;&lt;a href=&#34;#cb1-59&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;
&lt;span id=&#34;cb1-60&#34;&gt;&lt;a href=&#34;#cb1-60&#34; aria-hidden=&#34;true&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        
    </channel>
</rss>
